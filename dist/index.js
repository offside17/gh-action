import { createRequire as __WEBPACK_EXTERNAL_createRequire } from "module";
/******/ var __webpack_modules__ = ({

/***/ 7351:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.issue = exports.issueCommand = void 0;
const os = __importStar(__nccwpck_require__(2037));
const utils_1 = __nccwpck_require__(5278);
/**
 * Commands
 *
 * Command Format:
 *   ::name key=value,key=value::message
 *
 * Examples:
 *   ::warning::This is the message
 *   ::set-env name=MY_VAR::some value
 */
function issueCommand(command, properties, message) {
    const cmd = new Command(command, properties, message);
    process.stdout.write(cmd.toString() + os.EOL);
}
exports.issueCommand = issueCommand;
function issue(name, message = '') {
    issueCommand(name, {}, message);
}
exports.issue = issue;
const CMD_STRING = '::';
class Command {
    constructor(command, properties, message) {
        if (!command) {
            command = 'missing.command';
        }
        this.command = command;
        this.properties = properties;
        this.message = message;
    }
    toString() {
        let cmdStr = CMD_STRING + this.command;
        if (this.properties && Object.keys(this.properties).length > 0) {
            cmdStr += ' ';
            let first = true;
            for (const key in this.properties) {
                if (this.properties.hasOwnProperty(key)) {
                    const val = this.properties[key];
                    if (val) {
                        if (first) {
                            first = false;
                        }
                        else {
                            cmdStr += ',';
                        }
                        cmdStr += `${key}=${escapeProperty(val)}`;
                    }
                }
            }
        }
        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;
        return cmdStr;
    }
}
function escapeData(s) {
    return utils_1.toCommandValue(s)
        .replace(/%/g, '%25')
        .replace(/\r/g, '%0D')
        .replace(/\n/g, '%0A');
}
function escapeProperty(s) {
    return utils_1.toCommandValue(s)
        .replace(/%/g, '%25')
        .replace(/\r/g, '%0D')
        .replace(/\n/g, '%0A')
        .replace(/:/g, '%3A')
        .replace(/,/g, '%2C');
}
//# sourceMappingURL=command.js.map

/***/ }),

/***/ 2186:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getIDToken = exports.getState = exports.saveState = exports.group = exports.endGroup = exports.startGroup = exports.info = exports.notice = exports.warning = exports.error = exports.debug = exports.isDebug = exports.setFailed = exports.setCommandEcho = exports.setOutput = exports.getBooleanInput = exports.getMultilineInput = exports.getInput = exports.addPath = exports.setSecret = exports.exportVariable = exports.ExitCode = void 0;
const command_1 = __nccwpck_require__(7351);
const file_command_1 = __nccwpck_require__(717);
const utils_1 = __nccwpck_require__(5278);
const os = __importStar(__nccwpck_require__(2037));
const path = __importStar(__nccwpck_require__(1017));
const oidc_utils_1 = __nccwpck_require__(8041);
/**
 * The code to exit an action
 */
var ExitCode;
(function (ExitCode) {
    /**
     * A code indicating that the action was successful
     */
    ExitCode[ExitCode["Success"] = 0] = "Success";
    /**
     * A code indicating that the action was a failure
     */
    ExitCode[ExitCode["Failure"] = 1] = "Failure";
})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));
//-----------------------------------------------------------------------
// Variables
//-----------------------------------------------------------------------
/**
 * Sets env variable for this action and future actions in the job
 * @param name the name of the variable to set
 * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function exportVariable(name, val) {
    const convertedVal = utils_1.toCommandValue(val);
    process.env[name] = convertedVal;
    const filePath = process.env['GITHUB_ENV'] || '';
    if (filePath) {
        return file_command_1.issueFileCommand('ENV', file_command_1.prepareKeyValueMessage(name, val));
    }
    command_1.issueCommand('set-env', { name }, convertedVal);
}
exports.exportVariable = exportVariable;
/**
 * Registers a secret which will get masked from logs
 * @param secret value of the secret
 */
function setSecret(secret) {
    command_1.issueCommand('add-mask', {}, secret);
}
exports.setSecret = setSecret;
/**
 * Prepends inputPath to the PATH (for this action and future actions)
 * @param inputPath
 */
function addPath(inputPath) {
    const filePath = process.env['GITHUB_PATH'] || '';
    if (filePath) {
        file_command_1.issueFileCommand('PATH', inputPath);
    }
    else {
        command_1.issueCommand('add-path', {}, inputPath);
    }
    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;
}
exports.addPath = addPath;
/**
 * Gets the value of an input.
 * Unless trimWhitespace is set to false in InputOptions, the value is also trimmed.
 * Returns an empty string if the value is not defined.
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   string
 */
function getInput(name, options) {
    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';
    if (options && options.required && !val) {
        throw new Error(`Input required and not supplied: ${name}`);
    }
    if (options && options.trimWhitespace === false) {
        return val;
    }
    return val.trim();
}
exports.getInput = getInput;
/**
 * Gets the values of an multiline input.  Each value is also trimmed.
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   string[]
 *
 */
function getMultilineInput(name, options) {
    const inputs = getInput(name, options)
        .split('\n')
        .filter(x => x !== '');
    if (options && options.trimWhitespace === false) {
        return inputs;
    }
    return inputs.map(input => input.trim());
}
exports.getMultilineInput = getMultilineInput;
/**
 * Gets the input value of the boolean type in the YAML 1.2 "core schema" specification.
 * Support boolean input list: `true | True | TRUE | false | False | FALSE` .
 * The return value is also in boolean type.
 * ref: https://yaml.org/spec/1.2/spec.html#id2804923
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   boolean
 */
function getBooleanInput(name, options) {
    const trueValue = ['true', 'True', 'TRUE'];
    const falseValue = ['false', 'False', 'FALSE'];
    const val = getInput(name, options);
    if (trueValue.includes(val))
        return true;
    if (falseValue.includes(val))
        return false;
    throw new TypeError(`Input does not meet YAML 1.2 "Core Schema" specification: ${name}\n` +
        `Support boolean input list: \`true | True | TRUE | false | False | FALSE\``);
}
exports.getBooleanInput = getBooleanInput;
/**
 * Sets the value of an output.
 *
 * @param     name     name of the output to set
 * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function setOutput(name, value) {
    const filePath = process.env['GITHUB_OUTPUT'] || '';
    if (filePath) {
        return file_command_1.issueFileCommand('OUTPUT', file_command_1.prepareKeyValueMessage(name, value));
    }
    process.stdout.write(os.EOL);
    command_1.issueCommand('set-output', { name }, utils_1.toCommandValue(value));
}
exports.setOutput = setOutput;
/**
 * Enables or disables the echoing of commands into stdout for the rest of the step.
 * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.
 *
 */
function setCommandEcho(enabled) {
    command_1.issue('echo', enabled ? 'on' : 'off');
}
exports.setCommandEcho = setCommandEcho;
//-----------------------------------------------------------------------
// Results
//-----------------------------------------------------------------------
/**
 * Sets the action status to failed.
 * When the action exits it will be with an exit code of 1
 * @param message add error issue message
 */
function setFailed(message) {
    process.exitCode = ExitCode.Failure;
    error(message);
}
exports.setFailed = setFailed;
//-----------------------------------------------------------------------
// Logging Commands
//-----------------------------------------------------------------------
/**
 * Gets whether Actions Step Debug is on or not
 */
function isDebug() {
    return process.env['RUNNER_DEBUG'] === '1';
}
exports.isDebug = isDebug;
/**
 * Writes debug message to user log
 * @param message debug message
 */
function debug(message) {
    command_1.issueCommand('debug', {}, message);
}
exports.debug = debug;
/**
 * Adds an error issue
 * @param message error issue message. Errors will be converted to string via toString()
 * @param properties optional properties to add to the annotation.
 */
function error(message, properties = {}) {
    command_1.issueCommand('error', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
}
exports.error = error;
/**
 * Adds a warning issue
 * @param message warning issue message. Errors will be converted to string via toString()
 * @param properties optional properties to add to the annotation.
 */
function warning(message, properties = {}) {
    command_1.issueCommand('warning', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
}
exports.warning = warning;
/**
 * Adds a notice issue
 * @param message notice issue message. Errors will be converted to string via toString()
 * @param properties optional properties to add to the annotation.
 */
function notice(message, properties = {}) {
    command_1.issueCommand('notice', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
}
exports.notice = notice;
/**
 * Writes info to log with console.log.
 * @param message info message
 */
function info(message) {
    process.stdout.write(message + os.EOL);
}
exports.info = info;
/**
 * Begin an output group.
 *
 * Output until the next `groupEnd` will be foldable in this group
 *
 * @param name The name of the output group
 */
function startGroup(name) {
    command_1.issue('group', name);
}
exports.startGroup = startGroup;
/**
 * End an output group.
 */
function endGroup() {
    command_1.issue('endgroup');
}
exports.endGroup = endGroup;
/**
 * Wrap an asynchronous function call in a group.
 *
 * Returns the same type as the function itself.
 *
 * @param name The name of the group
 * @param fn The function to wrap in the group
 */
function group(name, fn) {
    return __awaiter(this, void 0, void 0, function* () {
        startGroup(name);
        let result;
        try {
            result = yield fn();
        }
        finally {
            endGroup();
        }
        return result;
    });
}
exports.group = group;
//-----------------------------------------------------------------------
// Wrapper action state
//-----------------------------------------------------------------------
/**
 * Saves state for current action, the state can only be retrieved by this action's post job execution.
 *
 * @param     name     name of the state to store
 * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function saveState(name, value) {
    const filePath = process.env['GITHUB_STATE'] || '';
    if (filePath) {
        return file_command_1.issueFileCommand('STATE', file_command_1.prepareKeyValueMessage(name, value));
    }
    command_1.issueCommand('save-state', { name }, utils_1.toCommandValue(value));
}
exports.saveState = saveState;
/**
 * Gets the value of an state set by this action's main execution.
 *
 * @param     name     name of the state to get
 * @returns   string
 */
function getState(name) {
    return process.env[`STATE_${name}`] || '';
}
exports.getState = getState;
function getIDToken(aud) {
    return __awaiter(this, void 0, void 0, function* () {
        return yield oidc_utils_1.OidcClient.getIDToken(aud);
    });
}
exports.getIDToken = getIDToken;
/**
 * Summary exports
 */
var summary_1 = __nccwpck_require__(1327);
Object.defineProperty(exports, "summary", ({ enumerable: true, get: function () { return summary_1.summary; } }));
/**
 * @deprecated use core.summary
 */
var summary_2 = __nccwpck_require__(1327);
Object.defineProperty(exports, "markdownSummary", ({ enumerable: true, get: function () { return summary_2.markdownSummary; } }));
/**
 * Path exports
 */
var path_utils_1 = __nccwpck_require__(2981);
Object.defineProperty(exports, "toPosixPath", ({ enumerable: true, get: function () { return path_utils_1.toPosixPath; } }));
Object.defineProperty(exports, "toWin32Path", ({ enumerable: true, get: function () { return path_utils_1.toWin32Path; } }));
Object.defineProperty(exports, "toPlatformPath", ({ enumerable: true, get: function () { return path_utils_1.toPlatformPath; } }));
//# sourceMappingURL=core.js.map

/***/ }),

/***/ 717:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {


// For internal use, subject to change.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.prepareKeyValueMessage = exports.issueFileCommand = void 0;
// We use any as a valid input type
/* eslint-disable @typescript-eslint/no-explicit-any */
const fs = __importStar(__nccwpck_require__(7147));
const os = __importStar(__nccwpck_require__(2037));
const uuid_1 = __nccwpck_require__(5840);
const utils_1 = __nccwpck_require__(5278);
function issueFileCommand(command, message) {
    const filePath = process.env[`GITHUB_${command}`];
    if (!filePath) {
        throw new Error(`Unable to find environment variable for file command ${command}`);
    }
    if (!fs.existsSync(filePath)) {
        throw new Error(`Missing file at path: ${filePath}`);
    }
    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {
        encoding: 'utf8'
    });
}
exports.issueFileCommand = issueFileCommand;
function prepareKeyValueMessage(key, value) {
    const delimiter = `ghadelimiter_${uuid_1.v4()}`;
    const convertedValue = utils_1.toCommandValue(value);
    // These should realistically never happen, but just in case someone finds a
    // way to exploit uuid generation let's not allow keys or values that contain
    // the delimiter.
    if (key.includes(delimiter)) {
        throw new Error(`Unexpected input: name should not contain the delimiter "${delimiter}"`);
    }
    if (convertedValue.includes(delimiter)) {
        throw new Error(`Unexpected input: value should not contain the delimiter "${delimiter}"`);
    }
    return `${key}<<${delimiter}${os.EOL}${convertedValue}${os.EOL}${delimiter}`;
}
exports.prepareKeyValueMessage = prepareKeyValueMessage;
//# sourceMappingURL=file-command.js.map

/***/ }),

/***/ 8041:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {


var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OidcClient = void 0;
const http_client_1 = __nccwpck_require__(6255);
const auth_1 = __nccwpck_require__(5526);
const core_1 = __nccwpck_require__(2186);
class OidcClient {
    static createHttpClient(allowRetry = true, maxRetry = 10) {
        const requestOptions = {
            allowRetries: allowRetry,
            maxRetries: maxRetry
        };
        return new http_client_1.HttpClient('actions/oidc-client', [new auth_1.BearerCredentialHandler(OidcClient.getRequestToken())], requestOptions);
    }
    static getRequestToken() {
        const token = process.env['ACTIONS_ID_TOKEN_REQUEST_TOKEN'];
        if (!token) {
            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable');
        }
        return token;
    }
    static getIDTokenUrl() {
        const runtimeUrl = process.env['ACTIONS_ID_TOKEN_REQUEST_URL'];
        if (!runtimeUrl) {
            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable');
        }
        return runtimeUrl;
    }
    static getCall(id_token_url) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const httpclient = OidcClient.createHttpClient();
            const res = yield httpclient
                .getJson(id_token_url)
                .catch(error => {
                throw new Error(`Failed to get ID Token. \n 
        Error Code : ${error.statusCode}\n 
        Error Message: ${error.result.message}`);
            });
            const id_token = (_a = res.result) === null || _a === void 0 ? void 0 : _a.value;
            if (!id_token) {
                throw new Error('Response json body do not have ID Token field');
            }
            return id_token;
        });
    }
    static getIDToken(audience) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                // New ID Token is requested from action service
                let id_token_url = OidcClient.getIDTokenUrl();
                if (audience) {
                    const encodedAudience = encodeURIComponent(audience);
                    id_token_url = `${id_token_url}&audience=${encodedAudience}`;
                }
                core_1.debug(`ID token url is ${id_token_url}`);
                const id_token = yield OidcClient.getCall(id_token_url);
                core_1.setSecret(id_token);
                return id_token;
            }
            catch (error) {
                throw new Error(`Error message: ${error.message}`);
            }
        });
    }
}
exports.OidcClient = OidcClient;
//# sourceMappingURL=oidc-utils.js.map

/***/ }),

/***/ 2981:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toPlatformPath = exports.toWin32Path = exports.toPosixPath = void 0;
const path = __importStar(__nccwpck_require__(1017));
/**
 * toPosixPath converts the given path to the posix form. On Windows, \\ will be
 * replaced with /.
 *
 * @param pth. Path to transform.
 * @return string Posix path.
 */
function toPosixPath(pth) {
    return pth.replace(/[\\]/g, '/');
}
exports.toPosixPath = toPosixPath;
/**
 * toWin32Path converts the given path to the win32 form. On Linux, / will be
 * replaced with \\.
 *
 * @param pth. Path to transform.
 * @return string Win32 path.
 */
function toWin32Path(pth) {
    return pth.replace(/[/]/g, '\\');
}
exports.toWin32Path = toWin32Path;
/**
 * toPlatformPath converts the given path to a platform-specific path. It does
 * this by replacing instances of / and \ with the platform-specific path
 * separator.
 *
 * @param pth The path to platformize.
 * @return string The platform-specific path.
 */
function toPlatformPath(pth) {
    return pth.replace(/[/\\]/g, path.sep);
}
exports.toPlatformPath = toPlatformPath;
//# sourceMappingURL=path-utils.js.map

/***/ }),

/***/ 1327:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {


var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.summary = exports.markdownSummary = exports.SUMMARY_DOCS_URL = exports.SUMMARY_ENV_VAR = void 0;
const os_1 = __nccwpck_require__(2037);
const fs_1 = __nccwpck_require__(7147);
const { access, appendFile, writeFile } = fs_1.promises;
exports.SUMMARY_ENV_VAR = 'GITHUB_STEP_SUMMARY';
exports.SUMMARY_DOCS_URL = 'https://docs.github.com/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary';
class Summary {
    constructor() {
        this._buffer = '';
    }
    /**
     * Finds the summary file path from the environment, rejects if env var is not found or file does not exist
     * Also checks r/w permissions.
     *
     * @returns step summary file path
     */
    filePath() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this._filePath) {
                return this._filePath;
            }
            const pathFromEnv = process.env[exports.SUMMARY_ENV_VAR];
            if (!pathFromEnv) {
                throw new Error(`Unable to find environment variable for $${exports.SUMMARY_ENV_VAR}. Check if your runtime environment supports job summaries.`);
            }
            try {
                yield access(pathFromEnv, fs_1.constants.R_OK | fs_1.constants.W_OK);
            }
            catch (_a) {
                throw new Error(`Unable to access summary file: '${pathFromEnv}'. Check if the file has correct read/write permissions.`);
            }
            this._filePath = pathFromEnv;
            return this._filePath;
        });
    }
    /**
     * Wraps content in an HTML tag, adding any HTML attributes
     *
     * @param {string} tag HTML tag to wrap
     * @param {string | null} content content within the tag
     * @param {[attribute: string]: string} attrs key-value list of HTML attributes to add
     *
     * @returns {string} content wrapped in HTML element
     */
    wrap(tag, content, attrs = {}) {
        const htmlAttrs = Object.entries(attrs)
            .map(([key, value]) => ` ${key}="${value}"`)
            .join('');
        if (!content) {
            return `<${tag}${htmlAttrs}>`;
        }
        return `<${tag}${htmlAttrs}>${content}</${tag}>`;
    }
    /**
     * Writes text in the buffer to the summary buffer file and empties buffer. Will append by default.
     *
     * @param {SummaryWriteOptions} [options] (optional) options for write operation
     *
     * @returns {Promise<Summary>} summary instance
     */
    write(options) {
        return __awaiter(this, void 0, void 0, function* () {
            const overwrite = !!(options === null || options === void 0 ? void 0 : options.overwrite);
            const filePath = yield this.filePath();
            const writeFunc = overwrite ? writeFile : appendFile;
            yield writeFunc(filePath, this._buffer, { encoding: 'utf8' });
            return this.emptyBuffer();
        });
    }
    /**
     * Clears the summary buffer and wipes the summary file
     *
     * @returns {Summary} summary instance
     */
    clear() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.emptyBuffer().write({ overwrite: true });
        });
    }
    /**
     * Returns the current summary buffer as a string
     *
     * @returns {string} string of summary buffer
     */
    stringify() {
        return this._buffer;
    }
    /**
     * If the summary buffer is empty
     *
     * @returns {boolen} true if the buffer is empty
     */
    isEmptyBuffer() {
        return this._buffer.length === 0;
    }
    /**
     * Resets the summary buffer without writing to summary file
     *
     * @returns {Summary} summary instance
     */
    emptyBuffer() {
        this._buffer = '';
        return this;
    }
    /**
     * Adds raw text to the summary buffer
     *
     * @param {string} text content to add
     * @param {boolean} [addEOL=false] (optional) append an EOL to the raw text (default: false)
     *
     * @returns {Summary} summary instance
     */
    addRaw(text, addEOL = false) {
        this._buffer += text;
        return addEOL ? this.addEOL() : this;
    }
    /**
     * Adds the operating system-specific end-of-line marker to the buffer
     *
     * @returns {Summary} summary instance
     */
    addEOL() {
        return this.addRaw(os_1.EOL);
    }
    /**
     * Adds an HTML codeblock to the summary buffer
     *
     * @param {string} code content to render within fenced code block
     * @param {string} lang (optional) language to syntax highlight code
     *
     * @returns {Summary} summary instance
     */
    addCodeBlock(code, lang) {
        const attrs = Object.assign({}, (lang && { lang }));
        const element = this.wrap('pre', this.wrap('code', code), attrs);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML list to the summary buffer
     *
     * @param {string[]} items list of items to render
     * @param {boolean} [ordered=false] (optional) if the rendered list should be ordered or not (default: false)
     *
     * @returns {Summary} summary instance
     */
    addList(items, ordered = false) {
        const tag = ordered ? 'ol' : 'ul';
        const listItems = items.map(item => this.wrap('li', item)).join('');
        const element = this.wrap(tag, listItems);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML table to the summary buffer
     *
     * @param {SummaryTableCell[]} rows table rows
     *
     * @returns {Summary} summary instance
     */
    addTable(rows) {
        const tableBody = rows
            .map(row => {
            const cells = row
                .map(cell => {
                if (typeof cell === 'string') {
                    return this.wrap('td', cell);
                }
                const { header, data, colspan, rowspan } = cell;
                const tag = header ? 'th' : 'td';
                const attrs = Object.assign(Object.assign({}, (colspan && { colspan })), (rowspan && { rowspan }));
                return this.wrap(tag, data, attrs);
            })
                .join('');
            return this.wrap('tr', cells);
        })
            .join('');
        const element = this.wrap('table', tableBody);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds a collapsable HTML details element to the summary buffer
     *
     * @param {string} label text for the closed state
     * @param {string} content collapsable content
     *
     * @returns {Summary} summary instance
     */
    addDetails(label, content) {
        const element = this.wrap('details', this.wrap('summary', label) + content);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML image tag to the summary buffer
     *
     * @param {string} src path to the image you to embed
     * @param {string} alt text description of the image
     * @param {SummaryImageOptions} options (optional) addition image attributes
     *
     * @returns {Summary} summary instance
     */
    addImage(src, alt, options) {
        const { width, height } = options || {};
        const attrs = Object.assign(Object.assign({}, (width && { width })), (height && { height }));
        const element = this.wrap('img', null, Object.assign({ src, alt }, attrs));
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML section heading element
     *
     * @param {string} text heading text
     * @param {number | string} [level=1] (optional) the heading level, default: 1
     *
     * @returns {Summary} summary instance
     */
    addHeading(text, level) {
        const tag = `h${level}`;
        const allowedTag = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].includes(tag)
            ? tag
            : 'h1';
        const element = this.wrap(allowedTag, text);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML thematic break (<hr>) to the summary buffer
     *
     * @returns {Summary} summary instance
     */
    addSeparator() {
        const element = this.wrap('hr', null);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML line break (<br>) to the summary buffer
     *
     * @returns {Summary} summary instance
     */
    addBreak() {
        const element = this.wrap('br', null);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML blockquote to the summary buffer
     *
     * @param {string} text quote text
     * @param {string} cite (optional) citation url
     *
     * @returns {Summary} summary instance
     */
    addQuote(text, cite) {
        const attrs = Object.assign({}, (cite && { cite }));
        const element = this.wrap('blockquote', text, attrs);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML anchor tag to the summary buffer
     *
     * @param {string} text link text/content
     * @param {string} href hyperlink
     *
     * @returns {Summary} summary instance
     */
    addLink(text, href) {
        const element = this.wrap('a', text, { href });
        return this.addRaw(element).addEOL();
    }
}
const _summary = new Summary();
/**
 * @deprecated use `core.summary`
 */
exports.markdownSummary = _summary;
exports.summary = _summary;
//# sourceMappingURL=summary.js.map

/***/ }),

/***/ 5278:
/***/ ((__unused_webpack_module, exports) => {


// We use any as a valid input type
/* eslint-disable @typescript-eslint/no-explicit-any */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toCommandProperties = exports.toCommandValue = void 0;
/**
 * Sanitizes an input into a string so it can be passed into issueCommand safely
 * @param input input to sanitize into a string
 */
function toCommandValue(input) {
    if (input === null || input === undefined) {
        return '';
    }
    else if (typeof input === 'string' || input instanceof String) {
        return input;
    }
    return JSON.stringify(input);
}
exports.toCommandValue = toCommandValue;
/**
 *
 * @param annotationProperties
 * @returns The command properties to send with the actual annotation command
 * See IssueCommandProperties: https://github.com/actions/runner/blob/main/src/Runner.Worker/ActionCommandManager.cs#L646
 */
function toCommandProperties(annotationProperties) {
    if (!Object.keys(annotationProperties).length) {
        return {};
    }
    return {
        title: annotationProperties.title,
        file: annotationProperties.file,
        line: annotationProperties.startLine,
        endLine: annotationProperties.endLine,
        col: annotationProperties.startColumn,
        endColumn: annotationProperties.endColumn
    };
}
exports.toCommandProperties = toCommandProperties;
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ 5526:
/***/ (function(__unused_webpack_module, exports) {


var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PersonalAccessTokenCredentialHandler = exports.BearerCredentialHandler = exports.BasicCredentialHandler = void 0;
class BasicCredentialHandler {
    constructor(username, password) {
        this.username = username;
        this.password = password;
    }
    prepareRequest(options) {
        if (!options.headers) {
            throw Error('The request has no headers');
        }
        options.headers['Authorization'] = `Basic ${Buffer.from(`${this.username}:${this.password}`).toString('base64')}`;
    }
    // This handler cannot handle 401
    canHandleAuthentication() {
        return false;
    }
    handleAuthentication() {
        return __awaiter(this, void 0, void 0, function* () {
            throw new Error('not implemented');
        });
    }
}
exports.BasicCredentialHandler = BasicCredentialHandler;
class BearerCredentialHandler {
    constructor(token) {
        this.token = token;
    }
    // currently implements pre-authorization
    // TODO: support preAuth = false where it hooks on 401
    prepareRequest(options) {
        if (!options.headers) {
            throw Error('The request has no headers');
        }
        options.headers['Authorization'] = `Bearer ${this.token}`;
    }
    // This handler cannot handle 401
    canHandleAuthentication() {
        return false;
    }
    handleAuthentication() {
        return __awaiter(this, void 0, void 0, function* () {
            throw new Error('not implemented');
        });
    }
}
exports.BearerCredentialHandler = BearerCredentialHandler;
class PersonalAccessTokenCredentialHandler {
    constructor(token) {
        this.token = token;
    }
    // currently implements pre-authorization
    // TODO: support preAuth = false where it hooks on 401
    prepareRequest(options) {
        if (!options.headers) {
            throw Error('The request has no headers');
        }
        options.headers['Authorization'] = `Basic ${Buffer.from(`PAT:${this.token}`).toString('base64')}`;
    }
    // This handler cannot handle 401
    canHandleAuthentication() {
        return false;
    }
    handleAuthentication() {
        return __awaiter(this, void 0, void 0, function* () {
            throw new Error('not implemented');
        });
    }
}
exports.PersonalAccessTokenCredentialHandler = PersonalAccessTokenCredentialHandler;
//# sourceMappingURL=auth.js.map

/***/ }),

/***/ 6255:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {


/* eslint-disable @typescript-eslint/no-explicit-any */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HttpClient = exports.isHttps = exports.HttpClientResponse = exports.HttpClientError = exports.getProxyUrl = exports.MediaTypes = exports.Headers = exports.HttpCodes = void 0;
const http = __importStar(__nccwpck_require__(3685));
const https = __importStar(__nccwpck_require__(5687));
const pm = __importStar(__nccwpck_require__(9835));
const tunnel = __importStar(__nccwpck_require__(4294));
var HttpCodes;
(function (HttpCodes) {
    HttpCodes[HttpCodes["OK"] = 200] = "OK";
    HttpCodes[HttpCodes["MultipleChoices"] = 300] = "MultipleChoices";
    HttpCodes[HttpCodes["MovedPermanently"] = 301] = "MovedPermanently";
    HttpCodes[HttpCodes["ResourceMoved"] = 302] = "ResourceMoved";
    HttpCodes[HttpCodes["SeeOther"] = 303] = "SeeOther";
    HttpCodes[HttpCodes["NotModified"] = 304] = "NotModified";
    HttpCodes[HttpCodes["UseProxy"] = 305] = "UseProxy";
    HttpCodes[HttpCodes["SwitchProxy"] = 306] = "SwitchProxy";
    HttpCodes[HttpCodes["TemporaryRedirect"] = 307] = "TemporaryRedirect";
    HttpCodes[HttpCodes["PermanentRedirect"] = 308] = "PermanentRedirect";
    HttpCodes[HttpCodes["BadRequest"] = 400] = "BadRequest";
    HttpCodes[HttpCodes["Unauthorized"] = 401] = "Unauthorized";
    HttpCodes[HttpCodes["PaymentRequired"] = 402] = "PaymentRequired";
    HttpCodes[HttpCodes["Forbidden"] = 403] = "Forbidden";
    HttpCodes[HttpCodes["NotFound"] = 404] = "NotFound";
    HttpCodes[HttpCodes["MethodNotAllowed"] = 405] = "MethodNotAllowed";
    HttpCodes[HttpCodes["NotAcceptable"] = 406] = "NotAcceptable";
    HttpCodes[HttpCodes["ProxyAuthenticationRequired"] = 407] = "ProxyAuthenticationRequired";
    HttpCodes[HttpCodes["RequestTimeout"] = 408] = "RequestTimeout";
    HttpCodes[HttpCodes["Conflict"] = 409] = "Conflict";
    HttpCodes[HttpCodes["Gone"] = 410] = "Gone";
    HttpCodes[HttpCodes["TooManyRequests"] = 429] = "TooManyRequests";
    HttpCodes[HttpCodes["InternalServerError"] = 500] = "InternalServerError";
    HttpCodes[HttpCodes["NotImplemented"] = 501] = "NotImplemented";
    HttpCodes[HttpCodes["BadGateway"] = 502] = "BadGateway";
    HttpCodes[HttpCodes["ServiceUnavailable"] = 503] = "ServiceUnavailable";
    HttpCodes[HttpCodes["GatewayTimeout"] = 504] = "GatewayTimeout";
})(HttpCodes = exports.HttpCodes || (exports.HttpCodes = {}));
var Headers;
(function (Headers) {
    Headers["Accept"] = "accept";
    Headers["ContentType"] = "content-type";
})(Headers = exports.Headers || (exports.Headers = {}));
var MediaTypes;
(function (MediaTypes) {
    MediaTypes["ApplicationJson"] = "application/json";
})(MediaTypes = exports.MediaTypes || (exports.MediaTypes = {}));
/**
 * Returns the proxy URL, depending upon the supplied url and proxy environment variables.
 * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com
 */
function getProxyUrl(serverUrl) {
    const proxyUrl = pm.getProxyUrl(new URL(serverUrl));
    return proxyUrl ? proxyUrl.href : '';
}
exports.getProxyUrl = getProxyUrl;
const HttpRedirectCodes = [
    HttpCodes.MovedPermanently,
    HttpCodes.ResourceMoved,
    HttpCodes.SeeOther,
    HttpCodes.TemporaryRedirect,
    HttpCodes.PermanentRedirect
];
const HttpResponseRetryCodes = [
    HttpCodes.BadGateway,
    HttpCodes.ServiceUnavailable,
    HttpCodes.GatewayTimeout
];
const RetryableHttpVerbs = ['OPTIONS', 'GET', 'DELETE', 'HEAD'];
const ExponentialBackoffCeiling = 10;
const ExponentialBackoffTimeSlice = 5;
class HttpClientError extends Error {
    constructor(message, statusCode) {
        super(message);
        this.name = 'HttpClientError';
        this.statusCode = statusCode;
        Object.setPrototypeOf(this, HttpClientError.prototype);
    }
}
exports.HttpClientError = HttpClientError;
class HttpClientResponse {
    constructor(message) {
        this.message = message;
    }
    readBody() {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {
                let output = Buffer.alloc(0);
                this.message.on('data', (chunk) => {
                    output = Buffer.concat([output, chunk]);
                });
                this.message.on('end', () => {
                    resolve(output.toString());
                });
            }));
        });
    }
}
exports.HttpClientResponse = HttpClientResponse;
function isHttps(requestUrl) {
    const parsedUrl = new URL(requestUrl);
    return parsedUrl.protocol === 'https:';
}
exports.isHttps = isHttps;
class HttpClient {
    constructor(userAgent, handlers, requestOptions) {
        this._ignoreSslError = false;
        this._allowRedirects = true;
        this._allowRedirectDowngrade = false;
        this._maxRedirects = 50;
        this._allowRetries = false;
        this._maxRetries = 1;
        this._keepAlive = false;
        this._disposed = false;
        this.userAgent = userAgent;
        this.handlers = handlers || [];
        this.requestOptions = requestOptions;
        if (requestOptions) {
            if (requestOptions.ignoreSslError != null) {
                this._ignoreSslError = requestOptions.ignoreSslError;
            }
            this._socketTimeout = requestOptions.socketTimeout;
            if (requestOptions.allowRedirects != null) {
                this._allowRedirects = requestOptions.allowRedirects;
            }
            if (requestOptions.allowRedirectDowngrade != null) {
                this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;
            }
            if (requestOptions.maxRedirects != null) {
                this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);
            }
            if (requestOptions.keepAlive != null) {
                this._keepAlive = requestOptions.keepAlive;
            }
            if (requestOptions.allowRetries != null) {
                this._allowRetries = requestOptions.allowRetries;
            }
            if (requestOptions.maxRetries != null) {
                this._maxRetries = requestOptions.maxRetries;
            }
        }
    }
    options(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('OPTIONS', requestUrl, null, additionalHeaders || {});
        });
    }
    get(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('GET', requestUrl, null, additionalHeaders || {});
        });
    }
    del(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('DELETE', requestUrl, null, additionalHeaders || {});
        });
    }
    post(requestUrl, data, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('POST', requestUrl, data, additionalHeaders || {});
        });
    }
    patch(requestUrl, data, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('PATCH', requestUrl, data, additionalHeaders || {});
        });
    }
    put(requestUrl, data, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('PUT', requestUrl, data, additionalHeaders || {});
        });
    }
    head(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('HEAD', requestUrl, null, additionalHeaders || {});
        });
    }
    sendStream(verb, requestUrl, stream, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request(verb, requestUrl, stream, additionalHeaders);
        });
    }
    /**
     * Gets a typed object from an endpoint
     * Be aware that not found returns a null.  Other errors (4xx, 5xx) reject the promise
     */
    getJson(requestUrl, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
            const res = yield this.get(requestUrl, additionalHeaders);
            return this._processResponse(res, this.requestOptions);
        });
    }
    postJson(requestUrl, obj, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = JSON.stringify(obj, null, 2);
            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
            const res = yield this.post(requestUrl, data, additionalHeaders);
            return this._processResponse(res, this.requestOptions);
        });
    }
    putJson(requestUrl, obj, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = JSON.stringify(obj, null, 2);
            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
            const res = yield this.put(requestUrl, data, additionalHeaders);
            return this._processResponse(res, this.requestOptions);
        });
    }
    patchJson(requestUrl, obj, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = JSON.stringify(obj, null, 2);
            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
            const res = yield this.patch(requestUrl, data, additionalHeaders);
            return this._processResponse(res, this.requestOptions);
        });
    }
    /**
     * Makes a raw http request.
     * All other methods such as get, post, patch, and request ultimately call this.
     * Prefer get, del, post and patch
     */
    request(verb, requestUrl, data, headers) {
        return __awaiter(this, void 0, void 0, function* () {
            if (this._disposed) {
                throw new Error('Client has already been disposed.');
            }
            const parsedUrl = new URL(requestUrl);
            let info = this._prepareRequest(verb, parsedUrl, headers);
            // Only perform retries on reads since writes may not be idempotent.
            const maxTries = this._allowRetries && RetryableHttpVerbs.includes(verb)
                ? this._maxRetries + 1
                : 1;
            let numTries = 0;
            let response;
            do {
                response = yield this.requestRaw(info, data);
                // Check if it's an authentication challenge
                if (response &&
                    response.message &&
                    response.message.statusCode === HttpCodes.Unauthorized) {
                    let authenticationHandler;
                    for (const handler of this.handlers) {
                        if (handler.canHandleAuthentication(response)) {
                            authenticationHandler = handler;
                            break;
                        }
                    }
                    if (authenticationHandler) {
                        return authenticationHandler.handleAuthentication(this, info, data);
                    }
                    else {
                        // We have received an unauthorized response but have no handlers to handle it.
                        // Let the response return to the caller.
                        return response;
                    }
                }
                let redirectsRemaining = this._maxRedirects;
                while (response.message.statusCode &&
                    HttpRedirectCodes.includes(response.message.statusCode) &&
                    this._allowRedirects &&
                    redirectsRemaining > 0) {
                    const redirectUrl = response.message.headers['location'];
                    if (!redirectUrl) {
                        // if there's no location to redirect to, we won't
                        break;
                    }
                    const parsedRedirectUrl = new URL(redirectUrl);
                    if (parsedUrl.protocol === 'https:' &&
                        parsedUrl.protocol !== parsedRedirectUrl.protocol &&
                        !this._allowRedirectDowngrade) {
                        throw new Error('Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.');
                    }
                    // we need to finish reading the response before reassigning response
                    // which will leak the open socket.
                    yield response.readBody();
                    // strip authorization header if redirected to a different hostname
                    if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {
                        for (const header in headers) {
                            // header names are case insensitive
                            if (header.toLowerCase() === 'authorization') {
                                delete headers[header];
                            }
                        }
                    }
                    // let's make the request with the new redirectUrl
                    info = this._prepareRequest(verb, parsedRedirectUrl, headers);
                    response = yield this.requestRaw(info, data);
                    redirectsRemaining--;
                }
                if (!response.message.statusCode ||
                    !HttpResponseRetryCodes.includes(response.message.statusCode)) {
                    // If not a retry code, return immediately instead of retrying
                    return response;
                }
                numTries += 1;
                if (numTries < maxTries) {
                    yield response.readBody();
                    yield this._performExponentialBackoff(numTries);
                }
            } while (numTries < maxTries);
            return response;
        });
    }
    /**
     * Needs to be called if keepAlive is set to true in request options.
     */
    dispose() {
        if (this._agent) {
            this._agent.destroy();
        }
        this._disposed = true;
    }
    /**
     * Raw request.
     * @param info
     * @param data
     */
    requestRaw(info, data) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                function callbackForResult(err, res) {
                    if (err) {
                        reject(err);
                    }
                    else if (!res) {
                        // If `err` is not passed, then `res` must be passed.
                        reject(new Error('Unknown error'));
                    }
                    else {
                        resolve(res);
                    }
                }
                this.requestRawWithCallback(info, data, callbackForResult);
            });
        });
    }
    /**
     * Raw request with callback.
     * @param info
     * @param data
     * @param onResult
     */
    requestRawWithCallback(info, data, onResult) {
        if (typeof data === 'string') {
            if (!info.options.headers) {
                info.options.headers = {};
            }
            info.options.headers['Content-Length'] = Buffer.byteLength(data, 'utf8');
        }
        let callbackCalled = false;
        function handleResult(err, res) {
            if (!callbackCalled) {
                callbackCalled = true;
                onResult(err, res);
            }
        }
        const req = info.httpModule.request(info.options, (msg) => {
            const res = new HttpClientResponse(msg);
            handleResult(undefined, res);
        });
        let socket;
        req.on('socket', sock => {
            socket = sock;
        });
        // If we ever get disconnected, we want the socket to timeout eventually
        req.setTimeout(this._socketTimeout || 3 * 60000, () => {
            if (socket) {
                socket.end();
            }
            handleResult(new Error(`Request timeout: ${info.options.path}`));
        });
        req.on('error', function (err) {
            // err has statusCode property
            // res should have headers
            handleResult(err);
        });
        if (data && typeof data === 'string') {
            req.write(data, 'utf8');
        }
        if (data && typeof data !== 'string') {
            data.on('close', function () {
                req.end();
            });
            data.pipe(req);
        }
        else {
            req.end();
        }
    }
    /**
     * Gets an http agent. This function is useful when you need an http agent that handles
     * routing through a proxy server - depending upon the url and proxy environment variables.
     * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com
     */
    getAgent(serverUrl) {
        const parsedUrl = new URL(serverUrl);
        return this._getAgent(parsedUrl);
    }
    _prepareRequest(method, requestUrl, headers) {
        const info = {};
        info.parsedUrl = requestUrl;
        const usingSsl = info.parsedUrl.protocol === 'https:';
        info.httpModule = usingSsl ? https : http;
        const defaultPort = usingSsl ? 443 : 80;
        info.options = {};
        info.options.host = info.parsedUrl.hostname;
        info.options.port = info.parsedUrl.port
            ? parseInt(info.parsedUrl.port)
            : defaultPort;
        info.options.path =
            (info.parsedUrl.pathname || '') + (info.parsedUrl.search || '');
        info.options.method = method;
        info.options.headers = this._mergeHeaders(headers);
        if (this.userAgent != null) {
            info.options.headers['user-agent'] = this.userAgent;
        }
        info.options.agent = this._getAgent(info.parsedUrl);
        // gives handlers an opportunity to participate
        if (this.handlers) {
            for (const handler of this.handlers) {
                handler.prepareRequest(info.options);
            }
        }
        return info;
    }
    _mergeHeaders(headers) {
        if (this.requestOptions && this.requestOptions.headers) {
            return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(headers || {}));
        }
        return lowercaseKeys(headers || {});
    }
    _getExistingOrDefaultHeader(additionalHeaders, header, _default) {
        let clientHeader;
        if (this.requestOptions && this.requestOptions.headers) {
            clientHeader = lowercaseKeys(this.requestOptions.headers)[header];
        }
        return additionalHeaders[header] || clientHeader || _default;
    }
    _getAgent(parsedUrl) {
        let agent;
        const proxyUrl = pm.getProxyUrl(parsedUrl);
        const useProxy = proxyUrl && proxyUrl.hostname;
        if (this._keepAlive && useProxy) {
            agent = this._proxyAgent;
        }
        if (this._keepAlive && !useProxy) {
            agent = this._agent;
        }
        // if agent is already assigned use that agent.
        if (agent) {
            return agent;
        }
        const usingSsl = parsedUrl.protocol === 'https:';
        let maxSockets = 100;
        if (this.requestOptions) {
            maxSockets = this.requestOptions.maxSockets || http.globalAgent.maxSockets;
        }
        // This is `useProxy` again, but we need to check `proxyURl` directly for TypeScripts's flow analysis.
        if (proxyUrl && proxyUrl.hostname) {
            const agentOptions = {
                maxSockets,
                keepAlive: this._keepAlive,
                proxy: Object.assign(Object.assign({}, ((proxyUrl.username || proxyUrl.password) && {
                    proxyAuth: `${proxyUrl.username}:${proxyUrl.password}`
                })), { host: proxyUrl.hostname, port: proxyUrl.port })
            };
            let tunnelAgent;
            const overHttps = proxyUrl.protocol === 'https:';
            if (usingSsl) {
                tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;
            }
            else {
                tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;
            }
            agent = tunnelAgent(agentOptions);
            this._proxyAgent = agent;
        }
        // if reusing agent across request and tunneling agent isn't assigned create a new agent
        if (this._keepAlive && !agent) {
            const options = { keepAlive: this._keepAlive, maxSockets };
            agent = usingSsl ? new https.Agent(options) : new http.Agent(options);
            this._agent = agent;
        }
        // if not using private agent and tunnel agent isn't setup then use global agent
        if (!agent) {
            agent = usingSsl ? https.globalAgent : http.globalAgent;
        }
        if (usingSsl && this._ignoreSslError) {
            // we don't want to set NODE_TLS_REJECT_UNAUTHORIZED=0 since that will affect request for entire process
            // http.RequestOptions doesn't expose a way to modify RequestOptions.agent.options
            // we have to cast it to any and change it directly
            agent.options = Object.assign(agent.options || {}, {
                rejectUnauthorized: false
            });
        }
        return agent;
    }
    _performExponentialBackoff(retryNumber) {
        return __awaiter(this, void 0, void 0, function* () {
            retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);
            const ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);
            return new Promise(resolve => setTimeout(() => resolve(), ms));
        });
    }
    _processResponse(res, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {
                const statusCode = res.message.statusCode || 0;
                const response = {
                    statusCode,
                    result: null,
                    headers: {}
                };
                // not found leads to null obj returned
                if (statusCode === HttpCodes.NotFound) {
                    resolve(response);
                }
                // get the result from the body
                function dateTimeDeserializer(key, value) {
                    if (typeof value === 'string') {
                        const a = new Date(value);
                        if (!isNaN(a.valueOf())) {
                            return a;
                        }
                    }
                    return value;
                }
                let obj;
                let contents;
                try {
                    contents = yield res.readBody();
                    if (contents && contents.length > 0) {
                        if (options && options.deserializeDates) {
                            obj = JSON.parse(contents, dateTimeDeserializer);
                        }
                        else {
                            obj = JSON.parse(contents);
                        }
                        response.result = obj;
                    }
                    response.headers = res.message.headers;
                }
                catch (err) {
                    // Invalid resource (contents not json);  leaving result obj null
                }
                // note that 3xx redirects are handled by the http layer.
                if (statusCode > 299) {
                    let msg;
                    // if exception/error in body, attempt to get better error
                    if (obj && obj.message) {
                        msg = obj.message;
                    }
                    else if (contents && contents.length > 0) {
                        // it may be the case that the exception is in the body message as string
                        msg = contents;
                    }
                    else {
                        msg = `Failed request: (${statusCode})`;
                    }
                    const err = new HttpClientError(msg, statusCode);
                    err.result = response.result;
                    reject(err);
                }
                else {
                    resolve(response);
                }
            }));
        });
    }
}
exports.HttpClient = HttpClient;
const lowercaseKeys = (obj) => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 9835:
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.checkBypass = exports.getProxyUrl = void 0;
function getProxyUrl(reqUrl) {
    const usingSsl = reqUrl.protocol === 'https:';
    if (checkBypass(reqUrl)) {
        return undefined;
    }
    const proxyVar = (() => {
        if (usingSsl) {
            return process.env['https_proxy'] || process.env['HTTPS_PROXY'];
        }
        else {
            return process.env['http_proxy'] || process.env['HTTP_PROXY'];
        }
    })();
    if (proxyVar) {
        return new URL(proxyVar);
    }
    else {
        return undefined;
    }
}
exports.getProxyUrl = getProxyUrl;
function checkBypass(reqUrl) {
    if (!reqUrl.hostname) {
        return false;
    }
    const noProxy = process.env['no_proxy'] || process.env['NO_PROXY'] || '';
    if (!noProxy) {
        return false;
    }
    // Determine the request port
    let reqPort;
    if (reqUrl.port) {
        reqPort = Number(reqUrl.port);
    }
    else if (reqUrl.protocol === 'http:') {
        reqPort = 80;
    }
    else if (reqUrl.protocol === 'https:') {
        reqPort = 443;
    }
    // Format the request hostname and hostname with port
    const upperReqHosts = [reqUrl.hostname.toUpperCase()];
    if (typeof reqPort === 'number') {
        upperReqHosts.push(`${upperReqHosts[0]}:${reqPort}`);
    }
    // Compare request host against noproxy
    for (const upperNoProxyItem of noProxy
        .split(',')
        .map(x => x.trim().toUpperCase())
        .filter(x => x)) {
        if (upperReqHosts.some(x => x === upperNoProxyItem)) {
            return true;
        }
    }
    return false;
}
exports.checkBypass = checkBypass;
//# sourceMappingURL=proxy.js.map

/***/ }),

/***/ 9690:
/***/ (function(module, __unused_webpack_exports, __nccwpck_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const events_1 = __nccwpck_require__(2361);
const debug_1 = __importDefault(__nccwpck_require__(8237));
const promisify_1 = __importDefault(__nccwpck_require__(6570));
const debug = debug_1.default('agent-base');
function isAgent(v) {
    return Boolean(v) && typeof v.addRequest === 'function';
}
function isSecureEndpoint() {
    const { stack } = new Error();
    if (typeof stack !== 'string')
        return false;
    return stack.split('\n').some(l => l.indexOf('(https.js:') !== -1 || l.indexOf('node:https:') !== -1);
}
function createAgent(callback, opts) {
    return new createAgent.Agent(callback, opts);
}
(function (createAgent) {
    /**
     * Base `http.Agent` implementation.
     * No pooling/keep-alive is implemented by default.
     *
     * @param {Function} callback
     * @api public
     */
    class Agent extends events_1.EventEmitter {
        constructor(callback, _opts) {
            super();
            let opts = _opts;
            if (typeof callback === 'function') {
                this.callback = callback;
            }
            else if (callback) {
                opts = callback;
            }
            // Timeout for the socket to be returned from the callback
            this.timeout = null;
            if (opts && typeof opts.timeout === 'number') {
                this.timeout = opts.timeout;
            }
            // These aren't actually used by `agent-base`, but are required
            // for the TypeScript definition files in `@types/node` :/
            this.maxFreeSockets = 1;
            this.maxSockets = 1;
            this.maxTotalSockets = Infinity;
            this.sockets = {};
            this.freeSockets = {};
            this.requests = {};
            this.options = {};
        }
        get defaultPort() {
            if (typeof this.explicitDefaultPort === 'number') {
                return this.explicitDefaultPort;
            }
            return isSecureEndpoint() ? 443 : 80;
        }
        set defaultPort(v) {
            this.explicitDefaultPort = v;
        }
        get protocol() {
            if (typeof this.explicitProtocol === 'string') {
                return this.explicitProtocol;
            }
            return isSecureEndpoint() ? 'https:' : 'http:';
        }
        set protocol(v) {
            this.explicitProtocol = v;
        }
        callback(req, opts, fn) {
            throw new Error('"agent-base" has no default implementation, you must subclass and override `callback()`');
        }
        /**
         * Called by node-core's "_http_client.js" module when creating
         * a new HTTP request with this Agent instance.
         *
         * @api public
         */
        addRequest(req, _opts) {
            const opts = Object.assign({}, _opts);
            if (typeof opts.secureEndpoint !== 'boolean') {
                opts.secureEndpoint = isSecureEndpoint();
            }
            if (opts.host == null) {
                opts.host = 'localhost';
            }
            if (opts.port == null) {
                opts.port = opts.secureEndpoint ? 443 : 80;
            }
            if (opts.protocol == null) {
                opts.protocol = opts.secureEndpoint ? 'https:' : 'http:';
            }
            if (opts.host && opts.path) {
                // If both a `host` and `path` are specified then it's most
                // likely the result of a `url.parse()` call... we need to
                // remove the `path` portion so that `net.connect()` doesn't
                // attempt to open that as a unix socket file.
                delete opts.path;
            }
            delete opts.agent;
            delete opts.hostname;
            delete opts._defaultAgent;
            delete opts.defaultPort;
            delete opts.createConnection;
            // Hint to use "Connection: close"
            // XXX: non-documented `http` module API :(
            req._last = true;
            req.shouldKeepAlive = false;
            let timedOut = false;
            let timeoutId = null;
            const timeoutMs = opts.timeout || this.timeout;
            const onerror = (err) => {
                if (req._hadError)
                    return;
                req.emit('error', err);
                // For Safety. Some additional errors might fire later on
                // and we need to make sure we don't double-fire the error event.
                req._hadError = true;
            };
            const ontimeout = () => {
                timeoutId = null;
                timedOut = true;
                const err = new Error(`A "socket" was not created for HTTP request before ${timeoutMs}ms`);
                err.code = 'ETIMEOUT';
                onerror(err);
            };
            const callbackError = (err) => {
                if (timedOut)
                    return;
                if (timeoutId !== null) {
                    clearTimeout(timeoutId);
                    timeoutId = null;
                }
                onerror(err);
            };
            const onsocket = (socket) => {
                if (timedOut)
                    return;
                if (timeoutId != null) {
                    clearTimeout(timeoutId);
                    timeoutId = null;
                }
                if (isAgent(socket)) {
                    // `socket` is actually an `http.Agent` instance, so
                    // relinquish responsibility for this `req` to the Agent
                    // from here on
                    debug('Callback returned another Agent instance %o', socket.constructor.name);
                    socket.addRequest(req, opts);
                    return;
                }
                if (socket) {
                    socket.once('free', () => {
                        this.freeSocket(socket, opts);
                    });
                    req.onSocket(socket);
                    return;
                }
                const err = new Error(`no Duplex stream was returned to agent-base for \`${req.method} ${req.path}\``);
                onerror(err);
            };
            if (typeof this.callback !== 'function') {
                onerror(new Error('`callback` is not defined'));
                return;
            }
            if (!this.promisifiedCallback) {
                if (this.callback.length >= 3) {
                    debug('Converting legacy callback function to promise');
                    this.promisifiedCallback = promisify_1.default(this.callback);
                }
                else {
                    this.promisifiedCallback = this.callback;
                }
            }
            if (typeof timeoutMs === 'number' && timeoutMs > 0) {
                timeoutId = setTimeout(ontimeout, timeoutMs);
            }
            if ('port' in opts && typeof opts.port !== 'number') {
                opts.port = Number(opts.port);
            }
            try {
                debug('Resolving socket for %o request: %o', opts.protocol, `${req.method} ${req.path}`);
                Promise.resolve(this.promisifiedCallback(req, opts)).then(onsocket, callbackError);
            }
            catch (err) {
                Promise.reject(err).catch(callbackError);
            }
        }
        freeSocket(socket, opts) {
            debug('Freeing socket %o %o', socket.constructor.name, opts);
            socket.destroy();
        }
        destroy() {
            debug('Destroying agent %o', this.constructor.name);
        }
    }
    createAgent.Agent = Agent;
    // So that `instanceof` works correctly
    createAgent.prototype = createAgent.Agent.prototype;
})(createAgent || (createAgent = {}));
module.exports = createAgent;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 6570:
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
function promisify(fn) {
    return function (req, opts) {
        return new Promise((resolve, reject) => {
            fn.call(this, req, opts, (err, rtn) => {
                if (err) {
                    reject(err);
                }
                else {
                    resolve(rtn);
                }
            });
        });
    };
}
exports["default"] = promisify;
//# sourceMappingURL=promisify.js.map

/***/ }),

/***/ 5507:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {



const { createConsumer } = __nccwpck_require__(7342)

const consumers = {
  '10px Verdana': createConsumer(__nccwpck_require__(1604)),
  'bold 10px Verdana': createConsumer(__nccwpck_require__(4769)),
  '11px Verdana': createConsumer(__nccwpck_require__(4464)),
  'bold 11px Helvetica': createConsumer(
    __nccwpck_require__(6656)
  ),
}

module.exports = function measure(text, { font, ...rest }) {
  const consumer = consumers[font]
  if (!consumer) {
    throw Error(
      `Unknown font "${font}", expected ${Object.keys(consumers).join(', ')}`
    )
  }
  return consumer.widthOf(text, { ...rest })
}


/***/ }),

/***/ 2403:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {



const anafanafo = __nccwpck_require__(5507)
const { brightness } = __nccwpck_require__(4623)
const { XmlElement, escapeXml } = __nccwpck_require__(4133)

// https://github.com/badges/shields/pull/1132
const FONT_SCALE_UP_FACTOR = 10
const FONT_SCALE_DOWN_VALUE = 'scale(.1)'

const FONT_FAMILY = 'Verdana,Geneva,DejaVu Sans,sans-serif'
const fontFamily = `font-family="${FONT_FAMILY}"`
const socialFontFamily =
  'font-family="Helvetica Neue,Helvetica,Arial,sans-serif"'
const brightnessThreshold = 0.69

function capitalize(s) {
  return `${s.charAt(0).toUpperCase()}${s.slice(1)}`
}

function colorsForBackground(color) {
  if (brightness(color) <= brightnessThreshold) {
    return { textColor: '#fff', shadowColor: '#010101' }
  } else {
    return { textColor: '#333', shadowColor: '#ccc' }
  }
}

function roundUpToOdd(val) {
  return val % 2 === 0 ? val + 1 : val
}

function preferredWidthOf(str, options) {
  // Increase chances of pixel grid alignment.
  return roundUpToOdd(anafanafo(str, options) | 0)
}

function createAccessibleText({ label, message }) {
  const labelPrefix = label ? `${label}: ` : ''
  return labelPrefix + message
}

function hasLinks({ links }) {
  const [leftLink, rightLink] = links || []
  const hasLeftLink = leftLink && leftLink.length
  const hasRightLink = rightLink && rightLink.length
  const hasLink = hasLeftLink && hasRightLink
  return { hasLink, hasLeftLink, hasRightLink }
}

function shouldWrapBodyWithLink({ links }) {
  const { hasLeftLink, hasRightLink } = hasLinks({ links })
  return hasLeftLink && !hasRightLink
}

function renderAriaAttributes({ accessibleText, links }) {
  const { hasLink } = hasLinks({ links })
  return hasLink ? '' : `role="img" aria-label="${escapeXml(accessibleText)}"`
}

function renderTitle({ accessibleText, links }) {
  const { hasLink } = hasLinks({ links })
  return hasLink ? '' : `<title>${escapeXml(accessibleText)}</title>`
}

function renderLogo({
  logo,
  badgeHeight,
  horizPadding,
  logoWidth = 14,
  logoPadding = 0,
}) {
  if (logo) {
    const logoHeight = 14
    const y = (badgeHeight - logoHeight) / 2
    const x = horizPadding
    return {
      hasLogo: true,
      totalLogoWidth: logoWidth + logoPadding,
      renderedLogo: `<image x="${x}" y="${y}" width="${logoWidth}" height="${logoHeight}" xlink:href="${escapeXml(
        logo
      )}"/>`,
    }
  } else {
    return { hasLogo: false, totalLogoWidth: 0, renderedLogo: '' }
  }
}

function renderLink({
  link,
  height,
  textLength,
  horizPadding,
  leftMargin,
  renderedText,
}) {
  const rectHeight = height
  const rectWidth = textLength + horizPadding * 2
  const rectX = leftMargin > 1 ? leftMargin + 1 : 0
  return `<a target="_blank" xlink:href="${escapeXml(link)}">
    <rect width="${rectWidth}" x="${rectX}" height="${rectHeight}" fill="rgba(0,0,0,0)" />
    ${renderedText}
  </a>`
}

function renderText({
  leftMargin,
  horizPadding = 0,
  content,
  link,
  height,
  verticalMargin = 0,
  shadow = false,
  color,
}) {
  if (!content.length) {
    return { renderedText: '', width: 0 }
  }

  const textLength = preferredWidthOf(content, { font: '11px Verdana' })
  const escapedContent = escapeXml(content)

  const shadowMargin = 150 + verticalMargin
  const textMargin = 140 + verticalMargin

  const outTextLength = 10 * textLength
  const x = 10 * (leftMargin + 0.5 * textLength + horizPadding)

  let renderedText = ''
  const { textColor, shadowColor } = colorsForBackground(color)
  if (shadow) {
    renderedText = `<text aria-hidden="true" x="${x}" y="${shadowMargin}" fill="${shadowColor}" fill-opacity=".3" transform="scale(.1)" textLength="${outTextLength}">${escapedContent}</text>`
  }
  renderedText += `<text x="${x}" y="${textMargin}" transform="scale(.1)" fill="${textColor}" textLength="${outTextLength}">${escapedContent}</text>`

  return {
    renderedText: link
      ? renderLink({
          link,
          height,
          textLength,
          horizPadding,
          leftMargin,
          renderedText,
        })
      : renderedText,
    width: textLength,
  }
}

function renderBadge(
  { links, leftWidth, rightWidth, height, accessibleText },
  main
) {
  const width = leftWidth + rightWidth
  const leftLink = escapeXml(links[0])

  return `
    <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="${width}" height="${height}" ${renderAriaAttributes(
    { links, accessibleText }
  )}>

    ${renderTitle({ accessibleText, links })}
    ${
      shouldWrapBodyWithLink({ links })
        ? `<a target="_blank" xlink:href="${leftLink}">${main}</a>`
        : main
    }
    </svg>`
}

class Badge {
  static get fontFamily() {
    throw new Error('Not implemented')
  }

  static get height() {
    throw new Error('Not implemented')
  }

  static get verticalMargin() {
    throw new Error('Not implemented')
  }

  static get shadow() {
    throw new Error('Not implemented')
  }

  constructor({
    label,
    message,
    links,
    logo,
    logoWidth,
    logoPadding,
    color = '#4c1',
    labelColor,
  }) {
    const horizPadding = 5
    const { hasLogo, totalLogoWidth, renderedLogo } = renderLogo({
      logo,
      badgeHeight: this.constructor.height,
      horizPadding,
      logoWidth,
      logoPadding,
    })
    const hasLabel = label.length || labelColor
    if (labelColor == null) {
      labelColor = '#555'
    }

    const [leftLink, rightLink] = links

    labelColor = hasLabel || hasLogo ? labelColor : color
    labelColor = escapeXml(labelColor)
    color = escapeXml(color)

    const labelMargin = totalLogoWidth + 1

    const { renderedText: renderedLabel, width: labelWidth } = renderText({
      leftMargin: labelMargin,
      horizPadding,
      content: label,
      link: !shouldWrapBodyWithLink({ links }) && leftLink,
      height: this.constructor.height,
      verticalMargin: this.constructor.verticalMargin,
      shadow: this.constructor.shadow,
      color: labelColor,
    })

    const leftWidth = hasLabel
      ? labelWidth + 2 * horizPadding + totalLogoWidth
      : 0

    let messageMargin = leftWidth - (message.length ? 1 : 0)
    if (!hasLabel) {
      if (hasLogo) {
        messageMargin = messageMargin + totalLogoWidth + horizPadding
      } else {
        messageMargin = messageMargin + 1
      }
    }

    const { renderedText: renderedMessage, width: messageWidth } = renderText({
      leftMargin: messageMargin,
      horizPadding,
      content: message,
      link: rightLink,
      height: this.constructor.height,
      verticalMargin: this.constructor.verticalMargin,
      shadow: this.constructor.shadow,
      color,
    })

    let rightWidth = messageWidth + 2 * horizPadding
    if (hasLogo && !hasLabel) {
      rightWidth += totalLogoWidth + horizPadding - 1
    }

    const width = leftWidth + rightWidth

    const accessibleText = createAccessibleText({ label, message })

    this.links = links
    this.leftWidth = leftWidth
    this.rightWidth = rightWidth
    this.width = width
    this.labelColor = labelColor
    this.color = color
    this.label = label
    this.message = message
    this.accessibleText = accessibleText
    this.renderedLogo = renderedLogo
    this.renderedLabel = renderedLabel
    this.renderedMessage = renderedMessage
  }

  static render(params) {
    return new this(params).render()
  }

  render() {
    throw new Error('Not implemented')
  }
}

class Plastic extends Badge {
  static get fontFamily() {
    return fontFamily
  }

  static get height() {
    return 18
  }

  static get verticalMargin() {
    return -10
  }

  static get shadow() {
    return true
  }

  render() {
    return renderBadge(
      {
        links: this.links,
        leftWidth: this.leftWidth,
        rightWidth: this.rightWidth,
        accessibleText: this.accessibleText,
        height: this.constructor.height,
      },
      `
      <linearGradient id="s" x2="0" y2="100%">
        <stop offset="0"  stop-color="#fff" stop-opacity=".7"/>
        <stop offset=".1" stop-color="#aaa" stop-opacity=".1"/>
        <stop offset=".9" stop-color="#000" stop-opacity=".3"/>
        <stop offset="1"  stop-color="#000" stop-opacity=".5"/>
      </linearGradient>

      <clipPath id="r">
        <rect width="${this.width}" height="${this.constructor.height}" rx="4" fill="#fff"/>
      </clipPath>

      <g clip-path="url(#r)">
        <rect width="${this.leftWidth}" height="${this.constructor.height}" fill="${this.labelColor}"/>
        <rect x="${this.leftWidth}" width="${this.rightWidth}" height="${this.constructor.height}" fill="${this.color}"/>
        <rect width="${this.width}" height="${this.constructor.height}" fill="url(#s)"/>
      </g>

      <g fill="#fff" text-anchor="middle" ${this.constructor.fontFamily} text-rendering="geometricPrecision" font-size="110">
        ${this.renderedLogo}
        ${this.renderedLabel}
        ${this.renderedMessage}
      </g>`
    )
  }
}

class Flat extends Badge {
  static get fontFamily() {
    return fontFamily
  }

  static get height() {
    return 20
  }

  static get verticalMargin() {
    return 0
  }

  static get shadow() {
    return true
  }

  render() {
    return renderBadge(
      {
        links: this.links,
        leftWidth: this.leftWidth,
        rightWidth: this.rightWidth,
        accessibleText: this.accessibleText,
        height: this.constructor.height,
      },
      `
      <linearGradient id="s" x2="0" y2="100%">
        <stop offset="0" stop-color="#bbb" stop-opacity=".1"/>
        <stop offset="1" stop-opacity=".1"/>
      </linearGradient>

      <clipPath id="r">
        <rect width="${this.width}" height="${this.constructor.height}" rx="3" fill="#fff"/>
      </clipPath>

      <g clip-path="url(#r)">
        <rect width="${this.leftWidth}" height="${this.constructor.height}" fill="${this.labelColor}"/>
        <rect x="${this.leftWidth}" width="${this.rightWidth}" height="${this.constructor.height}" fill="${this.color}"/>
        <rect width="${this.width}" height="${this.constructor.height}" fill="url(#s)"/>
      </g>

      <g fill="#fff" text-anchor="middle" ${this.constructor.fontFamily} text-rendering="geometricPrecision" font-size="110">
        ${this.renderedLogo}
        ${this.renderedLabel}
        ${this.renderedMessage}
      </g>`
    )
  }
}

class FlatSquare extends Badge {
  static get fontFamily() {
    return fontFamily
  }

  static get height() {
    return 20
  }

  static get verticalMargin() {
    return 0
  }

  static get shadow() {
    return false
  }

  render() {
    return renderBadge(
      {
        links: this.links,
        leftWidth: this.leftWidth,
        rightWidth: this.rightWidth,
        accessibleText: this.accessibleText,
        height: this.constructor.height,
      },
      `
      <g shape-rendering="crispEdges">
        <rect width="${this.leftWidth}" height="${this.constructor.height}" fill="${this.labelColor}"/>
        <rect x="${this.leftWidth}" width="${this.rightWidth}" height="${this.constructor.height}" fill="${this.color}"/>
      </g>

      <g fill="#fff" text-anchor="middle" ${this.constructor.fontFamily} text-rendering="geometricPrecision" font-size="110">
        ${this.renderedLogo}
        ${this.renderedLabel}
        ${this.renderedMessage}
      </g>`
    )
  }
}

function social({
  label,
  message,
  links = [],
  logo,
  logoWidth,
  logoPadding,
  color = '#4c1',
  labelColor = '#555',
}) {
  // Social label is styled with a leading capital. Convert to caps here so
  // width can be measured using the correct characters.
  label = capitalize(label)

  const externalHeight = 20
  const internalHeight = 19
  const labelHorizPadding = 5
  const messageHorizPadding = 4
  const horizGutter = 6
  const { totalLogoWidth, renderedLogo } = renderLogo({
    logo,
    badgeHeight: externalHeight,
    horizPadding: labelHorizPadding,
    logoWidth,
    logoPadding,
  })
  const hasMessage = message.length

  const font = 'bold 11px Helvetica'
  const labelTextWidth = preferredWidthOf(label, { font })
  const messageTextWidth = preferredWidthOf(message, { font })
  const labelRectWidth = labelTextWidth + totalLogoWidth + 2 * labelHorizPadding
  const messageRectWidth = messageTextWidth + 2 * messageHorizPadding

  let [leftLink, rightLink] = links
  leftLink = escapeXml(leftLink)
  rightLink = escapeXml(rightLink)
  const { hasLeftLink, hasRightLink, hasLink } = hasLinks({ links })

  const accessibleText = createAccessibleText({ label, message })

  function renderMessageBubble() {
    const messageBubbleMainX = labelRectWidth + horizGutter + 0.5
    const messageBubbleNotchX = labelRectWidth + horizGutter
    return `
      <rect x="${messageBubbleMainX}" y="0.5" width="${messageRectWidth}" height="${internalHeight}" rx="2" fill="#fafafa"/>
      <rect x="${messageBubbleNotchX}" y="7.5" width="0.5" height="5" stroke="#fafafa"/>
      <path d="M${messageBubbleMainX} 6.5 l-3 3v1 l3 3" stroke="d5d5d5" fill="#fafafa"/>
    `
  }

  function renderLabelText() {
    const labelTextX =
      10 * (totalLogoWidth + labelTextWidth / 2 + labelHorizPadding)
    const labelTextLength = 10 * labelTextWidth
    const escapedLabel = escapeXml(label)
    const shouldWrapWithLink = hasLeftLink && !shouldWrapBodyWithLink({ links })

    const rect = `<rect id="llink" stroke="#d5d5d5" fill="url(#a)" x=".5" y=".5" width="${labelRectWidth}" height="${internalHeight}" rx="2" />`
    const shadow = `<text aria-hidden="true" x="${labelTextX}" y="150" fill="#fff" transform="scale(.1)" textLength="${labelTextLength}">${escapedLabel}</text>`
    const text = `<text x="${labelTextX}" y="140" transform="scale(.1)" textLength="${labelTextLength}">${escapedLabel}</text>`

    return shouldWrapWithLink
      ? `
        <a target="_blank" xlink:href="${leftLink}">
          ${shadow}
          ${text}
          ${rect}
        </a>
      `
      : `
      ${rect}
      ${shadow}
      ${text}
    `
  }

  function renderMessageText() {
    const messageTextX =
      10 * (labelRectWidth + horizGutter + messageRectWidth / 2)
    const messageTextLength = 10 * messageTextWidth
    const escapedMessage = escapeXml(message)

    const rect = `<rect width="${messageRectWidth + 1}" x="${
      labelRectWidth + horizGutter
    }" height="${internalHeight + 1}" fill="rgba(0,0,0,0)" />`
    const shadow = `<text aria-hidden="true" x="${messageTextX}" y="150" fill="#fff" transform="scale(.1)" textLength="${messageTextLength}">${escapedMessage}</text>`
    const text = `<text id="rlink" x="${messageTextX}" y="140" transform="scale(.1)" textLength="${messageTextLength}">${escapedMessage}</text>`

    return hasRightLink
      ? `
        <a target="_blank" xlink:href="${rightLink}">
          ${rect}
          ${shadow}
          ${text}
        </a>
      `
      : `
      ${shadow}
      ${text}
    `
  }

  return renderBadge(
    {
      links,
      leftWidth: labelRectWidth + 1,
      rightWidth: hasMessage ? horizGutter + messageRectWidth : 0,
      accessibleText,
      height: externalHeight,
    },
    `
    <style>a:hover #llink{fill:url(#b);stroke:#ccc}a:hover #rlink{fill:#4183c4}</style>
    <linearGradient id="a" x2="0" y2="100%">
      <stop offset="0" stop-color="#fcfcfc" stop-opacity="0"/>
      <stop offset="1" stop-opacity=".1"/>
    </linearGradient>
    <linearGradient id="b" x2="0" y2="100%">
      <stop offset="0" stop-color="#ccc" stop-opacity=".1"/>
      <stop offset="1" stop-opacity=".1"/>
    </linearGradient>
    <g stroke="#d5d5d5">
      <rect stroke="none" fill="#fcfcfc" x="0.5" y="0.5" width="${labelRectWidth}" height="${internalHeight}" rx="2"/>
      ${hasMessage ? renderMessageBubble() : ''}
    </g>
    ${renderedLogo}
    <g aria-hidden="${!hasLink}" fill="#333" text-anchor="middle" ${socialFontFamily} text-rendering="geometricPrecision" font-weight="700" font-size="110px" line-height="14px">
      ${renderLabelText()}
      ${hasMessage ? renderMessageText() : ''}
    </g>
    `
  )
}

function forTheBadge({
  label,
  message,
  links,
  logo,
  logoWidth,
  color = '#4c1',
  labelColor,
}) {
  const FONT_SIZE = 10
  const BADGE_HEIGHT = 28
  const LOGO_HEIGHT = 14
  const TEXT_MARGIN = 12
  const LOGO_MARGIN = 9
  const LOGO_TEXT_GUTTER = 6
  const LETTER_SPACING = 1.25

  // Prepare content. For the Badge is styled in all caps. It's important to to
  // convert to uppercase first so the widths can be measured using the correct
  // symbols.
  label = label.toUpperCase()
  message = message.toUpperCase()

  const [leftLink, rightLink] = links
  const { hasLeftLink, hasRightLink } = hasLinks({ links })

  const outLabelColor = labelColor || '#555'

  // Compute text width.
  // TODO: This really should count the symbols rather than just using `.length`.
  // https://mathiasbynens.be/notes/javascript-unicode
  // This is not using `preferredWidthOf()` as it tends to produce larger
  // inconsistencies in the letter spacing. The badges look fine, however if you
  // replace `textLength` with `letterSpacing` in the rendered SVG, you can see
  // the discrepancy. Ideally, swapping out `textLength` for `letterSpacing`
  // should not affect the appearance.
  const labelTextWidth = label.length
    ? (anafanafo(label, { font: `${FONT_SIZE}px Verdana` }) | 0) +
      LETTER_SPACING * label.length
    : 0
  const messageTextWidth = message.length
    ? (anafanafo(message, { font: `bold ${FONT_SIZE}px Verdana` }) | 0) +
      LETTER_SPACING * message.length
    : 0

  // Compute horizontal layout.
  // If a `labelColor` is set, the logo is always set against it, even when
  // there is no label. When `needsLabelRect` is true, render a label rect and a
  // message rect; when false, only a message rect.
  const hasLabel = Boolean(label.length)
  const needsLabelRect = hasLabel || (logo && labelColor)
  let logoMinX, labelTextMinX
  if (logo) {
    logoMinX = LOGO_MARGIN
    labelTextMinX = logoMinX + logoWidth + LOGO_TEXT_GUTTER
  } else {
    labelTextMinX = TEXT_MARGIN
  }
  let labelRectWidth, messageTextMinX, messageRectWidth
  if (needsLabelRect) {
    if (hasLabel) {
      labelRectWidth = labelTextMinX + labelTextWidth + TEXT_MARGIN
    } else {
      labelRectWidth = 2 * LOGO_MARGIN + logoWidth
    }
    messageTextMinX = labelRectWidth + TEXT_MARGIN
    messageRectWidth = 2 * TEXT_MARGIN + messageTextWidth
  } else {
    if (logo) {
      messageTextMinX = TEXT_MARGIN + logoWidth + LOGO_TEXT_GUTTER
      messageRectWidth =
        2 * TEXT_MARGIN + logoWidth + LOGO_TEXT_GUTTER + messageTextWidth
    } else {
      messageTextMinX = TEXT_MARGIN
      messageRectWidth = 2 * TEXT_MARGIN + messageTextWidth
    }
  }

  const logoElement = new XmlElement({
    name: 'image',
    attrs: {
      x: logoMinX,
      y: 0.5 * (BADGE_HEIGHT - LOGO_HEIGHT),
      width: logoWidth,
      height: LOGO_HEIGHT,
      'xlink:href': logo,
    },
  })

  function getLabelElement() {
    const { textColor } = colorsForBackground(outLabelColor)
    const midX = labelTextMinX + 0.5 * labelTextWidth
    const text = new XmlElement({
      name: 'text',
      content: [label],
      attrs: {
        transform: FONT_SCALE_DOWN_VALUE,
        x: FONT_SCALE_UP_FACTOR * midX,
        y: 175,
        textLength: FONT_SCALE_UP_FACTOR * labelTextWidth,
        fill: textColor,
      },
    })

    if (hasLeftLink && !shouldWrapBodyWithLink({ links })) {
      const rect = new XmlElement({
        name: 'rect',
        attrs: {
          width: labelRectWidth,
          height: BADGE_HEIGHT,
          fill: 'rgba(0,0,0,0)',
        },
      })
      return new XmlElement({
        name: 'a',
        content: [rect, text],
        attrs: {
          target: '_blank',
          'xlink:href': leftLink,
        },
      })
    } else {
      return text
    }
  }

  function getMessageElement() {
    const { textColor } = colorsForBackground(color)
    const midX = messageTextMinX + 0.5 * messageTextWidth
    const text = new XmlElement({
      name: 'text',
      content: [message],
      attrs: {
        transform: FONT_SCALE_DOWN_VALUE,
        x: FONT_SCALE_UP_FACTOR * midX,
        y: 175,
        textLength: FONT_SCALE_UP_FACTOR * messageTextWidth,
        fill: textColor,
        'font-weight': 'bold',
      },
    })

    if (hasRightLink) {
      const rect = new XmlElement({
        name: 'rect',
        attrs: {
          width: messageRectWidth,
          height: BADGE_HEIGHT,
          x: labelRectWidth || 0,
          fill: 'rgba(0,0,0,0)',
        },
      })
      return new XmlElement({
        name: 'a',
        content: [rect, text],
        attrs: {
          target: '_blank',
          'xlink:href': rightLink,
        },
      })
    } else {
      return text
    }
  }

  let backgroundContent
  if (needsLabelRect) {
    backgroundContent = [
      new XmlElement({
        name: 'rect',
        attrs: {
          width: labelRectWidth,
          height: BADGE_HEIGHT,
          fill: outLabelColor,
        },
      }),
      new XmlElement({
        name: 'rect',
        attrs: {
          x: labelRectWidth,
          width: messageRectWidth,
          height: BADGE_HEIGHT,
          fill: color,
        },
      }),
    ]
  } else {
    backgroundContent = [
      new XmlElement({
        name: 'rect',
        attrs: {
          width: messageRectWidth,
          height: BADGE_HEIGHT,
          fill: color,
        },
      }),
    ]
  }

  const backgroundGroup = new XmlElement({
    name: 'g',
    content: backgroundContent,
    attrs: {
      'shape-rendering': 'crispEdges',
    },
  })
  const foregroundGroup = new XmlElement({
    name: 'g',
    content: [
      logo ? logoElement : '',
      hasLabel ? getLabelElement() : '',
      getMessageElement(),
    ],
    attrs: {
      fill: '#fff',
      'text-anchor': 'middle',
      'font-family': FONT_FAMILY,
      'text-rendering': 'geometricPrecision',
      'font-size': FONT_SCALE_UP_FACTOR * FONT_SIZE,
    },
  })

  // Render.
  return renderBadge(
    {
      links,
      leftWidth: labelRectWidth || 0,
      rightWidth: messageRectWidth,
      accessibleText: createAccessibleText({ label, message }),
      height: BADGE_HEIGHT,
    },
    [backgroundGroup.render(), foregroundGroup.render()].join('')
  )
}

module.exports = {
  plastic: params => Plastic.render(params),
  flat: params => Flat.render(params),
  'flat-square': params => FlatSquare.render(params),
  social,
  'for-the-badge': forTheBadge,
}


/***/ }),

/***/ 4623:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {



const { fromString } = __nccwpck_require__(1389)

// When updating these, be sure also to update the list in `badge-maker/README.md`.
const namedColors = {
  brightgreen: '#4c1',
  green: '#97ca00',
  yellow: '#dfb317',
  yellowgreen: '#a4a61d',
  orange: '#fe7d37',
  red: '#e05d44',
  blue: '#007ec6',
  grey: '#555',
  lightgrey: '#9f9f9f',
}

const aliases = {
  gray: 'grey',
  lightgray: 'lightgrey',
  critical: 'red',
  important: 'orange',
  success: 'brightgreen',
  informational: 'blue',
  inactive: 'lightgrey',
}

const resolvedAliases = {}
Object.entries(aliases).forEach(([alias, original]) => {
  resolvedAliases[alias] = namedColors[original]
})

// This function returns false for `#ccc`. However `isCSSColor('#ccc')` is
// true.
const hexColorRegex = /^([\da-f]{3}){1,2}$/i
function isHexColor(s = '') {
  return hexColorRegex.test(s)
}

function isCSSColor(color) {
  return typeof color === 'string' && fromString(color.trim())
}

function normalizeColor(color) {
  if (color === undefined) {
    return undefined
  } else if (color in namedColors) {
    return color
  } else if (color in aliases) {
    return aliases[color]
  } else if (isHexColor(color)) {
    return `#${color.toLowerCase()}`
  } else if (isCSSColor(color)) {
    return color.toLowerCase()
  } else {
    return undefined
  }
}

function toSvgColor(color) {
  const normalized = normalizeColor(color)
  if (normalized in namedColors) {
    return namedColors[normalized]
  } else if (normalized in resolvedAliases) {
    return resolvedAliases[normalized]
  } else {
    return normalized
  }
}

function brightness(color) {
  if (color) {
    const cssColor = fromString(color)
    if (cssColor) {
      const rgb = cssColor.toRgbaArray()
      return +((rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 255000).toFixed(2)
    }
  }
  return 0
}

module.exports = {
  namedColors,
  isHexColor,
  normalizeColor,
  toSvgColor,
  brightness,
}


/***/ }),

/***/ 9141:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {


/**
 * @module badge-maker
 */

const _makeBadge = __nccwpck_require__(9244)

class ValidationError extends Error {}

function _validate(format) {
  if (format !== Object(format)) {
    throw new ValidationError('makeBadge takes an argument of type object')
  }

  if (!('message' in format)) {
    throw new ValidationError('Field `message` is required')
  }

  const stringFields = ['labelColor', 'color', 'message', 'label']
  stringFields.forEach(function (field) {
    if (field in format && typeof format[field] !== 'string') {
      throw new ValidationError(`Field \`${field}\` must be of type string`)
    }
  })

  const styleValues = [
    'plastic',
    'flat',
    'flat-square',
    'for-the-badge',
    'social',
  ]
  if ('style' in format && !styleValues.includes(format.style)) {
    throw new ValidationError(
      `Field \`style\` must be one of (${styleValues.toString()})`
    )
  }
}

function _clean(format) {
  const expectedKeys = ['label', 'message', 'labelColor', 'color', 'style']

  const cleaned = {}
  Object.keys(format).forEach(key => {
    if (format[key] != null && expectedKeys.includes(key)) {
      cleaned[key] = format[key]
    } else {
      throw new ValidationError(
        `Unexpected field '${key}'. Allowed values are (${expectedKeys.toString()})`
      )
    }
  })

  // Legacy.
  cleaned.label = cleaned.label || ''

  return cleaned
}

/**
 * Create a badge
 *
 * @param {object} format Object specifying badge data
 * @param {string} format.label (Optional) Badge label (e.g: 'build')
 * @param {string} format.message (Required) Badge message (e.g: 'passing')
 * @param {string} format.labelColor (Optional) Label color
 * @param {string} format.color (Optional) Message color
 * @param {string} format.style (Optional) Visual style e.g: 'flat'
 * @returns {string} Badge in SVG format
 * @see https://github.com/badges/shields/tree/master/badge-maker/README.md
 */
function makeBadge(format) {
  _validate(format)
  const cleanedFormat = _clean(format)
  return _makeBadge(cleanedFormat)
}

module.exports = {
  makeBadge,
  ValidationError,
}


/***/ }),

/***/ 9244:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {



const { normalizeColor, toSvgColor } = __nccwpck_require__(4623)
const badgeRenderers = __nccwpck_require__(2403)
const { stripXmlWhitespace } = __nccwpck_require__(4133)

/*
note: makeBadge() is fairly thinly wrapped so if we are making changes here
it is likely this will impact on the package's public interface in index.js
*/
module.exports = function makeBadge({
  format,
  style = 'flat',
  label,
  message,
  color,
  labelColor,
  logo,
  logoPosition,
  logoWidth,
  links = ['', ''],
}) {
  // String coercion and whitespace removal.
  label = `${label}`.trim()
  message = `${message}`.trim()

  // This ought to be the responsibility of the server, not `makeBadge`.
  if (format === 'json') {
    return JSON.stringify({
      label,
      message,
      logoWidth,
      // Only call normalizeColor for the JSON case: this is handled
      // internally by toSvgColor in the SVG case.
      color: normalizeColor(color),
      labelColor: normalizeColor(labelColor),
      link: links,
      name: label,
      value: message,
    })
  }

  const render = badgeRenderers[style]
  if (!render) {
    throw new Error(`Unknown badge style: '${style}'`)
  }

  logoWidth = +logoWidth || (logo ? 14 : 0)

  return stripXmlWhitespace(
    render({
      label,
      message,
      links,
      logo,
      logoPosition,
      logoWidth,
      logoPadding: logo && label.length ? 3 : 0,
      color: toSvgColor(color),
      labelColor: toSvgColor(labelColor),
    })
  )
}


/***/ }),

/***/ 4133:
/***/ ((module) => {

/**
 * @module
 */



function stripXmlWhitespace(xml) {
  return xml.replace(/>\s+/g, '>').replace(/<\s+/g, '<').trim()
}

function escapeXml(s) {
  if (typeof s === 'number') {
    return s
  } else if (s === undefined || typeof s !== 'string') {
    return undefined
  } else {
    return s
      .replace(/&/g, '&amp;')
      .replace(/</g, '&lt;')
      .replace(/>/g, '&gt;')
      .replace(/"/g, '&quot;')
      .replace(/'/g, '&apos;')
  }
}

/**
 * Representation of an XML element
 */
class XmlElement {
  /**
   * Xml Element Constructor
   *
   * @param {object} attrs Refer to individual attrs
   * @param {string} attrs.name
   *    Name of the XML tag
   * @param {Array.<string|module:badge-maker/lib/xml-element~XmlElement>} [attrs.content=[]]
   *    Array of objects to render inside the tag. content may contain a mix of
   *    string and XmlElement objects. If content is `[]` or ommitted the
   *    element will be rendered as a self-closing element.
   * @param {object} [attrs.attrs={}]
   *    Object representing the tag's attributes as name/value pairs
   */
  constructor({ name, content = [], attrs = {} }) {
    this.name = name
    this.content = content
    this.attrs = attrs
  }

  /**
   * Render the XML element to a string, applying appropriate escaping
   *
   * @returns {string} String representation of the XML element
   */
  render() {
    const attrsStr = Object.entries(this.attrs)
      .map(([k, v]) => ` ${k}="${escapeXml(v)}"`)
      .join('')
    if (this.content.length > 0) {
      const content = this.content
        .map(function (el) {
          if (el instanceof XmlElement) {
            return el.render()
          } else {
            return escapeXml(el)
          }
        })
        .join(' ')
      return stripXmlWhitespace(
        `<${this.name}${attrsStr}>${content}</${this.name}>`
      )
    }
    return stripXmlWhitespace(`<${this.name}${attrsStr}/>`)
  }
}

module.exports = { escapeXml, stripXmlWhitespace, XmlElement }


/***/ }),

/***/ 9417:
/***/ ((module) => {


module.exports = balanced;
function balanced(a, b, str) {
  if (a instanceof RegExp) a = maybeMatch(a, str);
  if (b instanceof RegExp) b = maybeMatch(b, str);

  var r = range(a, b, str);

  return r && {
    start: r[0],
    end: r[1],
    pre: str.slice(0, r[0]),
    body: str.slice(r[0] + a.length, r[1]),
    post: str.slice(r[1] + b.length)
  };
}

function maybeMatch(reg, str) {
  var m = str.match(reg);
  return m ? m[0] : null;
}

balanced.range = range;
function range(a, b, str) {
  var begs, beg, left, right, result;
  var ai = str.indexOf(a);
  var bi = str.indexOf(b, ai + 1);
  var i = ai;

  if (ai >= 0 && bi > 0) {
    if(a===b) {
      return [ai, bi];
    }
    begs = [];
    left = str.length;

    while (i >= 0 && !result) {
      if (i == ai) {
        begs.push(i);
        ai = str.indexOf(a, i + 1);
      } else if (begs.length == 1) {
        result = [ begs.pop(), bi ];
      } else {
        beg = begs.pop();
        if (beg < left) {
          left = beg;
          right = bi;
        }

        bi = str.indexOf(b, i + 1);
      }

      i = ai < bi && ai >= 0 ? ai : bi;
    }

    if (begs.length) {
      result = [ left, right ];
    }
  }

  return result;
}


/***/ }),

/***/ 9326:
/***/ ((module) => {

module.exports = function(haystack, needle, comparator, low, high) {
  var mid, cmp;

  if(low === undefined)
    low = 0;

  else {
    low = low|0;
    if(low < 0 || low >= haystack.length)
      throw new RangeError("invalid lower bound");
  }

  if(high === undefined)
    high = haystack.length - 1;

  else {
    high = high|0;
    if(high < low || high >= haystack.length)
      throw new RangeError("invalid upper bound");
  }

  while(low <= high) {
    // The naive `low + high >>> 1` could fail for array lengths > 2**31
    // because `>>>` converts its operands to int32. `low + (high - low >>> 1)`
    // works for array lengths <= 2**32-1 which is also Javascript's max array
    // length.
    mid = low + ((high - low) >>> 1);
    cmp = +comparator(haystack[mid], needle, mid, haystack);

    // Too low.
    if(cmp < 0.0)
      low  = mid + 1;

    // Too high.
    else if(cmp > 0.0)
      high = mid - 1;

    // Key found.
    else
      return mid;
  }

  // Key not found.
  return ~low;
}


/***/ }),

/***/ 3664:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {



const { Buffer } = __nccwpck_require__(4300)
const symbol = Symbol.for('BufferList')

function BufferList (buf) {
  if (!(this instanceof BufferList)) {
    return new BufferList(buf)
  }

  BufferList._init.call(this, buf)
}

BufferList._init = function _init (buf) {
  Object.defineProperty(this, symbol, { value: true })

  this._bufs = []
  this.length = 0

  if (buf) {
    this.append(buf)
  }
}

BufferList.prototype._new = function _new (buf) {
  return new BufferList(buf)
}

BufferList.prototype._offset = function _offset (offset) {
  if (offset === 0) {
    return [0, 0]
  }

  let tot = 0

  for (let i = 0; i < this._bufs.length; i++) {
    const _t = tot + this._bufs[i].length
    if (offset < _t || i === this._bufs.length - 1) {
      return [i, offset - tot]
    }
    tot = _t
  }
}

BufferList.prototype._reverseOffset = function (blOffset) {
  const bufferId = blOffset[0]
  let offset = blOffset[1]

  for (let i = 0; i < bufferId; i++) {
    offset += this._bufs[i].length
  }

  return offset
}

BufferList.prototype.get = function get (index) {
  if (index > this.length || index < 0) {
    return undefined
  }

  const offset = this._offset(index)

  return this._bufs[offset[0]][offset[1]]
}

BufferList.prototype.slice = function slice (start, end) {
  if (typeof start === 'number' && start < 0) {
    start += this.length
  }

  if (typeof end === 'number' && end < 0) {
    end += this.length
  }

  return this.copy(null, 0, start, end)
}

BufferList.prototype.copy = function copy (dst, dstStart, srcStart, srcEnd) {
  if (typeof srcStart !== 'number' || srcStart < 0) {
    srcStart = 0
  }

  if (typeof srcEnd !== 'number' || srcEnd > this.length) {
    srcEnd = this.length
  }

  if (srcStart >= this.length) {
    return dst || Buffer.alloc(0)
  }

  if (srcEnd <= 0) {
    return dst || Buffer.alloc(0)
  }

  const copy = !!dst
  const off = this._offset(srcStart)
  const len = srcEnd - srcStart
  let bytes = len
  let bufoff = (copy && dstStart) || 0
  let start = off[1]

  // copy/slice everything
  if (srcStart === 0 && srcEnd === this.length) {
    if (!copy) {
      // slice, but full concat if multiple buffers
      return this._bufs.length === 1
        ? this._bufs[0]
        : Buffer.concat(this._bufs, this.length)
    }

    // copy, need to copy individual buffers
    for (let i = 0; i < this._bufs.length; i++) {
      this._bufs[i].copy(dst, bufoff)
      bufoff += this._bufs[i].length
    }

    return dst
  }

  // easy, cheap case where it's a subset of one of the buffers
  if (bytes <= this._bufs[off[0]].length - start) {
    return copy
      ? this._bufs[off[0]].copy(dst, dstStart, start, start + bytes)
      : this._bufs[off[0]].slice(start, start + bytes)
  }

  if (!copy) {
    // a slice, we need something to copy in to
    dst = Buffer.allocUnsafe(len)
  }

  for (let i = off[0]; i < this._bufs.length; i++) {
    const l = this._bufs[i].length - start

    if (bytes > l) {
      this._bufs[i].copy(dst, bufoff, start)
      bufoff += l
    } else {
      this._bufs[i].copy(dst, bufoff, start, start + bytes)
      bufoff += l
      break
    }

    bytes -= l

    if (start) {
      start = 0
    }
  }

  // safeguard so that we don't return uninitialized memory
  if (dst.length > bufoff) return dst.slice(0, bufoff)

  return dst
}

BufferList.prototype.shallowSlice = function shallowSlice (start, end) {
  start = start || 0
  end = typeof end !== 'number' ? this.length : end

  if (start < 0) {
    start += this.length
  }

  if (end < 0) {
    end += this.length
  }

  if (start === end) {
    return this._new()
  }

  const startOffset = this._offset(start)
  const endOffset = this._offset(end)
  const buffers = this._bufs.slice(startOffset[0], endOffset[0] + 1)

  if (endOffset[1] === 0) {
    buffers.pop()
  } else {
    buffers[buffers.length - 1] = buffers[buffers.length - 1].slice(0, endOffset[1])
  }

  if (startOffset[1] !== 0) {
    buffers[0] = buffers[0].slice(startOffset[1])
  }

  return this._new(buffers)
}

BufferList.prototype.toString = function toString (encoding, start, end) {
  return this.slice(start, end).toString(encoding)
}

BufferList.prototype.consume = function consume (bytes) {
  // first, normalize the argument, in accordance with how Buffer does it
  bytes = Math.trunc(bytes)
  // do nothing if not a positive number
  if (Number.isNaN(bytes) || bytes <= 0) return this

  while (this._bufs.length) {
    if (bytes >= this._bufs[0].length) {
      bytes -= this._bufs[0].length
      this.length -= this._bufs[0].length
      this._bufs.shift()
    } else {
      this._bufs[0] = this._bufs[0].slice(bytes)
      this.length -= bytes
      break
    }
  }

  return this
}

BufferList.prototype.duplicate = function duplicate () {
  const copy = this._new()

  for (let i = 0; i < this._bufs.length; i++) {
    copy.append(this._bufs[i])
  }

  return copy
}

BufferList.prototype.append = function append (buf) {
  if (buf == null) {
    return this
  }

  if (buf.buffer) {
    // append a view of the underlying ArrayBuffer
    this._appendBuffer(Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength))
  } else if (Array.isArray(buf)) {
    for (let i = 0; i < buf.length; i++) {
      this.append(buf[i])
    }
  } else if (this._isBufferList(buf)) {
    // unwrap argument into individual BufferLists
    for (let i = 0; i < buf._bufs.length; i++) {
      this.append(buf._bufs[i])
    }
  } else {
    // coerce number arguments to strings, since Buffer(number) does
    // uninitialized memory allocation
    if (typeof buf === 'number') {
      buf = buf.toString()
    }

    this._appendBuffer(Buffer.from(buf))
  }

  return this
}

BufferList.prototype._appendBuffer = function appendBuffer (buf) {
  this._bufs.push(buf)
  this.length += buf.length
}

BufferList.prototype.indexOf = function (search, offset, encoding) {
  if (encoding === undefined && typeof offset === 'string') {
    encoding = offset
    offset = undefined
  }

  if (typeof search === 'function' || Array.isArray(search)) {
    throw new TypeError('The "value" argument must be one of type string, Buffer, BufferList, or Uint8Array.')
  } else if (typeof search === 'number') {
    search = Buffer.from([search])
  } else if (typeof search === 'string') {
    search = Buffer.from(search, encoding)
  } else if (this._isBufferList(search)) {
    search = search.slice()
  } else if (Array.isArray(search.buffer)) {
    search = Buffer.from(search.buffer, search.byteOffset, search.byteLength)
  } else if (!Buffer.isBuffer(search)) {
    search = Buffer.from(search)
  }

  offset = Number(offset || 0)

  if (isNaN(offset)) {
    offset = 0
  }

  if (offset < 0) {
    offset = this.length + offset
  }

  if (offset < 0) {
    offset = 0
  }

  if (search.length === 0) {
    return offset > this.length ? this.length : offset
  }

  const blOffset = this._offset(offset)
  let blIndex = blOffset[0] // index of which internal buffer we're working on
  let buffOffset = blOffset[1] // offset of the internal buffer we're working on

  // scan over each buffer
  for (; blIndex < this._bufs.length; blIndex++) {
    const buff = this._bufs[blIndex]

    while (buffOffset < buff.length) {
      const availableWindow = buff.length - buffOffset

      if (availableWindow >= search.length) {
        const nativeSearchResult = buff.indexOf(search, buffOffset)

        if (nativeSearchResult !== -1) {
          return this._reverseOffset([blIndex, nativeSearchResult])
        }

        buffOffset = buff.length - search.length + 1 // end of native search window
      } else {
        const revOffset = this._reverseOffset([blIndex, buffOffset])

        if (this._match(revOffset, search)) {
          return revOffset
        }

        buffOffset++
      }
    }

    buffOffset = 0
  }

  return -1
}

BufferList.prototype._match = function (offset, search) {
  if (this.length - offset < search.length) {
    return false
  }

  for (let searchOffset = 0; searchOffset < search.length; searchOffset++) {
    if (this.get(offset + searchOffset) !== search[searchOffset]) {
      return false
    }
  }
  return true
}

;(function () {
  const methods = {
    readDoubleBE: 8,
    readDoubleLE: 8,
    readFloatBE: 4,
    readFloatLE: 4,
    readInt32BE: 4,
    readInt32LE: 4,
    readUInt32BE: 4,
    readUInt32LE: 4,
    readInt16BE: 2,
    readInt16LE: 2,
    readUInt16BE: 2,
    readUInt16LE: 2,
    readInt8: 1,
    readUInt8: 1,
    readIntBE: null,
    readIntLE: null,
    readUIntBE: null,
    readUIntLE: null
  }

  for (const m in methods) {
    (function (m) {
      if (methods[m] === null) {
        BufferList.prototype[m] = function (offset, byteLength) {
          return this.slice(offset, offset + byteLength)[m](0, byteLength)
        }
      } else {
        BufferList.prototype[m] = function (offset = 0) {
          return this.slice(offset, offset + methods[m])[m](0)
        }
      }
    }(m))
  }
}())

// Used internally by the class and also as an indicator of this object being
// a `BufferList`. It's not possible to use `instanceof BufferList` in a browser
// environment because there could be multiple different copies of the
// BufferList class and some `BufferList`s might be `BufferList`s.
BufferList.prototype._isBufferList = function _isBufferList (b) {
  return b instanceof BufferList || BufferList.isBufferList(b)
}

BufferList.isBufferList = function isBufferList (b) {
  return b != null && b[symbol]
}

module.exports = BufferList


/***/ }),

/***/ 336:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {



const DuplexStream = (__nccwpck_require__(1642).Duplex)
const inherits = __nccwpck_require__(4124)
const BufferList = __nccwpck_require__(3664)

function BufferListStream (callback) {
  if (!(this instanceof BufferListStream)) {
    return new BufferListStream(callback)
  }

  if (typeof callback === 'function') {
    this._callback = callback

    const piper = function piper (err) {
      if (this._callback) {
        this._callback(err)
        this._callback = null
      }
    }.bind(this)

    this.on('pipe', function onPipe (src) {
      src.on('error', piper)
    })
    this.on('unpipe', function onUnpipe (src) {
      src.removeListener('error', piper)
    })

    callback = null
  }

  BufferList._init.call(this, callback)
  DuplexStream.call(this)
}

inherits(BufferListStream, DuplexStream)
Object.assign(BufferListStream.prototype, BufferList.prototype)

BufferListStream.prototype._new = function _new (callback) {
  return new BufferListStream(callback)
}

BufferListStream.prototype._write = function _write (buf, encoding, callback) {
  this._appendBuffer(buf)

  if (typeof callback === 'function') {
    callback()
  }
}

BufferListStream.prototype._read = function _read (size) {
  if (!this.length) {
    return this.push(null)
  }

  size = Math.min(size, this.length)
  this.push(this.slice(0, size))
  this.consume(size)
}

BufferListStream.prototype.end = function end (chunk) {
  DuplexStream.prototype.end.call(this, chunk)

  if (this._callback) {
    this._callback(null, this.slice())
    this._callback = null
  }
}

BufferListStream.prototype._destroy = function _destroy (err, cb) {
  this._bufs.length = 0
  this.length = 0
  cb(err)
}

BufferListStream.prototype._isBufferList = function _isBufferList (b) {
  return b instanceof BufferListStream || b instanceof BufferList || BufferListStream.isBufferList(b)
}

BufferListStream.isBufferList = BufferList.isBufferList

module.exports = BufferListStream
module.exports.BufferListStream = BufferListStream
module.exports.BufferList = BufferList


/***/ }),

/***/ 3717:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var concatMap = __nccwpck_require__(6891);
var balanced = __nccwpck_require__(9417);

module.exports = expandTop;

var escSlash = '\0SLASH'+Math.random()+'\0';
var escOpen = '\0OPEN'+Math.random()+'\0';
var escClose = '\0CLOSE'+Math.random()+'\0';
var escComma = '\0COMMA'+Math.random()+'\0';
var escPeriod = '\0PERIOD'+Math.random()+'\0';

function numeric(str) {
  return parseInt(str, 10) == str
    ? parseInt(str, 10)
    : str.charCodeAt(0);
}

function escapeBraces(str) {
  return str.split('\\\\').join(escSlash)
            .split('\\{').join(escOpen)
            .split('\\}').join(escClose)
            .split('\\,').join(escComma)
            .split('\\.').join(escPeriod);
}

function unescapeBraces(str) {
  return str.split(escSlash).join('\\')
            .split(escOpen).join('{')
            .split(escClose).join('}')
            .split(escComma).join(',')
            .split(escPeriod).join('.');
}


// Basically just str.split(","), but handling cases
// where we have nested braced sections, which should be
// treated as individual members, like {a,{b,c},d}
function parseCommaParts(str) {
  if (!str)
    return [''];

  var parts = [];
  var m = balanced('{', '}', str);

  if (!m)
    return str.split(',');

  var pre = m.pre;
  var body = m.body;
  var post = m.post;
  var p = pre.split(',');

  p[p.length-1] += '{' + body + '}';
  var postParts = parseCommaParts(post);
  if (post.length) {
    p[p.length-1] += postParts.shift();
    p.push.apply(p, postParts);
  }

  parts.push.apply(parts, p);

  return parts;
}

function expandTop(str) {
  if (!str)
    return [];

  // I don't know why Bash 4.3 does this, but it does.
  // Anything starting with {} will have the first two bytes preserved
  // but *only* at the top level, so {},a}b will not expand to anything,
  // but a{},b}c will be expanded to [a}c,abc].
  // One could argue that this is a bug in Bash, but since the goal of
  // this module is to match Bash's rules, we escape a leading {}
  if (str.substr(0, 2) === '{}') {
    str = '\\{\\}' + str.substr(2);
  }

  return expand(escapeBraces(str), true).map(unescapeBraces);
}

function identity(e) {
  return e;
}

function embrace(str) {
  return '{' + str + '}';
}
function isPadded(el) {
  return /^-?0\d/.test(el);
}

function lte(i, y) {
  return i <= y;
}
function gte(i, y) {
  return i >= y;
}

function expand(str, isTop) {
  var expansions = [];

  var m = balanced('{', '}', str);
  if (!m || /\$$/.test(m.pre)) return [str];

  var isNumericSequence = /^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(m.body);
  var isAlphaSequence = /^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(m.body);
  var isSequence = isNumericSequence || isAlphaSequence;
  var isOptions = m.body.indexOf(',') >= 0;
  if (!isSequence && !isOptions) {
    // {a},b}
    if (m.post.match(/,.*\}/)) {
      str = m.pre + '{' + m.body + escClose + m.post;
      return expand(str);
    }
    return [str];
  }

  var n;
  if (isSequence) {
    n = m.body.split(/\.\./);
  } else {
    n = parseCommaParts(m.body);
    if (n.length === 1) {
      // x{{a,b}}y ==> x{a}y x{b}y
      n = expand(n[0], false).map(embrace);
      if (n.length === 1) {
        var post = m.post.length
          ? expand(m.post, false)
          : [''];
        return post.map(function(p) {
          return m.pre + n[0] + p;
        });
      }
    }
  }

  // at this point, n is the parts, and we know it's not a comma set
  // with a single entry.

  // no need to expand pre, since it is guaranteed to be free of brace-sets
  var pre = m.pre;
  var post = m.post.length
    ? expand(m.post, false)
    : [''];

  var N;

  if (isSequence) {
    var x = numeric(n[0]);
    var y = numeric(n[1]);
    var width = Math.max(n[0].length, n[1].length)
    var incr = n.length == 3
      ? Math.abs(numeric(n[2]))
      : 1;
    var test = lte;
    var reverse = y < x;
    if (reverse) {
      incr *= -1;
      test = gte;
    }
    var pad = n.some(isPadded);

    N = [];

    for (var i = x; test(i, y); i += incr) {
      var c;
      if (isAlphaSequence) {
        c = String.fromCharCode(i);
        if (c === '\\')
          c = '';
      } else {
        c = String(i);
        if (pad) {
          var need = width - c.length;
          if (need > 0) {
            var z = new Array(need + 1).join('0');
            if (i < 0)
              c = '-' + z + c.slice(1);
            else
              c = z + c;
          }
        }
      }
      N.push(c);
    }
  } else {
    N = concatMap(n, function(el) { return expand(el, false) });
  }

  for (var j = 0; j < N.length; j++) {
    for (var k = 0; k < post.length; k++) {
      var expansion = pre + N[j] + post[k];
      if (!isTop || isSequence || expansion)
        expansions.push(expansion);
    }
  }

  return expansions;
}



/***/ }),

/***/ 4794:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var Buffer = (__nccwpck_require__(4300).Buffer);

var CRC_TABLE = [
  0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419,
  0x706af48f, 0xe963a535, 0x9e6495a3, 0x0edb8832, 0x79dcb8a4,
  0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07,
  0x90bf1d91, 0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de,
  0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7, 0x136c9856,
  0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9,
  0xfa0f3d63, 0x8d080df5, 0x3b6e20c8, 0x4c69105e, 0xd56041e4,
  0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b,
  0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3,
  0x45df5c75, 0xdcd60dcf, 0xabd13d59, 0x26d930ac, 0x51de003a,
  0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599,
  0xb8bda50f, 0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924,
  0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d, 0x76dc4190,
  0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f,
  0x9fbfe4a5, 0xe8b8d433, 0x7807c9a2, 0x0f00f934, 0x9609a88e,
  0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01,
  0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed,
  0x1b01a57b, 0x8208f4c1, 0xf50fc457, 0x65b0d9c6, 0x12b7e950,
  0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3,
  0xfbd44c65, 0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2,
  0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb, 0x4369e96a,
  0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5,
  0xaa0a4c5f, 0xdd0d7cc9, 0x5005713c, 0x270241aa, 0xbe0b1010,
  0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,
  0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17,
  0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad, 0xedb88320, 0x9abfb3b6,
  0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615,
  0x73dc1683, 0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8,
  0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1, 0xf00f9344,
  0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb,
  0x196c3671, 0x6e6b06e7, 0xfed41b76, 0x89d32be0, 0x10da7a5a,
  0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5,
  0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1,
  0xa6bc5767, 0x3fb506dd, 0x48b2364b, 0xd80d2bda, 0xaf0a1b4c,
  0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef,
  0x4669be79, 0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236,
  0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f, 0xc5ba3bbe,
  0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31,
  0x2cd99e8b, 0x5bdeae1d, 0x9b64c2b0, 0xec63f226, 0x756aa39c,
  0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713,
  0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b,
  0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21, 0x86d3d2d4, 0xf1d4e242,
  0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1,
  0x18b74777, 0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c,
  0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45, 0xa00ae278,
  0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7,
  0x4969474d, 0x3e6e77db, 0xaed16a4a, 0xd9d65adc, 0x40df0b66,
  0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,
  0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605,
  0xcdd70693, 0x54de5729, 0x23d967bf, 0xb3667a2e, 0xc4614ab8,
  0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b,
  0x2d02ef8d
];

if (typeof Int32Array !== 'undefined') {
  CRC_TABLE = new Int32Array(CRC_TABLE);
}

function ensureBuffer(input) {
  if (Buffer.isBuffer(input)) {
    return input;
  }

  var hasNewBufferAPI =
      typeof Buffer.alloc === "function" &&
      typeof Buffer.from === "function";

  if (typeof input === "number") {
    return hasNewBufferAPI ? Buffer.alloc(input) : new Buffer(input);
  }
  else if (typeof input === "string") {
    return hasNewBufferAPI ? Buffer.from(input) : new Buffer(input);
  }
  else {
    throw new Error("input must be buffer, number, or string, received " +
                    typeof input);
  }
}

function bufferizeInt(num) {
  var tmp = ensureBuffer(4);
  tmp.writeInt32BE(num, 0);
  return tmp;
}

function _crc32(buf, previous) {
  buf = ensureBuffer(buf);
  if (Buffer.isBuffer(previous)) {
    previous = previous.readUInt32BE(0);
  }
  var crc = ~~previous ^ -1;
  for (var n = 0; n < buf.length; n++) {
    crc = CRC_TABLE[(crc ^ buf[n]) & 0xff] ^ (crc >>> 8);
  }
  return (crc ^ -1);
}

function crc32() {
  return bufferizeInt(_crc32.apply(null, arguments));
}
crc32.signed = function () {
  return _crc32.apply(null, arguments);
};
crc32.unsigned = function () {
  return _crc32.apply(null, arguments) >>> 0;
};

module.exports = crc32;


/***/ }),

/***/ 5536:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {



const fs = __nccwpck_require__(7147)
const bs = __nccwpck_require__(9326)
const { promisify } = __nccwpck_require__(3837)
const readFile = promisify(fs.readFile)

module.exports = class CharWidthTableConsumer {
  constructor(data) {
    this.data = data
    this.emWidth = this.widthOf('m')
  }

  static create(data) {
    return new CharWidthTableConsumer(data)
  }

  static async load(path) {
    const json = await readFile(path)
    const data = JSON.parse(json)
    return new CharWidthTableConsumer(data)
  }

  static loadSync(path) {
    const json = fs.readFileSync(path)
    const data = JSON.parse(json)
    return new CharWidthTableConsumer(data)
  }

  static isControlChar(charCode) {
    return charCode <= 31 || charCode === 127
  }

  widthOfCharCode(charCode) {
    if (this.constructor.isControlChar(charCode)) {
      return 0.0
    }

    // https://github.com/darkskyapp/binary-search/pull/18
    const index = bs(this.data, charCode, ([lower], needle) => lower - needle)
    if (index >= 0) {
      // The index matches the beginning of a range.
      const [, , width] = this.data[index]
      return width
    } else {
      // The index does not match the beginning of a range, which means it
      // should be in the preceeding range A return value of `-x` means the
      // needle would be at `x - 1`, and we want to check the element before
      // that.
      const candidateIndex = -index - 2
      const [lower, upper, width] = this.data[candidateIndex]
      if (charCode >= lower && charCode <= upper) {
        return width
      } else {
        return undefined
      }
    }
  }

  widthOf(text, { guess = true } = {}) {
    // Array.from() will split a string into an array of strings, each of
    // which contains a single code point.
    // https://stackoverflow.com/a/42596897/893113
    return Array.from(text).reduce((accumWidth, char) => {
      const charWidth = this.widthOfCharCode(char.codePointAt(0))
      if (charWidth === undefined) {
        if (guess) {
          return accumWidth + this.emWidth
        } else {
          throw Error(
            `No width available for character code ${char.codePointAt(0)}`
          )
        }
      } else {
        return accumWidth + charWidth
      }
    }, 0.0)
  }
}


/***/ }),

/***/ 7342:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {



const CharWidthTableConsumer = __nccwpck_require__(5536)

const {
  create: createConsumer,
  load: loadConsumer,
  loadSync: loadConsumerSync,
} = CharWidthTableConsumer

module.exports = {
  createConsumer,
  loadConsumer,
  loadConsumerSync,
  CharWidthTableConsumer,
}


/***/ }),

/***/ 9051:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {


const fs = __nccwpck_require__(7147)
const path = __nccwpck_require__(1017)

/* istanbul ignore next */
const LCHOWN = fs.lchown ? 'lchown' : 'chown'
/* istanbul ignore next */
const LCHOWNSYNC = fs.lchownSync ? 'lchownSync' : 'chownSync'

/* istanbul ignore next */
const needEISDIRHandled = fs.lchown &&
  !process.version.match(/v1[1-9]+\./) &&
  !process.version.match(/v10\.[6-9]/)

const lchownSync = (path, uid, gid) => {
  try {
    return fs[LCHOWNSYNC](path, uid, gid)
  } catch (er) {
    if (er.code !== 'ENOENT')
      throw er
  }
}

/* istanbul ignore next */
const chownSync = (path, uid, gid) => {
  try {
    return fs.chownSync(path, uid, gid)
  } catch (er) {
    if (er.code !== 'ENOENT')
      throw er
  }
}

/* istanbul ignore next */
const handleEISDIR =
  needEISDIRHandled ? (path, uid, gid, cb) => er => {
    // Node prior to v10 had a very questionable implementation of
    // fs.lchown, which would always try to call fs.open on a directory
    // Fall back to fs.chown in those cases.
    if (!er || er.code !== 'EISDIR')
      cb(er)
    else
      fs.chown(path, uid, gid, cb)
  }
  : (_, __, ___, cb) => cb

/* istanbul ignore next */
const handleEISDirSync =
  needEISDIRHandled ? (path, uid, gid) => {
    try {
      return lchownSync(path, uid, gid)
    } catch (er) {
      if (er.code !== 'EISDIR')
        throw er
      chownSync(path, uid, gid)
    }
  }
  : (path, uid, gid) => lchownSync(path, uid, gid)

// fs.readdir could only accept an options object as of node v6
const nodeVersion = process.version
let readdir = (path, options, cb) => fs.readdir(path, options, cb)
let readdirSync = (path, options) => fs.readdirSync(path, options)
/* istanbul ignore next */
if (/^v4\./.test(nodeVersion))
  readdir = (path, options, cb) => fs.readdir(path, cb)

const chown = (cpath, uid, gid, cb) => {
  fs[LCHOWN](cpath, uid, gid, handleEISDIR(cpath, uid, gid, er => {
    // Skip ENOENT error
    cb(er && er.code !== 'ENOENT' ? er : null)
  }))
}

const chownrKid = (p, child, uid, gid, cb) => {
  if (typeof child === 'string')
    return fs.lstat(path.resolve(p, child), (er, stats) => {
      // Skip ENOENT error
      if (er)
        return cb(er.code !== 'ENOENT' ? er : null)
      stats.name = child
      chownrKid(p, stats, uid, gid, cb)
    })

  if (child.isDirectory()) {
    chownr(path.resolve(p, child.name), uid, gid, er => {
      if (er)
        return cb(er)
      const cpath = path.resolve(p, child.name)
      chown(cpath, uid, gid, cb)
    })
  } else {
    const cpath = path.resolve(p, child.name)
    chown(cpath, uid, gid, cb)
  }
}


const chownr = (p, uid, gid, cb) => {
  readdir(p, { withFileTypes: true }, (er, children) => {
    // any error other than ENOTDIR or ENOTSUP means it's not readable,
    // or doesn't exist.  give up.
    if (er) {
      if (er.code === 'ENOENT')
        return cb()
      else if (er.code !== 'ENOTDIR' && er.code !== 'ENOTSUP')
        return cb(er)
    }
    if (er || !children.length)
      return chown(p, uid, gid, cb)

    let len = children.length
    let errState = null
    const then = er => {
      if (errState)
        return
      if (er)
        return cb(errState = er)
      if (-- len === 0)
        return chown(p, uid, gid, cb)
    }

    children.forEach(child => chownrKid(p, child, uid, gid, then))
  })
}

const chownrKidSync = (p, child, uid, gid) => {
  if (typeof child === 'string') {
    try {
      const stats = fs.lstatSync(path.resolve(p, child))
      stats.name = child
      child = stats
    } catch (er) {
      if (er.code === 'ENOENT')
        return
      else
        throw er
    }
  }

  if (child.isDirectory())
    chownrSync(path.resolve(p, child.name), uid, gid)

  handleEISDirSync(path.resolve(p, child.name), uid, gid)
}

const chownrSync = (p, uid, gid) => {
  let children
  try {
    children = readdirSync(p, { withFileTypes: true })
  } catch (er) {
    if (er.code === 'ENOENT')
      return
    else if (er.code === 'ENOTDIR' || er.code === 'ENOTSUP')
      return handleEISDirSync(p, uid, gid)
    else
      throw er
  }

  if (children && children.length)
    children.forEach(child => chownrKidSync(p, child, uid, gid))

  return handleEISDirSync(p, uid, gid)
}

module.exports = chownr
chownr.sync = chownrSync


/***/ }),

/***/ 7451:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

/**
 * @license Copyright 2016 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.win32 = exports.wsl = exports.linux = exports.darwin = exports.darwinFast = void 0;
const fs = __nccwpck_require__(7147);
const path = __nccwpck_require__(1017);
const os_1 = __nccwpck_require__(2037);
const child_process_1 = __nccwpck_require__(2081);
const escapeRegExp = __nccwpck_require__(8691);
const log = __nccwpck_require__(8687);
const utils_1 = __nccwpck_require__(80);
const newLineRegex = /\r?\n/;
/**
 * check for MacOS default app paths first to avoid waiting for the slow lsregister command
 */
function darwinFast() {
    const priorityOptions = [
        process.env.CHROME_PATH,
        process.env.LIGHTHOUSE_CHROMIUM_PATH,
        '/Applications/Google Chrome Canary.app/Contents/MacOS/Google Chrome Canary',
        '/Applications/Google Chrome.app/Contents/MacOS/Google Chrome',
    ];
    for (const chromePath of priorityOptions) {
        if (chromePath && canAccess(chromePath))
            return chromePath;
    }
    return darwin()[0];
}
exports.darwinFast = darwinFast;
function darwin() {
    const suffixes = ['/Contents/MacOS/Google Chrome Canary', '/Contents/MacOS/Google Chrome'];
    const LSREGISTER = '/System/Library/Frameworks/CoreServices.framework' +
        '/Versions/A/Frameworks/LaunchServices.framework' +
        '/Versions/A/Support/lsregister';
    const installations = [];
    const customChromePath = resolveChromePath();
    if (customChromePath) {
        installations.push(customChromePath);
    }
    child_process_1.execSync(`${LSREGISTER} -dump` +
        ' | grep -i \'google chrome\\( canary\\)\\?\\.app\'' +
        ' | awk \'{$1=""; print $0}\'')
        .toString()
        .split(newLineRegex)
        .forEach((inst) => {
        suffixes.forEach(suffix => {
            const execPath = path.join(inst.substring(0, inst.indexOf('.app') + 4).trim(), suffix);
            if (canAccess(execPath) && installations.indexOf(execPath) === -1) {
                installations.push(execPath);
            }
        });
    });
    // Retains one per line to maintain readability.
    // clang-format off
    const home = escapeRegExp(process.env.HOME || os_1.homedir());
    const priorities = [
        { regex: new RegExp(`^${home}/Applications/.*Chrome\\.app`), weight: 50 },
        { regex: new RegExp(`^${home}/Applications/.*Chrome Canary\\.app`), weight: 51 },
        { regex: /^\/Applications\/.*Chrome.app/, weight: 100 },
        { regex: /^\/Applications\/.*Chrome Canary.app/, weight: 101 },
        { regex: /^\/Volumes\/.*Chrome.app/, weight: -2 },
        { regex: /^\/Volumes\/.*Chrome Canary.app/, weight: -1 },
    ];
    if (process.env.LIGHTHOUSE_CHROMIUM_PATH) {
        priorities.unshift({ regex: new RegExp(escapeRegExp(process.env.LIGHTHOUSE_CHROMIUM_PATH)), weight: 150 });
    }
    if (process.env.CHROME_PATH) {
        priorities.unshift({ regex: new RegExp(escapeRegExp(process.env.CHROME_PATH)), weight: 151 });
    }
    // clang-format on
    return sort(installations, priorities);
}
exports.darwin = darwin;
function resolveChromePath() {
    if (canAccess(process.env.CHROME_PATH)) {
        return process.env.CHROME_PATH;
    }
    if (canAccess(process.env.LIGHTHOUSE_CHROMIUM_PATH)) {
        log.warn('ChromeLauncher', 'LIGHTHOUSE_CHROMIUM_PATH is deprecated, use CHROME_PATH env variable instead.');
        return process.env.LIGHTHOUSE_CHROMIUM_PATH;
    }
    return undefined;
}
/**
 * Look for linux executables in 3 ways
 * 1. Look into CHROME_PATH env variable
 * 2. Look into the directories where .desktop are saved on gnome based distro's
 * 3. Look for google-chrome-stable & google-chrome executables by using the which command
 */
function linux() {
    let installations = [];
    // 1. Look into CHROME_PATH env variable
    const customChromePath = resolveChromePath();
    if (customChromePath) {
        installations.push(customChromePath);
    }
    // 2. Look into the directories where .desktop are saved on gnome based distro's
    const desktopInstallationFolders = [
        path.join(os_1.homedir(), '.local/share/applications/'),
        '/usr/share/applications/',
    ];
    desktopInstallationFolders.forEach(folder => {
        installations = installations.concat(findChromeExecutables(folder));
    });
    // Look for google-chrome(-stable) & chromium(-browser) executables by using the which command
    const executables = [
        'google-chrome-stable',
        'google-chrome',
        'chromium-browser',
        'chromium',
    ];
    executables.forEach((executable) => {
        try {
            const chromePath = child_process_1.execFileSync('which', [executable], { stdio: 'pipe' }).toString().split(newLineRegex)[0];
            if (canAccess(chromePath)) {
                installations.push(chromePath);
            }
        }
        catch (e) {
            // Not installed.
        }
    });
    if (!installations.length) {
        throw new utils_1.ChromePathNotSetError();
    }
    const priorities = [
        { regex: /chrome-wrapper$/, weight: 51 },
        { regex: /google-chrome-stable$/, weight: 50 },
        { regex: /google-chrome$/, weight: 49 },
        { regex: /chromium-browser$/, weight: 48 },
        { regex: /chromium$/, weight: 47 },
    ];
    if (process.env.LIGHTHOUSE_CHROMIUM_PATH) {
        priorities.unshift({ regex: new RegExp(escapeRegExp(process.env.LIGHTHOUSE_CHROMIUM_PATH)), weight: 100 });
    }
    if (process.env.CHROME_PATH) {
        priorities.unshift({ regex: new RegExp(escapeRegExp(process.env.CHROME_PATH)), weight: 101 });
    }
    return sort(uniq(installations.filter(Boolean)), priorities);
}
exports.linux = linux;
function wsl() {
    // Manually populate the environment variables assuming it's the default config
    process.env.LOCALAPPDATA = utils_1.getWSLLocalAppDataPath(`${process.env.PATH}`);
    process.env.PROGRAMFILES = utils_1.toWSLPath('C:/Program Files', '/mnt/c/Program Files');
    process.env['PROGRAMFILES(X86)'] =
        utils_1.toWSLPath('C:/Program Files (x86)', '/mnt/c/Program Files (x86)');
    return win32();
}
exports.wsl = wsl;
function win32() {
    const installations = [];
    const suffixes = [
        `${path.sep}Google${path.sep}Chrome SxS${path.sep}Application${path.sep}chrome.exe`,
        `${path.sep}Google${path.sep}Chrome${path.sep}Application${path.sep}chrome.exe`
    ];
    const prefixes = [
        process.env.LOCALAPPDATA, process.env.PROGRAMFILES, process.env['PROGRAMFILES(X86)']
    ].filter(Boolean);
    const customChromePath = resolveChromePath();
    if (customChromePath) {
        installations.push(customChromePath);
    }
    prefixes.forEach(prefix => suffixes.forEach(suffix => {
        const chromePath = path.join(prefix, suffix);
        if (canAccess(chromePath)) {
            installations.push(chromePath);
        }
    }));
    return installations;
}
exports.win32 = win32;
function sort(installations, priorities) {
    const defaultPriority = 10;
    return installations
        // assign priorities
        .map((inst) => {
        for (const pair of priorities) {
            if (pair.regex.test(inst)) {
                return { path: inst, weight: pair.weight };
            }
        }
        return { path: inst, weight: defaultPriority };
    })
        // sort based on priorities
        .sort((a, b) => (b.weight - a.weight))
        // remove priority flag
        .map(pair => pair.path);
}
function canAccess(file) {
    if (!file) {
        return false;
    }
    try {
        fs.accessSync(file);
        return true;
    }
    catch (e) {
        return false;
    }
}
function uniq(arr) {
    return Array.from(new Set(arr));
}
function findChromeExecutables(folder) {
    const argumentsRegex = /(^[^ ]+).*/; // Take everything up to the first space
    const chromeExecRegex = '^Exec=\/.*\/(google-chrome|chrome|chromium)-.*';
    let installations = [];
    if (canAccess(folder)) {
        // Output of the grep & print looks like:
        //    /opt/google/chrome/google-chrome --profile-directory
        //    /home/user/Downloads/chrome-linux/chrome-wrapper %U
        let execPaths;
        // Some systems do not support grep -R so fallback to -r.
        // See https://github.com/GoogleChrome/chrome-launcher/issues/46 for more context.
        try {
            execPaths = child_process_1.execSync(`grep -ER "${chromeExecRegex}" ${folder} | awk -F '=' '{print $2}'`, { stdio: 'pipe' });
        }
        catch (e) {
            execPaths = child_process_1.execSync(`grep -Er "${chromeExecRegex}" ${folder} | awk -F '=' '{print $2}'`, { stdio: 'pipe' });
        }
        execPaths = execPaths.toString()
            .split(newLineRegex)
            .map((execPath) => execPath.replace(argumentsRegex, '$1'));
        execPaths.forEach((execPath) => canAccess(execPath) && installations.push(execPath));
    }
    return installations;
}
//# sourceMappingURL=data:application/json;base64,

/***/ }),

/***/ 8643:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

/**
 * @license Copyright 2016 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getChromePath = exports.killAll = exports.launch = exports.Launcher = void 0;
const fs = __nccwpck_require__(7147);
const net = __nccwpck_require__(1808);
const chromeFinder = __nccwpck_require__(7451);
const random_port_1 = __nccwpck_require__(7641);
const flags_1 = __nccwpck_require__(3986);
const utils_1 = __nccwpck_require__(80);
const child_process_1 = __nccwpck_require__(2081);
const log = __nccwpck_require__(8687);
const isWsl = utils_1.getPlatform() === 'wsl';
const isWindows = utils_1.getPlatform() === 'win32';
const _SIGINT = 'SIGINT';
const _SIGINT_EXIT_CODE = 130;
const _SUPPORTED_PLATFORMS = new Set(['darwin', 'linux', 'win32', 'wsl']);
const instances = new Set();
const sigintListener = () => {
    killAll();
    process.exit(_SIGINT_EXIT_CODE);
};
async function launch(opts = {}) {
    opts.handleSIGINT = utils_1.defaults(opts.handleSIGINT, true);
    const instance = new Launcher(opts);
    // Kill spawned Chrome process in case of ctrl-C.
    if (opts.handleSIGINT && instances.size === 0) {
        process.on(_SIGINT, sigintListener);
    }
    instances.add(instance);
    await instance.launch();
    const kill = async () => {
        instances.delete(instance);
        if (instances.size === 0) {
            process.removeListener(_SIGINT, sigintListener);
        }
        return instance.kill();
    };
    return { pid: instance.pid, port: instance.port, kill, process: instance.chromeProcess };
}
exports.launch = launch;
/** Returns Chrome installation path that chrome-launcher will launch by default. */
function getChromePath() {
    const installation = Launcher.getFirstInstallation();
    if (!installation) {
        throw new utils_1.ChromeNotInstalledError();
    }
    return installation;
}
exports.getChromePath = getChromePath;
function killAll() {
    let errors = [];
    for (const instance of instances) {
        try {
            instance.kill();
            // only delete if kill did not error
            // this means erroring instances remain in the Set
            instances.delete(instance);
        }
        catch (err) {
            errors.push(err);
        }
    }
    return errors;
}
exports.killAll = killAll;
class Launcher {
    constructor(opts = {}, moduleOverrides = {}) {
        this.opts = opts;
        this.tmpDirandPidFileReady = false;
        this.fs = moduleOverrides.fs || fs;
        this.spawn = moduleOverrides.spawn || child_process_1.spawn;
        log.setLevel(utils_1.defaults(this.opts.logLevel, 'silent'));
        // choose the first one (default)
        this.startingUrl = utils_1.defaults(this.opts.startingUrl, 'about:blank');
        this.chromeFlags = utils_1.defaults(this.opts.chromeFlags, []);
        this.prefs = utils_1.defaults(this.opts.prefs, {});
        this.requestedPort = utils_1.defaults(this.opts.port, 0);
        this.chromePath = this.opts.chromePath;
        this.ignoreDefaultFlags = utils_1.defaults(this.opts.ignoreDefaultFlags, false);
        this.connectionPollInterval = utils_1.defaults(this.opts.connectionPollInterval, 500);
        this.maxConnectionRetries = utils_1.defaults(this.opts.maxConnectionRetries, 50);
        this.envVars = utils_1.defaults(opts.envVars, Object.assign({}, process.env));
        if (typeof this.opts.userDataDir === 'boolean') {
            if (!this.opts.userDataDir) {
                this.useDefaultProfile = true;
                this.userDataDir = undefined;
            }
            else {
                throw new utils_1.InvalidUserDataDirectoryError();
            }
        }
        else {
            this.useDefaultProfile = false;
            this.userDataDir = this.opts.userDataDir;
        }
    }
    get flags() {
        const flags = this.ignoreDefaultFlags ? [] : flags_1.DEFAULT_FLAGS.slice();
        flags.push(`--remote-debugging-port=${this.port}`);
        if (!this.ignoreDefaultFlags && utils_1.getPlatform() === 'linux') {
            flags.push('--disable-setuid-sandbox');
        }
        if (!this.useDefaultProfile) {
            // Place Chrome profile in a custom location we'll rm -rf later
            // If in WSL, we need to use the Windows format
            flags.push(`--user-data-dir=${isWsl ? utils_1.toWin32Path(this.userDataDir) : this.userDataDir}`);
        }
        if (process.env.HEADLESS)
            flags.push('--headless');
        flags.push(...this.chromeFlags);
        flags.push(this.startingUrl);
        return flags;
    }
    static defaultFlags() {
        return flags_1.DEFAULT_FLAGS.slice();
    }
    /** Returns the highest priority chrome installation. */
    static getFirstInstallation() {
        if (utils_1.getPlatform() === 'darwin')
            return chromeFinder.darwinFast();
        return chromeFinder[utils_1.getPlatform()]()[0];
    }
    /** Returns all available chrome installations in decreasing priority order. */
    static getInstallations() {
        return chromeFinder[utils_1.getPlatform()]();
    }
    // Wrapper function to enable easy testing.
    makeTmpDir() {
        return utils_1.makeTmpDir();
    }
    prepare() {
        const platform = utils_1.getPlatform();
        if (!_SUPPORTED_PLATFORMS.has(platform)) {
            throw new utils_1.UnsupportedPlatformError();
        }
        this.userDataDir = this.userDataDir || this.makeTmpDir();
        this.outFile = this.fs.openSync(`${this.userDataDir}/chrome-out.log`, 'a');
        this.errFile = this.fs.openSync(`${this.userDataDir}/chrome-err.log`, 'a');
        this.setBrowserPrefs();
        // fix for Node4
        // you can't pass a fd to fs.writeFileSync
        this.pidFile = `${this.userDataDir}/chrome.pid`;
        log.verbose('ChromeLauncher', `created ${this.userDataDir}`);
        this.tmpDirandPidFileReady = true;
    }
    setBrowserPrefs() {
        // don't set prefs if not defined
        if (Object.keys(this.prefs).length === 0) {
            return;
        }
        const preferenceFile = `${this.userDataDir}/Preferences`;
        try {
            if (this.fs.existsSync(preferenceFile)) {
                // overwrite existing file
                const file = this.fs.readFileSync(preferenceFile, 'utf-8');
                const content = JSON.parse(file);
                this.fs.writeFileSync(preferenceFile, JSON.stringify({ ...content, ...this.prefs }), 'utf-8');
            }
            else {
                // create new Preference file
                this.fs.writeFileSync(preferenceFile, JSON.stringify({ ...this.prefs }), 'utf-8');
            }
        }
        catch (err) {
            log.log('ChromeLauncher', `Failed to set browser prefs: ${err.message}`);
        }
    }
    async launch() {
        if (this.requestedPort !== 0) {
            this.port = this.requestedPort;
            // If an explict port is passed first look for an open connection...
            try {
                return await this.isDebuggerReady();
            }
            catch (err) {
                log.log('ChromeLauncher', `No debugging port found on port ${this.port}, launching a new Chrome.`);
            }
        }
        if (this.chromePath === undefined) {
            const installation = Launcher.getFirstInstallation();
            if (!installation) {
                throw new utils_1.ChromeNotInstalledError();
            }
            this.chromePath = installation;
        }
        if (!this.tmpDirandPidFileReady) {
            this.prepare();
        }
        this.pid = await this.spawnProcess(this.chromePath);
        return Promise.resolve();
    }
    async spawnProcess(execPath) {
        const spawnPromise = (async () => {
            if (this.chromeProcess) {
                log.log('ChromeLauncher', `Chrome already running with pid ${this.chromeProcess.pid}.`);
                return this.chromeProcess.pid;
            }
            // If a zero value port is set, it means the launcher
            // is responsible for generating the port number.
            // We do this here so that we can know the port before
            // we pass it into chrome.
            if (this.requestedPort === 0) {
                this.port = await random_port_1.getRandomPort();
            }
            log.verbose('ChromeLauncher', `Launching with command:\n"${execPath}" ${this.flags.join(' ')}`);
            this.chromeProcess = this.spawn(execPath, this.flags, {
                // On non-windows platforms, `detached: true` makes child process a leader of a new
                // process group, making it possible to kill child process tree with `.kill(-pid)` command.
                // @see https://nodejs.org/api/child_process.html#child_process_options_detached
                detached: process.platform !== 'win32',
                stdio: ['ignore', this.outFile, this.errFile],
                env: this.envVars
            });
            if (this.chromeProcess.pid) {
                this.fs.writeFileSync(this.pidFile, this.chromeProcess.pid.toString());
            }
            log.verbose('ChromeLauncher', `Chrome running with pid ${this.chromeProcess.pid} on port ${this.port}.`);
            return this.chromeProcess.pid;
        })();
        const pid = await spawnPromise;
        await this.waitUntilReady();
        return pid;
    }
    cleanup(client) {
        if (client) {
            client.removeAllListeners();
            client.end();
            client.destroy();
            client.unref();
        }
    }
    // resolves if ready, rejects otherwise
    isDebuggerReady() {
        return new Promise((resolve, reject) => {
            const client = net.createConnection(this.port, '127.0.0.1');
            client.once('error', err => {
                this.cleanup(client);
                reject(err);
            });
            client.once('connect', () => {
                this.cleanup(client);
                resolve();
            });
        });
    }
    // resolves when debugger is ready, rejects after 10 polls
    waitUntilReady() {
        const launcher = this;
        return new Promise((resolve, reject) => {
            let retries = 0;
            let waitStatus = 'Waiting for browser.';
            const poll = () => {
                if (retries === 0) {
                    log.log('ChromeLauncher', waitStatus);
                }
                retries++;
                waitStatus += '..';
                log.log('ChromeLauncher', waitStatus);
                launcher.isDebuggerReady()
                    .then(() => {
                    log.log('ChromeLauncher', waitStatus + `${log.greenify(log.tick)}`);
                    resolve();
                })
                    .catch(err => {
                    if (retries > launcher.maxConnectionRetries) {
                        log.error('ChromeLauncher', err.message);
                        const stderr = this.fs.readFileSync(`${this.userDataDir}/chrome-err.log`, { encoding: 'utf-8' });
                        log.error('ChromeLauncher', `Logging contents of ${this.userDataDir}/chrome-err.log`);
                        log.error('ChromeLauncher', stderr);
                        return reject(err);
                    }
                    utils_1.delay(launcher.connectionPollInterval).then(poll);
                });
            };
            poll();
        });
    }
    kill() {
        if (!this.chromeProcess) {
            return;
        }
        this.chromeProcess.on('close', () => {
            delete this.chromeProcess;
            this.destroyTmp();
        });
        log.log('ChromeLauncher', `Killing Chrome instance ${this.chromeProcess.pid}`);
        try {
            if (isWindows) {
                // https://github.com/GoogleChrome/chrome-launcher/issues/266
                const taskkillProc = child_process_1.spawnSync(`taskkill /pid ${this.chromeProcess.pid} /T /F`, { shell: true, encoding: 'utf-8' });
                const { stderr } = taskkillProc;
                if (stderr)
                    log.error('ChromeLauncher', `taskkill stderr`, stderr);
            }
            else {
                if (this.chromeProcess.pid) {
                    process.kill(-this.chromeProcess.pid, 'SIGKILL');
                }
            }
        }
        catch (err) {
            const message = `Chrome could not be killed ${err.message}`;
            log.warn('ChromeLauncher', message);
        }
        this.destroyTmp();
    }
    destroyTmp() {
        // Only clean up the tmp dir if we created it.
        if (this.userDataDir === undefined || this.opts.userDataDir !== undefined) {
            return;
        }
        if (this.outFile) {
            this.fs.closeSync(this.outFile);
            delete this.outFile;
        }
        if (this.errFile) {
            this.fs.closeSync(this.errFile);
            delete this.errFile;
        }
        // backwards support for node v12 + v14.14+
        // https://nodejs.org/api/deprecations.html#DEP0147
        const rmSync = this.fs.rmSync || this.fs.rmdirSync;
        rmSync(this.userDataDir, { recursive: true, force: true, maxRetries: 10 });
    }
}
exports.Launcher = Launcher;
;
exports["default"] = Launcher;
//# sourceMappingURL=data:application/json;base64,

/***/ }),

/***/ 3986:
/***/ ((__unused_webpack_module, exports) => {

/**
 * @license Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DEFAULT_FLAGS = void 0;
// https://github.com/GoogleChrome/chrome-launcher/blob/master/docs/chrome-flags-for-tools.md
exports.DEFAULT_FLAGS = [
    // Disable built-in Google Translate service
    '--disable-features=Translate',
    // Disable all chrome extensions
    '--disable-extensions',
    // Disable some extensions that aren't affected by --disable-extensions
    '--disable-component-extensions-with-background-pages',
    // Disable various background network services, including extension updating,
    //   safe browsing service, upgrade detector, translate, UMA
    '--disable-background-networking',
    // Don't update the browser 'components' listed at chrome://components/
    '--disable-component-update',
    // Disables client-side phishing detection.
    '--disable-client-side-phishing-detection',
    // Disable syncing to a Google account
    '--disable-sync',
    // Disable reporting to UMA, but allows for collection
    '--metrics-recording-only',
    // Disable installation of default apps on first run
    '--disable-default-apps',
    // Mute any audio
    '--mute-audio',
    // Disable the default browser check, do not prompt to set it as such
    '--no-default-browser-check',
    // Skip first run wizards
    '--no-first-run',
    // Disable backgrounding renders for occluded windows
    '--disable-backgrounding-occluded-windows',
    // Disable renderer process backgrounding
    '--disable-renderer-backgrounding',
    // Disable task throttling of timer tasks from background pages.
    '--disable-background-timer-throttling',
    // Disable the default throttling of IPC between renderer & browser processes.
    '--disable-ipc-flooding-protection',
    // Avoid potential instability of using Gnome Keyring or KDE wallet. crbug.com/571003 crbug.com/991424
    '--password-store=basic',
    // Use mock keychain on Mac to prevent blocking permissions dialogs
    '--use-mock-keychain',
    // Disable background tracing (aka slow reports & deep reports) to avoid 'Tracing already started'
    '--force-fieldtrials=*BackgroundTracing/default/',
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmxhZ3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvZmxhZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUNILFlBQVksQ0FBQzs7O0FBRWIsNkZBQTZGO0FBRWhGLFFBQUEsYUFBYSxHQUEwQjtJQUNsRCw0Q0FBNEM7SUFDNUMsOEJBQThCO0lBQzlCLGdDQUFnQztJQUNoQyxzQkFBc0I7SUFDdEIsdUVBQXVFO0lBQ3ZFLHNEQUFzRDtJQUN0RCw2RUFBNkU7SUFDN0UsNERBQTREO0lBQzVELGlDQUFpQztJQUNqQyx1RUFBdUU7SUFDdkUsNEJBQTRCO0lBQzVCLDJDQUEyQztJQUMzQywwQ0FBMEM7SUFDMUMsc0NBQXNDO0lBQ3RDLGdCQUFnQjtJQUNoQixzREFBc0Q7SUFDdEQsMEJBQTBCO0lBQzFCLG9EQUFvRDtJQUNwRCx3QkFBd0I7SUFDeEIsaUJBQWlCO0lBQ2pCLGNBQWM7SUFDZCxxRUFBcUU7SUFDckUsNEJBQTRCO0lBQzVCLHlCQUF5QjtJQUN6QixnQkFBZ0I7SUFDaEIscURBQXFEO0lBQ3JELDBDQUEwQztJQUMxQyx5Q0FBeUM7SUFDekMsa0NBQWtDO0lBQ2xDLGdFQUFnRTtJQUNoRSx1Q0FBdUM7SUFDdkMsOEVBQThFO0lBQzlFLG1DQUFtQztJQUNuQyxzR0FBc0c7SUFDdEcsd0JBQXdCO0lBQ3hCLG1FQUFtRTtJQUNuRSxxQkFBcUI7SUFDckIsa0dBQWtHO0lBQ2xHLGlEQUFpRDtDQUNsRCxDQUFDIn0=

/***/ }),

/***/ 8355:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__nccwpck_require__(8643), exports);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsb0RBQWtDIn0=

/***/ }),

/***/ 7641:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

/**
 * @license Copyright 2016 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getRandomPort = void 0;
const http_1 = __nccwpck_require__(3685);
/**
 * Return a random, unused port.
 */
function getRandomPort() {
    return new Promise((resolve, reject) => {
        const server = http_1.createServer();
        server.listen(0);
        server.once('listening', () => {
            const { port } = server.address();
            server.close(() => resolve(port));
        });
        server.once('error', reject);
    });
}
exports.getRandomPort = getRandomPort;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFuZG9tLXBvcnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvcmFuZG9tLXBvcnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUNILFlBQVksQ0FBQzs7O0FBRWIsK0JBQWtDO0FBR2xDOztHQUVHO0FBQ0gsU0FBZ0IsYUFBYTtJQUMzQixPQUFPLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxFQUFFO1FBQ3JDLE1BQU0sTUFBTSxHQUFHLG1CQUFZLEVBQUUsQ0FBQztRQUM5QixNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2pCLE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLEdBQUcsRUFBRTtZQUM1QixNQUFNLEVBQUMsSUFBSSxFQUFDLEdBQUcsTUFBTSxDQUFDLE9BQU8sRUFBaUIsQ0FBQztZQUMvQyxNQUFNLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ3BDLENBQUMsQ0FBQyxDQUFDO1FBQ0gsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDL0IsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDO0FBVkQsc0NBVUMifQ==

/***/ }),

/***/ 80:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

/**
 * @license Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getWSLLocalAppDataPath = exports.toWSLPath = exports.toWin32Path = exports.makeTmpDir = exports.getPlatform = exports.ChromeNotInstalledError = exports.UnsupportedPlatformError = exports.InvalidUserDataDirectoryError = exports.ChromePathNotSetError = exports.LauncherError = exports.delay = exports.defaults = void 0;
const path_1 = __nccwpck_require__(1017);
const child_process_1 = __nccwpck_require__(2081);
const fs_1 = __nccwpck_require__(7147);
const isWsl = __nccwpck_require__(7030);
function defaults(val, def) {
    return typeof val === 'undefined' ? def : val;
}
exports.defaults = defaults;
async function delay(time) {
    return new Promise(resolve => setTimeout(resolve, time));
}
exports.delay = delay;
class LauncherError extends Error {
    constructor(message = 'Unexpected error', code) {
        super();
        this.message = message;
        this.code = code;
        this.stack = new Error().stack;
        return this;
    }
}
exports.LauncherError = LauncherError;
class ChromePathNotSetError extends LauncherError {
    constructor() {
        super(...arguments);
        this.message = 'The CHROME_PATH environment variable must be set to a Chrome/Chromium executable no older than Chrome stable.';
        this.code = "ERR_LAUNCHER_PATH_NOT_SET" /* ERR_LAUNCHER_PATH_NOT_SET */;
    }
}
exports.ChromePathNotSetError = ChromePathNotSetError;
class InvalidUserDataDirectoryError extends LauncherError {
    constructor() {
        super(...arguments);
        this.message = 'userDataDir must be false or a path.';
        this.code = "ERR_LAUNCHER_INVALID_USER_DATA_DIRECTORY" /* ERR_LAUNCHER_INVALID_USER_DATA_DIRECTORY */;
    }
}
exports.InvalidUserDataDirectoryError = InvalidUserDataDirectoryError;
class UnsupportedPlatformError extends LauncherError {
    constructor() {
        super(...arguments);
        this.message = `Platform ${getPlatform()} is not supported.`;
        this.code = "ERR_LAUNCHER_UNSUPPORTED_PLATFORM" /* ERR_LAUNCHER_UNSUPPORTED_PLATFORM */;
    }
}
exports.UnsupportedPlatformError = UnsupportedPlatformError;
class ChromeNotInstalledError extends LauncherError {
    constructor() {
        super(...arguments);
        this.message = 'No Chrome installations found.';
        this.code = "ERR_LAUNCHER_NOT_INSTALLED" /* ERR_LAUNCHER_NOT_INSTALLED */;
    }
}
exports.ChromeNotInstalledError = ChromeNotInstalledError;
function getPlatform() {
    return isWsl ? 'wsl' : process.platform;
}
exports.getPlatform = getPlatform;
function makeTmpDir() {
    switch (getPlatform()) {
        case 'darwin':
        case 'linux':
            return makeUnixTmpDir();
        case 'wsl':
            // We populate the user's Windows temp dir so the folder is correctly created later
            process.env.TEMP = getWSLLocalAppDataPath(`${process.env.PATH}`);
        case 'win32':
            return makeWin32TmpDir();
        default:
            throw new UnsupportedPlatformError();
    }
}
exports.makeTmpDir = makeTmpDir;
function toWinDirFormat(dir = '') {
    const results = /\/mnt\/([a-z])\//.exec(dir);
    if (!results) {
        return dir;
    }
    const driveLetter = results[1];
    return dir.replace(`/mnt/${driveLetter}/`, `${driveLetter.toUpperCase()}:\\`)
        .replace(/\//g, '\\');
}
function toWin32Path(dir = '') {
    if (/[a-z]:\\/iu.test(dir)) {
        return dir;
    }
    try {
        return child_process_1.execFileSync('wslpath', ['-w', dir]).toString().trim();
    }
    catch {
        return toWinDirFormat(dir);
    }
}
exports.toWin32Path = toWin32Path;
function toWSLPath(dir, fallback) {
    try {
        return child_process_1.execFileSync('wslpath', ['-u', dir]).toString().trim();
    }
    catch {
        return fallback;
    }
}
exports.toWSLPath = toWSLPath;
function getLocalAppDataPath(path) {
    const userRegExp = /\/mnt\/([a-z])\/Users\/([^\/:]+)\/AppData\//;
    const results = userRegExp.exec(path) || [];
    return `/mnt/${results[1]}/Users/${results[2]}/AppData/Local`;
}
function getWSLLocalAppDataPath(path) {
    const userRegExp = /\/([a-z])\/Users\/([^\/:]+)\/AppData\//;
    const results = userRegExp.exec(path) || [];
    return toWSLPath(`${results[1]}:\\Users\\${results[2]}\\AppData\\Local`, getLocalAppDataPath(path));
}
exports.getWSLLocalAppDataPath = getWSLLocalAppDataPath;
function makeUnixTmpDir() {
    return child_process_1.execSync('mktemp -d -t lighthouse.XXXXXXX').toString().trim();
}
function makeWin32TmpDir() {
    const winTmpPath = process.env.TEMP || process.env.TMP ||
        (process.env.SystemRoot || process.env.windir) + '\\temp';
    const randomNumber = Math.floor(Math.random() * 9e7 + 1e7);
    const tmpdir = path_1.join(winTmpPath, 'lighthouse.' + randomNumber);
    fs_1.mkdirSync(tmpdir, { recursive: true });
    return tmpdir;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUNILFlBQVksQ0FBQzs7O0FBRWIsK0JBQTBCO0FBQzFCLGlEQUFxRDtBQUNyRCwyQkFBNkI7QUFDN0IsZ0NBQWlDO0FBU2pDLFNBQWdCLFFBQVEsQ0FBSSxHQUFnQixFQUFFLEdBQU07SUFDbEQsT0FBTyxPQUFPLEdBQUcsS0FBSyxXQUFXLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDO0FBQ2hELENBQUM7QUFGRCw0QkFFQztBQUVNLEtBQUssVUFBVSxLQUFLLENBQUMsSUFBWTtJQUN0QyxPQUFPLElBQUksT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBQzNELENBQUM7QUFGRCxzQkFFQztBQUVELE1BQWEsYUFBYyxTQUFRLEtBQUs7SUFDdEMsWUFBbUIsVUFBa0Isa0JBQWtCLEVBQVMsSUFBYTtRQUMzRSxLQUFLLEVBQUUsQ0FBQztRQURTLFlBQU8sR0FBUCxPQUFPLENBQTZCO1FBQVMsU0FBSSxHQUFKLElBQUksQ0FBUztRQUUzRSxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksS0FBSyxFQUFFLENBQUMsS0FBSyxDQUFDO1FBQy9CLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztDQUNGO0FBTkQsc0NBTUM7QUFFRCxNQUFhLHFCQUFzQixTQUFRLGFBQWE7SUFBeEQ7O1FBQ0UsWUFBTyxHQUNILCtHQUErRyxDQUFDO1FBQ3BILFNBQUksK0RBQThDO0lBQ3BELENBQUM7Q0FBQTtBQUpELHNEQUlDO0FBRUQsTUFBYSw2QkFBOEIsU0FBUSxhQUFhO0lBQWhFOztRQUNFLFlBQU8sR0FBRyxzQ0FBc0MsQ0FBQztRQUNqRCxTQUFJLDZGQUE2RDtJQUNuRSxDQUFDO0NBQUE7QUFIRCxzRUFHQztBQUVELE1BQWEsd0JBQXlCLFNBQVEsYUFBYTtJQUEzRDs7UUFDRSxZQUFPLEdBQUcsWUFBWSxXQUFXLEVBQUUsb0JBQW9CLENBQUM7UUFDeEQsU0FBSSwrRUFBc0Q7SUFDNUQsQ0FBQztDQUFBO0FBSEQsNERBR0M7QUFFRCxNQUFhLHVCQUF3QixTQUFRLGFBQWE7SUFBMUQ7O1FBQ0UsWUFBTyxHQUFHLGdDQUFnQyxDQUFDO1FBQzNDLFNBQUksaUVBQStDO0lBQ3JELENBQUM7Q0FBQTtBQUhELDBEQUdDO0FBRUQsU0FBZ0IsV0FBVztJQUN6QixPQUFPLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDO0FBQzFDLENBQUM7QUFGRCxrQ0FFQztBQUVELFNBQWdCLFVBQVU7SUFDeEIsUUFBUSxXQUFXLEVBQUUsRUFBRTtRQUNyQixLQUFLLFFBQVEsQ0FBQztRQUNkLEtBQUssT0FBTztZQUNWLE9BQU8sY0FBYyxFQUFFLENBQUM7UUFDMUIsS0FBSyxLQUFLO1lBQ1IsbUZBQW1GO1lBQ25GLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxHQUFHLHNCQUFzQixDQUFDLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO1FBQ25FLEtBQUssT0FBTztZQUNWLE9BQU8sZUFBZSxFQUFFLENBQUM7UUFDM0I7WUFDRSxNQUFNLElBQUksd0JBQXdCLEVBQUUsQ0FBQztLQUN4QztBQUNILENBQUM7QUFiRCxnQ0FhQztBQUVELFNBQVMsY0FBYyxDQUFDLE1BQWMsRUFBRTtJQUN0QyxNQUFNLE9BQU8sR0FBRyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFFN0MsSUFBSSxDQUFDLE9BQU8sRUFBRTtRQUNaLE9BQU8sR0FBRyxDQUFDO0tBQ1o7SUFFRCxNQUFNLFdBQVcsR0FBRyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDL0IsT0FBTyxHQUFHLENBQUMsT0FBTyxDQUFDLFFBQVEsV0FBVyxHQUFHLEVBQUUsR0FBRyxXQUFXLENBQUMsV0FBVyxFQUFFLEtBQUssQ0FBQztTQUN4RSxPQUFPLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQzVCLENBQUM7QUFFRCxTQUFnQixXQUFXLENBQUMsTUFBYyxFQUFFO0lBQzFDLElBQUksWUFBWSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRTtRQUMxQixPQUFPLEdBQUcsQ0FBQztLQUNaO0lBRUQsSUFBSTtRQUNGLE9BQU8sNEJBQVksQ0FBQyxTQUFTLEVBQUUsQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztLQUMvRDtJQUFDLE1BQU07UUFDTixPQUFPLGNBQWMsQ0FBQyxHQUFHLENBQUMsQ0FBQztLQUM1QjtBQUNILENBQUM7QUFWRCxrQ0FVQztBQUVELFNBQWdCLFNBQVMsQ0FBQyxHQUFXLEVBQUUsUUFBZ0I7SUFDckQsSUFBSTtRQUNGLE9BQU8sNEJBQVksQ0FBQyxTQUFTLEVBQUUsQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztLQUMvRDtJQUFDLE1BQU07UUFDTixPQUFPLFFBQVEsQ0FBQztLQUNqQjtBQUNILENBQUM7QUFORCw4QkFNQztBQUVELFNBQVMsbUJBQW1CLENBQUMsSUFBWTtJQUN2QyxNQUFNLFVBQVUsR0FBRyw2Q0FBNkMsQ0FBQztJQUNqRSxNQUFNLE9BQU8sR0FBRyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUU1QyxPQUFPLFFBQVEsT0FBTyxDQUFDLENBQUMsQ0FBQyxVQUFVLE9BQU8sQ0FBQyxDQUFDLENBQUMsZ0JBQWdCLENBQUM7QUFDaEUsQ0FBQztBQUVELFNBQWdCLHNCQUFzQixDQUFDLElBQVk7SUFDakQsTUFBTSxVQUFVLEdBQUcsd0NBQXdDLENBQUM7SUFDNUQsTUFBTSxPQUFPLEdBQUcsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7SUFFNUMsT0FBTyxTQUFTLENBQ1osR0FBRyxPQUFPLENBQUMsQ0FBQyxDQUFDLGFBQWEsT0FBTyxDQUFDLENBQUMsQ0FBQyxrQkFBa0IsRUFBRSxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBQ3pGLENBQUM7QUFORCx3REFNQztBQUVELFNBQVMsY0FBYztJQUNyQixPQUFPLHdCQUFRLENBQUMsaUNBQWlDLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUN2RSxDQUFDO0FBRUQsU0FBUyxlQUFlO0lBQ3RCLE1BQU0sVUFBVSxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRztRQUNsRCxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBVSxJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsUUFBUSxDQUFDO0lBQzlELE1BQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLEdBQUcsR0FBRyxHQUFHLENBQUMsQ0FBQztJQUMzRCxNQUFNLE1BQU0sR0FBRyxXQUFJLENBQUMsVUFBVSxFQUFFLGFBQWEsR0FBRyxZQUFZLENBQUMsQ0FBQztJQUU5RCxjQUFTLENBQUMsTUFBTSxFQUFFLEVBQUMsU0FBUyxFQUFFLElBQUksRUFBQyxDQUFDLENBQUM7SUFDckMsT0FBTyxNQUFNLENBQUM7QUFDaEIsQ0FBQyJ9

/***/ }),

/***/ 8510:
/***/ ((module) => {



module.exports = {
	"aliceblue": [240, 248, 255],
	"antiquewhite": [250, 235, 215],
	"aqua": [0, 255, 255],
	"aquamarine": [127, 255, 212],
	"azure": [240, 255, 255],
	"beige": [245, 245, 220],
	"bisque": [255, 228, 196],
	"black": [0, 0, 0],
	"blanchedalmond": [255, 235, 205],
	"blue": [0, 0, 255],
	"blueviolet": [138, 43, 226],
	"brown": [165, 42, 42],
	"burlywood": [222, 184, 135],
	"cadetblue": [95, 158, 160],
	"chartreuse": [127, 255, 0],
	"chocolate": [210, 105, 30],
	"coral": [255, 127, 80],
	"cornflowerblue": [100, 149, 237],
	"cornsilk": [255, 248, 220],
	"crimson": [220, 20, 60],
	"cyan": [0, 255, 255],
	"darkblue": [0, 0, 139],
	"darkcyan": [0, 139, 139],
	"darkgoldenrod": [184, 134, 11],
	"darkgray": [169, 169, 169],
	"darkgreen": [0, 100, 0],
	"darkgrey": [169, 169, 169],
	"darkkhaki": [189, 183, 107],
	"darkmagenta": [139, 0, 139],
	"darkolivegreen": [85, 107, 47],
	"darkorange": [255, 140, 0],
	"darkorchid": [153, 50, 204],
	"darkred": [139, 0, 0],
	"darksalmon": [233, 150, 122],
	"darkseagreen": [143, 188, 143],
	"darkslateblue": [72, 61, 139],
	"darkslategray": [47, 79, 79],
	"darkslategrey": [47, 79, 79],
	"darkturquoise": [0, 206, 209],
	"darkviolet": [148, 0, 211],
	"deeppink": [255, 20, 147],
	"deepskyblue": [0, 191, 255],
	"dimgray": [105, 105, 105],
	"dimgrey": [105, 105, 105],
	"dodgerblue": [30, 144, 255],
	"firebrick": [178, 34, 34],
	"floralwhite": [255, 250, 240],
	"forestgreen": [34, 139, 34],
	"fuchsia": [255, 0, 255],
	"gainsboro": [220, 220, 220],
	"ghostwhite": [248, 248, 255],
	"gold": [255, 215, 0],
	"goldenrod": [218, 165, 32],
	"gray": [128, 128, 128],
	"green": [0, 128, 0],
	"greenyellow": [173, 255, 47],
	"grey": [128, 128, 128],
	"honeydew": [240, 255, 240],
	"hotpink": [255, 105, 180],
	"indianred": [205, 92, 92],
	"indigo": [75, 0, 130],
	"ivory": [255, 255, 240],
	"khaki": [240, 230, 140],
	"lavender": [230, 230, 250],
	"lavenderblush": [255, 240, 245],
	"lawngreen": [124, 252, 0],
	"lemonchiffon": [255, 250, 205],
	"lightblue": [173, 216, 230],
	"lightcoral": [240, 128, 128],
	"lightcyan": [224, 255, 255],
	"lightgoldenrodyellow": [250, 250, 210],
	"lightgray": [211, 211, 211],
	"lightgreen": [144, 238, 144],
	"lightgrey": [211, 211, 211],
	"lightpink": [255, 182, 193],
	"lightsalmon": [255, 160, 122],
	"lightseagreen": [32, 178, 170],
	"lightskyblue": [135, 206, 250],
	"lightslategray": [119, 136, 153],
	"lightslategrey": [119, 136, 153],
	"lightsteelblue": [176, 196, 222],
	"lightyellow": [255, 255, 224],
	"lime": [0, 255, 0],
	"limegreen": [50, 205, 50],
	"linen": [250, 240, 230],
	"magenta": [255, 0, 255],
	"maroon": [128, 0, 0],
	"mediumaquamarine": [102, 205, 170],
	"mediumblue": [0, 0, 205],
	"mediumorchid": [186, 85, 211],
	"mediumpurple": [147, 112, 219],
	"mediumseagreen": [60, 179, 113],
	"mediumslateblue": [123, 104, 238],
	"mediumspringgreen": [0, 250, 154],
	"mediumturquoise": [72, 209, 204],
	"mediumvioletred": [199, 21, 133],
	"midnightblue": [25, 25, 112],
	"mintcream": [245, 255, 250],
	"mistyrose": [255, 228, 225],
	"moccasin": [255, 228, 181],
	"navajowhite": [255, 222, 173],
	"navy": [0, 0, 128],
	"oldlace": [253, 245, 230],
	"olive": [128, 128, 0],
	"olivedrab": [107, 142, 35],
	"orange": [255, 165, 0],
	"orangered": [255, 69, 0],
	"orchid": [218, 112, 214],
	"palegoldenrod": [238, 232, 170],
	"palegreen": [152, 251, 152],
	"paleturquoise": [175, 238, 238],
	"palevioletred": [219, 112, 147],
	"papayawhip": [255, 239, 213],
	"peachpuff": [255, 218, 185],
	"peru": [205, 133, 63],
	"pink": [255, 192, 203],
	"plum": [221, 160, 221],
	"powderblue": [176, 224, 230],
	"purple": [128, 0, 128],
	"rebeccapurple": [102, 51, 153],
	"red": [255, 0, 0],
	"rosybrown": [188, 143, 143],
	"royalblue": [65, 105, 225],
	"saddlebrown": [139, 69, 19],
	"salmon": [250, 128, 114],
	"sandybrown": [244, 164, 96],
	"seagreen": [46, 139, 87],
	"seashell": [255, 245, 238],
	"sienna": [160, 82, 45],
	"silver": [192, 192, 192],
	"skyblue": [135, 206, 235],
	"slateblue": [106, 90, 205],
	"slategray": [112, 128, 144],
	"slategrey": [112, 128, 144],
	"snow": [255, 250, 250],
	"springgreen": [0, 255, 127],
	"steelblue": [70, 130, 180],
	"tan": [210, 180, 140],
	"teal": [0, 128, 128],
	"thistle": [216, 191, 216],
	"tomato": [255, 99, 71],
	"turquoise": [64, 224, 208],
	"violet": [238, 130, 238],
	"wheat": [245, 222, 179],
	"white": [255, 255, 255],
	"whitesmoke": [245, 245, 245],
	"yellow": [255, 255, 0],
	"yellowgreen": [154, 205, 50]
};


/***/ }),

/***/ 6891:
/***/ ((module) => {

module.exports = function (xs, fn) {
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        var x = fn(xs[i], i);
        if (isArray(x)) res.push.apply(res, x);
        else res.push(x);
    }
    return res;
};

var isArray = Array.isArray || function (xs) {
    return Object.prototype.toString.call(xs) === '[object Array]';
};


/***/ }),

/***/ 1389:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.fromRgba = fromRgba;
exports.fromRgb = fromRgb;
exports.fromHsla = fromHsla;
exports.fromHsl = fromHsl;
exports.fromString = fromString;
exports["default"] = void 0;

var _colorName = _interopRequireDefault(__nccwpck_require__(8510));

var _cssUnitConverter = _interopRequireDefault(__nccwpck_require__(3946));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var hex = /^#([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})?$/;
var shortHex = /^#([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])?$/;
var rgb = /^rgba?\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)(?:\s*,\s*(0|1|0?\.\d+|\d+%))?\s*\)$/;
var rgbfn = /^rgba?\(\s*(\d+)\s+(\d+)\s+(\d+)(?:\s*\/\s*(0|1|0?\.\d+|\d+%))?\s*\)$/;
var rgbperc = /^rgba?\(\s*(\d+%)\s*,\s*(\d+%)\s*,\s*(\d+%)(?:\s*,\s*(0|1|0?\.\d+|\d+%))?\s*\)$/;
var rgbpercfn = /^rgba?\(\s*(\d+%)\s+(\d+%)\s+(\d+%)(?:\s*\/\s*(0|1|0?\.\d+|\d+%))?\s*\)$/;
var hsl = /^hsla?\(\s*(\d+)(deg|rad|grad|turn)?\s*,\s*(\d+)%\s*,\s*(\d+)%(?:\s*,\s*(0|1|0?\.\d+|\d+%))?\s*\)$/;

function contains(haystack, needle) {
  return haystack.indexOf(needle) > -1;
}

function rgbToHsl(r, g, b) {
  var rprim = r / 255;
  var gprim = g / 255;
  var bprim = b / 255;
  var cmax = Math.max(rprim, gprim, bprim);
  var cmin = Math.min(rprim, gprim, bprim);
  var delta = cmax - cmin;
  var l = (cmax + cmin) / 2;

  if (delta === 0) {
    return [0, 0, l * 100];
  }

  var s = delta / (1 - Math.abs(2 * l - 1));

  var h = function () {
    switch (cmax) {
      case rprim:
        {
          return (gprim - bprim) / delta % 6;
        }

      case gprim:
        {
          return (bprim - rprim) / delta + 2;
        }

      default:
        {
          return (rprim - gprim) / delta + 4;
        }
    }
  }();

  return [h * 60, s * 100, l * 100];
}

function hslToRgb(h, s, l) {
  var hprim = h / 60;
  var sprim = s / 100;
  var lprim = l / 100;
  var c = (1 - Math.abs(2 * lprim - 1)) * sprim;
  var x = c * (1 - Math.abs(hprim % 2 - 1));
  var m = lprim - c / 2;

  var _ref = function () {
    if (hprim < 1) return [c, x, 0];
    if (hprim < 2) return [x, c, 0];
    if (hprim < 3) return [0, c, x];
    if (hprim < 4) return [0, x, c];
    if (hprim < 5) return [x, 0, c];
    return [c, 0, x];
  }(),
      _ref2 = _slicedToArray(_ref, 3),
      rprim = _ref2[0],
      gprim = _ref2[1],
      bprim = _ref2[2];

  return [(rprim + m) * 255, (gprim + m) * 255, (bprim + m) * 255];
}

var Color = /*#__PURE__*/function () {
  function Color(_ref3) {
    var _ref4 = _slicedToArray(_ref3, 4),
        r = _ref4[0],
        g = _ref4[1],
        b = _ref4[2],
        a = _ref4[3];

    _classCallCheck(this, Color);

    this.values = [Math.max(Math.min(parseInt(r, 10), 255), 0), Math.max(Math.min(parseInt(g, 10), 255), 0), Math.max(Math.min(parseInt(b, 10), 255), 0), a == null ? 1 : Math.max(Math.min(parseFloat(a), 255), 0)];
  }

  _createClass(Color, [{
    key: "toRgbString",
    value: function toRgbString() {
      var _this$values = _slicedToArray(this.values, 4),
          r = _this$values[0],
          g = _this$values[1],
          b = _this$values[2],
          a = _this$values[3];

      if (a === 1) {
        return "rgb(".concat(r, ", ").concat(g, ", ").concat(b, ")");
      }

      return "rgba(".concat(r, ", ").concat(g, ", ").concat(b, ", ").concat(a, ")");
    }
  }, {
    key: "toHslString",
    value: function toHslString() {
      var _this$toHslaArray = this.toHslaArray(),
          _this$toHslaArray2 = _slicedToArray(_this$toHslaArray, 4),
          h = _this$toHslaArray2[0],
          s = _this$toHslaArray2[1],
          l = _this$toHslaArray2[2],
          a = _this$toHslaArray2[3];

      if (a === 1) {
        return "hsl(".concat(h, ", ").concat(s, "%, ").concat(l, "%)");
      }

      return "hsla(".concat(h, ", ").concat(s, "%, ").concat(l, "%, ").concat(a, ")");
    }
  }, {
    key: "toHexString",
    value: function toHexString() {
      var _this$values2 = _slicedToArray(this.values, 4),
          r = _this$values2[0],
          g = _this$values2[1],
          b = _this$values2[2],
          a = _this$values2[3];

      r = Number(r).toString(16).padStart(2, '0');
      g = Number(g).toString(16).padStart(2, '0');
      b = Number(b).toString(16).padStart(2, '0');
      a = a < 1 ? parseInt(a * 255, 10).toString(16).padStart(2, '0') : '';
      return "#".concat(r).concat(g).concat(b).concat(a);
    }
  }, {
    key: "toRgbaArray",
    value: function toRgbaArray() {
      return this.values;
    }
  }, {
    key: "toHslaArray",
    value: function toHslaArray() {
      var _this$values3 = _slicedToArray(this.values, 4),
          r = _this$values3[0],
          g = _this$values3[1],
          b = _this$values3[2],
          a = _this$values3[3];

      var _rgbToHsl = rgbToHsl(r, g, b),
          _rgbToHsl2 = _slicedToArray(_rgbToHsl, 3),
          h = _rgbToHsl2[0],
          s = _rgbToHsl2[1],
          l = _rgbToHsl2[2];

      return [h, s, l, a];
    }
  }]);

  return Color;
}();

function fromRgba(_ref5) {
  var _ref6 = _slicedToArray(_ref5, 4),
      r = _ref6[0],
      g = _ref6[1],
      b = _ref6[2],
      a = _ref6[3];

  return new Color([r, g, b, a]);
}

function fromRgb(_ref7) {
  var _ref8 = _slicedToArray(_ref7, 3),
      r = _ref8[0],
      g = _ref8[1],
      b = _ref8[2];

  return fromRgba([r, g, b, 1]);
}

function fromHsla(_ref9) {
  var _ref10 = _slicedToArray(_ref9, 4),
      h = _ref10[0],
      s = _ref10[1],
      l = _ref10[2],
      a = _ref10[3];

  var _hslToRgb = hslToRgb(h, s, l),
      _hslToRgb2 = _slicedToArray(_hslToRgb, 3),
      r = _hslToRgb2[0],
      g = _hslToRgb2[1],
      b = _hslToRgb2[2];

  return fromRgba([r, g, b, a]);
}

function fromHsl(_ref11) {
  var _ref12 = _slicedToArray(_ref11, 3),
      h = _ref12[0],
      s = _ref12[1],
      l = _ref12[2];

  return fromHsla([h, s, l, 1]);
}

function fromHexString(str) {
  var _ref13 = hex.exec(str) || shortHex.exec(str),
      _ref14 = _slicedToArray(_ref13, 5),
      r = _ref14[1],
      g = _ref14[2],
      b = _ref14[3],
      a = _ref14[4];

  r = parseInt(r.length < 2 ? r.repeat(2) : r, 16);
  g = parseInt(g.length < 2 ? g.repeat(2) : g, 16);
  b = parseInt(b.length < 2 ? b.repeat(2) : b, 16);
  a = a && (parseInt(a.length < 2 ? a.repeat(2) : a, 16) / 255).toPrecision(1) || 1;
  return fromRgba([r, g, b, a]);
}

function fromRgbString(str) {
  var _ref15 = rgb.exec(str) || rgbperc.exec(str) || rgbfn.exec(str) || rgbpercfn.exec(str),
      _ref16 = _slicedToArray(_ref15, 5),
      r = _ref16[1],
      g = _ref16[2],
      b = _ref16[3],
      a = _ref16[4];

  r = contains(r, '%') ? parseInt(r, 10) * 255 / 100 : parseInt(r, 10);
  g = contains(g, '%') ? parseInt(g, 10) * 255 / 100 : parseInt(g, 10);
  b = contains(b, '%') > 0 ? parseInt(b, 10) * 255 / 100 : parseInt(b, 10);
  a = a === undefined ? 1 : parseFloat(a) / (contains(a, '%') ? 100 : 1);
  return fromRgba([r, g, b, a]);
}

function fromHslString(str) {
  var _hsl$exec = hsl.exec(str),
      _hsl$exec2 = _slicedToArray(_hsl$exec, 6),
      h = _hsl$exec2[1],
      unit = _hsl$exec2[2],
      s = _hsl$exec2[3],
      l = _hsl$exec2[4],
      a = _hsl$exec2[5];

  unit = unit || 'deg';
  h = (0, _cssUnitConverter["default"])(parseFloat(h), unit, 'deg');
  s = parseFloat(s);
  l = parseFloat(l);
  a = a === undefined ? 1 : parseFloat(a) / (contains(a, '%') ? 100 : 1);
  return fromHsla([h, s, l, a]);
}

function fromString(str) {
  if (_colorName["default"][str]) {
    return fromRgb(_colorName["default"][str]);
  }

  if (hex.test(str) || shortHex.test(str)) {
    return fromHexString(str);
  }

  if (rgb.test(str) || rgbperc.test(str) || rgbfn.test(str) || rgbpercfn.test(str)) {
    return fromRgbString(str);
  }

  if (hsl.test(str)) {
    return fromHslString(str);
  }

  return null;
}

var _default = {
  fromString: fromString,
  fromRgb: fromRgb,
  fromRgba: fromRgba,
  fromHsl: fromHsl,
  fromHsla: fromHsla
};
exports["default"] = _default;

/***/ }),

/***/ 3946:
/***/ ((module) => {

var conversions = {
    // length
    'px': {
        'px': 1,
        'cm': 96.0/2.54,
        'mm': 96.0/25.4,
        'in': 96,
        'pt': 96.0/72.0,
        'pc': 16
    },
    'cm': {
        'px': 2.54/96.0,
        'cm': 1,
        'mm': 0.1,
        'in': 2.54,
        'pt': 2.54/72.0,
        'pc': 2.54/6.0
    },
    'mm': {
        'px': 25.4/96.0,
        'cm': 10,
        'mm': 1,
        'in': 25.4,
        'pt': 25.4/72.0,
        'pc': 25.4/6.0
    },
    'in': {
        'px': 1.0/96.0,
        'cm': 1.0/2.54,
        'mm': 1.0/25.4,
        'in': 1,
        'pt': 1.0/72.0,
        'pc': 1.0/6.0
    },
    'pt': {
        'px': 0.75,
        'cm': 72.0/2.54,
        'mm': 72.0/25.4,
        'in': 72,
        'pt': 1,
        'pc': 12
    },
    'pc': {
        'px': 6.0/96.0,
        'cm': 6.0/2.54,
        'mm': 6.0/25.4,
        'in': 6,
        'pt': 6.0/72.0,
        'pc': 1
    },
    // angle
    'deg': {
        'deg': 1,
        'grad': 0.9,
        'rad': 180/Math.PI,
        'turn': 360
    },
    'grad': {
        'deg': 400/360,
        'grad': 1,
        'rad': 200/Math.PI,
        'turn': 400
    },
    'rad': {
        'deg': Math.PI/180,
        'grad': Math.PI/200,
        'rad': 1,
        'turn': Math.PI*2
    },
    'turn': {
        'deg': 1/360,
        'grad': 1/400,
        'rad': 0.5/Math.PI,
        'turn': 1
    },
    // time
    's': {
        's': 1,
        'ms': 1/1000
    },
    'ms': {
        's': 1000,
        'ms': 1
    },
    // frequency
    'Hz': {
        'Hz': 1,
        'kHz': 1000
    },
    'kHz': {
        'Hz': 1/1000,
        'kHz': 1
    },
    // resolution
    'dpi': {
        'dpi': 1,
        'dpcm': 1.0/2.54,
        'dppx': 1/96
    },
    'dpcm': {
        'dpi': 2.54,
        'dpcm': 1,
        'dppx': 2.54/96.0
    },
    'dppx': {
        'dpi': 96,
        'dpcm': 96.0/2.54,
        'dppx': 1
    }
};

module.exports = function (value, sourceUnit, targetUnit, precision) {
    if (!conversions.hasOwnProperty(targetUnit))
        throw new Error("Cannot convert to " + targetUnit);

    if (!conversions[targetUnit].hasOwnProperty(sourceUnit))
        throw new Error("Cannot convert from " + sourceUnit + " to " + targetUnit);
    
    var converted = conversions[targetUnit][sourceUnit] * value;
    
    if (precision !== false) {
        precision = Math.pow(10, parseInt(precision) || 5);
        return Math.round(converted * precision) / precision;
    }
    
    return converted;
};


/***/ }),

/***/ 8222:
/***/ ((module, exports, __nccwpck_require__) => {

/* eslint-env browser */

/**
 * This is the web browser implementation of `debug()`.
 */

exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = localstorage();
exports.destroy = (() => {
	let warned = false;

	return () => {
		if (!warned) {
			warned = true;
			console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
		}
	};
})();

/**
 * Colors.
 */

exports.colors = [
	'#0000CC',
	'#0000FF',
	'#0033CC',
	'#0033FF',
	'#0066CC',
	'#0066FF',
	'#0099CC',
	'#0099FF',
	'#00CC00',
	'#00CC33',
	'#00CC66',
	'#00CC99',
	'#00CCCC',
	'#00CCFF',
	'#3300CC',
	'#3300FF',
	'#3333CC',
	'#3333FF',
	'#3366CC',
	'#3366FF',
	'#3399CC',
	'#3399FF',
	'#33CC00',
	'#33CC33',
	'#33CC66',
	'#33CC99',
	'#33CCCC',
	'#33CCFF',
	'#6600CC',
	'#6600FF',
	'#6633CC',
	'#6633FF',
	'#66CC00',
	'#66CC33',
	'#9900CC',
	'#9900FF',
	'#9933CC',
	'#9933FF',
	'#99CC00',
	'#99CC33',
	'#CC0000',
	'#CC0033',
	'#CC0066',
	'#CC0099',
	'#CC00CC',
	'#CC00FF',
	'#CC3300',
	'#CC3333',
	'#CC3366',
	'#CC3399',
	'#CC33CC',
	'#CC33FF',
	'#CC6600',
	'#CC6633',
	'#CC9900',
	'#CC9933',
	'#CCCC00',
	'#CCCC33',
	'#FF0000',
	'#FF0033',
	'#FF0066',
	'#FF0099',
	'#FF00CC',
	'#FF00FF',
	'#FF3300',
	'#FF3333',
	'#FF3366',
	'#FF3399',
	'#FF33CC',
	'#FF33FF',
	'#FF6600',
	'#FF6633',
	'#FF9900',
	'#FF9933',
	'#FFCC00',
	'#FFCC33'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

// eslint-disable-next-line complexity
function useColors() {
	// NB: In an Electron preload script, document will be defined but not fully
	// initialized. Since we know we're in Chrome, we'll just detect this case
	// explicitly
	if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {
		return true;
	}

	// Internet Explorer and Edge do not support colors.
	if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
		return false;
	}

	// Is webkit? http://stackoverflow.com/a/16459606/376773
	// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
	return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
		// Is firebug? http://stackoverflow.com/a/398120/376773
		(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
		// Is firefox >= v31?
		// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
		(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
		// Double check webkit in userAgent just in case we are in a worker
		(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
	args[0] = (this.useColors ? '%c' : '') +
		this.namespace +
		(this.useColors ? ' %c' : ' ') +
		args[0] +
		(this.useColors ? '%c ' : ' ') +
		'+' + module.exports.humanize(this.diff);

	if (!this.useColors) {
		return;
	}

	const c = 'color: ' + this.color;
	args.splice(1, 0, c, 'color: inherit');

	// The final "%c" is somewhat tricky, because there could be other
	// arguments passed either before or after the %c, so we need to
	// figure out the correct index to insert the CSS into
	let index = 0;
	let lastC = 0;
	args[0].replace(/%[a-zA-Z%]/g, match => {
		if (match === '%%') {
			return;
		}
		index++;
		if (match === '%c') {
			// We only are interested in the *last* %c
			// (the user may have provided their own)
			lastC = index;
		}
	});

	args.splice(lastC, 0, c);
}

/**
 * Invokes `console.debug()` when available.
 * No-op when `console.debug` is not a "function".
 * If `console.debug` is not available, falls back
 * to `console.log`.
 *
 * @api public
 */
exports.log = console.debug || console.log || (() => {});

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */
function save(namespaces) {
	try {
		if (namespaces) {
			exports.storage.setItem('debug', namespaces);
		} else {
			exports.storage.removeItem('debug');
		}
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */
function load() {
	let r;
	try {
		r = exports.storage.getItem('debug');
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}

	// If debug isn't set in LS, and we're in Electron, try to load $DEBUG
	if (!r && typeof process !== 'undefined' && 'env' in process) {
		r = process.env.DEBUG;
	}

	return r;
}

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
	try {
		// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
		// The Browser also has localStorage in the global context.
		return localStorage;
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}
}

module.exports = __nccwpck_require__(6243)(exports);

const {formatters} = module.exports;

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

formatters.j = function (v) {
	try {
		return JSON.stringify(v);
	} catch (error) {
		return '[UnexpectedJSONParseError]: ' + error.message;
	}
};


/***/ }),

/***/ 6243:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {


/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 */

function setup(env) {
	createDebug.debug = createDebug;
	createDebug.default = createDebug;
	createDebug.coerce = coerce;
	createDebug.disable = disable;
	createDebug.enable = enable;
	createDebug.enabled = enabled;
	createDebug.humanize = __nccwpck_require__(900);
	createDebug.destroy = destroy;

	Object.keys(env).forEach(key => {
		createDebug[key] = env[key];
	});

	/**
	* The currently active debug mode names, and names to skip.
	*/

	createDebug.names = [];
	createDebug.skips = [];

	/**
	* Map of special "%n" handling functions, for the debug "format" argument.
	*
	* Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
	*/
	createDebug.formatters = {};

	/**
	* Selects a color for a debug namespace
	* @param {String} namespace The namespace string for the debug instance to be colored
	* @return {Number|String} An ANSI color code for the given namespace
	* @api private
	*/
	function selectColor(namespace) {
		let hash = 0;

		for (let i = 0; i < namespace.length; i++) {
			hash = ((hash << 5) - hash) + namespace.charCodeAt(i);
			hash |= 0; // Convert to 32bit integer
		}

		return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
	}
	createDebug.selectColor = selectColor;

	/**
	* Create a debugger with the given `namespace`.
	*
	* @param {String} namespace
	* @return {Function}
	* @api public
	*/
	function createDebug(namespace) {
		let prevTime;
		let enableOverride = null;
		let namespacesCache;
		let enabledCache;

		function debug(...args) {
			// Disabled?
			if (!debug.enabled) {
				return;
			}

			const self = debug;

			// Set `diff` timestamp
			const curr = Number(new Date());
			const ms = curr - (prevTime || curr);
			self.diff = ms;
			self.prev = prevTime;
			self.curr = curr;
			prevTime = curr;

			args[0] = createDebug.coerce(args[0]);

			if (typeof args[0] !== 'string') {
				// Anything else let's inspect with %O
				args.unshift('%O');
			}

			// Apply any `formatters` transformations
			let index = 0;
			args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {
				// If we encounter an escaped % then don't increase the array index
				if (match === '%%') {
					return '%';
				}
				index++;
				const formatter = createDebug.formatters[format];
				if (typeof formatter === 'function') {
					const val = args[index];
					match = formatter.call(self, val);

					// Now we need to remove `args[index]` since it's inlined in the `format`
					args.splice(index, 1);
					index--;
				}
				return match;
			});

			// Apply env-specific formatting (colors, etc.)
			createDebug.formatArgs.call(self, args);

			const logFn = self.log || createDebug.log;
			logFn.apply(self, args);
		}

		debug.namespace = namespace;
		debug.useColors = createDebug.useColors();
		debug.color = createDebug.selectColor(namespace);
		debug.extend = extend;
		debug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.

		Object.defineProperty(debug, 'enabled', {
			enumerable: true,
			configurable: false,
			get: () => {
				if (enableOverride !== null) {
					return enableOverride;
				}
				if (namespacesCache !== createDebug.namespaces) {
					namespacesCache = createDebug.namespaces;
					enabledCache = createDebug.enabled(namespace);
				}

				return enabledCache;
			},
			set: v => {
				enableOverride = v;
			}
		});

		// Env-specific initialization logic for debug instances
		if (typeof createDebug.init === 'function') {
			createDebug.init(debug);
		}

		return debug;
	}

	function extend(namespace, delimiter) {
		const newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);
		newDebug.log = this.log;
		return newDebug;
	}

	/**
	* Enables a debug mode by namespaces. This can include modes
	* separated by a colon and wildcards.
	*
	* @param {String} namespaces
	* @api public
	*/
	function enable(namespaces) {
		createDebug.save(namespaces);
		createDebug.namespaces = namespaces;

		createDebug.names = [];
		createDebug.skips = [];

		let i;
		const split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
		const len = split.length;

		for (i = 0; i < len; i++) {
			if (!split[i]) {
				// ignore empty strings
				continue;
			}

			namespaces = split[i].replace(/\*/g, '.*?');

			if (namespaces[0] === '-') {
				createDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));
			} else {
				createDebug.names.push(new RegExp('^' + namespaces + '$'));
			}
		}
	}

	/**
	* Disable debug output.
	*
	* @return {String} namespaces
	* @api public
	*/
	function disable() {
		const namespaces = [
			...createDebug.names.map(toNamespace),
			...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)
		].join(',');
		createDebug.enable('');
		return namespaces;
	}

	/**
	* Returns true if the given mode name is enabled, false otherwise.
	*
	* @param {String} name
	* @return {Boolean}
	* @api public
	*/
	function enabled(name) {
		if (name[name.length - 1] === '*') {
			return true;
		}

		let i;
		let len;

		for (i = 0, len = createDebug.skips.length; i < len; i++) {
			if (createDebug.skips[i].test(name)) {
				return false;
			}
		}

		for (i = 0, len = createDebug.names.length; i < len; i++) {
			if (createDebug.names[i].test(name)) {
				return true;
			}
		}

		return false;
	}

	/**
	* Convert regexp to namespace
	*
	* @param {RegExp} regxep
	* @return {String} namespace
	* @api private
	*/
	function toNamespace(regexp) {
		return regexp.toString()
			.substring(2, regexp.toString().length - 2)
			.replace(/\.\*\?$/, '*');
	}

	/**
	* Coerce `val`.
	*
	* @param {Mixed} val
	* @return {Mixed}
	* @api private
	*/
	function coerce(val) {
		if (val instanceof Error) {
			return val.stack || val.message;
		}
		return val;
	}

	/**
	* XXX DO NOT USE. This is a temporary stub function.
	* XXX It WILL be removed in the next major release.
	*/
	function destroy() {
		console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
	}

	createDebug.enable(createDebug.load());

	return createDebug;
}

module.exports = setup;


/***/ }),

/***/ 8237:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

/**
 * Detect Electron renderer / nwjs process, which is node, but we should
 * treat as a browser.
 */

if (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {
	module.exports = __nccwpck_require__(8222);
} else {
	module.exports = __nccwpck_require__(4874);
}


/***/ }),

/***/ 4874:
/***/ ((module, exports, __nccwpck_require__) => {

/**
 * Module dependencies.
 */

const tty = __nccwpck_require__(6224);
const util = __nccwpck_require__(3837);

/**
 * This is the Node.js implementation of `debug()`.
 */

exports.init = init;
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.destroy = util.deprecate(
	() => {},
	'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'
);

/**
 * Colors.
 */

exports.colors = [6, 2, 3, 4, 5, 1];

try {
	// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)
	// eslint-disable-next-line import/no-extraneous-dependencies
	const supportsColor = __nccwpck_require__(132);

	if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {
		exports.colors = [
			20,
			21,
			26,
			27,
			32,
			33,
			38,
			39,
			40,
			41,
			42,
			43,
			44,
			45,
			56,
			57,
			62,
			63,
			68,
			69,
			74,
			75,
			76,
			77,
			78,
			79,
			80,
			81,
			92,
			93,
			98,
			99,
			112,
			113,
			128,
			129,
			134,
			135,
			148,
			149,
			160,
			161,
			162,
			163,
			164,
			165,
			166,
			167,
			168,
			169,
			170,
			171,
			172,
			173,
			178,
			179,
			184,
			185,
			196,
			197,
			198,
			199,
			200,
			201,
			202,
			203,
			204,
			205,
			206,
			207,
			208,
			209,
			214,
			215,
			220,
			221
		];
	}
} catch (error) {
	// Swallow - we only care if `supports-color` is available; it doesn't have to be.
}

/**
 * Build up the default `inspectOpts` object from the environment variables.
 *
 *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js
 */

exports.inspectOpts = Object.keys(process.env).filter(key => {
	return /^debug_/i.test(key);
}).reduce((obj, key) => {
	// Camel-case
	const prop = key
		.substring(6)
		.toLowerCase()
		.replace(/_([a-z])/g, (_, k) => {
			return k.toUpperCase();
		});

	// Coerce string value into JS value
	let val = process.env[key];
	if (/^(yes|on|true|enabled)$/i.test(val)) {
		val = true;
	} else if (/^(no|off|false|disabled)$/i.test(val)) {
		val = false;
	} else if (val === 'null') {
		val = null;
	} else {
		val = Number(val);
	}

	obj[prop] = val;
	return obj;
}, {});

/**
 * Is stdout a TTY? Colored output is enabled when `true`.
 */

function useColors() {
	return 'colors' in exports.inspectOpts ?
		Boolean(exports.inspectOpts.colors) :
		tty.isatty(process.stderr.fd);
}

/**
 * Adds ANSI color escape codes if enabled.
 *
 * @api public
 */

function formatArgs(args) {
	const {namespace: name, useColors} = this;

	if (useColors) {
		const c = this.color;
		const colorCode = '\u001B[3' + (c < 8 ? c : '8;5;' + c);
		const prefix = `  ${colorCode};1m${name} \u001B[0m`;

		args[0] = prefix + args[0].split('\n').join('\n' + prefix);
		args.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\u001B[0m');
	} else {
		args[0] = getDate() + name + ' ' + args[0];
	}
}

function getDate() {
	if (exports.inspectOpts.hideDate) {
		return '';
	}
	return new Date().toISOString() + ' ';
}

/**
 * Invokes `util.format()` with the specified arguments and writes to stderr.
 */

function log(...args) {
	return process.stderr.write(util.format(...args) + '\n');
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */
function save(namespaces) {
	if (namespaces) {
		process.env.DEBUG = namespaces;
	} else {
		// If you set a process.env field to null or undefined, it gets cast to the
		// string 'null' or 'undefined'. Just delete instead.
		delete process.env.DEBUG;
	}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */

function load() {
	return process.env.DEBUG;
}

/**
 * Init logic for `debug` instances.
 *
 * Create a new `inspectOpts` object in case `useColors` is set
 * differently for a particular `debug` instance.
 */

function init(debug) {
	debug.inspectOpts = {};

	const keys = Object.keys(exports.inspectOpts);
	for (let i = 0; i < keys.length; i++) {
		debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];
	}
}

module.exports = __nccwpck_require__(6243)(exports);

const {formatters} = module.exports;

/**
 * Map %o to `util.inspect()`, all on a single line.
 */

formatters.o = function (v) {
	this.inspectOpts.colors = this.useColors;
	return util.inspect(v, this.inspectOpts)
		.split('\n')
		.map(str => str.trim())
		.join(' ');
};

/**
 * Map %O to `util.inspect()`, allowing multiple lines if needed.
 */

formatters.O = function (v) {
	this.inspectOpts.colors = this.useColors;
	return util.inspect(v, this.inspectOpts);
};


/***/ }),

/***/ 1205:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var once = __nccwpck_require__(1223);

var noop = function() {};

var isRequest = function(stream) {
	return stream.setHeader && typeof stream.abort === 'function';
};

var isChildProcess = function(stream) {
	return stream.stdio && Array.isArray(stream.stdio) && stream.stdio.length === 3
};

var eos = function(stream, opts, callback) {
	if (typeof opts === 'function') return eos(stream, null, opts);
	if (!opts) opts = {};

	callback = once(callback || noop);

	var ws = stream._writableState;
	var rs = stream._readableState;
	var readable = opts.readable || (opts.readable !== false && stream.readable);
	var writable = opts.writable || (opts.writable !== false && stream.writable);
	var cancelled = false;

	var onlegacyfinish = function() {
		if (!stream.writable) onfinish();
	};

	var onfinish = function() {
		writable = false;
		if (!readable) callback.call(stream);
	};

	var onend = function() {
		readable = false;
		if (!writable) callback.call(stream);
	};

	var onexit = function(exitCode) {
		callback.call(stream, exitCode ? new Error('exited with error code: ' + exitCode) : null);
	};

	var onerror = function(err) {
		callback.call(stream, err);
	};

	var onclose = function() {
		process.nextTick(onclosenexttick);
	};

	var onclosenexttick = function() {
		if (cancelled) return;
		if (readable && !(rs && (rs.ended && !rs.destroyed))) return callback.call(stream, new Error('premature close'));
		if (writable && !(ws && (ws.ended && !ws.destroyed))) return callback.call(stream, new Error('premature close'));
	};

	var onrequest = function() {
		stream.req.on('finish', onfinish);
	};

	if (isRequest(stream)) {
		stream.on('complete', onfinish);
		stream.on('abort', onclose);
		if (stream.req) onrequest();
		else stream.on('request', onrequest);
	} else if (writable && !ws) { // legacy streams
		stream.on('end', onlegacyfinish);
		stream.on('close', onlegacyfinish);
	}

	if (isChildProcess(stream)) stream.on('exit', onexit);

	stream.on('end', onend);
	stream.on('finish', onfinish);
	if (opts.error !== false) stream.on('error', onerror);
	stream.on('close', onclose);

	return function() {
		cancelled = true;
		stream.removeListener('complete', onfinish);
		stream.removeListener('abort', onclose);
		stream.removeListener('request', onrequest);
		if (stream.req) stream.req.removeListener('finish', onfinish);
		stream.removeListener('end', onlegacyfinish);
		stream.removeListener('close', onlegacyfinish);
		stream.removeListener('finish', onfinish);
		stream.removeListener('exit', onexit);
		stream.removeListener('end', onend);
		stream.removeListener('error', onerror);
		stream.removeListener('close', onclose);
	};
};

module.exports = eos;


/***/ }),

/***/ 8691:
/***/ ((module) => {



module.exports = string => {
	if (typeof string !== 'string') {
		throw new TypeError('Expected a string');
	}

	// Escape characters with special meaning either inside or outside character sets.
	// Use a simple backslash escape when it’s always valid, and a \unnnn escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.
	return string
		.replace(/[|\\{}()[\]^$+*?.]/g, '\\$&')
		.replace(/-/g, '\\x2d');
};


/***/ }),

/***/ 460:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const debug = __nccwpck_require__(8237)('extract-zip')
// eslint-disable-next-line node/no-unsupported-features/node-builtins
const { createWriteStream, promises: fs } = __nccwpck_require__(7147)
const getStream = __nccwpck_require__(1766)
const path = __nccwpck_require__(1017)
const { promisify } = __nccwpck_require__(3837)
const stream = __nccwpck_require__(2781)
const yauzl = __nccwpck_require__(8781)

const openZip = promisify(yauzl.open)
const pipeline = promisify(stream.pipeline)

class Extractor {
  constructor (zipPath, opts) {
    this.zipPath = zipPath
    this.opts = opts
  }

  async extract () {
    debug('opening', this.zipPath, 'with opts', this.opts)

    this.zipfile = await openZip(this.zipPath, { lazyEntries: true })
    this.canceled = false

    return new Promise((resolve, reject) => {
      this.zipfile.on('error', err => {
        this.canceled = true
        reject(err)
      })
      this.zipfile.readEntry()

      this.zipfile.on('close', () => {
        if (!this.canceled) {
          debug('zip extraction complete')
          resolve()
        }
      })

      this.zipfile.on('entry', async entry => {
        /* istanbul ignore if */
        if (this.canceled) {
          debug('skipping entry', entry.fileName, { cancelled: this.canceled })
          return
        }

        debug('zipfile entry', entry.fileName)

        if (entry.fileName.startsWith('__MACOSX/')) {
          this.zipfile.readEntry()
          return
        }

        const destDir = path.dirname(path.join(this.opts.dir, entry.fileName))

        try {
          await fs.mkdir(destDir, { recursive: true })

          const canonicalDestDir = await fs.realpath(destDir)
          const relativeDestDir = path.relative(this.opts.dir, canonicalDestDir)

          if (relativeDestDir.split(path.sep).includes('..')) {
            throw new Error(`Out of bound path "${canonicalDestDir}" found while processing file ${entry.fileName}`)
          }

          await this.extractEntry(entry)
          debug('finished processing', entry.fileName)
          this.zipfile.readEntry()
        } catch (err) {
          this.canceled = true
          this.zipfile.close()
          reject(err)
        }
      })
    })
  }

  async extractEntry (entry) {
    /* istanbul ignore if */
    if (this.canceled) {
      debug('skipping entry extraction', entry.fileName, { cancelled: this.canceled })
      return
    }

    if (this.opts.onEntry) {
      this.opts.onEntry(entry, this.zipfile)
    }

    const dest = path.join(this.opts.dir, entry.fileName)

    // convert external file attr int into a fs stat mode int
    const mode = (entry.externalFileAttributes >> 16) & 0xFFFF
    // check if it's a symlink or dir (using stat mode constants)
    const IFMT = 61440
    const IFDIR = 16384
    const IFLNK = 40960
    const symlink = (mode & IFMT) === IFLNK
    let isDir = (mode & IFMT) === IFDIR

    // Failsafe, borrowed from jsZip
    if (!isDir && entry.fileName.endsWith('/')) {
      isDir = true
    }

    // check for windows weird way of specifying a directory
    // https://github.com/maxogden/extract-zip/issues/13#issuecomment-154494566
    const madeBy = entry.versionMadeBy >> 8
    if (!isDir) isDir = (madeBy === 0 && entry.externalFileAttributes === 16)

    debug('extracting entry', { filename: entry.fileName, isDir: isDir, isSymlink: symlink })

    const procMode = this.getExtractedMode(mode, isDir) & 0o777

    // always ensure folders are created
    const destDir = isDir ? dest : path.dirname(dest)

    const mkdirOptions = { recursive: true }
    if (isDir) {
      mkdirOptions.mode = procMode
    }
    debug('mkdir', { dir: destDir, ...mkdirOptions })
    await fs.mkdir(destDir, mkdirOptions)
    if (isDir) return

    debug('opening read stream', dest)
    const readStream = await promisify(this.zipfile.openReadStream.bind(this.zipfile))(entry)

    if (symlink) {
      const link = await getStream(readStream)
      debug('creating symlink', link, dest)
      await fs.symlink(link, dest)
    } else {
      await pipeline(readStream, createWriteStream(dest, { mode: procMode }))
    }
  }

  getExtractedMode (entryMode, isDir) {
    let mode = entryMode
    // Set defaults, if necessary
    if (mode === 0) {
      if (isDir) {
        if (this.opts.defaultDirMode) {
          mode = parseInt(this.opts.defaultDirMode, 10)
        }

        if (!mode) {
          mode = 0o755
        }
      } else {
        if (this.opts.defaultFileMode) {
          mode = parseInt(this.opts.defaultFileMode, 10)
        }

        if (!mode) {
          mode = 0o644
        }
      }
    }

    return mode
  }
}

module.exports = async function (zipPath, opts) {
  debug('creating target directory', opts.dir)

  if (!path.isAbsolute(opts.dir)) {
    throw new Error('Target directory is expected to be absolute')
  }

  await fs.mkdir(opts.dir, { recursive: true })
  opts.dir = await fs.realpath(opts.dir)
  return new Extractor(zipPath, opts).extract()
}


/***/ }),

/***/ 5010:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

var fs = __nccwpck_require__(7147);
var util = __nccwpck_require__(3837);
var stream = __nccwpck_require__(2781);
var Readable = stream.Readable;
var Writable = stream.Writable;
var PassThrough = stream.PassThrough;
var Pend = __nccwpck_require__(4833);
var EventEmitter = (__nccwpck_require__(2361).EventEmitter);

exports.createFromBuffer = createFromBuffer;
exports.createFromFd = createFromFd;
exports.BufferSlicer = BufferSlicer;
exports.FdSlicer = FdSlicer;

util.inherits(FdSlicer, EventEmitter);
function FdSlicer(fd, options) {
  options = options || {};
  EventEmitter.call(this);

  this.fd = fd;
  this.pend = new Pend();
  this.pend.max = 1;
  this.refCount = 0;
  this.autoClose = !!options.autoClose;
}

FdSlicer.prototype.read = function(buffer, offset, length, position, callback) {
  var self = this;
  self.pend.go(function(cb) {
    fs.read(self.fd, buffer, offset, length, position, function(err, bytesRead, buffer) {
      cb();
      callback(err, bytesRead, buffer);
    });
  });
};

FdSlicer.prototype.write = function(buffer, offset, length, position, callback) {
  var self = this;
  self.pend.go(function(cb) {
    fs.write(self.fd, buffer, offset, length, position, function(err, written, buffer) {
      cb();
      callback(err, written, buffer);
    });
  });
};

FdSlicer.prototype.createReadStream = function(options) {
  return new ReadStream(this, options);
};

FdSlicer.prototype.createWriteStream = function(options) {
  return new WriteStream(this, options);
};

FdSlicer.prototype.ref = function() {
  this.refCount += 1;
};

FdSlicer.prototype.unref = function() {
  var self = this;
  self.refCount -= 1;

  if (self.refCount > 0) return;
  if (self.refCount < 0) throw new Error("invalid unref");

  if (self.autoClose) {
    fs.close(self.fd, onCloseDone);
  }

  function onCloseDone(err) {
    if (err) {
      self.emit('error', err);
    } else {
      self.emit('close');
    }
  }
};

util.inherits(ReadStream, Readable);
function ReadStream(context, options) {
  options = options || {};
  Readable.call(this, options);

  this.context = context;
  this.context.ref();

  this.start = options.start || 0;
  this.endOffset = options.end;
  this.pos = this.start;
  this.destroyed = false;
}

ReadStream.prototype._read = function(n) {
  var self = this;
  if (self.destroyed) return;

  var toRead = Math.min(self._readableState.highWaterMark, n);
  if (self.endOffset != null) {
    toRead = Math.min(toRead, self.endOffset - self.pos);
  }
  if (toRead <= 0) {
    self.destroyed = true;
    self.push(null);
    self.context.unref();
    return;
  }
  self.context.pend.go(function(cb) {
    if (self.destroyed) return cb();
    var buffer = new Buffer(toRead);
    fs.read(self.context.fd, buffer, 0, toRead, self.pos, function(err, bytesRead) {
      if (err) {
        self.destroy(err);
      } else if (bytesRead === 0) {
        self.destroyed = true;
        self.push(null);
        self.context.unref();
      } else {
        self.pos += bytesRead;
        self.push(buffer.slice(0, bytesRead));
      }
      cb();
    });
  });
};

ReadStream.prototype.destroy = function(err) {
  if (this.destroyed) return;
  err = err || new Error("stream destroyed");
  this.destroyed = true;
  this.emit('error', err);
  this.context.unref();
};

util.inherits(WriteStream, Writable);
function WriteStream(context, options) {
  options = options || {};
  Writable.call(this, options);

  this.context = context;
  this.context.ref();

  this.start = options.start || 0;
  this.endOffset = (options.end == null) ? Infinity : +options.end;
  this.bytesWritten = 0;
  this.pos = this.start;
  this.destroyed = false;

  this.on('finish', this.destroy.bind(this));
}

WriteStream.prototype._write = function(buffer, encoding, callback) {
  var self = this;
  if (self.destroyed) return;

  if (self.pos + buffer.length > self.endOffset) {
    var err = new Error("maximum file length exceeded");
    err.code = 'ETOOBIG';
    self.destroy();
    callback(err);
    return;
  }
  self.context.pend.go(function(cb) {
    if (self.destroyed) return cb();
    fs.write(self.context.fd, buffer, 0, buffer.length, self.pos, function(err, bytes) {
      if (err) {
        self.destroy();
        cb();
        callback(err);
      } else {
        self.bytesWritten += bytes;
        self.pos += bytes;
        self.emit('progress');
        cb();
        callback();
      }
    });
  });
};

WriteStream.prototype.destroy = function() {
  if (this.destroyed) return;
  this.destroyed = true;
  this.context.unref();
};

util.inherits(BufferSlicer, EventEmitter);
function BufferSlicer(buffer, options) {
  EventEmitter.call(this);

  options = options || {};
  this.refCount = 0;
  this.buffer = buffer;
  this.maxChunkSize = options.maxChunkSize || Number.MAX_SAFE_INTEGER;
}

BufferSlicer.prototype.read = function(buffer, offset, length, position, callback) {
  var end = position + length;
  var delta = end - this.buffer.length;
  var written = (delta > 0) ? delta : length;
  this.buffer.copy(buffer, offset, position, end);
  setImmediate(function() {
    callback(null, written);
  });
};

BufferSlicer.prototype.write = function(buffer, offset, length, position, callback) {
  buffer.copy(this.buffer, position, offset, offset + length);
  setImmediate(function() {
    callback(null, length, buffer);
  });
};

BufferSlicer.prototype.createReadStream = function(options) {
  options = options || {};
  var readStream = new PassThrough(options);
  readStream.destroyed = false;
  readStream.start = options.start || 0;
  readStream.endOffset = options.end;
  // by the time this function returns, we'll be done.
  readStream.pos = readStream.endOffset || this.buffer.length;

  // respect the maxChunkSize option to slice up the chunk into smaller pieces.
  var entireSlice = this.buffer.slice(readStream.start, readStream.pos);
  var offset = 0;
  while (true) {
    var nextOffset = offset + this.maxChunkSize;
    if (nextOffset >= entireSlice.length) {
      // last chunk
      if (offset < entireSlice.length) {
        readStream.write(entireSlice.slice(offset, entireSlice.length));
      }
      break;
    }
    readStream.write(entireSlice.slice(offset, nextOffset));
    offset = nextOffset;
  }

  readStream.end();
  readStream.destroy = function() {
    readStream.destroyed = true;
  };
  return readStream;
};

BufferSlicer.prototype.createWriteStream = function(options) {
  var bufferSlicer = this;
  options = options || {};
  var writeStream = new Writable(options);
  writeStream.start = options.start || 0;
  writeStream.endOffset = (options.end == null) ? this.buffer.length : +options.end;
  writeStream.bytesWritten = 0;
  writeStream.pos = writeStream.start;
  writeStream.destroyed = false;
  writeStream._write = function(buffer, encoding, callback) {
    if (writeStream.destroyed) return;

    var end = writeStream.pos + buffer.length;
    if (end > writeStream.endOffset) {
      var err = new Error("maximum file length exceeded");
      err.code = 'ETOOBIG';
      writeStream.destroyed = true;
      callback(err);
      return;
    }
    buffer.copy(bufferSlicer.buffer, writeStream.pos, 0, buffer.length);

    writeStream.bytesWritten += buffer.length;
    writeStream.pos = end;
    writeStream.emit('progress');
    callback();
  };
  writeStream.destroy = function() {
    writeStream.destroyed = true;
  };
  return writeStream;
};

BufferSlicer.prototype.ref = function() {
  this.refCount += 1;
};

BufferSlicer.prototype.unref = function() {
  this.refCount -= 1;

  if (this.refCount < 0) {
    throw new Error("invalid unref");
  }
};

function createFromBuffer(buffer, options) {
  return new BufferSlicer(buffer, options);
}

function createFromFd(fd, options) {
  return new FdSlicer(fd, options);
}


/***/ }),

/***/ 3186:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = (__nccwpck_require__(7147).constants) || __nccwpck_require__(2057)


/***/ }),

/***/ 6863:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = realpath
realpath.realpath = realpath
realpath.sync = realpathSync
realpath.realpathSync = realpathSync
realpath.monkeypatch = monkeypatch
realpath.unmonkeypatch = unmonkeypatch

var fs = __nccwpck_require__(7147)
var origRealpath = fs.realpath
var origRealpathSync = fs.realpathSync

var version = process.version
var ok = /^v[0-5]\./.test(version)
var old = __nccwpck_require__(1734)

function newError (er) {
  return er && er.syscall === 'realpath' && (
    er.code === 'ELOOP' ||
    er.code === 'ENOMEM' ||
    er.code === 'ENAMETOOLONG'
  )
}

function realpath (p, cache, cb) {
  if (ok) {
    return origRealpath(p, cache, cb)
  }

  if (typeof cache === 'function') {
    cb = cache
    cache = null
  }
  origRealpath(p, cache, function (er, result) {
    if (newError(er)) {
      old.realpath(p, cache, cb)
    } else {
      cb(er, result)
    }
  })
}

function realpathSync (p, cache) {
  if (ok) {
    return origRealpathSync(p, cache)
  }

  try {
    return origRealpathSync(p, cache)
  } catch (er) {
    if (newError(er)) {
      return old.realpathSync(p, cache)
    } else {
      throw er
    }
  }
}

function monkeypatch () {
  fs.realpath = realpath
  fs.realpathSync = realpathSync
}

function unmonkeypatch () {
  fs.realpath = origRealpath
  fs.realpathSync = origRealpathSync
}


/***/ }),

/***/ 1734:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var pathModule = __nccwpck_require__(1017);
var isWindows = process.platform === 'win32';
var fs = __nccwpck_require__(7147);

// JavaScript implementation of realpath, ported from node pre-v6

var DEBUG = process.env.NODE_DEBUG && /fs/.test(process.env.NODE_DEBUG);

function rethrow() {
  // Only enable in debug mode. A backtrace uses ~1000 bytes of heap space and
  // is fairly slow to generate.
  var callback;
  if (DEBUG) {
    var backtrace = new Error;
    callback = debugCallback;
  } else
    callback = missingCallback;

  return callback;

  function debugCallback(err) {
    if (err) {
      backtrace.message = err.message;
      err = backtrace;
      missingCallback(err);
    }
  }

  function missingCallback(err) {
    if (err) {
      if (process.throwDeprecation)
        throw err;  // Forgot a callback but don't know where? Use NODE_DEBUG=fs
      else if (!process.noDeprecation) {
        var msg = 'fs: missing callback ' + (err.stack || err.message);
        if (process.traceDeprecation)
          console.trace(msg);
        else
          console.error(msg);
      }
    }
  }
}

function maybeCallback(cb) {
  return typeof cb === 'function' ? cb : rethrow();
}

var normalize = pathModule.normalize;

// Regexp that finds the next partion of a (partial) path
// result is [base_with_slash, base], e.g. ['somedir/', 'somedir']
if (isWindows) {
  var nextPartRe = /(.*?)(?:[\/\\]+|$)/g;
} else {
  var nextPartRe = /(.*?)(?:[\/]+|$)/g;
}

// Regex to find the device root, including trailing slash. E.g. 'c:\\'.
if (isWindows) {
  var splitRootRe = /^(?:[a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/][^\\\/]+)?[\\\/]*/;
} else {
  var splitRootRe = /^[\/]*/;
}

exports.realpathSync = function realpathSync(p, cache) {
  // make p is absolute
  p = pathModule.resolve(p);

  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {
    return cache[p];
  }

  var original = p,
      seenLinks = {},
      knownHard = {};

  // current character position in p
  var pos;
  // the partial path so far, including a trailing slash if any
  var current;
  // the partial path without a trailing slash (except when pointing at a root)
  var base;
  // the partial path scanned in the previous round, with slash
  var previous;

  start();

  function start() {
    // Skip over roots
    var m = splitRootRe.exec(p);
    pos = m[0].length;
    current = m[0];
    base = m[0];
    previous = '';

    // On windows, check that the root exists. On unix there is no need.
    if (isWindows && !knownHard[base]) {
      fs.lstatSync(base);
      knownHard[base] = true;
    }
  }

  // walk down the path, swapping out linked pathparts for their real
  // values
  // NB: p.length changes.
  while (pos < p.length) {
    // find the next part
    nextPartRe.lastIndex = pos;
    var result = nextPartRe.exec(p);
    previous = current;
    current += result[0];
    base = previous + result[1];
    pos = nextPartRe.lastIndex;

    // continue if not a symlink
    if (knownHard[base] || (cache && cache[base] === base)) {
      continue;
    }

    var resolvedLink;
    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {
      // some known symbolic link.  no need to stat again.
      resolvedLink = cache[base];
    } else {
      var stat = fs.lstatSync(base);
      if (!stat.isSymbolicLink()) {
        knownHard[base] = true;
        if (cache) cache[base] = base;
        continue;
      }

      // read the link if it wasn't read before
      // dev/ino always return 0 on windows, so skip the check.
      var linkTarget = null;
      if (!isWindows) {
        var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);
        if (seenLinks.hasOwnProperty(id)) {
          linkTarget = seenLinks[id];
        }
      }
      if (linkTarget === null) {
        fs.statSync(base);
        linkTarget = fs.readlinkSync(base);
      }
      resolvedLink = pathModule.resolve(previous, linkTarget);
      // track this, if given a cache.
      if (cache) cache[base] = resolvedLink;
      if (!isWindows) seenLinks[id] = linkTarget;
    }

    // resolve the link, then start over
    p = pathModule.resolve(resolvedLink, p.slice(pos));
    start();
  }

  if (cache) cache[original] = p;

  return p;
};


exports.realpath = function realpath(p, cache, cb) {
  if (typeof cb !== 'function') {
    cb = maybeCallback(cache);
    cache = null;
  }

  // make p is absolute
  p = pathModule.resolve(p);

  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {
    return process.nextTick(cb.bind(null, null, cache[p]));
  }

  var original = p,
      seenLinks = {},
      knownHard = {};

  // current character position in p
  var pos;
  // the partial path so far, including a trailing slash if any
  var current;
  // the partial path without a trailing slash (except when pointing at a root)
  var base;
  // the partial path scanned in the previous round, with slash
  var previous;

  start();

  function start() {
    // Skip over roots
    var m = splitRootRe.exec(p);
    pos = m[0].length;
    current = m[0];
    base = m[0];
    previous = '';

    // On windows, check that the root exists. On unix there is no need.
    if (isWindows && !knownHard[base]) {
      fs.lstat(base, function(err) {
        if (err) return cb(err);
        knownHard[base] = true;
        LOOP();
      });
    } else {
      process.nextTick(LOOP);
    }
  }

  // walk down the path, swapping out linked pathparts for their real
  // values
  function LOOP() {
    // stop if scanned past end of path
    if (pos >= p.length) {
      if (cache) cache[original] = p;
      return cb(null, p);
    }

    // find the next part
    nextPartRe.lastIndex = pos;
    var result = nextPartRe.exec(p);
    previous = current;
    current += result[0];
    base = previous + result[1];
    pos = nextPartRe.lastIndex;

    // continue if not a symlink
    if (knownHard[base] || (cache && cache[base] === base)) {
      return process.nextTick(LOOP);
    }

    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {
      // known symbolic link.  no need to stat again.
      return gotResolvedLink(cache[base]);
    }

    return fs.lstat(base, gotStat);
  }

  function gotStat(err, stat) {
    if (err) return cb(err);

    // if not a symlink, skip to the next path part
    if (!stat.isSymbolicLink()) {
      knownHard[base] = true;
      if (cache) cache[base] = base;
      return process.nextTick(LOOP);
    }

    // stat & read the link if not read before
    // call gotTarget as soon as the link target is known
    // dev/ino always return 0 on windows, so skip the check.
    if (!isWindows) {
      var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);
      if (seenLinks.hasOwnProperty(id)) {
        return gotTarget(null, seenLinks[id], base);
      }
    }
    fs.stat(base, function(err) {
      if (err) return cb(err);

      fs.readlink(base, function(err, target) {
        if (!isWindows) seenLinks[id] = target;
        gotTarget(err, target);
      });
    });
  }

  function gotTarget(err, target, base) {
    if (err) return cb(err);

    var resolvedLink = pathModule.resolve(previous, target);
    if (cache) cache[base] = resolvedLink;
    gotResolvedLink(resolvedLink);
  }

  function gotResolvedLink(resolvedLink) {
    // resolve the link, then start over
    p = pathModule.resolve(resolvedLink, p.slice(pos));
    start();
  }
};


/***/ }),

/***/ 1585:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {


const {PassThrough: PassThroughStream} = __nccwpck_require__(2781);

module.exports = options => {
	options = {...options};

	const {array} = options;
	let {encoding} = options;
	const isBuffer = encoding === 'buffer';
	let objectMode = false;

	if (array) {
		objectMode = !(encoding || isBuffer);
	} else {
		encoding = encoding || 'utf8';
	}

	if (isBuffer) {
		encoding = null;
	}

	const stream = new PassThroughStream({objectMode});

	if (encoding) {
		stream.setEncoding(encoding);
	}

	let length = 0;
	const chunks = [];

	stream.on('data', chunk => {
		chunks.push(chunk);

		if (objectMode) {
			length = chunks.length;
		} else {
			length += chunk.length;
		}
	});

	stream.getBufferedValue = () => {
		if (array) {
			return chunks;
		}

		return isBuffer ? Buffer.concat(chunks, length) : chunks.join('');
	};

	stream.getBufferedLength = () => length;

	return stream;
};


/***/ }),

/***/ 1766:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {


const {constants: BufferConstants} = __nccwpck_require__(4300);
const pump = __nccwpck_require__(8341);
const bufferStream = __nccwpck_require__(1585);

class MaxBufferError extends Error {
	constructor() {
		super('maxBuffer exceeded');
		this.name = 'MaxBufferError';
	}
}

async function getStream(inputStream, options) {
	if (!inputStream) {
		return Promise.reject(new Error('Expected a stream'));
	}

	options = {
		maxBuffer: Infinity,
		...options
	};

	const {maxBuffer} = options;

	let stream;
	await new Promise((resolve, reject) => {
		const rejectPromise = error => {
			// Don't retrieve an oversized buffer.
			if (error && stream.getBufferedLength() <= BufferConstants.MAX_LENGTH) {
				error.bufferedData = stream.getBufferedValue();
			}

			reject(error);
		};

		stream = pump(inputStream, bufferStream(options), error => {
			if (error) {
				rejectPromise(error);
				return;
			}

			resolve();
		});

		stream.on('data', () => {
			if (stream.getBufferedLength() > maxBuffer) {
				rejectPromise(new MaxBufferError());
			}
		});
	});

	return stream.getBufferedValue();
}

module.exports = getStream;
// TODO: Remove this for the next major release
module.exports["default"] = getStream;
module.exports.buffer = (stream, options) => getStream(stream, {...options, encoding: 'buffer'});
module.exports.array = (stream, options) => getStream(stream, {...options, array: true});
module.exports.MaxBufferError = MaxBufferError;


/***/ }),

/***/ 7625:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

exports.setopts = setopts
exports.ownProp = ownProp
exports.makeAbs = makeAbs
exports.finish = finish
exports.mark = mark
exports.isIgnored = isIgnored
exports.childrenIgnored = childrenIgnored

function ownProp (obj, field) {
  return Object.prototype.hasOwnProperty.call(obj, field)
}

var fs = __nccwpck_require__(7147)
var path = __nccwpck_require__(1017)
var minimatch = __nccwpck_require__(3973)
var isAbsolute = __nccwpck_require__(8714)
var Minimatch = minimatch.Minimatch

function alphasort (a, b) {
  return a.localeCompare(b, 'en')
}

function setupIgnores (self, options) {
  self.ignore = options.ignore || []

  if (!Array.isArray(self.ignore))
    self.ignore = [self.ignore]

  if (self.ignore.length) {
    self.ignore = self.ignore.map(ignoreMap)
  }
}

// ignore patterns are always in dot:true mode.
function ignoreMap (pattern) {
  var gmatcher = null
  if (pattern.slice(-3) === '/**') {
    var gpattern = pattern.replace(/(\/\*\*)+$/, '')
    gmatcher = new Minimatch(gpattern, { dot: true })
  }

  return {
    matcher: new Minimatch(pattern, { dot: true }),
    gmatcher: gmatcher
  }
}

function setopts (self, pattern, options) {
  if (!options)
    options = {}

  // base-matching: just use globstar for that.
  if (options.matchBase && -1 === pattern.indexOf("/")) {
    if (options.noglobstar) {
      throw new Error("base matching requires globstar")
    }
    pattern = "**/" + pattern
  }

  self.silent = !!options.silent
  self.pattern = pattern
  self.strict = options.strict !== false
  self.realpath = !!options.realpath
  self.realpathCache = options.realpathCache || Object.create(null)
  self.follow = !!options.follow
  self.dot = !!options.dot
  self.mark = !!options.mark
  self.nodir = !!options.nodir
  if (self.nodir)
    self.mark = true
  self.sync = !!options.sync
  self.nounique = !!options.nounique
  self.nonull = !!options.nonull
  self.nosort = !!options.nosort
  self.nocase = !!options.nocase
  self.stat = !!options.stat
  self.noprocess = !!options.noprocess
  self.absolute = !!options.absolute
  self.fs = options.fs || fs

  self.maxLength = options.maxLength || Infinity
  self.cache = options.cache || Object.create(null)
  self.statCache = options.statCache || Object.create(null)
  self.symlinks = options.symlinks || Object.create(null)

  setupIgnores(self, options)

  self.changedCwd = false
  var cwd = process.cwd()
  if (!ownProp(options, "cwd"))
    self.cwd = cwd
  else {
    self.cwd = path.resolve(options.cwd)
    self.changedCwd = self.cwd !== cwd
  }

  self.root = options.root || path.resolve(self.cwd, "/")
  self.root = path.resolve(self.root)
  if (process.platform === "win32")
    self.root = self.root.replace(/\\/g, "/")

  // TODO: is an absolute `cwd` supposed to be resolved against `root`?
  // e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')
  self.cwdAbs = isAbsolute(self.cwd) ? self.cwd : makeAbs(self, self.cwd)
  if (process.platform === "win32")
    self.cwdAbs = self.cwdAbs.replace(/\\/g, "/")
  self.nomount = !!options.nomount

  // disable comments and negation in Minimatch.
  // Note that they are not supported in Glob itself anyway.
  options.nonegate = true
  options.nocomment = true
  // always treat \ in patterns as escapes, not path separators
  options.allowWindowsEscape = false

  self.minimatch = new Minimatch(pattern, options)
  self.options = self.minimatch.options
}

function finish (self) {
  var nou = self.nounique
  var all = nou ? [] : Object.create(null)

  for (var i = 0, l = self.matches.length; i < l; i ++) {
    var matches = self.matches[i]
    if (!matches || Object.keys(matches).length === 0) {
      if (self.nonull) {
        // do like the shell, and spit out the literal glob
        var literal = self.minimatch.globSet[i]
        if (nou)
          all.push(literal)
        else
          all[literal] = true
      }
    } else {
      // had matches
      var m = Object.keys(matches)
      if (nou)
        all.push.apply(all, m)
      else
        m.forEach(function (m) {
          all[m] = true
        })
    }
  }

  if (!nou)
    all = Object.keys(all)

  if (!self.nosort)
    all = all.sort(alphasort)

  // at *some* point we statted all of these
  if (self.mark) {
    for (var i = 0; i < all.length; i++) {
      all[i] = self._mark(all[i])
    }
    if (self.nodir) {
      all = all.filter(function (e) {
        var notDir = !(/\/$/.test(e))
        var c = self.cache[e] || self.cache[makeAbs(self, e)]
        if (notDir && c)
          notDir = c !== 'DIR' && !Array.isArray(c)
        return notDir
      })
    }
  }

  if (self.ignore.length)
    all = all.filter(function(m) {
      return !isIgnored(self, m)
    })

  self.found = all
}

function mark (self, p) {
  var abs = makeAbs(self, p)
  var c = self.cache[abs]
  var m = p
  if (c) {
    var isDir = c === 'DIR' || Array.isArray(c)
    var slash = p.slice(-1) === '/'

    if (isDir && !slash)
      m += '/'
    else if (!isDir && slash)
      m = m.slice(0, -1)

    if (m !== p) {
      var mabs = makeAbs(self, m)
      self.statCache[mabs] = self.statCache[abs]
      self.cache[mabs] = self.cache[abs]
    }
  }

  return m
}

// lotta situps...
function makeAbs (self, f) {
  var abs = f
  if (f.charAt(0) === '/') {
    abs = path.join(self.root, f)
  } else if (isAbsolute(f) || f === '') {
    abs = f
  } else if (self.changedCwd) {
    abs = path.resolve(self.cwd, f)
  } else {
    abs = path.resolve(f)
  }

  if (process.platform === 'win32')
    abs = abs.replace(/\\/g, '/')

  return abs
}


// Return true, if pattern ends with globstar '**', for the accompanying parent directory.
// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents
function isIgnored (self, path) {
  if (!self.ignore.length)
    return false

  return self.ignore.some(function(item) {
    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))
  })
}

function childrenIgnored (self, path) {
  if (!self.ignore.length)
    return false

  return self.ignore.some(function(item) {
    return !!(item.gmatcher && item.gmatcher.match(path))
  })
}


/***/ }),

/***/ 1957:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

// Approach:
//
// 1. Get the minimatch set
// 2. For each pattern in the set, PROCESS(pattern, false)
// 3. Store matches per-set, then uniq them
//
// PROCESS(pattern, inGlobStar)
// Get the first [n] items from pattern that are all strings
// Join these together.  This is PREFIX.
//   If there is no more remaining, then stat(PREFIX) and
//   add to matches if it succeeds.  END.
//
// If inGlobStar and PREFIX is symlink and points to dir
//   set ENTRIES = []
// else readdir(PREFIX) as ENTRIES
//   If fail, END
//
// with ENTRIES
//   If pattern[n] is GLOBSTAR
//     // handle the case where the globstar match is empty
//     // by pruning it out, and testing the resulting pattern
//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)
//     // handle other cases.
//     for ENTRY in ENTRIES (not dotfiles)
//       // attach globstar + tail onto the entry
//       // Mark that this entry is a globstar match
//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)
//
//   else // not globstar
//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)
//       Test ENTRY against pattern[n]
//       If fails, continue
//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])
//
// Caveat:
//   Cache all stats and readdirs results to minimize syscall.  Since all
//   we ever care about is existence and directory-ness, we can just keep
//   `true` for files, and [children,...] for directories, or `false` for
//   things that don't exist.

module.exports = glob

var rp = __nccwpck_require__(6863)
var minimatch = __nccwpck_require__(3973)
var Minimatch = minimatch.Minimatch
var inherits = __nccwpck_require__(4124)
var EE = (__nccwpck_require__(2361).EventEmitter)
var path = __nccwpck_require__(1017)
var assert = __nccwpck_require__(9491)
var isAbsolute = __nccwpck_require__(8714)
var globSync = __nccwpck_require__(9010)
var common = __nccwpck_require__(7625)
var setopts = common.setopts
var ownProp = common.ownProp
var inflight = __nccwpck_require__(2492)
var util = __nccwpck_require__(3837)
var childrenIgnored = common.childrenIgnored
var isIgnored = common.isIgnored

var once = __nccwpck_require__(1223)

function glob (pattern, options, cb) {
  if (typeof options === 'function') cb = options, options = {}
  if (!options) options = {}

  if (options.sync) {
    if (cb)
      throw new TypeError('callback provided to sync glob')
    return globSync(pattern, options)
  }

  return new Glob(pattern, options, cb)
}

glob.sync = globSync
var GlobSync = glob.GlobSync = globSync.GlobSync

// old api surface
glob.glob = glob

function extend (origin, add) {
  if (add === null || typeof add !== 'object') {
    return origin
  }

  var keys = Object.keys(add)
  var i = keys.length
  while (i--) {
    origin[keys[i]] = add[keys[i]]
  }
  return origin
}

glob.hasMagic = function (pattern, options_) {
  var options = extend({}, options_)
  options.noprocess = true

  var g = new Glob(pattern, options)
  var set = g.minimatch.set

  if (!pattern)
    return false

  if (set.length > 1)
    return true

  for (var j = 0; j < set[0].length; j++) {
    if (typeof set[0][j] !== 'string')
      return true
  }

  return false
}

glob.Glob = Glob
inherits(Glob, EE)
function Glob (pattern, options, cb) {
  if (typeof options === 'function') {
    cb = options
    options = null
  }

  if (options && options.sync) {
    if (cb)
      throw new TypeError('callback provided to sync glob')
    return new GlobSync(pattern, options)
  }

  if (!(this instanceof Glob))
    return new Glob(pattern, options, cb)

  setopts(this, pattern, options)
  this._didRealPath = false

  // process each pattern in the minimatch set
  var n = this.minimatch.set.length

  // The matches are stored as {<filename>: true,...} so that
  // duplicates are automagically pruned.
  // Later, we do an Object.keys() on these.
  // Keep them as a list so we can fill in when nonull is set.
  this.matches = new Array(n)

  if (typeof cb === 'function') {
    cb = once(cb)
    this.on('error', cb)
    this.on('end', function (matches) {
      cb(null, matches)
    })
  }

  var self = this
  this._processing = 0

  this._emitQueue = []
  this._processQueue = []
  this.paused = false

  if (this.noprocess)
    return this

  if (n === 0)
    return done()

  var sync = true
  for (var i = 0; i < n; i ++) {
    this._process(this.minimatch.set[i], i, false, done)
  }
  sync = false

  function done () {
    --self._processing
    if (self._processing <= 0) {
      if (sync) {
        process.nextTick(function () {
          self._finish()
        })
      } else {
        self._finish()
      }
    }
  }
}

Glob.prototype._finish = function () {
  assert(this instanceof Glob)
  if (this.aborted)
    return

  if (this.realpath && !this._didRealpath)
    return this._realpath()

  common.finish(this)
  this.emit('end', this.found)
}

Glob.prototype._realpath = function () {
  if (this._didRealpath)
    return

  this._didRealpath = true

  var n = this.matches.length
  if (n === 0)
    return this._finish()

  var self = this
  for (var i = 0; i < this.matches.length; i++)
    this._realpathSet(i, next)

  function next () {
    if (--n === 0)
      self._finish()
  }
}

Glob.prototype._realpathSet = function (index, cb) {
  var matchset = this.matches[index]
  if (!matchset)
    return cb()

  var found = Object.keys(matchset)
  var self = this
  var n = found.length

  if (n === 0)
    return cb()

  var set = this.matches[index] = Object.create(null)
  found.forEach(function (p, i) {
    // If there's a problem with the stat, then it means that
    // one or more of the links in the realpath couldn't be
    // resolved.  just return the abs value in that case.
    p = self._makeAbs(p)
    rp.realpath(p, self.realpathCache, function (er, real) {
      if (!er)
        set[real] = true
      else if (er.syscall === 'stat')
        set[p] = true
      else
        self.emit('error', er) // srsly wtf right here

      if (--n === 0) {
        self.matches[index] = set
        cb()
      }
    })
  })
}

Glob.prototype._mark = function (p) {
  return common.mark(this, p)
}

Glob.prototype._makeAbs = function (f) {
  return common.makeAbs(this, f)
}

Glob.prototype.abort = function () {
  this.aborted = true
  this.emit('abort')
}

Glob.prototype.pause = function () {
  if (!this.paused) {
    this.paused = true
    this.emit('pause')
  }
}

Glob.prototype.resume = function () {
  if (this.paused) {
    this.emit('resume')
    this.paused = false
    if (this._emitQueue.length) {
      var eq = this._emitQueue.slice(0)
      this._emitQueue.length = 0
      for (var i = 0; i < eq.length; i ++) {
        var e = eq[i]
        this._emitMatch(e[0], e[1])
      }
    }
    if (this._processQueue.length) {
      var pq = this._processQueue.slice(0)
      this._processQueue.length = 0
      for (var i = 0; i < pq.length; i ++) {
        var p = pq[i]
        this._processing--
        this._process(p[0], p[1], p[2], p[3])
      }
    }
  }
}

Glob.prototype._process = function (pattern, index, inGlobStar, cb) {
  assert(this instanceof Glob)
  assert(typeof cb === 'function')

  if (this.aborted)
    return

  this._processing++
  if (this.paused) {
    this._processQueue.push([pattern, index, inGlobStar, cb])
    return
  }

  //console.error('PROCESS %d', this._processing, pattern)

  // Get the first [n] parts of pattern that are all strings.
  var n = 0
  while (typeof pattern[n] === 'string') {
    n ++
  }
  // now n is the index of the first one that is *not* a string.

  // see if there's anything else
  var prefix
  switch (n) {
    // if not, then this is rather simple
    case pattern.length:
      this._processSimple(pattern.join('/'), index, cb)
      return

    case 0:
      // pattern *starts* with some non-trivial item.
      // going to readdir(cwd), but not include the prefix in matches.
      prefix = null
      break

    default:
      // pattern has some string bits in the front.
      // whatever it starts with, whether that's 'absolute' like /foo/bar,
      // or 'relative' like '../baz'
      prefix = pattern.slice(0, n).join('/')
      break
  }

  var remain = pattern.slice(n)

  // get the list of entries.
  var read
  if (prefix === null)
    read = '.'
  else if (isAbsolute(prefix) ||
      isAbsolute(pattern.map(function (p) {
        return typeof p === 'string' ? p : '[*]'
      }).join('/'))) {
    if (!prefix || !isAbsolute(prefix))
      prefix = '/' + prefix
    read = prefix
  } else
    read = prefix

  var abs = this._makeAbs(read)

  //if ignored, skip _processing
  if (childrenIgnored(this, read))
    return cb()

  var isGlobStar = remain[0] === minimatch.GLOBSTAR
  if (isGlobStar)
    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb)
  else
    this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb)
}

Glob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {
  var self = this
  this._readdir(abs, inGlobStar, function (er, entries) {
    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb)
  })
}

Glob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {

  // if the abs isn't a dir, then nothing can match!
  if (!entries)
    return cb()

  // It will only match dot entries if it starts with a dot, or if
  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.
  var pn = remain[0]
  var negate = !!this.minimatch.negate
  var rawGlob = pn._glob
  var dotOk = this.dot || rawGlob.charAt(0) === '.'

  var matchedEntries = []
  for (var i = 0; i < entries.length; i++) {
    var e = entries[i]
    if (e.charAt(0) !== '.' || dotOk) {
      var m
      if (negate && !prefix) {
        m = !e.match(pn)
      } else {
        m = e.match(pn)
      }
      if (m)
        matchedEntries.push(e)
    }
  }

  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)

  var len = matchedEntries.length
  // If there are no matched entries, then nothing matches.
  if (len === 0)
    return cb()

  // if this is the last remaining pattern bit, then no need for
  // an additional stat *unless* the user has specified mark or
  // stat explicitly.  We know they exist, since readdir returned
  // them.

  if (remain.length === 1 && !this.mark && !this.stat) {
    if (!this.matches[index])
      this.matches[index] = Object.create(null)

    for (var i = 0; i < len; i ++) {
      var e = matchedEntries[i]
      if (prefix) {
        if (prefix !== '/')
          e = prefix + '/' + e
        else
          e = prefix + e
      }

      if (e.charAt(0) === '/' && !this.nomount) {
        e = path.join(this.root, e)
      }
      this._emitMatch(index, e)
    }
    // This was the last one, and no stats were needed
    return cb()
  }

  // now test all matched entries as stand-ins for that part
  // of the pattern.
  remain.shift()
  for (var i = 0; i < len; i ++) {
    var e = matchedEntries[i]
    var newPattern
    if (prefix) {
      if (prefix !== '/')
        e = prefix + '/' + e
      else
        e = prefix + e
    }
    this._process([e].concat(remain), index, inGlobStar, cb)
  }
  cb()
}

Glob.prototype._emitMatch = function (index, e) {
  if (this.aborted)
    return

  if (isIgnored(this, e))
    return

  if (this.paused) {
    this._emitQueue.push([index, e])
    return
  }

  var abs = isAbsolute(e) ? e : this._makeAbs(e)

  if (this.mark)
    e = this._mark(e)

  if (this.absolute)
    e = abs

  if (this.matches[index][e])
    return

  if (this.nodir) {
    var c = this.cache[abs]
    if (c === 'DIR' || Array.isArray(c))
      return
  }

  this.matches[index][e] = true

  var st = this.statCache[abs]
  if (st)
    this.emit('stat', e, st)

  this.emit('match', e)
}

Glob.prototype._readdirInGlobStar = function (abs, cb) {
  if (this.aborted)
    return

  // follow all symlinked directories forever
  // just proceed as if this is a non-globstar situation
  if (this.follow)
    return this._readdir(abs, false, cb)

  var lstatkey = 'lstat\0' + abs
  var self = this
  var lstatcb = inflight(lstatkey, lstatcb_)

  if (lstatcb)
    self.fs.lstat(abs, lstatcb)

  function lstatcb_ (er, lstat) {
    if (er && er.code === 'ENOENT')
      return cb()

    var isSym = lstat && lstat.isSymbolicLink()
    self.symlinks[abs] = isSym

    // If it's not a symlink or a dir, then it's definitely a regular file.
    // don't bother doing a readdir in that case.
    if (!isSym && lstat && !lstat.isDirectory()) {
      self.cache[abs] = 'FILE'
      cb()
    } else
      self._readdir(abs, false, cb)
  }
}

Glob.prototype._readdir = function (abs, inGlobStar, cb) {
  if (this.aborted)
    return

  cb = inflight('readdir\0'+abs+'\0'+inGlobStar, cb)
  if (!cb)
    return

  //console.error('RD %j %j', +inGlobStar, abs)
  if (inGlobStar && !ownProp(this.symlinks, abs))
    return this._readdirInGlobStar(abs, cb)

  if (ownProp(this.cache, abs)) {
    var c = this.cache[abs]
    if (!c || c === 'FILE')
      return cb()

    if (Array.isArray(c))
      return cb(null, c)
  }

  var self = this
  self.fs.readdir(abs, readdirCb(this, abs, cb))
}

function readdirCb (self, abs, cb) {
  return function (er, entries) {
    if (er)
      self._readdirError(abs, er, cb)
    else
      self._readdirEntries(abs, entries, cb)
  }
}

Glob.prototype._readdirEntries = function (abs, entries, cb) {
  if (this.aborted)
    return

  // if we haven't asked to stat everything, then just
  // assume that everything in there exists, so we can avoid
  // having to stat it a second time.
  if (!this.mark && !this.stat) {
    for (var i = 0; i < entries.length; i ++) {
      var e = entries[i]
      if (abs === '/')
        e = abs + e
      else
        e = abs + '/' + e
      this.cache[e] = true
    }
  }

  this.cache[abs] = entries
  return cb(null, entries)
}

Glob.prototype._readdirError = function (f, er, cb) {
  if (this.aborted)
    return

  // handle errors, and cache the information
  switch (er.code) {
    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205
    case 'ENOTDIR': // totally normal. means it *does* exist.
      var abs = this._makeAbs(f)
      this.cache[abs] = 'FILE'
      if (abs === this.cwdAbs) {
        var error = new Error(er.code + ' invalid cwd ' + this.cwd)
        error.path = this.cwd
        error.code = er.code
        this.emit('error', error)
        this.abort()
      }
      break

    case 'ENOENT': // not terribly unusual
    case 'ELOOP':
    case 'ENAMETOOLONG':
    case 'UNKNOWN':
      this.cache[this._makeAbs(f)] = false
      break

    default: // some unusual error.  Treat as failure.
      this.cache[this._makeAbs(f)] = false
      if (this.strict) {
        this.emit('error', er)
        // If the error is handled, then we abort
        // if not, we threw out of here
        this.abort()
      }
      if (!this.silent)
        console.error('glob error', er)
      break
  }

  return cb()
}

Glob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {
  var self = this
  this._readdir(abs, inGlobStar, function (er, entries) {
    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb)
  })
}


Glob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {
  //console.error('pgs2', prefix, remain[0], entries)

  // no entries means not a dir, so it can never have matches
  // foo.txt/** doesn't match foo.txt
  if (!entries)
    return cb()

  // test without the globstar, and with every child both below
  // and replacing the globstar.
  var remainWithoutGlobStar = remain.slice(1)
  var gspref = prefix ? [ prefix ] : []
  var noGlobStar = gspref.concat(remainWithoutGlobStar)

  // the noGlobStar pattern exits the inGlobStar state
  this._process(noGlobStar, index, false, cb)

  var isSym = this.symlinks[abs]
  var len = entries.length

  // If it's a symlink, and we're in a globstar, then stop
  if (isSym && inGlobStar)
    return cb()

  for (var i = 0; i < len; i++) {
    var e = entries[i]
    if (e.charAt(0) === '.' && !this.dot)
      continue

    // these two cases enter the inGlobStar state
    var instead = gspref.concat(entries[i], remainWithoutGlobStar)
    this._process(instead, index, true, cb)

    var below = gspref.concat(entries[i], remain)
    this._process(below, index, true, cb)
  }

  cb()
}

Glob.prototype._processSimple = function (prefix, index, cb) {
  // XXX review this.  Shouldn't it be doing the mounting etc
  // before doing stat?  kinda weird?
  var self = this
  this._stat(prefix, function (er, exists) {
    self._processSimple2(prefix, index, er, exists, cb)
  })
}
Glob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {

  //console.error('ps2', prefix, exists)

  if (!this.matches[index])
    this.matches[index] = Object.create(null)

  // If it doesn't exist, then just mark the lack of results
  if (!exists)
    return cb()

  if (prefix && isAbsolute(prefix) && !this.nomount) {
    var trail = /[\/\\]$/.test(prefix)
    if (prefix.charAt(0) === '/') {
      prefix = path.join(this.root, prefix)
    } else {
      prefix = path.resolve(this.root, prefix)
      if (trail)
        prefix += '/'
    }
  }

  if (process.platform === 'win32')
    prefix = prefix.replace(/\\/g, '/')

  // Mark this as a match
  this._emitMatch(index, prefix)
  cb()
}

// Returns either 'DIR', 'FILE', or false
Glob.prototype._stat = function (f, cb) {
  var abs = this._makeAbs(f)
  var needDir = f.slice(-1) === '/'

  if (f.length > this.maxLength)
    return cb()

  if (!this.stat && ownProp(this.cache, abs)) {
    var c = this.cache[abs]

    if (Array.isArray(c))
      c = 'DIR'

    // It exists, but maybe not how we need it
    if (!needDir || c === 'DIR')
      return cb(null, c)

    if (needDir && c === 'FILE')
      return cb()

    // otherwise we have to stat, because maybe c=true
    // if we know it exists, but not what it is.
  }

  var exists
  var stat = this.statCache[abs]
  if (stat !== undefined) {
    if (stat === false)
      return cb(null, stat)
    else {
      var type = stat.isDirectory() ? 'DIR' : 'FILE'
      if (needDir && type === 'FILE')
        return cb()
      else
        return cb(null, type, stat)
    }
  }

  var self = this
  var statcb = inflight('stat\0' + abs, lstatcb_)
  if (statcb)
    self.fs.lstat(abs, statcb)

  function lstatcb_ (er, lstat) {
    if (lstat && lstat.isSymbolicLink()) {
      // If it's a symlink, then treat it as the target, unless
      // the target does not exist, then treat it as a file.
      return self.fs.stat(abs, function (er, stat) {
        if (er)
          self._stat2(f, abs, null, lstat, cb)
        else
          self._stat2(f, abs, er, stat, cb)
      })
    } else {
      self._stat2(f, abs, er, lstat, cb)
    }
  }
}

Glob.prototype._stat2 = function (f, abs, er, stat, cb) {
  if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {
    this.statCache[abs] = false
    return cb()
  }

  var needDir = f.slice(-1) === '/'
  this.statCache[abs] = stat

  if (abs.slice(-1) === '/' && stat && !stat.isDirectory())
    return cb(null, false, stat)

  var c = true
  if (stat)
    c = stat.isDirectory() ? 'DIR' : 'FILE'
  this.cache[abs] = this.cache[abs] || c

  if (needDir && c === 'FILE')
    return cb()

  return cb(null, c, stat)
}


/***/ }),

/***/ 9010:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = globSync
globSync.GlobSync = GlobSync

var rp = __nccwpck_require__(6863)
var minimatch = __nccwpck_require__(3973)
var Minimatch = minimatch.Minimatch
var Glob = (__nccwpck_require__(1957).Glob)
var util = __nccwpck_require__(3837)
var path = __nccwpck_require__(1017)
var assert = __nccwpck_require__(9491)
var isAbsolute = __nccwpck_require__(8714)
var common = __nccwpck_require__(7625)
var setopts = common.setopts
var ownProp = common.ownProp
var childrenIgnored = common.childrenIgnored
var isIgnored = common.isIgnored

function globSync (pattern, options) {
  if (typeof options === 'function' || arguments.length === 3)
    throw new TypeError('callback provided to sync glob\n'+
                        'See: https://github.com/isaacs/node-glob/issues/167')

  return new GlobSync(pattern, options).found
}

function GlobSync (pattern, options) {
  if (!pattern)
    throw new Error('must provide pattern')

  if (typeof options === 'function' || arguments.length === 3)
    throw new TypeError('callback provided to sync glob\n'+
                        'See: https://github.com/isaacs/node-glob/issues/167')

  if (!(this instanceof GlobSync))
    return new GlobSync(pattern, options)

  setopts(this, pattern, options)

  if (this.noprocess)
    return this

  var n = this.minimatch.set.length
  this.matches = new Array(n)
  for (var i = 0; i < n; i ++) {
    this._process(this.minimatch.set[i], i, false)
  }
  this._finish()
}

GlobSync.prototype._finish = function () {
  assert.ok(this instanceof GlobSync)
  if (this.realpath) {
    var self = this
    this.matches.forEach(function (matchset, index) {
      var set = self.matches[index] = Object.create(null)
      for (var p in matchset) {
        try {
          p = self._makeAbs(p)
          var real = rp.realpathSync(p, self.realpathCache)
          set[real] = true
        } catch (er) {
          if (er.syscall === 'stat')
            set[self._makeAbs(p)] = true
          else
            throw er
        }
      }
    })
  }
  common.finish(this)
}


GlobSync.prototype._process = function (pattern, index, inGlobStar) {
  assert.ok(this instanceof GlobSync)

  // Get the first [n] parts of pattern that are all strings.
  var n = 0
  while (typeof pattern[n] === 'string') {
    n ++
  }
  // now n is the index of the first one that is *not* a string.

  // See if there's anything else
  var prefix
  switch (n) {
    // if not, then this is rather simple
    case pattern.length:
      this._processSimple(pattern.join('/'), index)
      return

    case 0:
      // pattern *starts* with some non-trivial item.
      // going to readdir(cwd), but not include the prefix in matches.
      prefix = null
      break

    default:
      // pattern has some string bits in the front.
      // whatever it starts with, whether that's 'absolute' like /foo/bar,
      // or 'relative' like '../baz'
      prefix = pattern.slice(0, n).join('/')
      break
  }

  var remain = pattern.slice(n)

  // get the list of entries.
  var read
  if (prefix === null)
    read = '.'
  else if (isAbsolute(prefix) ||
      isAbsolute(pattern.map(function (p) {
        return typeof p === 'string' ? p : '[*]'
      }).join('/'))) {
    if (!prefix || !isAbsolute(prefix))
      prefix = '/' + prefix
    read = prefix
  } else
    read = prefix

  var abs = this._makeAbs(read)

  //if ignored, skip processing
  if (childrenIgnored(this, read))
    return

  var isGlobStar = remain[0] === minimatch.GLOBSTAR
  if (isGlobStar)
    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar)
  else
    this._processReaddir(prefix, read, abs, remain, index, inGlobStar)
}


GlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {
  var entries = this._readdir(abs, inGlobStar)

  // if the abs isn't a dir, then nothing can match!
  if (!entries)
    return

  // It will only match dot entries if it starts with a dot, or if
  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.
  var pn = remain[0]
  var negate = !!this.minimatch.negate
  var rawGlob = pn._glob
  var dotOk = this.dot || rawGlob.charAt(0) === '.'

  var matchedEntries = []
  for (var i = 0; i < entries.length; i++) {
    var e = entries[i]
    if (e.charAt(0) !== '.' || dotOk) {
      var m
      if (negate && !prefix) {
        m = !e.match(pn)
      } else {
        m = e.match(pn)
      }
      if (m)
        matchedEntries.push(e)
    }
  }

  var len = matchedEntries.length
  // If there are no matched entries, then nothing matches.
  if (len === 0)
    return

  // if this is the last remaining pattern bit, then no need for
  // an additional stat *unless* the user has specified mark or
  // stat explicitly.  We know they exist, since readdir returned
  // them.

  if (remain.length === 1 && !this.mark && !this.stat) {
    if (!this.matches[index])
      this.matches[index] = Object.create(null)

    for (var i = 0; i < len; i ++) {
      var e = matchedEntries[i]
      if (prefix) {
        if (prefix.slice(-1) !== '/')
          e = prefix + '/' + e
        else
          e = prefix + e
      }

      if (e.charAt(0) === '/' && !this.nomount) {
        e = path.join(this.root, e)
      }
      this._emitMatch(index, e)
    }
    // This was the last one, and no stats were needed
    return
  }

  // now test all matched entries as stand-ins for that part
  // of the pattern.
  remain.shift()
  for (var i = 0; i < len; i ++) {
    var e = matchedEntries[i]
    var newPattern
    if (prefix)
      newPattern = [prefix, e]
    else
      newPattern = [e]
    this._process(newPattern.concat(remain), index, inGlobStar)
  }
}


GlobSync.prototype._emitMatch = function (index, e) {
  if (isIgnored(this, e))
    return

  var abs = this._makeAbs(e)

  if (this.mark)
    e = this._mark(e)

  if (this.absolute) {
    e = abs
  }

  if (this.matches[index][e])
    return

  if (this.nodir) {
    var c = this.cache[abs]
    if (c === 'DIR' || Array.isArray(c))
      return
  }

  this.matches[index][e] = true

  if (this.stat)
    this._stat(e)
}


GlobSync.prototype._readdirInGlobStar = function (abs) {
  // follow all symlinked directories forever
  // just proceed as if this is a non-globstar situation
  if (this.follow)
    return this._readdir(abs, false)

  var entries
  var lstat
  var stat
  try {
    lstat = this.fs.lstatSync(abs)
  } catch (er) {
    if (er.code === 'ENOENT') {
      // lstat failed, doesn't exist
      return null
    }
  }

  var isSym = lstat && lstat.isSymbolicLink()
  this.symlinks[abs] = isSym

  // If it's not a symlink or a dir, then it's definitely a regular file.
  // don't bother doing a readdir in that case.
  if (!isSym && lstat && !lstat.isDirectory())
    this.cache[abs] = 'FILE'
  else
    entries = this._readdir(abs, false)

  return entries
}

GlobSync.prototype._readdir = function (abs, inGlobStar) {
  var entries

  if (inGlobStar && !ownProp(this.symlinks, abs))
    return this._readdirInGlobStar(abs)

  if (ownProp(this.cache, abs)) {
    var c = this.cache[abs]
    if (!c || c === 'FILE')
      return null

    if (Array.isArray(c))
      return c
  }

  try {
    return this._readdirEntries(abs, this.fs.readdirSync(abs))
  } catch (er) {
    this._readdirError(abs, er)
    return null
  }
}

GlobSync.prototype._readdirEntries = function (abs, entries) {
  // if we haven't asked to stat everything, then just
  // assume that everything in there exists, so we can avoid
  // having to stat it a second time.
  if (!this.mark && !this.stat) {
    for (var i = 0; i < entries.length; i ++) {
      var e = entries[i]
      if (abs === '/')
        e = abs + e
      else
        e = abs + '/' + e
      this.cache[e] = true
    }
  }

  this.cache[abs] = entries

  // mark and cache dir-ness
  return entries
}

GlobSync.prototype._readdirError = function (f, er) {
  // handle errors, and cache the information
  switch (er.code) {
    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205
    case 'ENOTDIR': // totally normal. means it *does* exist.
      var abs = this._makeAbs(f)
      this.cache[abs] = 'FILE'
      if (abs === this.cwdAbs) {
        var error = new Error(er.code + ' invalid cwd ' + this.cwd)
        error.path = this.cwd
        error.code = er.code
        throw error
      }
      break

    case 'ENOENT': // not terribly unusual
    case 'ELOOP':
    case 'ENAMETOOLONG':
    case 'UNKNOWN':
      this.cache[this._makeAbs(f)] = false
      break

    default: // some unusual error.  Treat as failure.
      this.cache[this._makeAbs(f)] = false
      if (this.strict)
        throw er
      if (!this.silent)
        console.error('glob error', er)
      break
  }
}

GlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {

  var entries = this._readdir(abs, inGlobStar)

  // no entries means not a dir, so it can never have matches
  // foo.txt/** doesn't match foo.txt
  if (!entries)
    return

  // test without the globstar, and with every child both below
  // and replacing the globstar.
  var remainWithoutGlobStar = remain.slice(1)
  var gspref = prefix ? [ prefix ] : []
  var noGlobStar = gspref.concat(remainWithoutGlobStar)

  // the noGlobStar pattern exits the inGlobStar state
  this._process(noGlobStar, index, false)

  var len = entries.length
  var isSym = this.symlinks[abs]

  // If it's a symlink, and we're in a globstar, then stop
  if (isSym && inGlobStar)
    return

  for (var i = 0; i < len; i++) {
    var e = entries[i]
    if (e.charAt(0) === '.' && !this.dot)
      continue

    // these two cases enter the inGlobStar state
    var instead = gspref.concat(entries[i], remainWithoutGlobStar)
    this._process(instead, index, true)

    var below = gspref.concat(entries[i], remain)
    this._process(below, index, true)
  }
}

GlobSync.prototype._processSimple = function (prefix, index) {
  // XXX review this.  Shouldn't it be doing the mounting etc
  // before doing stat?  kinda weird?
  var exists = this._stat(prefix)

  if (!this.matches[index])
    this.matches[index] = Object.create(null)

  // If it doesn't exist, then just mark the lack of results
  if (!exists)
    return

  if (prefix && isAbsolute(prefix) && !this.nomount) {
    var trail = /[\/\\]$/.test(prefix)
    if (prefix.charAt(0) === '/') {
      prefix = path.join(this.root, prefix)
    } else {
      prefix = path.resolve(this.root, prefix)
      if (trail)
        prefix += '/'
    }
  }

  if (process.platform === 'win32')
    prefix = prefix.replace(/\\/g, '/')

  // Mark this as a match
  this._emitMatch(index, prefix)
}

// Returns either 'DIR', 'FILE', or false
GlobSync.prototype._stat = function (f) {
  var abs = this._makeAbs(f)
  var needDir = f.slice(-1) === '/'

  if (f.length > this.maxLength)
    return false

  if (!this.stat && ownProp(this.cache, abs)) {
    var c = this.cache[abs]

    if (Array.isArray(c))
      c = 'DIR'

    // It exists, but maybe not how we need it
    if (!needDir || c === 'DIR')
      return c

    if (needDir && c === 'FILE')
      return false

    // otherwise we have to stat, because maybe c=true
    // if we know it exists, but not what it is.
  }

  var exists
  var stat = this.statCache[abs]
  if (!stat) {
    var lstat
    try {
      lstat = this.fs.lstatSync(abs)
    } catch (er) {
      if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {
        this.statCache[abs] = false
        return false
      }
    }

    if (lstat && lstat.isSymbolicLink()) {
      try {
        stat = this.fs.statSync(abs)
      } catch (er) {
        stat = lstat
      }
    } else {
      stat = lstat
    }
  }

  this.statCache[abs] = stat

  var c = true
  if (stat)
    c = stat.isDirectory() ? 'DIR' : 'FILE'

  this.cache[abs] = this.cache[abs] || c

  if (needDir && c === 'FILE')
    return false

  return c
}

GlobSync.prototype._mark = function (p) {
  return common.mark(this, p)
}

GlobSync.prototype._makeAbs = function (f) {
  return common.makeAbs(this, f)
}


/***/ }),

/***/ 5098:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {


var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const net_1 = __importDefault(__nccwpck_require__(1808));
const tls_1 = __importDefault(__nccwpck_require__(4404));
const url_1 = __importDefault(__nccwpck_require__(7310));
const assert_1 = __importDefault(__nccwpck_require__(9491));
const debug_1 = __importDefault(__nccwpck_require__(8237));
const agent_base_1 = __nccwpck_require__(9690);
const parse_proxy_response_1 = __importDefault(__nccwpck_require__(595));
const debug = debug_1.default('https-proxy-agent:agent');
/**
 * The `HttpsProxyAgent` implements an HTTP Agent subclass that connects to
 * the specified "HTTP(s) proxy server" in order to proxy HTTPS requests.
 *
 * Outgoing HTTP requests are first tunneled through the proxy server using the
 * `CONNECT` HTTP request method to establish a connection to the proxy server,
 * and then the proxy server connects to the destination target and issues the
 * HTTP request from the proxy server.
 *
 * `https:` requests have their socket connection upgraded to TLS once
 * the connection to the proxy server has been established.
 *
 * @api public
 */
class HttpsProxyAgent extends agent_base_1.Agent {
    constructor(_opts) {
        let opts;
        if (typeof _opts === 'string') {
            opts = url_1.default.parse(_opts);
        }
        else {
            opts = _opts;
        }
        if (!opts) {
            throw new Error('an HTTP(S) proxy server `host` and `port` must be specified!');
        }
        debug('creating new HttpsProxyAgent instance: %o', opts);
        super(opts);
        const proxy = Object.assign({}, opts);
        // If `true`, then connect to the proxy server over TLS.
        // Defaults to `false`.
        this.secureProxy = opts.secureProxy || isHTTPS(proxy.protocol);
        // Prefer `hostname` over `host`, and set the `port` if needed.
        proxy.host = proxy.hostname || proxy.host;
        if (typeof proxy.port === 'string') {
            proxy.port = parseInt(proxy.port, 10);
        }
        if (!proxy.port && proxy.host) {
            proxy.port = this.secureProxy ? 443 : 80;
        }
        // ALPN is supported by Node.js >= v5.
        // attempt to negotiate http/1.1 for proxy servers that support http/2
        if (this.secureProxy && !('ALPNProtocols' in proxy)) {
            proxy.ALPNProtocols = ['http 1.1'];
        }
        if (proxy.host && proxy.path) {
            // If both a `host` and `path` are specified then it's most likely
            // the result of a `url.parse()` call... we need to remove the
            // `path` portion so that `net.connect()` doesn't attempt to open
            // that as a Unix socket file.
            delete proxy.path;
            delete proxy.pathname;
        }
        this.proxy = proxy;
    }
    /**
     * Called when the node-core HTTP client library is creating a
     * new HTTP request.
     *
     * @api protected
     */
    callback(req, opts) {
        return __awaiter(this, void 0, void 0, function* () {
            const { proxy, secureProxy } = this;
            // Create a socket connection to the proxy server.
            let socket;
            if (secureProxy) {
                debug('Creating `tls.Socket`: %o', proxy);
                socket = tls_1.default.connect(proxy);
            }
            else {
                debug('Creating `net.Socket`: %o', proxy);
                socket = net_1.default.connect(proxy);
            }
            const headers = Object.assign({}, proxy.headers);
            const hostname = `${opts.host}:${opts.port}`;
            let payload = `CONNECT ${hostname} HTTP/1.1\r\n`;
            // Inject the `Proxy-Authorization` header if necessary.
            if (proxy.auth) {
                headers['Proxy-Authorization'] = `Basic ${Buffer.from(proxy.auth).toString('base64')}`;
            }
            // The `Host` header should only include the port
            // number when it is not the default port.
            let { host, port, secureEndpoint } = opts;
            if (!isDefaultPort(port, secureEndpoint)) {
                host += `:${port}`;
            }
            headers.Host = host;
            headers.Connection = 'close';
            for (const name of Object.keys(headers)) {
                payload += `${name}: ${headers[name]}\r\n`;
            }
            const proxyResponsePromise = parse_proxy_response_1.default(socket);
            socket.write(`${payload}\r\n`);
            const { statusCode, buffered } = yield proxyResponsePromise;
            if (statusCode === 200) {
                req.once('socket', resume);
                if (opts.secureEndpoint) {
                    // The proxy is connecting to a TLS server, so upgrade
                    // this socket connection to a TLS connection.
                    debug('Upgrading socket connection to TLS');
                    const servername = opts.servername || opts.host;
                    return tls_1.default.connect(Object.assign(Object.assign({}, omit(opts, 'host', 'hostname', 'path', 'port')), { socket,
                        servername }));
                }
                return socket;
            }
            // Some other status code that's not 200... need to re-play the HTTP
            // header "data" events onto the socket once the HTTP machinery is
            // attached so that the node core `http` can parse and handle the
            // error status code.
            // Close the original socket, and a new "fake" socket is returned
            // instead, so that the proxy doesn't get the HTTP request
            // written to it (which may contain `Authorization` headers or other
            // sensitive data).
            //
            // See: https://hackerone.com/reports/541502
            socket.destroy();
            const fakeSocket = new net_1.default.Socket({ writable: false });
            fakeSocket.readable = true;
            // Need to wait for the "socket" event to re-play the "data" events.
            req.once('socket', (s) => {
                debug('replaying proxy buffer for failed request');
                assert_1.default(s.listenerCount('data') > 0);
                // Replay the "buffered" Buffer onto the fake `socket`, since at
                // this point the HTTP module machinery has been hooked up for
                // the user.
                s.push(buffered);
                s.push(null);
            });
            return fakeSocket;
        });
    }
}
exports["default"] = HttpsProxyAgent;
function resume(socket) {
    socket.resume();
}
function isDefaultPort(port, secure) {
    return Boolean((!secure && port === 80) || (secure && port === 443));
}
function isHTTPS(protocol) {
    return typeof protocol === 'string' ? /^https:?$/i.test(protocol) : false;
}
function omit(obj, ...keys) {
    const ret = {};
    let key;
    for (key in obj) {
        if (!keys.includes(key)) {
            ret[key] = obj[key];
        }
    }
    return ret;
}
//# sourceMappingURL=agent.js.map

/***/ }),

/***/ 7219:
/***/ (function(module, __unused_webpack_exports, __nccwpck_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const agent_1 = __importDefault(__nccwpck_require__(5098));
function createHttpsProxyAgent(opts) {
    return new agent_1.default(opts);
}
(function (createHttpsProxyAgent) {
    createHttpsProxyAgent.HttpsProxyAgent = agent_1.default;
    createHttpsProxyAgent.prototype = agent_1.default.prototype;
})(createHttpsProxyAgent || (createHttpsProxyAgent = {}));
module.exports = createHttpsProxyAgent;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 595:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const debug_1 = __importDefault(__nccwpck_require__(8237));
const debug = debug_1.default('https-proxy-agent:parse-proxy-response');
function parseProxyResponse(socket) {
    return new Promise((resolve, reject) => {
        // we need to buffer any HTTP traffic that happens with the proxy before we get
        // the CONNECT response, so that if the response is anything other than an "200"
        // response code, then we can re-play the "data" events on the socket once the
        // HTTP parser is hooked up...
        let buffersLength = 0;
        const buffers = [];
        function read() {
            const b = socket.read();
            if (b)
                ondata(b);
            else
                socket.once('readable', read);
        }
        function cleanup() {
            socket.removeListener('end', onend);
            socket.removeListener('error', onerror);
            socket.removeListener('close', onclose);
            socket.removeListener('readable', read);
        }
        function onclose(err) {
            debug('onclose had error %o', err);
        }
        function onend() {
            debug('onend');
        }
        function onerror(err) {
            cleanup();
            debug('onerror %o', err);
            reject(err);
        }
        function ondata(b) {
            buffers.push(b);
            buffersLength += b.length;
            const buffered = Buffer.concat(buffers, buffersLength);
            const endOfHeaders = buffered.indexOf('\r\n\r\n');
            if (endOfHeaders === -1) {
                // keep buffering
                debug('have not received end of HTTP headers yet...');
                read();
                return;
            }
            const firstLine = buffered.toString('ascii', 0, buffered.indexOf('\r\n'));
            const statusCode = +firstLine.split(' ')[1];
            debug('got proxy server response: %o', firstLine);
            resolve({
                statusCode,
                buffered
            });
        }
        socket.on('error', onerror);
        socket.on('close', onclose);
        socket.on('end', onend);
        read();
    });
}
exports["default"] = parseProxyResponse;
//# sourceMappingURL=parse-proxy-response.js.map

/***/ }),

/***/ 2492:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var wrappy = __nccwpck_require__(2940)
var reqs = Object.create(null)
var once = __nccwpck_require__(1223)

module.exports = wrappy(inflight)

function inflight (key, cb) {
  if (reqs[key]) {
    reqs[key].push(cb)
    return null
  } else {
    reqs[key] = [cb]
    return makeres(key)
  }
}

function makeres (key) {
  return once(function RES () {
    var cbs = reqs[key]
    var len = cbs.length
    var args = slice(arguments)

    // XXX It's somewhat ambiguous whether a new callback added in this
    // pass should be queued for later execution if something in the
    // list of callbacks throws, or if it should just be discarded.
    // However, it's such an edge case that it hardly matters, and either
    // choice is likely as surprising as the other.
    // As it happens, we do go ahead and schedule it for later execution.
    try {
      for (var i = 0; i < len; i++) {
        cbs[i].apply(null, args)
      }
    } finally {
      if (cbs.length > len) {
        // added more in the interim.
        // de-zalgo, just in case, but don't call again.
        cbs.splice(0, len)
        process.nextTick(function () {
          RES.apply(null, args)
        })
      } else {
        delete reqs[key]
      }
    }
  })
}

function slice (args) {
  var length = args.length
  var array = []

  for (var i = 0; i < length; i++) array[i] = args[i]
  return array
}


/***/ }),

/***/ 4124:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

try {
  var util = __nccwpck_require__(3837);
  /* istanbul ignore next */
  if (typeof util.inherits !== 'function') throw '';
  module.exports = util.inherits;
} catch (e) {
  /* istanbul ignore next */
  module.exports = __nccwpck_require__(8544);
}


/***/ }),

/***/ 8544:
/***/ ((module) => {

if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      })
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      var TempCtor = function () {}
      TempCtor.prototype = superCtor.prototype
      ctor.prototype = new TempCtor()
      ctor.prototype.constructor = ctor
    }
  }
}


/***/ }),

/***/ 5162:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {



var parser = __nccwpck_require__(8200)

module.exports = parser
module.exports["default"] = parser


/***/ }),

/***/ 8200:
/***/ ((module) => {

/*
 * Generated by PEG.js 0.10.0.
 *
 * http://pegjs.org/
 */



function peg$subclass(child, parent) {
  function ctor() { this.constructor = child; }
  ctor.prototype = parent.prototype;
  child.prototype = new ctor();
}

function peg$SyntaxError(message, expected, found, location) {
  this.message  = message;
  this.expected = expected;
  this.found    = found;
  this.location = location;
  this.name     = "SyntaxError";

  if (typeof Error.captureStackTrace === "function") {
    Error.captureStackTrace(this, peg$SyntaxError);
  }
}

peg$subclass(peg$SyntaxError, Error);

peg$SyntaxError.buildMessage = function(expected, found) {
  var DESCRIBE_EXPECTATION_FNS = {
        literal: function(expectation) {
          return "\"" + literalEscape(expectation.text) + "\"";
        },

        "class": function(expectation) {
          var escapedParts = "",
              i;

          for (i = 0; i < expectation.parts.length; i++) {
            escapedParts += expectation.parts[i] instanceof Array
              ? classEscape(expectation.parts[i][0]) + "-" + classEscape(expectation.parts[i][1])
              : classEscape(expectation.parts[i]);
          }

          return "[" + (expectation.inverted ? "^" : "") + escapedParts + "]";
        },

        any: function(expectation) {
          return "any character";
        },

        end: function(expectation) {
          return "end of input";
        },

        other: function(expectation) {
          return expectation.description;
        }
      };

  function hex(ch) {
    return ch.charCodeAt(0).toString(16).toUpperCase();
  }

  function literalEscape(s) {
    return s
      .replace(/\\/g, '\\\\')
      .replace(/"/g,  '\\"')
      .replace(/\0/g, '\\0')
      .replace(/\t/g, '\\t')
      .replace(/\n/g, '\\n')
      .replace(/\r/g, '\\r')
      .replace(/[\x00-\x0F]/g,          function(ch) { return '\\x0' + hex(ch); })
      .replace(/[\x10-\x1F\x7F-\x9F]/g, function(ch) { return '\\x'  + hex(ch); });
  }

  function classEscape(s) {
    return s
      .replace(/\\/g, '\\\\')
      .replace(/\]/g, '\\]')
      .replace(/\^/g, '\\^')
      .replace(/-/g,  '\\-')
      .replace(/\0/g, '\\0')
      .replace(/\t/g, '\\t')
      .replace(/\n/g, '\\n')
      .replace(/\r/g, '\\r')
      .replace(/[\x00-\x0F]/g,          function(ch) { return '\\x0' + hex(ch); })
      .replace(/[\x10-\x1F\x7F-\x9F]/g, function(ch) { return '\\x'  + hex(ch); });
  }

  function describeExpectation(expectation) {
    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);
  }

  function describeExpected(expected) {
    var descriptions = new Array(expected.length),
        i, j;

    for (i = 0; i < expected.length; i++) {
      descriptions[i] = describeExpectation(expected[i]);
    }

    descriptions.sort();

    if (descriptions.length > 0) {
      for (i = 1, j = 1; i < descriptions.length; i++) {
        if (descriptions[i - 1] !== descriptions[i]) {
          descriptions[j] = descriptions[i];
          j++;
        }
      }
      descriptions.length = j;
    }

    switch (descriptions.length) {
      case 1:
        return descriptions[0];

      case 2:
        return descriptions[0] + " or " + descriptions[1];

      default:
        return descriptions.slice(0, -1).join(", ")
          + ", or "
          + descriptions[descriptions.length - 1];
    }
  }

  function describeFound(found) {
    return found ? "\"" + literalEscape(found) + "\"" : "end of input";
  }

  return "Expected " + describeExpected(expected) + " but " + describeFound(found) + " found.";
};

function peg$parse(input, options) {
  options = options !== void 0 ? options : {};

  var peg$FAILED = {},

      peg$startRuleFunctions = { start: peg$parsestart },
      peg$startRuleFunction  = peg$parsestart,

      peg$c0 = function(elements) {
              return {
                  type    : 'messageFormatPattern',
                  elements: elements,
                  location: location()
              };
          },
      peg$c1 = function(chunks) {
              return chunks.reduce(function (all, chunk) {
                  return all.concat(chunk)
              }, []).join('')
          },
      peg$c2 = function(messageText) {
              return {
                  type : 'messageTextElement',
                  value: messageText,
                  location: location()
              };
          },
      peg$c3 = function(chars) { return chars.join(''); },
      peg$c4 = "{",
      peg$c5 = peg$literalExpectation("{", false),
      peg$c6 = ",",
      peg$c7 = peg$literalExpectation(",", false),
      peg$c8 = "}",
      peg$c9 = peg$literalExpectation("}", false),
      peg$c10 = function(id, format) {
              return {
                  type  : 'argumentElement',
                  id    : id,
                  format: format && format[2],
                  location: location()
              };
          },
      peg$c11 = "number",
      peg$c12 = peg$literalExpectation("number", false),
      peg$c13 = "date",
      peg$c14 = peg$literalExpectation("date", false),
      peg$c15 = "time",
      peg$c16 = peg$literalExpectation("time", false),
      peg$c17 = function(type, style) {
              return {
                  type : type + 'Format',
                  style: style && style[2],
                  location: location()
              };
          },
      peg$c18 = "plural",
      peg$c19 = peg$literalExpectation("plural", false),
      peg$c20 = function(pluralStyle) {
              return {
                  type   : pluralStyle.type,
                  ordinal: false,
                  offset : pluralStyle.offset || 0,
                  options: pluralStyle.options,
                  location: location()
              };
          },
      peg$c21 = "selectordinal",
      peg$c22 = peg$literalExpectation("selectordinal", false),
      peg$c23 = function(pluralStyle) {
              return {
                  type   : pluralStyle.type,
                  ordinal: true,
                  offset : pluralStyle.offset || 0,
                  options: pluralStyle.options,
                  location: location()
              }
          },
      peg$c24 = "select",
      peg$c25 = peg$literalExpectation("select", false),
      peg$c26 = function(options) {
              return {
                  type   : 'selectFormat',
                  options: options,
                  location: location()
              };
          },
      peg$c27 = "=",
      peg$c28 = peg$literalExpectation("=", false),
      peg$c29 = function(selector, pattern) {
              return {
                  type    : 'optionalFormatPattern',
                  selector: selector,
                  value   : pattern,
                  location: location()
              };
          },
      peg$c30 = "offset:",
      peg$c31 = peg$literalExpectation("offset:", false),
      peg$c32 = function(number) {
              return number;
          },
      peg$c33 = function(offset, options) {
              return {
                  type   : 'pluralFormat',
                  offset : offset,
                  options: options,
                  location: location()
              };
          },
      peg$c34 = peg$otherExpectation("whitespace"),
      peg$c35 = /^[ \t\n\r]/,
      peg$c36 = peg$classExpectation([" ", "\t", "\n", "\r"], false, false),
      peg$c37 = peg$otherExpectation("optionalWhitespace"),
      peg$c38 = /^[0-9]/,
      peg$c39 = peg$classExpectation([["0", "9"]], false, false),
      peg$c40 = /^[0-9a-f]/i,
      peg$c41 = peg$classExpectation([["0", "9"], ["a", "f"]], false, true),
      peg$c42 = "0",
      peg$c43 = peg$literalExpectation("0", false),
      peg$c44 = /^[1-9]/,
      peg$c45 = peg$classExpectation([["1", "9"]], false, false),
      peg$c46 = function(digits) {
          return parseInt(digits, 10);
      },
      peg$c47 = "'",
      peg$c48 = peg$literalExpectation("'", false),
      peg$c49 = /^[ \t\n\r,.+={}#]/,
      peg$c50 = peg$classExpectation([" ", "\t", "\n", "\r", ",", ".", "+", "=", "{", "}", "#"], false, false),
      peg$c51 = peg$anyExpectation(),
      peg$c52 = function(char) { return char; },
      peg$c53 = function(sequence) { return sequence; },
      peg$c54 = /^[^{}\\\0-\x1F\x7F \t\n\r]/,
      peg$c55 = peg$classExpectation(["{", "}", "\\", ["\0", "\x1F"], "\x7F", " ", "\t", "\n", "\r"], true, false),
      peg$c56 = "\\\\",
      peg$c57 = peg$literalExpectation("\\\\", false),
      peg$c58 = function() { return '\\'; },
      peg$c59 = "\\#",
      peg$c60 = peg$literalExpectation("\\#", false),
      peg$c61 = function() { return '\\#'; },
      peg$c62 = "\\{",
      peg$c63 = peg$literalExpectation("\\{", false),
      peg$c64 = function() { return '\u007B'; },
      peg$c65 = "\\}",
      peg$c66 = peg$literalExpectation("\\}", false),
      peg$c67 = function() { return '\u007D'; },
      peg$c68 = "\\u",
      peg$c69 = peg$literalExpectation("\\u", false),
      peg$c70 = function(digits) {
              return String.fromCharCode(parseInt(digits, 16));
          },

      peg$currPos          = 0,
      peg$savedPos         = 0,
      peg$posDetailsCache  = [{ line: 1, column: 1 }],
      peg$maxFailPos       = 0,
      peg$maxFailExpected  = [],
      peg$silentFails      = 0,

      peg$result;

  if ("startRule" in options) {
    if (!(options.startRule in peg$startRuleFunctions)) {
      throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
    }

    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
  }

  function text() {
    return input.substring(peg$savedPos, peg$currPos);
  }

  function location() {
    return peg$computeLocation(peg$savedPos, peg$currPos);
  }

  function expected(description, location) {
    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)

    throw peg$buildStructuredError(
      [peg$otherExpectation(description)],
      input.substring(peg$savedPos, peg$currPos),
      location
    );
  }

  function error(message, location) {
    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)

    throw peg$buildSimpleError(message, location);
  }

  function peg$literalExpectation(text, ignoreCase) {
    return { type: "literal", text: text, ignoreCase: ignoreCase };
  }

  function peg$classExpectation(parts, inverted, ignoreCase) {
    return { type: "class", parts: parts, inverted: inverted, ignoreCase: ignoreCase };
  }

  function peg$anyExpectation() {
    return { type: "any" };
  }

  function peg$endExpectation() {
    return { type: "end" };
  }

  function peg$otherExpectation(description) {
    return { type: "other", description: description };
  }

  function peg$computePosDetails(pos) {
    var details = peg$posDetailsCache[pos], p;

    if (details) {
      return details;
    } else {
      p = pos - 1;
      while (!peg$posDetailsCache[p]) {
        p--;
      }

      details = peg$posDetailsCache[p];
      details = {
        line:   details.line,
        column: details.column
      };

      while (p < pos) {
        if (input.charCodeAt(p) === 10) {
          details.line++;
          details.column = 1;
        } else {
          details.column++;
        }

        p++;
      }

      peg$posDetailsCache[pos] = details;
      return details;
    }
  }

  function peg$computeLocation(startPos, endPos) {
    var startPosDetails = peg$computePosDetails(startPos),
        endPosDetails   = peg$computePosDetails(endPos);

    return {
      start: {
        offset: startPos,
        line:   startPosDetails.line,
        column: startPosDetails.column
      },
      end: {
        offset: endPos,
        line:   endPosDetails.line,
        column: endPosDetails.column
      }
    };
  }

  function peg$fail(expected) {
    if (peg$currPos < peg$maxFailPos) { return; }

    if (peg$currPos > peg$maxFailPos) {
      peg$maxFailPos = peg$currPos;
      peg$maxFailExpected = [];
    }

    peg$maxFailExpected.push(expected);
  }

  function peg$buildSimpleError(message, location) {
    return new peg$SyntaxError(message, null, null, location);
  }

  function peg$buildStructuredError(expected, found, location) {
    return new peg$SyntaxError(
      peg$SyntaxError.buildMessage(expected, found),
      expected,
      found,
      location
    );
  }

  function peg$parsestart() {
    var s0;

    s0 = peg$parsemessageFormatPattern();

    return s0;
  }

  function peg$parsemessageFormatPattern() {
    var s0, s1, s2;

    s0 = peg$currPos;
    s1 = [];
    s2 = peg$parsemessageFormatElement();
    while (s2 !== peg$FAILED) {
      s1.push(s2);
      s2 = peg$parsemessageFormatElement();
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c0(s1);
    }
    s0 = s1;

    return s0;
  }

  function peg$parsemessageFormatElement() {
    var s0;

    s0 = peg$parsemessageTextElement();
    if (s0 === peg$FAILED) {
      s0 = peg$parseargumentElement();
    }

    return s0;
  }

  function peg$parsemessageText() {
    var s0, s1, s2, s3, s4, s5;

    s0 = peg$currPos;
    s1 = [];
    s2 = peg$currPos;
    s3 = peg$parse_();
    if (s3 !== peg$FAILED) {
      s4 = peg$parsechars();
      if (s4 !== peg$FAILED) {
        s5 = peg$parse_();
        if (s5 !== peg$FAILED) {
          s3 = [s3, s4, s5];
          s2 = s3;
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
    } else {
      peg$currPos = s2;
      s2 = peg$FAILED;
    }
    if (s2 !== peg$FAILED) {
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$currPos;
        s3 = peg$parse_();
        if (s3 !== peg$FAILED) {
          s4 = peg$parsechars();
          if (s4 !== peg$FAILED) {
            s5 = peg$parse_();
            if (s5 !== peg$FAILED) {
              s3 = [s3, s4, s5];
              s2 = s3;
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
      }
    } else {
      s1 = peg$FAILED;
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c1(s1);
    }
    s0 = s1;
    if (s0 === peg$FAILED) {
      s0 = peg$currPos;
      s1 = peg$parsews();
      if (s1 !== peg$FAILED) {
        s0 = input.substring(s0, peg$currPos);
      } else {
        s0 = s1;
      }
    }

    return s0;
  }

  function peg$parsemessageTextElement() {
    var s0, s1;

    s0 = peg$currPos;
    s1 = peg$parsemessageText();
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c2(s1);
    }
    s0 = s1;

    return s0;
  }

  function peg$parseargument() {
    var s0, s1, s2;

    s0 = peg$parsenumber();
    if (s0 === peg$FAILED) {
      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsequoteEscapedChar();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsequoteEscapedChar();
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c3(s1);
      }
      s0 = s1;
    }

    return s0;
  }

  function peg$parseargumentElement() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8;

    s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 123) {
      s1 = peg$c4;
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c5); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parse_();
      if (s2 !== peg$FAILED) {
        s3 = peg$parseargument();
        if (s3 !== peg$FAILED) {
          s4 = peg$parse_();
          if (s4 !== peg$FAILED) {
            s5 = peg$currPos;
            if (input.charCodeAt(peg$currPos) === 44) {
              s6 = peg$c6;
              peg$currPos++;
            } else {
              s6 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c7); }
            }
            if (s6 !== peg$FAILED) {
              s7 = peg$parse_();
              if (s7 !== peg$FAILED) {
                s8 = peg$parseelementFormat();
                if (s8 !== peg$FAILED) {
                  s6 = [s6, s7, s8];
                  s5 = s6;
                } else {
                  peg$currPos = s5;
                  s5 = peg$FAILED;
                }
              } else {
                peg$currPos = s5;
                s5 = peg$FAILED;
              }
            } else {
              peg$currPos = s5;
              s5 = peg$FAILED;
            }
            if (s5 === peg$FAILED) {
              s5 = null;
            }
            if (s5 !== peg$FAILED) {
              s6 = peg$parse_();
              if (s6 !== peg$FAILED) {
                if (input.charCodeAt(peg$currPos) === 125) {
                  s7 = peg$c8;
                  peg$currPos++;
                } else {
                  s7 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c9); }
                }
                if (s7 !== peg$FAILED) {
                  peg$savedPos = s0;
                  s1 = peg$c10(s3, s5);
                  s0 = s1;
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseelementFormat() {
    var s0;

    s0 = peg$parsesimpleFormat();
    if (s0 === peg$FAILED) {
      s0 = peg$parsepluralFormat();
      if (s0 === peg$FAILED) {
        s0 = peg$parseselectOrdinalFormat();
        if (s0 === peg$FAILED) {
          s0 = peg$parseselectFormat();
        }
      }
    }

    return s0;
  }

  function peg$parsesimpleFormat() {
    var s0, s1, s2, s3, s4, s5, s6;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 6) === peg$c11) {
      s1 = peg$c11;
      peg$currPos += 6;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c12); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 4) === peg$c13) {
        s1 = peg$c13;
        peg$currPos += 4;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c14); }
      }
      if (s1 === peg$FAILED) {
        if (input.substr(peg$currPos, 4) === peg$c15) {
          s1 = peg$c15;
          peg$currPos += 4;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c16); }
        }
      }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parse_();
      if (s2 !== peg$FAILED) {
        s3 = peg$currPos;
        if (input.charCodeAt(peg$currPos) === 44) {
          s4 = peg$c6;
          peg$currPos++;
        } else {
          s4 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c7); }
        }
        if (s4 !== peg$FAILED) {
          s5 = peg$parse_();
          if (s5 !== peg$FAILED) {
            s6 = peg$parsechars();
            if (s6 !== peg$FAILED) {
              s4 = [s4, s5, s6];
              s3 = s4;
            } else {
              peg$currPos = s3;
              s3 = peg$FAILED;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
        if (s3 === peg$FAILED) {
          s3 = null;
        }
        if (s3 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c17(s1, s3);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parsepluralFormat() {
    var s0, s1, s2, s3, s4, s5;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 6) === peg$c18) {
      s1 = peg$c18;
      peg$currPos += 6;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c19); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parse_();
      if (s2 !== peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 44) {
          s3 = peg$c6;
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c7); }
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parse_();
          if (s4 !== peg$FAILED) {
            s5 = peg$parsepluralStyle();
            if (s5 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c20(s5);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseselectOrdinalFormat() {
    var s0, s1, s2, s3, s4, s5;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 13) === peg$c21) {
      s1 = peg$c21;
      peg$currPos += 13;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c22); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parse_();
      if (s2 !== peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 44) {
          s3 = peg$c6;
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c7); }
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parse_();
          if (s4 !== peg$FAILED) {
            s5 = peg$parsepluralStyle();
            if (s5 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c23(s5);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseselectFormat() {
    var s0, s1, s2, s3, s4, s5, s6;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 6) === peg$c24) {
      s1 = peg$c24;
      peg$currPos += 6;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c25); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parse_();
      if (s2 !== peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 44) {
          s3 = peg$c6;
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c7); }
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parse_();
          if (s4 !== peg$FAILED) {
            s5 = [];
            s6 = peg$parseoptionalFormatPattern();
            if (s6 !== peg$FAILED) {
              while (s6 !== peg$FAILED) {
                s5.push(s6);
                s6 = peg$parseoptionalFormatPattern();
              }
            } else {
              s5 = peg$FAILED;
            }
            if (s5 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c26(s5);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseselector() {
    var s0, s1, s2, s3;

    s0 = peg$currPos;
    s1 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 61) {
      s2 = peg$c27;
      peg$currPos++;
    } else {
      s2 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c28); }
    }
    if (s2 !== peg$FAILED) {
      s3 = peg$parsenumber();
      if (s3 !== peg$FAILED) {
        s2 = [s2, s3];
        s1 = s2;
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
    } else {
      peg$currPos = s1;
      s1 = peg$FAILED;
    }
    if (s1 !== peg$FAILED) {
      s0 = input.substring(s0, peg$currPos);
    } else {
      s0 = s1;
    }
    if (s0 === peg$FAILED) {
      s0 = peg$parsechars();
    }

    return s0;
  }

  function peg$parseoptionalFormatPattern() {
    var s0, s1, s2, s3, s4, s5, s6;

    s0 = peg$currPos;
    s1 = peg$parse_();
    if (s1 !== peg$FAILED) {
      s2 = peg$parseselector();
      if (s2 !== peg$FAILED) {
        s3 = peg$parse_();
        if (s3 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 123) {
            s4 = peg$c4;
            peg$currPos++;
          } else {
            s4 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c5); }
          }
          if (s4 !== peg$FAILED) {
            s5 = peg$parsemessageFormatPattern();
            if (s5 !== peg$FAILED) {
              if (input.charCodeAt(peg$currPos) === 125) {
                s6 = peg$c8;
                peg$currPos++;
              } else {
                s6 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c9); }
              }
              if (s6 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c29(s2, s5);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseoffset() {
    var s0, s1, s2, s3;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 7) === peg$c30) {
      s1 = peg$c30;
      peg$currPos += 7;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c31); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parse_();
      if (s2 !== peg$FAILED) {
        s3 = peg$parsenumber();
        if (s3 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c32(s3);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parsepluralStyle() {
    var s0, s1, s2, s3, s4;

    s0 = peg$currPos;
    s1 = peg$parseoffset();
    if (s1 === peg$FAILED) {
      s1 = null;
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parse_();
      if (s2 !== peg$FAILED) {
        s3 = [];
        s4 = peg$parseoptionalFormatPattern();
        if (s4 !== peg$FAILED) {
          while (s4 !== peg$FAILED) {
            s3.push(s4);
            s4 = peg$parseoptionalFormatPattern();
          }
        } else {
          s3 = peg$FAILED;
        }
        if (s3 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c33(s1, s3);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parsews() {
    var s0, s1;

    peg$silentFails++;
    s0 = [];
    if (peg$c35.test(input.charAt(peg$currPos))) {
      s1 = input.charAt(peg$currPos);
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c36); }
    }
    if (s1 !== peg$FAILED) {
      while (s1 !== peg$FAILED) {
        s0.push(s1);
        if (peg$c35.test(input.charAt(peg$currPos))) {
          s1 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c36); }
        }
      }
    } else {
      s0 = peg$FAILED;
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c34); }
    }

    return s0;
  }

  function peg$parse_() {
    var s0, s1, s2;

    peg$silentFails++;
    s0 = peg$currPos;
    s1 = [];
    s2 = peg$parsews();
    while (s2 !== peg$FAILED) {
      s1.push(s2);
      s2 = peg$parsews();
    }
    if (s1 !== peg$FAILED) {
      s0 = input.substring(s0, peg$currPos);
    } else {
      s0 = s1;
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c37); }
    }

    return s0;
  }

  function peg$parsedigit() {
    var s0;

    if (peg$c38.test(input.charAt(peg$currPos))) {
      s0 = input.charAt(peg$currPos);
      peg$currPos++;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c39); }
    }

    return s0;
  }

  function peg$parsehexDigit() {
    var s0;

    if (peg$c40.test(input.charAt(peg$currPos))) {
      s0 = input.charAt(peg$currPos);
      peg$currPos++;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c41); }
    }

    return s0;
  }

  function peg$parsenumber() {
    var s0, s1, s2, s3, s4, s5;

    s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 48) {
      s1 = peg$c42;
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c43); }
    }
    if (s1 === peg$FAILED) {
      s1 = peg$currPos;
      s2 = peg$currPos;
      if (peg$c44.test(input.charAt(peg$currPos))) {
        s3 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s3 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c45); }
      }
      if (s3 !== peg$FAILED) {
        s4 = [];
        s5 = peg$parsedigit();
        while (s5 !== peg$FAILED) {
          s4.push(s5);
          s5 = peg$parsedigit();
        }
        if (s4 !== peg$FAILED) {
          s3 = [s3, s4];
          s2 = s3;
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
      if (s2 !== peg$FAILED) {
        s1 = input.substring(s1, peg$currPos);
      } else {
        s1 = s2;
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c46(s1);
    }
    s0 = s1;

    return s0;
  }

  function peg$parsequoteEscapedChar() {
    var s0, s1, s2;

    s0 = peg$currPos;
    s1 = peg$currPos;
    peg$silentFails++;
    if (input.charCodeAt(peg$currPos) === 39) {
      s2 = peg$c47;
      peg$currPos++;
    } else {
      s2 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c48); }
    }
    if (s2 === peg$FAILED) {
      if (peg$c49.test(input.charAt(peg$currPos))) {
        s2 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c50); }
      }
    }
    peg$silentFails--;
    if (s2 === peg$FAILED) {
      s1 = void 0;
    } else {
      peg$currPos = s1;
      s1 = peg$FAILED;
    }
    if (s1 !== peg$FAILED) {
      if (input.length > peg$currPos) {
        s2 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c51); }
      }
      if (s2 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c52(s2);
        s0 = s1;
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    if (s0 === peg$FAILED) {
      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 39) {
        s1 = peg$c47;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c48); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parseescape();
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c53(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    }

    return s0;
  }

  function peg$parseapostrophe() {
    var s0;

    if (input.charCodeAt(peg$currPos) === 39) {
      s0 = peg$c47;
      peg$currPos++;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c48); }
    }

    return s0;
  }

  function peg$parseescape() {
    var s0;

    if (peg$c49.test(input.charAt(peg$currPos))) {
      s0 = input.charAt(peg$currPos);
      peg$currPos++;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c50); }
    }
    if (s0 === peg$FAILED) {
      s0 = peg$parseapostrophe();
    }

    return s0;
  }

  function peg$parsechar() {
    var s0, s1, s2, s3, s4, s5, s6, s7;

    s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 39) {
      s1 = peg$c47;
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c48); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseapostrophe();
      if (s2 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c53(s2);
        s0 = s1;
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    if (s0 === peg$FAILED) {
      if (peg$c54.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c55); }
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        if (input.substr(peg$currPos, 2) === peg$c56) {
          s1 = peg$c56;
          peg$currPos += 2;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c57); }
        }
        if (s1 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c58();
        }
        s0 = s1;
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          if (input.substr(peg$currPos, 2) === peg$c59) {
            s1 = peg$c59;
            peg$currPos += 2;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c60); }
          }
          if (s1 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c61();
          }
          s0 = s1;
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            if (input.substr(peg$currPos, 2) === peg$c62) {
              s1 = peg$c62;
              peg$currPos += 2;
            } else {
              s1 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c63); }
            }
            if (s1 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c64();
            }
            s0 = s1;
            if (s0 === peg$FAILED) {
              s0 = peg$currPos;
              if (input.substr(peg$currPos, 2) === peg$c65) {
                s1 = peg$c65;
                peg$currPos += 2;
              } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c66); }
              }
              if (s1 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c67();
              }
              s0 = s1;
              if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                if (input.substr(peg$currPos, 2) === peg$c68) {
                  s1 = peg$c68;
                  peg$currPos += 2;
                } else {
                  s1 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c69); }
                }
                if (s1 !== peg$FAILED) {
                  s2 = peg$currPos;
                  s3 = peg$currPos;
                  s4 = peg$parsehexDigit();
                  if (s4 !== peg$FAILED) {
                    s5 = peg$parsehexDigit();
                    if (s5 !== peg$FAILED) {
                      s6 = peg$parsehexDigit();
                      if (s6 !== peg$FAILED) {
                        s7 = peg$parsehexDigit();
                        if (s7 !== peg$FAILED) {
                          s4 = [s4, s5, s6, s7];
                          s3 = s4;
                        } else {
                          peg$currPos = s3;
                          s3 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s3;
                        s3 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s3;
                      s3 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s3;
                    s3 = peg$FAILED;
                  }
                  if (s3 !== peg$FAILED) {
                    s2 = input.substring(s2, peg$currPos);
                  } else {
                    s2 = s3;
                  }
                  if (s2 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c70(s2);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              }
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parsechars() {
    var s0, s1, s2;

    s0 = peg$currPos;
    s1 = [];
    s2 = peg$parsechar();
    if (s2 !== peg$FAILED) {
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsechar();
      }
    } else {
      s1 = peg$FAILED;
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c3(s1);
    }
    s0 = s1;

    return s0;
  }

  peg$result = peg$startRuleFunction();

  if (peg$result !== peg$FAILED && peg$currPos === input.length) {
    return peg$result;
  } else {
    if (peg$result !== peg$FAILED && peg$currPos < input.length) {
      peg$fail(peg$endExpectation());
    }

    throw peg$buildStructuredError(
      peg$maxFailExpected,
      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,
      peg$maxFailPos < input.length
        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)
        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)
    );
  }
}

module.exports = {
  SyntaxError: peg$SyntaxError,
  parse:       peg$parse
};


/***/ }),

/***/ 757:
/***/ (function(__unused_webpack_module, exports) {


/*
Copyright (c) 2014, Yahoo! Inc. All rights reserved.
Copyrights licensed under the New BSD License.
See the accompanying LICENSE file for terms.
*/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
var Compiler = /** @class */ (function () {
    function Compiler(locales, formats, formatters) {
        this.locales = [];
        this.formats = {
            number: {},
            date: {},
            time: {}
        };
        this.pluralNumberFormat = null;
        this.currentPlural = null;
        this.pluralStack = [];
        this.locales = locales;
        this.formats = formats;
        this.formatters = formatters;
    }
    Compiler.prototype.compile = function (ast) {
        this.pluralStack = [];
        this.currentPlural = null;
        this.pluralNumberFormat = null;
        return this.compileMessage(ast);
    };
    Compiler.prototype.compileMessage = function (ast) {
        var _this = this;
        if (!(ast && ast.type === 'messageFormatPattern')) {
            throw new Error('Message AST is not of type: "messageFormatPattern"');
        }
        var elements = ast.elements;
        var pattern = elements
            .filter(function (el) {
            return el.type === 'messageTextElement' || el.type === 'argumentElement';
        })
            .map(function (el) {
            return el.type === 'messageTextElement'
                ? _this.compileMessageText(el)
                : _this.compileArgument(el);
        });
        if (pattern.length !== elements.length) {
            throw new Error('Message element does not have a valid type');
        }
        return pattern;
    };
    Compiler.prototype.compileMessageText = function (element) {
        // When this `element` is part of plural sub-pattern and its value contains
        // an unescaped '#', use a `PluralOffsetString` helper to properly output
        // the number with the correct offset in the string.
        if (this.currentPlural && /(^|[^\\])#/g.test(element.value)) {
            // Create a cache a NumberFormat instance that can be reused for any
            // PluralOffsetString instance in this message.
            if (!this.pluralNumberFormat) {
                this.pluralNumberFormat = new Intl.NumberFormat(this.locales);
            }
            return new PluralOffsetString(this.currentPlural.id, this.currentPlural.format.offset, this.pluralNumberFormat, element.value);
        }
        // Unescape the escaped '#'s in the message text.
        return element.value.replace(/\\#/g, '#');
    };
    Compiler.prototype.compileArgument = function (element) {
        var format = element.format, id = element.id;
        var formatters = this.formatters;
        if (!format) {
            return new StringFormat(id);
        }
        var _a = this, formats = _a.formats, locales = _a.locales;
        switch (format.type) {
            case 'numberFormat':
                return {
                    id: id,
                    format: formatters.getNumberFormat(locales, formats.number[format.style]).format
                };
            case 'dateFormat':
                return {
                    id: id,
                    format: formatters.getDateTimeFormat(locales, formats.date[format.style]).format
                };
            case 'timeFormat':
                return {
                    id: id,
                    format: formatters.getDateTimeFormat(locales, formats.time[format.style]).format
                };
            case 'pluralFormat':
                return new PluralFormat(id, format.offset, this.compileOptions(element), formatters.getPluralRules(locales, {
                    type: format.ordinal ? 'ordinal' : 'cardinal'
                }));
            case 'selectFormat':
                return new SelectFormat(id, this.compileOptions(element));
            default:
                throw new Error('Message element does not have a valid format type');
        }
    };
    Compiler.prototype.compileOptions = function (element) {
        var _this = this;
        var format = element.format;
        var options = format.options;
        // Save the current plural element, if any, then set it to a new value when
        // compiling the options sub-patterns. This conforms the spec's algorithm
        // for handling `"#"` syntax in message text.
        this.pluralStack.push(this.currentPlural);
        this.currentPlural = format.type === 'pluralFormat' ? element : null;
        var optionsHash = options.reduce(function (all, option) {
            // Compile the sub-pattern and save it under the options's selector.
            all[option.selector] = _this.compileMessage(option.value);
            return all;
        }, {});
        // Pop the plural stack to put back the original current plural value.
        this.currentPlural = this.pluralStack.pop();
        return optionsHash;
    };
    return Compiler;
}());
exports["default"] = Compiler;
// -- Compiler Helper Classes --------------------------------------------------
var Formatter = /** @class */ (function () {
    function Formatter(id) {
        this.id = id;
    }
    return Formatter;
}());
var StringFormat = /** @class */ (function (_super) {
    __extends(StringFormat, _super);
    function StringFormat() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StringFormat.prototype.format = function (value) {
        if (!value && typeof value !== 'number') {
            return '';
        }
        return typeof value === 'string' ? value : String(value);
    };
    return StringFormat;
}(Formatter));
var PluralFormat = /** @class */ (function () {
    function PluralFormat(id, offset, options, pluralRules) {
        this.id = id;
        this.offset = offset;
        this.options = options;
        this.pluralRules = pluralRules;
    }
    PluralFormat.prototype.getOption = function (value) {
        var options = this.options;
        var option = options['=' + value] ||
            options[this.pluralRules.select(value - this.offset)];
        return option || options.other;
    };
    return PluralFormat;
}());
var PluralOffsetString = /** @class */ (function (_super) {
    __extends(PluralOffsetString, _super);
    function PluralOffsetString(id, offset, numberFormat, string) {
        var _this = _super.call(this, id) || this;
        _this.offset = offset;
        _this.numberFormat = numberFormat;
        _this.string = string;
        return _this;
    }
    PluralOffsetString.prototype.format = function (value) {
        var number = this.numberFormat.format(value - this.offset);
        return this.string
            .replace(/(^|[^\\])#/g, '$1' + number)
            .replace(/\\#/g, '#');
    };
    return PluralOffsetString;
}(Formatter));
exports.PluralOffsetString = PluralOffsetString;
var SelectFormat = /** @class */ (function () {
    function SelectFormat(id, options) {
        this.id = id;
        this.options = options;
    }
    SelectFormat.prototype.getOption = function (value) {
        var options = this.options;
        return options[value] || options.other;
    };
    return SelectFormat;
}());
exports.SelectFormat = SelectFormat;
function isSelectOrPluralFormat(f) {
    return !!f.options;
}
exports.isSelectOrPluralFormat = isSelectOrPluralFormat;
//# sourceMappingURL=compiler.js.map

/***/ }),

/***/ 8757:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {


/*
Copyright (c) 2014, Yahoo! Inc. All rights reserved.
Copyrights licensed under the New BSD License.
See the accompanying LICENSE file for terms.
*/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
/* jslint esnext: true */
var compiler_1 = __nccwpck_require__(757);
// -- MessageFormat --------------------------------------------------------
function resolveLocale(locales) {
    if (typeof locales === 'string') {
        locales = [locales];
    }
    try {
        return Intl.NumberFormat.supportedLocalesOf(locales, {
            // IE11 localeMatcher `lookup` seems to convert `en` -> `en-US`
            // but not other browsers,
            localeMatcher: 'best fit'
        })[0];
    }
    catch (e) {
        return IntlMessageFormat.defaultLocale;
    }
}
function formatPatterns(pattern, values) {
    var result = '';
    for (var _i = 0, pattern_1 = pattern; _i < pattern_1.length; _i++) {
        var part = pattern_1[_i];
        // Exist early for string parts.
        if (typeof part === 'string') {
            result += part;
            continue;
        }
        var id = part.id;
        // Enforce that all required values are provided by the caller.
        if (!(values && id in values)) {
            throw new FormatError("A value must be provided for: " + id, id);
        }
        var value = values[id];
        // Recursively format plural and select parts' option — which can be a
        // nested pattern structure. The choosing of the option to use is
        // abstracted-by and delegated-to the part helper object.
        if (compiler_1.isSelectOrPluralFormat(part)) {
            result += formatPatterns(part.getOption(value), values);
        }
        else {
            result += part.format(value);
        }
    }
    return result;
}
function mergeConfig(c1, c2) {
    if (!c2) {
        return c1;
    }
    return __assign({}, (c1 || {}), (c2 || {}), Object.keys(c1).reduce(function (all, k) {
        all[k] = __assign({}, c1[k], (c2[k] || {}));
        return all;
    }, {}));
}
function mergeConfigs(defaultConfig, configs) {
    if (!configs) {
        return defaultConfig;
    }
    return Object.keys(defaultConfig).reduce(function (all, k) {
        all[k] = mergeConfig(defaultConfig[k], configs[k]);
        return all;
    }, __assign({}, defaultConfig));
}
var FormatError = /** @class */ (function (_super) {
    __extends(FormatError, _super);
    function FormatError(msg, variableId) {
        var _this = _super.call(this, msg) || this;
        _this.variableId = variableId;
        return _this;
    }
    return FormatError;
}(Error));
function createDefaultFormatters() {
    return {
        getNumberFormat: function () {
            var _a;
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return new ((_a = Intl.NumberFormat).bind.apply(_a, [void 0].concat(args)))();
        },
        getDateTimeFormat: function () {
            var _a;
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return new ((_a = Intl.DateTimeFormat).bind.apply(_a, [void 0].concat(args)))();
        },
        getPluralRules: function () {
            var _a;
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return new ((_a = Intl.PluralRules).bind.apply(_a, [void 0].concat(args)))();
        }
    };
}
exports.createDefaultFormatters = createDefaultFormatters;
var IntlMessageFormat = /** @class */ (function () {
    function IntlMessageFormat(message, locales, overrideFormats, opts) {
        var _this = this;
        if (locales === void 0) { locales = IntlMessageFormat.defaultLocale; }
        this.format = function (values) {
            try {
                return formatPatterns(_this.pattern, values);
            }
            catch (e) {
                if (e.variableId) {
                    throw new Error("The intl string context variable '" + e.variableId + "' was not provided to the string '" + _this.message + "'");
                }
                else {
                    throw e;
                }
            }
        };
        if (typeof message === 'string') {
            if (!IntlMessageFormat.__parse) {
                throw new TypeError('IntlMessageFormat.__parse must be set to process `message` of type `string`');
            }
            // Parse string messages into an AST.
            this.ast = IntlMessageFormat.__parse(message);
        }
        else {
            this.ast = message;
        }
        this.message = message;
        if (!(this.ast && this.ast.type === 'messageFormatPattern')) {
            throw new TypeError('A message must be provided as a String or AST.');
        }
        // Creates a new object with the specified `formats` merged with the default
        // formats.
        var formats = mergeConfigs(IntlMessageFormat.formats, overrideFormats);
        // Defined first because it's used to build the format pattern.
        this.locale = resolveLocale(locales || []);
        var formatters = (opts && opts.formatters) || createDefaultFormatters();
        // Compile the `ast` to a pattern that is highly optimized for repeated
        // `format()` invocations. **Note:** This passes the `locales` set provided
        // to the constructor instead of just the resolved locale.
        this.pattern = new compiler_1.default(locales, formats, formatters).compile(this.ast);
        // "Bind" `format()` method to `this` so it can be passed by reference like
        // the other `Intl` APIs.
    }
    IntlMessageFormat.prototype.resolvedOptions = function () {
        return { locale: this.locale };
    };
    IntlMessageFormat.prototype.getAst = function () {
        return this.ast;
    };
    IntlMessageFormat.defaultLocale = 'en';
    IntlMessageFormat.__parse = undefined;
    // Default format options used as the prototype of the `formats` provided to the
    // constructor. These are used when constructing the internal Intl.NumberFormat
    // and Intl.DateTimeFormat instances.
    IntlMessageFormat.formats = {
        number: {
            currency: {
                style: 'currency'
            },
            percent: {
                style: 'percent'
            }
        },
        date: {
            short: {
                month: 'numeric',
                day: 'numeric',
                year: '2-digit'
            },
            medium: {
                month: 'short',
                day: 'numeric',
                year: 'numeric'
            },
            long: {
                month: 'long',
                day: 'numeric',
                year: 'numeric'
            },
            full: {
                weekday: 'long',
                month: 'long',
                day: 'numeric',
                year: 'numeric'
            }
        },
        time: {
            short: {
                hour: 'numeric',
                minute: 'numeric'
            },
            medium: {
                hour: 'numeric',
                minute: 'numeric',
                second: 'numeric'
            },
            long: {
                hour: 'numeric',
                minute: 'numeric',
                second: 'numeric',
                timeZoneName: 'short'
            },
            full: {
                hour: 'numeric',
                minute: 'numeric',
                second: 'numeric',
                timeZoneName: 'short'
            }
        }
    };
    return IntlMessageFormat;
}());
exports.IntlMessageFormat = IntlMessageFormat;
exports["default"] = IntlMessageFormat;
//# sourceMappingURL=core.js.map

/***/ }),

/***/ 8305:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {


/*
Copyright (c) 2014, Yahoo! Inc. All rights reserved.
Copyrights licensed under the New BSD License.
See the accompanying LICENSE file for terms.
*/
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", ({ value: true }));
var intl_messageformat_parser_1 = __nccwpck_require__(5162);
var core_1 = __nccwpck_require__(8757);
core_1.default.__parse = intl_messageformat_parser_1.default.parse;
__export(__nccwpck_require__(8757));
exports["default"] = core_1.default;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 9195:
/***/ ((module, exports, __nccwpck_require__) => {


var IntlMessageFormat = (__nccwpck_require__(8305)["default"]);

// Re-export `IntlMessageFormat` as the CommonJS default exports with all the
// locale data registered, and with English set as the default locale. Define
// the `default` prop for use with other compiled ES6 Modules.
exports = module.exports = IntlMessageFormat;
exports["default"] = exports;


/***/ }),

/***/ 8768:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {


const fs = __nccwpck_require__(7147);

let isDocker;

function hasDockerEnv() {
	try {
		fs.statSync('/.dockerenv');
		return true;
	} catch (_) {
		return false;
	}
}

function hasDockerCGroup() {
	try {
		return fs.readFileSync('/proc/self/cgroup', 'utf8').includes('docker');
	} catch (_) {
		return false;
	}
}

module.exports = () => {
	if (isDocker === undefined) {
		isDocker = hasDockerEnv() || hasDockerCGroup();
	}

	return isDocker;
};


/***/ }),

/***/ 7030:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {


const os = __nccwpck_require__(2037);
const fs = __nccwpck_require__(7147);
const isDocker = __nccwpck_require__(8768);

const isWsl = () => {
	if (process.platform !== 'linux') {
		return false;
	}

	if (os.release().toLowerCase().includes('microsoft')) {
		if (isDocker()) {
			return false;
		}

		return true;
	}

	try {
		return fs.readFileSync('/proc/version', 'utf8').toLowerCase().includes('microsoft') ?
			!isDocker() : false;
	} catch (_) {
		return false;
	}
};

if (process.env.__IS_WSL_TEST__) {
	module.exports = isWsl;
} else {
	module.exports = isWsl();
}


/***/ }),

/***/ 8687:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

/**
 * @license Copyright 2016 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */


const debug = __nccwpck_require__(7318);
const marky = __nccwpck_require__(4098);

const EventEmitter = (__nccwpck_require__(2361).EventEmitter);
const isWindows = process.platform === 'win32';

// process.browser is set when browserify'd via the `process` npm module
const isBrowser = process.browser;

const colors = {
  red: isBrowser ? 'crimson' : 1,
  yellow: isBrowser ? 'gold' : 3,
  cyan: isBrowser ? 'darkturquoise' : 6,
  green: isBrowser ? 'forestgreen' : 2,
  blue: isBrowser ? 'steelblue' : 4,
  magenta: isBrowser ? 'palevioletred' : 5,
};

// allow non-red/yellow colors for debug()
debug.colors = [colors.cyan, colors.green, colors.blue, colors.magenta];

class Emitter extends EventEmitter {
  /**
   * Fires off all status updates. Listen with
   * `require('lib/log').events.addListener('status', callback)`
   * @param {string} title
   * @param {!Array<*>} argsArray
   */
  issueStatus(title, argsArray) {
    if (title === 'status' || title === 'statusEnd') {
      this.emit(title, [title, ...argsArray]);
    }
  }

  /**
   * Fires off all warnings. Listen with
   * `require('lib/log').events.addListener('warning', callback)`
   * @param {string} title
   * @param {!Array<*>} argsArray
   */
  issueWarning(title, argsArray) {
    this.emit('warning', [title, ...argsArray]);
  }
}

const loggersByTitle = {};
const loggingBufferColumns = 25;
let level_;

class Log {
  static _logToStdErr(title, argsArray) {
    const log = Log.loggerfn(title);
    log(...argsArray);
  }

  static loggerfn(title) {
    title = `LH:${title}`;
    let log = loggersByTitle[title];
    if (!log) {
      log = debug(title);
      loggersByTitle[title] = log;
      // errors with red, warnings with yellow.
      if (title.endsWith('error')) {
        log.color = colors.red;
      } else if (title.endsWith('warn')) {
        log.color = colors.yellow;
      }
    }
    return log;
  }

  /**
   * @param {string} level
   */
  static setLevel(level) {
    level_ = level;
    switch (level) {
      case 'silent':
        debug.enable('-LH:*');
        break;
      case 'verbose':
        debug.enable('LH:*');
        break;
      case 'error':
        debug.enable('-LH:*, LH:*:error');
        break;
      default:
        debug.enable('LH:*, -LH:*:verbose');
    }
  }

  /**
   * A simple formatting utility for event logging.
   * @param {string} prefix
   * @param {!Object} data A JSON-serializable object of event data to log.
   * @param {string=} level Optional logging level. Defaults to 'log'.
   */
  static formatProtocol(prefix, data, level) {
    const columns = (!process || process.browser) ? Infinity : process.stdout.columns;
    const method = data.method || '?????';
    const maxLength = columns - method.length - prefix.length - loggingBufferColumns;
    // IO.read ignored here to avoid logging megabytes of trace data
    const snippet = (data.params && method !== 'IO.read') ?
      JSON.stringify(data.params).substr(0, maxLength) : '';
    Log._logToStdErr(`${prefix}:${level || ''}`, [method, snippet]);
  }

  /**
   * @return {boolean}
   */
  static isVerbose() {
    return level_ === 'verbose';
  }

  static time({msg, id, args = []}, level = 'log') {
    marky.mark(id);
    Log[level]('status', msg, ...args);
  }

  static timeEnd({msg, id, args = []}, level = 'verbose') {
    Log[level]('statusEnd', msg, ...args);
    marky.stop(id);
  }

  static log(title, ...args) {
    Log.events.issueStatus(title, args);
    return Log._logToStdErr(title, args);
  }

  static warn(title, ...args) {
    Log.events.issueWarning(title, args);
    return Log._logToStdErr(`${title}:warn`, args);
  }

  static error(title, ...args) {
    return Log._logToStdErr(`${title}:error`, args);
  }

  static verbose(title, ...args) {
    Log.events.issueStatus(title, args);
    return Log._logToStdErr(`${title}:verbose`, args);
  }

  /**
   * Add surrounding escape sequences to turn a string green when logged.
   * @param {string} str
   * @return {string}
   */
  static greenify(str) {
    return `${Log.green}${str}${Log.reset}`;
  }

  /**
   * Add surrounding escape sequences to turn a string red when logged.
   * @param {string} str
   * @return {string}
   */
  static redify(str) {
    return `${Log.red}${str}${Log.reset}`;
  }

  static get green() {
    return '\x1B[32m';
  }

  static get red() {
    return '\x1B[31m';
  }

  static get yellow() {
    return '\x1b[33m';
  }

  static get purple() {
    return '\x1b[95m';
  }

  static get reset() {
    return '\x1B[0m';
  }

  static get bold() {
    return '\x1b[1m';
  }

  static get dim() {
    return '\x1b[2m';
  }

  static get tick() {
    return isWindows ? '\u221A' : '✓';
  }

  static get cross() {
    return isWindows ? '\u00D7' : '✘';
  }

  static get whiteSmallSquare() {
    return isWindows ? '\u0387' : '▫';
  }

  static get heavyHorizontal() {
    return isWindows ? '\u2500' : '━';
  }

  static get heavyVertical() {
    return isWindows ? '\u2502 ' : '┃ ';
  }

  static get heavyUpAndRight() {
    return isWindows ? '\u2514' : '┗';
  }

  static get heavyVerticalAndRight() {
    return isWindows ? '\u251C' : '┣';
  }

  static get heavyDownAndHorizontal() {
    return isWindows ? '\u252C' : '┳';
  }

  static get doubleLightHorizontal() {
    return '──';
  }
}

Log.events = new Emitter();
Log.takeTimeEntries = () => {
  const entries = marky.getEntries();
  marky.clear();
  return entries;
};
Log.getTimeEntries = () => marky.getEntries();

module.exports = Log;


/***/ }),

/***/ 7110:
/***/ ((module, exports, __nccwpck_require__) => {

/**
 * This is the web browser implementation of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = __nccwpck_require__(6076);
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = 'undefined' != typeof chrome
               && 'undefined' != typeof chrome.storage
                  ? chrome.storage.local
                  : localstorage();

/**
 * Colors.
 */

exports.colors = [
  'lightseagreen',
  'forestgreen',
  'goldenrod',
  'dodgerblue',
  'darkorchid',
  'crimson'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

function useColors() {
  // NB: In an Electron preload script, document will be defined but not fully
  // initialized. Since we know we're in Chrome, we'll just detect this case
  // explicitly
  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {
    return true;
  }

  // is webkit? http://stackoverflow.com/a/16459606/376773
  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
    // is firebug? http://stackoverflow.com/a/398120/376773
    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
    // is firefox >= v31?
    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
    // double check webkit in userAgent just in case we are in a worker
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

exports.formatters.j = function(v) {
  try {
    return JSON.stringify(v);
  } catch (err) {
    return '[UnexpectedJSONParseError]: ' + err.message;
  }
};


/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
  var useColors = this.useColors;

  args[0] = (useColors ? '%c' : '')
    + this.namespace
    + (useColors ? ' %c' : ' ')
    + args[0]
    + (useColors ? '%c ' : ' ')
    + '+' + exports.humanize(this.diff);

  if (!useColors) return;

  var c = 'color: ' + this.color;
  args.splice(1, 0, c, 'color: inherit')

  // the final "%c" is somewhat tricky, because there could be other
  // arguments passed either before or after the %c, so we need to
  // figure out the correct index to insert the CSS into
  var index = 0;
  var lastC = 0;
  args[0].replace(/%[a-zA-Z%]/g, function(match) {
    if ('%%' === match) return;
    index++;
    if ('%c' === match) {
      // we only are interested in the *last* %c
      // (the user may have provided their own)
      lastC = index;
    }
  });

  args.splice(lastC, 0, c);
}

/**
 * Invokes `console.log()` when available.
 * No-op when `console.log` is not a "function".
 *
 * @api public
 */

function log() {
  // this hackery is required for IE8/9, where
  // the `console.log` function doesn't have 'apply'
  return 'object' === typeof console
    && console.log
    && Function.prototype.apply.call(console.log, console, arguments);
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */

function save(namespaces) {
  try {
    if (null == namespaces) {
      exports.storage.removeItem('debug');
    } else {
      exports.storage.debug = namespaces;
    }
  } catch(e) {}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */

function load() {
  var r;
  try {
    r = exports.storage.debug;
  } catch(e) {}

  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
  if (!r && typeof process !== 'undefined' && 'env' in process) {
    r = process.env.DEBUG;
  }

  return r;
}

/**
 * Enable namespaces listed in `localStorage.debug` initially.
 */

exports.enable(load());

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
  try {
    return window.localStorage;
  } catch (e) {}
}


/***/ }),

/***/ 6076:
/***/ ((module, exports, __nccwpck_require__) => {


/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = createDebug.debug = createDebug['default'] = createDebug;
exports.coerce = coerce;
exports.disable = disable;
exports.enable = enable;
exports.enabled = enabled;
exports.humanize = __nccwpck_require__(1943);

/**
 * The currently active debug mode names, and names to skip.
 */

exports.names = [];
exports.skips = [];

/**
 * Map of special "%n" handling functions, for the debug "format" argument.
 *
 * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
 */

exports.formatters = {};

/**
 * Previous log timestamp.
 */

var prevTime;

/**
 * Select a color.
 * @param {String} namespace
 * @return {Number}
 * @api private
 */

function selectColor(namespace) {
  var hash = 0, i;

  for (i in namespace) {
    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);
    hash |= 0; // Convert to 32bit integer
  }

  return exports.colors[Math.abs(hash) % exports.colors.length];
}

/**
 * Create a debugger with the given `namespace`.
 *
 * @param {String} namespace
 * @return {Function}
 * @api public
 */

function createDebug(namespace) {

  function debug() {
    // disabled?
    if (!debug.enabled) return;

    var self = debug;

    // set `diff` timestamp
    var curr = +new Date();
    var ms = curr - (prevTime || curr);
    self.diff = ms;
    self.prev = prevTime;
    self.curr = curr;
    prevTime = curr;

    // turn the `arguments` into a proper Array
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }

    args[0] = exports.coerce(args[0]);

    if ('string' !== typeof args[0]) {
      // anything else let's inspect with %O
      args.unshift('%O');
    }

    // apply any `formatters` transformations
    var index = 0;
    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {
      // if we encounter an escaped % then don't increase the array index
      if (match === '%%') return match;
      index++;
      var formatter = exports.formatters[format];
      if ('function' === typeof formatter) {
        var val = args[index];
        match = formatter.call(self, val);

        // now we need to remove `args[index]` since it's inlined in the `format`
        args.splice(index, 1);
        index--;
      }
      return match;
    });

    // apply env-specific formatting (colors, etc.)
    exports.formatArgs.call(self, args);

    var logFn = debug.log || exports.log || console.log.bind(console);
    logFn.apply(self, args);
  }

  debug.namespace = namespace;
  debug.enabled = exports.enabled(namespace);
  debug.useColors = exports.useColors();
  debug.color = selectColor(namespace);

  // env-specific initialization logic for debug instances
  if ('function' === typeof exports.init) {
    exports.init(debug);
  }

  return debug;
}

/**
 * Enables a debug mode by namespaces. This can include modes
 * separated by a colon and wildcards.
 *
 * @param {String} namespaces
 * @api public
 */

function enable(namespaces) {
  exports.save(namespaces);

  exports.names = [];
  exports.skips = [];

  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
  var len = split.length;

  for (var i = 0; i < len; i++) {
    if (!split[i]) continue; // ignore empty strings
    namespaces = split[i].replace(/\*/g, '.*?');
    if (namespaces[0] === '-') {
      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
    } else {
      exports.names.push(new RegExp('^' + namespaces + '$'));
    }
  }
}

/**
 * Disable debug output.
 *
 * @api public
 */

function disable() {
  exports.enable('');
}

/**
 * Returns true if the given mode name is enabled, false otherwise.
 *
 * @param {String} name
 * @return {Boolean}
 * @api public
 */

function enabled(name) {
  var i, len;
  for (i = 0, len = exports.skips.length; i < len; i++) {
    if (exports.skips[i].test(name)) {
      return false;
    }
  }
  for (i = 0, len = exports.names.length; i < len; i++) {
    if (exports.names[i].test(name)) {
      return true;
    }
  }
  return false;
}

/**
 * Coerce `val`.
 *
 * @param {Mixed} val
 * @return {Mixed}
 * @api private
 */

function coerce(val) {
  if (val instanceof Error) return val.stack || val.message;
  return val;
}


/***/ }),

/***/ 7318:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

/**
 * Detect Electron renderer process, which is node, but we should
 * treat as a browser.
 */

if (typeof process !== 'undefined' && process.type === 'renderer') {
  module.exports = __nccwpck_require__(7110);
} else {
  module.exports = __nccwpck_require__(2247);
}


/***/ }),

/***/ 2247:
/***/ ((module, exports, __nccwpck_require__) => {

/**
 * Module dependencies.
 */

var tty = __nccwpck_require__(6224);
var util = __nccwpck_require__(3837);

/**
 * This is the Node.js implementation of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = __nccwpck_require__(6076);
exports.init = init;
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;

/**
 * Colors.
 */

exports.colors = [6, 2, 3, 4, 5, 1];

/**
 * Build up the default `inspectOpts` object from the environment variables.
 *
 *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js
 */

exports.inspectOpts = Object.keys(process.env).filter(function (key) {
  return /^debug_/i.test(key);
}).reduce(function (obj, key) {
  // camel-case
  var prop = key
    .substring(6)
    .toLowerCase()
    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });

  // coerce string value into JS value
  var val = process.env[key];
  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;
  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;
  else if (val === 'null') val = null;
  else val = Number(val);

  obj[prop] = val;
  return obj;
}, {});

/**
 * The file descriptor to write the `debug()` calls to.
 * Set the `DEBUG_FD` env variable to override with another value. i.e.:
 *
 *   $ DEBUG_FD=3 node script.js 3>debug.log
 */

var fd = parseInt(process.env.DEBUG_FD, 10) || 2;

if (1 !== fd && 2 !== fd) {
  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()
}

var stream = 1 === fd ? process.stdout :
             2 === fd ? process.stderr :
             createWritableStdioStream(fd);

/**
 * Is stdout a TTY? Colored output is enabled when `true`.
 */

function useColors() {
  return 'colors' in exports.inspectOpts
    ? Boolean(exports.inspectOpts.colors)
    : tty.isatty(fd);
}

/**
 * Map %o to `util.inspect()`, all on a single line.
 */

exports.formatters.o = function(v) {
  this.inspectOpts.colors = this.useColors;
  return util.inspect(v, this.inspectOpts)
    .split('\n').map(function(str) {
      return str.trim()
    }).join(' ');
};

/**
 * Map %o to `util.inspect()`, allowing multiple lines if needed.
 */

exports.formatters.O = function(v) {
  this.inspectOpts.colors = this.useColors;
  return util.inspect(v, this.inspectOpts);
};

/**
 * Adds ANSI color escape codes if enabled.
 *
 * @api public
 */

function formatArgs(args) {
  var name = this.namespace;
  var useColors = this.useColors;

  if (useColors) {
    var c = this.color;
    var prefix = '  \u001b[3' + c + ';1m' + name + ' ' + '\u001b[0m';

    args[0] = prefix + args[0].split('\n').join('\n' + prefix);
    args.push('\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\u001b[0m');
  } else {
    args[0] = new Date().toUTCString()
      + ' ' + name + ' ' + args[0];
  }
}

/**
 * Invokes `util.format()` with the specified arguments and writes to `stream`.
 */

function log() {
  return stream.write(util.format.apply(util, arguments) + '\n');
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */

function save(namespaces) {
  if (null == namespaces) {
    // If you set a process.env field to null or undefined, it gets cast to the
    // string 'null' or 'undefined'. Just delete instead.
    delete process.env.DEBUG;
  } else {
    process.env.DEBUG = namespaces;
  }
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */

function load() {
  return process.env.DEBUG;
}

/**
 * Copied from `node/src/node.js`.
 *
 * XXX: It's lame that node doesn't expose this API out-of-the-box. It also
 * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.
 */

function createWritableStdioStream (fd) {
  var stream;
  var tty_wrap = process.binding('tty_wrap');

  // Note stream._type is used for test-module-load-list.js

  switch (tty_wrap.guessHandleType(fd)) {
    case 'TTY':
      stream = new tty.WriteStream(fd);
      stream._type = 'tty';

      // Hack to have stream not keep the event loop alive.
      // See https://github.com/joyent/node/issues/1726
      if (stream._handle && stream._handle.unref) {
        stream._handle.unref();
      }
      break;

    case 'FILE':
      var fs = __nccwpck_require__(7147);
      stream = new fs.SyncWriteStream(fd, { autoClose: false });
      stream._type = 'fs';
      break;

    case 'PIPE':
    case 'TCP':
      var net = __nccwpck_require__(1808);
      stream = new net.Socket({
        fd: fd,
        readable: false,
        writable: true
      });

      // FIXME Should probably have an option in net.Socket to create a
      // stream from an existing fd which is writable only. But for now
      // we'll just add this hack and set the `readable` member to false.
      // Test: ./node test/fixtures/echo.js < /etc/passwd
      stream.readable = false;
      stream.read = null;
      stream._type = 'pipe';

      // FIXME Hack to have stream not keep the event loop alive.
      // See https://github.com/joyent/node/issues/1726
      if (stream._handle && stream._handle.unref) {
        stream._handle.unref();
      }
      break;

    default:
      // Probably an error on in uv_guess_handle()
      throw new Error('Implement me. Unknown stream file type!');
  }

  // For supporting legacy API we put the FD here.
  stream.fd = fd;

  stream._isStdio = true;

  return stream;
}

/**
 * Init logic for `debug` instances.
 *
 * Create a new `inspectOpts` object in case `useColors` is set
 * differently for a particular `debug` instance.
 */

function init (debug) {
  debug.inspectOpts = {};

  var keys = Object.keys(exports.inspectOpts);
  for (var i = 0; i < keys.length; i++) {
    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];
  }
}

/**
 * Enable namespaces listed in `process.env.DEBUG` initially.
 */

exports.enable(load());


/***/ }),

/***/ 1943:
/***/ ((module) => {

/**
 * Helpers.
 */

var s = 1000;
var m = s * 60;
var h = m * 60;
var d = h * 24;
var y = d * 365.25;

/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} [options]
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */

module.exports = function(val, options) {
  options = options || {};
  var type = typeof val;
  if (type === 'string' && val.length > 0) {
    return parse(val);
  } else if (type === 'number' && isNaN(val) === false) {
    return options.long ? fmtLong(val) : fmtShort(val);
  }
  throw new Error(
    'val is not a non-empty string or a valid number. val=' +
      JSON.stringify(val)
  );
};

/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */

function parse(str) {
  str = String(str);
  if (str.length > 100) {
    return;
  }
  var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
    str
  );
  if (!match) {
    return;
  }
  var n = parseFloat(match[1]);
  var type = (match[2] || 'ms').toLowerCase();
  switch (type) {
    case 'years':
    case 'year':
    case 'yrs':
    case 'yr':
    case 'y':
      return n * y;
    case 'days':
    case 'day':
    case 'd':
      return n * d;
    case 'hours':
    case 'hour':
    case 'hrs':
    case 'hr':
    case 'h':
      return n * h;
    case 'minutes':
    case 'minute':
    case 'mins':
    case 'min':
    case 'm':
      return n * m;
    case 'seconds':
    case 'second':
    case 'secs':
    case 'sec':
    case 's':
      return n * s;
    case 'milliseconds':
    case 'millisecond':
    case 'msecs':
    case 'msec':
    case 'ms':
      return n;
    default:
      return undefined;
  }
}

/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtShort(ms) {
  if (ms >= d) {
    return Math.round(ms / d) + 'd';
  }
  if (ms >= h) {
    return Math.round(ms / h) + 'h';
  }
  if (ms >= m) {
    return Math.round(ms / m) + 'm';
  }
  if (ms >= s) {
    return Math.round(ms / s) + 's';
  }
  return ms + 'ms';
}

/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtLong(ms) {
  return plural(ms, d, 'day') ||
    plural(ms, h, 'hour') ||
    plural(ms, m, 'minute') ||
    plural(ms, s, 'second') ||
    ms + ' ms';
}

/**
 * Pluralization helper.
 */

function plural(ms, n, name) {
  if (ms < n) {
    return;
  }
  if (ms < n * 1.5) {
    return Math.floor(ms / n) + ' ' + name;
  }
  return Math.ceil(ms / n) + ' ' + name + 's';
}


/***/ }),

/***/ 9916:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const stackPacks = [
  __nccwpck_require__(5558),
  __nccwpck_require__(6461),
  __nccwpck_require__(1675),
  __nccwpck_require__(3630),
  __nccwpck_require__(6955),
  __nccwpck_require__(2713),
  __nccwpck_require__(8786),
  __nccwpck_require__(9684),
  __nccwpck_require__(9748),
  __nccwpck_require__(5780),
  __nccwpck_require__(2621),
  __nccwpck_require__(2597),
];

module.exports = stackPacks;


/***/ }),

/***/ 5558:
/***/ ((module) => {

const icon = `data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 256"><path fill="%230379c4" fill-rule="evenodd" d="m171.887 116.28-53.696 89.36h-9.728l9.617-58.227-30.2.047a4.852 4.852 0 0 1-4.855-4.855c0-1.152 1.07-3.102 1.07-3.102l53.52-89.254 9.9.043-9.86 58.317 30.413-.043a4.852 4.852 0 0 1 4.855 4.855c0 1.088-.427 2.044-1.033 2.854l.004.004zM128 0C57.306 0 0 57.3 0 128s57.306 128 128 128 128-57.306 128-128S198.7 0 128 0z"/></svg>`;

const UIStrings = {
  /** Additional description of a Lighthouse audit that tells the user how they can improve image loading by using WebP in the context of AMP. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'modern-image-formats': 'Consider displaying all [`amp-img`](https://amp.dev/documentation/components/amp-img/?format=websites) components in WebP formats while specifying an appropriate fallback for other browsers. [Learn more](https://amp.dev/documentation/components/amp-img/#example:-specifying-a-fallback-image).',
  /** Additional description of a Lighthouse audit that tells the user how images are automatically lazy loaded for the AMP framewok. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'offscreen-images': 'Ensure that you are using [`amp-img`](https://amp.dev/documentation/components/amp-img/?format=websites) for images to automatically lazy-load. [Learn more](https://amp.dev/documentation/guides-and-tutorials/develop/media_iframes_3p/?format=websites#images).',
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by reducing the amount of render blocking resources present on their page in the context of the AMP framework. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'render-blocking-resources': 'Use tools such as [AMP Optimizer](https://github.com/ampproject/amp-toolbox/tree/master/packages/optimizer) to [server-side render AMP layouts](https://amp.dev/documentation/guides-and-tutorials/optimize-and-measure/server-side-rendering/).',
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by ensuring all the CSS written is supported by the AMP framework. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'unminified-css': 'Refer to the [AMP documentation](https://amp.dev/documentation/guides-and-tutorials/develop/style_and_layout/style_pages/) to ensure all styles are supported.',
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by using a runtime-managed animated image in the context of the AMP framework. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'efficient-animated-content': 'For animated content, use [`amp-anim`](https://amp.dev/documentation/components/amp-anim/) to minimize CPU usage when the content is offscreen.',
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by using responsive images in the context of the AMP framework. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'uses-responsive-images': 'The [`amp-img`](https://amp.dev/documentation/components/amp-img/?format=websites) component supports the [`srcset`](https://web.dev/use-srcset-to-automatically-choose-the-right-image/) attribute to specify which image assets to use based on the screen size. [Learn more](https://amp.dev/documentation/guides-and-tutorials/develop/style_and_layout/art_direction/).',
};

module.exports = {
  id: 'amp',
  title: 'AMP',
  icon,
  UIStrings,
};


/***/ }),

/***/ 6461:
/***/ ((module) => {

const icon = `data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 250 250"><path fill="%23dd0031" d="M125 30 31.9 63.2l14.2 123.1L125 230l78.9-43.7 14.2-123.1z"/><path fill="%23c3002f" d="M125 30v22.2-.1V230l78.9-43.7 14.2-123.1L125 30z"/><path fill="%23fff" d="M125 52.1 66.8 182.6h21.7l11.7-29.2h49.4l11.7 29.2H183L125 52.1zm17 83.3h-34l17-40.9 17 40.9z"/></svg>`;

const UIStrings = {
  /** Additional description of a Lighthouse audit that tells the user how they can improve site loading performance by reducing the total bytes delivered by their page in the context of the Angular framework. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'total-byte-weight': 'Apply [route-level code splitting](https://web.dev/route-level-code-splitting-in-angular/) to minimize the size of your JavaScript bundles. Also, consider precaching assets with the [Angular service worker](https://web.dev/precaching-with-the-angular-service-worker/).',
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by minifying their CSS and JS files in the context of the Angular framework. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'unminified-warning': 'If you are using Angular CLI, ensure that builds are generated in production mode. [Learn more](https://angular.io/guide/deployment#enable-runtime-production-mode).',
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by removing unused Javascript files in the context of the Angular framework. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'unused-javascript': 'If you are using Angular CLI, include source maps in your production build to inspect your bundles. [Learn more](https://angular.io/guide/deployment#inspect-the-bundles).',
  /** Additional description of a Lighthouse audit that tells the user how they can use responsive images in the context of the Angular framework. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'uses-responsive-images': 'Consider using the `BreakpointObserver` utility in the Component Dev Kit (CDK) to manage image breakpoints. [Learn more](https://material.angular.io/cdk/layout/overview).',
  /** Additional description of a Lighthouse audit that tells the user how they can use preload to improve performance in the context of the Angular framework. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'uses-rel-preload': 'Preload routes ahead of time to speed up navigation. [Learn more](https://web.dev/route-preloading-in-angular/).',
  /** Additional description of a Lighthouse audit that tells the user and *how* they should reduce the size of the web page's DOM in the context of the Angular framework. 'Learn More' becomes link text to additional documentation. */
  'dom-size': 'Consider virtual scrolling with the Component Dev Kit (CDK) if very large lists are being rendered. [Learn more](https://web.dev/virtualize-lists-with-angular-cdk/).',
};

module.exports = {
  id: 'angular',
  title: 'Angular',
  icon,
  UIStrings,
}


/***/ }),

/***/ 1675:
/***/ ((module) => {

const icon = `data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 186.525 243.713"><path fill="%23009cde" d="M131.64 51.91C114.491 34.769 98.13 18.429 93.26 0c-4.87 18.429-21.234 34.769-38.38 51.91C29.16 77.613 0 106.743 0 150.434a93.263 93.263 0 1 0 186.525 0c0-43.688-29.158-72.821-54.885-98.524m-92 120.256c-5.719-.194-26.824-36.571 12.329-75.303l25.909 28.3a2.215 2.215 0 0 1-.173 3.306c-6.183 6.34-32.534 32.765-35.81 41.902-.675 1.886-1.663 1.815-2.256 1.795m53.624 47.943a32.075 32.075 0 0 1-32.076-32.075 33.423 33.423 0 0 1 7.995-21.187c5.784-7.072 24.077-26.963 24.077-26.963s18.012 20.183 24.033 26.896a31.368 31.368 0 0 1 8.046 21.254 32.076 32.076 0 0 1-32.075 32.075m61.392-52.015c-.691 1.512-2.26 4.036-4.376 4.113-3.773.138-4.176-1.796-6.965-5.923-6.122-9.06-59.551-64.9-69.545-75.699-8.79-9.498-1.238-16.195 2.266-19.704 4.395-4.403 17.224-17.225 17.224-17.225s38.255 36.296 54.19 61.096 10.444 46.26 7.206 53.342"/></svg>`;

const UIStrings = {
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by removing unused CSS, in the context of the Drupal CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'unused-css-rules': 'Consider removing unused CSS rules and only attach the needed Drupal libraries to the relevant page or component in a page. See the [Drupal documentation link](https://www.drupal.org/docs/8/creating-custom-modules/adding-stylesheets-css-and-javascript-js-to-a-drupal-8-module#library) for details. To identify attached libraries that are adding extraneous CSS, try running [code coverage](https://developers.google.com/web/updates/2017/04/devtools-release-notes#coverage) in Chrome DevTools. You can identify the theme/module responsible from the URL of the stylesheet when CSS aggregation is disabled in your Drupal site. Look out for themes/modules that have many stylesheets in the list which have a lot of red in code coverage. A theme/module should only enqueue a stylesheet if it is actually used on the page.',
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by removing unused Javascript files in the context of the Drupal CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'unused-javascript': 'Consider removing unused JavaScript assets and only attach the needed Drupal libraries to the relevant page or component in a page. See the [Drupal documentation link](https://www.drupal.org/docs/8/creating-custom-modules/adding-stylesheets-css-and-javascript-js-to-a-drupal-8-module#library) for details. To identify attached libraries that are adding extraneous JavaScript, try running [code coverage](https://developers.google.com/web/updates/2017/04/devtools-release-notes#coverage) in Chrome DevTools. You can identify the theme/module responsible from the URL of the script when JavaScript aggregation is disabled in your Drupal site. Look out for themes/modules that have many scripts in the list which have a lot of red in code coverage. A theme/module should only enqueue a script if it is actually used on the page.',
  /** Additional description of a Lighthouse audit that tells the user how they can improve image loading by using webp in the context of the Drupal CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'modern-image-formats': 'Consider configuring [WebP image formats with a Convert image style](https://www.drupal.org/docs/core-modules-and-themes/core-modules/image-module/working-with-images#styles) on your site.',
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by lazy loading images that are initially offscreen in the context of the Drupal CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'offscreen-images': 'Install [a Drupal module](https://www.drupal.org/project/project_module?f%5B0%5D=&f%5B1%5D=&f%5B2%5D=im_vid_3%3A67&f%5B3%5D=&f%5B4%5D=sm_field_project_type%3Afull&f%5B5%5D=&f%5B6%5D=&text=%22lazy+load%22&solrsort=iss_project_release_usage+desc&op=Search) that can lazy load images. Such modules provide the ability to defer any offscreen images to improve performance.',
  /** Additional description of a Lighthouse audit that tells the user how they can improve site loading performance by reducing the total bytes delivered by their page in the context of the Drupal CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'total-byte-weight': 'Consider using [Responsive Image Styles](https://www.drupal.org/docs/8/mobile-guide/responsive-images-in-drupal-8) to reduce the size of images loaded on your page. If you are using Views to show multiple content items on a page, consider implementing pagination to limit the number of content items shown on a given page.',
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by reducing the amount of render blocking resources present on their page, in the context of the Drupal CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'render-blocking-resources': 'Consider using a module to inline critical CSS and JavaScript, or potentially load assets asynchronously via JavaScript such as the [Advanced CSS/JS Aggregation](https://www.drupal.org/project/advagg) module. Beware that optimizations provided by this module may break your site, so you will likely need to make code changes.',
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by minifying their CSS files in the context of the Drupal CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'unminified-css': 'Ensure you have enabled "Aggregate CSS files" in the "Administration » Configuration » Development" page. You can also configure more advanced aggregation options through [additional modules](https://www.drupal.org/project/project_module?f%5B0%5D=&f%5B1%5D=&f%5B2%5D=im_vid_3%3A123&f%5B3%5D=&f%5B4%5D=sm_field_project_type%3Afull&f%5B5%5D=&f%5B6%5D=&text=css+aggregation&solrsort=iss_project_release_usage+desc&op=Search) to speed up your site by concatenating, minifying, and compressing your CSS styles.',
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by minifying their Javascript files in the context of the Drupal CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'unminified-javascript': 'Ensure you have enabled "Aggregate JavaScript files" in the "Administration » Configuration » Development" page. You can also configure more advanced aggregation options through [additional modules](https://www.drupal.org/project/project_module?f%5B0%5D=&f%5B1%5D=&f%5B2%5D=im_vid_3%3A123&f%5B3%5D=&f%5B4%5D=sm_field_project_type%3Afull&f%5B5%5D=&f%5B6%5D=&text=javascript+aggregation&solrsort=iss_project_release_usage+desc&op=Search) to speed up your site by concatenating, minifying, and compressing your JavaScript assets.',
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by encoding animated images as video, in the context of the Drupal CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'efficient-animated-content': 'Consider uploading your GIF to a service which will make it available to embed as an HTML5 video.',
  /** Additional description of a Lighthouse audit that tells the user how they can improve their site by enabling long caching in the context of the Drupal CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'uses-long-cache-ttl': 'Set the "Browser and proxy cache maximum age" in the "Administration » Configuration » Development" page. Read about [Drupal cache and optimizing for performance](https://www.drupal.org/docs/7/managing-site-performance-and-scalability/caching-to-improve-performance/caching-overview#s-drupal-performance-resources).',
  /** Additional description of a Lighthouse audit that tells the user how they can improve site performance by optimizing images, in the context of the Drupal CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'uses-optimized-images': 'Consider using [a module](https://www.drupal.org/project/project_module?f%5B0%5D=&f%5B1%5D=&f%5B2%5D=im_vid_3%3A123&f%5B3%5D=&f%5B4%5D=sm_field_project_type%3Afull&f%5B5%5D=&f%5B6%5D=&text=optimize+images&solrsort=iss_project_release_usage+desc&op=Search) that automatically optimizes and reduces the size of images uploaded through the site while retaining quality. Also, ensure you are using the native [Responsive Image Styles](https://www.drupal.org/docs/8/mobile-guide/responsive-images-in-drupal-8) provided from Drupal (available in Drupal 8 and above) for all images rendered on the site.',
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by using responsive images in the context of the Drupal CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'uses-responsive-images': 'Ensure that you are using the native [Responsive Image Styles](https://www.drupal.org/docs/8/mobile-guide/responsive-images-in-drupal-8) provided from Drupal (available in Drupal 8 and above). Use the Responsive Image Styles when rendering image fields through view modes, views, or images uploaded through the WYSIWYG editor.',
  /** Additional description of a Lighthouse audit that tells the user how they can improve the time to first byte speed metric, in the context of the Drupal CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'server-response-time': 'Themes, modules, and server specifications all contribute to server response time. Consider finding a more optimized theme, carefully selecting an optimization module, and/or upgrading your server. Your hosting servers should make use of PHP opcode caching, memory-caching to reduce database query times such as Redis or Memcached, as well as optimized application logic to prepare pages faster.',
  /** Additional description of a Lighthouse audit that tells the user how they can add preconnect or dns-prefetch resource hints, in the context of the Drupal CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'uses-rel-preconnect': 'Preconnect or dns-prefetch resource hints can be added by installing and configuring [a module](https://www.drupal.org/project/project_module?f%5B0%5D=&f%5B1%5D=&f%5B2%5D=&f%5B3%5D=&f%5B4%5D=sm_field_project_type%3Afull&f%5B5%5D=&f%5B6%5D=&text=dns-prefetch&solrsort=iss_project_release_usage+desc&op=Search) that provides facilities for user agent resource hints.',
  /** Additional description of a Lighthouse audit that tells the user how they can specify font-display, in the context of the Drupal CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'font-display': 'Specify `@font-display` when defining custom fonts in your theme.',
};

module.exports = {
  id: 'drupal',
  title: 'Drupal',
  icon,
  UIStrings,
}


/***/ }),

/***/ 3630:
/***/ ((module) => {

const icon = `data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 82 82"><path fill="%235FA624" fill-rule="evenodd" d="M81.37 48.117C85.301 25.821 70.413 4.56 48.117.63 25.821-3.3 4.56 11.586.63 33.883-3.3 56.178 11.586 77.44 33.883 81.37 56.18 85.301 77.44 70.412 81.37 48.117Zm-8.935-14.17c2.77 12.357-1.942 25.721-12.96 33.436-14.57 10.203-34.656 6.662-44.859-7.909a32.434 32.434 0 0 1-2.869-4.98l28.7-20.097a6.53 6.53 0 1 0-3.744-5.347L9.564 48.054c-2.768-12.359 1.943-25.724 12.96-33.439 14.572-10.203 34.656-6.662 44.86 7.91a32.349 32.349 0 0 1 2.868 4.98L41.554 47.6a6.53 6.53 0 1 0 3.746 5.35l27.136-19.003Z"/></svg>`;

const UIStrings = {
  /** Additional description of a Lighthouse audit for a third-party framework called `Ezoic`. This is displayed after a user expands the section to see more. No character length limits. Ezoic Leap is Ezoic's site speed improvement toolset. Remove Unused CSS is a setting name. */
  'unused-css-rules': 'Use [Ezoic Leap](https://pubdash.ezoic.com/speed) and enable `Remove Unused CSS` to help with this issue. It will identify the CSS classes that are actually used on each page of your site, and remove any others to keep the file size small.',
  /** Additional description of a Lighthouse audit for a third-party framework called `Ezoic`. This is displayed after a user expands the section to see more. No character length limits. Ezoic Leap is Ezoic's site speed improvement toolset. Next-Gen Formats is a setting name.*/
  'modern-image-formats': 'Use [Ezoic Leap](https://pubdash.ezoic.com/speed) and enable `Next-Gen Formats` to convert images to WebP.',
  /** Additional description of a Lighthouse audit for a third-party framework called `Ezoic`. This is displayed after a user expands the section to see more. No character length limits. Ezoic Leap is Ezoic's site speed improvement toolset. Lazy Load Images is a setting name.*/
  'offscreen-images': 'Use [Ezoic Leap](https://pubdash.ezoic.com/speed) and enable `Lazy Load Images` to defer loading off-screen images until they are needed.',
  /** Additional description of a Lighthouse audit for a third-party framework called `Ezoic`. This is displayed after a user expands the section to see more. No character length limits. Ezoic Leap is Ezoic's site speed improvement toolset. Critical CSS is a setting name.*/
  'render-blocking-resources': 'Use [Ezoic Leap](https://pubdash.ezoic.com/speed) and enable `Critical CSS` and `Script Delay` to defer non-critical JS/CSS.',
  /** Additional description of a Lighthouse audit for a third-party framework called `Ezoic`. This is displayed after a user expands the section to see more. No character length limits. Ezoic Leap is Ezoic's site speed improvement toolset. Minify CSS is a setting name.*/
  'unminified-css': 'Use [Ezoic Leap](https://pubdash.ezoic.com/speed) and enable `Minify CSS` to automatically minify your CSS to reduce network payload sizes.',
  /** Additional description of a Lighthouse audit for a third-party framework called `Ezoic`. This is displayed after a user expands the section to see more. No character length limits. Ezoic Leap is Ezoic's site speed improvement toolset. Minify Javascript is a setting name.*/
  'unminified-javascript': 'Use [Ezoic Leap](https://pubdash.ezoic.com/speed) and enable `Minify Javascript` to automatically minify your JS to reduce network payload sizes.',
  /** Additional description of a Lighthouse audit for a third-party framework called `Ezoic`. This is displayed after a user expands the section to see more. No character length limits. Ezoic Leap is Ezoic's site speed improvement toolset. Efficient Static Cache Policy is a setting name.*/
  'uses-long-cache-ttl': 'Use [Ezoic Leap](https://pubdash.ezoic.com/speed) and enable `Efficient Static Cache Policy` to set recommended values in the caching header for static assests.',
  /** Additional description of a Lighthouse audit for a third-party framework called `Ezoic`. This is displayed after a user expands the section to see more. No character length limits. Ezoic Leap is Ezoic's site speed improvement toolset. Next-Gen Formats is a setting name.*/
  'uses-optimized-images': 'Use [Ezoic Leap](https://pubdash.ezoic.com/speed) and enable `Next-Gen Formats` to convert images to WebP.',
  /** Additional description of a Lighthouse audit for a third-party framework called `Ezoic`. This is displayed after a user expands the section to see more. No character length limits. Ezoic Leap is Ezoic's site speed improvement toolset. Resize Images is a setting name.*/
  'uses-responsive-images': 'Use [Ezoic Leap](https://pubdash.ezoic.com/speed) and enable `Resize Images` to resize images to a device appropriate size, reducing network payload sizes.',
  /** Additional description of a Lighthouse audit for a third-party framework called `Ezoic`. This is displayed after a user expands the section to see more. No character length limits. Ezoic Cloud Caching is Ezoic's CDN.*/
  'server-response-time': 'Use [Ezoic Cloud Caching](https://pubdash.ezoic.com/speed/caching) to cache your content across our world wide network, improving time to first byte.',
  /** Additional description of a Lighthouse audit for a third-party framework called `Ezoic`. This is displayed after a user expands the section to see more. No character length limits. Ezoic Leap is Ezoic's site speed improvement toolset. Pre-Connect Origins is a setting name.*/
  'uses-rel-preconnect': 'Use [Ezoic Leap](https://pubdash.ezoic.com/speed) and enable `Pre-Connect Origins` to automatically add `preconnect` resource hints to establish early connections to important third-party origins.',
  /** Additional description of a Lighthouse audit for a third-party framework called `Ezoic`. This is displayed after a user expands the section to see more. No character length limits. Ezoic Leap is Ezoic's site speed improvement toolset. Preload Fonts and Preload Background Images are setting names.*/
  'uses-rel-preload': 'Use [Ezoic Leap](https://pubdash.ezoic.com/speed) and enable `Preload Fonts` and `Preload Background Images` to add `preload` links to prioritize fetching resources that are currently requested later in page load.',
  /** Additional description of a Lighthouse audit for a third-party framework called `Ezoic`. This is displayed after a user expands the section to see more. No character length limits. Ezoic Leap is Ezoic's site speed improvement toolset. Optimize Fonts is a setting name.*/
  'font-display': 'Use [Ezoic Leap](https://pubdash.ezoic.com/speed) and enable `Optimize Fonts` to automatically leverage the `font-display` CSS feature to ensure text is user-visible while webfonts are loading.',
}

module.exports = {
  id: 'ezoic',
  title: 'Ezoic',
  icon,
  UIStrings,
};

/***/ }),

/***/ 6955:
/***/ ((module) => {

/**
 * @license Copyright 2020 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License'); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */
/* eslint-disable max-len */



const icon = `data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid" viewBox="0 0 256 258"><path fill="%23F9AE41" d="M255.7 35.6a33.7 33.7 0 0 0-67-4.8l-.4-.2c-27.6-12.4-50.8 9.6-50.8 9.6l-61.4 61.7 24.3 23.4 49.4-48.6c23-23 35.6-7.4 35.6-7.4 17.4 14.6.6 32 .6 32l24.9 24c20.3-22 21.5-41.1 15.3-56.3a33.7 33.7 0 0 0 29.5-33.4"/><path fill="%23EE4035" d="m226.5 190.5.2-.3c12.4-27.6-9.6-50.8-9.6-50.8L155.4 78l-23.3 24.3 48.5 49.4c23 23 7.5 35.6 7.5 35.6-14.7 17.4-32 .6-32 .6l-24 24.9c21.9 20.3 41 21.5 56.2 15.3a33.7 33.7 0 1 0 38.2-37.6"/><path fill="%234F91CD" d="m156 133-49.5 48.6c-23 23-35.6 7.4-35.6 7.4-17.4-14.6-.6-32-.6-32l-24.9-24c-20.3 22-21.4 41.1-15.3 56.3a33.7 33.7 0 1 0 37.6 38.2l.3.2c27.6 12.4 50.8-9.6 50.8-9.6l61.4-61.7-24.3-23.4"/><path fill="%237AC043" d="M75.7 106.6c-23-23-7.4-35.6-7.4-35.6 14.6-17.4 32-.6 32-.6l24-24.9c-22-20.3-41-21.5-56.3-15.3a33.7 33.7 0 1 0-38.2 37.6l-.2.3C17.2 95.7 39.2 119 39.2 119l61.7 61.4 23.4-24.3-48.6-49.4"/></svg>`;

const UIStrings = {
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by removing unused CSS, in the context of the Joomla CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'unused-css-rules': 'Consider reducing, or switching, the number of [Joomla extensions](https://extensions.joomla.org/) loading unused CSS in your page. To identify extensions that are adding extraneous CSS, try running [code coverage](https://developers.google.com/web/updates/2017/04/devtools-release-notes#coverage) in Chrome DevTools. You can identify the theme/plugin responsible from the URL of the stylesheet. Look out for plugins that have many stylesheets in the list which have a lot of red in code coverage. A plugin should only enqueue a stylesheet if it is actually used on the page.',
  /** Additional description of a Lighthouse audit that tells the user how they can improve image loading by using webp in the context of the Joomla CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'modern-image-formats': 'Consider using a [plugin](https://extensions.joomla.org/instant-search/?jed_live%5Bquery%5D=webp) or service that will automatically convert your uploaded images to the optimal formats.',
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by lazy loading images that are initially offscreen in the context of the Joomla CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'offscreen-images': 'Install a [lazy-load Joomla plugin](https://extensions.joomla.org/instant-search/?jed_live%5Bquery%5D=lazy%20loading) that provides the ability to defer any offscreen images, or switch to a template that provides that functionality. Starting with Joomla 4.0, all new images will [automatically](https://github.com/joomla/joomla-cms/pull/30748) get the `loading` attribute from the core.',
  /** Additional description of a Lighthouse audit that tells the user how they can improve site loading performance by reducing the total bytes delivered by their page in the context of the Joomla CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'total-byte-weight': 'Consider showing excerpts in your article categories (e.g. via the read more link), reducing the number of articles shown on a given page, breaking your long posts into multiple pages, or using a plugin to lazy-load comments.',
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by reducing the amount of render blocking resources present on their page, in the context of the Joomla CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'render-blocking-resources': 'There are a number of Joomla plugins that can help you [inline critical assets](https://extensions.joomla.org/instant-search/?jed_live%5Bquery%5D=performance) or [defer less important resources](https://extensions.joomla.org/instant-search/?jed_live%5Bquery%5D=performance). Beware that optimizations provided by these plugins may break features of your templates or plugins, so you will need to test these thoroughly.',
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by minifying their CSS files in the context of the Joomla CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'unminified-css': 'A number of [Joomla extensions](https://extensions.joomla.org/instant-search/?jed_live%5Bquery%5D=performance) can speed up your site by concatenating, minifying, and compressing your css styles. There are also templates that provide this functionality.',
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by minifying their Javascript files in the context of the Joomla CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'unminified-javascript': 'A number of [Joomla extensions](https://extensions.joomla.org/instant-search/?jed_live%5Bquery%5D=performance) can speed up your site by concatenating, minifying, and compressing your scripts. There are also templates that provide this functionality.',
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by encoding animated images as video, in the context of the Joomla CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'efficient-animated-content': 'Consider uploading your GIF to a service which will make it available to embed as an HTML5 video.',
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by removing unused Javascript files in the context of the Joomla CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'unused-javascript': 'Consider reducing, or switching, the number of [Joomla extensions](https://extensions.joomla.org/) loading unused JavaScript in your page. To identify plugins that are adding extraneous JS, try running [code coverage](https://developers.google.com/web/updates/2017/04/devtools-release-notes#coverage) in Chrome DevTools. You can identify the extension responsible from the URL of the script. Look out for extensions that have many scripts in the list which have a lot of red in code coverage. An extension should only enqueue a script if it is actually used on the page.',
  /** Additional description of a Lighthouse audit that tells the user how they can improve their site by enabling long caching in the context of the Joomla CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'uses-long-cache-ttl': 'Read about [Browser Caching in Joomla](https://docs.joomla.org/Cache).',
  /** Additional description of a Lighthouse audit that tells the user how they can improve site performance by optimizing images, in the context of the Joomla CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'uses-optimized-images': 'Consider using an [image optimization plugin](https://extensions.joomla.org/instant-search/?jed_live%5Bquery%5D=performance) that compresses your images while retaining quality.',
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance via enabling text compression in the context of the Joomla CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'uses-text-compression': 'You can enable text compression by enabling Gzip Page Compression in Joomla (System > Global configuration > Server).',
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by using responsive images in the context of the Joomla CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'uses-responsive-images': 'Consider using a [responsive images plugin](https://extensions.joomla.org/instant-search/?jed_live%5Bquery%5D=responsive%20images) to use responsive images in your content.',
  /** Additional description of a Lighthouse audit that tells the user how they can improve the server-response-time speed metric, in the context of the Joomla CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'server-response-time': 'Templates, extensions, and server specifications all contribute to server response time. Consider finding a more optimized template, carefully selecting an optimization extension, and/or upgrading your server.',
};

module.exports = {
  id: 'joomla',
  title: 'Joomla',
  icon,
  UIStrings,
};


/***/ }),

/***/ 2713:
/***/ ((module) => {

const icon = `data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" fill="%23f26322" viewBox="0 0 1000 1000"><path d="M916.9 267.4v465.3l-111.3 67.4V331.4l-1.5-.9-303.9-189-304.6 189.2-1.2.8V799L83.1 732.6V267.4l.7-.4L500.3 10l416 257 .6.4zM560.7 468.5v383.3L500.3 890l-61-38.2V306.7l-136 84.3v476.6l197 122.5 196.4-122.5V391l-136-84.3v161.8z"/></svg>`;

const UIStrings = {
  /** Additional description of a Lighthouse audit that tells the user how they can improve image loading by using webp in the context of the Magento platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'modern-image-formats': "Consider searching the [Magento Marketplace](https://marketplace.magento.com/catalogsearch/result/?q=webp) for a variety of third-party extensions to leverage newer image formats.",
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by lazy loading images that are initially offscreen in the context of the Magento platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'offscreen-images': "Consider modifying your product and catalog templates to make use of the web platform's [lazy loading](https://web.dev/native-lazy-loading) feature.",
  /** Additional description of a Lighthouse audit that tells the user how they can improve site loading performance by disabling JS bundling in the context of the Magento platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'disable-bundling': "Disable Magento's built-in [JavaScript bundling and minification](https://devdocs.magento.com/guides/v2.3/frontend-dev-guide/themes/js-bundling.html), and consider using [baler](https://github.com/magento/baler/) instead.",
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by minifying their CSS files in the context of the Magento platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'unminified-css': "Enable the \"Minify CSS Files\" option in your store's Developer settings. [Learn more](https://devdocs.magento.com/guides/v2.3/performance-best-practices/configuration.html?itm_source=devdocs&itm_medium=search_page&itm_campaign=federated_search&itm_term=minify%20css%20files).",
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by minifying their Javascript files in the context of the Magento platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'unminified-javascript': "Use [Terser](https://www.npmjs.com/package/terser) to minify all JavaScript assets from static content deployment, and disable the built-in minification feature.",
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by removing unused Javascript files in the context of the Magento platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'unused-javascript': "Disable Magento's built-in [JavaScript bundling](https://devdocs.magento.com/guides/v2.3/frontend-dev-guide/themes/js-bundling.html).",
  /** Additional description of a Lighthouse audit that tells the user how they can improve site performance by optimizing images, in the context of the Magento platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'uses-optimized-images': "Consider searching the [Magento Marketplace](https://marketplace.magento.com/catalogsearch/result/?q=optimize%20image) for a variety of third party extensions to optimize images.",
  /** Additional description of a Lighthouse audit that tells the user how they can improve the time to first byte speed metric, in the context of the Magento platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'server-response-time': "Use Magento's [Varnish integration](https://devdocs.magento.com/guides/v2.3/config-guide/varnish/config-varnish.html).",
  /** Additional description of a Lighthouse audit that tells the user how they can add preconnect or dns-prefetch resource hints, in the context of the Magento platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'uses-rel-preconnect': "Preconnect or dns-prefetch resource hints can be added by [modifying a themes's layout](https://devdocs.magento.com/guides/v2.3/frontend-dev-guide/layouts/xml-manage.html).",
  /** Additional description of a Lighthouse audit that tells the user how they can add preload tags, in the context of the Magento platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'uses-rel-preload': "`<link rel=preload>` tags can be added by [modifying a themes's layout](https://devdocs.magento.com/guides/v2.3/frontend-dev-guide/layouts/xml-manage.html).",
  /** Additional description of a Lighthouse audit that tells the user how they can minimize critical request chains, in the context of the Magento platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'critical-request-chains': "If you are not bundling your JavaScript assets, consider using [baler](https://github.com/magento/baler).",
  /** Additional description of a Lighthouse audit that tells the user how they can specify font-display, in the context of the Magento platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'font-display': "Specify `@font-display` when [defining custom fonts](https://devdocs.magento.com/guides/v2.3/frontend-dev-guide/css-topics/using-fonts.html)."
};

module.exports = {
  id: 'magento',
  title: 'Magento',
  icon,
  UIStrings,
};


/***/ }),

/***/ 8786:
/***/ ((module) => {

const icon = `data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 207 124"><path fill="%23000" d="M48.942 32.632h38.96v3.082h-35.39v23.193H85.79v3.082H52.513v25.464h35.794v3.081H48.942V32.632Zm42.45 0h4.139l18.343 25.464 18.749-25.464L158.124.287l-41.896 60.485 21.59 29.762h-4.302l-19.642-27.086L94.15 90.534h-4.22l21.751-29.762-20.29-28.14Zm47.967 3.082v-3.082h44.397v3.082h-20.453v54.82h-3.571v-54.82h-20.373ZM.203 32.632h4.464l61.557 91.671-25.439-33.769L3.936 37.011l-.162 53.523H.203zm183.194 53.891c.738 0 1.276-.563 1.276-1.29 0-.727-.538-1.29-1.276-1.29-.73 0-1.277.563-1.277 1.29 0 .727.547 1.29 1.277 1.29Zm3.509-3.393c0 2.146 1.555 3.549 3.822 3.549 2.414 0 3.874-1.446 3.874-3.956v-8.837h-1.946v8.828c0 1.394-.704 2.138-1.946 2.138-1.112 0-1.867-.692-1.893-1.722h-1.911Zm10.24-.113c.14 2.233 2.007 3.662 4.787 3.662 2.97 0 4.83-1.498 4.83-3.887 0-1.878-1.06-2.917-3.632-3.514l-1.38-.338c-1.634-.38-2.294-.891-2.294-1.783 0-1.125 1.025-1.86 2.563-1.86 1.459 0 2.466.718 2.649 1.869h1.893c-.113-2.103-1.971-3.583-4.516-3.583-2.737 0-4.56 1.48-4.56 3.704 0 1.835 1.033 2.926 3.3 3.454l1.616.39c1.659.389 2.388.96 2.388 1.912 0 1.108-1.146 1.913-2.71 1.913-1.676 0-2.84-.753-3.005-1.939h-1.928Z"/></svg>`;

const UIStrings = {
  /** Additional description of a Lighthouse audit that tells the user how they can remove unusused CSS rules by configuring a plugin named PurgeCSS. */
  'unused-css-rules': 'Consider setting up `PurgeCSS` in `Next.js` configuration to remove unused rules from stylesheets. [Learn more](https://purgecss.com/guides/next.html).',
  /** Additional description of a Lighthouse audit that tells the user to use the next/image component to automatically optimize image format. */
  'modern-image-formats': 'Use the `next/image` component instead of `<img>` to automatically optimize image format. [Learn more](https://nextjs.org/docs/basic-features/image-optimization).',
  /** Additional description of a Lighthouse audit that tells the user to defer loading images which are not shown on screen using the next/image component. */
  'offscreen-images': 'Use the `next/image` component instead of `<img>` to automatically lazy-load images. [Learn more](https://nextjs.org/docs/basic-features/image-optimization).',
  /** Additional description of a Lighthouse audit that tells the user to use next/script to defer loading of non-critical third-party libraries. */
  'render-blocking-resources': 'Use the `next/script` component to defer loading of non-critical third-party scripts. [Learn more](https://nextjs.org/docs/basic-features/script).',
  /** Additional description of a Lighthouse audit that tells the user to use Webpack Bundle Analyzer to discover JavaScript code that is not used. */
  'unused-javascript': 'Use `Webpack Bundle Analyzer` to detect unused JavaScript code. [Learn more](https://github.com/vercel/next.js/tree/canary/packages/next-bundle-analyzer)',
  /** Additional description of a Lighthouse audit that tells the user to enable caching for assets (e.g. images) and server-side rendered (SSR) pages that don't change between deployments. */
  'uses-long-cache-ttl': 'Configure caching for immutable assets and `Server-side Rendered` (SSR) pages. [Learn more](https://nextjs.org/docs/going-to-production#caching).',
  /** Additional description of a Lighthouse audit that tells the user to use the next/image component to adjust image quality. */
  'uses-optimized-images': 'Use the `next/image` component instead of `<img>` to adjust image quality. [Learn more](https://nextjs.org/docs/basic-features/image-optimization).',
  /** Additional description of a Lighthouse audit that tells the user to enable compression (gzip, brotli) on their servers. */
  'uses-text-compression': 'Enable compression on your Next.js server. [Learn more](https://nextjs.org/docs/api-reference/next.config.js/compression).',
  /** Additional description of a Lighthouse audit that tells the user to serve responsive images using the next/image component with appropriate `sizes` set. */
  'uses-responsive-images': 'Use the `next/image` component to set the appropriate `sizes`. [Learn more](https://nextjs.org/docs/api-reference/next/image#sizes).',
  /** Additional description of a Lighthouse audit that tells the user to analyze the performance of their applications using Next.js Analytics. */
  'user-timings': 'Consider using `Next.js Analytics` to measure your app\'s real-world performance. [Learn more](https://nextjs.org/docs/advanced-features/measuring-performance).',
  /** Additional description of a Lighthouse audit that tells the user to use the next/image component to automatically preload LCP images. */
  'prioritize-lcp-image': 'Use the `next/image` component and set "priority" to true to preload LCP image. [Learn more](https://nextjs.org/docs/api-reference/next/image#priority).',
  /** Additional description of a Lighthouse audit that tells the user to use the next/image component to make sure `width` and `height` of image elements are always specified. */
  'unsized-images': 'Use the `next/image` component to make sure images are always sized appropriately. [Learn more](https://nextjs.org/docs/api-reference/next/image#width).',
}

module.exports = {
  id: 'next.js',
  title: 'Next.js',
  icon,
  UIStrings,
}


/***/ }),

/***/ 9684:
/***/ ((module) => {

const icon = `data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 124 124"><path fill="%2380EEC0" fill-rule="evenodd" d="M55.75 27.155c-3.222-5.54-11.278-5.54-14.5 0L6.134 87.535C2.912 93.075 6.94 100 13.384 100h27.413c-2.753-2.407-3.773-6.57-1.69-10.142L65.704 44.27 55.75 27.155Z" clip-rule="evenodd"/><path fill="%2300DC82" d="M78 40.4c2.667-4.533 9.333-4.533 12 0l29.06 49.4c2.667 4.533-.666 10.199-5.999 10.199H54.938c-5.333 0-8.666-5.666-6-10.199L78 40.4Z"/></svg>`;

const UIStrings = {
  /** Additional description of a Lighthouse audit that tells the user to use the nuxt/image component to serve modern formats like WebP. */
  'modern-image-formats': 'Use the `nuxt/image` component and set `format="webp"`. [Learn more](https://image.nuxtjs.org/components/nuxt-img#format).',
  /** Additional description of a Lighthouse audit that tells the user to use the nuxt/image component to defer loading images which are not shown on screen. */
  'offscreen-images': 'Use the `nuxt/image` component and set `loading="lazy"` for offscreen images. [Learn more](https://image.nuxtjs.org/components/nuxt-img#loading).',
  /** Additional description of a Lighthouse audit that tells the user to use the nuxt/image component to automatically compress their images. */
  'uses-optimized-images': 'Use the `nuxt/image` component and set the appropriate `quality`. [Learn more](https://image.nuxtjs.org/components/nuxt-img#quality).',
  /** Additional description of a Lighthouse audit that tells the user to use the nuxt/image component to serve appropriately sized images to different devices. */
  'uses-responsive-images': 'Use the `nuxt/image` component and set the appropriate `sizes`. [Learn more](https://image.nuxtjs.org/components/nuxt-img#sizes).',
  /** Additional description of a Lighthouse audit that tells the user to use the nuxt/image component to prioritize the loading of the image that is part of the Largest Contentful Paint (LCP). */
  'prioritize-lcp-image': 'Use the `nuxt/image` component and specify `preload` for LCP image. [Learn more](https://image.nuxtjs.org/components/nuxt-img#preload).',
  /** Additional description of a Lighthouse audit that tells the user to use the nuxt/image component to provide explicit `width` and `height` for images to prevent layout shift. */
  'unsized-images': 'Use the `nuxt/image` component and specify explicit `width` and `height`. [Learn more](https://image.nuxtjs.org/components/nuxt-img#width--height).',
}

module.exports = {
  id: 'nuxt',
  title: 'Nuxt',
  icon,
  UIStrings,
}

/***/ }),

/***/ 9748:
/***/ ((module) => {

const icon = `data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 310 310"><path fill="none" d="M-1-1h802v602H-1z"/><path fill="%23de6c26" d="M135 6.9c-14.2 4.4-34.9 21.8-49.9 42C55.8 88.5 39.6 135.8 41.4 177c.8 20.2 4.9 35.5 14.4 54.5 13.6 27.4 40.8 55.1 65.5 66.9 14.1 6.7 13.4 6.9 14.1-2.8.3-4.4 1-32.4 1.6-62.1 2.7-137.3 4.4-176 8.2-191.3.6-2.3 1.4-4.2 1.9-4.2 1.2 0 3.6 9.1 4.9 18.3.5 4.3 1 17.7 1 29.8 0 12 .3 21.9.7 21.9.3 0 5.7-5 11.9-11 6.9-6.8 12-11 13.3-11 1.8 0 1.9.3 1 2.7-1.2 3.1-7.9 13.2-19.1 28.5L153 128l.1 31.2c.1 17.2.4 37.4.8 44.9l.6 13.7 11-12.6c14-16 35.1-37.1 39.5-39.6l3.3-1.9-.6 3.2c-2 9.8-9.5 20.7-37.4 54.3L154 240.8v31.1c0 18.3.4 31.1.9 31.1 2.8 0 19.3-6.4 26.8-10.5 13.8-7.3 23.8-15 38.3-29.5 15.7-15.7 24.4-27.4 33.4-45.2 20.5-40 21-80.3 1.6-119-17.8-35.6-54.6-72.1-87.8-86.9-11.7-5.3-24.6-7.3-32.2-5z"/></svg>`;

const UIStrings = {
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by removing unused CSS, in the context of the October CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'unused-css-rules': "Consider reviewing the [plugins](https://octobercms.com/plugins) loading unused CSS on the website. To identify plugins that add unnecessary CSS, run [code coverage](https://developers.google.com/web/updates/2017/04/devtools-release-notes#coverage) in Chrome DevTools. Identify the theme/plugin responsible from the stylesheet URL. Look for plugins with many stylesheets with lots of red in code coverage. A plugin should only add a stylesheet if it is actually used on the web page.",
  /** Additional description of a Lighthouse audit that tells the user how they can improve image loading by using webp in the context of the October CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'modern-image-formats': "Consider using a [plugin](https://octobercms.com/plugins?search=image) or service that will automatically convert the uploaded images to the optimal formats. [WebP lossless images](https://developers.google.com/speed/webp) are 26% smaller in size compared to PNGs and 25-34% smaller than comparable JPEG images at the equivalent SSIM quality index. Another next-gen image format to consider is [AVIF](https://jakearchibald.com/2020/avif-has-landed/).",
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by lazy loading images that are initially offscreen in the context of the October CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'offscreen-images': "Consider installing an [image lazy loading plugin](https://octobercms.com/plugins?search=lazy) that provides the ability to defer any offscreen images, or switch to a theme that provides that functionality. Also consider using [the AMP plugin](https://octobercms.com/plugins?search=Accelerated+Mobile+Pages).",
  /** Additional description of a Lighthouse audit that tells the user how they can improve site loading performance by reducing the total bytes delivered by their page in the context of the October CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'total-byte-weight': "Consider showing excerpts in the post lists (e.g. using a `show more` button), reducing the number of posts shown on a given web page, breaking long posts into multiple web pages, or using a plugin to lazy-load comments.",
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by reducing the amount of render blocking resources present on their page, in the context of the October CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'render-blocking-resources': "There are many plugins that help [inline critical assets](https://octobercms.com/plugins?search=css). These plugins may break other plugins, so you should test thoroughly.",
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by minifying their CSS files in the context of the October CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'unminified-css': "There are many [plugins](https://octobercms.com/plugins?search=css) that can speed up a website by concatenating, minifying and compressing the styles. Using a build process to do this minification up-front can speed up development.",
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by minifying their Javascript files in the context of the October CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'unminified-javascript': "There are many [plugins](https://octobercms.com/plugins?search=javascript) that can speed up a website by concatenating, minifying and compressing the scripts. Using a build process to do this minification up-front can speed up development.",
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by encoding animated images as video, in the context of the October CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'efficient-animated-content': "[Replace animated GIFs with video](https://web.dev/replace-gifs-with-videos/) for faster web page loads and consider using modern file formats such as [WebM](https://web.dev/replace-gifs-with-videos/#create-webm-videos) or [AV1](https://developers.google.com/web/updates/2018/09/chrome-70-media-updates#av1-decoder) to improve compression efficiency by greater than 30% over the current state-of-the-art video codec, VP9.",
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by removing unused Javascript files in the context of the October CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'unused-javascript': "Consider reviewing the [plugins](https://octobercms.com/plugins?search=javascript) that load unused JavaScript in the web page. To identify plugins that add unnecessary JavaScript, run [code coverage](https://developers.google.com/web/updates/2017/04/devtools-release-notes#coverage) in Chrome DevTools. Identify the theme/plugin responsible from the URL of the script. Look for plugins with many scripts with lots of red in code coverage. A plugin should only add a script if it is actually used on the web page.",
  /** Additional description of a Lighthouse audit that tells the user how they can improve their site by enabling long caching in the context of the October CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'uses-long-cache-ttl': "Read about [preventing unnecessary network requests with the HTTP Cache](https://web.dev/http-cache/#caching-checklist). There are many [plugins](https://octobercms.com/plugins?search=Caching) that can be used to speed up caching.",
  /** Additional description of a Lighthouse audit that tells the user how they can improve site performance by optimizing images, in the context of the October CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'uses-optimized-images': "Consider using an [image optimization plugin](https://octobercms.com/plugins?search=image) to compresses images while retaining the quality.",
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance via enabling text compression in the context of the October CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'uses-text-compression': "Enable text compression in the web server configuration.",
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by using responsive images in the context of the October CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'uses-responsive-images': "Upload images directly in the media manager to ensure the required image sizes are available. Consider using the [resize filter](https://octobercms.com/docs/markup/filter-resize) or an [image resizing plugin](https://octobercms.com/plugins?search=image) to ensure the optimal image sizes are used.",
  /** Additional description of a Lighthouse audit that tells the user how they can improve the time to first byte speed metric, in the context of the October CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'server-response-time': "Themes, plugins and server specifications all contribute to the server response time. Consider finding a more optimized theme, carefully selecting an optimization plugin and/or upgrade the server. October CMS also allows developers to use [`Queues`](https://octobercms.com/docs/services/queues) to defer the processing of a time consuming task, such as sending an e-mail. This drastically speeds up web requests.",
};

module.exports = {
  id: 'octobercms',
  title: 'October CMS',
  icon,
  UIStrings,
}


/***/ }),

/***/ 5780:
/***/ ((module) => {

const icon = `data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 841.9 595.3"><g fill="%2361DAFB"><path d="M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z"/><circle cx="420.9" cy="296.5" r="45.7"/><path d="M520.5 78.1z"/></g></svg>`;

const UIStrings = {
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by minifying their CSS files in the context of the React library. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'unminified-css': "If your build system minifies CSS files automatically, ensure that you are deploying the production build of your application. You can check this with the React Developer Tools extension. [Learn more](https://reactjs.org/docs/optimizing-performance.html#use-the-production-build).",
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by minifying their Javascript files in the context of the React library. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'unminified-javascript': "If your build system minifies JS files automatically, ensure that you are deploying the production build of your application. You can check this with the React Developer Tools extension. [Learn more](https://reactjs.org/docs/optimizing-performance.html#use-the-production-build).",
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by removing unused Javascript files in the context of the React library. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'unused-javascript': "If you are not server-side rendering, [split your JavaScript bundles](https://web.dev/code-splitting-suspense/) with `React.lazy()`. Otherwise, code-split using a third-party library such as [loadable-components](https://www.smooth-code.com/open-source/loadable-components/docs/getting-started/).",
  /** Additional description of a Lighthouse audit that tells the user how they can improve the time to first byte speed metric, in the context of the React library. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'server-response-time': "If you are server-side rendering any React components, consider using `renderToPipeableStream()` or `renderToStaticNodeStream()` to allow the client to receive and hydrate different parts of the markup instead of all at once. [Learn more](https://reactjs.org/docs/react-dom-server.html#renderToPipeableStream).",
  /** Additional description of a Lighthouse audit that tells the user how they can minimize redirects, in the context of the React library. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'redirects': "If you are using React Router, minimize usage of the `<Redirect>` component for [route navigations](https://reacttraining.com/react-router/web/api/Redirect).",
  /** Additional description of a Lighthouse audit that tells the user how they can use the Profiler to help measure performance. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'user-timings': "Use the React DevTools Profiler, which makes use of the Profiler API, to measure the rendering performance of your components. [Learn more.](https://reactjs.org/blog/2018/09/10/introducing-the-react-profiler.html)",
  /** Additional description of a Lighthouse audit that tells the user *why* and *how* they should reduce the size of the web page"s DOM, in the context of the React library, as well as how to maximize component performance when many DOM nodes are present. 'Learn More' becomes link text to additional documentation. */
  'dom-size': "Consider using a \"windowing\" library like `react-window` to minimize the number of DOM nodes created if you are rendering many repeated elements on the page. [Learn more](https://web.dev/virtualize-long-lists-react-window/). Also, minimize unnecessary re-renders using [`shouldComponentUpdate`](https://reactjs.org/docs/optimizing-performance.html#shouldcomponentupdate-in-action), [`PureComponent`](https://reactjs.org/docs/react-api.html#reactpurecomponent), or [`React.memo`](https://reactjs.org/docs/react-api.html#reactmemo) and [skip effects](https://reactjs.org/docs/hooks-effect.html#tip-optimizing-performance-by-skipping-effects) only until certain dependencies have changed if you are using the `Effect` hook to improve runtime performance.",
};

module.exports = {
  id: 'react',
  title: 'React',
  icon,
  UIStrings,
}


/***/ }),

/***/ 2621:
/***/ ((module) => {

const icon = `data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 122.5 122.5"><g fill="%232f3439"><path d="M8.7 61.3c0 20.8 12.1 38.7 29.6 47.3l-25-68.7c-3 6.5-4.6 13.7-4.6 21.4zm88-2.7c0-6.5-2.3-11-4.3-14.5-2.7-4.3-5.2-8-5.2-12.3 0-4.8 3.7-9.3 8.9-9.3h.7a52.4 52.4 0 0 0-79.4 9.9h3.3c5.5 0 14-.6 14-.6 2.9-.2 3.2 4 .4 4.3 0 0-2.9.4-6 .5l19.1 57L59.7 59l-8.2-22.5c-2.8-.1-5.5-.5-5.5-.5-2.8-.1-2.5-4.5.3-4.3 0 0 8.7.7 13.9.7 5.5 0 14-.7 14-.7 2.8-.2 3.2 4 .3 4.3 0 0-2.8.4-6 .5l19 56.5 5.2-17.5c2.3-7.3 4-12.5 4-17z"/><path d="m62.2 65.9-15.8 45.8a52.6 52.6 0 0 0 32.3-.9l-.4-.7zM107.4 36a49.6 49.6 0 0 1-3.6 24.2l-16.1 46.5A52.5 52.5 0 0 0 107.4 36z"/><path d="M61.3 0a61.3 61.3 0 1 0 .1 122.7A61.3 61.3 0 0 0 61.3 0zm0 119.7a58.5 58.5 0 1 1 .1-117 58.5 58.5 0 0 1-.1 117z"/></g></svg>`;

const UIStrings = {
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by removing unused CSS, in the context of the Wordpress CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'unused-css-rules': "Consider reducing, or switching, the number of [WordPress plugins](https://wordpress.org/plugins/) loading unused CSS in your page. To identify plugins that are adding extraneous CSS, try running [code coverage](https://developer.chrome.com/docs/devtools/coverage/) in Chrome DevTools. You can identify the theme/plugin responsible from the URL of the stylesheet. Look out for plugins that have many stylesheets in the list which have a lot of red in code coverage. A plugin should only enqueue a stylesheet if it is actually used on the page.",
  /** Additional description of a Lighthouse audit that tells the user how they can improve image loading by using webp in the context of the Wordpress CMS platform. This is displayed after a user expands the section to see more. No character length limits. */
  'modern-image-formats': "Consider using the [Performance Lab](https://wordpress.org/plugins/performance-lab/) plugin to automatically convert your uploaded JPEG images into WebP, wherever supported.",
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by lazy loading images that are initially offscreen in the context of the Wordpress CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'offscreen-images': "Install a [lazy-load WordPress plugin](https://wordpress.org/plugins/search/lazy+load/) that provides the ability to defer any offscreen images, or switch to a theme that provides that functionality. Also consider using [the AMP plugin](https://wordpress.org/plugins/amp/).",
  /** Additional description of a Lighthouse audit that tells the user how they can improve site loading performance by reducing the total bytes delivered by their page in the context of the Wordpress CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'total-byte-weight': "Consider showing excerpts in your post lists (e.g. via the more tag), reducing the number of posts shown on a given page, breaking your long posts into multiple pages, or using a plugin to lazy-load comments.",
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by reducing the amount of render blocking resources present on their page, in the context of the Wordpress CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'render-blocking-resources': "There are a number of WordPress plugins that can help you [inline critical assets](https://wordpress.org/plugins/search/critical+css/) or [defer less important resources](https://wordpress.org/plugins/search/defer+css+javascript/). Beware that optimizations provided by these plugins may break features of your theme or plugins, so you will likely need to make code changes.",
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by minifying their CSS files in the context of the Wordpress CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'unminified-css': "A number of [WordPress plugins](https://wordpress.org/plugins/search/minify+css/) can speed up your site by concatenating, minifying, and compressing your styles. You may also want to use a build process to do this minification up-front if possible.",
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by minifying their Javascript files in the context of the Wordpress CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'unminified-javascript': "A number of [WordPress plugins](https://wordpress.org/plugins/search/minify+javascript/) can speed up your site by concatenating, minifying, and compressing your scripts. You may also want to use a build process to do this minification up front if possible.",
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by encoding animated images as video, in the context of the Wordpress CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'efficient-animated-content': "Consider uploading your GIF to a service which will make it available to embed as an HTML5 video.",
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by removing unused Javascript files in the context of the Wordpress CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'unused-javascript': "Consider reducing, or switching, the number of [WordPress plugins](https://wordpress.org/plugins/) loading unused JavaScript in your page. To identify plugins that are adding extraneous JS, try running [code coverage](https://developer.chrome.com/docs/devtools/coverage/) in Chrome DevTools. You can identify the theme/plugin responsible from the URL of the script. Look out for plugins that have many scripts in the list which have a lot of red in code coverage. A plugin should only enqueue a script if it is actually used on the page.",
  /** Additional description of a Lighthouse audit that tells the user how they can improve their site by enabling long caching in the context of the Wordpress CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'uses-long-cache-ttl': "Read about [Browser Caching in WordPress](https://wordpress.org/support/article/optimization/#browser-caching).",
  /** Additional description of a Lighthouse audit that tells the user how they can improve site performance by optimizing images, in the context of the Wordpress CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'uses-optimized-images': "Consider using an [image optimization WordPress plugin](https://wordpress.org/plugins/search/optimize+images/) that compresses your images while retaining quality.",
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance via enabling text compression in the context of the Wordpress CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'uses-text-compression': "You can enable text compression in your web server configuration.",
  /** Additional description of a Lighthouse audit that tells the user how they can improve performance by using responsive images in the context of the Wordpress CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'uses-responsive-images': "Upload images directly through the [media library](https://wordpress.org/support/article/media-library-screen/) to ensure that the required image sizes are available, and then insert them from the media library or use the image widget to ensure the optimal image sizes are used (including those for the responsive breakpoints). Avoid using `Full Size` images unless the dimensions are adequate for their usage. [Learn More](https://wordpress.org/support/article/inserting-images-into-posts-and-pages/).",
  /** Additional description of a Lighthouse audit that tells the user how they can improve the time to first byte speed metric, in the context of the Wordpress CMS platform. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. */
  'server-response-time': "Themes, plugins, and server specifications all contribute to server response time. Consider finding a more optimized theme, carefully selecting an optimization plugin, and/or upgrading your server.",
};

module.exports = {
  id: 'wordpress',
  title: 'WordPress',
  icon,
  UIStrings,
}


/***/ }),

/***/ 2597:
/***/ ((module) => {

const icon = `data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 294 524"><g fill="none" fill-rule="evenodd"><path fill="url(%23a)" d="M218.617 270.615c-9.752 0-18.896-5.689-23.366-14.63l-7.72-17.27h-76.6l-7.722 17.27c-4.47 8.941-13.613 14.63-23.366 14.63H75.78l32.712 249.306c1.625 4.671 4.673 4.671 6.502 0l32.51-79.648 28.242 79.442c1.625 4.676 4.673 4.676 6.501 0L220.04 270.82l-1.423-.204Z" transform="translate(-1.58 -.2)"/><path fill="url(%23b)" d="M184.47 231.784h-70.3l-10.77 24.179c-3.657 7.314-10.768 12.597-18.489 14.02L109.7 423.791c1.625 2.844 4.673 2.844 6.501 0l31.697-48.155 29.055 47.951c1.829 2.845 4.673 2.845 6.502 0l28.039-154.012c-6.908-2.032-13.004-6.908-16.255-13.613l-10.768-24.18Z" transform="translate(-1.58 -.2)"/><path fill="url(%23c)" d="m195.259 255.988-46.123-103.014-45.92 103.014c-1.625 3.048-3.656 5.69-6.095 7.925l19.1 102.2c1.015 1.423 3.657 1.83 5.485 0l25.601-33.931 25.602 33.728c1.625 2.032 4.47 1.626 5.485 0l21.131-103.42c-1.625-2.032-3.047-4.064-4.266-6.502Z" transform="translate(-1.58 -.2)"/><path fill="%23F56F46" d="M.439 12.559c-1.422-4.877 1.422-8.33 6.299-8.33H47.17c2.845 0 5.486 2.437 6.299 4.876l29.665 116.83h1.422l53.437-121.3c1.016-2.032 3.048-3.86 5.892-3.86h6.299c3.047 0 5.08 1.625 5.892 3.86l53.437 121.3h1.423L240.6 9.105c.61-2.439 3.454-4.877 6.299-4.877h40.433c4.877 0 7.518 3.454 6.299 8.33l-65.221 231.63c-.61 2.845-3.454 4.876-6.298 4.876h-5.487c-2.438 0-4.876-1.625-5.892-3.86l-63.19-141.009h-1.015L83.744 245.203c-1.016 2.032-3.454 3.86-5.892 3.86h-5.486c-2.845 0-5.486-2.031-6.299-4.876L.44 12.559Z"/></g></svg>`;

const UIStrings = {
  /** Additional description of a Lighthouse audit for a third-party framework called 'WP Rocket'. This is displayed after a user expands the section to see more. No character length limits. Remove Unused CSS is a name of the feature */
  'unused-css-rules': `Enable [Remove Unused CSS](https://docs.wp-rocket.me/article/1529-remove-unused-css) in 'WP Rocket' to fix this issue. It reduces page size by removing all CSS and stylesheets that are not used while keeping only the used CSS for each page.`,
  /** Additional description of a Lighthouse audit for a third-party framework called 'WP Rocket'. This is displayed after a user expands the section to see more. No character length limits. `Imagify` is an image optimization add-on */
  'modern-image-formats': `Enable 'Imagify' from the Image Optimization tab in 'WP Rocket' to convert your images to WebP.`,
  /** Additional description of a Lighthouse audit for a third-party framework called 'WP Rocket'. This is displayed after a user expands the section to see more. No character length limits. Delay JavaScript, LazyLoad for iframes and videos and Replace YouTube iframe with preview image are names of the features */
  'unused-javascript': `Enable [Delay JavaScript execution](https://docs.wp-rocket.me/article/1349-delay-javascript-execution) in 'WP Rocket' to fix this problem. It will improve the loading of your page by delaying the execution of scripts until user interaction. If your site has iframes, you can use WP Rocket's [LazyLoad for iframes and videos](https://docs.wp-rocket.me/article/1674-lazyload-for-iframes-and-videos) and [Replace YouTube iframe with preview image](https://docs.wp-rocket.me/article/1488-replace-youtube-iframe-with-preview-image) as well.`,
  /** Additional description of a Lighthouse audit for a third-party framework called 'WP Rocket'. This is displayed after a user expands the section to see more. No character length limits. Remove Unused CSS, Load JavaScript deferred are names of the features */
  'render-blocking-resources': `Enable [Remove Unused CSS](https://docs.wp-rocket.me/article/1529-remove-unused-css) and [Load JavaScript deferred](https://docs.wp-rocket.me/article/1265-load-javascript-deferred) in 'WP Rocket' to address this recommendation. These features will respectively optimize the CSS and JavaScript files so that they don't block the rendering of your page.`,
  /** Additional description of a Lighthouse audit for a third-party framework called 'WP Rocket'. This is displayed after a user expands the section to see more. No character length limits. Minify CSS Files is a name of the feature */
  'unminified-css': `Enable [Minify CSS files](https://docs.wp-rocket.me/article/1350-css-minify-combine) in 'WP Rocket' to fix this issue. Any spaces and comments in your site's CSS files will be removed to make the file size smaller and faster to download.`,
  /** Additional description of a Lighthouse audit for a third-party framework called 'WP Rocket'. This is displayed after a user expands the section to see more. No character length limits. Minify JavaScript Files is a name of the feature */
  'unminified-javascript': `Enable [Minify JavaScript files](https://docs.wp-rocket.me/article/1351-javascript-minify-combine) in 'WP Rocket' to fix this issue. Empty spaces and comments will be removed from JavaScript files to make their size smaller and faster to download.`,
  /** Additional description of a Lighthouse audit for a third-party framework called 'WP Rocket'. This is displayed after a user expands the section to see more. No character length limits. `Imagify` is an image optimization add-on */
  'uses-optimized-images': `Enable 'Imagify' from the Image Optimization tab in 'WP Rocket' and run Bulk Optimization to compress your images.`,
  /** Additional description of a Lighthouse audit for a third-party framework called 'WP Rocket'. This is displayed after a user expands the section to see more. No character length limits. Prefetch DNS Requests, Enable CDN are names of the features */
  'uses-rel-preconnect': `Use [Prefetch DNS Requests](https://docs.wp-rocket.me/article/1302-prefetch-dns-requests) in 'WP Rocket' to add "dns-prefetch" and speed up the connection with external domains. Also, 'WP Rocket' automatically adds "preconnect" to [Google Fonts domain](https://docs.wp-rocket.me/article/1312-optimize-google-fonts) and any CNAME(S) added via the [Enable CDN](https://docs.wp-rocket.me/article/42-using-wp-rocket-with-a-cdn) feature.`,
  /** Additional description of a Lighthouse audit for a third-party framework called 'WP Rocket'. This is displayed after a user expands the section to see more. No character length limits. Remove Unused CSS is a name of the feature*/
  'uses-rel-preload': `To fix this issue for fonts, enable [Remove Unused CSS](https://docs.wp-rocket.me/article/1529-remove-unused-css) in 'WP Rocket'. Your site's critical fonts will be preloaded with priority.`,
  /** Additional description of a Lighthouse audit for a third-party framework called 'WP Rocket'. This is displayed after a user expands the section to see more. No character length limits. LazyLoad for images is a name of the feature*/
  'offscreen-images': `Enable [LazyLoad](https://docs.wp-rocket.me/article/1141-lazyload-for-images) in WP Rocket to fix this recommendation. This feature delays the loading of the images until the visitor scrolls down the page and actually needs to see them.`,
};

module.exports = {
  id: 'wp-rocket',
  title: 'WP Rocket',
  icon,
  UIStrings,
};


/***/ }),

/***/ 1857:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var getNative = __nccwpck_require__(4479),
    root = __nccwpck_require__(9882);

/* Built-in method references that are verified to be native. */
var DataView = getNative(root, 'DataView');

module.exports = DataView;


/***/ }),

/***/ 5902:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var hashClear = __nccwpck_require__(1789),
    hashDelete = __nccwpck_require__(712),
    hashGet = __nccwpck_require__(5395),
    hashHas = __nccwpck_require__(5232),
    hashSet = __nccwpck_require__(7320);

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

module.exports = Hash;


/***/ }),

/***/ 6608:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var listCacheClear = __nccwpck_require__(9792),
    listCacheDelete = __nccwpck_require__(7716),
    listCacheGet = __nccwpck_require__(5789),
    listCacheHas = __nccwpck_require__(9386),
    listCacheSet = __nccwpck_require__(7399);

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

module.exports = ListCache;


/***/ }),

/***/ 881:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var getNative = __nccwpck_require__(4479),
    root = __nccwpck_require__(9882);

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map');

module.exports = Map;


/***/ }),

/***/ 938:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var mapCacheClear = __nccwpck_require__(1610),
    mapCacheDelete = __nccwpck_require__(6657),
    mapCacheGet = __nccwpck_require__(1372),
    mapCacheHas = __nccwpck_require__(609),
    mapCacheSet = __nccwpck_require__(5582);

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

module.exports = MapCache;


/***/ }),

/***/ 4671:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var getNative = __nccwpck_require__(4479),
    root = __nccwpck_require__(9882);

/* Built-in method references that are verified to be native. */
var Promise = getNative(root, 'Promise');

module.exports = Promise;


/***/ }),

/***/ 5793:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var getNative = __nccwpck_require__(4479),
    root = __nccwpck_require__(9882);

/* Built-in method references that are verified to be native. */
var Set = getNative(root, 'Set');

module.exports = Set;


/***/ }),

/***/ 2158:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var MapCache = __nccwpck_require__(938),
    setCacheAdd = __nccwpck_require__(6895),
    setCacheHas = __nccwpck_require__(804);

/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values == null ? 0 : values.length;

  this.__data__ = new MapCache;
  while (++index < length) {
    this.add(values[index]);
  }
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;

module.exports = SetCache;


/***/ }),

/***/ 5323:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var ListCache = __nccwpck_require__(6608),
    stackClear = __nccwpck_require__(2843),
    stackDelete = __nccwpck_require__(4717),
    stackGet = __nccwpck_require__(21),
    stackHas = __nccwpck_require__(3910),
    stackSet = __nccwpck_require__(9955);

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

module.exports = Stack;


/***/ }),

/***/ 9213:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var root = __nccwpck_require__(9882);

/** Built-in value references. */
var Symbol = root.Symbol;

module.exports = Symbol;


/***/ }),

/***/ 3261:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var root = __nccwpck_require__(9882);

/** Built-in value references. */
var Uint8Array = root.Uint8Array;

module.exports = Uint8Array;


/***/ }),

/***/ 3915:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var getNative = __nccwpck_require__(4479),
    root = __nccwpck_require__(9882);

/* Built-in method references that are verified to be native. */
var WeakMap = getNative(root, 'WeakMap');

module.exports = WeakMap;


/***/ }),

/***/ 8388:
/***/ ((module) => {

/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

module.exports = arrayFilter;


/***/ }),

/***/ 2237:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var baseTimes = __nccwpck_require__(7765),
    isArguments = __nccwpck_require__(8495),
    isArray = __nccwpck_require__(4869),
    isBuffer = __nccwpck_require__(4190),
    isIndex = __nccwpck_require__(2936),
    isTypedArray = __nccwpck_require__(2496);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = arrayLikeKeys;


/***/ }),

/***/ 82:
/***/ ((module) => {

/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

module.exports = arrayPush;


/***/ }),

/***/ 9410:
/***/ ((module) => {

/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function arraySome(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}

module.exports = arraySome;


/***/ }),

/***/ 6752:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var eq = __nccwpck_require__(1901);

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

module.exports = assocIndexOf;


/***/ }),

/***/ 5951:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var arrayPush = __nccwpck_require__(82),
    isArray = __nccwpck_require__(4869);

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

module.exports = baseGetAllKeys;


/***/ }),

/***/ 7497:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var Symbol = __nccwpck_require__(9213),
    getRawTag = __nccwpck_require__(923),
    objectToString = __nccwpck_require__(4200);

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

module.exports = baseGetTag;


/***/ }),

/***/ 2177:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var baseGetTag = __nccwpck_require__(7497),
    isObjectLike = __nccwpck_require__(5926);

/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

module.exports = baseIsArguments;


/***/ }),

/***/ 8494:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var baseIsEqualDeep = __nccwpck_require__(3987),
    isObjectLike = __nccwpck_require__(5926);

/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}

module.exports = baseIsEqual;


/***/ }),

/***/ 3987:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var Stack = __nccwpck_require__(5323),
    equalArrays = __nccwpck_require__(6305),
    equalByTag = __nccwpck_require__(9106),
    equalObjects = __nccwpck_require__(101),
    getTag = __nccwpck_require__(941),
    isArray = __nccwpck_require__(4869),
    isBuffer = __nccwpck_require__(4190),
    isTypedArray = __nccwpck_require__(2496);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    objectTag = '[object Object]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray(object),
      othIsArr = isArray(other),
      objTag = objIsArr ? arrayTag : getTag(object),
      othTag = othIsArr ? arrayTag : getTag(other);

  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;

  var objIsObj = objTag == objectTag,
      othIsObj = othTag == objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && isBuffer(object)) {
    if (!isBuffer(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack);
    return (objIsArr || isTypedArray(object))
      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;

      stack || (stack = new Stack);
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack);
  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}

module.exports = baseIsEqualDeep;


/***/ }),

/***/ 411:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var isFunction = __nccwpck_require__(7799),
    isMasked = __nccwpck_require__(9058),
    isObject = __nccwpck_require__(3334),
    toSource = __nccwpck_require__(6928);

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

module.exports = baseIsNative;


/***/ }),

/***/ 1528:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var baseGetTag = __nccwpck_require__(7497),
    isLength = __nccwpck_require__(4530),
    isObjectLike = __nccwpck_require__(5926);

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike(value) &&
    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

module.exports = baseIsTypedArray;


/***/ }),

/***/ 7164:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var isPrototype = __nccwpck_require__(10),
    nativeKeys = __nccwpck_require__(5778);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeys;


/***/ }),

/***/ 7765:
/***/ ((module) => {

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

module.exports = baseTimes;


/***/ }),

/***/ 9258:
/***/ ((module) => {

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

module.exports = baseUnary;


/***/ }),

/***/ 2675:
/***/ ((module) => {

/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

module.exports = cacheHas;


/***/ }),

/***/ 8380:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var root = __nccwpck_require__(9882);

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

module.exports = coreJsData;


/***/ }),

/***/ 6305:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var SetCache = __nccwpck_require__(2158),
    arraySome = __nccwpck_require__(9410),
    cacheHas = __nccwpck_require__(2675);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  // Check that cyclic values are equal.
  var arrStacked = stack.get(array);
  var othStacked = stack.get(other);
  if (arrStacked && othStacked) {
    return arrStacked == other && othStacked == array;
  }
  var index = -1,
      result = true,
      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

  stack.set(array, other);
  stack.set(other, array);

  // Ignore non-index properties.
  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, arrValue, index, other, array, stack)
        : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    // Recursively compare arrays (susceptible to call stack limits).
    if (seen) {
      if (!arraySome(other, function(othValue, othIndex) {
            if (!cacheHas(seen, othIndex) &&
                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
        result = false;
        break;
      }
    } else if (!(
          arrValue === othValue ||
            equalFunc(arrValue, othValue, bitmask, customizer, stack)
        )) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}

module.exports = equalArrays;


/***/ }),

/***/ 9106:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var Symbol = __nccwpck_require__(9213),
    Uint8Array = __nccwpck_require__(3261),
    eq = __nccwpck_require__(1901),
    equalArrays = __nccwpck_require__(6305),
    mapToArray = __nccwpck_require__(5853),
    setToArray = __nccwpck_require__(9553);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]';

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if ((object.byteLength != other.byteLength) ||
          (object.byteOffset != other.byteOffset)) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag:
      if ((object.byteLength != other.byteLength) ||
          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
        return false;
      }
      return true;

    case boolTag:
    case dateTag:
    case numberTag:
      // Coerce booleans to `1` or `0` and dates to milliseconds.
      // Invalid dates are coerced to `NaN`.
      return eq(+object, +other);

    case errorTag:
      return object.name == other.name && object.message == other.message;

    case regexpTag:
    case stringTag:
      // Coerce regexes to strings and treat strings, primitives and objects,
      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
      // for more details.
      return object == (other + '');

    case mapTag:
      var convert = mapToArray;

    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
      convert || (convert = setToArray);

      if (object.size != other.size && !isPartial) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG;

      // Recursively compare objects (susceptible to call stack limits).
      stack.set(object, other);
      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}

module.exports = equalByTag;


/***/ }),

/***/ 101:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var getAllKeys = __nccwpck_require__(8009);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      objProps = getAllKeys(object),
      objLength = objProps.length,
      othProps = getAllKeys(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
      return false;
    }
  }
  // Check that cyclic values are equal.
  var objStacked = stack.get(object);
  var othStacked = stack.get(other);
  if (objStacked && othStacked) {
    return objStacked == other && othStacked == object;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);

  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, objValue, key, other, object, stack)
        : customizer(objValue, othValue, key, object, other, stack);
    }
    // Recursively compare objects (susceptible to call stack limits).
    if (!(compared === undefined
          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
          : compared
        )) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor;

    // Non `Object` object instances with different constructors are not equal.
    if (objCtor != othCtor &&
        ('constructor' in object && 'constructor' in other) &&
        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}

module.exports = equalObjects;


/***/ }),

/***/ 2085:
/***/ ((module) => {

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;


/***/ }),

/***/ 8009:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var baseGetAllKeys = __nccwpck_require__(5951),
    getSymbols = __nccwpck_require__(6802),
    keys = __nccwpck_require__(7645);

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}

module.exports = getAllKeys;


/***/ }),

/***/ 9980:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var isKeyable = __nccwpck_require__(3308);

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

module.exports = getMapData;


/***/ }),

/***/ 4479:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var baseIsNative = __nccwpck_require__(411),
    getValue = __nccwpck_require__(3542);

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

module.exports = getNative;


/***/ }),

/***/ 923:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var Symbol = __nccwpck_require__(9213);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;


/***/ }),

/***/ 6802:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var arrayFilter = __nccwpck_require__(8388),
    stubArray = __nccwpck_require__(8634);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};

module.exports = getSymbols;


/***/ }),

/***/ 941:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var DataView = __nccwpck_require__(1857),
    Map = __nccwpck_require__(881),
    Promise = __nccwpck_require__(4671),
    Set = __nccwpck_require__(5793),
    WeakMap = __nccwpck_require__(3915),
    baseGetTag = __nccwpck_require__(7497),
    toSource = __nccwpck_require__(6928);

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';

var dataViewTag = '[object DataView]';

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (Map && getTag(new Map) != mapTag) ||
    (Promise && getTag(Promise.resolve()) != promiseTag) ||
    (Set && getTag(new Set) != setTag) ||
    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = baseGetTag(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

module.exports = getTag;


/***/ }),

/***/ 3542:
/***/ ((module) => {

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

module.exports = getValue;


/***/ }),

/***/ 1789:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var nativeCreate = __nccwpck_require__(3041);

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

module.exports = hashClear;


/***/ }),

/***/ 712:
/***/ ((module) => {

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = hashDelete;


/***/ }),

/***/ 5395:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var nativeCreate = __nccwpck_require__(3041);

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

module.exports = hashGet;


/***/ }),

/***/ 5232:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var nativeCreate = __nccwpck_require__(3041);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
}

module.exports = hashHas;


/***/ }),

/***/ 7320:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var nativeCreate = __nccwpck_require__(3041);

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

module.exports = hashSet;


/***/ }),

/***/ 2936:
/***/ ((module) => {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

module.exports = isIndex;


/***/ }),

/***/ 3308:
/***/ ((module) => {

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

module.exports = isKeyable;


/***/ }),

/***/ 9058:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var coreJsData = __nccwpck_require__(8380);

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

module.exports = isMasked;


/***/ }),

/***/ 10:
/***/ ((module) => {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

module.exports = isPrototype;


/***/ }),

/***/ 9792:
/***/ ((module) => {

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

module.exports = listCacheClear;


/***/ }),

/***/ 7716:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var assocIndexOf = __nccwpck_require__(6752);

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

module.exports = listCacheDelete;


/***/ }),

/***/ 5789:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var assocIndexOf = __nccwpck_require__(6752);

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

module.exports = listCacheGet;


/***/ }),

/***/ 9386:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var assocIndexOf = __nccwpck_require__(6752);

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

module.exports = listCacheHas;


/***/ }),

/***/ 7399:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var assocIndexOf = __nccwpck_require__(6752);

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

module.exports = listCacheSet;


/***/ }),

/***/ 1610:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var Hash = __nccwpck_require__(5902),
    ListCache = __nccwpck_require__(6608),
    Map = __nccwpck_require__(881);

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

module.exports = mapCacheClear;


/***/ }),

/***/ 6657:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var getMapData = __nccwpck_require__(9980);

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = mapCacheDelete;


/***/ }),

/***/ 1372:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var getMapData = __nccwpck_require__(9980);

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

module.exports = mapCacheGet;


/***/ }),

/***/ 609:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var getMapData = __nccwpck_require__(9980);

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

module.exports = mapCacheHas;


/***/ }),

/***/ 5582:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var getMapData = __nccwpck_require__(9980);

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

module.exports = mapCacheSet;


/***/ }),

/***/ 5853:
/***/ ((module) => {

/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}

module.exports = mapToArray;


/***/ }),

/***/ 3041:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var getNative = __nccwpck_require__(4479);

/* Built-in method references that are verified to be native. */
var nativeCreate = getNative(Object, 'create');

module.exports = nativeCreate;


/***/ }),

/***/ 5778:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var overArg = __nccwpck_require__(6320);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = overArg(Object.keys, Object);

module.exports = nativeKeys;


/***/ }),

/***/ 4643:
/***/ ((module, exports, __nccwpck_require__) => {

/* module decorator */ module = __nccwpck_require__.nmd(module);
var freeGlobal = __nccwpck_require__(2085);

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && "object" == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

module.exports = nodeUtil;


/***/ }),

/***/ 4200:
/***/ ((module) => {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;


/***/ }),

/***/ 6320:
/***/ ((module) => {

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

module.exports = overArg;


/***/ }),

/***/ 9882:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var freeGlobal = __nccwpck_require__(2085);

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;


/***/ }),

/***/ 6895:
/***/ ((module) => {

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

module.exports = setCacheAdd;


/***/ }),

/***/ 804:
/***/ ((module) => {

/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

module.exports = setCacheHas;


/***/ }),

/***/ 9553:
/***/ ((module) => {

/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

module.exports = setToArray;


/***/ }),

/***/ 2843:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var ListCache = __nccwpck_require__(6608);

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache;
  this.size = 0;
}

module.exports = stackClear;


/***/ }),

/***/ 4717:
/***/ ((module) => {

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

module.exports = stackDelete;


/***/ }),

/***/ 21:
/***/ ((module) => {

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

module.exports = stackGet;


/***/ }),

/***/ 3910:
/***/ ((module) => {

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

module.exports = stackHas;


/***/ }),

/***/ 9955:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var ListCache = __nccwpck_require__(6608),
    Map = __nccwpck_require__(881),
    MapCache = __nccwpck_require__(938);

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache) {
    var pairs = data.__data__;
    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

module.exports = stackSet;


/***/ }),

/***/ 6928:
/***/ ((module) => {

/** Used for built-in method references. */
var funcProto = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

module.exports = toSource;


/***/ }),

/***/ 1901:
/***/ ((module) => {

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

module.exports = eq;


/***/ }),

/***/ 8495:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var baseIsArguments = __nccwpck_require__(2177),
    isObjectLike = __nccwpck_require__(5926);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

module.exports = isArguments;


/***/ }),

/***/ 4869:
/***/ ((module) => {

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

module.exports = isArray;


/***/ }),

/***/ 8017:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var isFunction = __nccwpck_require__(7799),
    isLength = __nccwpck_require__(4530);

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

module.exports = isArrayLike;


/***/ }),

/***/ 4190:
/***/ ((module, exports, __nccwpck_require__) => {

/* module decorator */ module = __nccwpck_require__.nmd(module);
var root = __nccwpck_require__(9882),
    stubFalse = __nccwpck_require__(7744);

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && "object" == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

module.exports = isBuffer;


/***/ }),

/***/ 52:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var baseIsEqual = __nccwpck_require__(8494);

/**
 * Performs a deep comparison between two values to determine if they are
 * equivalent.
 *
 * **Note:** This method supports comparing arrays, array buffers, booleans,
 * date objects, error objects, maps, numbers, `Object` objects, regexes,
 * sets, strings, symbols, and typed arrays. `Object` objects are compared
 * by their own, not inherited, enumerable properties. Functions and DOM
 * nodes are compared by strict equality, i.e. `===`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.isEqual(object, other);
 * // => true
 *
 * object === other;
 * // => false
 */
function isEqual(value, other) {
  return baseIsEqual(value, other);
}

module.exports = isEqual;


/***/ }),

/***/ 7799:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var baseGetTag = __nccwpck_require__(7497),
    isObject = __nccwpck_require__(3334);

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

module.exports = isFunction;


/***/ }),

/***/ 4530:
/***/ ((module) => {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

module.exports = isLength;


/***/ }),

/***/ 3334:
/***/ ((module) => {

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;


/***/ }),

/***/ 5926:
/***/ ((module) => {

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;


/***/ }),

/***/ 2496:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var baseIsTypedArray = __nccwpck_require__(1528),
    baseUnary = __nccwpck_require__(9258),
    nodeUtil = __nccwpck_require__(4643);

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

module.exports = isTypedArray;


/***/ }),

/***/ 7645:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var arrayLikeKeys = __nccwpck_require__(2237),
    baseKeys = __nccwpck_require__(7164),
    isArrayLike = __nccwpck_require__(8017);

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

module.exports = keys;


/***/ }),

/***/ 8634:
/***/ ((module) => {

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

module.exports = stubArray;


/***/ }),

/***/ 7744:
/***/ ((module) => {

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = stubFalse;


/***/ }),

/***/ 7489:
/***/ ((module) => {

// @flow
// "lookup" algorithm http://tools.ietf.org/html/rfc4647#section-3.4
// assumes normalized language tags, and matches in a case sensitive manner
module.exports = function lookupClosestLocale (locale/*: string | string[] | void */, available/*: { [string]: any } */)/*: ?string */ {
  if (typeof locale === 'string' && available[locale]) return locale
  var locales = [].concat(locale || [])
  for (var l = 0, ll = locales.length; l < ll; ++l) {
    var current = locales[l].split('-')
    while (current.length) {
      var candidate = current.join('-')
      if (available[candidate]) return candidate
      current.pop()
    }
  }
}


/***/ }),

/***/ 4098:
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({ value: true }));

/* global performance */
var perf = typeof performance !== 'undefined' && performance;

var nowPolyfillForNode;

{
  // implementation borrowed from:
  // https://github.com/myrne/performance-now/blob/6223a0d544bae1d5578dd7431f78b4ec7d65b15c/src/performance-now.coffee
  var hrtime = process.hrtime;
  var getNanoSeconds = function () {
    var hr = hrtime();
    return hr[0] * 1e9 + hr[1]
  };
  var loadTime = getNanoSeconds();
  nowPolyfillForNode = function () { return ((getNanoSeconds() - loadTime) / 1e6); };
}

var now = perf && perf.now
  ? function () { return perf.now(); }
  : nowPolyfillForNode;

function throwIfEmpty (name) {
  if (!name) {
    throw new Error('name must be non-empty')
  }
}

// simple binary sort insertion
function insertSorted (arr, item) {
  var low = 0;
  var high = arr.length;
  var mid;
  while (low < high) {
    mid = (low + high) >>> 1; // like (num / 2) but faster
    if (arr[mid].startTime < item.startTime) {
      low = mid + 1;
    } else {
      high = mid;
    }
  }
  arr.splice(low, 0, item);
}

exports.mark = void 0;
exports.stop = void 0;
exports.getEntries = void 0;
exports.clear = void 0;

if (
  perf &&
  perf.mark &&
  perf.measure &&
  perf.getEntriesByName &&
  perf.getEntriesByType &&
  perf.clearMarks &&
  perf.clearMeasures &&
  // In Node, we want to detect that this perf/correctness fix [1] is available, which
  // landed in Node 16.15.0, 17.6.0, and 18.0.0. However, it's not observable, and
  // we don't want to rely on fragile version checks.
  // So we can rely on this observable change [2] to add clearResourceTimings, which
  // landed a bit later (18.2.0), but is close enough for our purposes.
  // [1]: https://github.com/nodejs/node/pull/42032
  // [2]: https://github.com/nodejs/node/pull/42725
  (perf.clearResourceTimings)
) {
  exports.mark = function (name) {
    throwIfEmpty(name);
    perf.mark(("start " + name));
  };
  exports.stop = function (name) {
    throwIfEmpty(name);
    perf.mark(("end " + name));
    var measure = perf.measure(name, ("start " + name), ("end " + name));
    if (measure) {
      // return value from performance.measure not supported in all browsers
      // https://developer.mozilla.org/en-US/docs/Web/API/Performance/measure#browser_compatibility
      return measure
    }
    var entries = perf.getEntriesByName(name);
    return entries[entries.length - 1]
  };
  exports.getEntries = function () { return perf.getEntriesByType('measure'); };
  exports.clear = function () {
    perf.clearMarks();
    perf.clearMeasures();
  };
} else {
  var marks = {};
  var entries = [];
  exports.mark = function (name) {
    throwIfEmpty(name);
    var startTime = now();
    marks['$' + name] = startTime;
  };
  exports.stop = function (name) {
    throwIfEmpty(name);
    var endTime = now();
    var startTime = marks['$' + name];
    if (!startTime) {
      throw new Error(("no known mark: " + name))
    }
    var entry = {
      startTime: startTime,
      name: name,
      duration: endTime - startTime,
      entryType: 'measure'
    };
    // per the spec this should be at least 150:
    // https://www.w3.org/TR/resource-timing-1/#extensions-performance-interface
    // we just have no limit, per Chrome and Edge's de-facto behavior
    insertSorted(entries, entry);
    return entry
  };
  exports.getEntries = function () { return entries; };
  exports.clear = function () {
    marks = {};
    entries = [];
  };
}


/***/ }),

/***/ 3973:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = minimatch
minimatch.Minimatch = Minimatch

var path = (function () { try { return __nccwpck_require__(1017) } catch (e) {}}()) || {
  sep: '/'
}
minimatch.sep = path.sep

var GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}
var expand = __nccwpck_require__(3717)

var plTypes = {
  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},
  '?': { open: '(?:', close: ')?' },
  '+': { open: '(?:', close: ')+' },
  '*': { open: '(?:', close: ')*' },
  '@': { open: '(?:', close: ')' }
}

// any single thing other than /
// don't need to escape / when using new RegExp()
var qmark = '[^/]'

// * => any number of characters
var star = qmark + '*?'

// ** when dots are allowed.  Anything goes, except .. and .
// not (^ or / followed by one or two dots followed by $ or /),
// followed by anything, any number of times.
var twoStarDot = '(?:(?!(?:\\\/|^)(?:\\.{1,2})($|\\\/)).)*?'

// not a ^ or / followed by a dot,
// followed by anything, any number of times.
var twoStarNoDot = '(?:(?!(?:\\\/|^)\\.).)*?'

// characters that need to be escaped in RegExp.
var reSpecials = charSet('().*{}+?[]^$\\!')

// "abc" -> { a:true, b:true, c:true }
function charSet (s) {
  return s.split('').reduce(function (set, c) {
    set[c] = true
    return set
  }, {})
}

// normalizes slashes.
var slashSplit = /\/+/

minimatch.filter = filter
function filter (pattern, options) {
  options = options || {}
  return function (p, i, list) {
    return minimatch(p, pattern, options)
  }
}

function ext (a, b) {
  b = b || {}
  var t = {}
  Object.keys(a).forEach(function (k) {
    t[k] = a[k]
  })
  Object.keys(b).forEach(function (k) {
    t[k] = b[k]
  })
  return t
}

minimatch.defaults = function (def) {
  if (!def || typeof def !== 'object' || !Object.keys(def).length) {
    return minimatch
  }

  var orig = minimatch

  var m = function minimatch (p, pattern, options) {
    return orig(p, pattern, ext(def, options))
  }

  m.Minimatch = function Minimatch (pattern, options) {
    return new orig.Minimatch(pattern, ext(def, options))
  }
  m.Minimatch.defaults = function defaults (options) {
    return orig.defaults(ext(def, options)).Minimatch
  }

  m.filter = function filter (pattern, options) {
    return orig.filter(pattern, ext(def, options))
  }

  m.defaults = function defaults (options) {
    return orig.defaults(ext(def, options))
  }

  m.makeRe = function makeRe (pattern, options) {
    return orig.makeRe(pattern, ext(def, options))
  }

  m.braceExpand = function braceExpand (pattern, options) {
    return orig.braceExpand(pattern, ext(def, options))
  }

  m.match = function (list, pattern, options) {
    return orig.match(list, pattern, ext(def, options))
  }

  return m
}

Minimatch.defaults = function (def) {
  return minimatch.defaults(def).Minimatch
}

function minimatch (p, pattern, options) {
  assertValidPattern(pattern)

  if (!options) options = {}

  // shortcut: comments match nothing.
  if (!options.nocomment && pattern.charAt(0) === '#') {
    return false
  }

  return new Minimatch(pattern, options).match(p)
}

function Minimatch (pattern, options) {
  if (!(this instanceof Minimatch)) {
    return new Minimatch(pattern, options)
  }

  assertValidPattern(pattern)

  if (!options) options = {}

  pattern = pattern.trim()

  // windows support: need to use /, not \
  if (!options.allowWindowsEscape && path.sep !== '/') {
    pattern = pattern.split(path.sep).join('/')
  }

  this.options = options
  this.set = []
  this.pattern = pattern
  this.regexp = null
  this.negate = false
  this.comment = false
  this.empty = false
  this.partial = !!options.partial

  // make the set of regexps etc.
  this.make()
}

Minimatch.prototype.debug = function () {}

Minimatch.prototype.make = make
function make () {
  var pattern = this.pattern
  var options = this.options

  // empty patterns and comments match nothing.
  if (!options.nocomment && pattern.charAt(0) === '#') {
    this.comment = true
    return
  }
  if (!pattern) {
    this.empty = true
    return
  }

  // step 1: figure out negation, etc.
  this.parseNegate()

  // step 2: expand braces
  var set = this.globSet = this.braceExpand()

  if (options.debug) this.debug = function debug() { console.error.apply(console, arguments) }

  this.debug(this.pattern, set)

  // step 3: now we have a set, so turn each one into a series of path-portion
  // matching patterns.
  // These will be regexps, except in the case of "**", which is
  // set to the GLOBSTAR object for globstar behavior,
  // and will not contain any / characters
  set = this.globParts = set.map(function (s) {
    return s.split(slashSplit)
  })

  this.debug(this.pattern, set)

  // glob --> regexps
  set = set.map(function (s, si, set) {
    return s.map(this.parse, this)
  }, this)

  this.debug(this.pattern, set)

  // filter out everything that didn't compile properly.
  set = set.filter(function (s) {
    return s.indexOf(false) === -1
  })

  this.debug(this.pattern, set)

  this.set = set
}

Minimatch.prototype.parseNegate = parseNegate
function parseNegate () {
  var pattern = this.pattern
  var negate = false
  var options = this.options
  var negateOffset = 0

  if (options.nonegate) return

  for (var i = 0, l = pattern.length
    ; i < l && pattern.charAt(i) === '!'
    ; i++) {
    negate = !negate
    negateOffset++
  }

  if (negateOffset) this.pattern = pattern.substr(negateOffset)
  this.negate = negate
}

// Brace expansion:
// a{b,c}d -> abd acd
// a{b,}c -> abc ac
// a{0..3}d -> a0d a1d a2d a3d
// a{b,c{d,e}f}g -> abg acdfg acefg
// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg
//
// Invalid sets are not expanded.
// a{2..}b -> a{2..}b
// a{b}c -> a{b}c
minimatch.braceExpand = function (pattern, options) {
  return braceExpand(pattern, options)
}

Minimatch.prototype.braceExpand = braceExpand

function braceExpand (pattern, options) {
  if (!options) {
    if (this instanceof Minimatch) {
      options = this.options
    } else {
      options = {}
    }
  }

  pattern = typeof pattern === 'undefined'
    ? this.pattern : pattern

  assertValidPattern(pattern)

  // Thanks to Yeting Li <https://github.com/yetingli> for
  // improving this regexp to avoid a ReDOS vulnerability.
  if (options.nobrace || !/\{(?:(?!\{).)*\}/.test(pattern)) {
    // shortcut. no need to expand.
    return [pattern]
  }

  return expand(pattern)
}

var MAX_PATTERN_LENGTH = 1024 * 64
var assertValidPattern = function (pattern) {
  if (typeof pattern !== 'string') {
    throw new TypeError('invalid pattern')
  }

  if (pattern.length > MAX_PATTERN_LENGTH) {
    throw new TypeError('pattern is too long')
  }
}

// parse a component of the expanded set.
// At this point, no pattern may contain "/" in it
// so we're going to return a 2d array, where each entry is the full
// pattern, split on '/', and then turned into a regular expression.
// A regexp is made at the end which joins each array with an
// escaped /, and another full one which joins each regexp with |.
//
// Following the lead of Bash 4.1, note that "**" only has special meaning
// when it is the *only* thing in a path portion.  Otherwise, any series
// of * is equivalent to a single *.  Globstar behavior is enabled by
// default, and can be disabled by setting options.noglobstar.
Minimatch.prototype.parse = parse
var SUBPARSE = {}
function parse (pattern, isSub) {
  assertValidPattern(pattern)

  var options = this.options

  // shortcuts
  if (pattern === '**') {
    if (!options.noglobstar)
      return GLOBSTAR
    else
      pattern = '*'
  }
  if (pattern === '') return ''

  var re = ''
  var hasMagic = !!options.nocase
  var escaping = false
  // ? => one single character
  var patternListStack = []
  var negativeLists = []
  var stateChar
  var inClass = false
  var reClassStart = -1
  var classStart = -1
  // . and .. never match anything that doesn't start with .,
  // even when options.dot is set.
  var patternStart = pattern.charAt(0) === '.' ? '' // anything
  // not (start or / followed by . or .. followed by / or end)
  : options.dot ? '(?!(?:^|\\\/)\\.{1,2}(?:$|\\\/))'
  : '(?!\\.)'
  var self = this

  function clearStateChar () {
    if (stateChar) {
      // we had some state-tracking character
      // that wasn't consumed by this pass.
      switch (stateChar) {
        case '*':
          re += star
          hasMagic = true
        break
        case '?':
          re += qmark
          hasMagic = true
        break
        default:
          re += '\\' + stateChar
        break
      }
      self.debug('clearStateChar %j %j', stateChar, re)
      stateChar = false
    }
  }

  for (var i = 0, len = pattern.length, c
    ; (i < len) && (c = pattern.charAt(i))
    ; i++) {
    this.debug('%s\t%s %s %j', pattern, i, re, c)

    // skip over any that are escaped.
    if (escaping && reSpecials[c]) {
      re += '\\' + c
      escaping = false
      continue
    }

    switch (c) {
      /* istanbul ignore next */
      case '/': {
        // completely not allowed, even escaped.
        // Should already be path-split by now.
        return false
      }

      case '\\':
        clearStateChar()
        escaping = true
      continue

      // the various stateChar values
      // for the "extglob" stuff.
      case '?':
      case '*':
      case '+':
      case '@':
      case '!':
        this.debug('%s\t%s %s %j <-- stateChar', pattern, i, re, c)

        // all of those are literals inside a class, except that
        // the glob [!a] means [^a] in regexp
        if (inClass) {
          this.debug('  in class')
          if (c === '!' && i === classStart + 1) c = '^'
          re += c
          continue
        }

        // if we already have a stateChar, then it means
        // that there was something like ** or +? in there.
        // Handle the stateChar, then proceed with this one.
        self.debug('call clearStateChar %j', stateChar)
        clearStateChar()
        stateChar = c
        // if extglob is disabled, then +(asdf|foo) isn't a thing.
        // just clear the statechar *now*, rather than even diving into
        // the patternList stuff.
        if (options.noext) clearStateChar()
      continue

      case '(':
        if (inClass) {
          re += '('
          continue
        }

        if (!stateChar) {
          re += '\\('
          continue
        }

        patternListStack.push({
          type: stateChar,
          start: i - 1,
          reStart: re.length,
          open: plTypes[stateChar].open,
          close: plTypes[stateChar].close
        })
        // negation is (?:(?!js)[^/]*)
        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'
        this.debug('plType %j %j', stateChar, re)
        stateChar = false
      continue

      case ')':
        if (inClass || !patternListStack.length) {
          re += '\\)'
          continue
        }

        clearStateChar()
        hasMagic = true
        var pl = patternListStack.pop()
        // negation is (?:(?!js)[^/]*)
        // The others are (?:<pattern>)<type>
        re += pl.close
        if (pl.type === '!') {
          negativeLists.push(pl)
        }
        pl.reEnd = re.length
      continue

      case '|':
        if (inClass || !patternListStack.length || escaping) {
          re += '\\|'
          escaping = false
          continue
        }

        clearStateChar()
        re += '|'
      continue

      // these are mostly the same in regexp and glob
      case '[':
        // swallow any state-tracking char before the [
        clearStateChar()

        if (inClass) {
          re += '\\' + c
          continue
        }

        inClass = true
        classStart = i
        reClassStart = re.length
        re += c
      continue

      case ']':
        //  a right bracket shall lose its special
        //  meaning and represent itself in
        //  a bracket expression if it occurs
        //  first in the list.  -- POSIX.2 2.8.3.2
        if (i === classStart + 1 || !inClass) {
          re += '\\' + c
          escaping = false
          continue
        }

        // handle the case where we left a class open.
        // "[z-a]" is valid, equivalent to "\[z-a\]"
        // split where the last [ was, make sure we don't have
        // an invalid re. if so, re-walk the contents of the
        // would-be class to re-translate any characters that
        // were passed through as-is
        // TODO: It would probably be faster to determine this
        // without a try/catch and a new RegExp, but it's tricky
        // to do safely.  For now, this is safe and works.
        var cs = pattern.substring(classStart + 1, i)
        try {
          RegExp('[' + cs + ']')
        } catch (er) {
          // not a valid class!
          var sp = this.parse(cs, SUBPARSE)
          re = re.substr(0, reClassStart) + '\\[' + sp[0] + '\\]'
          hasMagic = hasMagic || sp[1]
          inClass = false
          continue
        }

        // finish up the class.
        hasMagic = true
        inClass = false
        re += c
      continue

      default:
        // swallow any state char that wasn't consumed
        clearStateChar()

        if (escaping) {
          // no need
          escaping = false
        } else if (reSpecials[c]
          && !(c === '^' && inClass)) {
          re += '\\'
        }

        re += c

    } // switch
  } // for

  // handle the case where we left a class open.
  // "[abc" is valid, equivalent to "\[abc"
  if (inClass) {
    // split where the last [ was, and escape it
    // this is a huge pita.  We now have to re-walk
    // the contents of the would-be class to re-translate
    // any characters that were passed through as-is
    cs = pattern.substr(classStart + 1)
    sp = this.parse(cs, SUBPARSE)
    re = re.substr(0, reClassStart) + '\\[' + sp[0]
    hasMagic = hasMagic || sp[1]
  }

  // handle the case where we had a +( thing at the *end*
  // of the pattern.
  // each pattern list stack adds 3 chars, and we need to go through
  // and escape any | chars that were passed through as-is for the regexp.
  // Go through and escape them, taking care not to double-escape any
  // | chars that were already escaped.
  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {
    var tail = re.slice(pl.reStart + pl.open.length)
    this.debug('setting tail', re, pl)
    // maybe some even number of \, then maybe 1 \, followed by a |
    tail = tail.replace(/((?:\\{2}){0,64})(\\?)\|/g, function (_, $1, $2) {
      if (!$2) {
        // the | isn't already escaped, so escape it.
        $2 = '\\'
      }

      // need to escape all those slashes *again*, without escaping the
      // one that we need for escaping the | character.  As it works out,
      // escaping an even number of slashes can be done by simply repeating
      // it exactly after itself.  That's why this trick works.
      //
      // I am sorry that you have to see this.
      return $1 + $1 + $2 + '|'
    })

    this.debug('tail=%j\n   %s', tail, tail, pl, re)
    var t = pl.type === '*' ? star
      : pl.type === '?' ? qmark
      : '\\' + pl.type

    hasMagic = true
    re = re.slice(0, pl.reStart) + t + '\\(' + tail
  }

  // handle trailing things that only matter at the very end.
  clearStateChar()
  if (escaping) {
    // trailing \\
    re += '\\\\'
  }

  // only need to apply the nodot start if the re starts with
  // something that could conceivably capture a dot
  var addPatternStart = false
  switch (re.charAt(0)) {
    case '[': case '.': case '(': addPatternStart = true
  }

  // Hack to work around lack of negative lookbehind in JS
  // A pattern like: *.!(x).!(y|z) needs to ensure that a name
  // like 'a.xyz.yz' doesn't match.  So, the first negative
  // lookahead, has to look ALL the way ahead, to the end of
  // the pattern.
  for (var n = negativeLists.length - 1; n > -1; n--) {
    var nl = negativeLists[n]

    var nlBefore = re.slice(0, nl.reStart)
    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)
    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)
    var nlAfter = re.slice(nl.reEnd)

    nlLast += nlAfter

    // Handle nested stuff like *(*.js|!(*.json)), where open parens
    // mean that we should *not* include the ) in the bit that is considered
    // "after" the negated section.
    var openParensBefore = nlBefore.split('(').length - 1
    var cleanAfter = nlAfter
    for (i = 0; i < openParensBefore; i++) {
      cleanAfter = cleanAfter.replace(/\)[+*?]?/, '')
    }
    nlAfter = cleanAfter

    var dollar = ''
    if (nlAfter === '' && isSub !== SUBPARSE) {
      dollar = '$'
    }
    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast
    re = newRe
  }

  // if the re is not "" at this point, then we need to make sure
  // it doesn't match against an empty path part.
  // Otherwise a/* will match a/, which it should not.
  if (re !== '' && hasMagic) {
    re = '(?=.)' + re
  }

  if (addPatternStart) {
    re = patternStart + re
  }

  // parsing just a piece of a larger pattern.
  if (isSub === SUBPARSE) {
    return [re, hasMagic]
  }

  // skip the regexp for non-magical patterns
  // unescape anything in it, though, so that it'll be
  // an exact match against a file etc.
  if (!hasMagic) {
    return globUnescape(pattern)
  }

  var flags = options.nocase ? 'i' : ''
  try {
    var regExp = new RegExp('^' + re + '$', flags)
  } catch (er) /* istanbul ignore next - should be impossible */ {
    // If it was an invalid regular expression, then it can't match
    // anything.  This trick looks for a character after the end of
    // the string, which is of course impossible, except in multi-line
    // mode, but it's not a /m regex.
    return new RegExp('$.')
  }

  regExp._glob = pattern
  regExp._src = re

  return regExp
}

minimatch.makeRe = function (pattern, options) {
  return new Minimatch(pattern, options || {}).makeRe()
}

Minimatch.prototype.makeRe = makeRe
function makeRe () {
  if (this.regexp || this.regexp === false) return this.regexp

  // at this point, this.set is a 2d array of partial
  // pattern strings, or "**".
  //
  // It's better to use .match().  This function shouldn't
  // be used, really, but it's pretty convenient sometimes,
  // when you just want to work with a regex.
  var set = this.set

  if (!set.length) {
    this.regexp = false
    return this.regexp
  }
  var options = this.options

  var twoStar = options.noglobstar ? star
    : options.dot ? twoStarDot
    : twoStarNoDot
  var flags = options.nocase ? 'i' : ''

  var re = set.map(function (pattern) {
    return pattern.map(function (p) {
      return (p === GLOBSTAR) ? twoStar
      : (typeof p === 'string') ? regExpEscape(p)
      : p._src
    }).join('\\\/')
  }).join('|')

  // must match entire pattern
  // ending in a * or ** will make it less strict.
  re = '^(?:' + re + ')$'

  // can match anything, as long as it's not this.
  if (this.negate) re = '^(?!' + re + ').*$'

  try {
    this.regexp = new RegExp(re, flags)
  } catch (ex) /* istanbul ignore next - should be impossible */ {
    this.regexp = false
  }
  return this.regexp
}

minimatch.match = function (list, pattern, options) {
  options = options || {}
  var mm = new Minimatch(pattern, options)
  list = list.filter(function (f) {
    return mm.match(f)
  })
  if (mm.options.nonull && !list.length) {
    list.push(pattern)
  }
  return list
}

Minimatch.prototype.match = function match (f, partial) {
  if (typeof partial === 'undefined') partial = this.partial
  this.debug('match', f, this.pattern)
  // short-circuit in the case of busted things.
  // comments, etc.
  if (this.comment) return false
  if (this.empty) return f === ''

  if (f === '/' && partial) return true

  var options = this.options

  // windows: need to use /, not \
  if (path.sep !== '/') {
    f = f.split(path.sep).join('/')
  }

  // treat the test path as a set of pathparts.
  f = f.split(slashSplit)
  this.debug(this.pattern, 'split', f)

  // just ONE of the pattern sets in this.set needs to match
  // in order for it to be valid.  If negating, then just one
  // match means that we have failed.
  // Either way, return on the first hit.

  var set = this.set
  this.debug(this.pattern, 'set', set)

  // Find the basename of the path by looking for the last non-empty segment
  var filename
  var i
  for (i = f.length - 1; i >= 0; i--) {
    filename = f[i]
    if (filename) break
  }

  for (i = 0; i < set.length; i++) {
    var pattern = set[i]
    var file = f
    if (options.matchBase && pattern.length === 1) {
      file = [filename]
    }
    var hit = this.matchOne(file, pattern, partial)
    if (hit) {
      if (options.flipNegate) return true
      return !this.negate
    }
  }

  // didn't get any hits.  this is success if it's a negative
  // pattern, failure otherwise.
  if (options.flipNegate) return false
  return this.negate
}

// set partial to true to test if, for example,
// "/a/b" matches the start of "/*/b/*/d"
// Partial means, if you run out of file before you run
// out of pattern, then that's fine, as long as all
// the parts match.
Minimatch.prototype.matchOne = function (file, pattern, partial) {
  var options = this.options

  this.debug('matchOne',
    { 'this': this, file: file, pattern: pattern })

  this.debug('matchOne', file.length, pattern.length)

  for (var fi = 0,
      pi = 0,
      fl = file.length,
      pl = pattern.length
      ; (fi < fl) && (pi < pl)
      ; fi++, pi++) {
    this.debug('matchOne loop')
    var p = pattern[pi]
    var f = file[fi]

    this.debug(pattern, p, f)

    // should be impossible.
    // some invalid regexp stuff in the set.
    /* istanbul ignore if */
    if (p === false) return false

    if (p === GLOBSTAR) {
      this.debug('GLOBSTAR', [pattern, p, f])

      // "**"
      // a/**/b/**/c would match the following:
      // a/b/x/y/z/c
      // a/x/y/z/b/c
      // a/b/x/b/x/c
      // a/b/c
      // To do this, take the rest of the pattern after
      // the **, and see if it would match the file remainder.
      // If so, return success.
      // If not, the ** "swallows" a segment, and try again.
      // This is recursively awful.
      //
      // a/**/b/**/c matching a/b/x/y/z/c
      // - a matches a
      // - doublestar
      //   - matchOne(b/x/y/z/c, b/**/c)
      //     - b matches b
      //     - doublestar
      //       - matchOne(x/y/z/c, c) -> no
      //       - matchOne(y/z/c, c) -> no
      //       - matchOne(z/c, c) -> no
      //       - matchOne(c, c) yes, hit
      var fr = fi
      var pr = pi + 1
      if (pr === pl) {
        this.debug('** at the end')
        // a ** at the end will just swallow the rest.
        // We have found a match.
        // however, it will not swallow /.x, unless
        // options.dot is set.
        // . and .. are *never* matched by **, for explosively
        // exponential reasons.
        for (; fi < fl; fi++) {
          if (file[fi] === '.' || file[fi] === '..' ||
            (!options.dot && file[fi].charAt(0) === '.')) return false
        }
        return true
      }

      // ok, let's see if we can swallow whatever we can.
      while (fr < fl) {
        var swallowee = file[fr]

        this.debug('\nglobstar while', file, fr, pattern, pr, swallowee)

        // XXX remove this slice.  Just pass the start index.
        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {
          this.debug('globstar found match!', fr, fl, swallowee)
          // found a match.
          return true
        } else {
          // can't swallow "." or ".." ever.
          // can only swallow ".foo" when explicitly asked.
          if (swallowee === '.' || swallowee === '..' ||
            (!options.dot && swallowee.charAt(0) === '.')) {
            this.debug('dot detected!', file, fr, pattern, pr)
            break
          }

          // ** swallows a segment, and continue.
          this.debug('globstar swallow a segment, and continue')
          fr++
        }
      }

      // no match was found.
      // However, in partial mode, we can't say this is necessarily over.
      // If there's more *pattern* left, then
      /* istanbul ignore if */
      if (partial) {
        // ran out of file
        this.debug('\n>>> no match, partial?', file, fr, pattern, pr)
        if (fr === fl) return true
      }
      return false
    }

    // something other than **
    // non-magic patterns just have to match exactly
    // patterns with magic have been turned into regexps.
    var hit
    if (typeof p === 'string') {
      hit = f === p
      this.debug('string match', p, f, hit)
    } else {
      hit = f.match(p)
      this.debug('pattern match', p, f, hit)
    }

    if (!hit) return false
  }

  // Note: ending in / means that we'll get a final ""
  // at the end of the pattern.  This can only match a
  // corresponding "" at the end of the file.
  // If the file ends in /, then it can only match a
  // a pattern that ends in /, unless the pattern just
  // doesn't have any more for it. But, a/b/ should *not*
  // match "a/b/*", even though "" matches against the
  // [^/]*? pattern, except in partial mode, where it might
  // simply not be reached yet.
  // However, a/b/ should still satisfy a/*

  // now either we fell off the end of the pattern, or we're done.
  if (fi === fl && pi === pl) {
    // ran out of pattern and filename at the same time.
    // an exact hit!
    return true
  } else if (fi === fl) {
    // ran out of file, but still had pattern left.
    // this is ok if we're doing the match as part of
    // a glob fs traversal.
    return partial
  } else /* istanbul ignore else */ if (pi === pl) {
    // ran out of pattern, still have file left.
    // this is only acceptable if we're on the very last
    // empty segment of a file with a trailing slash.
    // a/* should match a/b/
    return (fi === fl - 1) && (file[fi] === '')
  }

  // should be unreachable.
  /* istanbul ignore next */
  throw new Error('wtf?')
}

// replace stuff like \* with *
function globUnescape (s) {
  return s.replace(/\\(.)/g, '$1')
}

function regExpEscape (s) {
  return s.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, '\\$&')
}


/***/ }),

/***/ 7614:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var path = __nccwpck_require__(1017);
var fs = __nccwpck_require__(7147);
var _0777 = parseInt('0777', 8);

module.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;

function mkdirP (p, opts, f, made) {
    if (typeof opts === 'function') {
        f = opts;
        opts = {};
    }
    else if (!opts || typeof opts !== 'object') {
        opts = { mode: opts };
    }
    
    var mode = opts.mode;
    var xfs = opts.fs || fs;
    
    if (mode === undefined) {
        mode = _0777 & (~process.umask());
    }
    if (!made) made = null;
    
    var cb = f || function () {};
    p = path.resolve(p);
    
    xfs.mkdir(p, mode, function (er) {
        if (!er) {
            made = made || p;
            return cb(null, made);
        }
        switch (er.code) {
            case 'ENOENT':
                mkdirP(path.dirname(p), opts, function (er, made) {
                    if (er) cb(er, made);
                    else mkdirP(p, opts, cb, made);
                });
                break;

            // In the case of any other error, just see if there's a dir
            // there already.  If so, then hooray!  If not, then something
            // is borked.
            default:
                xfs.stat(p, function (er2, stat) {
                    // if the stat fails, then that's super weird.
                    // let the original error be the failure reason.
                    if (er2 || !stat.isDirectory()) cb(er, made)
                    else cb(null, made);
                });
                break;
        }
    });
}

mkdirP.sync = function sync (p, opts, made) {
    if (!opts || typeof opts !== 'object') {
        opts = { mode: opts };
    }
    
    var mode = opts.mode;
    var xfs = opts.fs || fs;
    
    if (mode === undefined) {
        mode = _0777 & (~process.umask());
    }
    if (!made) made = null;

    p = path.resolve(p);

    try {
        xfs.mkdirSync(p, mode);
        made = made || p;
    }
    catch (err0) {
        switch (err0.code) {
            case 'ENOENT' :
                made = sync(path.dirname(p), opts, made);
                sync(p, opts, made);
                break;

            // In the case of any other error, just see if there's a dir
            // there already.  If so, then hooray!  If not, then something
            // is borked.
            default:
                var stat;
                try {
                    stat = xfs.statSync(p);
                }
                catch (err1) {
                    throw err0;
                }
                if (!stat.isDirectory()) throw err0;
                break;
        }
    }

    return made;
};


/***/ }),

/***/ 900:
/***/ ((module) => {

/**
 * Helpers.
 */

var s = 1000;
var m = s * 60;
var h = m * 60;
var d = h * 24;
var w = d * 7;
var y = d * 365.25;

/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} [options]
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */

module.exports = function(val, options) {
  options = options || {};
  var type = typeof val;
  if (type === 'string' && val.length > 0) {
    return parse(val);
  } else if (type === 'number' && isFinite(val)) {
    return options.long ? fmtLong(val) : fmtShort(val);
  }
  throw new Error(
    'val is not a non-empty string or a valid number. val=' +
      JSON.stringify(val)
  );
};

/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */

function parse(str) {
  str = String(str);
  if (str.length > 100) {
    return;
  }
  var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
    str
  );
  if (!match) {
    return;
  }
  var n = parseFloat(match[1]);
  var type = (match[2] || 'ms').toLowerCase();
  switch (type) {
    case 'years':
    case 'year':
    case 'yrs':
    case 'yr':
    case 'y':
      return n * y;
    case 'weeks':
    case 'week':
    case 'w':
      return n * w;
    case 'days':
    case 'day':
    case 'd':
      return n * d;
    case 'hours':
    case 'hour':
    case 'hrs':
    case 'hr':
    case 'h':
      return n * h;
    case 'minutes':
    case 'minute':
    case 'mins':
    case 'min':
    case 'm':
      return n * m;
    case 'seconds':
    case 'second':
    case 'secs':
    case 'sec':
    case 's':
      return n * s;
    case 'milliseconds':
    case 'millisecond':
    case 'msecs':
    case 'msec':
    case 'ms':
      return n;
    default:
      return undefined;
  }
}

/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtShort(ms) {
  var msAbs = Math.abs(ms);
  if (msAbs >= d) {
    return Math.round(ms / d) + 'd';
  }
  if (msAbs >= h) {
    return Math.round(ms / h) + 'h';
  }
  if (msAbs >= m) {
    return Math.round(ms / m) + 'm';
  }
  if (msAbs >= s) {
    return Math.round(ms / s) + 's';
  }
  return ms + 'ms';
}

/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtLong(ms) {
  var msAbs = Math.abs(ms);
  if (msAbs >= d) {
    return plural(ms, msAbs, d, 'day');
  }
  if (msAbs >= h) {
    return plural(ms, msAbs, h, 'hour');
  }
  if (msAbs >= m) {
    return plural(ms, msAbs, m, 'minute');
  }
  if (msAbs >= s) {
    return plural(ms, msAbs, s, 'second');
  }
  return ms + ' ms';
}

/**
 * Pluralization helper.
 */

function plural(ms, msAbs, n, name) {
  var isPlural = msAbs >= n * 1.5;
  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');
}


/***/ }),

/***/ 1223:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var wrappy = __nccwpck_require__(2940)
module.exports = wrappy(once)
module.exports.strict = wrappy(onceStrict)

once.proto = once(function () {
  Object.defineProperty(Function.prototype, 'once', {
    value: function () {
      return once(this)
    },
    configurable: true
  })

  Object.defineProperty(Function.prototype, 'onceStrict', {
    value: function () {
      return onceStrict(this)
    },
    configurable: true
  })
})

function once (fn) {
  var f = function () {
    if (f.called) return f.value
    f.called = true
    return f.value = fn.apply(this, arguments)
  }
  f.called = false
  return f
}

function onceStrict (fn) {
  var f = function () {
    if (f.called)
      throw new Error(f.onceError)
    f.called = true
    return f.value = fn.apply(this, arguments)
  }
  var name = fn.name || 'Function wrapped with `once`'
  f.onceError = name + " shouldn't be called more than once"
  f.called = false
  return f
}


/***/ }),

/***/ 8714:
/***/ ((module) => {



function posix(path) {
	return path.charAt(0) === '/';
}

function win32(path) {
	// https://github.com/nodejs/node/blob/b3fcc245fb25539909ef1d5eaa01dbf92e168633/lib/path.js#L56
	var splitDeviceRe = /^([a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/]+)?([\\\/])?([\s\S]*?)$/;
	var result = splitDeviceRe.exec(path);
	var device = result[1] || '';
	var isUnc = Boolean(device && device.charAt(1) !== ':');

	// UNC paths are always absolute
	return Boolean(result[2] || isUnc);
}

module.exports = process.platform === 'win32' ? win32 : posix;
module.exports.posix = posix;
module.exports.win32 = win32;


/***/ }),

/***/ 4833:
/***/ ((module) => {

module.exports = Pend;

function Pend() {
  this.pending = 0;
  this.max = Infinity;
  this.listeners = [];
  this.waiting = [];
  this.error = null;
}

Pend.prototype.go = function(fn) {
  if (this.pending < this.max) {
    pendGo(this, fn);
  } else {
    this.waiting.push(fn);
  }
};

Pend.prototype.wait = function(cb) {
  if (this.pending === 0) {
    cb(this.error);
  } else {
    this.listeners.push(cb);
  }
};

Pend.prototype.hold = function() {
  return pendHold(this);
};

function pendHold(self) {
  self.pending += 1;
  var called = false;
  return onCb;
  function onCb(err) {
    if (called) throw new Error("callback called twice");
    called = true;
    self.error = self.error || err;
    self.pending -= 1;
    if (self.waiting.length > 0 && self.pending < self.max) {
      pendGo(self, self.waiting.shift());
    } else if (self.pending === 0) {
      var listeners = self.listeners;
      self.listeners = [];
      listeners.forEach(cbListener);
    }
  }
  function cbListener(listener) {
    listener(self.error);
  }
}

function pendGo(self, fn) {
  fn(pendHold(self));
}


/***/ }),

/***/ 3329:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {



var parseUrl = (__nccwpck_require__(7310).parse);

var DEFAULT_PORTS = {
  ftp: 21,
  gopher: 70,
  http: 80,
  https: 443,
  ws: 80,
  wss: 443,
};

var stringEndsWith = String.prototype.endsWith || function(s) {
  return s.length <= this.length &&
    this.indexOf(s, this.length - s.length) !== -1;
};

/**
 * @param {string|object} url - The URL, or the result from url.parse.
 * @return {string} The URL of the proxy that should handle the request to the
 *  given URL. If no proxy is set, this will be an empty string.
 */
function getProxyForUrl(url) {
  var parsedUrl = typeof url === 'string' ? parseUrl(url) : url || {};
  var proto = parsedUrl.protocol;
  var hostname = parsedUrl.host;
  var port = parsedUrl.port;
  if (typeof hostname !== 'string' || !hostname || typeof proto !== 'string') {
    return '';  // Don't proxy URLs without a valid scheme or host.
  }

  proto = proto.split(':', 1)[0];
  // Stripping ports in this way instead of using parsedUrl.hostname to make
  // sure that the brackets around IPv6 addresses are kept.
  hostname = hostname.replace(/:\d*$/, '');
  port = parseInt(port) || DEFAULT_PORTS[proto] || 0;
  if (!shouldProxy(hostname, port)) {
    return '';  // Don't proxy URLs that match NO_PROXY.
  }

  var proxy =
    getEnv('npm_config_' + proto + '_proxy') ||
    getEnv(proto + '_proxy') ||
    getEnv('npm_config_proxy') ||
    getEnv('all_proxy');
  if (proxy && proxy.indexOf('://') === -1) {
    // Missing scheme in proxy, default to the requested URL's scheme.
    proxy = proto + '://' + proxy;
  }
  return proxy;
}

/**
 * Determines whether a given URL should be proxied.
 *
 * @param {string} hostname - The host name of the URL.
 * @param {number} port - The effective port of the URL.
 * @returns {boolean} Whether the given URL should be proxied.
 * @private
 */
function shouldProxy(hostname, port) {
  var NO_PROXY =
    (getEnv('npm_config_no_proxy') || getEnv('no_proxy')).toLowerCase();
  if (!NO_PROXY) {
    return true;  // Always proxy if NO_PROXY is not set.
  }
  if (NO_PROXY === '*') {
    return false;  // Never proxy if wildcard is set.
  }

  return NO_PROXY.split(/[,\s]/).every(function(proxy) {
    if (!proxy) {
      return true;  // Skip zero-length hosts.
    }
    var parsedProxy = proxy.match(/^(.+):(\d+)$/);
    var parsedProxyHostname = parsedProxy ? parsedProxy[1] : proxy;
    var parsedProxyPort = parsedProxy ? parseInt(parsedProxy[2]) : 0;
    if (parsedProxyPort && parsedProxyPort !== port) {
      return true;  // Skip if ports don't match.
    }

    if (!/^[.*]/.test(parsedProxyHostname)) {
      // No wildcards, so stop proxying if there is an exact match.
      return hostname !== parsedProxyHostname;
    }

    if (parsedProxyHostname.charAt(0) === '*') {
      // Remove leading wildcard.
      parsedProxyHostname = parsedProxyHostname.slice(1);
    }
    // Stop proxying if the hostname ends with the no_proxy host.
    return !stringEndsWith.call(hostname, parsedProxyHostname);
  });
}

/**
 * Get the value for an environment variable.
 *
 * @param {string} key - The name of the environment variable.
 * @return {string} The value of the environment variable.
 * @private
 */
function getEnv(key) {
  return process.env[key.toLowerCase()] || process.env[key.toUpperCase()] || '';
}

exports.j = getProxyForUrl;


/***/ }),

/***/ 8341:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var once = __nccwpck_require__(1223)
var eos = __nccwpck_require__(1205)
var fs = __nccwpck_require__(7147) // we only need fs to get the ReadStream and WriteStream prototypes

var noop = function () {}
var ancient = /^v?\.0/.test(process.version)

var isFn = function (fn) {
  return typeof fn === 'function'
}

var isFS = function (stream) {
  if (!ancient) return false // newer node version do not need to care about fs is a special way
  if (!fs) return false // browser
  return (stream instanceof (fs.ReadStream || noop) || stream instanceof (fs.WriteStream || noop)) && isFn(stream.close)
}

var isRequest = function (stream) {
  return stream.setHeader && isFn(stream.abort)
}

var destroyer = function (stream, reading, writing, callback) {
  callback = once(callback)

  var closed = false
  stream.on('close', function () {
    closed = true
  })

  eos(stream, {readable: reading, writable: writing}, function (err) {
    if (err) return callback(err)
    closed = true
    callback()
  })

  var destroyed = false
  return function (err) {
    if (closed) return
    if (destroyed) return
    destroyed = true

    if (isFS(stream)) return stream.close(noop) // use close for fs streams to avoid fd leaks
    if (isRequest(stream)) return stream.abort() // request.destroy just do .end - .abort is what we want

    if (isFn(stream.destroy)) return stream.destroy()

    callback(err || new Error('stream was destroyed'))
  }
}

var call = function (fn) {
  fn()
}

var pipe = function (from, to) {
  return from.pipe(to)
}

var pump = function () {
  var streams = Array.prototype.slice.call(arguments)
  var callback = isFn(streams[streams.length - 1] || noop) && streams.pop() || noop

  if (Array.isArray(streams[0])) streams = streams[0]
  if (streams.length < 2) throw new Error('pump requires two streams per minimum')

  var error
  var destroys = streams.map(function (stream, i) {
    var reading = i < streams.length - 1
    var writing = i > 0
    return destroyer(stream, reading, writing, function (err) {
      if (!error) error = err
      if (err) destroys.forEach(call)
      if (reading) return
      destroys.forEach(call)
      callback(error)
    })
  })

  return streams.reduce(pipe)
}

module.exports = pump


/***/ }),

/***/ 5888:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {



const { EMPTY_BUFFER } = __nccwpck_require__(3108);

/**
 * Merges an array of buffers into a new buffer.
 *
 * @param {Buffer[]} list The array of buffers to concat
 * @param {Number} totalLength The total length of buffers in the list
 * @return {Buffer} The resulting buffer
 * @public
 */
function concat(list, totalLength) {
  if (list.length === 0) return EMPTY_BUFFER;
  if (list.length === 1) return list[0];

  const target = Buffer.allocUnsafe(totalLength);
  let offset = 0;

  for (let i = 0; i < list.length; i++) {
    const buf = list[i];
    target.set(buf, offset);
    offset += buf.length;
  }

  if (offset < totalLength) return target.slice(0, offset);

  return target;
}

/**
 * Masks a buffer using the given mask.
 *
 * @param {Buffer} source The buffer to mask
 * @param {Buffer} mask The mask to use
 * @param {Buffer} output The buffer where to store the result
 * @param {Number} offset The offset at which to start writing
 * @param {Number} length The number of bytes to mask.
 * @public
 */
function _mask(source, mask, output, offset, length) {
  for (let i = 0; i < length; i++) {
    output[offset + i] = source[i] ^ mask[i & 3];
  }
}

/**
 * Unmasks a buffer using the given mask.
 *
 * @param {Buffer} buffer The buffer to unmask
 * @param {Buffer} mask The mask to use
 * @public
 */
function _unmask(buffer, mask) {
  for (let i = 0; i < buffer.length; i++) {
    buffer[i] ^= mask[i & 3];
  }
}

/**
 * Converts a buffer to an `ArrayBuffer`.
 *
 * @param {Buffer} buf The buffer to convert
 * @return {ArrayBuffer} Converted buffer
 * @public
 */
function toArrayBuffer(buf) {
  if (buf.byteLength === buf.buffer.byteLength) {
    return buf.buffer;
  }

  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
}

/**
 * Converts `data` to a `Buffer`.
 *
 * @param {*} data The data to convert
 * @return {Buffer} The buffer
 * @throws {TypeError}
 * @public
 */
function toBuffer(data) {
  toBuffer.readOnly = true;

  if (Buffer.isBuffer(data)) return data;

  let buf;

  if (data instanceof ArrayBuffer) {
    buf = Buffer.from(data);
  } else if (ArrayBuffer.isView(data)) {
    buf = Buffer.from(data.buffer, data.byteOffset, data.byteLength);
  } else {
    buf = Buffer.from(data);
    toBuffer.readOnly = false;
  }

  return buf;
}

module.exports = {
  concat,
  mask: _mask,
  toArrayBuffer,
  toBuffer,
  unmask: _unmask
};

/* istanbul ignore else  */
if (!process.env.WS_NO_BUFFER_UTIL) {
  try {
    const bufferUtil = __nccwpck_require__(1269);

    module.exports.mask = function (source, mask, output, offset, length) {
      if (length < 48) _mask(source, mask, output, offset, length);
      else bufferUtil.mask(source, mask, output, offset, length);
    };

    module.exports.unmask = function (buffer, mask) {
      if (buffer.length < 32) _unmask(buffer, mask);
      else bufferUtil.unmask(buffer, mask);
    };
  } catch (e) {
    // Continue regardless of the error.
  }
}


/***/ }),

/***/ 3108:
/***/ ((module) => {



module.exports = {
  BINARY_TYPES: ['nodebuffer', 'arraybuffer', 'fragments'],
  EMPTY_BUFFER: Buffer.alloc(0),
  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',
  kForOnEventAttribute: Symbol('kIsForOnEventAttribute'),
  kListener: Symbol('kListener'),
  kStatusCode: Symbol('status-code'),
  kWebSocket: Symbol('websocket'),
  NOOP: () => {}
};


/***/ }),

/***/ 2450:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {



const { kForOnEventAttribute, kListener } = __nccwpck_require__(3108);

const kCode = Symbol('kCode');
const kData = Symbol('kData');
const kError = Symbol('kError');
const kMessage = Symbol('kMessage');
const kReason = Symbol('kReason');
const kTarget = Symbol('kTarget');
const kType = Symbol('kType');
const kWasClean = Symbol('kWasClean');

/**
 * Class representing an event.
 */
class Event {
  /**
   * Create a new `Event`.
   *
   * @param {String} type The name of the event
   * @throws {TypeError} If the `type` argument is not specified
   */
  constructor(type) {
    this[kTarget] = null;
    this[kType] = type;
  }

  /**
   * @type {*}
   */
  get target() {
    return this[kTarget];
  }

  /**
   * @type {String}
   */
  get type() {
    return this[kType];
  }
}

Object.defineProperty(Event.prototype, 'target', { enumerable: true });
Object.defineProperty(Event.prototype, 'type', { enumerable: true });

/**
 * Class representing a close event.
 *
 * @extends Event
 */
class CloseEvent extends Event {
  /**
   * Create a new `CloseEvent`.
   *
   * @param {String} type The name of the event
   * @param {Object} [options] A dictionary object that allows for setting
   *     attributes via object members of the same name
   * @param {Number} [options.code=0] The status code explaining why the
   *     connection was closed
   * @param {String} [options.reason=''] A human-readable string explaining why
   *     the connection was closed
   * @param {Boolean} [options.wasClean=false] Indicates whether or not the
   *     connection was cleanly closed
   */
  constructor(type, options = {}) {
    super(type);

    this[kCode] = options.code === undefined ? 0 : options.code;
    this[kReason] = options.reason === undefined ? '' : options.reason;
    this[kWasClean] = options.wasClean === undefined ? false : options.wasClean;
  }

  /**
   * @type {Number}
   */
  get code() {
    return this[kCode];
  }

  /**
   * @type {String}
   */
  get reason() {
    return this[kReason];
  }

  /**
   * @type {Boolean}
   */
  get wasClean() {
    return this[kWasClean];
  }
}

Object.defineProperty(CloseEvent.prototype, 'code', { enumerable: true });
Object.defineProperty(CloseEvent.prototype, 'reason', { enumerable: true });
Object.defineProperty(CloseEvent.prototype, 'wasClean', { enumerable: true });

/**
 * Class representing an error event.
 *
 * @extends Event
 */
class ErrorEvent extends Event {
  /**
   * Create a new `ErrorEvent`.
   *
   * @param {String} type The name of the event
   * @param {Object} [options] A dictionary object that allows for setting
   *     attributes via object members of the same name
   * @param {*} [options.error=null] The error that generated this event
   * @param {String} [options.message=''] The error message
   */
  constructor(type, options = {}) {
    super(type);

    this[kError] = options.error === undefined ? null : options.error;
    this[kMessage] = options.message === undefined ? '' : options.message;
  }

  /**
   * @type {*}
   */
  get error() {
    return this[kError];
  }

  /**
   * @type {String}
   */
  get message() {
    return this[kMessage];
  }
}

Object.defineProperty(ErrorEvent.prototype, 'error', { enumerable: true });
Object.defineProperty(ErrorEvent.prototype, 'message', { enumerable: true });

/**
 * Class representing a message event.
 *
 * @extends Event
 */
class MessageEvent extends Event {
  /**
   * Create a new `MessageEvent`.
   *
   * @param {String} type The name of the event
   * @param {Object} [options] A dictionary object that allows for setting
   *     attributes via object members of the same name
   * @param {*} [options.data=null] The message content
   */
  constructor(type, options = {}) {
    super(type);

    this[kData] = options.data === undefined ? null : options.data;
  }

  /**
   * @type {*}
   */
  get data() {
    return this[kData];
  }
}

Object.defineProperty(MessageEvent.prototype, 'data', { enumerable: true });

/**
 * This provides methods for emulating the `EventTarget` interface. It's not
 * meant to be used directly.
 *
 * @mixin
 */
const EventTarget = {
  /**
   * Register an event listener.
   *
   * @param {String} type A string representing the event type to listen for
   * @param {(Function|Object)} handler The listener to add
   * @param {Object} [options] An options object specifies characteristics about
   *     the event listener
   * @param {Boolean} [options.once=false] A `Boolean` indicating that the
   *     listener should be invoked at most once after being added. If `true`,
   *     the listener would be automatically removed when invoked.
   * @public
   */
  addEventListener(type, handler, options = {}) {
    for (const listener of this.listeners(type)) {
      if (
        !options[kForOnEventAttribute] &&
        listener[kListener] === handler &&
        !listener[kForOnEventAttribute]
      ) {
        return;
      }
    }

    let wrapper;

    if (type === 'message') {
      wrapper = function onMessage(data, isBinary) {
        const event = new MessageEvent('message', {
          data: isBinary ? data : data.toString()
        });

        event[kTarget] = this;
        callListener(handler, this, event);
      };
    } else if (type === 'close') {
      wrapper = function onClose(code, message) {
        const event = new CloseEvent('close', {
          code,
          reason: message.toString(),
          wasClean: this._closeFrameReceived && this._closeFrameSent
        });

        event[kTarget] = this;
        callListener(handler, this, event);
      };
    } else if (type === 'error') {
      wrapper = function onError(error) {
        const event = new ErrorEvent('error', {
          error,
          message: error.message
        });

        event[kTarget] = this;
        callListener(handler, this, event);
      };
    } else if (type === 'open') {
      wrapper = function onOpen() {
        const event = new Event('open');

        event[kTarget] = this;
        callListener(handler, this, event);
      };
    } else {
      return;
    }

    wrapper[kForOnEventAttribute] = !!options[kForOnEventAttribute];
    wrapper[kListener] = handler;

    if (options.once) {
      this.once(type, wrapper);
    } else {
      this.on(type, wrapper);
    }
  },

  /**
   * Remove an event listener.
   *
   * @param {String} type A string representing the event type to remove
   * @param {(Function|Object)} handler The listener to remove
   * @public
   */
  removeEventListener(type, handler) {
    for (const listener of this.listeners(type)) {
      if (listener[kListener] === handler && !listener[kForOnEventAttribute]) {
        this.removeListener(type, listener);
        break;
      }
    }
  }
};

module.exports = {
  CloseEvent,
  ErrorEvent,
  Event,
  EventTarget,
  MessageEvent
};

/**
 * Call an event listener
 *
 * @param {(Function|Object)} listener The listener to call
 * @param {*} thisArg The value to use as `this`` when calling the listener
 * @param {Event} event The event to pass to the listener
 * @private
 */
function callListener(listener, thisArg, event) {
  if (typeof listener === 'object' && listener.handleEvent) {
    listener.handleEvent.call(listener, event);
  } else {
    listener.call(thisArg, event);
  }
}


/***/ }),

/***/ 4975:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {



const { tokenChars } = __nccwpck_require__(88);

/**
 * Adds an offer to the map of extension offers or a parameter to the map of
 * parameters.
 *
 * @param {Object} dest The map of extension offers or parameters
 * @param {String} name The extension or parameter name
 * @param {(Object|Boolean|String)} elem The extension parameters or the
 *     parameter value
 * @private
 */
function push(dest, name, elem) {
  if (dest[name] === undefined) dest[name] = [elem];
  else dest[name].push(elem);
}

/**
 * Parses the `Sec-WebSocket-Extensions` header into an object.
 *
 * @param {String} header The field value of the header
 * @return {Object} The parsed object
 * @public
 */
function parse(header) {
  const offers = Object.create(null);
  let params = Object.create(null);
  let mustUnescape = false;
  let isEscaping = false;
  let inQuotes = false;
  let extensionName;
  let paramName;
  let start = -1;
  let code = -1;
  let end = -1;
  let i = 0;

  for (; i < header.length; i++) {
    code = header.charCodeAt(i);

    if (extensionName === undefined) {
      if (end === -1 && tokenChars[code] === 1) {
        if (start === -1) start = i;
      } else if (
        i !== 0 &&
        (code === 0x20 /* ' ' */ || code === 0x09) /* '\t' */
      ) {
        if (end === -1 && start !== -1) end = i;
      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {
        if (start === -1) {
          throw new SyntaxError(`Unexpected character at index ${i}`);
        }

        if (end === -1) end = i;
        const name = header.slice(start, end);
        if (code === 0x2c) {
          push(offers, name, params);
          params = Object.create(null);
        } else {
          extensionName = name;
        }

        start = end = -1;
      } else {
        throw new SyntaxError(`Unexpected character at index ${i}`);
      }
    } else if (paramName === undefined) {
      if (end === -1 && tokenChars[code] === 1) {
        if (start === -1) start = i;
      } else if (code === 0x20 || code === 0x09) {
        if (end === -1 && start !== -1) end = i;
      } else if (code === 0x3b || code === 0x2c) {
        if (start === -1) {
          throw new SyntaxError(`Unexpected character at index ${i}`);
        }

        if (end === -1) end = i;
        push(params, header.slice(start, end), true);
        if (code === 0x2c) {
          push(offers, extensionName, params);
          params = Object.create(null);
          extensionName = undefined;
        }

        start = end = -1;
      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {
        paramName = header.slice(start, i);
        start = end = -1;
      } else {
        throw new SyntaxError(`Unexpected character at index ${i}`);
      }
    } else {
      //
      // The value of a quoted-string after unescaping must conform to the
      // token ABNF, so only token characters are valid.
      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1
      //
      if (isEscaping) {
        if (tokenChars[code] !== 1) {
          throw new SyntaxError(`Unexpected character at index ${i}`);
        }
        if (start === -1) start = i;
        else if (!mustUnescape) mustUnescape = true;
        isEscaping = false;
      } else if (inQuotes) {
        if (tokenChars[code] === 1) {
          if (start === -1) start = i;
        } else if (code === 0x22 /* '"' */ && start !== -1) {
          inQuotes = false;
          end = i;
        } else if (code === 0x5c /* '\' */) {
          isEscaping = true;
        } else {
          throw new SyntaxError(`Unexpected character at index ${i}`);
        }
      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {
        inQuotes = true;
      } else if (end === -1 && tokenChars[code] === 1) {
        if (start === -1) start = i;
      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {
        if (end === -1) end = i;
      } else if (code === 0x3b || code === 0x2c) {
        if (start === -1) {
          throw new SyntaxError(`Unexpected character at index ${i}`);
        }

        if (end === -1) end = i;
        let value = header.slice(start, end);
        if (mustUnescape) {
          value = value.replace(/\\/g, '');
          mustUnescape = false;
        }
        push(params, paramName, value);
        if (code === 0x2c) {
          push(offers, extensionName, params);
          params = Object.create(null);
          extensionName = undefined;
        }

        paramName = undefined;
        start = end = -1;
      } else {
        throw new SyntaxError(`Unexpected character at index ${i}`);
      }
    }
  }

  if (start === -1 || inQuotes || code === 0x20 || code === 0x09) {
    throw new SyntaxError('Unexpected end of input');
  }

  if (end === -1) end = i;
  const token = header.slice(start, end);
  if (extensionName === undefined) {
    push(offers, token, params);
  } else {
    if (paramName === undefined) {
      push(params, token, true);
    } else if (mustUnescape) {
      push(params, paramName, token.replace(/\\/g, ''));
    } else {
      push(params, paramName, token);
    }
    push(offers, extensionName, params);
  }

  return offers;
}

/**
 * Builds the `Sec-WebSocket-Extensions` header field value.
 *
 * @param {Object} extensions The map of extensions and parameters to format
 * @return {String} A string representing the given object
 * @public
 */
function format(extensions) {
  return Object.keys(extensions)
    .map((extension) => {
      let configurations = extensions[extension];
      if (!Array.isArray(configurations)) configurations = [configurations];
      return configurations
        .map((params) => {
          return [extension]
            .concat(
              Object.keys(params).map((k) => {
                let values = params[k];
                if (!Array.isArray(values)) values = [values];
                return values
                  .map((v) => (v === true ? k : `${k}=${v}`))
                  .join('; ');
              })
            )
            .join('; ');
        })
        .join(', ');
    })
    .join(', ');
}

module.exports = { format, parse };


/***/ }),

/***/ 3776:
/***/ ((module) => {



const kDone = Symbol('kDone');
const kRun = Symbol('kRun');

/**
 * A very simple job queue with adjustable concurrency. Adapted from
 * https://github.com/STRML/async-limiter
 */
class Limiter {
  /**
   * Creates a new `Limiter`.
   *
   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed
   *     to run concurrently
   */
  constructor(concurrency) {
    this[kDone] = () => {
      this.pending--;
      this[kRun]();
    };
    this.concurrency = concurrency || Infinity;
    this.jobs = [];
    this.pending = 0;
  }

  /**
   * Adds a job to the queue.
   *
   * @param {Function} job The job to run
   * @public
   */
  add(job) {
    this.jobs.push(job);
    this[kRun]();
  }

  /**
   * Removes a job from the queue and runs it if possible.
   *
   * @private
   */
  [kRun]() {
    if (this.pending === this.concurrency) return;

    if (this.jobs.length) {
      const job = this.jobs.shift();

      this.pending++;
      job(this[kDone]);
    }
  }
}

module.exports = Limiter;


/***/ }),

/***/ 1721:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {



const zlib = __nccwpck_require__(9796);

const bufferUtil = __nccwpck_require__(5888);
const Limiter = __nccwpck_require__(3776);
const { kStatusCode } = __nccwpck_require__(3108);

const TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);
const kPerMessageDeflate = Symbol('permessage-deflate');
const kTotalLength = Symbol('total-length');
const kCallback = Symbol('callback');
const kBuffers = Symbol('buffers');
const kError = Symbol('error');

//
// We limit zlib concurrency, which prevents severe memory fragmentation
// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913
// and https://github.com/websockets/ws/issues/1202
//
// Intentionally global; it's the global thread pool that's an issue.
//
let zlibLimiter;

/**
 * permessage-deflate implementation.
 */
class PerMessageDeflate {
  /**
   * Creates a PerMessageDeflate instance.
   *
   * @param {Object} [options] Configuration options
   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support
   *     for, or request, a custom client window size
   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/
   *     acknowledge disabling of client context takeover
   * @param {Number} [options.concurrencyLimit=10] The number of concurrent
   *     calls to zlib
   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the
   *     use of a custom server window size
   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept
   *     disabling of server context takeover
   * @param {Number} [options.threshold=1024] Size (in bytes) below which
   *     messages should not be compressed if context takeover is disabled
   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on
   *     deflate
   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on
   *     inflate
   * @param {Boolean} [isServer=false] Create the instance in either server or
   *     client mode
   * @param {Number} [maxPayload=0] The maximum allowed message length
   */
  constructor(options, isServer, maxPayload) {
    this._maxPayload = maxPayload | 0;
    this._options = options || {};
    this._threshold =
      this._options.threshold !== undefined ? this._options.threshold : 1024;
    this._isServer = !!isServer;
    this._deflate = null;
    this._inflate = null;

    this.params = null;

    if (!zlibLimiter) {
      const concurrency =
        this._options.concurrencyLimit !== undefined
          ? this._options.concurrencyLimit
          : 10;
      zlibLimiter = new Limiter(concurrency);
    }
  }

  /**
   * @type {String}
   */
  static get extensionName() {
    return 'permessage-deflate';
  }

  /**
   * Create an extension negotiation offer.
   *
   * @return {Object} Extension parameters
   * @public
   */
  offer() {
    const params = {};

    if (this._options.serverNoContextTakeover) {
      params.server_no_context_takeover = true;
    }
    if (this._options.clientNoContextTakeover) {
      params.client_no_context_takeover = true;
    }
    if (this._options.serverMaxWindowBits) {
      params.server_max_window_bits = this._options.serverMaxWindowBits;
    }
    if (this._options.clientMaxWindowBits) {
      params.client_max_window_bits = this._options.clientMaxWindowBits;
    } else if (this._options.clientMaxWindowBits == null) {
      params.client_max_window_bits = true;
    }

    return params;
  }

  /**
   * Accept an extension negotiation offer/response.
   *
   * @param {Array} configurations The extension negotiation offers/reponse
   * @return {Object} Accepted configuration
   * @public
   */
  accept(configurations) {
    configurations = this.normalizeParams(configurations);

    this.params = this._isServer
      ? this.acceptAsServer(configurations)
      : this.acceptAsClient(configurations);

    return this.params;
  }

  /**
   * Releases all resources used by the extension.
   *
   * @public
   */
  cleanup() {
    if (this._inflate) {
      this._inflate.close();
      this._inflate = null;
    }

    if (this._deflate) {
      const callback = this._deflate[kCallback];

      this._deflate.close();
      this._deflate = null;

      if (callback) {
        callback(
          new Error(
            'The deflate stream was closed while data was being processed'
          )
        );
      }
    }
  }

  /**
   *  Accept an extension negotiation offer.
   *
   * @param {Array} offers The extension negotiation offers
   * @return {Object} Accepted configuration
   * @private
   */
  acceptAsServer(offers) {
    const opts = this._options;
    const accepted = offers.find((params) => {
      if (
        (opts.serverNoContextTakeover === false &&
          params.server_no_context_takeover) ||
        (params.server_max_window_bits &&
          (opts.serverMaxWindowBits === false ||
            (typeof opts.serverMaxWindowBits === 'number' &&
              opts.serverMaxWindowBits > params.server_max_window_bits))) ||
        (typeof opts.clientMaxWindowBits === 'number' &&
          !params.client_max_window_bits)
      ) {
        return false;
      }

      return true;
    });

    if (!accepted) {
      throw new Error('None of the extension offers can be accepted');
    }

    if (opts.serverNoContextTakeover) {
      accepted.server_no_context_takeover = true;
    }
    if (opts.clientNoContextTakeover) {
      accepted.client_no_context_takeover = true;
    }
    if (typeof opts.serverMaxWindowBits === 'number') {
      accepted.server_max_window_bits = opts.serverMaxWindowBits;
    }
    if (typeof opts.clientMaxWindowBits === 'number') {
      accepted.client_max_window_bits = opts.clientMaxWindowBits;
    } else if (
      accepted.client_max_window_bits === true ||
      opts.clientMaxWindowBits === false
    ) {
      delete accepted.client_max_window_bits;
    }

    return accepted;
  }

  /**
   * Accept the extension negotiation response.
   *
   * @param {Array} response The extension negotiation response
   * @return {Object} Accepted configuration
   * @private
   */
  acceptAsClient(response) {
    const params = response[0];

    if (
      this._options.clientNoContextTakeover === false &&
      params.client_no_context_takeover
    ) {
      throw new Error('Unexpected parameter "client_no_context_takeover"');
    }

    if (!params.client_max_window_bits) {
      if (typeof this._options.clientMaxWindowBits === 'number') {
        params.client_max_window_bits = this._options.clientMaxWindowBits;
      }
    } else if (
      this._options.clientMaxWindowBits === false ||
      (typeof this._options.clientMaxWindowBits === 'number' &&
        params.client_max_window_bits > this._options.clientMaxWindowBits)
    ) {
      throw new Error(
        'Unexpected or invalid parameter "client_max_window_bits"'
      );
    }

    return params;
  }

  /**
   * Normalize parameters.
   *
   * @param {Array} configurations The extension negotiation offers/reponse
   * @return {Array} The offers/response with normalized parameters
   * @private
   */
  normalizeParams(configurations) {
    configurations.forEach((params) => {
      Object.keys(params).forEach((key) => {
        let value = params[key];

        if (value.length > 1) {
          throw new Error(`Parameter "${key}" must have only a single value`);
        }

        value = value[0];

        if (key === 'client_max_window_bits') {
          if (value !== true) {
            const num = +value;
            if (!Number.isInteger(num) || num < 8 || num > 15) {
              throw new TypeError(
                `Invalid value for parameter "${key}": ${value}`
              );
            }
            value = num;
          } else if (!this._isServer) {
            throw new TypeError(
              `Invalid value for parameter "${key}": ${value}`
            );
          }
        } else if (key === 'server_max_window_bits') {
          const num = +value;
          if (!Number.isInteger(num) || num < 8 || num > 15) {
            throw new TypeError(
              `Invalid value for parameter "${key}": ${value}`
            );
          }
          value = num;
        } else if (
          key === 'client_no_context_takeover' ||
          key === 'server_no_context_takeover'
        ) {
          if (value !== true) {
            throw new TypeError(
              `Invalid value for parameter "${key}": ${value}`
            );
          }
        } else {
          throw new Error(`Unknown parameter "${key}"`);
        }

        params[key] = value;
      });
    });

    return configurations;
  }

  /**
   * Decompress data. Concurrency limited.
   *
   * @param {Buffer} data Compressed data
   * @param {Boolean} fin Specifies whether or not this is the last fragment
   * @param {Function} callback Callback
   * @public
   */
  decompress(data, fin, callback) {
    zlibLimiter.add((done) => {
      this._decompress(data, fin, (err, result) => {
        done();
        callback(err, result);
      });
    });
  }

  /**
   * Compress data. Concurrency limited.
   *
   * @param {(Buffer|String)} data Data to compress
   * @param {Boolean} fin Specifies whether or not this is the last fragment
   * @param {Function} callback Callback
   * @public
   */
  compress(data, fin, callback) {
    zlibLimiter.add((done) => {
      this._compress(data, fin, (err, result) => {
        done();
        callback(err, result);
      });
    });
  }

  /**
   * Decompress data.
   *
   * @param {Buffer} data Compressed data
   * @param {Boolean} fin Specifies whether or not this is the last fragment
   * @param {Function} callback Callback
   * @private
   */
  _decompress(data, fin, callback) {
    const endpoint = this._isServer ? 'client' : 'server';

    if (!this._inflate) {
      const key = `${endpoint}_max_window_bits`;
      const windowBits =
        typeof this.params[key] !== 'number'
          ? zlib.Z_DEFAULT_WINDOWBITS
          : this.params[key];

      this._inflate = zlib.createInflateRaw({
        ...this._options.zlibInflateOptions,
        windowBits
      });
      this._inflate[kPerMessageDeflate] = this;
      this._inflate[kTotalLength] = 0;
      this._inflate[kBuffers] = [];
      this._inflate.on('error', inflateOnError);
      this._inflate.on('data', inflateOnData);
    }

    this._inflate[kCallback] = callback;

    this._inflate.write(data);
    if (fin) this._inflate.write(TRAILER);

    this._inflate.flush(() => {
      const err = this._inflate[kError];

      if (err) {
        this._inflate.close();
        this._inflate = null;
        callback(err);
        return;
      }

      const data = bufferUtil.concat(
        this._inflate[kBuffers],
        this._inflate[kTotalLength]
      );

      if (this._inflate._readableState.endEmitted) {
        this._inflate.close();
        this._inflate = null;
      } else {
        this._inflate[kTotalLength] = 0;
        this._inflate[kBuffers] = [];

        if (fin && this.params[`${endpoint}_no_context_takeover`]) {
          this._inflate.reset();
        }
      }

      callback(null, data);
    });
  }

  /**
   * Compress data.
   *
   * @param {(Buffer|String)} data Data to compress
   * @param {Boolean} fin Specifies whether or not this is the last fragment
   * @param {Function} callback Callback
   * @private
   */
  _compress(data, fin, callback) {
    const endpoint = this._isServer ? 'server' : 'client';

    if (!this._deflate) {
      const key = `${endpoint}_max_window_bits`;
      const windowBits =
        typeof this.params[key] !== 'number'
          ? zlib.Z_DEFAULT_WINDOWBITS
          : this.params[key];

      this._deflate = zlib.createDeflateRaw({
        ...this._options.zlibDeflateOptions,
        windowBits
      });

      this._deflate[kTotalLength] = 0;
      this._deflate[kBuffers] = [];

      this._deflate.on('data', deflateOnData);
    }

    this._deflate[kCallback] = callback;

    this._deflate.write(data);
    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {
      if (!this._deflate) {
        //
        // The deflate stream was closed while data was being processed.
        //
        return;
      }

      let data = bufferUtil.concat(
        this._deflate[kBuffers],
        this._deflate[kTotalLength]
      );

      if (fin) data = data.slice(0, data.length - 4);

      //
      // Ensure that the callback will not be called again in
      // `PerMessageDeflate#cleanup()`.
      //
      this._deflate[kCallback] = null;

      this._deflate[kTotalLength] = 0;
      this._deflate[kBuffers] = [];

      if (fin && this.params[`${endpoint}_no_context_takeover`]) {
        this._deflate.reset();
      }

      callback(null, data);
    });
  }
}

module.exports = PerMessageDeflate;

/**
 * The listener of the `zlib.DeflateRaw` stream `'data'` event.
 *
 * @param {Buffer} chunk A chunk of data
 * @private
 */
function deflateOnData(chunk) {
  this[kBuffers].push(chunk);
  this[kTotalLength] += chunk.length;
}

/**
 * The listener of the `zlib.InflateRaw` stream `'data'` event.
 *
 * @param {Buffer} chunk A chunk of data
 * @private
 */
function inflateOnData(chunk) {
  this[kTotalLength] += chunk.length;

  if (
    this[kPerMessageDeflate]._maxPayload < 1 ||
    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload
  ) {
    this[kBuffers].push(chunk);
    return;
  }

  this[kError] = new RangeError('Max payload size exceeded');
  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';
  this[kError][kStatusCode] = 1009;
  this.removeListener('data', inflateOnData);
  this.reset();
}

/**
 * The listener of the `zlib.InflateRaw` stream `'error'` event.
 *
 * @param {Error} err The emitted error
 * @private
 */
function inflateOnError(err) {
  //
  // There is no need to call `Zlib#close()` as the handle is automatically
  // closed when an error is emitted.
  //
  this[kPerMessageDeflate]._inflate = null;
  err[kStatusCode] = 1007;
  this[kCallback](err);
}


/***/ }),

/***/ 2516:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {



const { Writable } = __nccwpck_require__(2781);

const PerMessageDeflate = __nccwpck_require__(1721);
const {
  BINARY_TYPES,
  EMPTY_BUFFER,
  kStatusCode,
  kWebSocket
} = __nccwpck_require__(3108);
const { concat, toArrayBuffer, unmask } = __nccwpck_require__(5888);
const { isValidStatusCode, isValidUTF8 } = __nccwpck_require__(88);

const GET_INFO = 0;
const GET_PAYLOAD_LENGTH_16 = 1;
const GET_PAYLOAD_LENGTH_64 = 2;
const GET_MASK = 3;
const GET_DATA = 4;
const INFLATING = 5;

/**
 * HyBi Receiver implementation.
 *
 * @extends Writable
 */
class Receiver extends Writable {
  /**
   * Creates a Receiver instance.
   *
   * @param {Object} [options] Options object
   * @param {String} [options.binaryType=nodebuffer] The type for binary data
   * @param {Object} [options.extensions] An object containing the negotiated
   *     extensions
   * @param {Boolean} [options.isServer=false] Specifies whether to operate in
   *     client or server mode
   * @param {Number} [options.maxPayload=0] The maximum allowed message length
   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or
   *     not to skip UTF-8 validation for text and close messages
   */
  constructor(options = {}) {
    super();

    this._binaryType = options.binaryType || BINARY_TYPES[0];
    this._extensions = options.extensions || {};
    this._isServer = !!options.isServer;
    this._maxPayload = options.maxPayload | 0;
    this._skipUTF8Validation = !!options.skipUTF8Validation;
    this[kWebSocket] = undefined;

    this._bufferedBytes = 0;
    this._buffers = [];

    this._compressed = false;
    this._payloadLength = 0;
    this._mask = undefined;
    this._fragmented = 0;
    this._masked = false;
    this._fin = false;
    this._opcode = 0;

    this._totalPayloadLength = 0;
    this._messageLength = 0;
    this._fragments = [];

    this._state = GET_INFO;
    this._loop = false;
  }

  /**
   * Implements `Writable.prototype._write()`.
   *
   * @param {Buffer} chunk The chunk of data to write
   * @param {String} encoding The character encoding of `chunk`
   * @param {Function} cb Callback
   * @private
   */
  _write(chunk, encoding, cb) {
    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();

    this._bufferedBytes += chunk.length;
    this._buffers.push(chunk);
    this.startLoop(cb);
  }

  /**
   * Consumes `n` bytes from the buffered data.
   *
   * @param {Number} n The number of bytes to consume
   * @return {Buffer} The consumed bytes
   * @private
   */
  consume(n) {
    this._bufferedBytes -= n;

    if (n === this._buffers[0].length) return this._buffers.shift();

    if (n < this._buffers[0].length) {
      const buf = this._buffers[0];
      this._buffers[0] = buf.slice(n);
      return buf.slice(0, n);
    }

    const dst = Buffer.allocUnsafe(n);

    do {
      const buf = this._buffers[0];
      const offset = dst.length - n;

      if (n >= buf.length) {
        dst.set(this._buffers.shift(), offset);
      } else {
        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);
        this._buffers[0] = buf.slice(n);
      }

      n -= buf.length;
    } while (n > 0);

    return dst;
  }

  /**
   * Starts the parsing loop.
   *
   * @param {Function} cb Callback
   * @private
   */
  startLoop(cb) {
    let err;
    this._loop = true;

    do {
      switch (this._state) {
        case GET_INFO:
          err = this.getInfo();
          break;
        case GET_PAYLOAD_LENGTH_16:
          err = this.getPayloadLength16();
          break;
        case GET_PAYLOAD_LENGTH_64:
          err = this.getPayloadLength64();
          break;
        case GET_MASK:
          this.getMask();
          break;
        case GET_DATA:
          err = this.getData(cb);
          break;
        default:
          // `INFLATING`
          this._loop = false;
          return;
      }
    } while (this._loop);

    cb(err);
  }

  /**
   * Reads the first two bytes of a frame.
   *
   * @return {(RangeError|undefined)} A possible error
   * @private
   */
  getInfo() {
    if (this._bufferedBytes < 2) {
      this._loop = false;
      return;
    }

    const buf = this.consume(2);

    if ((buf[0] & 0x30) !== 0x00) {
      this._loop = false;
      return error(
        RangeError,
        'RSV2 and RSV3 must be clear',
        true,
        1002,
        'WS_ERR_UNEXPECTED_RSV_2_3'
      );
    }

    const compressed = (buf[0] & 0x40) === 0x40;

    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {
      this._loop = false;
      return error(
        RangeError,
        'RSV1 must be clear',
        true,
        1002,
        'WS_ERR_UNEXPECTED_RSV_1'
      );
    }

    this._fin = (buf[0] & 0x80) === 0x80;
    this._opcode = buf[0] & 0x0f;
    this._payloadLength = buf[1] & 0x7f;

    if (this._opcode === 0x00) {
      if (compressed) {
        this._loop = false;
        return error(
          RangeError,
          'RSV1 must be clear',
          true,
          1002,
          'WS_ERR_UNEXPECTED_RSV_1'
        );
      }

      if (!this._fragmented) {
        this._loop = false;
        return error(
          RangeError,
          'invalid opcode 0',
          true,
          1002,
          'WS_ERR_INVALID_OPCODE'
        );
      }

      this._opcode = this._fragmented;
    } else if (this._opcode === 0x01 || this._opcode === 0x02) {
      if (this._fragmented) {
        this._loop = false;
        return error(
          RangeError,
          `invalid opcode ${this._opcode}`,
          true,
          1002,
          'WS_ERR_INVALID_OPCODE'
        );
      }

      this._compressed = compressed;
    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {
      if (!this._fin) {
        this._loop = false;
        return error(
          RangeError,
          'FIN must be set',
          true,
          1002,
          'WS_ERR_EXPECTED_FIN'
        );
      }

      if (compressed) {
        this._loop = false;
        return error(
          RangeError,
          'RSV1 must be clear',
          true,
          1002,
          'WS_ERR_UNEXPECTED_RSV_1'
        );
      }

      if (this._payloadLength > 0x7d) {
        this._loop = false;
        return error(
          RangeError,
          `invalid payload length ${this._payloadLength}`,
          true,
          1002,
          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'
        );
      }
    } else {
      this._loop = false;
      return error(
        RangeError,
        `invalid opcode ${this._opcode}`,
        true,
        1002,
        'WS_ERR_INVALID_OPCODE'
      );
    }

    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;
    this._masked = (buf[1] & 0x80) === 0x80;

    if (this._isServer) {
      if (!this._masked) {
        this._loop = false;
        return error(
          RangeError,
          'MASK must be set',
          true,
          1002,
          'WS_ERR_EXPECTED_MASK'
        );
      }
    } else if (this._masked) {
      this._loop = false;
      return error(
        RangeError,
        'MASK must be clear',
        true,
        1002,
        'WS_ERR_UNEXPECTED_MASK'
      );
    }

    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;
    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;
    else return this.haveLength();
  }

  /**
   * Gets extended payload length (7+16).
   *
   * @return {(RangeError|undefined)} A possible error
   * @private
   */
  getPayloadLength16() {
    if (this._bufferedBytes < 2) {
      this._loop = false;
      return;
    }

    this._payloadLength = this.consume(2).readUInt16BE(0);
    return this.haveLength();
  }

  /**
   * Gets extended payload length (7+64).
   *
   * @return {(RangeError|undefined)} A possible error
   * @private
   */
  getPayloadLength64() {
    if (this._bufferedBytes < 8) {
      this._loop = false;
      return;
    }

    const buf = this.consume(8);
    const num = buf.readUInt32BE(0);

    //
    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned
    // if payload length is greater than this number.
    //
    if (num > Math.pow(2, 53 - 32) - 1) {
      this._loop = false;
      return error(
        RangeError,
        'Unsupported WebSocket frame: payload length > 2^53 - 1',
        false,
        1009,
        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'
      );
    }

    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);
    return this.haveLength();
  }

  /**
   * Payload length has been read.
   *
   * @return {(RangeError|undefined)} A possible error
   * @private
   */
  haveLength() {
    if (this._payloadLength && this._opcode < 0x08) {
      this._totalPayloadLength += this._payloadLength;
      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {
        this._loop = false;
        return error(
          RangeError,
          'Max payload size exceeded',
          false,
          1009,
          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'
        );
      }
    }

    if (this._masked) this._state = GET_MASK;
    else this._state = GET_DATA;
  }

  /**
   * Reads mask bytes.
   *
   * @private
   */
  getMask() {
    if (this._bufferedBytes < 4) {
      this._loop = false;
      return;
    }

    this._mask = this.consume(4);
    this._state = GET_DATA;
  }

  /**
   * Reads data bytes.
   *
   * @param {Function} cb Callback
   * @return {(Error|RangeError|undefined)} A possible error
   * @private
   */
  getData(cb) {
    let data = EMPTY_BUFFER;

    if (this._payloadLength) {
      if (this._bufferedBytes < this._payloadLength) {
        this._loop = false;
        return;
      }

      data = this.consume(this._payloadLength);

      if (
        this._masked &&
        (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0
      ) {
        unmask(data, this._mask);
      }
    }

    if (this._opcode > 0x07) return this.controlMessage(data);

    if (this._compressed) {
      this._state = INFLATING;
      this.decompress(data, cb);
      return;
    }

    if (data.length) {
      //
      // This message is not compressed so its length is the sum of the payload
      // length of all fragments.
      //
      this._messageLength = this._totalPayloadLength;
      this._fragments.push(data);
    }

    return this.dataMessage();
  }

  /**
   * Decompresses data.
   *
   * @param {Buffer} data Compressed data
   * @param {Function} cb Callback
   * @private
   */
  decompress(data, cb) {
    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];

    perMessageDeflate.decompress(data, this._fin, (err, buf) => {
      if (err) return cb(err);

      if (buf.length) {
        this._messageLength += buf.length;
        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {
          return cb(
            error(
              RangeError,
              'Max payload size exceeded',
              false,
              1009,
              'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'
            )
          );
        }

        this._fragments.push(buf);
      }

      const er = this.dataMessage();
      if (er) return cb(er);

      this.startLoop(cb);
    });
  }

  /**
   * Handles a data message.
   *
   * @return {(Error|undefined)} A possible error
   * @private
   */
  dataMessage() {
    if (this._fin) {
      const messageLength = this._messageLength;
      const fragments = this._fragments;

      this._totalPayloadLength = 0;
      this._messageLength = 0;
      this._fragmented = 0;
      this._fragments = [];

      if (this._opcode === 2) {
        let data;

        if (this._binaryType === 'nodebuffer') {
          data = concat(fragments, messageLength);
        } else if (this._binaryType === 'arraybuffer') {
          data = toArrayBuffer(concat(fragments, messageLength));
        } else {
          data = fragments;
        }

        this.emit('message', data, true);
      } else {
        const buf = concat(fragments, messageLength);

        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {
          this._loop = false;
          return error(
            Error,
            'invalid UTF-8 sequence',
            true,
            1007,
            'WS_ERR_INVALID_UTF8'
          );
        }

        this.emit('message', buf, false);
      }
    }

    this._state = GET_INFO;
  }

  /**
   * Handles a control message.
   *
   * @param {Buffer} data Data to handle
   * @return {(Error|RangeError|undefined)} A possible error
   * @private
   */
  controlMessage(data) {
    if (this._opcode === 0x08) {
      this._loop = false;

      if (data.length === 0) {
        this.emit('conclude', 1005, EMPTY_BUFFER);
        this.end();
      } else if (data.length === 1) {
        return error(
          RangeError,
          'invalid payload length 1',
          true,
          1002,
          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'
        );
      } else {
        const code = data.readUInt16BE(0);

        if (!isValidStatusCode(code)) {
          return error(
            RangeError,
            `invalid status code ${code}`,
            true,
            1002,
            'WS_ERR_INVALID_CLOSE_CODE'
          );
        }

        const buf = data.slice(2);

        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {
          return error(
            Error,
            'invalid UTF-8 sequence',
            true,
            1007,
            'WS_ERR_INVALID_UTF8'
          );
        }

        this.emit('conclude', code, buf);
        this.end();
      }
    } else if (this._opcode === 0x09) {
      this.emit('ping', data);
    } else {
      this.emit('pong', data);
    }

    this._state = GET_INFO;
  }
}

module.exports = Receiver;

/**
 * Builds an error object.
 *
 * @param {function(new:Error|RangeError)} ErrorCtor The error constructor
 * @param {String} message The error message
 * @param {Boolean} prefix Specifies whether or not to add a default prefix to
 *     `message`
 * @param {Number} statusCode The status code
 * @param {String} errorCode The exposed error code
 * @return {(Error|RangeError)} The error
 * @private
 */
function error(ErrorCtor, message, prefix, statusCode, errorCode) {
  const err = new ErrorCtor(
    prefix ? `Invalid WebSocket frame: ${message}` : message
  );

  Error.captureStackTrace(err, error);
  err.code = errorCode;
  err[kStatusCode] = statusCode;
  return err;
}


/***/ }),

/***/ 5353:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

/* eslint no-unused-vars: ["error", { "varsIgnorePattern": "^net|tls$" }] */



const net = __nccwpck_require__(1808);
const tls = __nccwpck_require__(4404);
const { randomFillSync } = __nccwpck_require__(6113);

const PerMessageDeflate = __nccwpck_require__(1721);
const { EMPTY_BUFFER } = __nccwpck_require__(3108);
const { isValidStatusCode } = __nccwpck_require__(88);
const { mask: applyMask, toBuffer } = __nccwpck_require__(5888);

const kByteLength = Symbol('kByteLength');
const maskBuffer = Buffer.alloc(4);

/**
 * HyBi Sender implementation.
 */
class Sender {
  /**
   * Creates a Sender instance.
   *
   * @param {(net.Socket|tls.Socket)} socket The connection socket
   * @param {Object} [extensions] An object containing the negotiated extensions
   * @param {Function} [generateMask] The function used to generate the masking
   *     key
   */
  constructor(socket, extensions, generateMask) {
    this._extensions = extensions || {};

    if (generateMask) {
      this._generateMask = generateMask;
      this._maskBuffer = Buffer.alloc(4);
    }

    this._socket = socket;

    this._firstFragment = true;
    this._compress = false;

    this._bufferedBytes = 0;
    this._deflating = false;
    this._queue = [];
  }

  /**
   * Frames a piece of data according to the HyBi WebSocket protocol.
   *
   * @param {(Buffer|String)} data The data to frame
   * @param {Object} options Options object
   * @param {Boolean} [options.fin=false] Specifies whether or not to set the
   *     FIN bit
   * @param {Function} [options.generateMask] The function used to generate the
   *     masking key
   * @param {Boolean} [options.mask=false] Specifies whether or not to mask
   *     `data`
   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking
   *     key
   * @param {Number} options.opcode The opcode
   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be
   *     modified
   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the
   *     RSV1 bit
   * @return {(Buffer|String)[]} The framed data
   * @public
   */
  static frame(data, options) {
    let mask;
    let merge = false;
    let offset = 2;
    let skipMasking = false;

    if (options.mask) {
      mask = options.maskBuffer || maskBuffer;

      if (options.generateMask) {
        options.generateMask(mask);
      } else {
        randomFillSync(mask, 0, 4);
      }

      skipMasking = (mask[0] | mask[1] | mask[2] | mask[3]) === 0;
      offset = 6;
    }

    let dataLength;

    if (typeof data === 'string') {
      if (
        (!options.mask || skipMasking) &&
        options[kByteLength] !== undefined
      ) {
        dataLength = options[kByteLength];
      } else {
        data = Buffer.from(data);
        dataLength = data.length;
      }
    } else {
      dataLength = data.length;
      merge = options.mask && options.readOnly && !skipMasking;
    }

    let payloadLength = dataLength;

    if (dataLength >= 65536) {
      offset += 8;
      payloadLength = 127;
    } else if (dataLength > 125) {
      offset += 2;
      payloadLength = 126;
    }

    const target = Buffer.allocUnsafe(merge ? dataLength + offset : offset);

    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;
    if (options.rsv1) target[0] |= 0x40;

    target[1] = payloadLength;

    if (payloadLength === 126) {
      target.writeUInt16BE(dataLength, 2);
    } else if (payloadLength === 127) {
      target[2] = target[3] = 0;
      target.writeUIntBE(dataLength, 4, 6);
    }

    if (!options.mask) return [target, data];

    target[1] |= 0x80;
    target[offset - 4] = mask[0];
    target[offset - 3] = mask[1];
    target[offset - 2] = mask[2];
    target[offset - 1] = mask[3];

    if (skipMasking) return [target, data];

    if (merge) {
      applyMask(data, mask, target, offset, dataLength);
      return [target];
    }

    applyMask(data, mask, data, 0, dataLength);
    return [target, data];
  }

  /**
   * Sends a close message to the other peer.
   *
   * @param {Number} [code] The status code component of the body
   * @param {(String|Buffer)} [data] The message component of the body
   * @param {Boolean} [mask=false] Specifies whether or not to mask the message
   * @param {Function} [cb] Callback
   * @public
   */
  close(code, data, mask, cb) {
    let buf;

    if (code === undefined) {
      buf = EMPTY_BUFFER;
    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {
      throw new TypeError('First argument must be a valid error code number');
    } else if (data === undefined || !data.length) {
      buf = Buffer.allocUnsafe(2);
      buf.writeUInt16BE(code, 0);
    } else {
      const length = Buffer.byteLength(data);

      if (length > 123) {
        throw new RangeError('The message must not be greater than 123 bytes');
      }

      buf = Buffer.allocUnsafe(2 + length);
      buf.writeUInt16BE(code, 0);

      if (typeof data === 'string') {
        buf.write(data, 2);
      } else {
        buf.set(data, 2);
      }
    }

    const options = {
      [kByteLength]: buf.length,
      fin: true,
      generateMask: this._generateMask,
      mask,
      maskBuffer: this._maskBuffer,
      opcode: 0x08,
      readOnly: false,
      rsv1: false
    };

    if (this._deflating) {
      this.enqueue([this.dispatch, buf, false, options, cb]);
    } else {
      this.sendFrame(Sender.frame(buf, options), cb);
    }
  }

  /**
   * Sends a ping message to the other peer.
   *
   * @param {*} data The message to send
   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`
   * @param {Function} [cb] Callback
   * @public
   */
  ping(data, mask, cb) {
    let byteLength;
    let readOnly;

    if (typeof data === 'string') {
      byteLength = Buffer.byteLength(data);
      readOnly = false;
    } else {
      data = toBuffer(data);
      byteLength = data.length;
      readOnly = toBuffer.readOnly;
    }

    if (byteLength > 125) {
      throw new RangeError('The data size must not be greater than 125 bytes');
    }

    const options = {
      [kByteLength]: byteLength,
      fin: true,
      generateMask: this._generateMask,
      mask,
      maskBuffer: this._maskBuffer,
      opcode: 0x09,
      readOnly,
      rsv1: false
    };

    if (this._deflating) {
      this.enqueue([this.dispatch, data, false, options, cb]);
    } else {
      this.sendFrame(Sender.frame(data, options), cb);
    }
  }

  /**
   * Sends a pong message to the other peer.
   *
   * @param {*} data The message to send
   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`
   * @param {Function} [cb] Callback
   * @public
   */
  pong(data, mask, cb) {
    let byteLength;
    let readOnly;

    if (typeof data === 'string') {
      byteLength = Buffer.byteLength(data);
      readOnly = false;
    } else {
      data = toBuffer(data);
      byteLength = data.length;
      readOnly = toBuffer.readOnly;
    }

    if (byteLength > 125) {
      throw new RangeError('The data size must not be greater than 125 bytes');
    }

    const options = {
      [kByteLength]: byteLength,
      fin: true,
      generateMask: this._generateMask,
      mask,
      maskBuffer: this._maskBuffer,
      opcode: 0x0a,
      readOnly,
      rsv1: false
    };

    if (this._deflating) {
      this.enqueue([this.dispatch, data, false, options, cb]);
    } else {
      this.sendFrame(Sender.frame(data, options), cb);
    }
  }

  /**
   * Sends a data message to the other peer.
   *
   * @param {*} data The message to send
   * @param {Object} options Options object
   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary
   *     or text
   * @param {Boolean} [options.compress=false] Specifies whether or not to
   *     compress `data`
   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the
   *     last one
   * @param {Boolean} [options.mask=false] Specifies whether or not to mask
   *     `data`
   * @param {Function} [cb] Callback
   * @public
   */
  send(data, options, cb) {
    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];
    let opcode = options.binary ? 2 : 1;
    let rsv1 = options.compress;

    let byteLength;
    let readOnly;

    if (typeof data === 'string') {
      byteLength = Buffer.byteLength(data);
      readOnly = false;
    } else {
      data = toBuffer(data);
      byteLength = data.length;
      readOnly = toBuffer.readOnly;
    }

    if (this._firstFragment) {
      this._firstFragment = false;
      if (
        rsv1 &&
        perMessageDeflate &&
        perMessageDeflate.params[
          perMessageDeflate._isServer
            ? 'server_no_context_takeover'
            : 'client_no_context_takeover'
        ]
      ) {
        rsv1 = byteLength >= perMessageDeflate._threshold;
      }
      this._compress = rsv1;
    } else {
      rsv1 = false;
      opcode = 0;
    }

    if (options.fin) this._firstFragment = true;

    if (perMessageDeflate) {
      const opts = {
        [kByteLength]: byteLength,
        fin: options.fin,
        generateMask: this._generateMask,
        mask: options.mask,
        maskBuffer: this._maskBuffer,
        opcode,
        readOnly,
        rsv1
      };

      if (this._deflating) {
        this.enqueue([this.dispatch, data, this._compress, opts, cb]);
      } else {
        this.dispatch(data, this._compress, opts, cb);
      }
    } else {
      this.sendFrame(
        Sender.frame(data, {
          [kByteLength]: byteLength,
          fin: options.fin,
          generateMask: this._generateMask,
          mask: options.mask,
          maskBuffer: this._maskBuffer,
          opcode,
          readOnly,
          rsv1: false
        }),
        cb
      );
    }
  }

  /**
   * Dispatches a message.
   *
   * @param {(Buffer|String)} data The message to send
   * @param {Boolean} [compress=false] Specifies whether or not to compress
   *     `data`
   * @param {Object} options Options object
   * @param {Boolean} [options.fin=false] Specifies whether or not to set the
   *     FIN bit
   * @param {Function} [options.generateMask] The function used to generate the
   *     masking key
   * @param {Boolean} [options.mask=false] Specifies whether or not to mask
   *     `data`
   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking
   *     key
   * @param {Number} options.opcode The opcode
   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be
   *     modified
   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the
   *     RSV1 bit
   * @param {Function} [cb] Callback
   * @private
   */
  dispatch(data, compress, options, cb) {
    if (!compress) {
      this.sendFrame(Sender.frame(data, options), cb);
      return;
    }

    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];

    this._bufferedBytes += options[kByteLength];
    this._deflating = true;
    perMessageDeflate.compress(data, options.fin, (_, buf) => {
      if (this._socket.destroyed) {
        const err = new Error(
          'The socket was closed while data was being compressed'
        );

        if (typeof cb === 'function') cb(err);

        for (let i = 0; i < this._queue.length; i++) {
          const params = this._queue[i];
          const callback = params[params.length - 1];

          if (typeof callback === 'function') callback(err);
        }

        return;
      }

      this._bufferedBytes -= options[kByteLength];
      this._deflating = false;
      options.readOnly = false;
      this.sendFrame(Sender.frame(buf, options), cb);
      this.dequeue();
    });
  }

  /**
   * Executes queued send operations.
   *
   * @private
   */
  dequeue() {
    while (!this._deflating && this._queue.length) {
      const params = this._queue.shift();

      this._bufferedBytes -= params[3][kByteLength];
      Reflect.apply(params[0], this, params.slice(1));
    }
  }

  /**
   * Enqueues a send operation.
   *
   * @param {Array} params Send operation parameters.
   * @private
   */
  enqueue(params) {
    this._bufferedBytes += params[3][kByteLength];
    this._queue.push(params);
  }

  /**
   * Sends a frame.
   *
   * @param {Buffer[]} list The frame to send
   * @param {Function} [cb] Callback
   * @private
   */
  sendFrame(list, cb) {
    if (list.length === 2) {
      this._socket.cork();
      this._socket.write(list[0]);
      this._socket.write(list[1], cb);
      this._socket.uncork();
    } else {
      this._socket.write(list[0], cb);
    }
  }
}

module.exports = Sender;


/***/ }),

/***/ 4286:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {



const { Duplex } = __nccwpck_require__(2781);

/**
 * Emits the `'close'` event on a stream.
 *
 * @param {Duplex} stream The stream.
 * @private
 */
function emitClose(stream) {
  stream.emit('close');
}

/**
 * The listener of the `'end'` event.
 *
 * @private
 */
function duplexOnEnd() {
  if (!this.destroyed && this._writableState.finished) {
    this.destroy();
  }
}

/**
 * The listener of the `'error'` event.
 *
 * @param {Error} err The error
 * @private
 */
function duplexOnError(err) {
  this.removeListener('error', duplexOnError);
  this.destroy();
  if (this.listenerCount('error') === 0) {
    // Do not suppress the throwing behavior.
    this.emit('error', err);
  }
}

/**
 * Wraps a `WebSocket` in a duplex stream.
 *
 * @param {WebSocket} ws The `WebSocket` to wrap
 * @param {Object} [options] The options for the `Duplex` constructor
 * @return {Duplex} The duplex stream
 * @public
 */
function createWebSocketStream(ws, options) {
  let terminateOnDestroy = true;

  const duplex = new Duplex({
    ...options,
    autoDestroy: false,
    emitClose: false,
    objectMode: false,
    writableObjectMode: false
  });

  ws.on('message', function message(msg, isBinary) {
    const data =
      !isBinary && duplex._readableState.objectMode ? msg.toString() : msg;

    if (!duplex.push(data)) ws.pause();
  });

  ws.once('error', function error(err) {
    if (duplex.destroyed) return;

    // Prevent `ws.terminate()` from being called by `duplex._destroy()`.
    //
    // - If the `'error'` event is emitted before the `'open'` event, then
    //   `ws.terminate()` is a noop as no socket is assigned.
    // - Otherwise, the error is re-emitted by the listener of the `'error'`
    //   event of the `Receiver` object. The listener already closes the
    //   connection by calling `ws.close()`. This allows a close frame to be
    //   sent to the other peer. If `ws.terminate()` is called right after this,
    //   then the close frame might not be sent.
    terminateOnDestroy = false;
    duplex.destroy(err);
  });

  ws.once('close', function close() {
    if (duplex.destroyed) return;

    duplex.push(null);
  });

  duplex._destroy = function (err, callback) {
    if (ws.readyState === ws.CLOSED) {
      callback(err);
      process.nextTick(emitClose, duplex);
      return;
    }

    let called = false;

    ws.once('error', function error(err) {
      called = true;
      callback(err);
    });

    ws.once('close', function close() {
      if (!called) callback(err);
      process.nextTick(emitClose, duplex);
    });

    if (terminateOnDestroy) ws.terminate();
  };

  duplex._final = function (callback) {
    if (ws.readyState === ws.CONNECTING) {
      ws.once('open', function open() {
        duplex._final(callback);
      });
      return;
    }

    // If the value of the `_socket` property is `null` it means that `ws` is a
    // client websocket and the handshake failed. In fact, when this happens, a
    // socket is never assigned to the websocket. Wait for the `'error'` event
    // that will be emitted by the websocket.
    if (ws._socket === null) return;

    if (ws._socket._writableState.finished) {
      callback();
      if (duplex._readableState.endEmitted) duplex.destroy();
    } else {
      ws._socket.once('finish', function finish() {
        // `duplex` is not destroyed here because the `'end'` event will be
        // emitted on `duplex` after this `'finish'` event. The EOF signaling
        // `null` chunk is, in fact, pushed when the websocket emits `'close'`.
        callback();
      });
      ws.close();
    }
  };

  duplex._read = function () {
    if (ws.isPaused) ws.resume();
  };

  duplex._write = function (chunk, encoding, callback) {
    if (ws.readyState === ws.CONNECTING) {
      ws.once('open', function open() {
        duplex._write(chunk, encoding, callback);
      });
      return;
    }

    ws.send(chunk, callback);
  };

  duplex.on('end', duplexOnEnd);
  duplex.on('error', duplexOnError);
  return duplex;
}

module.exports = createWebSocketStream;


/***/ }),

/***/ 7356:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {



const { tokenChars } = __nccwpck_require__(88);

/**
 * Parses the `Sec-WebSocket-Protocol` header into a set of subprotocol names.
 *
 * @param {String} header The field value of the header
 * @return {Set} The subprotocol names
 * @public
 */
function parse(header) {
  const protocols = new Set();
  let start = -1;
  let end = -1;
  let i = 0;

  for (i; i < header.length; i++) {
    const code = header.charCodeAt(i);

    if (end === -1 && tokenChars[code] === 1) {
      if (start === -1) start = i;
    } else if (
      i !== 0 &&
      (code === 0x20 /* ' ' */ || code === 0x09) /* '\t' */
    ) {
      if (end === -1 && start !== -1) end = i;
    } else if (code === 0x2c /* ',' */) {
      if (start === -1) {
        throw new SyntaxError(`Unexpected character at index ${i}`);
      }

      if (end === -1) end = i;

      const protocol = header.slice(start, end);

      if (protocols.has(protocol)) {
        throw new SyntaxError(`The "${protocol}" subprotocol is duplicated`);
      }

      protocols.add(protocol);
      start = end = -1;
    } else {
      throw new SyntaxError(`Unexpected character at index ${i}`);
    }
  }

  if (start === -1 || end !== -1) {
    throw new SyntaxError('Unexpected end of input');
  }

  const protocol = header.slice(start, i);

  if (protocols.has(protocol)) {
    throw new SyntaxError(`The "${protocol}" subprotocol is duplicated`);
  }

  protocols.add(protocol);
  return protocols;
}

module.exports = { parse };


/***/ }),

/***/ 88:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {



//
// Allowed token characters:
//
// '!', '#', '$', '%', '&', ''', '*', '+', '-',
// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'
//
// tokenChars[32] === 0 // ' '
// tokenChars[33] === 1 // '!'
// tokenChars[34] === 0 // '"'
// ...
//
// prettier-ignore
const tokenChars = [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31
  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63
  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127
];

/**
 * Checks if a status code is allowed in a close frame.
 *
 * @param {Number} code The status code
 * @return {Boolean} `true` if the status code is valid, else `false`
 * @public
 */
function isValidStatusCode(code) {
  return (
    (code >= 1000 &&
      code <= 1014 &&
      code !== 1004 &&
      code !== 1005 &&
      code !== 1006) ||
    (code >= 3000 && code <= 4999)
  );
}

/**
 * Checks if a given buffer contains only correct UTF-8.
 * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by
 * Markus Kuhn.
 *
 * @param {Buffer} buf The buffer to check
 * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`
 * @public
 */
function _isValidUTF8(buf) {
  const len = buf.length;
  let i = 0;

  while (i < len) {
    if ((buf[i] & 0x80) === 0) {
      // 0xxxxxxx
      i++;
    } else if ((buf[i] & 0xe0) === 0xc0) {
      // 110xxxxx 10xxxxxx
      if (
        i + 1 === len ||
        (buf[i + 1] & 0xc0) !== 0x80 ||
        (buf[i] & 0xfe) === 0xc0 // Overlong
      ) {
        return false;
      }

      i += 2;
    } else if ((buf[i] & 0xf0) === 0xe0) {
      // 1110xxxx 10xxxxxx 10xxxxxx
      if (
        i + 2 >= len ||
        (buf[i + 1] & 0xc0) !== 0x80 ||
        (buf[i + 2] & 0xc0) !== 0x80 ||
        (buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80) || // Overlong
        (buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0) // Surrogate (U+D800 - U+DFFF)
      ) {
        return false;
      }

      i += 3;
    } else if ((buf[i] & 0xf8) === 0xf0) {
      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx
      if (
        i + 3 >= len ||
        (buf[i + 1] & 0xc0) !== 0x80 ||
        (buf[i + 2] & 0xc0) !== 0x80 ||
        (buf[i + 3] & 0xc0) !== 0x80 ||
        (buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80) || // Overlong
        (buf[i] === 0xf4 && buf[i + 1] > 0x8f) ||
        buf[i] > 0xf4 // > U+10FFFF
      ) {
        return false;
      }

      i += 4;
    } else {
      return false;
    }
  }

  return true;
}

module.exports = {
  isValidStatusCode,
  isValidUTF8: _isValidUTF8,
  tokenChars
};

/* istanbul ignore else  */
if (!process.env.WS_NO_UTF_8_VALIDATE) {
  try {
    const isValidUTF8 = __nccwpck_require__(4592);

    module.exports.isValidUTF8 = function (buf) {
      return buf.length < 150 ? _isValidUTF8(buf) : isValidUTF8(buf);
    };
  } catch (e) {
    // Continue regardless of the error.
  }
}


/***/ }),

/***/ 4137:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

/* eslint no-unused-vars: ["error", { "varsIgnorePattern": "^net|tls|https$" }] */



const EventEmitter = __nccwpck_require__(2361);
const http = __nccwpck_require__(3685);
const https = __nccwpck_require__(5687);
const net = __nccwpck_require__(1808);
const tls = __nccwpck_require__(4404);
const { createHash } = __nccwpck_require__(6113);

const extension = __nccwpck_require__(4975);
const PerMessageDeflate = __nccwpck_require__(1721);
const subprotocol = __nccwpck_require__(7356);
const WebSocket = __nccwpck_require__(9870);
const { GUID, kWebSocket } = __nccwpck_require__(3108);

const keyRegex = /^[+/0-9A-Za-z]{22}==$/;

const RUNNING = 0;
const CLOSING = 1;
const CLOSED = 2;

/**
 * Class representing a WebSocket server.
 *
 * @extends EventEmitter
 */
class WebSocketServer extends EventEmitter {
  /**
   * Create a `WebSocketServer` instance.
   *
   * @param {Object} options Configuration options
   * @param {Number} [options.backlog=511] The maximum length of the queue of
   *     pending connections
   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to
   *     track clients
   * @param {Function} [options.handleProtocols] A hook to handle protocols
   * @param {String} [options.host] The hostname where to bind the server
   * @param {Number} [options.maxPayload=104857600] The maximum allowed message
   *     size
   * @param {Boolean} [options.noServer=false] Enable no server mode
   * @param {String} [options.path] Accept only connections matching this path
   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable
   *     permessage-deflate
   * @param {Number} [options.port] The port where to bind the server
   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S
   *     server to use
   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or
   *     not to skip UTF-8 validation for text and close messages
   * @param {Function} [options.verifyClient] A hook to reject connections
   * @param {Function} [options.WebSocket=WebSocket] Specifies the `WebSocket`
   *     class to use. It must be the `WebSocket` class or class that extends it
   * @param {Function} [callback] A listener for the `listening` event
   */
  constructor(options, callback) {
    super();

    options = {
      maxPayload: 100 * 1024 * 1024,
      skipUTF8Validation: false,
      perMessageDeflate: false,
      handleProtocols: null,
      clientTracking: true,
      verifyClient: null,
      noServer: false,
      backlog: null, // use default (511 as implemented in net.js)
      server: null,
      host: null,
      path: null,
      port: null,
      WebSocket,
      ...options
    };

    if (
      (options.port == null && !options.server && !options.noServer) ||
      (options.port != null && (options.server || options.noServer)) ||
      (options.server && options.noServer)
    ) {
      throw new TypeError(
        'One and only one of the "port", "server", or "noServer" options ' +
          'must be specified'
      );
    }

    if (options.port != null) {
      this._server = http.createServer((req, res) => {
        const body = http.STATUS_CODES[426];

        res.writeHead(426, {
          'Content-Length': body.length,
          'Content-Type': 'text/plain'
        });
        res.end(body);
      });
      this._server.listen(
        options.port,
        options.host,
        options.backlog,
        callback
      );
    } else if (options.server) {
      this._server = options.server;
    }

    if (this._server) {
      const emitConnection = this.emit.bind(this, 'connection');

      this._removeListeners = addListeners(this._server, {
        listening: this.emit.bind(this, 'listening'),
        error: this.emit.bind(this, 'error'),
        upgrade: (req, socket, head) => {
          this.handleUpgrade(req, socket, head, emitConnection);
        }
      });
    }

    if (options.perMessageDeflate === true) options.perMessageDeflate = {};
    if (options.clientTracking) {
      this.clients = new Set();
      this._shouldEmitClose = false;
    }

    this.options = options;
    this._state = RUNNING;
  }

  /**
   * Returns the bound address, the address family name, and port of the server
   * as reported by the operating system if listening on an IP socket.
   * If the server is listening on a pipe or UNIX domain socket, the name is
   * returned as a string.
   *
   * @return {(Object|String|null)} The address of the server
   * @public
   */
  address() {
    if (this.options.noServer) {
      throw new Error('The server is operating in "noServer" mode');
    }

    if (!this._server) return null;
    return this._server.address();
  }

  /**
   * Stop the server from accepting new connections and emit the `'close'` event
   * when all existing connections are closed.
   *
   * @param {Function} [cb] A one-time listener for the `'close'` event
   * @public
   */
  close(cb) {
    if (this._state === CLOSED) {
      if (cb) {
        this.once('close', () => {
          cb(new Error('The server is not running'));
        });
      }

      process.nextTick(emitClose, this);
      return;
    }

    if (cb) this.once('close', cb);

    if (this._state === CLOSING) return;
    this._state = CLOSING;

    if (this.options.noServer || this.options.server) {
      if (this._server) {
        this._removeListeners();
        this._removeListeners = this._server = null;
      }

      if (this.clients) {
        if (!this.clients.size) {
          process.nextTick(emitClose, this);
        } else {
          this._shouldEmitClose = true;
        }
      } else {
        process.nextTick(emitClose, this);
      }
    } else {
      const server = this._server;

      this._removeListeners();
      this._removeListeners = this._server = null;

      //
      // The HTTP/S server was created internally. Close it, and rely on its
      // `'close'` event.
      //
      server.close(() => {
        emitClose(this);
      });
    }
  }

  /**
   * See if a given request should be handled by this server instance.
   *
   * @param {http.IncomingMessage} req Request object to inspect
   * @return {Boolean} `true` if the request is valid, else `false`
   * @public
   */
  shouldHandle(req) {
    if (this.options.path) {
      const index = req.url.indexOf('?');
      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;

      if (pathname !== this.options.path) return false;
    }

    return true;
  }

  /**
   * Handle a HTTP Upgrade request.
   *
   * @param {http.IncomingMessage} req The request object
   * @param {(net.Socket|tls.Socket)} socket The network socket between the
   *     server and client
   * @param {Buffer} head The first packet of the upgraded stream
   * @param {Function} cb Callback
   * @public
   */
  handleUpgrade(req, socket, head, cb) {
    socket.on('error', socketOnError);

    const key = req.headers['sec-websocket-key'];
    const version = +req.headers['sec-websocket-version'];

    if (req.method !== 'GET') {
      const message = 'Invalid HTTP method';
      abortHandshakeOrEmitwsClientError(this, req, socket, 405, message);
      return;
    }

    if (req.headers.upgrade.toLowerCase() !== 'websocket') {
      const message = 'Invalid Upgrade header';
      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);
      return;
    }

    if (!key || !keyRegex.test(key)) {
      const message = 'Missing or invalid Sec-WebSocket-Key header';
      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);
      return;
    }

    if (version !== 8 && version !== 13) {
      const message = 'Missing or invalid Sec-WebSocket-Version header';
      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);
      return;
    }

    if (!this.shouldHandle(req)) {
      abortHandshake(socket, 400);
      return;
    }

    const secWebSocketProtocol = req.headers['sec-websocket-protocol'];
    let protocols = new Set();

    if (secWebSocketProtocol !== undefined) {
      try {
        protocols = subprotocol.parse(secWebSocketProtocol);
      } catch (err) {
        const message = 'Invalid Sec-WebSocket-Protocol header';
        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);
        return;
      }
    }

    const secWebSocketExtensions = req.headers['sec-websocket-extensions'];
    const extensions = {};

    if (
      this.options.perMessageDeflate &&
      secWebSocketExtensions !== undefined
    ) {
      const perMessageDeflate = new PerMessageDeflate(
        this.options.perMessageDeflate,
        true,
        this.options.maxPayload
      );

      try {
        const offers = extension.parse(secWebSocketExtensions);

        if (offers[PerMessageDeflate.extensionName]) {
          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);
          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;
        }
      } catch (err) {
        const message =
          'Invalid or unacceptable Sec-WebSocket-Extensions header';
        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);
        return;
      }
    }

    //
    // Optionally call external client verification handler.
    //
    if (this.options.verifyClient) {
      const info = {
        origin:
          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],
        secure: !!(req.socket.authorized || req.socket.encrypted),
        req
      };

      if (this.options.verifyClient.length === 2) {
        this.options.verifyClient(info, (verified, code, message, headers) => {
          if (!verified) {
            return abortHandshake(socket, code || 401, message, headers);
          }

          this.completeUpgrade(
            extensions,
            key,
            protocols,
            req,
            socket,
            head,
            cb
          );
        });
        return;
      }

      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);
    }

    this.completeUpgrade(extensions, key, protocols, req, socket, head, cb);
  }

  /**
   * Upgrade the connection to WebSocket.
   *
   * @param {Object} extensions The accepted extensions
   * @param {String} key The value of the `Sec-WebSocket-Key` header
   * @param {Set} protocols The subprotocols
   * @param {http.IncomingMessage} req The request object
   * @param {(net.Socket|tls.Socket)} socket The network socket between the
   *     server and client
   * @param {Buffer} head The first packet of the upgraded stream
   * @param {Function} cb Callback
   * @throws {Error} If called more than once with the same socket
   * @private
   */
  completeUpgrade(extensions, key, protocols, req, socket, head, cb) {
    //
    // Destroy the socket if the client has already sent a FIN packet.
    //
    if (!socket.readable || !socket.writable) return socket.destroy();

    if (socket[kWebSocket]) {
      throw new Error(
        'server.handleUpgrade() was called more than once with the same ' +
          'socket, possibly due to a misconfiguration'
      );
    }

    if (this._state > RUNNING) return abortHandshake(socket, 503);

    const digest = createHash('sha1')
      .update(key + GUID)
      .digest('base64');

    const headers = [
      'HTTP/1.1 101 Switching Protocols',
      'Upgrade: websocket',
      'Connection: Upgrade',
      `Sec-WebSocket-Accept: ${digest}`
    ];

    const ws = new this.options.WebSocket(null);

    if (protocols.size) {
      //
      // Optionally call external protocol selection handler.
      //
      const protocol = this.options.handleProtocols
        ? this.options.handleProtocols(protocols, req)
        : protocols.values().next().value;

      if (protocol) {
        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);
        ws._protocol = protocol;
      }
    }

    if (extensions[PerMessageDeflate.extensionName]) {
      const params = extensions[PerMessageDeflate.extensionName].params;
      const value = extension.format({
        [PerMessageDeflate.extensionName]: [params]
      });
      headers.push(`Sec-WebSocket-Extensions: ${value}`);
      ws._extensions = extensions;
    }

    //
    // Allow external modification/inspection of handshake headers.
    //
    this.emit('headers', headers, req);

    socket.write(headers.concat('\r\n').join('\r\n'));
    socket.removeListener('error', socketOnError);

    ws.setSocket(socket, head, {
      maxPayload: this.options.maxPayload,
      skipUTF8Validation: this.options.skipUTF8Validation
    });

    if (this.clients) {
      this.clients.add(ws);
      ws.on('close', () => {
        this.clients.delete(ws);

        if (this._shouldEmitClose && !this.clients.size) {
          process.nextTick(emitClose, this);
        }
      });
    }

    cb(ws, req);
  }
}

module.exports = WebSocketServer;

/**
 * Add event listeners on an `EventEmitter` using a map of <event, listener>
 * pairs.
 *
 * @param {EventEmitter} server The event emitter
 * @param {Object.<String, Function>} map The listeners to add
 * @return {Function} A function that will remove the added listeners when
 *     called
 * @private
 */
function addListeners(server, map) {
  for (const event of Object.keys(map)) server.on(event, map[event]);

  return function removeListeners() {
    for (const event of Object.keys(map)) {
      server.removeListener(event, map[event]);
    }
  };
}

/**
 * Emit a `'close'` event on an `EventEmitter`.
 *
 * @param {EventEmitter} server The event emitter
 * @private
 */
function emitClose(server) {
  server._state = CLOSED;
  server.emit('close');
}

/**
 * Handle socket errors.
 *
 * @private
 */
function socketOnError() {
  this.destroy();
}

/**
 * Close the connection when preconditions are not fulfilled.
 *
 * @param {(net.Socket|tls.Socket)} socket The socket of the upgrade request
 * @param {Number} code The HTTP response status code
 * @param {String} [message] The HTTP response body
 * @param {Object} [headers] Additional HTTP response headers
 * @private
 */
function abortHandshake(socket, code, message, headers) {
  //
  // The socket is writable unless the user destroyed or ended it before calling
  // `server.handleUpgrade()` or in the `verifyClient` function, which is a user
  // error. Handling this does not make much sense as the worst that can happen
  // is that some of the data written by the user might be discarded due to the
  // call to `socket.end()` below, which triggers an `'error'` event that in
  // turn causes the socket to be destroyed.
  //
  message = message || http.STATUS_CODES[code];
  headers = {
    Connection: 'close',
    'Content-Type': 'text/html',
    'Content-Length': Buffer.byteLength(message),
    ...headers
  };

  socket.once('finish', socket.destroy);

  socket.end(
    `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\r\n` +
      Object.keys(headers)
        .map((h) => `${h}: ${headers[h]}`)
        .join('\r\n') +
      '\r\n\r\n' +
      message
  );
}

/**
 * Emit a `'wsClientError'` event on a `WebSocketServer` if there is at least
 * one listener for it, otherwise call `abortHandshake()`.
 *
 * @param {WebSocketServer} server The WebSocket server
 * @param {http.IncomingMessage} req The request object
 * @param {(net.Socket|tls.Socket)} socket The socket of the upgrade request
 * @param {Number} code The HTTP response status code
 * @param {String} message The HTTP response body
 * @private
 */
function abortHandshakeOrEmitwsClientError(server, req, socket, code, message) {
  if (server.listenerCount('wsClientError')) {
    const err = new Error(message);
    Error.captureStackTrace(err, abortHandshakeOrEmitwsClientError);

    server.emit('wsClientError', err, socket, req);
  } else {
    abortHandshake(socket, code, message);
  }
}


/***/ }),

/***/ 9870:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

/* eslint no-unused-vars: ["error", { "varsIgnorePattern": "^Readable$" }] */



const EventEmitter = __nccwpck_require__(2361);
const https = __nccwpck_require__(5687);
const http = __nccwpck_require__(3685);
const net = __nccwpck_require__(1808);
const tls = __nccwpck_require__(4404);
const { randomBytes, createHash } = __nccwpck_require__(6113);
const { Readable } = __nccwpck_require__(2781);
const { URL } = __nccwpck_require__(7310);

const PerMessageDeflate = __nccwpck_require__(1721);
const Receiver = __nccwpck_require__(2516);
const Sender = __nccwpck_require__(5353);
const {
  BINARY_TYPES,
  EMPTY_BUFFER,
  GUID,
  kForOnEventAttribute,
  kListener,
  kStatusCode,
  kWebSocket,
  NOOP
} = __nccwpck_require__(3108);
const {
  EventTarget: { addEventListener, removeEventListener }
} = __nccwpck_require__(2450);
const { format, parse } = __nccwpck_require__(4975);
const { toBuffer } = __nccwpck_require__(5888);

const closeTimeout = 30 * 1000;
const kAborted = Symbol('kAborted');
const protocolVersions = [8, 13];
const readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];
const subprotocolRegex = /^[!#$%&'*+\-.0-9A-Z^_`|a-z~]+$/;

/**
 * Class representing a WebSocket.
 *
 * @extends EventEmitter
 */
class WebSocket extends EventEmitter {
  /**
   * Create a new `WebSocket`.
   *
   * @param {(String|URL)} address The URL to which to connect
   * @param {(String|String[])} [protocols] The subprotocols
   * @param {Object} [options] Connection options
   */
  constructor(address, protocols, options) {
    super();

    this._binaryType = BINARY_TYPES[0];
    this._closeCode = 1006;
    this._closeFrameReceived = false;
    this._closeFrameSent = false;
    this._closeMessage = EMPTY_BUFFER;
    this._closeTimer = null;
    this._extensions = {};
    this._paused = false;
    this._protocol = '';
    this._readyState = WebSocket.CONNECTING;
    this._receiver = null;
    this._sender = null;
    this._socket = null;

    if (address !== null) {
      this._bufferedAmount = 0;
      this._isServer = false;
      this._redirects = 0;

      if (protocols === undefined) {
        protocols = [];
      } else if (!Array.isArray(protocols)) {
        if (typeof protocols === 'object' && protocols !== null) {
          options = protocols;
          protocols = [];
        } else {
          protocols = [protocols];
        }
      }

      initAsClient(this, address, protocols, options);
    } else {
      this._isServer = true;
    }
  }

  /**
   * This deviates from the WHATWG interface since ws doesn't support the
   * required default "blob" type (instead we define a custom "nodebuffer"
   * type).
   *
   * @type {String}
   */
  get binaryType() {
    return this._binaryType;
  }

  set binaryType(type) {
    if (!BINARY_TYPES.includes(type)) return;

    this._binaryType = type;

    //
    // Allow to change `binaryType` on the fly.
    //
    if (this._receiver) this._receiver._binaryType = type;
  }

  /**
   * @type {Number}
   */
  get bufferedAmount() {
    if (!this._socket) return this._bufferedAmount;

    return this._socket._writableState.length + this._sender._bufferedBytes;
  }

  /**
   * @type {String}
   */
  get extensions() {
    return Object.keys(this._extensions).join();
  }

  /**
   * @type {Boolean}
   */
  get isPaused() {
    return this._paused;
  }

  /**
   * @type {Function}
   */
  /* istanbul ignore next */
  get onclose() {
    return null;
  }

  /**
   * @type {Function}
   */
  /* istanbul ignore next */
  get onerror() {
    return null;
  }

  /**
   * @type {Function}
   */
  /* istanbul ignore next */
  get onopen() {
    return null;
  }

  /**
   * @type {Function}
   */
  /* istanbul ignore next */
  get onmessage() {
    return null;
  }

  /**
   * @type {String}
   */
  get protocol() {
    return this._protocol;
  }

  /**
   * @type {Number}
   */
  get readyState() {
    return this._readyState;
  }

  /**
   * @type {String}
   */
  get url() {
    return this._url;
  }

  /**
   * Set up the socket and the internal resources.
   *
   * @param {(net.Socket|tls.Socket)} socket The network socket between the
   *     server and client
   * @param {Buffer} head The first packet of the upgraded stream
   * @param {Object} options Options object
   * @param {Function} [options.generateMask] The function used to generate the
   *     masking key
   * @param {Number} [options.maxPayload=0] The maximum allowed message size
   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or
   *     not to skip UTF-8 validation for text and close messages
   * @private
   */
  setSocket(socket, head, options) {
    const receiver = new Receiver({
      binaryType: this.binaryType,
      extensions: this._extensions,
      isServer: this._isServer,
      maxPayload: options.maxPayload,
      skipUTF8Validation: options.skipUTF8Validation
    });

    this._sender = new Sender(socket, this._extensions, options.generateMask);
    this._receiver = receiver;
    this._socket = socket;

    receiver[kWebSocket] = this;
    socket[kWebSocket] = this;

    receiver.on('conclude', receiverOnConclude);
    receiver.on('drain', receiverOnDrain);
    receiver.on('error', receiverOnError);
    receiver.on('message', receiverOnMessage);
    receiver.on('ping', receiverOnPing);
    receiver.on('pong', receiverOnPong);

    socket.setTimeout(0);
    socket.setNoDelay();

    if (head.length > 0) socket.unshift(head);

    socket.on('close', socketOnClose);
    socket.on('data', socketOnData);
    socket.on('end', socketOnEnd);
    socket.on('error', socketOnError);

    this._readyState = WebSocket.OPEN;
    this.emit('open');
  }

  /**
   * Emit the `'close'` event.
   *
   * @private
   */
  emitClose() {
    if (!this._socket) {
      this._readyState = WebSocket.CLOSED;
      this.emit('close', this._closeCode, this._closeMessage);
      return;
    }

    if (this._extensions[PerMessageDeflate.extensionName]) {
      this._extensions[PerMessageDeflate.extensionName].cleanup();
    }

    this._receiver.removeAllListeners();
    this._readyState = WebSocket.CLOSED;
    this.emit('close', this._closeCode, this._closeMessage);
  }

  /**
   * Start a closing handshake.
   *
   *          +----------+   +-----------+   +----------+
   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -
   *    |     +----------+   +-----------+   +----------+     |
   *          +----------+   +-----------+         |
   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING
   *          +----------+   +-----------+   |
   *    |           |                        |   +---+        |
   *                +------------------------+-->|fin| - - - -
   *    |         +---+                      |   +---+
   *     - - - - -|fin|<---------------------+
   *              +---+
   *
   * @param {Number} [code] Status code explaining why the connection is closing
   * @param {(String|Buffer)} [data] The reason why the connection is
   *     closing
   * @public
   */
  close(code, data) {
    if (this.readyState === WebSocket.CLOSED) return;
    if (this.readyState === WebSocket.CONNECTING) {
      const msg = 'WebSocket was closed before the connection was established';
      return abortHandshake(this, this._req, msg);
    }

    if (this.readyState === WebSocket.CLOSING) {
      if (
        this._closeFrameSent &&
        (this._closeFrameReceived || this._receiver._writableState.errorEmitted)
      ) {
        this._socket.end();
      }

      return;
    }

    this._readyState = WebSocket.CLOSING;
    this._sender.close(code, data, !this._isServer, (err) => {
      //
      // This error is handled by the `'error'` listener on the socket. We only
      // want to know if the close frame has been sent here.
      //
      if (err) return;

      this._closeFrameSent = true;

      if (
        this._closeFrameReceived ||
        this._receiver._writableState.errorEmitted
      ) {
        this._socket.end();
      }
    });

    //
    // Specify a timeout for the closing handshake to complete.
    //
    this._closeTimer = setTimeout(
      this._socket.destroy.bind(this._socket),
      closeTimeout
    );
  }

  /**
   * Pause the socket.
   *
   * @public
   */
  pause() {
    if (
      this.readyState === WebSocket.CONNECTING ||
      this.readyState === WebSocket.CLOSED
    ) {
      return;
    }

    this._paused = true;
    this._socket.pause();
  }

  /**
   * Send a ping.
   *
   * @param {*} [data] The data to send
   * @param {Boolean} [mask] Indicates whether or not to mask `data`
   * @param {Function} [cb] Callback which is executed when the ping is sent
   * @public
   */
  ping(data, mask, cb) {
    if (this.readyState === WebSocket.CONNECTING) {
      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');
    }

    if (typeof data === 'function') {
      cb = data;
      data = mask = undefined;
    } else if (typeof mask === 'function') {
      cb = mask;
      mask = undefined;
    }

    if (typeof data === 'number') data = data.toString();

    if (this.readyState !== WebSocket.OPEN) {
      sendAfterClose(this, data, cb);
      return;
    }

    if (mask === undefined) mask = !this._isServer;
    this._sender.ping(data || EMPTY_BUFFER, mask, cb);
  }

  /**
   * Send a pong.
   *
   * @param {*} [data] The data to send
   * @param {Boolean} [mask] Indicates whether or not to mask `data`
   * @param {Function} [cb] Callback which is executed when the pong is sent
   * @public
   */
  pong(data, mask, cb) {
    if (this.readyState === WebSocket.CONNECTING) {
      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');
    }

    if (typeof data === 'function') {
      cb = data;
      data = mask = undefined;
    } else if (typeof mask === 'function') {
      cb = mask;
      mask = undefined;
    }

    if (typeof data === 'number') data = data.toString();

    if (this.readyState !== WebSocket.OPEN) {
      sendAfterClose(this, data, cb);
      return;
    }

    if (mask === undefined) mask = !this._isServer;
    this._sender.pong(data || EMPTY_BUFFER, mask, cb);
  }

  /**
   * Resume the socket.
   *
   * @public
   */
  resume() {
    if (
      this.readyState === WebSocket.CONNECTING ||
      this.readyState === WebSocket.CLOSED
    ) {
      return;
    }

    this._paused = false;
    if (!this._receiver._writableState.needDrain) this._socket.resume();
  }

  /**
   * Send a data message.
   *
   * @param {*} data The message to send
   * @param {Object} [options] Options object
   * @param {Boolean} [options.binary] Specifies whether `data` is binary or
   *     text
   * @param {Boolean} [options.compress] Specifies whether or not to compress
   *     `data`
   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the
   *     last one
   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`
   * @param {Function} [cb] Callback which is executed when data is written out
   * @public
   */
  send(data, options, cb) {
    if (this.readyState === WebSocket.CONNECTING) {
      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');
    }

    if (typeof options === 'function') {
      cb = options;
      options = {};
    }

    if (typeof data === 'number') data = data.toString();

    if (this.readyState !== WebSocket.OPEN) {
      sendAfterClose(this, data, cb);
      return;
    }

    const opts = {
      binary: typeof data !== 'string',
      mask: !this._isServer,
      compress: true,
      fin: true,
      ...options
    };

    if (!this._extensions[PerMessageDeflate.extensionName]) {
      opts.compress = false;
    }

    this._sender.send(data || EMPTY_BUFFER, opts, cb);
  }

  /**
   * Forcibly close the connection.
   *
   * @public
   */
  terminate() {
    if (this.readyState === WebSocket.CLOSED) return;
    if (this.readyState === WebSocket.CONNECTING) {
      const msg = 'WebSocket was closed before the connection was established';
      return abortHandshake(this, this._req, msg);
    }

    if (this._socket) {
      this._readyState = WebSocket.CLOSING;
      this._socket.destroy();
    }
  }
}

/**
 * @constant {Number} CONNECTING
 * @memberof WebSocket
 */
Object.defineProperty(WebSocket, 'CONNECTING', {
  enumerable: true,
  value: readyStates.indexOf('CONNECTING')
});

/**
 * @constant {Number} CONNECTING
 * @memberof WebSocket.prototype
 */
Object.defineProperty(WebSocket.prototype, 'CONNECTING', {
  enumerable: true,
  value: readyStates.indexOf('CONNECTING')
});

/**
 * @constant {Number} OPEN
 * @memberof WebSocket
 */
Object.defineProperty(WebSocket, 'OPEN', {
  enumerable: true,
  value: readyStates.indexOf('OPEN')
});

/**
 * @constant {Number} OPEN
 * @memberof WebSocket.prototype
 */
Object.defineProperty(WebSocket.prototype, 'OPEN', {
  enumerable: true,
  value: readyStates.indexOf('OPEN')
});

/**
 * @constant {Number} CLOSING
 * @memberof WebSocket
 */
Object.defineProperty(WebSocket, 'CLOSING', {
  enumerable: true,
  value: readyStates.indexOf('CLOSING')
});

/**
 * @constant {Number} CLOSING
 * @memberof WebSocket.prototype
 */
Object.defineProperty(WebSocket.prototype, 'CLOSING', {
  enumerable: true,
  value: readyStates.indexOf('CLOSING')
});

/**
 * @constant {Number} CLOSED
 * @memberof WebSocket
 */
Object.defineProperty(WebSocket, 'CLOSED', {
  enumerable: true,
  value: readyStates.indexOf('CLOSED')
});

/**
 * @constant {Number} CLOSED
 * @memberof WebSocket.prototype
 */
Object.defineProperty(WebSocket.prototype, 'CLOSED', {
  enumerable: true,
  value: readyStates.indexOf('CLOSED')
});

[
  'binaryType',
  'bufferedAmount',
  'extensions',
  'isPaused',
  'protocol',
  'readyState',
  'url'
].forEach((property) => {
  Object.defineProperty(WebSocket.prototype, property, { enumerable: true });
});

//
// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.
// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface
//
['open', 'error', 'close', 'message'].forEach((method) => {
  Object.defineProperty(WebSocket.prototype, `on${method}`, {
    enumerable: true,
    get() {
      for (const listener of this.listeners(method)) {
        if (listener[kForOnEventAttribute]) return listener[kListener];
      }

      return null;
    },
    set(handler) {
      for (const listener of this.listeners(method)) {
        if (listener[kForOnEventAttribute]) {
          this.removeListener(method, listener);
          break;
        }
      }

      if (typeof handler !== 'function') return;

      this.addEventListener(method, handler, {
        [kForOnEventAttribute]: true
      });
    }
  });
});

WebSocket.prototype.addEventListener = addEventListener;
WebSocket.prototype.removeEventListener = removeEventListener;

module.exports = WebSocket;

/**
 * Initialize a WebSocket client.
 *
 * @param {WebSocket} websocket The client to initialize
 * @param {(String|URL)} address The URL to which to connect
 * @param {Array} protocols The subprotocols
 * @param {Object} [options] Connection options
 * @param {Boolean} [options.followRedirects=false] Whether or not to follow
 *     redirects
 * @param {Function} [options.generateMask] The function used to generate the
 *     masking key
 * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the
 *     handshake request
 * @param {Number} [options.maxPayload=104857600] The maximum allowed message
 *     size
 * @param {Number} [options.maxRedirects=10] The maximum number of redirects
 *     allowed
 * @param {String} [options.origin] Value of the `Origin` or
 *     `Sec-WebSocket-Origin` header
 * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable
 *     permessage-deflate
 * @param {Number} [options.protocolVersion=13] Value of the
 *     `Sec-WebSocket-Version` header
 * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or
 *     not to skip UTF-8 validation for text and close messages
 * @private
 */
function initAsClient(websocket, address, protocols, options) {
  const opts = {
    protocolVersion: protocolVersions[1],
    maxPayload: 100 * 1024 * 1024,
    skipUTF8Validation: false,
    perMessageDeflate: true,
    followRedirects: false,
    maxRedirects: 10,
    ...options,
    createConnection: undefined,
    socketPath: undefined,
    hostname: undefined,
    protocol: undefined,
    timeout: undefined,
    method: 'GET',
    host: undefined,
    path: undefined,
    port: undefined
  };

  if (!protocolVersions.includes(opts.protocolVersion)) {
    throw new RangeError(
      `Unsupported protocol version: ${opts.protocolVersion} ` +
        `(supported versions: ${protocolVersions.join(', ')})`
    );
  }

  let parsedUrl;

  if (address instanceof URL) {
    parsedUrl = address;
    websocket._url = address.href;
  } else {
    try {
      parsedUrl = new URL(address);
    } catch (e) {
      throw new SyntaxError(`Invalid URL: ${address}`);
    }

    websocket._url = address;
  }

  const isSecure = parsedUrl.protocol === 'wss:';
  const isIpcUrl = parsedUrl.protocol === 'ws+unix:';
  let invalidUrlMessage;

  if (parsedUrl.protocol !== 'ws:' && !isSecure && !isIpcUrl) {
    invalidUrlMessage =
      'The URL\'s protocol must be one of "ws:", "wss:", or "ws+unix:"';
  } else if (isIpcUrl && !parsedUrl.pathname) {
    invalidUrlMessage = "The URL's pathname is empty";
  } else if (parsedUrl.hash) {
    invalidUrlMessage = 'The URL contains a fragment identifier';
  }

  if (invalidUrlMessage) {
    const err = new SyntaxError(invalidUrlMessage);

    if (websocket._redirects === 0) {
      throw err;
    } else {
      emitErrorAndClose(websocket, err);
      return;
    }
  }

  const defaultPort = isSecure ? 443 : 80;
  const key = randomBytes(16).toString('base64');
  const request = isSecure ? https.request : http.request;
  const protocolSet = new Set();
  let perMessageDeflate;

  opts.createConnection = isSecure ? tlsConnect : netConnect;
  opts.defaultPort = opts.defaultPort || defaultPort;
  opts.port = parsedUrl.port || defaultPort;
  opts.host = parsedUrl.hostname.startsWith('[')
    ? parsedUrl.hostname.slice(1, -1)
    : parsedUrl.hostname;
  opts.headers = {
    ...opts.headers,
    'Sec-WebSocket-Version': opts.protocolVersion,
    'Sec-WebSocket-Key': key,
    Connection: 'Upgrade',
    Upgrade: 'websocket'
  };
  opts.path = parsedUrl.pathname + parsedUrl.search;
  opts.timeout = opts.handshakeTimeout;

  if (opts.perMessageDeflate) {
    perMessageDeflate = new PerMessageDeflate(
      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},
      false,
      opts.maxPayload
    );
    opts.headers['Sec-WebSocket-Extensions'] = format({
      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()
    });
  }
  if (protocols.length) {
    for (const protocol of protocols) {
      if (
        typeof protocol !== 'string' ||
        !subprotocolRegex.test(protocol) ||
        protocolSet.has(protocol)
      ) {
        throw new SyntaxError(
          'An invalid or duplicated subprotocol was specified'
        );
      }

      protocolSet.add(protocol);
    }

    opts.headers['Sec-WebSocket-Protocol'] = protocols.join(',');
  }
  if (opts.origin) {
    if (opts.protocolVersion < 13) {
      opts.headers['Sec-WebSocket-Origin'] = opts.origin;
    } else {
      opts.headers.Origin = opts.origin;
    }
  }
  if (parsedUrl.username || parsedUrl.password) {
    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;
  }

  if (isIpcUrl) {
    const parts = opts.path.split(':');

    opts.socketPath = parts[0];
    opts.path = parts[1];
  }

  let req;

  if (opts.followRedirects) {
    if (websocket._redirects === 0) {
      websocket._originalIpc = isIpcUrl;
      websocket._originalSecure = isSecure;
      websocket._originalHostOrSocketPath = isIpcUrl
        ? opts.socketPath
        : parsedUrl.host;

      const headers = options && options.headers;

      //
      // Shallow copy the user provided options so that headers can be changed
      // without mutating the original object.
      //
      options = { ...options, headers: {} };

      if (headers) {
        for (const [key, value] of Object.entries(headers)) {
          options.headers[key.toLowerCase()] = value;
        }
      }
    } else if (websocket.listenerCount('redirect') === 0) {
      const isSameHost = isIpcUrl
        ? websocket._originalIpc
          ? opts.socketPath === websocket._originalHostOrSocketPath
          : false
        : websocket._originalIpc
        ? false
        : parsedUrl.host === websocket._originalHostOrSocketPath;

      if (!isSameHost || (websocket._originalSecure && !isSecure)) {
        //
        // Match curl 7.77.0 behavior and drop the following headers. These
        // headers are also dropped when following a redirect to a subdomain.
        //
        delete opts.headers.authorization;
        delete opts.headers.cookie;

        if (!isSameHost) delete opts.headers.host;

        opts.auth = undefined;
      }
    }

    //
    // Match curl 7.77.0 behavior and make the first `Authorization` header win.
    // If the `Authorization` header is set, then there is nothing to do as it
    // will take precedence.
    //
    if (opts.auth && !options.headers.authorization) {
      options.headers.authorization =
        'Basic ' + Buffer.from(opts.auth).toString('base64');
    }

    req = websocket._req = request(opts);

    if (websocket._redirects) {
      //
      // Unlike what is done for the `'upgrade'` event, no early exit is
      // triggered here if the user calls `websocket.close()` or
      // `websocket.terminate()` from a listener of the `'redirect'` event. This
      // is because the user can also call `request.destroy()` with an error
      // before calling `websocket.close()` or `websocket.terminate()` and this
      // would result in an error being emitted on the `request` object with no
      // `'error'` event listeners attached.
      //
      websocket.emit('redirect', websocket.url, req);
    }
  } else {
    req = websocket._req = request(opts);
  }

  if (opts.timeout) {
    req.on('timeout', () => {
      abortHandshake(websocket, req, 'Opening handshake has timed out');
    });
  }

  req.on('error', (err) => {
    if (req === null || req[kAborted]) return;

    req = websocket._req = null;
    emitErrorAndClose(websocket, err);
  });

  req.on('response', (res) => {
    const location = res.headers.location;
    const statusCode = res.statusCode;

    if (
      location &&
      opts.followRedirects &&
      statusCode >= 300 &&
      statusCode < 400
    ) {
      if (++websocket._redirects > opts.maxRedirects) {
        abortHandshake(websocket, req, 'Maximum redirects exceeded');
        return;
      }

      req.abort();

      let addr;

      try {
        addr = new URL(location, address);
      } catch (e) {
        const err = new SyntaxError(`Invalid URL: ${location}`);
        emitErrorAndClose(websocket, err);
        return;
      }

      initAsClient(websocket, addr, protocols, options);
    } else if (!websocket.emit('unexpected-response', req, res)) {
      abortHandshake(
        websocket,
        req,
        `Unexpected server response: ${res.statusCode}`
      );
    }
  });

  req.on('upgrade', (res, socket, head) => {
    websocket.emit('upgrade', res);

    //
    // The user may have closed the connection from a listener of the
    // `'upgrade'` event.
    //
    if (websocket.readyState !== WebSocket.CONNECTING) return;

    req = websocket._req = null;

    if (res.headers.upgrade.toLowerCase() !== 'websocket') {
      abortHandshake(websocket, socket, 'Invalid Upgrade header');
      return;
    }

    const digest = createHash('sha1')
      .update(key + GUID)
      .digest('base64');

    if (res.headers['sec-websocket-accept'] !== digest) {
      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');
      return;
    }

    const serverProt = res.headers['sec-websocket-protocol'];
    let protError;

    if (serverProt !== undefined) {
      if (!protocolSet.size) {
        protError = 'Server sent a subprotocol but none was requested';
      } else if (!protocolSet.has(serverProt)) {
        protError = 'Server sent an invalid subprotocol';
      }
    } else if (protocolSet.size) {
      protError = 'Server sent no subprotocol';
    }

    if (protError) {
      abortHandshake(websocket, socket, protError);
      return;
    }

    if (serverProt) websocket._protocol = serverProt;

    const secWebSocketExtensions = res.headers['sec-websocket-extensions'];

    if (secWebSocketExtensions !== undefined) {
      if (!perMessageDeflate) {
        const message =
          'Server sent a Sec-WebSocket-Extensions header but no extension ' +
          'was requested';
        abortHandshake(websocket, socket, message);
        return;
      }

      let extensions;

      try {
        extensions = parse(secWebSocketExtensions);
      } catch (err) {
        const message = 'Invalid Sec-WebSocket-Extensions header';
        abortHandshake(websocket, socket, message);
        return;
      }

      const extensionNames = Object.keys(extensions);

      if (
        extensionNames.length !== 1 ||
        extensionNames[0] !== PerMessageDeflate.extensionName
      ) {
        const message = 'Server indicated an extension that was not requested';
        abortHandshake(websocket, socket, message);
        return;
      }

      try {
        perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);
      } catch (err) {
        const message = 'Invalid Sec-WebSocket-Extensions header';
        abortHandshake(websocket, socket, message);
        return;
      }

      websocket._extensions[PerMessageDeflate.extensionName] =
        perMessageDeflate;
    }

    websocket.setSocket(socket, head, {
      generateMask: opts.generateMask,
      maxPayload: opts.maxPayload,
      skipUTF8Validation: opts.skipUTF8Validation
    });
  });

  req.end();
}

/**
 * Emit the `'error'` and `'close'` events.
 *
 * @param {WebSocket} websocket The WebSocket instance
 * @param {Error} The error to emit
 * @private
 */
function emitErrorAndClose(websocket, err) {
  websocket._readyState = WebSocket.CLOSING;
  websocket.emit('error', err);
  websocket.emitClose();
}

/**
 * Create a `net.Socket` and initiate a connection.
 *
 * @param {Object} options Connection options
 * @return {net.Socket} The newly created socket used to start the connection
 * @private
 */
function netConnect(options) {
  options.path = options.socketPath;
  return net.connect(options);
}

/**
 * Create a `tls.TLSSocket` and initiate a connection.
 *
 * @param {Object} options Connection options
 * @return {tls.TLSSocket} The newly created socket used to start the connection
 * @private
 */
function tlsConnect(options) {
  options.path = undefined;

  if (!options.servername && options.servername !== '') {
    options.servername = net.isIP(options.host) ? '' : options.host;
  }

  return tls.connect(options);
}

/**
 * Abort the handshake and emit an error.
 *
 * @param {WebSocket} websocket The WebSocket instance
 * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to
 *     abort or the socket to destroy
 * @param {String} message The error message
 * @private
 */
function abortHandshake(websocket, stream, message) {
  websocket._readyState = WebSocket.CLOSING;

  const err = new Error(message);
  Error.captureStackTrace(err, abortHandshake);

  if (stream.setHeader) {
    stream[kAborted] = true;
    stream.abort();

    if (stream.socket && !stream.socket.destroyed) {
      //
      // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if
      // called after the request completed. See
      // https://github.com/websockets/ws/issues/1869.
      //
      stream.socket.destroy();
    }

    process.nextTick(emitErrorAndClose, websocket, err);
  } else {
    stream.destroy(err);
    stream.once('error', websocket.emit.bind(websocket, 'error'));
    stream.once('close', websocket.emitClose.bind(websocket));
  }
}

/**
 * Handle cases where the `ping()`, `pong()`, or `send()` methods are called
 * when the `readyState` attribute is `CLOSING` or `CLOSED`.
 *
 * @param {WebSocket} websocket The WebSocket instance
 * @param {*} [data] The data to send
 * @param {Function} [cb] Callback
 * @private
 */
function sendAfterClose(websocket, data, cb) {
  if (data) {
    const length = toBuffer(data).length;

    //
    // The `_bufferedAmount` property is used only when the peer is a client and
    // the opening handshake fails. Under these circumstances, in fact, the
    // `setSocket()` method is not called, so the `_socket` and `_sender`
    // properties are set to `null`.
    //
    if (websocket._socket) websocket._sender._bufferedBytes += length;
    else websocket._bufferedAmount += length;
  }

  if (cb) {
    const err = new Error(
      `WebSocket is not open: readyState ${websocket.readyState} ` +
        `(${readyStates[websocket.readyState]})`
    );
    cb(err);
  }
}

/**
 * The listener of the `Receiver` `'conclude'` event.
 *
 * @param {Number} code The status code
 * @param {Buffer} reason The reason for closing
 * @private
 */
function receiverOnConclude(code, reason) {
  const websocket = this[kWebSocket];

  websocket._closeFrameReceived = true;
  websocket._closeMessage = reason;
  websocket._closeCode = code;

  if (websocket._socket[kWebSocket] === undefined) return;

  websocket._socket.removeListener('data', socketOnData);
  process.nextTick(resume, websocket._socket);

  if (code === 1005) websocket.close();
  else websocket.close(code, reason);
}

/**
 * The listener of the `Receiver` `'drain'` event.
 *
 * @private
 */
function receiverOnDrain() {
  const websocket = this[kWebSocket];

  if (!websocket.isPaused) websocket._socket.resume();
}

/**
 * The listener of the `Receiver` `'error'` event.
 *
 * @param {(RangeError|Error)} err The emitted error
 * @private
 */
function receiverOnError(err) {
  const websocket = this[kWebSocket];

  if (websocket._socket[kWebSocket] !== undefined) {
    websocket._socket.removeListener('data', socketOnData);

    //
    // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See
    // https://github.com/websockets/ws/issues/1940.
    //
    process.nextTick(resume, websocket._socket);

    websocket.close(err[kStatusCode]);
  }

  websocket.emit('error', err);
}

/**
 * The listener of the `Receiver` `'finish'` event.
 *
 * @private
 */
function receiverOnFinish() {
  this[kWebSocket].emitClose();
}

/**
 * The listener of the `Receiver` `'message'` event.
 *
 * @param {Buffer|ArrayBuffer|Buffer[])} data The message
 * @param {Boolean} isBinary Specifies whether the message is binary or not
 * @private
 */
function receiverOnMessage(data, isBinary) {
  this[kWebSocket].emit('message', data, isBinary);
}

/**
 * The listener of the `Receiver` `'ping'` event.
 *
 * @param {Buffer} data The data included in the ping frame
 * @private
 */
function receiverOnPing(data) {
  const websocket = this[kWebSocket];

  websocket.pong(data, !websocket._isServer, NOOP);
  websocket.emit('ping', data);
}

/**
 * The listener of the `Receiver` `'pong'` event.
 *
 * @param {Buffer} data The data included in the pong frame
 * @private
 */
function receiverOnPong(data) {
  this[kWebSocket].emit('pong', data);
}

/**
 * Resume a readable stream
 *
 * @param {Readable} stream The readable stream
 * @private
 */
function resume(stream) {
  stream.resume();
}

/**
 * The listener of the `net.Socket` `'close'` event.
 *
 * @private
 */
function socketOnClose() {
  const websocket = this[kWebSocket];

  this.removeListener('close', socketOnClose);
  this.removeListener('data', socketOnData);
  this.removeListener('end', socketOnEnd);

  websocket._readyState = WebSocket.CLOSING;

  let chunk;

  //
  // The close frame might not have been received or the `'end'` event emitted,
  // for example, if the socket was destroyed due to an error. Ensure that the
  // `receiver` stream is closed after writing any remaining buffered data to
  // it. If the readable side of the socket is in flowing mode then there is no
  // buffered data as everything has been already written and `readable.read()`
  // will return `null`. If instead, the socket is paused, any possible buffered
  // data will be read as a single chunk.
  //
  if (
    !this._readableState.endEmitted &&
    !websocket._closeFrameReceived &&
    !websocket._receiver._writableState.errorEmitted &&
    (chunk = websocket._socket.read()) !== null
  ) {
    websocket._receiver.write(chunk);
  }

  websocket._receiver.end();

  this[kWebSocket] = undefined;

  clearTimeout(websocket._closeTimer);

  if (
    websocket._receiver._writableState.finished ||
    websocket._receiver._writableState.errorEmitted
  ) {
    websocket.emitClose();
  } else {
    websocket._receiver.on('error', receiverOnFinish);
    websocket._receiver.on('finish', receiverOnFinish);
  }
}

/**
 * The listener of the `net.Socket` `'data'` event.
 *
 * @param {Buffer} chunk A chunk of data
 * @private
 */
function socketOnData(chunk) {
  if (!this[kWebSocket]._receiver.write(chunk)) {
    this.pause();
  }
}

/**
 * The listener of the `net.Socket` `'end'` event.
 *
 * @private
 */
function socketOnEnd() {
  const websocket = this[kWebSocket];

  websocket._readyState = WebSocket.CLOSING;
  websocket._receiver.end();
  this.end();
}

/**
 * The listener of the `net.Socket` `'error'` event.
 *
 * @private
 */
function socketOnError() {
  const websocket = this[kWebSocket];

  this.removeListener('error', socketOnError);
  this.on('error', NOOP);

  if (websocket) {
    websocket._readyState = WebSocket.CLOSING;
    this.destroy();
  }
}


/***/ }),

/***/ 7214:
/***/ ((module) => {



const codes = {};

function createErrorType(code, message, Base) {
  if (!Base) {
    Base = Error
  }

  function getMessage (arg1, arg2, arg3) {
    if (typeof message === 'string') {
      return message
    } else {
      return message(arg1, arg2, arg3)
    }
  }

  class NodeError extends Base {
    constructor (arg1, arg2, arg3) {
      super(getMessage(arg1, arg2, arg3));
    }
  }

  NodeError.prototype.name = Base.name;
  NodeError.prototype.code = code;

  codes[code] = NodeError;
}

// https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js
function oneOf(expected, thing) {
  if (Array.isArray(expected)) {
    const len = expected.length;
    expected = expected.map((i) => String(i));
    if (len > 2) {
      return `one of ${thing} ${expected.slice(0, len - 1).join(', ')}, or ` +
             expected[len - 1];
    } else if (len === 2) {
      return `one of ${thing} ${expected[0]} or ${expected[1]}`;
    } else {
      return `of ${thing} ${expected[0]}`;
    }
  } else {
    return `of ${thing} ${String(expected)}`;
  }
}

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith
function startsWith(str, search, pos) {
	return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
}

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith
function endsWith(str, search, this_len) {
	if (this_len === undefined || this_len > str.length) {
		this_len = str.length;
	}
	return str.substring(this_len - search.length, this_len) === search;
}

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes
function includes(str, search, start) {
  if (typeof start !== 'number') {
    start = 0;
  }

  if (start + search.length > str.length) {
    return false;
  } else {
    return str.indexOf(search, start) !== -1;
  }
}

createErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {
  return 'The value "' + value + '" is invalid for option "' + name + '"'
}, TypeError);
createErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {
  // determiner: 'must be' or 'must not be'
  let determiner;
  if (typeof expected === 'string' && startsWith(expected, 'not ')) {
    determiner = 'must not be';
    expected = expected.replace(/^not /, '');
  } else {
    determiner = 'must be';
  }

  let msg;
  if (endsWith(name, ' argument')) {
    // For cases like 'first argument'
    msg = `The ${name} ${determiner} ${oneOf(expected, 'type')}`;
  } else {
    const type = includes(name, '.') ? 'property' : 'argument';
    msg = `The "${name}" ${type} ${determiner} ${oneOf(expected, 'type')}`;
  }

  msg += `. Received type ${typeof actual}`;
  return msg;
}, TypeError);
createErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');
createErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {
  return 'The ' + name + ' method is not implemented'
});
createErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');
createErrorType('ERR_STREAM_DESTROYED', function (name) {
  return 'Cannot call ' + name + ' after a stream was destroyed';
});
createErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');
createErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');
createErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');
createErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);
createErrorType('ERR_UNKNOWN_ENCODING', function (arg) {
  return 'Unknown encoding: ' + arg
}, TypeError);
createErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');

module.exports.q = codes;


/***/ }),

/***/ 1359:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.

/*<replacement>*/

var objectKeys = Object.keys || function (obj) {
  var keys = [];

  for (var key in obj) {
    keys.push(key);
  }

  return keys;
};
/*</replacement>*/


module.exports = Duplex;

var Readable = __nccwpck_require__(1433);

var Writable = __nccwpck_require__(6993);

__nccwpck_require__(4124)(Duplex, Readable);

{
  // Allow the keys array to be GC'ed.
  var keys = objectKeys(Writable.prototype);

  for (var v = 0; v < keys.length; v++) {
    var method = keys[v];
    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
  }
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);
  Readable.call(this, options);
  Writable.call(this, options);
  this.allowHalfOpen = true;

  if (options) {
    if (options.readable === false) this.readable = false;
    if (options.writable === false) this.writable = false;

    if (options.allowHalfOpen === false) {
      this.allowHalfOpen = false;
      this.once('end', onend);
    }
  }
}

Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.highWaterMark;
  }
});
Object.defineProperty(Duplex.prototype, 'writableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState && this._writableState.getBuffer();
  }
});
Object.defineProperty(Duplex.prototype, 'writableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.length;
  }
}); // the no-half-open enforcer

function onend() {
  // If the writable side ended, then we're ok.
  if (this._writableState.ended) return; // no more data can be written.
  // But allow more writes to happen in this tick.

  process.nextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }

    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});

/***/ }),

/***/ 1542:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.


module.exports = PassThrough;

var Transform = __nccwpck_require__(4415);

__nccwpck_require__(4124)(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);
  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};

/***/ }),

/***/ 1433:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


module.exports = Readable;
/*<replacement>*/

var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;
/*<replacement>*/

var EE = (__nccwpck_require__(2361).EventEmitter);

var EElistenerCount = function EElistenerCount(emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/


var Stream = __nccwpck_require__(2387);
/*</replacement>*/


var Buffer = (__nccwpck_require__(4300).Buffer);

var OurUint8Array = global.Uint8Array || function () {};

function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}

function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*<replacement>*/


var debugUtil = __nccwpck_require__(3837);

var debug;

if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function debug() {};
}
/*</replacement>*/


var BufferList = __nccwpck_require__(6522);

var destroyImpl = __nccwpck_require__(7049);

var _require = __nccwpck_require__(9948),
    getHighWaterMark = _require.getHighWaterMark;

var _require$codes = (__nccwpck_require__(7214)/* .codes */ .q),
    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.


var StringDecoder;
var createReadableStreamAsyncIterator;
var from;

__nccwpck_require__(4124)(Readable, Stream);

var errorOrDestroy = destroyImpl.errorOrDestroy;
var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.

  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}

function ReadableState(options, stream, isDuplex) {
  Duplex = Duplex || __nccwpck_require__(1359);
  options = options || {}; // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.

  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away

  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"

  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()

  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.

  this.sync = true; // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.

  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;
  this.paused = true; // Should close be emitted on destroy. Defaults to true.

  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')

  this.autoDestroy = !!options.autoDestroy; // has it been destroyed

  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.

  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s

  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled

  this.readingMore = false;
  this.decoder = null;
  this.encoding = null;

  if (options.encoding) {
    if (!StringDecoder) StringDecoder = (__nccwpck_require__(4841)/* .StringDecoder */ .s);
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || __nccwpck_require__(1359);
  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside
  // the ReadableState constructor, at least with V8 6.5

  var isDuplex = this instanceof Duplex;
  this._readableState = new ReadableState(options, this, isDuplex); // legacy

  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._readableState === undefined) {
      return false;
    }

    return this._readableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._readableState.destroyed = value;
  }
});
Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;

Readable.prototype._destroy = function (err, cb) {
  cb(err);
}; // Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.


Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;

      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }

      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
}; // Unshift should *always* be something directly out of read()


Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  debug('readableAddChunk', chunk);
  var state = stream._readableState;

  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);

    if (er) {
      errorOrDestroy(stream, er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
      } else if (state.destroyed) {
        return false;
      } else {
        state.reading = false;

        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
      maybeReadMore(stream, state);
    }
  } // We can push more data if we are below the highWaterMark.
  // Also, if we have no data yet, we can stand some more bytes.
  // This is to work around cases where hwm=0, such as the repl.


  return !state.ended && (state.length < state.highWaterMark || state.length === 0);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    state.awaitDrain = 0;
    stream.emit('data', chunk);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);
    if (state.needReadable) emitReadable(stream);
  }

  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;

  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);
  }

  return er;
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
}; // backwards compatibility.


Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = (__nccwpck_require__(4841)/* .StringDecoder */ .s);
  var decoder = new StringDecoder(enc);
  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8

  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:

  var p = this._readableState.buffer.head;
  var content = '';

  while (p !== null) {
    content += decoder.write(p.data);
    p = p.next;
  }

  this._readableState.buffer.clear();

  if (content !== '') this._readableState.buffer.push(content);
  this._readableState.length = content.length;
  return this;
}; // Don't raise the hwm > 1GB


var MAX_HWM = 0x40000000;

function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }

  return n;
} // This function is designed to be inlinable, so please take care when making
// changes to the function body.


function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;

  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  } // If we're asking for more than the current hwm, then raise the hwm.


  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n; // Don't have enough

  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }

  return state.length;
} // you can override either this method, or the async _read(n) below.


Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;
  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.

  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.

  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  } // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.
  // if we need a readable event, then we need to do some reading.


  var doRead = state.needReadable;
  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some

  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  } // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.


  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true; // if the length is currently zero, then we *need* a readable event.

    if (state.length === 0) state.needReadable = true; // call internal read method

    this._read(state.highWaterMark);

    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.

    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = state.length <= state.highWaterMark;
    n = 0;
  } else {
    state.length -= n;
    state.awaitDrain = 0;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.

    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);
  return ret;
};

function onEofChunk(stream, state) {
  debug('onEofChunk');
  if (state.ended) return;

  if (state.decoder) {
    var chunk = state.decoder.end();

    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }

  state.ended = true;

  if (state.sync) {
    // if we are sync, wait until next tick to emit the data.
    // Otherwise we risk emitting data in the flow()
    // the readable code triggers during a read() call
    emitReadable(stream);
  } else {
    // emit 'readable' now to make sure it gets picked up.
    state.needReadable = false;

    if (!state.emittedReadable) {
      state.emittedReadable = true;
      emitReadable_(stream);
    }
  }
} // Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.


function emitReadable(stream) {
  var state = stream._readableState;
  debug('emitReadable', state.needReadable, state.emittedReadable);
  state.needReadable = false;

  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    process.nextTick(emitReadable_, stream);
  }
}

function emitReadable_(stream) {
  var state = stream._readableState;
  debug('emitReadable_', state.destroyed, state.length, state.ended);

  if (!state.destroyed && (state.length || state.ended)) {
    stream.emit('readable');
    state.emittedReadable = false;
  } // The stream needs another readable event if
  // 1. It is not flowing, as the flow mechanism will take
  //    care of it.
  // 2. It is not ended.
  // 3. It is below the highWaterMark, so we can schedule
  //    another readable later.


  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;
  flow(stream);
} // at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.


function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    process.nextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  // Attempt to read more data if we should.
  //
  // The conditions for reading more data are (one of):
  // - Not enough data buffered (state.length < state.highWaterMark). The loop
  //   is responsible for filling the buffer with enough data if such data
  //   is available. If highWaterMark is 0 and we are not in the flowing mode
  //   we should _not_ attempt to buffer any extra data. We'll get more data
  //   when the stream consumer calls read() instead.
  // - No data in the buffer, and the stream is in flowing mode. In this mode
  //   the loop below is responsible for ensuring read() is called. Failing to
  //   call read here would abort the flow and there's no other mechanism for
  //   continuing the flow if the stream consumer has just subscribed to the
  //   'data' event.
  //
  // In addition to the above conditions to keep reading data, the following
  // conditions prevent the data from being read:
  // - The stream has ended (state.ended).
  // - There is already a pending 'read' operation (state.reading). This is a
  //   case where the the stream has called the implementation defined _read()
  //   method, but they are processing the call asynchronously and have _not_
  //   called push() with new data. In this case we skip performing more
  //   read()s. The execution ends in this method again after the _read() ends
  //   up calling push() with more data.
  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {
    var len = state.length;
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length) // didn't get any data, stop spinning.
      break;
  }

  state.readingMore = false;
} // abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.


Readable.prototype._read = function (n) {
  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;

    case 1:
      state.pipes = [state.pipes, dest];
      break;

    default:
      state.pipes.push(dest);
      break;
  }

  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);
  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);
  dest.on('unpipe', onunpipe);

  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');

    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  } // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.


  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);
  var cleanedUp = false;

  function cleanup() {
    debug('cleanup'); // cleanup event handlers once the pipe is broken

    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);
    cleanedUp = true; // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.

    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  src.on('data', ondata);

  function ondata(chunk) {
    debug('ondata');
    var ret = dest.write(chunk);
    debug('dest.write', ret);

    if (ret === false) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', state.awaitDrain);
        state.awaitDrain++;
      }

      src.pause();
    }
  } // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.


  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);
  } // Make sure our error handler is attached before userland ones.


  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.

  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }

  dest.once('close', onclose);

  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }

  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  } // tell the dest that it's being piped to


  dest.emit('pipe', src); // start the flow if it hasn't been started already.

  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function pipeOnDrainFunctionResult() {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;

    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = {
    hasUnpiped: false
  }; // if we're not piping anywhere, then do nothing.

  if (state.pipesCount === 0) return this; // just one destination.  most common case.

  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;
    if (!dest) dest = state.pipes; // got a match.

    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  } // slow case. multiple pipe destinations.


  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, {
        hasUnpiped: false
      });
    }

    return this;
  } // try to find the right one.


  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;
  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];
  dest.emit('unpipe', this, unpipeInfo);
  return this;
}; // set up data events if they are asked for
// Ensure readable listeners eventually get something


Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);
  var state = this._readableState;

  if (ev === 'data') {
    // update readableListening so that resume() may be a no-op
    // a few lines down. This is needed to support once('readable').
    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused

    if (state.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.flowing = false;
      state.emittedReadable = false;
      debug('on readable', state.length, state.reading);

      if (state.length) {
        emitReadable(this);
      } else if (!state.reading) {
        process.nextTick(nReadingNextTick, this);
      }
    }
  }

  return res;
};

Readable.prototype.addListener = Readable.prototype.on;

Readable.prototype.removeListener = function (ev, fn) {
  var res = Stream.prototype.removeListener.call(this, ev, fn);

  if (ev === 'readable') {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  }

  return res;
};

Readable.prototype.removeAllListeners = function (ev) {
  var res = Stream.prototype.removeAllListeners.apply(this, arguments);

  if (ev === 'readable' || ev === undefined) {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  }

  return res;
};

function updateReadableListening(self) {
  var state = self._readableState;
  state.readableListening = self.listenerCount('readable') > 0;

  if (state.resumeScheduled && !state.paused) {
    // flowing needs to be set to true now, otherwise
    // the upcoming resume will not flow.
    state.flowing = true; // crude way to check if we should resume
  } else if (self.listenerCount('data') > 0) {
    self.resume();
  }
}

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
} // pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.


Readable.prototype.resume = function () {
  var state = this._readableState;

  if (!state.flowing) {
    debug('resume'); // we flow only if there is no one listening
    // for readable, but we still have to call
    // resume()

    state.flowing = !state.readableListening;
    resume(this, state);
  }

  state.paused = false;
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    process.nextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  debug('resume', state.reading);

  if (!state.reading) {
    stream.read(0);
  }

  state.resumeScheduled = false;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);

  if (this._readableState.flowing !== false) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }

  this._readableState.paused = true;
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);

  while (state.flowing && stream.read() !== null) {
    ;
  }
} // wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.


Readable.prototype.wrap = function (stream) {
  var _this = this;

  var state = this._readableState;
  var paused = false;
  stream.on('end', function () {
    debug('wrapped end');

    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) _this.push(chunk);
    }

    _this.push(null);
  });
  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode

    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = _this.push(chunk);

    if (!ret) {
      paused = true;
      stream.pause();
    }
  }); // proxy all the other methods.
  // important when wrapping filters and duplexes.

  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function methodWrap(method) {
        return function methodWrapReturnFunction() {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  } // proxy certain important events.


  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  } // when we try to consume some more bytes, simply unpause the
  // underlying stream.


  this._read = function (n) {
    debug('wrapped _read', n);

    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return this;
};

if (typeof Symbol === 'function') {
  Readable.prototype[Symbol.asyncIterator] = function () {
    if (createReadableStreamAsyncIterator === undefined) {
      createReadableStreamAsyncIterator = __nccwpck_require__(3306);
    }

    return createReadableStreamAsyncIterator(this);
  };
}

Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.highWaterMark;
  }
});
Object.defineProperty(Readable.prototype, 'readableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState && this._readableState.buffer;
  }
});
Object.defineProperty(Readable.prototype, 'readableFlowing', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.flowing;
  },
  set: function set(state) {
    if (this._readableState) {
      this._readableState.flowing = state;
    }
  }
}); // exposed for testing purposes only.

Readable._fromList = fromList;
Object.defineProperty(Readable.prototype, 'readableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.length;
  }
}); // Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.

function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;
  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = state.buffer.consume(n, state.decoder);
  }
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;
  debug('endReadable', state.endEmitted);

  if (!state.endEmitted) {
    state.ended = true;
    process.nextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.

  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');

    if (state.autoDestroy) {
      // In case of duplex streams we need a way to detect
      // if the writable side is ready for autoDestroy as well
      var wState = stream._writableState;

      if (!wState || wState.autoDestroy && wState.finished) {
        stream.destroy();
      }
    }
  }
}

if (typeof Symbol === 'function') {
  Readable.from = function (iterable, opts) {
    if (from === undefined) {
      from = __nccwpck_require__(9082);
    }

    return from(Readable, iterable, opts);
  };
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }

  return -1;
}

/***/ }),

/***/ 4415:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.


module.exports = Transform;

var _require$codes = (__nccwpck_require__(7214)/* .codes */ .q),
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,
    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;

var Duplex = __nccwpck_require__(1359);

__nccwpck_require__(4124)(Transform, Duplex);

function afterTransform(er, data) {
  var ts = this._transformState;
  ts.transforming = false;
  var cb = ts.writecb;

  if (cb === null) {
    return this.emit('error', new ERR_MULTIPLE_CALLBACK());
  }

  ts.writechunk = null;
  ts.writecb = null;
  if (data != null) // single equals check for both `null` and `undefined`
    this.push(data);
  cb(er);
  var rs = this._readableState;
  rs.reading = false;

  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);
  Duplex.call(this, options);
  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  }; // start out asking for a readable event once data is transformed.

  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.

  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;
    if (typeof options.flush === 'function') this._flush = options.flush;
  } // When the writable side finishes, then flush out anything remaining.


  this.on('prefinish', prefinish);
}

function prefinish() {
  var _this = this;

  if (typeof this._flush === 'function' && !this._readableState.destroyed) {
    this._flush(function (er, data) {
      done(_this, er, data);
    });
  } else {
    done(this, null, null);
  }
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
}; // This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.


Transform.prototype._transform = function (chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;

  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
}; // Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.


Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && !ts.transforming) {
    ts.transforming = true;

    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);
  if (data != null) // single equals check for both `null` and `undefined`
    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases
  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided

  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();
  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
  return stream.push(null);
}

/***/ }),

/***/ 6993:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.


module.exports = Writable;
/* <replacement> */

function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
} // It seems a linked list but it is not
// there will be only 2 of these for each stream


function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;

  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/


var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;
/*<replacement>*/

var internalUtil = {
  deprecate: __nccwpck_require__(7127)
};
/*</replacement>*/

/*<replacement>*/

var Stream = __nccwpck_require__(2387);
/*</replacement>*/


var Buffer = (__nccwpck_require__(4300).Buffer);

var OurUint8Array = global.Uint8Array || function () {};

function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}

function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

var destroyImpl = __nccwpck_require__(7049);

var _require = __nccwpck_require__(9948),
    getHighWaterMark = _require.getHighWaterMark;

var _require$codes = (__nccwpck_require__(7214)/* .codes */ .q),
    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,
    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,
    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,
    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,
    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;

var errorOrDestroy = destroyImpl.errorOrDestroy;

__nccwpck_require__(4124)(Writable, Stream);

function nop() {}

function WritableState(options, stream, isDuplex) {
  Duplex = Duplex || __nccwpck_require__(1359);
  options = options || {}; // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream,
  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.

  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream
  // contains buffers or objects.

  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()

  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called

  this.finalCalled = false; // drain event flag.

  this.needDrain = false; // at the start of calling end()

  this.ending = false; // when end() has been called, and returned

  this.ended = false; // when 'finish' is emitted

  this.finished = false; // has it been destroyed

  this.destroyed = false; // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.

  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.

  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.

  this.length = 0; // a flag to see when we're in the middle of a write.

  this.writing = false; // when true all writes will be buffered until .uncork() call

  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.

  this.sync = true; // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.

  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)

  this.onwrite = function (er) {
    onwrite(stream, er);
  }; // the callback that the user supplies to write(chunk,encoding,cb)


  this.writecb = null; // the amount that is being written when _write is called.

  this.writelen = 0;
  this.bufferedRequest = null;
  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted

  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams

  this.prefinished = false; // True if the error was already emitted and should not be thrown again

  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.

  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')

  this.autoDestroy = !!options.autoDestroy; // count buffered requests

  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two

  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];

  while (current) {
    out.push(current);
    current = current.next;
  }

  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function writableStateBufferGetter() {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})(); // Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.


var realHasInstance;

if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function value(object) {
      if (realHasInstance.call(this, object)) return true;
      if (this !== Writable) return false;
      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function realHasInstance(object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || __nccwpck_require__(1359); // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.
  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  // Checking for a Stream.Duplex instance is faster here instead of inside
  // the WritableState constructor, at least with V8 6.5

  var isDuplex = this instanceof Duplex;
  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);
  this._writableState = new WritableState(options, this, isDuplex); // legacy.

  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;
    if (typeof options.writev === 'function') this._writev = options.writev;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
} // Otherwise people can pipe Writable streams, which is just wrong.


Writable.prototype.pipe = function () {
  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
};

function writeAfterEnd(stream, cb) {
  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb

  errorOrDestroy(stream, er);
  process.nextTick(cb, er);
} // Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.


function validChunk(stream, state, chunk, cb) {
  var er;

  if (chunk === null) {
    er = new ERR_STREAM_NULL_VALUES();
  } else if (typeof chunk !== 'string' && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);
  }

  if (er) {
    errorOrDestroy(stream, er);
    process.nextTick(cb, er);
    return false;
  }

  return true;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;

  var isBuf = !state.objectMode && _isUint8Array(chunk);

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;
  if (typeof cb !== 'function') cb = nop;
  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }
  return ret;
};

Writable.prototype.cork = function () {
  this._writableState.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;
    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

Object.defineProperty(Writable.prototype, 'writableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState && this._writableState.getBuffer();
  }
});

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }

  return chunk;
}

Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.highWaterMark;
  }
}); // if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.

function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);

    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }

  var len = state.objectMode ? 1 : chunk.length;
  state.length += len;
  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.

  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };

    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }

    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    process.nextTick(cb, er); // this can emit finish, and it will always happen
    // after error

    process.nextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er); // this can emit finish, but finish must
    // always follow error

    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;
  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();
  onwriteStateUpdate(state);
  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state) || stream.destroyed;

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      process.nextTick(afterWrite, stream, state, finished, cb);
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
} // Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.


function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
} // if there's something in the buffer waiting, then process it


function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;
    var count = 0;
    var allBuffers = true;

    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }

    buffer.allBuffers = allBuffers;
    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite

    state.pendingcb++;
    state.lastBufferedRequest = null;

    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }

    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;
      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.

      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks

  if (state.corked) {
    state.corked = 1;
    this.uncork();
  } // ignore unnecessary end() calls.


  if (!state.ending) endWritable(this, state, cb);
  return this;
};

Object.defineProperty(Writable.prototype, 'writableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.length;
  }
});

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}

function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;

    if (err) {
      errorOrDestroy(stream, err);
    }

    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}

function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function' && !state.destroyed) {
      state.pendingcb++;
      state.finalCalled = true;
      process.nextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);

  if (need) {
    prefinish(stream, state);

    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');

      if (state.autoDestroy) {
        // In case of duplex streams we need a way to detect
        // if the readable side is ready for autoDestroy as well
        var rState = stream._readableState;

        if (!rState || rState.autoDestroy && rState.endEmitted) {
          stream.destroy();
        }
      }
    }
  }

  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);

  if (cb) {
    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);
  }

  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;

  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  } // reuse the free corkReq.


  state.corkedRequestsFree.next = corkReq;
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._writableState === undefined) {
      return false;
    }

    return this._writableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._writableState.destroyed = value;
  }
});
Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;

Writable.prototype._destroy = function (err, cb) {
  cb(err);
};

/***/ }),

/***/ 3306:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {



var _Object$setPrototypeO;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var finished = __nccwpck_require__(6080);

var kLastResolve = Symbol('lastResolve');
var kLastReject = Symbol('lastReject');
var kError = Symbol('error');
var kEnded = Symbol('ended');
var kLastPromise = Symbol('lastPromise');
var kHandlePromise = Symbol('handlePromise');
var kStream = Symbol('stream');

function createIterResult(value, done) {
  return {
    value: value,
    done: done
  };
}

function readAndResolve(iter) {
  var resolve = iter[kLastResolve];

  if (resolve !== null) {
    var data = iter[kStream].read(); // we defer if data is null
    // we can be expecting either 'end' or
    // 'error'

    if (data !== null) {
      iter[kLastPromise] = null;
      iter[kLastResolve] = null;
      iter[kLastReject] = null;
      resolve(createIterResult(data, false));
    }
  }
}

function onReadable(iter) {
  // we wait for the next tick, because it might
  // emit an error with process.nextTick
  process.nextTick(readAndResolve, iter);
}

function wrapForNext(lastPromise, iter) {
  return function (resolve, reject) {
    lastPromise.then(function () {
      if (iter[kEnded]) {
        resolve(createIterResult(undefined, true));
        return;
      }

      iter[kHandlePromise](resolve, reject);
    }, reject);
  };
}

var AsyncIteratorPrototype = Object.getPrototypeOf(function () {});
var ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {
  get stream() {
    return this[kStream];
  },

  next: function next() {
    var _this = this;

    // if we have detected an error in the meanwhile
    // reject straight away
    var error = this[kError];

    if (error !== null) {
      return Promise.reject(error);
    }

    if (this[kEnded]) {
      return Promise.resolve(createIterResult(undefined, true));
    }

    if (this[kStream].destroyed) {
      // We need to defer via nextTick because if .destroy(err) is
      // called, the error will be emitted via nextTick, and
      // we cannot guarantee that there is no error lingering around
      // waiting to be emitted.
      return new Promise(function (resolve, reject) {
        process.nextTick(function () {
          if (_this[kError]) {
            reject(_this[kError]);
          } else {
            resolve(createIterResult(undefined, true));
          }
        });
      });
    } // if we have multiple next() calls
    // we will wait for the previous Promise to finish
    // this logic is optimized to support for await loops,
    // where next() is only called once at a time


    var lastPromise = this[kLastPromise];
    var promise;

    if (lastPromise) {
      promise = new Promise(wrapForNext(lastPromise, this));
    } else {
      // fast path needed to support multiple this.push()
      // without triggering the next() queue
      var data = this[kStream].read();

      if (data !== null) {
        return Promise.resolve(createIterResult(data, false));
      }

      promise = new Promise(this[kHandlePromise]);
    }

    this[kLastPromise] = promise;
    return promise;
  }
}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {
  return this;
}), _defineProperty(_Object$setPrototypeO, "return", function _return() {
  var _this2 = this;

  // destroy(err, cb) is a private API
  // we can guarantee we have that here, because we control the
  // Readable class this is attached to
  return new Promise(function (resolve, reject) {
    _this2[kStream].destroy(null, function (err) {
      if (err) {
        reject(err);
        return;
      }

      resolve(createIterResult(undefined, true));
    });
  });
}), _Object$setPrototypeO), AsyncIteratorPrototype);

var createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {
  var _Object$create;

  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {
    value: stream,
    writable: true
  }), _defineProperty(_Object$create, kLastResolve, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kLastReject, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kError, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kEnded, {
    value: stream._readableState.endEmitted,
    writable: true
  }), _defineProperty(_Object$create, kHandlePromise, {
    value: function value(resolve, reject) {
      var data = iterator[kStream].read();

      if (data) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        resolve(createIterResult(data, false));
      } else {
        iterator[kLastResolve] = resolve;
        iterator[kLastReject] = reject;
      }
    },
    writable: true
  }), _Object$create));
  iterator[kLastPromise] = null;
  finished(stream, function (err) {
    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {
      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise
      // returned by next() and store the error

      if (reject !== null) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        reject(err);
      }

      iterator[kError] = err;
      return;
    }

    var resolve = iterator[kLastResolve];

    if (resolve !== null) {
      iterator[kLastPromise] = null;
      iterator[kLastResolve] = null;
      iterator[kLastReject] = null;
      resolve(createIterResult(undefined, true));
    }

    iterator[kEnded] = true;
  });
  stream.on('readable', onReadable.bind(null, iterator));
  return iterator;
};

module.exports = createReadableStreamAsyncIterator;

/***/ }),

/***/ 6522:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {



function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var _require = __nccwpck_require__(4300),
    Buffer = _require.Buffer;

var _require2 = __nccwpck_require__(3837),
    inspect = _require2.inspect;

var custom = inspect && inspect.custom || 'inspect';

function copyBuffer(src, target, offset) {
  Buffer.prototype.copy.call(src, target, offset);
}

module.exports =
/*#__PURE__*/
function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  _createClass(BufferList, [{
    key: "push",
    value: function push(v) {
      var entry = {
        data: v,
        next: null
      };
      if (this.length > 0) this.tail.next = entry;else this.head = entry;
      this.tail = entry;
      ++this.length;
    }
  }, {
    key: "unshift",
    value: function unshift(v) {
      var entry = {
        data: v,
        next: this.head
      };
      if (this.length === 0) this.tail = entry;
      this.head = entry;
      ++this.length;
    }
  }, {
    key: "shift",
    value: function shift() {
      if (this.length === 0) return;
      var ret = this.head.data;
      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
      --this.length;
      return ret;
    }
  }, {
    key: "clear",
    value: function clear() {
      this.head = this.tail = null;
      this.length = 0;
    }
  }, {
    key: "join",
    value: function join(s) {
      if (this.length === 0) return '';
      var p = this.head;
      var ret = '' + p.data;

      while (p = p.next) {
        ret += s + p.data;
      }

      return ret;
    }
  }, {
    key: "concat",
    value: function concat(n) {
      if (this.length === 0) return Buffer.alloc(0);
      var ret = Buffer.allocUnsafe(n >>> 0);
      var p = this.head;
      var i = 0;

      while (p) {
        copyBuffer(p.data, ret, i);
        i += p.data.length;
        p = p.next;
      }

      return ret;
    } // Consumes a specified amount of bytes or characters from the buffered data.

  }, {
    key: "consume",
    value: function consume(n, hasStrings) {
      var ret;

      if (n < this.head.data.length) {
        // `slice` is the same for buffers and strings.
        ret = this.head.data.slice(0, n);
        this.head.data = this.head.data.slice(n);
      } else if (n === this.head.data.length) {
        // First chunk is a perfect match.
        ret = this.shift();
      } else {
        // Result spans more than one buffer.
        ret = hasStrings ? this._getString(n) : this._getBuffer(n);
      }

      return ret;
    }
  }, {
    key: "first",
    value: function first() {
      return this.head.data;
    } // Consumes a specified amount of characters from the buffered data.

  }, {
    key: "_getString",
    value: function _getString(n) {
      var p = this.head;
      var c = 1;
      var ret = p.data;
      n -= ret.length;

      while (p = p.next) {
        var str = p.data;
        var nb = n > str.length ? str.length : n;
        if (nb === str.length) ret += str;else ret += str.slice(0, n);
        n -= nb;

        if (n === 0) {
          if (nb === str.length) {
            ++c;
            if (p.next) this.head = p.next;else this.head = this.tail = null;
          } else {
            this.head = p;
            p.data = str.slice(nb);
          }

          break;
        }

        ++c;
      }

      this.length -= c;
      return ret;
    } // Consumes a specified amount of bytes from the buffered data.

  }, {
    key: "_getBuffer",
    value: function _getBuffer(n) {
      var ret = Buffer.allocUnsafe(n);
      var p = this.head;
      var c = 1;
      p.data.copy(ret);
      n -= p.data.length;

      while (p = p.next) {
        var buf = p.data;
        var nb = n > buf.length ? buf.length : n;
        buf.copy(ret, ret.length - n, 0, nb);
        n -= nb;

        if (n === 0) {
          if (nb === buf.length) {
            ++c;
            if (p.next) this.head = p.next;else this.head = this.tail = null;
          } else {
            this.head = p;
            p.data = buf.slice(nb);
          }

          break;
        }

        ++c;
      }

      this.length -= c;
      return ret;
    } // Make sure the linked list only shows the minimal necessary information.

  }, {
    key: custom,
    value: function value(_, options) {
      return inspect(this, _objectSpread({}, options, {
        // Only inspect one level.
        depth: 0,
        // It should not recurse.
        customInspect: false
      }));
    }
  }]);

  return BufferList;
}();

/***/ }),

/***/ 7049:
/***/ ((module) => {

 // undocumented cb() API, needed for core, not for public API

function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err) {
      if (!this._writableState) {
        process.nextTick(emitErrorNT, this, err);
      } else if (!this._writableState.errorEmitted) {
        this._writableState.errorEmitted = true;
        process.nextTick(emitErrorNT, this, err);
      }
    }

    return this;
  } // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks


  if (this._readableState) {
    this._readableState.destroyed = true;
  } // if this is a duplex stream mark the writable part as destroyed as well


  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      if (!_this._writableState) {
        process.nextTick(emitErrorAndCloseNT, _this, err);
      } else if (!_this._writableState.errorEmitted) {
        _this._writableState.errorEmitted = true;
        process.nextTick(emitErrorAndCloseNT, _this, err);
      } else {
        process.nextTick(emitCloseNT, _this);
      }
    } else if (cb) {
      process.nextTick(emitCloseNT, _this);
      cb(err);
    } else {
      process.nextTick(emitCloseNT, _this);
    }
  });

  return this;
}

function emitErrorAndCloseNT(self, err) {
  emitErrorNT(self, err);
  emitCloseNT(self);
}

function emitCloseNT(self) {
  if (self._writableState && !self._writableState.emitClose) return;
  if (self._readableState && !self._readableState.emitClose) return;
  self.emit('close');
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finalCalled = false;
    this._writableState.prefinished = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

function errorOrDestroy(stream, err) {
  // We have tests that rely on errors being emitted
  // in the same tick, so changing this is semver major.
  // For now when you opt-in to autoDestroy we allow
  // the error to be emitted nextTick. In a future
  // semver major update we should change the default to this.
  var rState = stream._readableState;
  var wState = stream._writableState;
  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy,
  errorOrDestroy: errorOrDestroy
};

/***/ }),

/***/ 6080:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

// Ported from https://github.com/mafintosh/end-of-stream with
// permission from the author, Mathias Buus (@mafintosh).


var ERR_STREAM_PREMATURE_CLOSE = (__nccwpck_require__(7214)/* .codes.ERR_STREAM_PREMATURE_CLOSE */ .q.ERR_STREAM_PREMATURE_CLOSE);

function once(callback) {
  var called = false;
  return function () {
    if (called) return;
    called = true;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    callback.apply(this, args);
  };
}

function noop() {}

function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
}

function eos(stream, opts, callback) {
  if (typeof opts === 'function') return eos(stream, null, opts);
  if (!opts) opts = {};
  callback = once(callback || noop);
  var readable = opts.readable || opts.readable !== false && stream.readable;
  var writable = opts.writable || opts.writable !== false && stream.writable;

  var onlegacyfinish = function onlegacyfinish() {
    if (!stream.writable) onfinish();
  };

  var writableEnded = stream._writableState && stream._writableState.finished;

  var onfinish = function onfinish() {
    writable = false;
    writableEnded = true;
    if (!readable) callback.call(stream);
  };

  var readableEnded = stream._readableState && stream._readableState.endEmitted;

  var onend = function onend() {
    readable = false;
    readableEnded = true;
    if (!writable) callback.call(stream);
  };

  var onerror = function onerror(err) {
    callback.call(stream, err);
  };

  var onclose = function onclose() {
    var err;

    if (readable && !readableEnded) {
      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }

    if (writable && !writableEnded) {
      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }
  };

  var onrequest = function onrequest() {
    stream.req.on('finish', onfinish);
  };

  if (isRequest(stream)) {
    stream.on('complete', onfinish);
    stream.on('abort', onclose);
    if (stream.req) onrequest();else stream.on('request', onrequest);
  } else if (writable && !stream._writableState) {
    // legacy streams
    stream.on('end', onlegacyfinish);
    stream.on('close', onlegacyfinish);
  }

  stream.on('end', onend);
  stream.on('finish', onfinish);
  if (opts.error !== false) stream.on('error', onerror);
  stream.on('close', onclose);
  return function () {
    stream.removeListener('complete', onfinish);
    stream.removeListener('abort', onclose);
    stream.removeListener('request', onrequest);
    if (stream.req) stream.req.removeListener('finish', onfinish);
    stream.removeListener('end', onlegacyfinish);
    stream.removeListener('close', onlegacyfinish);
    stream.removeListener('finish', onfinish);
    stream.removeListener('end', onend);
    stream.removeListener('error', onerror);
    stream.removeListener('close', onclose);
  };
}

module.exports = eos;

/***/ }),

/***/ 9082:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {



function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var ERR_INVALID_ARG_TYPE = (__nccwpck_require__(7214)/* .codes.ERR_INVALID_ARG_TYPE */ .q.ERR_INVALID_ARG_TYPE);

function from(Readable, iterable, opts) {
  var iterator;

  if (iterable && typeof iterable.next === 'function') {
    iterator = iterable;
  } else if (iterable && iterable[Symbol.asyncIterator]) iterator = iterable[Symbol.asyncIterator]();else if (iterable && iterable[Symbol.iterator]) iterator = iterable[Symbol.iterator]();else throw new ERR_INVALID_ARG_TYPE('iterable', ['Iterable'], iterable);

  var readable = new Readable(_objectSpread({
    objectMode: true
  }, opts)); // Reading boolean to protect against _read
  // being called before last iteration completion.

  var reading = false;

  readable._read = function () {
    if (!reading) {
      reading = true;
      next();
    }
  };

  function next() {
    return _next2.apply(this, arguments);
  }

  function _next2() {
    _next2 = _asyncToGenerator(function* () {
      try {
        var _ref = yield iterator.next(),
            value = _ref.value,
            done = _ref.done;

        if (done) {
          readable.push(null);
        } else if (readable.push((yield value))) {
          next();
        } else {
          reading = false;
        }
      } catch (err) {
        readable.destroy(err);
      }
    });
    return _next2.apply(this, arguments);
  }

  return readable;
}

module.exports = from;

/***/ }),

/***/ 6989:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

// Ported from https://github.com/mafintosh/pump with
// permission from the author, Mathias Buus (@mafintosh).


var eos;

function once(callback) {
  var called = false;
  return function () {
    if (called) return;
    called = true;
    callback.apply(void 0, arguments);
  };
}

var _require$codes = (__nccwpck_require__(7214)/* .codes */ .q),
    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,
    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;

function noop(err) {
  // Rethrow the error if it exists to avoid swallowing it
  if (err) throw err;
}

function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
}

function destroyer(stream, reading, writing, callback) {
  callback = once(callback);
  var closed = false;
  stream.on('close', function () {
    closed = true;
  });
  if (eos === undefined) eos = __nccwpck_require__(6080);
  eos(stream, {
    readable: reading,
    writable: writing
  }, function (err) {
    if (err) return callback(err);
    closed = true;
    callback();
  });
  var destroyed = false;
  return function (err) {
    if (closed) return;
    if (destroyed) return;
    destroyed = true; // request.destroy just do .end - .abort is what we want

    if (isRequest(stream)) return stream.abort();
    if (typeof stream.destroy === 'function') return stream.destroy();
    callback(err || new ERR_STREAM_DESTROYED('pipe'));
  };
}

function call(fn) {
  fn();
}

function pipe(from, to) {
  return from.pipe(to);
}

function popCallback(streams) {
  if (!streams.length) return noop;
  if (typeof streams[streams.length - 1] !== 'function') return noop;
  return streams.pop();
}

function pipeline() {
  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {
    streams[_key] = arguments[_key];
  }

  var callback = popCallback(streams);
  if (Array.isArray(streams[0])) streams = streams[0];

  if (streams.length < 2) {
    throw new ERR_MISSING_ARGS('streams');
  }

  var error;
  var destroys = streams.map(function (stream, i) {
    var reading = i < streams.length - 1;
    var writing = i > 0;
    return destroyer(stream, reading, writing, function (err) {
      if (!error) error = err;
      if (err) destroys.forEach(call);
      if (reading) return;
      destroys.forEach(call);
      callback(error);
    });
  });
  return streams.reduce(pipe);
}

module.exports = pipeline;

/***/ }),

/***/ 9948:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {



var ERR_INVALID_OPT_VALUE = (__nccwpck_require__(7214)/* .codes.ERR_INVALID_OPT_VALUE */ .q.ERR_INVALID_OPT_VALUE);

function highWaterMarkFrom(options, isDuplex, duplexKey) {
  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;
}

function getHighWaterMark(state, options, duplexKey, isDuplex) {
  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);

  if (hwm != null) {
    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {
      var name = isDuplex ? duplexKey : 'highWaterMark';
      throw new ERR_INVALID_OPT_VALUE(name, hwm);
    }

    return Math.floor(hwm);
  } // Default value


  return state.objectMode ? 16 : 16 * 1024;
}

module.exports = {
  getHighWaterMark: getHighWaterMark
};

/***/ }),

/***/ 2387:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = __nccwpck_require__(2781);


/***/ }),

/***/ 1642:
/***/ ((module, exports, __nccwpck_require__) => {

var Stream = __nccwpck_require__(2781);
if (process.env.READABLE_STREAM === 'disable' && Stream) {
  module.exports = Stream.Readable;
  Object.assign(module.exports, Stream);
  module.exports.Stream = Stream;
} else {
  exports = module.exports = __nccwpck_require__(1433);
  exports.Stream = Stream || exports;
  exports.Readable = exports;
  exports.Writable = __nccwpck_require__(6993);
  exports.Duplex = __nccwpck_require__(1359);
  exports.Transform = __nccwpck_require__(4415);
  exports.PassThrough = __nccwpck_require__(1542);
  exports.finished = __nccwpck_require__(6080);
  exports.pipeline = __nccwpck_require__(6989);
}


/***/ }),

/***/ 4959:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const assert = __nccwpck_require__(9491)
const path = __nccwpck_require__(1017)
const fs = __nccwpck_require__(7147)
let glob = undefined
try {
  glob = __nccwpck_require__(1957)
} catch (_err) {
  // treat glob as optional.
}

const defaultGlobOpts = {
  nosort: true,
  silent: true
}

// for EMFILE handling
let timeout = 0

const isWindows = (process.platform === "win32")

const defaults = options => {
  const methods = [
    'unlink',
    'chmod',
    'stat',
    'lstat',
    'rmdir',
    'readdir'
  ]
  methods.forEach(m => {
    options[m] = options[m] || fs[m]
    m = m + 'Sync'
    options[m] = options[m] || fs[m]
  })

  options.maxBusyTries = options.maxBusyTries || 3
  options.emfileWait = options.emfileWait || 1000
  if (options.glob === false) {
    options.disableGlob = true
  }
  if (options.disableGlob !== true && glob === undefined) {
    throw Error('glob dependency not found, set `options.disableGlob = true` if intentional')
  }
  options.disableGlob = options.disableGlob || false
  options.glob = options.glob || defaultGlobOpts
}

const rimraf = (p, options, cb) => {
  if (typeof options === 'function') {
    cb = options
    options = {}
  }

  assert(p, 'rimraf: missing path')
  assert.equal(typeof p, 'string', 'rimraf: path should be a string')
  assert.equal(typeof cb, 'function', 'rimraf: callback function required')
  assert(options, 'rimraf: invalid options argument provided')
  assert.equal(typeof options, 'object', 'rimraf: options should be object')

  defaults(options)

  let busyTries = 0
  let errState = null
  let n = 0

  const next = (er) => {
    errState = errState || er
    if (--n === 0)
      cb(errState)
  }

  const afterGlob = (er, results) => {
    if (er)
      return cb(er)

    n = results.length
    if (n === 0)
      return cb()

    results.forEach(p => {
      const CB = (er) => {
        if (er) {
          if ((er.code === "EBUSY" || er.code === "ENOTEMPTY" || er.code === "EPERM") &&
              busyTries < options.maxBusyTries) {
            busyTries ++
            // try again, with the same exact callback as this one.
            return setTimeout(() => rimraf_(p, options, CB), busyTries * 100)
          }

          // this one won't happen if graceful-fs is used.
          if (er.code === "EMFILE" && timeout < options.emfileWait) {
            return setTimeout(() => rimraf_(p, options, CB), timeout ++)
          }

          // already gone
          if (er.code === "ENOENT") er = null
        }

        timeout = 0
        next(er)
      }
      rimraf_(p, options, CB)
    })
  }

  if (options.disableGlob || !glob.hasMagic(p))
    return afterGlob(null, [p])

  options.lstat(p, (er, stat) => {
    if (!er)
      return afterGlob(null, [p])

    glob(p, options.glob, afterGlob)
  })

}

// Two possible strategies.
// 1. Assume it's a file.  unlink it, then do the dir stuff on EPERM or EISDIR
// 2. Assume it's a directory.  readdir, then do the file stuff on ENOTDIR
//
// Both result in an extra syscall when you guess wrong.  However, there
// are likely far more normal files in the world than directories.  This
// is based on the assumption that a the average number of files per
// directory is >= 1.
//
// If anyone ever complains about this, then I guess the strategy could
// be made configurable somehow.  But until then, YAGNI.
const rimraf_ = (p, options, cb) => {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')

  // sunos lets the root user unlink directories, which is... weird.
  // so we have to lstat here and make sure it's not a dir.
  options.lstat(p, (er, st) => {
    if (er && er.code === "ENOENT")
      return cb(null)

    // Windows can EPERM on stat.  Life is suffering.
    if (er && er.code === "EPERM" && isWindows)
      fixWinEPERM(p, options, er, cb)

    if (st && st.isDirectory())
      return rmdir(p, options, er, cb)

    options.unlink(p, er => {
      if (er) {
        if (er.code === "ENOENT")
          return cb(null)
        if (er.code === "EPERM")
          return (isWindows)
            ? fixWinEPERM(p, options, er, cb)
            : rmdir(p, options, er, cb)
        if (er.code === "EISDIR")
          return rmdir(p, options, er, cb)
      }
      return cb(er)
    })
  })
}

const fixWinEPERM = (p, options, er, cb) => {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')

  options.chmod(p, 0o666, er2 => {
    if (er2)
      cb(er2.code === "ENOENT" ? null : er)
    else
      options.stat(p, (er3, stats) => {
        if (er3)
          cb(er3.code === "ENOENT" ? null : er)
        else if (stats.isDirectory())
          rmdir(p, options, er, cb)
        else
          options.unlink(p, cb)
      })
  })
}

const fixWinEPERMSync = (p, options, er) => {
  assert(p)
  assert(options)

  try {
    options.chmodSync(p, 0o666)
  } catch (er2) {
    if (er2.code === "ENOENT")
      return
    else
      throw er
  }

  let stats
  try {
    stats = options.statSync(p)
  } catch (er3) {
    if (er3.code === "ENOENT")
      return
    else
      throw er
  }

  if (stats.isDirectory())
    rmdirSync(p, options, er)
  else
    options.unlinkSync(p)
}

const rmdir = (p, options, originalEr, cb) => {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')

  // try to rmdir first, and only readdir on ENOTEMPTY or EEXIST (SunOS)
  // if we guessed wrong, and it's not a directory, then
  // raise the original error.
  options.rmdir(p, er => {
    if (er && (er.code === "ENOTEMPTY" || er.code === "EEXIST" || er.code === "EPERM"))
      rmkids(p, options, cb)
    else if (er && er.code === "ENOTDIR")
      cb(originalEr)
    else
      cb(er)
  })
}

const rmkids = (p, options, cb) => {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')

  options.readdir(p, (er, files) => {
    if (er)
      return cb(er)
    let n = files.length
    if (n === 0)
      return options.rmdir(p, cb)
    let errState
    files.forEach(f => {
      rimraf(path.join(p, f), options, er => {
        if (errState)
          return
        if (er)
          return cb(errState = er)
        if (--n === 0)
          options.rmdir(p, cb)
      })
    })
  })
}

// this looks simpler, and is strictly *faster*, but will
// tie up the JavaScript thread and fail on excessively
// deep directory trees.
const rimrafSync = (p, options) => {
  options = options || {}
  defaults(options)

  assert(p, 'rimraf: missing path')
  assert.equal(typeof p, 'string', 'rimraf: path should be a string')
  assert(options, 'rimraf: missing options')
  assert.equal(typeof options, 'object', 'rimraf: options should be object')

  let results

  if (options.disableGlob || !glob.hasMagic(p)) {
    results = [p]
  } else {
    try {
      options.lstatSync(p)
      results = [p]
    } catch (er) {
      results = glob.sync(p, options.glob)
    }
  }

  if (!results.length)
    return

  for (let i = 0; i < results.length; i++) {
    const p = results[i]

    let st
    try {
      st = options.lstatSync(p)
    } catch (er) {
      if (er.code === "ENOENT")
        return

      // Windows can EPERM on stat.  Life is suffering.
      if (er.code === "EPERM" && isWindows)
        fixWinEPERMSync(p, options, er)
    }

    try {
      // sunos lets the root user unlink directories, which is... weird.
      if (st && st.isDirectory())
        rmdirSync(p, options, null)
      else
        options.unlinkSync(p)
    } catch (er) {
      if (er.code === "ENOENT")
        return
      if (er.code === "EPERM")
        return isWindows ? fixWinEPERMSync(p, options, er) : rmdirSync(p, options, er)
      if (er.code !== "EISDIR")
        throw er

      rmdirSync(p, options, er)
    }
  }
}

const rmdirSync = (p, options, originalEr) => {
  assert(p)
  assert(options)

  try {
    options.rmdirSync(p)
  } catch (er) {
    if (er.code === "ENOENT")
      return
    if (er.code === "ENOTDIR")
      throw originalEr
    if (er.code === "ENOTEMPTY" || er.code === "EEXIST" || er.code === "EPERM")
      rmkidsSync(p, options)
  }
}

const rmkidsSync = (p, options) => {
  assert(p)
  assert(options)
  options.readdirSync(p).forEach(f => rimrafSync(path.join(p, f), options))

  // We only end up here once we got ENOTEMPTY at least once, and
  // at this point, we are guaranteed to have removed all the kids.
  // So, we know that it won't be ENOENT or ENOTDIR or anything else.
  // try really hard to delete stuff on windows, because it has a
  // PROFOUNDLY annoying habit of not closing handles promptly when
  // files are deleted, resulting in spurious ENOTEMPTY errors.
  const retries = isWindows ? 100 : 1
  let i = 0
  do {
    let threw = true
    try {
      const ret = options.rmdirSync(p, options)
      threw = false
      return ret
    } finally {
      if (++i < retries && threw)
        continue
    }
  } while (true)
}

module.exports = rimraf
rimraf.sync = rimrafSync


/***/ }),

/***/ 1867:
/***/ ((module, exports, __nccwpck_require__) => {

/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
/* eslint-disable node/no-deprecated-api */
var buffer = __nccwpck_require__(4300)
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.prototype = Object.create(Buffer.prototype)

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}


/***/ }),

/***/ 4841:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



/*<replacement>*/

var Buffer = (__nccwpck_require__(1867).Buffer);
/*</replacement>*/

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.s = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return byte >> 6 === 0x02 ? -1 : -2;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd';
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd';
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd';
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd';
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}

/***/ }),

/***/ 366:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

var chownr = __nccwpck_require__(9051)
var tar = __nccwpck_require__(2283)
var pump = __nccwpck_require__(8341)
var mkdirp = __nccwpck_require__(7614)
var fs = __nccwpck_require__(7147)
var path = __nccwpck_require__(1017)
var os = __nccwpck_require__(2037)

var win32 = os.platform() === 'win32'

var noop = function () {}

var echo = function (name) {
  return name
}

var normalize = !win32 ? echo : function (name) {
  return name.replace(/\\/g, '/').replace(/[:?<>|]/g, '_')
}

var statAll = function (fs, stat, cwd, ignore, entries, sort) {
  var queue = entries || ['.']

  return function loop (callback) {
    if (!queue.length) return callback()
    var next = queue.shift()
    var nextAbs = path.join(cwd, next)

    stat.call(fs, nextAbs, function (err, stat) {
      if (err) return callback(err)

      if (!stat.isDirectory()) return callback(null, next, stat)

      fs.readdir(nextAbs, function (err, files) {
        if (err) return callback(err)

        if (sort) files.sort()
        for (var i = 0; i < files.length; i++) {
          if (!ignore(path.join(cwd, next, files[i]))) queue.push(path.join(next, files[i]))
        }

        callback(null, next, stat)
      })
    })
  }
}

var strip = function (map, level) {
  return function (header) {
    header.name = header.name.split('/').slice(level).join('/')

    var linkname = header.linkname
    if (linkname && (header.type === 'link' || path.isAbsolute(linkname))) {
      header.linkname = linkname.split('/').slice(level).join('/')
    }

    return map(header)
  }
}

exports.pack = function (cwd, opts) {
  if (!cwd) cwd = '.'
  if (!opts) opts = {}

  var xfs = opts.fs || fs
  var ignore = opts.ignore || opts.filter || noop
  var map = opts.map || noop
  var mapStream = opts.mapStream || echo
  var statNext = statAll(xfs, opts.dereference ? xfs.stat : xfs.lstat, cwd, ignore, opts.entries, opts.sort)
  var strict = opts.strict !== false
  var umask = typeof opts.umask === 'number' ? ~opts.umask : ~processUmask()
  var dmode = typeof opts.dmode === 'number' ? opts.dmode : 0
  var fmode = typeof opts.fmode === 'number' ? opts.fmode : 0
  var pack = opts.pack || tar.pack()
  var finish = opts.finish || noop

  if (opts.strip) map = strip(map, opts.strip)

  if (opts.readable) {
    dmode |= parseInt(555, 8)
    fmode |= parseInt(444, 8)
  }
  if (opts.writable) {
    dmode |= parseInt(333, 8)
    fmode |= parseInt(222, 8)
  }

  var onsymlink = function (filename, header) {
    xfs.readlink(path.join(cwd, filename), function (err, linkname) {
      if (err) return pack.destroy(err)
      header.linkname = normalize(linkname)
      pack.entry(header, onnextentry)
    })
  }

  var onstat = function (err, filename, stat) {
    if (err) return pack.destroy(err)
    if (!filename) {
      if (opts.finalize !== false) pack.finalize()
      return finish(pack)
    }

    if (stat.isSocket()) return onnextentry() // tar does not support sockets...

    var header = {
      name: normalize(filename),
      mode: (stat.mode | (stat.isDirectory() ? dmode : fmode)) & umask,
      mtime: stat.mtime,
      size: stat.size,
      type: 'file',
      uid: stat.uid,
      gid: stat.gid
    }

    if (stat.isDirectory()) {
      header.size = 0
      header.type = 'directory'
      header = map(header) || header
      return pack.entry(header, onnextentry)
    }

    if (stat.isSymbolicLink()) {
      header.size = 0
      header.type = 'symlink'
      header = map(header) || header
      return onsymlink(filename, header)
    }

    // TODO: add fifo etc...

    header = map(header) || header

    if (!stat.isFile()) {
      if (strict) return pack.destroy(new Error('unsupported type for ' + filename))
      return onnextentry()
    }

    var entry = pack.entry(header, onnextentry)
    if (!entry) return

    var rs = mapStream(xfs.createReadStream(path.join(cwd, filename), { start: 0, end: header.size > 0 ? header.size - 1 : header.size }), header)

    rs.on('error', function (err) { // always forward errors on destroy
      entry.destroy(err)
    })

    pump(rs, entry)
  }

  var onnextentry = function (err) {
    if (err) return pack.destroy(err)
    statNext(onstat)
  }

  onnextentry()

  return pack
}

var head = function (list) {
  return list.length ? list[list.length - 1] : null
}

var processGetuid = function () {
  return process.getuid ? process.getuid() : -1
}

var processUmask = function () {
  return process.umask ? process.umask() : 0
}

exports.extract = function (cwd, opts) {
  if (!cwd) cwd = '.'
  if (!opts) opts = {}

  var xfs = opts.fs || fs
  var ignore = opts.ignore || opts.filter || noop
  var map = opts.map || noop
  var mapStream = opts.mapStream || echo
  var own = opts.chown !== false && !win32 && processGetuid() === 0
  var extract = opts.extract || tar.extract()
  var stack = []
  var now = new Date()
  var umask = typeof opts.umask === 'number' ? ~opts.umask : ~processUmask()
  var dmode = typeof opts.dmode === 'number' ? opts.dmode : 0
  var fmode = typeof opts.fmode === 'number' ? opts.fmode : 0
  var strict = opts.strict !== false

  if (opts.strip) map = strip(map, opts.strip)

  if (opts.readable) {
    dmode |= parseInt(555, 8)
    fmode |= parseInt(444, 8)
  }
  if (opts.writable) {
    dmode |= parseInt(333, 8)
    fmode |= parseInt(222, 8)
  }

  var utimesParent = function (name, cb) { // we just set the mtime on the parent dir again everytime we write an entry
    var top
    while ((top = head(stack)) && name.slice(0, top[0].length) !== top[0]) stack.pop()
    if (!top) return cb()
    xfs.utimes(top[0], now, top[1], cb)
  }

  var utimes = function (name, header, cb) {
    if (opts.utimes === false) return cb()

    if (header.type === 'directory') return xfs.utimes(name, now, header.mtime, cb)
    if (header.type === 'symlink') return utimesParent(name, cb) // TODO: how to set mtime on link?

    xfs.utimes(name, now, header.mtime, function (err) {
      if (err) return cb(err)
      utimesParent(name, cb)
    })
  }

  var chperm = function (name, header, cb) {
    var link = header.type === 'symlink'

    /* eslint-disable node/no-deprecated-api */
    var chmod = link ? xfs.lchmod : xfs.chmod
    var chown = link ? xfs.lchown : xfs.chown
    /* eslint-enable node/no-deprecated-api */

    if (!chmod) return cb()

    var mode = (header.mode | (header.type === 'directory' ? dmode : fmode)) & umask

    if (chown && own) chown.call(xfs, name, header.uid, header.gid, onchown)
    else onchown(null)

    function onchown (err) {
      if (err) return cb(err)
      if (!chmod) return cb()
      chmod.call(xfs, name, mode, cb)
    }
  }

  extract.on('entry', function (header, stream, next) {
    header = map(header) || header
    header.name = normalize(header.name)
    var name = path.join(cwd, path.join('/', header.name))

    if (ignore(name, header)) {
      stream.resume()
      return next()
    }

    var stat = function (err) {
      if (err) return next(err)
      utimes(name, header, function (err) {
        if (err) return next(err)
        if (win32) return next()
        chperm(name, header, next)
      })
    }

    var onsymlink = function () {
      if (win32) return next() // skip symlinks on win for now before it can be tested
      xfs.unlink(name, function () {
        xfs.symlink(header.linkname, name, stat)
      })
    }

    var onlink = function () {
      if (win32) return next() // skip links on win for now before it can be tested
      xfs.unlink(name, function () {
        var srcpath = path.join(cwd, path.join('/', header.linkname))

        xfs.link(srcpath, name, function (err) {
          if (err && err.code === 'EPERM' && opts.hardlinkAsFilesFallback) {
            stream = xfs.createReadStream(srcpath)
            return onfile()
          }

          stat(err)
        })
      })
    }

    var onfile = function () {
      var ws = xfs.createWriteStream(name)
      var rs = mapStream(stream, header)

      ws.on('error', function (err) { // always forward errors on destroy
        rs.destroy(err)
      })

      pump(rs, ws, function (err) {
        if (err) return next(err)
        ws.on('close', stat)
      })
    }

    if (header.type === 'directory') {
      stack.push([name, header.mtime])
      return mkdirfix(name, {
        fs: xfs, own: own, uid: header.uid, gid: header.gid
      }, stat)
    }

    var dir = path.dirname(name)

    validate(xfs, dir, path.join(cwd, '.'), function (err, valid) {
      if (err) return next(err)
      if (!valid) return next(new Error(dir + ' is not a valid path'))

      mkdirfix(dir, {
        fs: xfs, own: own, uid: header.uid, gid: header.gid
      }, function (err) {
        if (err) return next(err)

        switch (header.type) {
          case 'file': return onfile()
          case 'link': return onlink()
          case 'symlink': return onsymlink()
        }

        if (strict) return next(new Error('unsupported type for ' + name + ' (' + header.type + ')'))

        stream.resume()
        next()
      })
    })
  })

  if (opts.finish) extract.on('finish', opts.finish)

  return extract
}

function validate (fs, name, root, cb) {
  if (name === root) return cb(null, true)
  fs.lstat(name, function (err, st) {
    if (err && err.code !== 'ENOENT') return cb(err)
    if (err || st.isDirectory()) return validate(fs, path.join(name, '..'), root, cb)
    cb(null, false)
  })
}

function mkdirfix (name, opts, cb) {
  mkdirp(name, { fs: opts.fs }, function (err, made) {
    if (!err && made && opts.own) {
      chownr(made, opts.uid, opts.gid, cb)
    } else {
      cb(err)
    }
  })
}


/***/ }),

/***/ 7882:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var util = __nccwpck_require__(3837)
var bl = __nccwpck_require__(336)
var headers = __nccwpck_require__(8860)

var Writable = (__nccwpck_require__(1642).Writable)
var PassThrough = (__nccwpck_require__(1642).PassThrough)

var noop = function () {}

var overflow = function (size) {
  size &= 511
  return size && 512 - size
}

var emptyStream = function (self, offset) {
  var s = new Source(self, offset)
  s.end()
  return s
}

var mixinPax = function (header, pax) {
  if (pax.path) header.name = pax.path
  if (pax.linkpath) header.linkname = pax.linkpath
  if (pax.size) header.size = parseInt(pax.size, 10)
  header.pax = pax
  return header
}

var Source = function (self, offset) {
  this._parent = self
  this.offset = offset
  PassThrough.call(this, { autoDestroy: false })
}

util.inherits(Source, PassThrough)

Source.prototype.destroy = function (err) {
  this._parent.destroy(err)
}

var Extract = function (opts) {
  if (!(this instanceof Extract)) return new Extract(opts)
  Writable.call(this, opts)

  opts = opts || {}

  this._offset = 0
  this._buffer = bl()
  this._missing = 0
  this._partial = false
  this._onparse = noop
  this._header = null
  this._stream = null
  this._overflow = null
  this._cb = null
  this._locked = false
  this._destroyed = false
  this._pax = null
  this._paxGlobal = null
  this._gnuLongPath = null
  this._gnuLongLinkPath = null

  var self = this
  var b = self._buffer

  var oncontinue = function () {
    self._continue()
  }

  var onunlock = function (err) {
    self._locked = false
    if (err) return self.destroy(err)
    if (!self._stream) oncontinue()
  }

  var onstreamend = function () {
    self._stream = null
    var drain = overflow(self._header.size)
    if (drain) self._parse(drain, ondrain)
    else self._parse(512, onheader)
    if (!self._locked) oncontinue()
  }

  var ondrain = function () {
    self._buffer.consume(overflow(self._header.size))
    self._parse(512, onheader)
    oncontinue()
  }

  var onpaxglobalheader = function () {
    var size = self._header.size
    self._paxGlobal = headers.decodePax(b.slice(0, size))
    b.consume(size)
    onstreamend()
  }

  var onpaxheader = function () {
    var size = self._header.size
    self._pax = headers.decodePax(b.slice(0, size))
    if (self._paxGlobal) self._pax = Object.assign({}, self._paxGlobal, self._pax)
    b.consume(size)
    onstreamend()
  }

  var ongnulongpath = function () {
    var size = self._header.size
    this._gnuLongPath = headers.decodeLongPath(b.slice(0, size), opts.filenameEncoding)
    b.consume(size)
    onstreamend()
  }

  var ongnulonglinkpath = function () {
    var size = self._header.size
    this._gnuLongLinkPath = headers.decodeLongPath(b.slice(0, size), opts.filenameEncoding)
    b.consume(size)
    onstreamend()
  }

  var onheader = function () {
    var offset = self._offset
    var header
    try {
      header = self._header = headers.decode(b.slice(0, 512), opts.filenameEncoding, opts.allowUnknownFormat)
    } catch (err) {
      self.emit('error', err)
    }
    b.consume(512)

    if (!header) {
      self._parse(512, onheader)
      oncontinue()
      return
    }
    if (header.type === 'gnu-long-path') {
      self._parse(header.size, ongnulongpath)
      oncontinue()
      return
    }
    if (header.type === 'gnu-long-link-path') {
      self._parse(header.size, ongnulonglinkpath)
      oncontinue()
      return
    }
    if (header.type === 'pax-global-header') {
      self._parse(header.size, onpaxglobalheader)
      oncontinue()
      return
    }
    if (header.type === 'pax-header') {
      self._parse(header.size, onpaxheader)
      oncontinue()
      return
    }

    if (self._gnuLongPath) {
      header.name = self._gnuLongPath
      self._gnuLongPath = null
    }

    if (self._gnuLongLinkPath) {
      header.linkname = self._gnuLongLinkPath
      self._gnuLongLinkPath = null
    }

    if (self._pax) {
      self._header = header = mixinPax(header, self._pax)
      self._pax = null
    }

    self._locked = true

    if (!header.size || header.type === 'directory') {
      self._parse(512, onheader)
      self.emit('entry', header, emptyStream(self, offset), onunlock)
      return
    }

    self._stream = new Source(self, offset)

    self.emit('entry', header, self._stream, onunlock)
    self._parse(header.size, onstreamend)
    oncontinue()
  }

  this._onheader = onheader
  this._parse(512, onheader)
}

util.inherits(Extract, Writable)

Extract.prototype.destroy = function (err) {
  if (this._destroyed) return
  this._destroyed = true

  if (err) this.emit('error', err)
  this.emit('close')
  if (this._stream) this._stream.emit('close')
}

Extract.prototype._parse = function (size, onparse) {
  if (this._destroyed) return
  this._offset += size
  this._missing = size
  if (onparse === this._onheader) this._partial = false
  this._onparse = onparse
}

Extract.prototype._continue = function () {
  if (this._destroyed) return
  var cb = this._cb
  this._cb = noop
  if (this._overflow) this._write(this._overflow, undefined, cb)
  else cb()
}

Extract.prototype._write = function (data, enc, cb) {
  if (this._destroyed) return

  var s = this._stream
  var b = this._buffer
  var missing = this._missing
  if (data.length) this._partial = true

  // we do not reach end-of-chunk now. just forward it

  if (data.length < missing) {
    this._missing -= data.length
    this._overflow = null
    if (s) return s.write(data, cb)
    b.append(data)
    return cb()
  }

  // end-of-chunk. the parser should call cb.

  this._cb = cb
  this._missing = 0

  var overflow = null
  if (data.length > missing) {
    overflow = data.slice(missing)
    data = data.slice(0, missing)
  }

  if (s) s.end(data)
  else b.append(data)

  this._overflow = overflow
  this._onparse()
}

Extract.prototype._final = function (cb) {
  if (this._partial) return this.destroy(new Error('Unexpected end of data'))
  cb()
}

module.exports = Extract


/***/ }),

/***/ 8860:
/***/ ((__unused_webpack_module, exports) => {

var alloc = Buffer.alloc

var ZEROS = '0000000000000000000'
var SEVENS = '7777777777777777777'
var ZERO_OFFSET = '0'.charCodeAt(0)
var USTAR_MAGIC = Buffer.from('ustar\x00', 'binary')
var USTAR_VER = Buffer.from('00', 'binary')
var GNU_MAGIC = Buffer.from('ustar\x20', 'binary')
var GNU_VER = Buffer.from('\x20\x00', 'binary')
var MASK = parseInt('7777', 8)
var MAGIC_OFFSET = 257
var VERSION_OFFSET = 263

var clamp = function (index, len, defaultValue) {
  if (typeof index !== 'number') return defaultValue
  index = ~~index // Coerce to integer.
  if (index >= len) return len
  if (index >= 0) return index
  index += len
  if (index >= 0) return index
  return 0
}

var toType = function (flag) {
  switch (flag) {
    case 0:
      return 'file'
    case 1:
      return 'link'
    case 2:
      return 'symlink'
    case 3:
      return 'character-device'
    case 4:
      return 'block-device'
    case 5:
      return 'directory'
    case 6:
      return 'fifo'
    case 7:
      return 'contiguous-file'
    case 72:
      return 'pax-header'
    case 55:
      return 'pax-global-header'
    case 27:
      return 'gnu-long-link-path'
    case 28:
    case 30:
      return 'gnu-long-path'
  }

  return null
}

var toTypeflag = function (flag) {
  switch (flag) {
    case 'file':
      return 0
    case 'link':
      return 1
    case 'symlink':
      return 2
    case 'character-device':
      return 3
    case 'block-device':
      return 4
    case 'directory':
      return 5
    case 'fifo':
      return 6
    case 'contiguous-file':
      return 7
    case 'pax-header':
      return 72
  }

  return 0
}

var indexOf = function (block, num, offset, end) {
  for (; offset < end; offset++) {
    if (block[offset] === num) return offset
  }
  return end
}

var cksum = function (block) {
  var sum = 8 * 32
  for (var i = 0; i < 148; i++) sum += block[i]
  for (var j = 156; j < 512; j++) sum += block[j]
  return sum
}

var encodeOct = function (val, n) {
  val = val.toString(8)
  if (val.length > n) return SEVENS.slice(0, n) + ' '
  else return ZEROS.slice(0, n - val.length) + val + ' '
}

/* Copied from the node-tar repo and modified to meet
 * tar-stream coding standard.
 *
 * Source: https://github.com/npm/node-tar/blob/51b6627a1f357d2eb433e7378e5f05e83b7aa6cd/lib/header.js#L349
 */
function parse256 (buf) {
  // first byte MUST be either 80 or FF
  // 80 for positive, FF for 2's comp
  var positive
  if (buf[0] === 0x80) positive = true
  else if (buf[0] === 0xFF) positive = false
  else return null

  // build up a base-256 tuple from the least sig to the highest
  var tuple = []
  for (var i = buf.length - 1; i > 0; i--) {
    var byte = buf[i]
    if (positive) tuple.push(byte)
    else tuple.push(0xFF - byte)
  }

  var sum = 0
  var l = tuple.length
  for (i = 0; i < l; i++) {
    sum += tuple[i] * Math.pow(256, i)
  }

  return positive ? sum : -1 * sum
}

var decodeOct = function (val, offset, length) {
  val = val.slice(offset, offset + length)
  offset = 0

  // If prefixed with 0x80 then parse as a base-256 integer
  if (val[offset] & 0x80) {
    return parse256(val)
  } else {
    // Older versions of tar can prefix with spaces
    while (offset < val.length && val[offset] === 32) offset++
    var end = clamp(indexOf(val, 32, offset, val.length), val.length, val.length)
    while (offset < end && val[offset] === 0) offset++
    if (end === offset) return 0
    return parseInt(val.slice(offset, end).toString(), 8)
  }
}

var decodeStr = function (val, offset, length, encoding) {
  return val.slice(offset, indexOf(val, 0, offset, offset + length)).toString(encoding)
}

var addLength = function (str) {
  var len = Buffer.byteLength(str)
  var digits = Math.floor(Math.log(len) / Math.log(10)) + 1
  if (len + digits >= Math.pow(10, digits)) digits++

  return (len + digits) + str
}

exports.decodeLongPath = function (buf, encoding) {
  return decodeStr(buf, 0, buf.length, encoding)
}

exports.encodePax = function (opts) { // TODO: encode more stuff in pax
  var result = ''
  if (opts.name) result += addLength(' path=' + opts.name + '\n')
  if (opts.linkname) result += addLength(' linkpath=' + opts.linkname + '\n')
  var pax = opts.pax
  if (pax) {
    for (var key in pax) {
      result += addLength(' ' + key + '=' + pax[key] + '\n')
    }
  }
  return Buffer.from(result)
}

exports.decodePax = function (buf) {
  var result = {}

  while (buf.length) {
    var i = 0
    while (i < buf.length && buf[i] !== 32) i++
    var len = parseInt(buf.slice(0, i).toString(), 10)
    if (!len) return result

    var b = buf.slice(i + 1, len - 1).toString()
    var keyIndex = b.indexOf('=')
    if (keyIndex === -1) return result
    result[b.slice(0, keyIndex)] = b.slice(keyIndex + 1)

    buf = buf.slice(len)
  }

  return result
}

exports.encode = function (opts) {
  var buf = alloc(512)
  var name = opts.name
  var prefix = ''

  if (opts.typeflag === 5 && name[name.length - 1] !== '/') name += '/'
  if (Buffer.byteLength(name) !== name.length) return null // utf-8

  while (Buffer.byteLength(name) > 100) {
    var i = name.indexOf('/')
    if (i === -1) return null
    prefix += prefix ? '/' + name.slice(0, i) : name.slice(0, i)
    name = name.slice(i + 1)
  }

  if (Buffer.byteLength(name) > 100 || Buffer.byteLength(prefix) > 155) return null
  if (opts.linkname && Buffer.byteLength(opts.linkname) > 100) return null

  buf.write(name)
  buf.write(encodeOct(opts.mode & MASK, 6), 100)
  buf.write(encodeOct(opts.uid, 6), 108)
  buf.write(encodeOct(opts.gid, 6), 116)
  buf.write(encodeOct(opts.size, 11), 124)
  buf.write(encodeOct((opts.mtime.getTime() / 1000) | 0, 11), 136)

  buf[156] = ZERO_OFFSET + toTypeflag(opts.type)

  if (opts.linkname) buf.write(opts.linkname, 157)

  USTAR_MAGIC.copy(buf, MAGIC_OFFSET)
  USTAR_VER.copy(buf, VERSION_OFFSET)
  if (opts.uname) buf.write(opts.uname, 265)
  if (opts.gname) buf.write(opts.gname, 297)
  buf.write(encodeOct(opts.devmajor || 0, 6), 329)
  buf.write(encodeOct(opts.devminor || 0, 6), 337)

  if (prefix) buf.write(prefix, 345)

  buf.write(encodeOct(cksum(buf), 6), 148)

  return buf
}

exports.decode = function (buf, filenameEncoding, allowUnknownFormat) {
  var typeflag = buf[156] === 0 ? 0 : buf[156] - ZERO_OFFSET

  var name = decodeStr(buf, 0, 100, filenameEncoding)
  var mode = decodeOct(buf, 100, 8)
  var uid = decodeOct(buf, 108, 8)
  var gid = decodeOct(buf, 116, 8)
  var size = decodeOct(buf, 124, 12)
  var mtime = decodeOct(buf, 136, 12)
  var type = toType(typeflag)
  var linkname = buf[157] === 0 ? null : decodeStr(buf, 157, 100, filenameEncoding)
  var uname = decodeStr(buf, 265, 32)
  var gname = decodeStr(buf, 297, 32)
  var devmajor = decodeOct(buf, 329, 8)
  var devminor = decodeOct(buf, 337, 8)

  var c = cksum(buf)

  // checksum is still initial value if header was null.
  if (c === 8 * 32) return null

  // valid checksum
  if (c !== decodeOct(buf, 148, 8)) throw new Error('Invalid tar header. Maybe the tar is corrupted or it needs to be gunzipped?')

  if (USTAR_MAGIC.compare(buf, MAGIC_OFFSET, MAGIC_OFFSET + 6) === 0) {
    // ustar (posix) format.
    // prepend prefix, if present.
    if (buf[345]) name = decodeStr(buf, 345, 155, filenameEncoding) + '/' + name
  } else if (GNU_MAGIC.compare(buf, MAGIC_OFFSET, MAGIC_OFFSET + 6) === 0 &&
             GNU_VER.compare(buf, VERSION_OFFSET, VERSION_OFFSET + 2) === 0) {
    // 'gnu'/'oldgnu' format. Similar to ustar, but has support for incremental and
    // multi-volume tarballs.
  } else {
    if (!allowUnknownFormat) {
      throw new Error('Invalid tar header: unknown format.')
    }
  }

  // to support old tar versions that use trailing / to indicate dirs
  if (typeflag === 0 && name && name[name.length - 1] === '/') typeflag = 5

  return {
    name,
    mode,
    uid,
    gid,
    size,
    mtime: new Date(1000 * mtime),
    type,
    linkname,
    uname,
    gname,
    devmajor,
    devminor
  }
}


/***/ }),

/***/ 2283:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

exports.extract = __nccwpck_require__(7882)
exports.pack = __nccwpck_require__(4930)


/***/ }),

/***/ 4930:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var constants = __nccwpck_require__(3186)
var eos = __nccwpck_require__(1205)
var inherits = __nccwpck_require__(4124)
var alloc = Buffer.alloc

var Readable = (__nccwpck_require__(1642).Readable)
var Writable = (__nccwpck_require__(1642).Writable)
var StringDecoder = (__nccwpck_require__(1576).StringDecoder)

var headers = __nccwpck_require__(8860)

var DMODE = parseInt('755', 8)
var FMODE = parseInt('644', 8)

var END_OF_TAR = alloc(1024)

var noop = function () {}

var overflow = function (self, size) {
  size &= 511
  if (size) self.push(END_OF_TAR.slice(0, 512 - size))
}

function modeToType (mode) {
  switch (mode & constants.S_IFMT) {
    case constants.S_IFBLK: return 'block-device'
    case constants.S_IFCHR: return 'character-device'
    case constants.S_IFDIR: return 'directory'
    case constants.S_IFIFO: return 'fifo'
    case constants.S_IFLNK: return 'symlink'
  }

  return 'file'
}

var Sink = function (to) {
  Writable.call(this)
  this.written = 0
  this._to = to
  this._destroyed = false
}

inherits(Sink, Writable)

Sink.prototype._write = function (data, enc, cb) {
  this.written += data.length
  if (this._to.push(data)) return cb()
  this._to._drain = cb
}

Sink.prototype.destroy = function () {
  if (this._destroyed) return
  this._destroyed = true
  this.emit('close')
}

var LinkSink = function () {
  Writable.call(this)
  this.linkname = ''
  this._decoder = new StringDecoder('utf-8')
  this._destroyed = false
}

inherits(LinkSink, Writable)

LinkSink.prototype._write = function (data, enc, cb) {
  this.linkname += this._decoder.write(data)
  cb()
}

LinkSink.prototype.destroy = function () {
  if (this._destroyed) return
  this._destroyed = true
  this.emit('close')
}

var Void = function () {
  Writable.call(this)
  this._destroyed = false
}

inherits(Void, Writable)

Void.prototype._write = function (data, enc, cb) {
  cb(new Error('No body allowed for this entry'))
}

Void.prototype.destroy = function () {
  if (this._destroyed) return
  this._destroyed = true
  this.emit('close')
}

var Pack = function (opts) {
  if (!(this instanceof Pack)) return new Pack(opts)
  Readable.call(this, opts)

  this._drain = noop
  this._finalized = false
  this._finalizing = false
  this._destroyed = false
  this._stream = null
}

inherits(Pack, Readable)

Pack.prototype.entry = function (header, buffer, callback) {
  if (this._stream) throw new Error('already piping an entry')
  if (this._finalized || this._destroyed) return

  if (typeof buffer === 'function') {
    callback = buffer
    buffer = null
  }

  if (!callback) callback = noop

  var self = this

  if (!header.size || header.type === 'symlink') header.size = 0
  if (!header.type) header.type = modeToType(header.mode)
  if (!header.mode) header.mode = header.type === 'directory' ? DMODE : FMODE
  if (!header.uid) header.uid = 0
  if (!header.gid) header.gid = 0
  if (!header.mtime) header.mtime = new Date()

  if (typeof buffer === 'string') buffer = Buffer.from(buffer)
  if (Buffer.isBuffer(buffer)) {
    header.size = buffer.length
    this._encode(header)
    var ok = this.push(buffer)
    overflow(self, header.size)
    if (ok) process.nextTick(callback)
    else this._drain = callback
    return new Void()
  }

  if (header.type === 'symlink' && !header.linkname) {
    var linkSink = new LinkSink()
    eos(linkSink, function (err) {
      if (err) { // stream was closed
        self.destroy()
        return callback(err)
      }

      header.linkname = linkSink.linkname
      self._encode(header)
      callback()
    })

    return linkSink
  }

  this._encode(header)

  if (header.type !== 'file' && header.type !== 'contiguous-file') {
    process.nextTick(callback)
    return new Void()
  }

  var sink = new Sink(this)

  this._stream = sink

  eos(sink, function (err) {
    self._stream = null

    if (err) { // stream was closed
      self.destroy()
      return callback(err)
    }

    if (sink.written !== header.size) { // corrupting tar
      self.destroy()
      return callback(new Error('size mismatch'))
    }

    overflow(self, header.size)
    if (self._finalizing) self.finalize()
    callback()
  })

  return sink
}

Pack.prototype.finalize = function () {
  if (this._stream) {
    this._finalizing = true
    return
  }

  if (this._finalized) return
  this._finalized = true
  this.push(END_OF_TAR)
  this.push(null)
}

Pack.prototype.destroy = function (err) {
  if (this._destroyed) return
  this._destroyed = true

  if (err) this.emit('error', err)
  this.emit('close')
  if (this._stream && this._stream.destroy) this._stream.destroy()
}

Pack.prototype._encode = function (header) {
  if (!header.pax) {
    var buf = headers.encode(header)
    if (buf) {
      this.push(buf)
      return
    }
  }
  this._encodePax(header)
}

Pack.prototype._encodePax = function (header) {
  var paxHeader = headers.encodePax({
    name: header.name,
    linkname: header.linkname,
    pax: header.pax
  })

  var newHeader = {
    name: 'PaxHeader',
    mode: header.mode,
    uid: header.uid,
    gid: header.gid,
    size: paxHeader.length,
    mtime: header.mtime,
    type: 'pax-header',
    linkname: header.linkname && 'PaxHeader',
    uname: header.uname,
    gname: header.gname,
    devmajor: header.devmajor,
    devminor: header.devminor
  }

  this.push(headers.encode(newHeader))
  this.push(paxHeader)
  overflow(this, paxHeader.length)

  newHeader.size = header.size
  newHeader.type = header.type
  this.push(headers.encode(newHeader))
}

Pack.prototype._read = function (n) {
  var drain = this._drain
  this._drain = noop
  drain()
}

module.exports = Pack


/***/ }),

/***/ 1629:
/***/ ((module) => {

const DOMAIN_IN_URL_REGEX = /:\/\/(\S*?)(:\d+)?(\/|$)/
const DOMAIN_CHARACTERS = /([a-z0-9.-]+\.[a-z0-9]+|localhost)/i
const IP_REGEX = /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/
const ROOT_DOMAIN_REGEX = /[^.]+\.([^.]+|(gov|com|co|ne)\.\w{2})$/i

function getDomainFromOriginOrURL(originOrURL) {
  if (typeof originOrURL !== 'string') return null
  if (originOrURL.length > 10000 || originOrURL.startsWith('data:')) return null
  if (DOMAIN_IN_URL_REGEX.test(originOrURL)) return originOrURL.match(DOMAIN_IN_URL_REGEX)[1]
  if (DOMAIN_CHARACTERS.test(originOrURL)) return originOrURL.match(DOMAIN_CHARACTERS)[0]
  return null
}

function getRootDomain(originOrURL) {
  const domain = getDomainFromOriginOrURL(originOrURL)
  if (!domain) return null
  if (IP_REGEX.test(domain)) return domain
  const match = domain.match(ROOT_DOMAIN_REGEX)
  return (match && match[0]) || domain
}

function sliceSubdomainFromDomain(domain, rootDomain) {
  if (domain.length <= rootDomain.length) return domain
  return domain
    .split('.')
    .slice(1)
    .join('.')
}

function getEntityInDataset(entityByDomain, entityBySubDomain, entityByRootDomain, originOrURL) {
  const domain = getDomainFromOriginOrURL(originOrURL)
  const rootDomain = getRootDomain(domain)
  if (!domain || !rootDomain) return undefined
  if (entityByDomain.has(domain)) return entityByDomain.get(domain)

  for (
    let subdomain = domain;
    subdomain.length > rootDomain.length;
    subdomain = sliceSubdomainFromDomain(subdomain, rootDomain)
  ) {
    if (entityBySubDomain.has(subdomain)) return entityBySubDomain.get(subdomain)
  }

  if (entityByRootDomain.has(rootDomain)) return entityByRootDomain.get(rootDomain)
  return undefined
}

function getProductInDataset(entityByDomain, entityBySubDomain, entityByRootDomain, originOrURL) {
  const entity = getEntityInDataset(
    entityByDomain,
    entityBySubDomain,
    entityByRootDomain,
    originOrURL
  )
  const products = entity && entity.products
  if (!products) return undefined
  if (typeof originOrURL !== 'string') return undefined

  for (const product of products) {
    for (const pattern of product.urlPatterns) {
      if (pattern instanceof RegExp && pattern.test(originOrURL)) return product
      if (typeof pattern === 'string' && originOrURL.includes(pattern)) return product
    }
  }
  return undefined
}

function cloneEntities(entities) {
  return entities.map(entity_ => {
    const entity = {
      company: entity_.name,
      categories: [entity_.category],
      ...entity_,
    }

    const products = (entity_.products || []).map(product => ({
      company: entity.company,
      category: entity.category,
      categories: [entity.category],
      facades: [],
      ...product,
      urlPatterns: (product.urlPatterns || []).map(s =>
        s.startsWith('REGEXP:') ? new RegExp(s.slice('REGEXP:'.length)) : s
      ),
    }))

    entity.products = products
    return entity
  })
}

function createAPIFromDataset(entities_) {
  const entities = cloneEntities(entities_)
  const entityByDomain = new Map()
  const entityByRootDomain = new Map()
  const entityBySubDomain = new Map()

  for (const entity of entities) {
    entity.totalExecutionTime = Number(entity.totalExecutionTime) || 0
    entity.totalOccurrences = Number(entity.totalOccurrences) || 0
    entity.averageExecutionTime = entity.totalExecutionTime / entity.totalOccurrences

    for (const domain of entity.domains) {
      if (entityByDomain.has(domain)) {
        const duplicate = entityByDomain.get(domain)
        throw new Error(`Duplicate domain ${domain} (${entity.name} and ${duplicate.name})`)
      }

      entityByDomain.set(domain, entity)

      const rootDomain = getRootDomain(domain)
      if (domain.startsWith('*.')) {
        const wildcardDomain = domain.slice(2)
        if (wildcardDomain === rootDomain) entityByRootDomain.set(rootDomain, entity)
        else entityBySubDomain.set(wildcardDomain, entity)
      }
    }
  }

  for (const [rootDomain, entity] of entityByRootDomain.entries()) {
    if (!entity) entityByRootDomain.delete(rootDomain)
  }

  const getEntity = getEntityInDataset.bind(
    null,
    entityByDomain,
    entityBySubDomain,
    entityByRootDomain
  )
  const getProduct = getProductInDataset.bind(
    null,
    entityByDomain,
    entityBySubDomain,
    entityByRootDomain
  )
  return {getEntity, getProduct, getRootDomain, entities}
}

module.exports = {createAPIFromDataset}


/***/ }),

/***/ 2631:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const {createAPIFromDataset} = __nccwpck_require__(1629)
const entities = __nccwpck_require__(1787)
module.exports = createAPIFromDataset(entities)


/***/ }),

/***/ 1394:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = __nccwpck_require__(2631)


/***/ }),

/***/ 421:
/***/ ((module, exports, __nccwpck_require__) => {

var Stream = __nccwpck_require__(2781)

// through
//
// a stream that does nothing but re-emit the input.
// useful for aggregating a series of changing but not ending streams into one stream)

exports = module.exports = through
through.through = through

//create a readable writable stream.

function through (write, end, opts) {
  write = write || function (data) { this.queue(data) }
  end = end || function () { this.queue(null) }

  var ended = false, destroyed = false, buffer = [], _ended = false
  var stream = new Stream()
  stream.readable = stream.writable = true
  stream.paused = false

//  stream.autoPause   = !(opts && opts.autoPause   === false)
  stream.autoDestroy = !(opts && opts.autoDestroy === false)

  stream.write = function (data) {
    write.call(this, data)
    return !stream.paused
  }

  function drain() {
    while(buffer.length && !stream.paused) {
      var data = buffer.shift()
      if(null === data)
        return stream.emit('end')
      else
        stream.emit('data', data)
    }
  }

  stream.queue = stream.push = function (data) {
//    console.error(ended)
    if(_ended) return stream
    if(data === null) _ended = true
    buffer.push(data)
    drain()
    return stream
  }

  //this will be registered as the first 'end' listener
  //must call destroy next tick, to make sure we're after any
  //stream piped from here.
  //this is only a problem if end is not emitted synchronously.
  //a nicer way to do this is to make sure this is the last listener for 'end'

  stream.on('end', function () {
    stream.readable = false
    if(!stream.writable && stream.autoDestroy)
      process.nextTick(function () {
        stream.destroy()
      })
  })

  function _end () {
    stream.writable = false
    end.call(stream)
    if(!stream.readable && stream.autoDestroy)
      stream.destroy()
  }

  stream.end = function (data) {
    if(ended) return
    ended = true
    if(arguments.length) stream.write(data)
    _end() // will emit or queue
    return stream
  }

  stream.destroy = function () {
    if(destroyed) return
    destroyed = true
    ended = true
    buffer.length = 0
    stream.writable = stream.readable = false
    stream.emit('close')
    return stream
  }

  stream.pause = function () {
    if(stream.paused) return
    stream.paused = true
    return stream
  }

  stream.resume = function () {
    if(stream.paused) {
      stream.paused = false
      stream.emit('resume')
    }
    drain()
    //may have become paused again,
    //as drain emits 'data'.
    if(!stream.paused)
      stream.emit('drain')
    return stream
  }
  return stream
}



/***/ }),

/***/ 4294:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = __nccwpck_require__(4219);


/***/ }),

/***/ 4219:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {



var net = __nccwpck_require__(1808);
var tls = __nccwpck_require__(4404);
var http = __nccwpck_require__(3685);
var https = __nccwpck_require__(5687);
var events = __nccwpck_require__(2361);
var assert = __nccwpck_require__(9491);
var util = __nccwpck_require__(3837);


exports.httpOverHttp = httpOverHttp;
exports.httpsOverHttp = httpsOverHttp;
exports.httpOverHttps = httpOverHttps;
exports.httpsOverHttps = httpsOverHttps;


function httpOverHttp(options) {
  var agent = new TunnelingAgent(options);
  agent.request = http.request;
  return agent;
}

function httpsOverHttp(options) {
  var agent = new TunnelingAgent(options);
  agent.request = http.request;
  agent.createSocket = createSecureSocket;
  agent.defaultPort = 443;
  return agent;
}

function httpOverHttps(options) {
  var agent = new TunnelingAgent(options);
  agent.request = https.request;
  return agent;
}

function httpsOverHttps(options) {
  var agent = new TunnelingAgent(options);
  agent.request = https.request;
  agent.createSocket = createSecureSocket;
  agent.defaultPort = 443;
  return agent;
}


function TunnelingAgent(options) {
  var self = this;
  self.options = options || {};
  self.proxyOptions = self.options.proxy || {};
  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;
  self.requests = [];
  self.sockets = [];

  self.on('free', function onFree(socket, host, port, localAddress) {
    var options = toOptions(host, port, localAddress);
    for (var i = 0, len = self.requests.length; i < len; ++i) {
      var pending = self.requests[i];
      if (pending.host === options.host && pending.port === options.port) {
        // Detect the request to connect same origin server,
        // reuse the connection.
        self.requests.splice(i, 1);
        pending.request.onSocket(socket);
        return;
      }
    }
    socket.destroy();
    self.removeSocket(socket);
  });
}
util.inherits(TunnelingAgent, events.EventEmitter);

TunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {
  var self = this;
  var options = mergeOptions({request: req}, self.options, toOptions(host, port, localAddress));

  if (self.sockets.length >= this.maxSockets) {
    // We are over limit so we'll add it to the queue.
    self.requests.push(options);
    return;
  }

  // If we are under maxSockets create a new one.
  self.createSocket(options, function(socket) {
    socket.on('free', onFree);
    socket.on('close', onCloseOrRemove);
    socket.on('agentRemove', onCloseOrRemove);
    req.onSocket(socket);

    function onFree() {
      self.emit('free', socket, options);
    }

    function onCloseOrRemove(err) {
      self.removeSocket(socket);
      socket.removeListener('free', onFree);
      socket.removeListener('close', onCloseOrRemove);
      socket.removeListener('agentRemove', onCloseOrRemove);
    }
  });
};

TunnelingAgent.prototype.createSocket = function createSocket(options, cb) {
  var self = this;
  var placeholder = {};
  self.sockets.push(placeholder);

  var connectOptions = mergeOptions({}, self.proxyOptions, {
    method: 'CONNECT',
    path: options.host + ':' + options.port,
    agent: false,
    headers: {
      host: options.host + ':' + options.port
    }
  });
  if (options.localAddress) {
    connectOptions.localAddress = options.localAddress;
  }
  if (connectOptions.proxyAuth) {
    connectOptions.headers = connectOptions.headers || {};
    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +
        new Buffer(connectOptions.proxyAuth).toString('base64');
  }

  debug('making CONNECT request');
  var connectReq = self.request(connectOptions);
  connectReq.useChunkedEncodingByDefault = false; // for v0.6
  connectReq.once('response', onResponse); // for v0.6
  connectReq.once('upgrade', onUpgrade);   // for v0.6
  connectReq.once('connect', onConnect);   // for v0.7 or later
  connectReq.once('error', onError);
  connectReq.end();

  function onResponse(res) {
    // Very hacky. This is necessary to avoid http-parser leaks.
    res.upgrade = true;
  }

  function onUpgrade(res, socket, head) {
    // Hacky.
    process.nextTick(function() {
      onConnect(res, socket, head);
    });
  }

  function onConnect(res, socket, head) {
    connectReq.removeAllListeners();
    socket.removeAllListeners();

    if (res.statusCode !== 200) {
      debug('tunneling socket could not be established, statusCode=%d',
        res.statusCode);
      socket.destroy();
      var error = new Error('tunneling socket could not be established, ' +
        'statusCode=' + res.statusCode);
      error.code = 'ECONNRESET';
      options.request.emit('error', error);
      self.removeSocket(placeholder);
      return;
    }
    if (head.length > 0) {
      debug('got illegal response body from proxy');
      socket.destroy();
      var error = new Error('got illegal response body from proxy');
      error.code = 'ECONNRESET';
      options.request.emit('error', error);
      self.removeSocket(placeholder);
      return;
    }
    debug('tunneling connection has established');
    self.sockets[self.sockets.indexOf(placeholder)] = socket;
    return cb(socket);
  }

  function onError(cause) {
    connectReq.removeAllListeners();

    debug('tunneling socket could not be established, cause=%s\n',
          cause.message, cause.stack);
    var error = new Error('tunneling socket could not be established, ' +
                          'cause=' + cause.message);
    error.code = 'ECONNRESET';
    options.request.emit('error', error);
    self.removeSocket(placeholder);
  }
};

TunnelingAgent.prototype.removeSocket = function removeSocket(socket) {
  var pos = this.sockets.indexOf(socket)
  if (pos === -1) {
    return;
  }
  this.sockets.splice(pos, 1);

  var pending = this.requests.shift();
  if (pending) {
    // If we have pending requests and a socket gets closed a new one
    // needs to be created to take over in the pool for the one that closed.
    this.createSocket(pending, function(socket) {
      pending.request.onSocket(socket);
    });
  }
};

function createSecureSocket(options, cb) {
  var self = this;
  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {
    var hostHeader = options.request.getHeader('host');
    var tlsOptions = mergeOptions({}, self.options, {
      socket: socket,
      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host
    });

    // 0 is dummy port for v0.6
    var secureSocket = tls.connect(0, tlsOptions);
    self.sockets[self.sockets.indexOf(socket)] = secureSocket;
    cb(secureSocket);
  });
}


function toOptions(host, port, localAddress) {
  if (typeof host === 'string') { // since v0.10
    return {
      host: host,
      port: port,
      localAddress: localAddress
    };
  }
  return host; // for v0.11 or later
}

function mergeOptions(target) {
  for (var i = 1, len = arguments.length; i < len; ++i) {
    var overrides = arguments[i];
    if (typeof overrides === 'object') {
      var keys = Object.keys(overrides);
      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {
        var k = keys[j];
        if (overrides[k] !== undefined) {
          target[k] = overrides[k];
        }
      }
    }
  }
  return target;
}


var debug;
if (process.env.NODE_DEBUG && /\btunnel\b/.test(process.env.NODE_DEBUG)) {
  debug = function() {
    var args = Array.prototype.slice.call(arguments);
    if (typeof args[0] === 'string') {
      args[0] = 'TUNNEL: ' + args[0];
    } else {
      args.unshift('TUNNEL:');
    }
    console.error.apply(console, args);
  }
} else {
  debug = function() {};
}
exports.debug = debug; // for test


/***/ }),

/***/ 3467:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var through = __nccwpck_require__(421);
var bz2 = __nccwpck_require__(2589);
var bitIterator = __nccwpck_require__(7877);

module.exports = unbzip2Stream;

function unbzip2Stream() {
    var bufferQueue = [];
    var hasBytes = 0;
    var blockSize = 0;
    var broken = false;
    var done = false;
    var bitReader = null;
    var streamCRC = null;

    function decompressBlock(push){
        if(!blockSize){
            blockSize = bz2.header(bitReader);
            //console.error("got header of", blockSize);
            streamCRC = 0;
            return true;
        }else{
            var bufsize = 100000 * blockSize;
            var buf = new Int32Array(bufsize);
            
            var chunk = [];
            var f = function(b) {
                chunk.push(b);
            };

            streamCRC = bz2.decompress(bitReader, f, buf, bufsize, streamCRC);
            if (streamCRC === null) {
                // reset for next bzip2 header
                blockSize = 0;
                return false;
            }else{
                //console.error('decompressed', chunk.length,'bytes');
                push(Buffer.from(chunk));
                return true;
            }
        }
    }

    var outlength = 0;
    function decompressAndQueue(stream) {
        if (broken) return;
        try {
            return decompressBlock(function(d) {
                stream.queue(d);
                if (d !== null) {
                    //console.error('write at', outlength.toString(16));
                    outlength += d.length;
                } else {
                    //console.error('written EOS');
                }
            });
        } catch(e) {
            //console.error(e);
            stream.emit('error', e);
            broken = true;
            return false;
        }
    }

    return through(
        function write(data) {
            //console.error('received', data.length,'bytes in', typeof data);
            bufferQueue.push(data);
            hasBytes += data.length;
            if (bitReader === null) {
                bitReader = bitIterator(function() {
                    return bufferQueue.shift();
                });
            }
            while (!broken && hasBytes - bitReader.bytesRead + 1 >= ((25000 + 100000 * blockSize) || 4)){
                //console.error('decompressing with', hasBytes - bitReader.bytesRead + 1, 'bytes in buffer');
                decompressAndQueue(this);
            }
        },
        function end(x) {
            //console.error(x,'last compressing with', hasBytes, 'bytes in buffer');
            while (!broken && bitReader && hasBytes > bitReader.bytesRead){
                decompressAndQueue(this);
            }
            if (!broken) {
                if (streamCRC !== null)
                    this.emit('error', new Error("input stream ended prematurely"));
                this.queue(null);
            }
        }
    );
}



/***/ }),

/***/ 7877:
/***/ ((module) => {

var BITMASK = [0, 0x01, 0x03, 0x07, 0x0F, 0x1F, 0x3F, 0x7F, 0xFF];

// returns a function that reads bits.
// takes a buffer iterator as input
module.exports = function bitIterator(nextBuffer) {
    var bit = 0, byte = 0;
    var bytes = nextBuffer();
    var f = function(n) {
        if (n === null && bit != 0) {  // align to byte boundary
            bit = 0
            byte++;
            return;
        }
        var result = 0;
        while(n > 0) {
            if (byte >= bytes.length) {
                byte = 0;
                bytes = nextBuffer();
            }
            var left = 8 - bit;
            if (bit === 0 && n > 0)
                f.bytesRead++;
            if (n >= left) {
                result <<= left;
                result |= (BITMASK[left] & bytes[byte++]);
                bit = 0;
                n -= left;
            } else {
                result <<= n;
                result |= ((bytes[byte] & (BITMASK[n] << (8 - n - bit))) >> (8 - n - bit));
                bit += n;
                n = 0;
            }
        }
        return result;
    };
    f.bytesRead = 0;
    return f;
};


/***/ }),

/***/ 2589:
/***/ ((module) => {

/* 
  bzip2.js - a small bzip2 decompression implementation
  
  Copyright 2011 by antimatter15 (antimatter15@gmail.com)
  
  Based on micro-bunzip by Rob Landley (rob@landley.net).

  Copyright (c) 2011 by antimatter15 (antimatter15@gmail.com).

  Permission is hereby granted, free of charge, to any person obtaining a
  copy of this software and associated documentation files (the "Software"),
  to deal in the Software without restriction, including without limitation
  the rights to use, copy, modify, merge, publish, distribute, sublicense,
  and/or sell copies of the Software, and to permit persons to whom the
  Software is furnished to do so, subject to the following conditions:
  
  The above copyright notice and this permission notice shall be included
  in all copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
  DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH
  THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/
function Bzip2Error(message) {
    this.name = 'Bzip2Error';
    this.message = message;
    this.stack = (new Error()).stack;
}
Bzip2Error.prototype = new Error;
 
var message = {
    Error: function(message) {throw new Bzip2Error(message);}
};

var bzip2 = {};
bzip2.Bzip2Error = Bzip2Error;

bzip2.crcTable =
[
   0x00000000, 0x04c11db7, 0x09823b6e, 0x0d4326d9,
   0x130476dc, 0x17c56b6b, 0x1a864db2, 0x1e475005,
   0x2608edb8, 0x22c9f00f, 0x2f8ad6d6, 0x2b4bcb61,
   0x350c9b64, 0x31cd86d3, 0x3c8ea00a, 0x384fbdbd,
   0x4c11db70, 0x48d0c6c7, 0x4593e01e, 0x4152fda9,
   0x5f15adac, 0x5bd4b01b, 0x569796c2, 0x52568b75,
   0x6a1936c8, 0x6ed82b7f, 0x639b0da6, 0x675a1011,
   0x791d4014, 0x7ddc5da3, 0x709f7b7a, 0x745e66cd,
   0x9823b6e0, 0x9ce2ab57, 0x91a18d8e, 0x95609039,
   0x8b27c03c, 0x8fe6dd8b, 0x82a5fb52, 0x8664e6e5,
   0xbe2b5b58, 0xbaea46ef, 0xb7a96036, 0xb3687d81,
   0xad2f2d84, 0xa9ee3033, 0xa4ad16ea, 0xa06c0b5d,
   0xd4326d90, 0xd0f37027, 0xddb056fe, 0xd9714b49,
   0xc7361b4c, 0xc3f706fb, 0xceb42022, 0xca753d95,
   0xf23a8028, 0xf6fb9d9f, 0xfbb8bb46, 0xff79a6f1,
   0xe13ef6f4, 0xe5ffeb43, 0xe8bccd9a, 0xec7dd02d,
   0x34867077, 0x30476dc0, 0x3d044b19, 0x39c556ae,
   0x278206ab, 0x23431b1c, 0x2e003dc5, 0x2ac12072,
   0x128e9dcf, 0x164f8078, 0x1b0ca6a1, 0x1fcdbb16,
   0x018aeb13, 0x054bf6a4, 0x0808d07d, 0x0cc9cdca,
   0x7897ab07, 0x7c56b6b0, 0x71159069, 0x75d48dde,
   0x6b93dddb, 0x6f52c06c, 0x6211e6b5, 0x66d0fb02,
   0x5e9f46bf, 0x5a5e5b08, 0x571d7dd1, 0x53dc6066,
   0x4d9b3063, 0x495a2dd4, 0x44190b0d, 0x40d816ba,
   0xaca5c697, 0xa864db20, 0xa527fdf9, 0xa1e6e04e,
   0xbfa1b04b, 0xbb60adfc, 0xb6238b25, 0xb2e29692,
   0x8aad2b2f, 0x8e6c3698, 0x832f1041, 0x87ee0df6,
   0x99a95df3, 0x9d684044, 0x902b669d, 0x94ea7b2a,
   0xe0b41de7, 0xe4750050, 0xe9362689, 0xedf73b3e,
   0xf3b06b3b, 0xf771768c, 0xfa325055, 0xfef34de2,
   0xc6bcf05f, 0xc27dede8, 0xcf3ecb31, 0xcbffd686,
   0xd5b88683, 0xd1799b34, 0xdc3abded, 0xd8fba05a,
   0x690ce0ee, 0x6dcdfd59, 0x608edb80, 0x644fc637,
   0x7a089632, 0x7ec98b85, 0x738aad5c, 0x774bb0eb,
   0x4f040d56, 0x4bc510e1, 0x46863638, 0x42472b8f,
   0x5c007b8a, 0x58c1663d, 0x558240e4, 0x51435d53,
   0x251d3b9e, 0x21dc2629, 0x2c9f00f0, 0x285e1d47,
   0x36194d42, 0x32d850f5, 0x3f9b762c, 0x3b5a6b9b,
   0x0315d626, 0x07d4cb91, 0x0a97ed48, 0x0e56f0ff,
   0x1011a0fa, 0x14d0bd4d, 0x19939b94, 0x1d528623,
   0xf12f560e, 0xf5ee4bb9, 0xf8ad6d60, 0xfc6c70d7,
   0xe22b20d2, 0xe6ea3d65, 0xeba91bbc, 0xef68060b,
   0xd727bbb6, 0xd3e6a601, 0xdea580d8, 0xda649d6f,
   0xc423cd6a, 0xc0e2d0dd, 0xcda1f604, 0xc960ebb3,
   0xbd3e8d7e, 0xb9ff90c9, 0xb4bcb610, 0xb07daba7,
   0xae3afba2, 0xaafbe615, 0xa7b8c0cc, 0xa379dd7b,
   0x9b3660c6, 0x9ff77d71, 0x92b45ba8, 0x9675461f,
   0x8832161a, 0x8cf30bad, 0x81b02d74, 0x857130c3,
   0x5d8a9099, 0x594b8d2e, 0x5408abf7, 0x50c9b640,
   0x4e8ee645, 0x4a4ffbf2, 0x470cdd2b, 0x43cdc09c,
   0x7b827d21, 0x7f436096, 0x7200464f, 0x76c15bf8,
   0x68860bfd, 0x6c47164a, 0x61043093, 0x65c52d24,
   0x119b4be9, 0x155a565e, 0x18197087, 0x1cd86d30,
   0x029f3d35, 0x065e2082, 0x0b1d065b, 0x0fdc1bec,
   0x3793a651, 0x3352bbe6, 0x3e119d3f, 0x3ad08088,
   0x2497d08d, 0x2056cd3a, 0x2d15ebe3, 0x29d4f654,
   0xc5a92679, 0xc1683bce, 0xcc2b1d17, 0xc8ea00a0,
   0xd6ad50a5, 0xd26c4d12, 0xdf2f6bcb, 0xdbee767c,
   0xe3a1cbc1, 0xe760d676, 0xea23f0af, 0xeee2ed18,
   0xf0a5bd1d, 0xf464a0aa, 0xf9278673, 0xfde69bc4,
   0x89b8fd09, 0x8d79e0be, 0x803ac667, 0x84fbdbd0,
   0x9abc8bd5, 0x9e7d9662, 0x933eb0bb, 0x97ffad0c,
   0xafb010b1, 0xab710d06, 0xa6322bdf, 0xa2f33668,
   0xbcb4666d, 0xb8757bda, 0xb5365d03, 0xb1f740b4
];

bzip2.array = function(bytes) {
    var bit = 0, byte = 0;
    var BITMASK = [0, 0x01, 0x03, 0x07, 0x0F, 0x1F, 0x3F, 0x7F, 0xFF ];
    return function(n) {
        var result = 0;
        while(n > 0) {
            var left = 8 - bit;
            if (n >= left) {
                result <<= left;
                result |= (BITMASK[left] & bytes[byte++]);
                bit = 0;
                n -= left;
            } else {
                result <<= n;
                result |= ((bytes[byte] & (BITMASK[n] << (8 - n - bit))) >> (8 - n - bit));
                bit += n;
                n = 0;
            }
        }
        return result;
    }
}

    
bzip2.simple = function(srcbuffer, stream) {
    var bits = bzip2.array(srcbuffer);
    var size = bzip2.header(bits);
    var ret = false;
    var bufsize = 100000 * size;
    var buf = new Int32Array(bufsize);
    
    do {
        ret = bzip2.decompress(bits, stream, buf, bufsize);        
    } while(!ret);
}

bzip2.header = function(bits) {
    this.byteCount = new Int32Array(256);
    this.symToByte = new Uint8Array(256);
    this.mtfSymbol = new Int32Array(256);
    this.selectors = new Uint8Array(0x8000);

    if (bits(8*3) != 4348520) message.Error("No magic number found");

    var i = bits(8) - 48;
    if (i < 1 || i > 9) message.Error("Not a BZIP archive");
    return i;
};


//takes a function for reading the block data (starting with 0x314159265359)
//a block size (0-9) (optional, defaults to 9)
//a length at which to stop decompressing and return the output
bzip2.decompress = function(bits, stream, buf, bufsize, streamCRC) {
    var MAX_HUFCODE_BITS = 20;
    var MAX_SYMBOLS = 258;
    var SYMBOL_RUNA = 0;
    var SYMBOL_RUNB = 1;
    var GROUP_SIZE = 50;
    var crc = 0 ^ (-1);
    
    for(var h = '', i = 0; i < 6; i++) h += bits(8).toString(16);
    if (h == "177245385090") {
      var finalCRC = bits(32)|0;
      if (finalCRC !== streamCRC) message.Error("Error in bzip2: crc32 do not match");
      // align stream to byte
      bits(null);
      return null; // reset streamCRC for next call
    }
    if (h != "314159265359") message.Error("eek not valid bzip data");
    var crcblock = bits(32)|0; // CRC code
    if (bits(1)) message.Error("unsupported obsolete version");
    var origPtr = bits(24);
    if (origPtr > bufsize) message.Error("Initial position larger than buffer size");
    var t = bits(16);
    var symTotal = 0;
    for (i = 0; i < 16; i++) {
        if (t & (1 << (15 - i))) {
            var k = bits(16);
            for(j = 0; j < 16; j++) {
                if (k & (1 << (15 - j))) {
                    this.symToByte[symTotal++] = (16 * i) + j;
                }
            }
        }
    }

    var groupCount = bits(3);
    if (groupCount < 2 || groupCount > 6) message.Error("another error");
    var nSelectors = bits(15);
    if (nSelectors == 0) message.Error("meh");
    for(var i = 0; i < groupCount; i++) this.mtfSymbol[i] = i;

    for(var i = 0; i < nSelectors; i++) {
        for(var j = 0; bits(1); j++) if (j >= groupCount) message.Error("whoops another error");
        var uc = this.mtfSymbol[j];
        for(var k = j-1; k>=0; k--) {
            this.mtfSymbol[k+1] = this.mtfSymbol[k];
        }
        this.mtfSymbol[0] = uc;
        this.selectors[i] = uc;
    }

    var symCount = symTotal + 2;
    var groups = [];
    var length = new Uint8Array(MAX_SYMBOLS),
    temp = new Uint16Array(MAX_HUFCODE_BITS+1);

    var hufGroup;

    for(var j = 0; j < groupCount; j++) {
        t = bits(5); //lengths
        for(var i = 0; i < symCount; i++) {
            while(true){
                if (t < 1 || t > MAX_HUFCODE_BITS) message.Error("I gave up a while ago on writing error messages");
                if (!bits(1)) break;
                if (!bits(1)) t++;
                else t--;
            }
            length[i] = t;
        }
        var  minLen,  maxLen;
        minLen = maxLen = length[0];
        for(var i = 1; i < symCount; i++) {
            if (length[i] > maxLen) maxLen = length[i];
            else if (length[i] < minLen) minLen = length[i];
        }
        hufGroup = groups[j] = {};
        hufGroup.permute = new Int32Array(MAX_SYMBOLS);
        hufGroup.limit = new Int32Array(MAX_HUFCODE_BITS + 1);
        hufGroup.base = new Int32Array(MAX_HUFCODE_BITS + 1);

        hufGroup.minLen = minLen;
        hufGroup.maxLen = maxLen;
        var base = hufGroup.base;
        var limit = hufGroup.limit;
        var pp = 0;
        for(var i = minLen; i <= maxLen; i++)
        for(var t = 0; t < symCount; t++)
        if (length[t] == i) hufGroup.permute[pp++] = t;
        for(i = minLen; i <= maxLen; i++) temp[i] = limit[i] = 0;
        for(i = 0; i < symCount; i++) temp[length[i]]++;
        pp = t = 0;
        for(i = minLen; i < maxLen; i++) {
            pp += temp[i];
            limit[i] = pp - 1;
            pp <<= 1;
            base[i+1] = pp - (t += temp[i]);
        }
        limit[maxLen] = pp + temp[maxLen] - 1;
        base[minLen] = 0;
    }

    for(var i = 0; i < 256; i++) { 
        this.mtfSymbol[i] = i;
        this.byteCount[i] = 0;
    }
    var runPos, count, symCount, selector;
    runPos = count = symCount = selector = 0;    
    while(true) {
        if (!(symCount--)) {
            symCount = GROUP_SIZE - 1;
            if (selector >= nSelectors) message.Error("meow i'm a kitty, that's an error");
            hufGroup = groups[this.selectors[selector++]];
            base = hufGroup.base;
            limit = hufGroup.limit;
        }
        i = hufGroup.minLen;
        j = bits(i);
        while(true) {
            if (i > hufGroup.maxLen) message.Error("rawr i'm a dinosaur");
            if (j <= limit[i]) break;
            i++;
            j = (j << 1) | bits(1);
        }
        j -= base[i];
        if (j < 0 || j >= MAX_SYMBOLS) message.Error("moo i'm a cow");
        var nextSym = hufGroup.permute[j];
        if (nextSym == SYMBOL_RUNA || nextSym == SYMBOL_RUNB) {
            if (!runPos){
                runPos = 1;
                t = 0;
            }
            if (nextSym == SYMBOL_RUNA) t += runPos;
            else t += 2 * runPos;
            runPos <<= 1;
            continue;
        }
        if (runPos) {
            runPos = 0;
            if (count + t > bufsize) message.Error("Boom.");
            uc = this.symToByte[this.mtfSymbol[0]];
            this.byteCount[uc] += t;
            while(t--) buf[count++] = uc;
        }
        if (nextSym > symTotal) break;
        if (count >= bufsize) message.Error("I can't think of anything. Error");
        i = nextSym - 1;
        uc = this.mtfSymbol[i];
        for(var k = i-1; k>=0; k--) {
            this.mtfSymbol[k+1] = this.mtfSymbol[k];
        }
        this.mtfSymbol[0] = uc
        uc = this.symToByte[uc];
        this.byteCount[uc]++;
        buf[count++] = uc;
    }
    if (origPtr < 0 || origPtr >= count) message.Error("I'm a monkey and I'm throwing something at someone, namely you");
    var j = 0;
    for(var i = 0; i < 256; i++) {
        k = j + this.byteCount[i];
        this.byteCount[i] = j;
        j = k;
    }
    for(var i = 0; i < count; i++) {
        uc = buf[i] & 0xff;
        buf[this.byteCount[uc]] |= (i << 8);
        this.byteCount[uc]++;
    }
    var pos = 0, current = 0, run = 0;
    if (count) {
        pos = buf[origPtr];
        current = (pos & 0xff);
        pos >>= 8;
        run = -1;
    }
    count = count;
    var copies, previous, outbyte;
    while(count) {
        count--;
        previous = current;
        pos = buf[pos];
        current = pos & 0xff;
        pos >>= 8;
        if (run++ == 3) {
            copies = current;
            outbyte = previous;
            current = -1;
        } else {
            copies = 1;
            outbyte = current;
        }
        while(copies--) {
            crc = ((crc << 8) ^ this.crcTable[((crc>>24) ^ outbyte) & 0xFF])&0xFFFFFFFF; // crc32
            stream(outbyte);
        }
        if (current != previous) run = 0;
    }

    crc = (crc ^ (-1)) >>> 0;
    if ((crc|0) != (crcblock|0)) message.Error("Error in bzip2: crc32 do not match");
    streamCRC = (crc ^ ((streamCRC << 1) | (streamCRC >>> 31))) & 0xFFFFFFFF;
    return streamCRC;
}

module.exports = bzip2;


/***/ }),

/***/ 7127:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {


/**
 * For Node.js, simply re-export the core `util.deprecate` function.
 */

module.exports = __nccwpck_require__(3837).deprecate;


/***/ }),

/***/ 5840:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "v1", ({
  enumerable: true,
  get: function () {
    return _v.default;
  }
}));
Object.defineProperty(exports, "v3", ({
  enumerable: true,
  get: function () {
    return _v2.default;
  }
}));
Object.defineProperty(exports, "v4", ({
  enumerable: true,
  get: function () {
    return _v3.default;
  }
}));
Object.defineProperty(exports, "v5", ({
  enumerable: true,
  get: function () {
    return _v4.default;
  }
}));
Object.defineProperty(exports, "NIL", ({
  enumerable: true,
  get: function () {
    return _nil.default;
  }
}));
Object.defineProperty(exports, "version", ({
  enumerable: true,
  get: function () {
    return _version.default;
  }
}));
Object.defineProperty(exports, "validate", ({
  enumerable: true,
  get: function () {
    return _validate.default;
  }
}));
Object.defineProperty(exports, "stringify", ({
  enumerable: true,
  get: function () {
    return _stringify.default;
  }
}));
Object.defineProperty(exports, "parse", ({
  enumerable: true,
  get: function () {
    return _parse.default;
  }
}));

var _v = _interopRequireDefault(__nccwpck_require__(8628));

var _v2 = _interopRequireDefault(__nccwpck_require__(6409));

var _v3 = _interopRequireDefault(__nccwpck_require__(5122));

var _v4 = _interopRequireDefault(__nccwpck_require__(9120));

var _nil = _interopRequireDefault(__nccwpck_require__(5332));

var _version = _interopRequireDefault(__nccwpck_require__(1595));

var _validate = _interopRequireDefault(__nccwpck_require__(6900));

var _stringify = _interopRequireDefault(__nccwpck_require__(8950));

var _parse = _interopRequireDefault(__nccwpck_require__(2746));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),

/***/ 4569:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _crypto = _interopRequireDefault(__nccwpck_require__(6113));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function md5(bytes) {
  if (Array.isArray(bytes)) {
    bytes = Buffer.from(bytes);
  } else if (typeof bytes === 'string') {
    bytes = Buffer.from(bytes, 'utf8');
  }

  return _crypto.default.createHash('md5').update(bytes).digest();
}

var _default = md5;
exports["default"] = _default;

/***/ }),

/***/ 5332:
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = '00000000-0000-0000-0000-000000000000';
exports["default"] = _default;

/***/ }),

/***/ 2746:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _validate = _interopRequireDefault(__nccwpck_require__(6900));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function parse(uuid) {
  if (!(0, _validate.default)(uuid)) {
    throw TypeError('Invalid UUID');
  }

  let v;
  const arr = new Uint8Array(16); // Parse ########-....-....-....-............

  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;
  arr[1] = v >>> 16 & 0xff;
  arr[2] = v >>> 8 & 0xff;
  arr[3] = v & 0xff; // Parse ........-####-....-....-............

  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;
  arr[5] = v & 0xff; // Parse ........-....-####-....-............

  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;
  arr[7] = v & 0xff; // Parse ........-....-....-####-............

  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;
  arr[9] = v & 0xff; // Parse ........-....-....-....-############
  // (Use "/" to avoid 32-bit truncation when bit-shifting high-order bytes)

  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;
  arr[11] = v / 0x100000000 & 0xff;
  arr[12] = v >>> 24 & 0xff;
  arr[13] = v >>> 16 & 0xff;
  arr[14] = v >>> 8 & 0xff;
  arr[15] = v & 0xff;
  return arr;
}

var _default = parse;
exports["default"] = _default;

/***/ }),

/***/ 814:
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
exports["default"] = _default;

/***/ }),

/***/ 807:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = rng;

var _crypto = _interopRequireDefault(__nccwpck_require__(6113));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate

let poolPtr = rnds8Pool.length;

function rng() {
  if (poolPtr > rnds8Pool.length - 16) {
    _crypto.default.randomFillSync(rnds8Pool);

    poolPtr = 0;
  }

  return rnds8Pool.slice(poolPtr, poolPtr += 16);
}

/***/ }),

/***/ 5274:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _crypto = _interopRequireDefault(__nccwpck_require__(6113));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function sha1(bytes) {
  if (Array.isArray(bytes)) {
    bytes = Buffer.from(bytes);
  } else if (typeof bytes === 'string') {
    bytes = Buffer.from(bytes, 'utf8');
  }

  return _crypto.default.createHash('sha1').update(bytes).digest();
}

var _default = sha1;
exports["default"] = _default;

/***/ }),

/***/ 8950:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _validate = _interopRequireDefault(__nccwpck_require__(6900));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */
const byteToHex = [];

for (let i = 0; i < 256; ++i) {
  byteToHex.push((i + 0x100).toString(16).substr(1));
}

function stringify(arr, offset = 0) {
  // Note: Be careful editing this code!  It's been tuned for performance
  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434
  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one
  // of the following:
  // - One or more input array values don't map to a hex octet (leading to
  // "undefined" in the uuid)
  // - Invalid input values for the RFC `version` or `variant` fields

  if (!(0, _validate.default)(uuid)) {
    throw TypeError('Stringified UUID is invalid');
  }

  return uuid;
}

var _default = stringify;
exports["default"] = _default;

/***/ }),

/***/ 8628:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _rng = _interopRequireDefault(__nccwpck_require__(807));

var _stringify = _interopRequireDefault(__nccwpck_require__(8950));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// **`v1()` - Generate time-based UUID**
//
// Inspired by https://github.com/LiosK/UUID.js
// and http://docs.python.org/library/uuid.html
let _nodeId;

let _clockseq; // Previous uuid creation time


let _lastMSecs = 0;
let _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details

function v1(options, buf, offset) {
  let i = buf && offset || 0;
  const b = buf || new Array(16);
  options = options || {};
  let node = options.node || _nodeId;
  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not
  // specified.  We do this lazily to minimize issues related to insufficient
  // system entropy.  See #189

  if (node == null || clockseq == null) {
    const seedBytes = options.random || (options.rng || _rng.default)();

    if (node == null) {
      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];
    }

    if (clockseq == null) {
      // Per 4.2.2, randomize (14 bit) clockseq
      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;
    }
  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,
  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.


  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock
  // cycle to simulate higher resolution clock

  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)

  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression

  if (dt < 0 && options.clockseq === undefined) {
    clockseq = clockseq + 1 & 0x3fff;
  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
  // time interval


  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
    nsecs = 0;
  } // Per 4.2.1.2 Throw error if too many uuids are requested


  if (nsecs >= 10000) {
    throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
  }

  _lastMSecs = msecs;
  _lastNSecs = nsecs;
  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch

  msecs += 12219292800000; // `time_low`

  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
  b[i++] = tl >>> 24 & 0xff;
  b[i++] = tl >>> 16 & 0xff;
  b[i++] = tl >>> 8 & 0xff;
  b[i++] = tl & 0xff; // `time_mid`

  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;
  b[i++] = tmh >>> 8 & 0xff;
  b[i++] = tmh & 0xff; // `time_high_and_version`

  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version

  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)

  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`

  b[i++] = clockseq & 0xff; // `node`

  for (let n = 0; n < 6; ++n) {
    b[i + n] = node[n];
  }

  return buf || (0, _stringify.default)(b);
}

var _default = v1;
exports["default"] = _default;

/***/ }),

/***/ 6409:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _v = _interopRequireDefault(__nccwpck_require__(5998));

var _md = _interopRequireDefault(__nccwpck_require__(4569));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const v3 = (0, _v.default)('v3', 0x30, _md.default);
var _default = v3;
exports["default"] = _default;

/***/ }),

/***/ 5998:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = _default;
exports.URL = exports.DNS = void 0;

var _stringify = _interopRequireDefault(__nccwpck_require__(8950));

var _parse = _interopRequireDefault(__nccwpck_require__(2746));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function stringToBytes(str) {
  str = unescape(encodeURIComponent(str)); // UTF8 escape

  const bytes = [];

  for (let i = 0; i < str.length; ++i) {
    bytes.push(str.charCodeAt(i));
  }

  return bytes;
}

const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';
exports.DNS = DNS;
const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';
exports.URL = URL;

function _default(name, version, hashfunc) {
  function generateUUID(value, namespace, buf, offset) {
    if (typeof value === 'string') {
      value = stringToBytes(value);
    }

    if (typeof namespace === 'string') {
      namespace = (0, _parse.default)(namespace);
    }

    if (namespace.length !== 16) {
      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');
    } // Compute hash of namespace and value, Per 4.3
    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =
    // hashfunc([...namespace, ... value])`


    let bytes = new Uint8Array(16 + value.length);
    bytes.set(namespace);
    bytes.set(value, namespace.length);
    bytes = hashfunc(bytes);
    bytes[6] = bytes[6] & 0x0f | version;
    bytes[8] = bytes[8] & 0x3f | 0x80;

    if (buf) {
      offset = offset || 0;

      for (let i = 0; i < 16; ++i) {
        buf[offset + i] = bytes[i];
      }

      return buf;
    }

    return (0, _stringify.default)(bytes);
  } // Function#name is not settable on some platforms (#270)


  try {
    generateUUID.name = name; // eslint-disable-next-line no-empty
  } catch (err) {} // For CommonJS default export support


  generateUUID.DNS = DNS;
  generateUUID.URL = URL;
  return generateUUID;
}

/***/ }),

/***/ 5122:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _rng = _interopRequireDefault(__nccwpck_require__(807));

var _stringify = _interopRequireDefault(__nccwpck_require__(8950));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function v4(options, buf, offset) {
  options = options || {};

  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`


  rnds[6] = rnds[6] & 0x0f | 0x40;
  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided

  if (buf) {
    offset = offset || 0;

    for (let i = 0; i < 16; ++i) {
      buf[offset + i] = rnds[i];
    }

    return buf;
  }

  return (0, _stringify.default)(rnds);
}

var _default = v4;
exports["default"] = _default;

/***/ }),

/***/ 9120:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _v = _interopRequireDefault(__nccwpck_require__(5998));

var _sha = _interopRequireDefault(__nccwpck_require__(5274));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const v5 = (0, _v.default)('v5', 0x50, _sha.default);
var _default = v5;
exports["default"] = _default;

/***/ }),

/***/ 6900:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _regex = _interopRequireDefault(__nccwpck_require__(814));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function validate(uuid) {
  return typeof uuid === 'string' && _regex.default.test(uuid);
}

var _default = validate;
exports["default"] = _default;

/***/ }),

/***/ 1595:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _validate = _interopRequireDefault(__nccwpck_require__(6900));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function version(uuid) {
  if (!(0, _validate.default)(uuid)) {
    throw TypeError('Invalid UUID');
  }

  return parseInt(uuid.substr(14, 1), 16);
}

var _default = version;
exports["default"] = _default;

/***/ }),

/***/ 2940:
/***/ ((module) => {

// Returns a wrapper function that returns a wrapped callback
// The wrapper function should do some stuff, and return a
// presumably different callback function.
// This makes sure that own properties are retained, so that
// decorations and such are not lost along the way.
module.exports = wrappy
function wrappy (fn, cb) {
  if (fn && cb) return wrappy(fn)(cb)

  if (typeof fn !== 'function')
    throw new TypeError('need wrapper function')

  Object.keys(fn).forEach(function (k) {
    wrapper[k] = fn[k]
  })

  return wrapper

  function wrapper() {
    var args = new Array(arguments.length)
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i]
    }
    var ret = fn.apply(this, args)
    var cb = args[args.length-1]
    if (typeof ret === 'function' && ret !== cb) {
      Object.keys(cb).forEach(function (k) {
        ret[k] = cb[k]
      })
    }
    return ret
  }
}


/***/ }),

/***/ 8867:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {



const WebSocket = __nccwpck_require__(1518);

WebSocket.createWebSocketStream = __nccwpck_require__(1658);
WebSocket.Server = __nccwpck_require__(8887);
WebSocket.Receiver = __nccwpck_require__(5066);
WebSocket.Sender = __nccwpck_require__(6947);

module.exports = WebSocket;


/***/ }),

/***/ 9436:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {



const { EMPTY_BUFFER } = __nccwpck_require__(5949);

/**
 * Merges an array of buffers into a new buffer.
 *
 * @param {Buffer[]} list The array of buffers to concat
 * @param {Number} totalLength The total length of buffers in the list
 * @return {Buffer} The resulting buffer
 * @public
 */
function concat(list, totalLength) {
  if (list.length === 0) return EMPTY_BUFFER;
  if (list.length === 1) return list[0];

  const target = Buffer.allocUnsafe(totalLength);
  let offset = 0;

  for (let i = 0; i < list.length; i++) {
    const buf = list[i];
    target.set(buf, offset);
    offset += buf.length;
  }

  if (offset < totalLength) return target.slice(0, offset);

  return target;
}

/**
 * Masks a buffer using the given mask.
 *
 * @param {Buffer} source The buffer to mask
 * @param {Buffer} mask The mask to use
 * @param {Buffer} output The buffer where to store the result
 * @param {Number} offset The offset at which to start writing
 * @param {Number} length The number of bytes to mask.
 * @public
 */
function _mask(source, mask, output, offset, length) {
  for (let i = 0; i < length; i++) {
    output[offset + i] = source[i] ^ mask[i & 3];
  }
}

/**
 * Unmasks a buffer using the given mask.
 *
 * @param {Buffer} buffer The buffer to unmask
 * @param {Buffer} mask The mask to use
 * @public
 */
function _unmask(buffer, mask) {
  // Required until https://github.com/nodejs/node/issues/9006 is resolved.
  const length = buffer.length;
  for (let i = 0; i < length; i++) {
    buffer[i] ^= mask[i & 3];
  }
}

/**
 * Converts a buffer to an `ArrayBuffer`.
 *
 * @param {Buffer} buf The buffer to convert
 * @return {ArrayBuffer} Converted buffer
 * @public
 */
function toArrayBuffer(buf) {
  if (buf.byteLength === buf.buffer.byteLength) {
    return buf.buffer;
  }

  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
}

/**
 * Converts `data` to a `Buffer`.
 *
 * @param {*} data The data to convert
 * @return {Buffer} The buffer
 * @throws {TypeError}
 * @public
 */
function toBuffer(data) {
  toBuffer.readOnly = true;

  if (Buffer.isBuffer(data)) return data;

  let buf;

  if (data instanceof ArrayBuffer) {
    buf = Buffer.from(data);
  } else if (ArrayBuffer.isView(data)) {
    buf = Buffer.from(data.buffer, data.byteOffset, data.byteLength);
  } else {
    buf = Buffer.from(data);
    toBuffer.readOnly = false;
  }

  return buf;
}

try {
  const bufferUtil = __nccwpck_require__(1269);
  const bu = bufferUtil.BufferUtil || bufferUtil;

  module.exports = {
    concat,
    mask(source, mask, output, offset, length) {
      if (length < 48) _mask(source, mask, output, offset, length);
      else bu.mask(source, mask, output, offset, length);
    },
    toArrayBuffer,
    toBuffer,
    unmask(buffer, mask) {
      if (buffer.length < 32) _unmask(buffer, mask);
      else bu.unmask(buffer, mask);
    }
  };
} catch (e) /* istanbul ignore next */ {
  module.exports = {
    concat,
    mask: _mask,
    toArrayBuffer,
    toBuffer,
    unmask: _unmask
  };
}


/***/ }),

/***/ 5949:
/***/ ((module) => {



module.exports = {
  BINARY_TYPES: ['nodebuffer', 'arraybuffer', 'fragments'],
  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',
  kStatusCode: Symbol('status-code'),
  kWebSocket: Symbol('websocket'),
  EMPTY_BUFFER: Buffer.alloc(0),
  NOOP: () => {}
};


/***/ }),

/***/ 4561:
/***/ ((module) => {



/**
 * Class representing an event.
 *
 * @private
 */
class Event {
  /**
   * Create a new `Event`.
   *
   * @param {String} type The name of the event
   * @param {Object} target A reference to the target to which the event was
   *     dispatched
   */
  constructor(type, target) {
    this.target = target;
    this.type = type;
  }
}

/**
 * Class representing a message event.
 *
 * @extends Event
 * @private
 */
class MessageEvent extends Event {
  /**
   * Create a new `MessageEvent`.
   *
   * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The received data
   * @param {WebSocket} target A reference to the target to which the event was
   *     dispatched
   */
  constructor(data, target) {
    super('message', target);

    this.data = data;
  }
}

/**
 * Class representing a close event.
 *
 * @extends Event
 * @private
 */
class CloseEvent extends Event {
  /**
   * Create a new `CloseEvent`.
   *
   * @param {Number} code The status code explaining why the connection is being
   *     closed
   * @param {String} reason A human-readable string explaining why the
   *     connection is closing
   * @param {WebSocket} target A reference to the target to which the event was
   *     dispatched
   */
  constructor(code, reason, target) {
    super('close', target);

    this.wasClean = target._closeFrameReceived && target._closeFrameSent;
    this.reason = reason;
    this.code = code;
  }
}

/**
 * Class representing an open event.
 *
 * @extends Event
 * @private
 */
class OpenEvent extends Event {
  /**
   * Create a new `OpenEvent`.
   *
   * @param {WebSocket} target A reference to the target to which the event was
   *     dispatched
   */
  constructor(target) {
    super('open', target);
  }
}

/**
 * Class representing an error event.
 *
 * @extends Event
 * @private
 */
class ErrorEvent extends Event {
  /**
   * Create a new `ErrorEvent`.
   *
   * @param {Object} error The error that generated this event
   * @param {WebSocket} target A reference to the target to which the event was
   *     dispatched
   */
  constructor(error, target) {
    super('error', target);

    this.message = error.message;
    this.error = error;
  }
}

/**
 * This provides methods for emulating the `EventTarget` interface. It's not
 * meant to be used directly.
 *
 * @mixin
 */
const EventTarget = {
  /**
   * Register an event listener.
   *
   * @param {String} type A string representing the event type to listen for
   * @param {Function} listener The listener to add
   * @param {Object} [options] An options object specifies characteristics about
   *     the event listener
   * @param {Boolean} [options.once=false] A `Boolean`` indicating that the
   *     listener should be invoked at most once after being added. If `true`,
   *     the listener would be automatically removed when invoked.
   * @public
   */
  addEventListener(type, listener, options) {
    if (typeof listener !== 'function') return;

    function onMessage(data) {
      listener.call(this, new MessageEvent(data, this));
    }

    function onClose(code, message) {
      listener.call(this, new CloseEvent(code, message, this));
    }

    function onError(error) {
      listener.call(this, new ErrorEvent(error, this));
    }

    function onOpen() {
      listener.call(this, new OpenEvent(this));
    }

    const method = options && options.once ? 'once' : 'on';

    if (type === 'message') {
      onMessage._listener = listener;
      this[method](type, onMessage);
    } else if (type === 'close') {
      onClose._listener = listener;
      this[method](type, onClose);
    } else if (type === 'error') {
      onError._listener = listener;
      this[method](type, onError);
    } else if (type === 'open') {
      onOpen._listener = listener;
      this[method](type, onOpen);
    } else {
      this[method](type, listener);
    }
  },

  /**
   * Remove an event listener.
   *
   * @param {String} type A string representing the event type to remove
   * @param {Function} listener The listener to remove
   * @public
   */
  removeEventListener(type, listener) {
    const listeners = this.listeners(type);

    for (let i = 0; i < listeners.length; i++) {
      if (listeners[i] === listener || listeners[i]._listener === listener) {
        this.removeListener(type, listeners[i]);
      }
    }
  }
};

module.exports = EventTarget;


/***/ }),

/***/ 2035:
/***/ ((module) => {



//
// Allowed token characters:
//
// '!', '#', '$', '%', '&', ''', '*', '+', '-',
// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'
//
// tokenChars[32] === 0 // ' '
// tokenChars[33] === 1 // '!'
// tokenChars[34] === 0 // '"'
// ...
//
// prettier-ignore
const tokenChars = [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31
  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63
  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127
];

/**
 * Adds an offer to the map of extension offers or a parameter to the map of
 * parameters.
 *
 * @param {Object} dest The map of extension offers or parameters
 * @param {String} name The extension or parameter name
 * @param {(Object|Boolean|String)} elem The extension parameters or the
 *     parameter value
 * @private
 */
function push(dest, name, elem) {
  if (dest[name] === undefined) dest[name] = [elem];
  else dest[name].push(elem);
}

/**
 * Parses the `Sec-WebSocket-Extensions` header into an object.
 *
 * @param {String} header The field value of the header
 * @return {Object} The parsed object
 * @public
 */
function parse(header) {
  const offers = Object.create(null);

  if (header === undefined || header === '') return offers;

  let params = Object.create(null);
  let mustUnescape = false;
  let isEscaping = false;
  let inQuotes = false;
  let extensionName;
  let paramName;
  let start = -1;
  let end = -1;
  let i = 0;

  for (; i < header.length; i++) {
    const code = header.charCodeAt(i);

    if (extensionName === undefined) {
      if (end === -1 && tokenChars[code] === 1) {
        if (start === -1) start = i;
      } else if (code === 0x20 /* ' ' */ || code === 0x09 /* '\t' */) {
        if (end === -1 && start !== -1) end = i;
      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {
        if (start === -1) {
          throw new SyntaxError(`Unexpected character at index ${i}`);
        }

        if (end === -1) end = i;
        const name = header.slice(start, end);
        if (code === 0x2c) {
          push(offers, name, params);
          params = Object.create(null);
        } else {
          extensionName = name;
        }

        start = end = -1;
      } else {
        throw new SyntaxError(`Unexpected character at index ${i}`);
      }
    } else if (paramName === undefined) {
      if (end === -1 && tokenChars[code] === 1) {
        if (start === -1) start = i;
      } else if (code === 0x20 || code === 0x09) {
        if (end === -1 && start !== -1) end = i;
      } else if (code === 0x3b || code === 0x2c) {
        if (start === -1) {
          throw new SyntaxError(`Unexpected character at index ${i}`);
        }

        if (end === -1) end = i;
        push(params, header.slice(start, end), true);
        if (code === 0x2c) {
          push(offers, extensionName, params);
          params = Object.create(null);
          extensionName = undefined;
        }

        start = end = -1;
      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {
        paramName = header.slice(start, i);
        start = end = -1;
      } else {
        throw new SyntaxError(`Unexpected character at index ${i}`);
      }
    } else {
      //
      // The value of a quoted-string after unescaping must conform to the
      // token ABNF, so only token characters are valid.
      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1
      //
      if (isEscaping) {
        if (tokenChars[code] !== 1) {
          throw new SyntaxError(`Unexpected character at index ${i}`);
        }
        if (start === -1) start = i;
        else if (!mustUnescape) mustUnescape = true;
        isEscaping = false;
      } else if (inQuotes) {
        if (tokenChars[code] === 1) {
          if (start === -1) start = i;
        } else if (code === 0x22 /* '"' */ && start !== -1) {
          inQuotes = false;
          end = i;
        } else if (code === 0x5c /* '\' */) {
          isEscaping = true;
        } else {
          throw new SyntaxError(`Unexpected character at index ${i}`);
        }
      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {
        inQuotes = true;
      } else if (end === -1 && tokenChars[code] === 1) {
        if (start === -1) start = i;
      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {
        if (end === -1) end = i;
      } else if (code === 0x3b || code === 0x2c) {
        if (start === -1) {
          throw new SyntaxError(`Unexpected character at index ${i}`);
        }

        if (end === -1) end = i;
        let value = header.slice(start, end);
        if (mustUnescape) {
          value = value.replace(/\\/g, '');
          mustUnescape = false;
        }
        push(params, paramName, value);
        if (code === 0x2c) {
          push(offers, extensionName, params);
          params = Object.create(null);
          extensionName = undefined;
        }

        paramName = undefined;
        start = end = -1;
      } else {
        throw new SyntaxError(`Unexpected character at index ${i}`);
      }
    }
  }

  if (start === -1 || inQuotes) {
    throw new SyntaxError('Unexpected end of input');
  }

  if (end === -1) end = i;
  const token = header.slice(start, end);
  if (extensionName === undefined) {
    push(offers, token, params);
  } else {
    if (paramName === undefined) {
      push(params, token, true);
    } else if (mustUnescape) {
      push(params, paramName, token.replace(/\\/g, ''));
    } else {
      push(params, paramName, token);
    }
    push(offers, extensionName, params);
  }

  return offers;
}

/**
 * Builds the `Sec-WebSocket-Extensions` header field value.
 *
 * @param {Object} extensions The map of extensions and parameters to format
 * @return {String} A string representing the given object
 * @public
 */
function format(extensions) {
  return Object.keys(extensions)
    .map((extension) => {
      let configurations = extensions[extension];
      if (!Array.isArray(configurations)) configurations = [configurations];
      return configurations
        .map((params) => {
          return [extension]
            .concat(
              Object.keys(params).map((k) => {
                let values = params[k];
                if (!Array.isArray(values)) values = [values];
                return values
                  .map((v) => (v === true ? k : `${k}=${v}`))
                  .join('; ');
              })
            )
            .join('; ');
        })
        .join(', ');
    })
    .join(', ');
}

module.exports = { format, parse };


/***/ }),

/***/ 1356:
/***/ ((module) => {



const kDone = Symbol('kDone');
const kRun = Symbol('kRun');

/**
 * A very simple job queue with adjustable concurrency. Adapted from
 * https://github.com/STRML/async-limiter
 */
class Limiter {
  /**
   * Creates a new `Limiter`.
   *
   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed
   *     to run concurrently
   */
  constructor(concurrency) {
    this[kDone] = () => {
      this.pending--;
      this[kRun]();
    };
    this.concurrency = concurrency || Infinity;
    this.jobs = [];
    this.pending = 0;
  }

  /**
   * Adds a job to the queue.
   *
   * @param {Function} job The job to run
   * @public
   */
  add(job) {
    this.jobs.push(job);
    this[kRun]();
  }

  /**
   * Removes a job from the queue and runs it if possible.
   *
   * @private
   */
  [kRun]() {
    if (this.pending === this.concurrency) return;

    if (this.jobs.length) {
      const job = this.jobs.shift();

      this.pending++;
      job(this[kDone]);
    }
  }
}

module.exports = Limiter;


/***/ }),

/***/ 6684:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {



const zlib = __nccwpck_require__(9796);

const bufferUtil = __nccwpck_require__(9436);
const Limiter = __nccwpck_require__(1356);
const { kStatusCode, NOOP } = __nccwpck_require__(5949);

const TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);
const kPerMessageDeflate = Symbol('permessage-deflate');
const kTotalLength = Symbol('total-length');
const kCallback = Symbol('callback');
const kBuffers = Symbol('buffers');
const kError = Symbol('error');

//
// We limit zlib concurrency, which prevents severe memory fragmentation
// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913
// and https://github.com/websockets/ws/issues/1202
//
// Intentionally global; it's the global thread pool that's an issue.
//
let zlibLimiter;

/**
 * permessage-deflate implementation.
 */
class PerMessageDeflate {
  /**
   * Creates a PerMessageDeflate instance.
   *
   * @param {Object} [options] Configuration options
   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept
   *     disabling of server context takeover
   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/
   *     acknowledge disabling of client context takeover
   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the
   *     use of a custom server window size
   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support
   *     for, or request, a custom client window size
   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on
   *     deflate
   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on
   *     inflate
   * @param {Number} [options.threshold=1024] Size (in bytes) below which
   *     messages should not be compressed
   * @param {Number} [options.concurrencyLimit=10] The number of concurrent
   *     calls to zlib
   * @param {Boolean} [isServer=false] Create the instance in either server or
   *     client mode
   * @param {Number} [maxPayload=0] The maximum allowed message length
   */
  constructor(options, isServer, maxPayload) {
    this._maxPayload = maxPayload | 0;
    this._options = options || {};
    this._threshold =
      this._options.threshold !== undefined ? this._options.threshold : 1024;
    this._isServer = !!isServer;
    this._deflate = null;
    this._inflate = null;

    this.params = null;

    if (!zlibLimiter) {
      const concurrency =
        this._options.concurrencyLimit !== undefined
          ? this._options.concurrencyLimit
          : 10;
      zlibLimiter = new Limiter(concurrency);
    }
  }

  /**
   * @type {String}
   */
  static get extensionName() {
    return 'permessage-deflate';
  }

  /**
   * Create an extension negotiation offer.
   *
   * @return {Object} Extension parameters
   * @public
   */
  offer() {
    const params = {};

    if (this._options.serverNoContextTakeover) {
      params.server_no_context_takeover = true;
    }
    if (this._options.clientNoContextTakeover) {
      params.client_no_context_takeover = true;
    }
    if (this._options.serverMaxWindowBits) {
      params.server_max_window_bits = this._options.serverMaxWindowBits;
    }
    if (this._options.clientMaxWindowBits) {
      params.client_max_window_bits = this._options.clientMaxWindowBits;
    } else if (this._options.clientMaxWindowBits == null) {
      params.client_max_window_bits = true;
    }

    return params;
  }

  /**
   * Accept an extension negotiation offer/response.
   *
   * @param {Array} configurations The extension negotiation offers/reponse
   * @return {Object} Accepted configuration
   * @public
   */
  accept(configurations) {
    configurations = this.normalizeParams(configurations);

    this.params = this._isServer
      ? this.acceptAsServer(configurations)
      : this.acceptAsClient(configurations);

    return this.params;
  }

  /**
   * Releases all resources used by the extension.
   *
   * @public
   */
  cleanup() {
    if (this._inflate) {
      this._inflate.close();
      this._inflate = null;
    }

    if (this._deflate) {
      const callback = this._deflate[kCallback];

      this._deflate.close();
      this._deflate = null;

      if (callback) {
        callback(
          new Error(
            'The deflate stream was closed while data was being processed'
          )
        );
      }
    }
  }

  /**
   *  Accept an extension negotiation offer.
   *
   * @param {Array} offers The extension negotiation offers
   * @return {Object} Accepted configuration
   * @private
   */
  acceptAsServer(offers) {
    const opts = this._options;
    const accepted = offers.find((params) => {
      if (
        (opts.serverNoContextTakeover === false &&
          params.server_no_context_takeover) ||
        (params.server_max_window_bits &&
          (opts.serverMaxWindowBits === false ||
            (typeof opts.serverMaxWindowBits === 'number' &&
              opts.serverMaxWindowBits > params.server_max_window_bits))) ||
        (typeof opts.clientMaxWindowBits === 'number' &&
          !params.client_max_window_bits)
      ) {
        return false;
      }

      return true;
    });

    if (!accepted) {
      throw new Error('None of the extension offers can be accepted');
    }

    if (opts.serverNoContextTakeover) {
      accepted.server_no_context_takeover = true;
    }
    if (opts.clientNoContextTakeover) {
      accepted.client_no_context_takeover = true;
    }
    if (typeof opts.serverMaxWindowBits === 'number') {
      accepted.server_max_window_bits = opts.serverMaxWindowBits;
    }
    if (typeof opts.clientMaxWindowBits === 'number') {
      accepted.client_max_window_bits = opts.clientMaxWindowBits;
    } else if (
      accepted.client_max_window_bits === true ||
      opts.clientMaxWindowBits === false
    ) {
      delete accepted.client_max_window_bits;
    }

    return accepted;
  }

  /**
   * Accept the extension negotiation response.
   *
   * @param {Array} response The extension negotiation response
   * @return {Object} Accepted configuration
   * @private
   */
  acceptAsClient(response) {
    const params = response[0];

    if (
      this._options.clientNoContextTakeover === false &&
      params.client_no_context_takeover
    ) {
      throw new Error('Unexpected parameter "client_no_context_takeover"');
    }

    if (!params.client_max_window_bits) {
      if (typeof this._options.clientMaxWindowBits === 'number') {
        params.client_max_window_bits = this._options.clientMaxWindowBits;
      }
    } else if (
      this._options.clientMaxWindowBits === false ||
      (typeof this._options.clientMaxWindowBits === 'number' &&
        params.client_max_window_bits > this._options.clientMaxWindowBits)
    ) {
      throw new Error(
        'Unexpected or invalid parameter "client_max_window_bits"'
      );
    }

    return params;
  }

  /**
   * Normalize parameters.
   *
   * @param {Array} configurations The extension negotiation offers/reponse
   * @return {Array} The offers/response with normalized parameters
   * @private
   */
  normalizeParams(configurations) {
    configurations.forEach((params) => {
      Object.keys(params).forEach((key) => {
        let value = params[key];

        if (value.length > 1) {
          throw new Error(`Parameter "${key}" must have only a single value`);
        }

        value = value[0];

        if (key === 'client_max_window_bits') {
          if (value !== true) {
            const num = +value;
            if (!Number.isInteger(num) || num < 8 || num > 15) {
              throw new TypeError(
                `Invalid value for parameter "${key}": ${value}`
              );
            }
            value = num;
          } else if (!this._isServer) {
            throw new TypeError(
              `Invalid value for parameter "${key}": ${value}`
            );
          }
        } else if (key === 'server_max_window_bits') {
          const num = +value;
          if (!Number.isInteger(num) || num < 8 || num > 15) {
            throw new TypeError(
              `Invalid value for parameter "${key}": ${value}`
            );
          }
          value = num;
        } else if (
          key === 'client_no_context_takeover' ||
          key === 'server_no_context_takeover'
        ) {
          if (value !== true) {
            throw new TypeError(
              `Invalid value for parameter "${key}": ${value}`
            );
          }
        } else {
          throw new Error(`Unknown parameter "${key}"`);
        }

        params[key] = value;
      });
    });

    return configurations;
  }

  /**
   * Decompress data. Concurrency limited.
   *
   * @param {Buffer} data Compressed data
   * @param {Boolean} fin Specifies whether or not this is the last fragment
   * @param {Function} callback Callback
   * @public
   */
  decompress(data, fin, callback) {
    zlibLimiter.add((done) => {
      this._decompress(data, fin, (err, result) => {
        done();
        callback(err, result);
      });
    });
  }

  /**
   * Compress data. Concurrency limited.
   *
   * @param {Buffer} data Data to compress
   * @param {Boolean} fin Specifies whether or not this is the last fragment
   * @param {Function} callback Callback
   * @public
   */
  compress(data, fin, callback) {
    zlibLimiter.add((done) => {
      this._compress(data, fin, (err, result) => {
        done();
        callback(err, result);
      });
    });
  }

  /**
   * Decompress data.
   *
   * @param {Buffer} data Compressed data
   * @param {Boolean} fin Specifies whether or not this is the last fragment
   * @param {Function} callback Callback
   * @private
   */
  _decompress(data, fin, callback) {
    const endpoint = this._isServer ? 'client' : 'server';

    if (!this._inflate) {
      const key = `${endpoint}_max_window_bits`;
      const windowBits =
        typeof this.params[key] !== 'number'
          ? zlib.Z_DEFAULT_WINDOWBITS
          : this.params[key];

      this._inflate = zlib.createInflateRaw({
        ...this._options.zlibInflateOptions,
        windowBits
      });
      this._inflate[kPerMessageDeflate] = this;
      this._inflate[kTotalLength] = 0;
      this._inflate[kBuffers] = [];
      this._inflate.on('error', inflateOnError);
      this._inflate.on('data', inflateOnData);
    }

    this._inflate[kCallback] = callback;

    this._inflate.write(data);
    if (fin) this._inflate.write(TRAILER);

    this._inflate.flush(() => {
      const err = this._inflate[kError];

      if (err) {
        this._inflate.close();
        this._inflate = null;
        callback(err);
        return;
      }

      const data = bufferUtil.concat(
        this._inflate[kBuffers],
        this._inflate[kTotalLength]
      );

      if (this._inflate._readableState.endEmitted) {
        this._inflate.close();
        this._inflate = null;
      } else {
        this._inflate[kTotalLength] = 0;
        this._inflate[kBuffers] = [];

        if (fin && this.params[`${endpoint}_no_context_takeover`]) {
          this._inflate.reset();
        }
      }

      callback(null, data);
    });
  }

  /**
   * Compress data.
   *
   * @param {Buffer} data Data to compress
   * @param {Boolean} fin Specifies whether or not this is the last fragment
   * @param {Function} callback Callback
   * @private
   */
  _compress(data, fin, callback) {
    const endpoint = this._isServer ? 'server' : 'client';

    if (!this._deflate) {
      const key = `${endpoint}_max_window_bits`;
      const windowBits =
        typeof this.params[key] !== 'number'
          ? zlib.Z_DEFAULT_WINDOWBITS
          : this.params[key];

      this._deflate = zlib.createDeflateRaw({
        ...this._options.zlibDeflateOptions,
        windowBits
      });

      this._deflate[kTotalLength] = 0;
      this._deflate[kBuffers] = [];

      //
      // An `'error'` event is emitted, only on Node.js < 10.0.0, if the
      // `zlib.DeflateRaw` instance is closed while data is being processed.
      // This can happen if `PerMessageDeflate#cleanup()` is called at the wrong
      // time due to an abnormal WebSocket closure.
      //
      this._deflate.on('error', NOOP);
      this._deflate.on('data', deflateOnData);
    }

    this._deflate[kCallback] = callback;

    this._deflate.write(data);
    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {
      if (!this._deflate) {
        //
        // The deflate stream was closed while data was being processed.
        //
        return;
      }

      let data = bufferUtil.concat(
        this._deflate[kBuffers],
        this._deflate[kTotalLength]
      );

      if (fin) data = data.slice(0, data.length - 4);

      //
      // Ensure that the callback will not be called again in
      // `PerMessageDeflate#cleanup()`.
      //
      this._deflate[kCallback] = null;

      this._deflate[kTotalLength] = 0;
      this._deflate[kBuffers] = [];

      if (fin && this.params[`${endpoint}_no_context_takeover`]) {
        this._deflate.reset();
      }

      callback(null, data);
    });
  }
}

module.exports = PerMessageDeflate;

/**
 * The listener of the `zlib.DeflateRaw` stream `'data'` event.
 *
 * @param {Buffer} chunk A chunk of data
 * @private
 */
function deflateOnData(chunk) {
  this[kBuffers].push(chunk);
  this[kTotalLength] += chunk.length;
}

/**
 * The listener of the `zlib.InflateRaw` stream `'data'` event.
 *
 * @param {Buffer} chunk A chunk of data
 * @private
 */
function inflateOnData(chunk) {
  this[kTotalLength] += chunk.length;

  if (
    this[kPerMessageDeflate]._maxPayload < 1 ||
    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload
  ) {
    this[kBuffers].push(chunk);
    return;
  }

  this[kError] = new RangeError('Max payload size exceeded');
  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';
  this[kError][kStatusCode] = 1009;
  this.removeListener('data', inflateOnData);
  this.reset();
}

/**
 * The listener of the `zlib.InflateRaw` stream `'error'` event.
 *
 * @param {Error} err The emitted error
 * @private
 */
function inflateOnError(err) {
  //
  // There is no need to call `Zlib#close()` as the handle is automatically
  // closed when an error is emitted.
  //
  this[kPerMessageDeflate]._inflate = null;
  err[kStatusCode] = 1007;
  this[kCallback](err);
}


/***/ }),

/***/ 5066:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {



const { Writable } = __nccwpck_require__(2781);

const PerMessageDeflate = __nccwpck_require__(6684);
const {
  BINARY_TYPES,
  EMPTY_BUFFER,
  kStatusCode,
  kWebSocket
} = __nccwpck_require__(5949);
const { concat, toArrayBuffer, unmask } = __nccwpck_require__(9436);
const { isValidStatusCode, isValidUTF8 } = __nccwpck_require__(6279);

const GET_INFO = 0;
const GET_PAYLOAD_LENGTH_16 = 1;
const GET_PAYLOAD_LENGTH_64 = 2;
const GET_MASK = 3;
const GET_DATA = 4;
const INFLATING = 5;

/**
 * HyBi Receiver implementation.
 *
 * @extends Writable
 */
class Receiver extends Writable {
  /**
   * Creates a Receiver instance.
   *
   * @param {String} [binaryType=nodebuffer] The type for binary data
   * @param {Object} [extensions] An object containing the negotiated extensions
   * @param {Boolean} [isServer=false] Specifies whether to operate in client or
   *     server mode
   * @param {Number} [maxPayload=0] The maximum allowed message length
   */
  constructor(binaryType, extensions, isServer, maxPayload) {
    super();

    this._binaryType = binaryType || BINARY_TYPES[0];
    this[kWebSocket] = undefined;
    this._extensions = extensions || {};
    this._isServer = !!isServer;
    this._maxPayload = maxPayload | 0;

    this._bufferedBytes = 0;
    this._buffers = [];

    this._compressed = false;
    this._payloadLength = 0;
    this._mask = undefined;
    this._fragmented = 0;
    this._masked = false;
    this._fin = false;
    this._opcode = 0;

    this._totalPayloadLength = 0;
    this._messageLength = 0;
    this._fragments = [];

    this._state = GET_INFO;
    this._loop = false;
  }

  /**
   * Implements `Writable.prototype._write()`.
   *
   * @param {Buffer} chunk The chunk of data to write
   * @param {String} encoding The character encoding of `chunk`
   * @param {Function} cb Callback
   * @private
   */
  _write(chunk, encoding, cb) {
    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();

    this._bufferedBytes += chunk.length;
    this._buffers.push(chunk);
    this.startLoop(cb);
  }

  /**
   * Consumes `n` bytes from the buffered data.
   *
   * @param {Number} n The number of bytes to consume
   * @return {Buffer} The consumed bytes
   * @private
   */
  consume(n) {
    this._bufferedBytes -= n;

    if (n === this._buffers[0].length) return this._buffers.shift();

    if (n < this._buffers[0].length) {
      const buf = this._buffers[0];
      this._buffers[0] = buf.slice(n);
      return buf.slice(0, n);
    }

    const dst = Buffer.allocUnsafe(n);

    do {
      const buf = this._buffers[0];
      const offset = dst.length - n;

      if (n >= buf.length) {
        dst.set(this._buffers.shift(), offset);
      } else {
        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);
        this._buffers[0] = buf.slice(n);
      }

      n -= buf.length;
    } while (n > 0);

    return dst;
  }

  /**
   * Starts the parsing loop.
   *
   * @param {Function} cb Callback
   * @private
   */
  startLoop(cb) {
    let err;
    this._loop = true;

    do {
      switch (this._state) {
        case GET_INFO:
          err = this.getInfo();
          break;
        case GET_PAYLOAD_LENGTH_16:
          err = this.getPayloadLength16();
          break;
        case GET_PAYLOAD_LENGTH_64:
          err = this.getPayloadLength64();
          break;
        case GET_MASK:
          this.getMask();
          break;
        case GET_DATA:
          err = this.getData(cb);
          break;
        default:
          // `INFLATING`
          this._loop = false;
          return;
      }
    } while (this._loop);

    cb(err);
  }

  /**
   * Reads the first two bytes of a frame.
   *
   * @return {(RangeError|undefined)} A possible error
   * @private
   */
  getInfo() {
    if (this._bufferedBytes < 2) {
      this._loop = false;
      return;
    }

    const buf = this.consume(2);

    if ((buf[0] & 0x30) !== 0x00) {
      this._loop = false;
      return error(
        RangeError,
        'RSV2 and RSV3 must be clear',
        true,
        1002,
        'WS_ERR_UNEXPECTED_RSV_2_3'
      );
    }

    const compressed = (buf[0] & 0x40) === 0x40;

    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {
      this._loop = false;
      return error(
        RangeError,
        'RSV1 must be clear',
        true,
        1002,
        'WS_ERR_UNEXPECTED_RSV_1'
      );
    }

    this._fin = (buf[0] & 0x80) === 0x80;
    this._opcode = buf[0] & 0x0f;
    this._payloadLength = buf[1] & 0x7f;

    if (this._opcode === 0x00) {
      if (compressed) {
        this._loop = false;
        return error(
          RangeError,
          'RSV1 must be clear',
          true,
          1002,
          'WS_ERR_UNEXPECTED_RSV_1'
        );
      }

      if (!this._fragmented) {
        this._loop = false;
        return error(
          RangeError,
          'invalid opcode 0',
          true,
          1002,
          'WS_ERR_INVALID_OPCODE'
        );
      }

      this._opcode = this._fragmented;
    } else if (this._opcode === 0x01 || this._opcode === 0x02) {
      if (this._fragmented) {
        this._loop = false;
        return error(
          RangeError,
          `invalid opcode ${this._opcode}`,
          true,
          1002,
          'WS_ERR_INVALID_OPCODE'
        );
      }

      this._compressed = compressed;
    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {
      if (!this._fin) {
        this._loop = false;
        return error(
          RangeError,
          'FIN must be set',
          true,
          1002,
          'WS_ERR_EXPECTED_FIN'
        );
      }

      if (compressed) {
        this._loop = false;
        return error(
          RangeError,
          'RSV1 must be clear',
          true,
          1002,
          'WS_ERR_UNEXPECTED_RSV_1'
        );
      }

      if (this._payloadLength > 0x7d) {
        this._loop = false;
        return error(
          RangeError,
          `invalid payload length ${this._payloadLength}`,
          true,
          1002,
          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'
        );
      }
    } else {
      this._loop = false;
      return error(
        RangeError,
        `invalid opcode ${this._opcode}`,
        true,
        1002,
        'WS_ERR_INVALID_OPCODE'
      );
    }

    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;
    this._masked = (buf[1] & 0x80) === 0x80;

    if (this._isServer) {
      if (!this._masked) {
        this._loop = false;
        return error(
          RangeError,
          'MASK must be set',
          true,
          1002,
          'WS_ERR_EXPECTED_MASK'
        );
      }
    } else if (this._masked) {
      this._loop = false;
      return error(
        RangeError,
        'MASK must be clear',
        true,
        1002,
        'WS_ERR_UNEXPECTED_MASK'
      );
    }

    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;
    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;
    else return this.haveLength();
  }

  /**
   * Gets extended payload length (7+16).
   *
   * @return {(RangeError|undefined)} A possible error
   * @private
   */
  getPayloadLength16() {
    if (this._bufferedBytes < 2) {
      this._loop = false;
      return;
    }

    this._payloadLength = this.consume(2).readUInt16BE(0);
    return this.haveLength();
  }

  /**
   * Gets extended payload length (7+64).
   *
   * @return {(RangeError|undefined)} A possible error
   * @private
   */
  getPayloadLength64() {
    if (this._bufferedBytes < 8) {
      this._loop = false;
      return;
    }

    const buf = this.consume(8);
    const num = buf.readUInt32BE(0);

    //
    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned
    // if payload length is greater than this number.
    //
    if (num > Math.pow(2, 53 - 32) - 1) {
      this._loop = false;
      return error(
        RangeError,
        'Unsupported WebSocket frame: payload length > 2^53 - 1',
        false,
        1009,
        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'
      );
    }

    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);
    return this.haveLength();
  }

  /**
   * Payload length has been read.
   *
   * @return {(RangeError|undefined)} A possible error
   * @private
   */
  haveLength() {
    if (this._payloadLength && this._opcode < 0x08) {
      this._totalPayloadLength += this._payloadLength;
      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {
        this._loop = false;
        return error(
          RangeError,
          'Max payload size exceeded',
          false,
          1009,
          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'
        );
      }
    }

    if (this._masked) this._state = GET_MASK;
    else this._state = GET_DATA;
  }

  /**
   * Reads mask bytes.
   *
   * @private
   */
  getMask() {
    if (this._bufferedBytes < 4) {
      this._loop = false;
      return;
    }

    this._mask = this.consume(4);
    this._state = GET_DATA;
  }

  /**
   * Reads data bytes.
   *
   * @param {Function} cb Callback
   * @return {(Error|RangeError|undefined)} A possible error
   * @private
   */
  getData(cb) {
    let data = EMPTY_BUFFER;

    if (this._payloadLength) {
      if (this._bufferedBytes < this._payloadLength) {
        this._loop = false;
        return;
      }

      data = this.consume(this._payloadLength);
      if (this._masked) unmask(data, this._mask);
    }

    if (this._opcode > 0x07) return this.controlMessage(data);

    if (this._compressed) {
      this._state = INFLATING;
      this.decompress(data, cb);
      return;
    }

    if (data.length) {
      //
      // This message is not compressed so its lenght is the sum of the payload
      // length of all fragments.
      //
      this._messageLength = this._totalPayloadLength;
      this._fragments.push(data);
    }

    return this.dataMessage();
  }

  /**
   * Decompresses data.
   *
   * @param {Buffer} data Compressed data
   * @param {Function} cb Callback
   * @private
   */
  decompress(data, cb) {
    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];

    perMessageDeflate.decompress(data, this._fin, (err, buf) => {
      if (err) return cb(err);

      if (buf.length) {
        this._messageLength += buf.length;
        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {
          return cb(
            error(
              RangeError,
              'Max payload size exceeded',
              false,
              1009,
              'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'
            )
          );
        }

        this._fragments.push(buf);
      }

      const er = this.dataMessage();
      if (er) return cb(er);

      this.startLoop(cb);
    });
  }

  /**
   * Handles a data message.
   *
   * @return {(Error|undefined)} A possible error
   * @private
   */
  dataMessage() {
    if (this._fin) {
      const messageLength = this._messageLength;
      const fragments = this._fragments;

      this._totalPayloadLength = 0;
      this._messageLength = 0;
      this._fragmented = 0;
      this._fragments = [];

      if (this._opcode === 2) {
        let data;

        if (this._binaryType === 'nodebuffer') {
          data = concat(fragments, messageLength);
        } else if (this._binaryType === 'arraybuffer') {
          data = toArrayBuffer(concat(fragments, messageLength));
        } else {
          data = fragments;
        }

        this.emit('message', data);
      } else {
        const buf = concat(fragments, messageLength);

        if (!isValidUTF8(buf)) {
          this._loop = false;
          return error(
            Error,
            'invalid UTF-8 sequence',
            true,
            1007,
            'WS_ERR_INVALID_UTF8'
          );
        }

        this.emit('message', buf.toString());
      }
    }

    this._state = GET_INFO;
  }

  /**
   * Handles a control message.
   *
   * @param {Buffer} data Data to handle
   * @return {(Error|RangeError|undefined)} A possible error
   * @private
   */
  controlMessage(data) {
    if (this._opcode === 0x08) {
      this._loop = false;

      if (data.length === 0) {
        this.emit('conclude', 1005, '');
        this.end();
      } else if (data.length === 1) {
        return error(
          RangeError,
          'invalid payload length 1',
          true,
          1002,
          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'
        );
      } else {
        const code = data.readUInt16BE(0);

        if (!isValidStatusCode(code)) {
          return error(
            RangeError,
            `invalid status code ${code}`,
            true,
            1002,
            'WS_ERR_INVALID_CLOSE_CODE'
          );
        }

        const buf = data.slice(2);

        if (!isValidUTF8(buf)) {
          return error(
            Error,
            'invalid UTF-8 sequence',
            true,
            1007,
            'WS_ERR_INVALID_UTF8'
          );
        }

        this.emit('conclude', code, buf.toString());
        this.end();
      }
    } else if (this._opcode === 0x09) {
      this.emit('ping', data);
    } else {
      this.emit('pong', data);
    }

    this._state = GET_INFO;
  }
}

module.exports = Receiver;

/**
 * Builds an error object.
 *
 * @param {function(new:Error|RangeError)} ErrorCtor The error constructor
 * @param {String} message The error message
 * @param {Boolean} prefix Specifies whether or not to add a default prefix to
 *     `message`
 * @param {Number} statusCode The status code
 * @param {String} errorCode The exposed error code
 * @return {(Error|RangeError)} The error
 * @private
 */
function error(ErrorCtor, message, prefix, statusCode, errorCode) {
  const err = new ErrorCtor(
    prefix ? `Invalid WebSocket frame: ${message}` : message
  );

  Error.captureStackTrace(err, error);
  err.code = errorCode;
  err[kStatusCode] = statusCode;
  return err;
}


/***/ }),

/***/ 6947:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

/* eslint no-unused-vars: ["error", { "varsIgnorePattern": "^net|tls$" }] */



const net = __nccwpck_require__(1808);
const tls = __nccwpck_require__(4404);
const { randomFillSync } = __nccwpck_require__(6113);

const PerMessageDeflate = __nccwpck_require__(6684);
const { EMPTY_BUFFER } = __nccwpck_require__(5949);
const { isValidStatusCode } = __nccwpck_require__(6279);
const { mask: applyMask, toBuffer } = __nccwpck_require__(9436);

const mask = Buffer.alloc(4);

/**
 * HyBi Sender implementation.
 */
class Sender {
  /**
   * Creates a Sender instance.
   *
   * @param {(net.Socket|tls.Socket)} socket The connection socket
   * @param {Object} [extensions] An object containing the negotiated extensions
   */
  constructor(socket, extensions) {
    this._extensions = extensions || {};
    this._socket = socket;

    this._firstFragment = true;
    this._compress = false;

    this._bufferedBytes = 0;
    this._deflating = false;
    this._queue = [];
  }

  /**
   * Frames a piece of data according to the HyBi WebSocket protocol.
   *
   * @param {Buffer} data The data to frame
   * @param {Object} options Options object
   * @param {Number} options.opcode The opcode
   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be
   *     modified
   * @param {Boolean} [options.fin=false] Specifies whether or not to set the
   *     FIN bit
   * @param {Boolean} [options.mask=false] Specifies whether or not to mask
   *     `data`
   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the
   *     RSV1 bit
   * @return {Buffer[]} The framed data as a list of `Buffer` instances
   * @public
   */
  static frame(data, options) {
    const merge = options.mask && options.readOnly;
    let offset = options.mask ? 6 : 2;
    let payloadLength = data.length;

    if (data.length >= 65536) {
      offset += 8;
      payloadLength = 127;
    } else if (data.length > 125) {
      offset += 2;
      payloadLength = 126;
    }

    const target = Buffer.allocUnsafe(merge ? data.length + offset : offset);

    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;
    if (options.rsv1) target[0] |= 0x40;

    target[1] = payloadLength;

    if (payloadLength === 126) {
      target.writeUInt16BE(data.length, 2);
    } else if (payloadLength === 127) {
      target.writeUInt32BE(0, 2);
      target.writeUInt32BE(data.length, 6);
    }

    if (!options.mask) return [target, data];

    randomFillSync(mask, 0, 4);

    target[1] |= 0x80;
    target[offset - 4] = mask[0];
    target[offset - 3] = mask[1];
    target[offset - 2] = mask[2];
    target[offset - 1] = mask[3];

    if (merge) {
      applyMask(data, mask, target, offset, data.length);
      return [target];
    }

    applyMask(data, mask, data, 0, data.length);
    return [target, data];
  }

  /**
   * Sends a close message to the other peer.
   *
   * @param {Number} [code] The status code component of the body
   * @param {String} [data] The message component of the body
   * @param {Boolean} [mask=false] Specifies whether or not to mask the message
   * @param {Function} [cb] Callback
   * @public
   */
  close(code, data, mask, cb) {
    let buf;

    if (code === undefined) {
      buf = EMPTY_BUFFER;
    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {
      throw new TypeError('First argument must be a valid error code number');
    } else if (data === undefined || data === '') {
      buf = Buffer.allocUnsafe(2);
      buf.writeUInt16BE(code, 0);
    } else {
      const length = Buffer.byteLength(data);

      if (length > 123) {
        throw new RangeError('The message must not be greater than 123 bytes');
      }

      buf = Buffer.allocUnsafe(2 + length);
      buf.writeUInt16BE(code, 0);
      buf.write(data, 2);
    }

    if (this._deflating) {
      this.enqueue([this.doClose, buf, mask, cb]);
    } else {
      this.doClose(buf, mask, cb);
    }
  }

  /**
   * Frames and sends a close message.
   *
   * @param {Buffer} data The message to send
   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`
   * @param {Function} [cb] Callback
   * @private
   */
  doClose(data, mask, cb) {
    this.sendFrame(
      Sender.frame(data, {
        fin: true,
        rsv1: false,
        opcode: 0x08,
        mask,
        readOnly: false
      }),
      cb
    );
  }

  /**
   * Sends a ping message to the other peer.
   *
   * @param {*} data The message to send
   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`
   * @param {Function} [cb] Callback
   * @public
   */
  ping(data, mask, cb) {
    const buf = toBuffer(data);

    if (buf.length > 125) {
      throw new RangeError('The data size must not be greater than 125 bytes');
    }

    if (this._deflating) {
      this.enqueue([this.doPing, buf, mask, toBuffer.readOnly, cb]);
    } else {
      this.doPing(buf, mask, toBuffer.readOnly, cb);
    }
  }

  /**
   * Frames and sends a ping message.
   *
   * @param {Buffer} data The message to send
   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`
   * @param {Boolean} [readOnly=false] Specifies whether `data` can be modified
   * @param {Function} [cb] Callback
   * @private
   */
  doPing(data, mask, readOnly, cb) {
    this.sendFrame(
      Sender.frame(data, {
        fin: true,
        rsv1: false,
        opcode: 0x09,
        mask,
        readOnly
      }),
      cb
    );
  }

  /**
   * Sends a pong message to the other peer.
   *
   * @param {*} data The message to send
   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`
   * @param {Function} [cb] Callback
   * @public
   */
  pong(data, mask, cb) {
    const buf = toBuffer(data);

    if (buf.length > 125) {
      throw new RangeError('The data size must not be greater than 125 bytes');
    }

    if (this._deflating) {
      this.enqueue([this.doPong, buf, mask, toBuffer.readOnly, cb]);
    } else {
      this.doPong(buf, mask, toBuffer.readOnly, cb);
    }
  }

  /**
   * Frames and sends a pong message.
   *
   * @param {Buffer} data The message to send
   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`
   * @param {Boolean} [readOnly=false] Specifies whether `data` can be modified
   * @param {Function} [cb] Callback
   * @private
   */
  doPong(data, mask, readOnly, cb) {
    this.sendFrame(
      Sender.frame(data, {
        fin: true,
        rsv1: false,
        opcode: 0x0a,
        mask,
        readOnly
      }),
      cb
    );
  }

  /**
   * Sends a data message to the other peer.
   *
   * @param {*} data The message to send
   * @param {Object} options Options object
   * @param {Boolean} [options.compress=false] Specifies whether or not to
   *     compress `data`
   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary
   *     or text
   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the
   *     last one
   * @param {Boolean} [options.mask=false] Specifies whether or not to mask
   *     `data`
   * @param {Function} [cb] Callback
   * @public
   */
  send(data, options, cb) {
    const buf = toBuffer(data);
    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];
    let opcode = options.binary ? 2 : 1;
    let rsv1 = options.compress;

    if (this._firstFragment) {
      this._firstFragment = false;
      if (rsv1 && perMessageDeflate) {
        rsv1 = buf.length >= perMessageDeflate._threshold;
      }
      this._compress = rsv1;
    } else {
      rsv1 = false;
      opcode = 0;
    }

    if (options.fin) this._firstFragment = true;

    if (perMessageDeflate) {
      const opts = {
        fin: options.fin,
        rsv1,
        opcode,
        mask: options.mask,
        readOnly: toBuffer.readOnly
      };

      if (this._deflating) {
        this.enqueue([this.dispatch, buf, this._compress, opts, cb]);
      } else {
        this.dispatch(buf, this._compress, opts, cb);
      }
    } else {
      this.sendFrame(
        Sender.frame(buf, {
          fin: options.fin,
          rsv1: false,
          opcode,
          mask: options.mask,
          readOnly: toBuffer.readOnly
        }),
        cb
      );
    }
  }

  /**
   * Dispatches a data message.
   *
   * @param {Buffer} data The message to send
   * @param {Boolean} [compress=false] Specifies whether or not to compress
   *     `data`
   * @param {Object} options Options object
   * @param {Number} options.opcode The opcode
   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be
   *     modified
   * @param {Boolean} [options.fin=false] Specifies whether or not to set the
   *     FIN bit
   * @param {Boolean} [options.mask=false] Specifies whether or not to mask
   *     `data`
   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the
   *     RSV1 bit
   * @param {Function} [cb] Callback
   * @private
   */
  dispatch(data, compress, options, cb) {
    if (!compress) {
      this.sendFrame(Sender.frame(data, options), cb);
      return;
    }

    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];

    this._bufferedBytes += data.length;
    this._deflating = true;
    perMessageDeflate.compress(data, options.fin, (_, buf) => {
      if (this._socket.destroyed) {
        const err = new Error(
          'The socket was closed while data was being compressed'
        );

        if (typeof cb === 'function') cb(err);

        for (let i = 0; i < this._queue.length; i++) {
          const callback = this._queue[i][4];

          if (typeof callback === 'function') callback(err);
        }

        return;
      }

      this._bufferedBytes -= data.length;
      this._deflating = false;
      options.readOnly = false;
      this.sendFrame(Sender.frame(buf, options), cb);
      this.dequeue();
    });
  }

  /**
   * Executes queued send operations.
   *
   * @private
   */
  dequeue() {
    while (!this._deflating && this._queue.length) {
      const params = this._queue.shift();

      this._bufferedBytes -= params[1].length;
      Reflect.apply(params[0], this, params.slice(1));
    }
  }

  /**
   * Enqueues a send operation.
   *
   * @param {Array} params Send operation parameters.
   * @private
   */
  enqueue(params) {
    this._bufferedBytes += params[1].length;
    this._queue.push(params);
  }

  /**
   * Sends a frame.
   *
   * @param {Buffer[]} list The frame to send
   * @param {Function} [cb] Callback
   * @private
   */
  sendFrame(list, cb) {
    if (list.length === 2) {
      this._socket.cork();
      this._socket.write(list[0]);
      this._socket.write(list[1], cb);
      this._socket.uncork();
    } else {
      this._socket.write(list[0], cb);
    }
  }
}

module.exports = Sender;


/***/ }),

/***/ 1658:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {



const { Duplex } = __nccwpck_require__(2781);

/**
 * Emits the `'close'` event on a stream.
 *
 * @param {Duplex} stream The stream.
 * @private
 */
function emitClose(stream) {
  stream.emit('close');
}

/**
 * The listener of the `'end'` event.
 *
 * @private
 */
function duplexOnEnd() {
  if (!this.destroyed && this._writableState.finished) {
    this.destroy();
  }
}

/**
 * The listener of the `'error'` event.
 *
 * @param {Error} err The error
 * @private
 */
function duplexOnError(err) {
  this.removeListener('error', duplexOnError);
  this.destroy();
  if (this.listenerCount('error') === 0) {
    // Do not suppress the throwing behavior.
    this.emit('error', err);
  }
}

/**
 * Wraps a `WebSocket` in a duplex stream.
 *
 * @param {WebSocket} ws The `WebSocket` to wrap
 * @param {Object} [options] The options for the `Duplex` constructor
 * @return {Duplex} The duplex stream
 * @public
 */
function createWebSocketStream(ws, options) {
  let resumeOnReceiverDrain = true;
  let terminateOnDestroy = true;

  function receiverOnDrain() {
    if (resumeOnReceiverDrain) ws._socket.resume();
  }

  if (ws.readyState === ws.CONNECTING) {
    ws.once('open', function open() {
      ws._receiver.removeAllListeners('drain');
      ws._receiver.on('drain', receiverOnDrain);
    });
  } else {
    ws._receiver.removeAllListeners('drain');
    ws._receiver.on('drain', receiverOnDrain);
  }

  const duplex = new Duplex({
    ...options,
    autoDestroy: false,
    emitClose: false,
    objectMode: false,
    writableObjectMode: false
  });

  ws.on('message', function message(msg) {
    if (!duplex.push(msg)) {
      resumeOnReceiverDrain = false;
      ws._socket.pause();
    }
  });

  ws.once('error', function error(err) {
    if (duplex.destroyed) return;

    // Prevent `ws.terminate()` from being called by `duplex._destroy()`.
    //
    // - If the `'error'` event is emitted before the `'open'` event, then
    //   `ws.terminate()` is a noop as no socket is assigned.
    // - Otherwise, the error is re-emitted by the listener of the `'error'`
    //   event of the `Receiver` object. The listener already closes the
    //   connection by calling `ws.close()`. This allows a close frame to be
    //   sent to the other peer. If `ws.terminate()` is called right after this,
    //   then the close frame might not be sent.
    terminateOnDestroy = false;
    duplex.destroy(err);
  });

  ws.once('close', function close() {
    if (duplex.destroyed) return;

    duplex.push(null);
  });

  duplex._destroy = function (err, callback) {
    if (ws.readyState === ws.CLOSED) {
      callback(err);
      process.nextTick(emitClose, duplex);
      return;
    }

    let called = false;

    ws.once('error', function error(err) {
      called = true;
      callback(err);
    });

    ws.once('close', function close() {
      if (!called) callback(err);
      process.nextTick(emitClose, duplex);
    });

    if (terminateOnDestroy) ws.terminate();
  };

  duplex._final = function (callback) {
    if (ws.readyState === ws.CONNECTING) {
      ws.once('open', function open() {
        duplex._final(callback);
      });
      return;
    }

    // If the value of the `_socket` property is `null` it means that `ws` is a
    // client websocket and the handshake failed. In fact, when this happens, a
    // socket is never assigned to the websocket. Wait for the `'error'` event
    // that will be emitted by the websocket.
    if (ws._socket === null) return;

    if (ws._socket._writableState.finished) {
      callback();
      if (duplex._readableState.endEmitted) duplex.destroy();
    } else {
      ws._socket.once('finish', function finish() {
        // `duplex` is not destroyed here because the `'end'` event will be
        // emitted on `duplex` after this `'finish'` event. The EOF signaling
        // `null` chunk is, in fact, pushed when the websocket emits `'close'`.
        callback();
      });
      ws.close();
    }
  };

  duplex._read = function () {
    if (
      (ws.readyState === ws.OPEN || ws.readyState === ws.CLOSING) &&
      !resumeOnReceiverDrain
    ) {
      resumeOnReceiverDrain = true;
      if (!ws._receiver._writableState.needDrain) ws._socket.resume();
    }
  };

  duplex._write = function (chunk, encoding, callback) {
    if (ws.readyState === ws.CONNECTING) {
      ws.once('open', function open() {
        duplex._write(chunk, encoding, callback);
      });
      return;
    }

    ws.send(chunk, callback);
  };

  duplex.on('end', duplexOnEnd);
  duplex.on('error', duplexOnError);
  return duplex;
}

module.exports = createWebSocketStream;


/***/ }),

/***/ 6279:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {



/**
 * Checks if a status code is allowed in a close frame.
 *
 * @param {Number} code The status code
 * @return {Boolean} `true` if the status code is valid, else `false`
 * @public
 */
function isValidStatusCode(code) {
  return (
    (code >= 1000 &&
      code <= 1014 &&
      code !== 1004 &&
      code !== 1005 &&
      code !== 1006) ||
    (code >= 3000 && code <= 4999)
  );
}

/**
 * Checks if a given buffer contains only correct UTF-8.
 * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by
 * Markus Kuhn.
 *
 * @param {Buffer} buf The buffer to check
 * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`
 * @public
 */
function _isValidUTF8(buf) {
  const len = buf.length;
  let i = 0;

  while (i < len) {
    if ((buf[i] & 0x80) === 0) {
      // 0xxxxxxx
      i++;
    } else if ((buf[i] & 0xe0) === 0xc0) {
      // 110xxxxx 10xxxxxx
      if (
        i + 1 === len ||
        (buf[i + 1] & 0xc0) !== 0x80 ||
        (buf[i] & 0xfe) === 0xc0 // Overlong
      ) {
        return false;
      }

      i += 2;
    } else if ((buf[i] & 0xf0) === 0xe0) {
      // 1110xxxx 10xxxxxx 10xxxxxx
      if (
        i + 2 >= len ||
        (buf[i + 1] & 0xc0) !== 0x80 ||
        (buf[i + 2] & 0xc0) !== 0x80 ||
        (buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80) || // Overlong
        (buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0) // Surrogate (U+D800 - U+DFFF)
      ) {
        return false;
      }

      i += 3;
    } else if ((buf[i] & 0xf8) === 0xf0) {
      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx
      if (
        i + 3 >= len ||
        (buf[i + 1] & 0xc0) !== 0x80 ||
        (buf[i + 2] & 0xc0) !== 0x80 ||
        (buf[i + 3] & 0xc0) !== 0x80 ||
        (buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80) || // Overlong
        (buf[i] === 0xf4 && buf[i + 1] > 0x8f) ||
        buf[i] > 0xf4 // > U+10FFFF
      ) {
        return false;
      }

      i += 4;
    } else {
      return false;
    }
  }

  return true;
}

try {
  let isValidUTF8 = __nccwpck_require__(4592);

  /* istanbul ignore if */
  if (typeof isValidUTF8 === 'object') {
    isValidUTF8 = isValidUTF8.Validation.isValidUTF8; // utf-8-validate@<3.0.0
  }

  module.exports = {
    isValidStatusCode,
    isValidUTF8(buf) {
      return buf.length < 150 ? _isValidUTF8(buf) : isValidUTF8(buf);
    }
  };
} catch (e) /* istanbul ignore next */ {
  module.exports = {
    isValidStatusCode,
    isValidUTF8: _isValidUTF8
  };
}


/***/ }),

/***/ 8887:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

/* eslint no-unused-vars: ["error", { "varsIgnorePattern": "^net|tls|https$" }] */



const EventEmitter = __nccwpck_require__(2361);
const http = __nccwpck_require__(3685);
const https = __nccwpck_require__(5687);
const net = __nccwpck_require__(1808);
const tls = __nccwpck_require__(4404);
const { createHash } = __nccwpck_require__(6113);

const PerMessageDeflate = __nccwpck_require__(6684);
const WebSocket = __nccwpck_require__(1518);
const { format, parse } = __nccwpck_require__(2035);
const { GUID, kWebSocket } = __nccwpck_require__(5949);

const keyRegex = /^[+/0-9A-Za-z]{22}==$/;

const RUNNING = 0;
const CLOSING = 1;
const CLOSED = 2;

/**
 * Class representing a WebSocket server.
 *
 * @extends EventEmitter
 */
class WebSocketServer extends EventEmitter {
  /**
   * Create a `WebSocketServer` instance.
   *
   * @param {Object} options Configuration options
   * @param {Number} [options.backlog=511] The maximum length of the queue of
   *     pending connections
   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to
   *     track clients
   * @param {Function} [options.handleProtocols] A hook to handle protocols
   * @param {String} [options.host] The hostname where to bind the server
   * @param {Number} [options.maxPayload=104857600] The maximum allowed message
   *     size
   * @param {Boolean} [options.noServer=false] Enable no server mode
   * @param {String} [options.path] Accept only connections matching this path
   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable
   *     permessage-deflate
   * @param {Number} [options.port] The port where to bind the server
   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S
   *     server to use
   * @param {Function} [options.verifyClient] A hook to reject connections
   * @param {Function} [callback] A listener for the `listening` event
   */
  constructor(options, callback) {
    super();

    options = {
      maxPayload: 100 * 1024 * 1024,
      perMessageDeflate: false,
      handleProtocols: null,
      clientTracking: true,
      verifyClient: null,
      noServer: false,
      backlog: null, // use default (511 as implemented in net.js)
      server: null,
      host: null,
      path: null,
      port: null,
      ...options
    };

    if (
      (options.port == null && !options.server && !options.noServer) ||
      (options.port != null && (options.server || options.noServer)) ||
      (options.server && options.noServer)
    ) {
      throw new TypeError(
        'One and only one of the "port", "server", or "noServer" options ' +
          'must be specified'
      );
    }

    if (options.port != null) {
      this._server = http.createServer((req, res) => {
        const body = http.STATUS_CODES[426];

        res.writeHead(426, {
          'Content-Length': body.length,
          'Content-Type': 'text/plain'
        });
        res.end(body);
      });
      this._server.listen(
        options.port,
        options.host,
        options.backlog,
        callback
      );
    } else if (options.server) {
      this._server = options.server;
    }

    if (this._server) {
      const emitConnection = this.emit.bind(this, 'connection');

      this._removeListeners = addListeners(this._server, {
        listening: this.emit.bind(this, 'listening'),
        error: this.emit.bind(this, 'error'),
        upgrade: (req, socket, head) => {
          this.handleUpgrade(req, socket, head, emitConnection);
        }
      });
    }

    if (options.perMessageDeflate === true) options.perMessageDeflate = {};
    if (options.clientTracking) this.clients = new Set();
    this.options = options;
    this._state = RUNNING;
  }

  /**
   * Returns the bound address, the address family name, and port of the server
   * as reported by the operating system if listening on an IP socket.
   * If the server is listening on a pipe or UNIX domain socket, the name is
   * returned as a string.
   *
   * @return {(Object|String|null)} The address of the server
   * @public
   */
  address() {
    if (this.options.noServer) {
      throw new Error('The server is operating in "noServer" mode');
    }

    if (!this._server) return null;
    return this._server.address();
  }

  /**
   * Close the server.
   *
   * @param {Function} [cb] Callback
   * @public
   */
  close(cb) {
    if (cb) this.once('close', cb);

    if (this._state === CLOSED) {
      process.nextTick(emitClose, this);
      return;
    }

    if (this._state === CLOSING) return;
    this._state = CLOSING;

    //
    // Terminate all associated clients.
    //
    if (this.clients) {
      for (const client of this.clients) client.terminate();
    }

    const server = this._server;

    if (server) {
      this._removeListeners();
      this._removeListeners = this._server = null;

      //
      // Close the http server if it was internally created.
      //
      if (this.options.port != null) {
        server.close(emitClose.bind(undefined, this));
        return;
      }
    }

    process.nextTick(emitClose, this);
  }

  /**
   * See if a given request should be handled by this server instance.
   *
   * @param {http.IncomingMessage} req Request object to inspect
   * @return {Boolean} `true` if the request is valid, else `false`
   * @public
   */
  shouldHandle(req) {
    if (this.options.path) {
      const index = req.url.indexOf('?');
      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;

      if (pathname !== this.options.path) return false;
    }

    return true;
  }

  /**
   * Handle a HTTP Upgrade request.
   *
   * @param {http.IncomingMessage} req The request object
   * @param {(net.Socket|tls.Socket)} socket The network socket between the
   *     server and client
   * @param {Buffer} head The first packet of the upgraded stream
   * @param {Function} cb Callback
   * @public
   */
  handleUpgrade(req, socket, head, cb) {
    socket.on('error', socketOnError);

    const key =
      req.headers['sec-websocket-key'] !== undefined
        ? req.headers['sec-websocket-key'].trim()
        : false;
    const version = +req.headers['sec-websocket-version'];
    const extensions = {};

    if (
      req.method !== 'GET' ||
      req.headers.upgrade.toLowerCase() !== 'websocket' ||
      !key ||
      !keyRegex.test(key) ||
      (version !== 8 && version !== 13) ||
      !this.shouldHandle(req)
    ) {
      return abortHandshake(socket, 400);
    }

    if (this.options.perMessageDeflate) {
      const perMessageDeflate = new PerMessageDeflate(
        this.options.perMessageDeflate,
        true,
        this.options.maxPayload
      );

      try {
        const offers = parse(req.headers['sec-websocket-extensions']);

        if (offers[PerMessageDeflate.extensionName]) {
          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);
          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;
        }
      } catch (err) {
        return abortHandshake(socket, 400);
      }
    }

    //
    // Optionally call external client verification handler.
    //
    if (this.options.verifyClient) {
      const info = {
        origin:
          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],
        secure: !!(req.socket.authorized || req.socket.encrypted),
        req
      };

      if (this.options.verifyClient.length === 2) {
        this.options.verifyClient(info, (verified, code, message, headers) => {
          if (!verified) {
            return abortHandshake(socket, code || 401, message, headers);
          }

          this.completeUpgrade(key, extensions, req, socket, head, cb);
        });
        return;
      }

      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);
    }

    this.completeUpgrade(key, extensions, req, socket, head, cb);
  }

  /**
   * Upgrade the connection to WebSocket.
   *
   * @param {String} key The value of the `Sec-WebSocket-Key` header
   * @param {Object} extensions The accepted extensions
   * @param {http.IncomingMessage} req The request object
   * @param {(net.Socket|tls.Socket)} socket The network socket between the
   *     server and client
   * @param {Buffer} head The first packet of the upgraded stream
   * @param {Function} cb Callback
   * @throws {Error} If called more than once with the same socket
   * @private
   */
  completeUpgrade(key, extensions, req, socket, head, cb) {
    //
    // Destroy the socket if the client has already sent a FIN packet.
    //
    if (!socket.readable || !socket.writable) return socket.destroy();

    if (socket[kWebSocket]) {
      throw new Error(
        'server.handleUpgrade() was called more than once with the same ' +
          'socket, possibly due to a misconfiguration'
      );
    }

    if (this._state > RUNNING) return abortHandshake(socket, 503);

    const digest = createHash('sha1')
      .update(key + GUID)
      .digest('base64');

    const headers = [
      'HTTP/1.1 101 Switching Protocols',
      'Upgrade: websocket',
      'Connection: Upgrade',
      `Sec-WebSocket-Accept: ${digest}`
    ];

    const ws = new WebSocket(null);
    let protocol = req.headers['sec-websocket-protocol'];

    if (protocol) {
      protocol = protocol.split(',').map(trim);

      //
      // Optionally call external protocol selection handler.
      //
      if (this.options.handleProtocols) {
        protocol = this.options.handleProtocols(protocol, req);
      } else {
        protocol = protocol[0];
      }

      if (protocol) {
        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);
        ws._protocol = protocol;
      }
    }

    if (extensions[PerMessageDeflate.extensionName]) {
      const params = extensions[PerMessageDeflate.extensionName].params;
      const value = format({
        [PerMessageDeflate.extensionName]: [params]
      });
      headers.push(`Sec-WebSocket-Extensions: ${value}`);
      ws._extensions = extensions;
    }

    //
    // Allow external modification/inspection of handshake headers.
    //
    this.emit('headers', headers, req);

    socket.write(headers.concat('\r\n').join('\r\n'));
    socket.removeListener('error', socketOnError);

    ws.setSocket(socket, head, this.options.maxPayload);

    if (this.clients) {
      this.clients.add(ws);
      ws.on('close', () => this.clients.delete(ws));
    }

    cb(ws, req);
  }
}

module.exports = WebSocketServer;

/**
 * Add event listeners on an `EventEmitter` using a map of <event, listener>
 * pairs.
 *
 * @param {EventEmitter} server The event emitter
 * @param {Object.<String, Function>} map The listeners to add
 * @return {Function} A function that will remove the added listeners when
 *     called
 * @private
 */
function addListeners(server, map) {
  for (const event of Object.keys(map)) server.on(event, map[event]);

  return function removeListeners() {
    for (const event of Object.keys(map)) {
      server.removeListener(event, map[event]);
    }
  };
}

/**
 * Emit a `'close'` event on an `EventEmitter`.
 *
 * @param {EventEmitter} server The event emitter
 * @private
 */
function emitClose(server) {
  server._state = CLOSED;
  server.emit('close');
}

/**
 * Handle premature socket errors.
 *
 * @private
 */
function socketOnError() {
  this.destroy();
}

/**
 * Close the connection when preconditions are not fulfilled.
 *
 * @param {(net.Socket|tls.Socket)} socket The socket of the upgrade request
 * @param {Number} code The HTTP response status code
 * @param {String} [message] The HTTP response body
 * @param {Object} [headers] Additional HTTP response headers
 * @private
 */
function abortHandshake(socket, code, message, headers) {
  if (socket.writable) {
    message = message || http.STATUS_CODES[code];
    headers = {
      Connection: 'close',
      'Content-Type': 'text/html',
      'Content-Length': Buffer.byteLength(message),
      ...headers
    };

    socket.write(
      `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\r\n` +
        Object.keys(headers)
          .map((h) => `${h}: ${headers[h]}`)
          .join('\r\n') +
        '\r\n\r\n' +
        message
    );
  }

  socket.removeListener('error', socketOnError);
  socket.destroy();
}

/**
 * Remove whitespace characters from both ends of a string.
 *
 * @param {String} str The string
 * @return {String} A new string representing `str` stripped of whitespace
 *     characters from both its beginning and end
 * @private
 */
function trim(str) {
  return str.trim();
}


/***/ }),

/***/ 1518:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

/* eslint no-unused-vars: ["error", { "varsIgnorePattern": "^Readable$" }] */



const EventEmitter = __nccwpck_require__(2361);
const https = __nccwpck_require__(5687);
const http = __nccwpck_require__(3685);
const net = __nccwpck_require__(1808);
const tls = __nccwpck_require__(4404);
const { randomBytes, createHash } = __nccwpck_require__(6113);
const { Readable } = __nccwpck_require__(2781);
const { URL } = __nccwpck_require__(7310);

const PerMessageDeflate = __nccwpck_require__(6684);
const Receiver = __nccwpck_require__(5066);
const Sender = __nccwpck_require__(6947);
const {
  BINARY_TYPES,
  EMPTY_BUFFER,
  GUID,
  kStatusCode,
  kWebSocket,
  NOOP
} = __nccwpck_require__(5949);
const { addEventListener, removeEventListener } = __nccwpck_require__(4561);
const { format, parse } = __nccwpck_require__(2035);
const { toBuffer } = __nccwpck_require__(9436);

const readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];
const protocolVersions = [8, 13];
const closeTimeout = 30 * 1000;

/**
 * Class representing a WebSocket.
 *
 * @extends EventEmitter
 */
class WebSocket extends EventEmitter {
  /**
   * Create a new `WebSocket`.
   *
   * @param {(String|URL)} address The URL to which to connect
   * @param {(String|String[])} [protocols] The subprotocols
   * @param {Object} [options] Connection options
   */
  constructor(address, protocols, options) {
    super();

    this._binaryType = BINARY_TYPES[0];
    this._closeCode = 1006;
    this._closeFrameReceived = false;
    this._closeFrameSent = false;
    this._closeMessage = '';
    this._closeTimer = null;
    this._extensions = {};
    this._protocol = '';
    this._readyState = WebSocket.CONNECTING;
    this._receiver = null;
    this._sender = null;
    this._socket = null;

    if (address !== null) {
      this._bufferedAmount = 0;
      this._isServer = false;
      this._redirects = 0;

      if (Array.isArray(protocols)) {
        protocols = protocols.join(', ');
      } else if (typeof protocols === 'object' && protocols !== null) {
        options = protocols;
        protocols = undefined;
      }

      initAsClient(this, address, protocols, options);
    } else {
      this._isServer = true;
    }
  }

  /**
   * This deviates from the WHATWG interface since ws doesn't support the
   * required default "blob" type (instead we define a custom "nodebuffer"
   * type).
   *
   * @type {String}
   */
  get binaryType() {
    return this._binaryType;
  }

  set binaryType(type) {
    if (!BINARY_TYPES.includes(type)) return;

    this._binaryType = type;

    //
    // Allow to change `binaryType` on the fly.
    //
    if (this._receiver) this._receiver._binaryType = type;
  }

  /**
   * @type {Number}
   */
  get bufferedAmount() {
    if (!this._socket) return this._bufferedAmount;

    return this._socket._writableState.length + this._sender._bufferedBytes;
  }

  /**
   * @type {String}
   */
  get extensions() {
    return Object.keys(this._extensions).join();
  }

  /**
   * @type {Function}
   */
  /* istanbul ignore next */
  get onclose() {
    return undefined;
  }

  /* istanbul ignore next */
  set onclose(listener) {}

  /**
   * @type {Function}
   */
  /* istanbul ignore next */
  get onerror() {
    return undefined;
  }

  /* istanbul ignore next */
  set onerror(listener) {}

  /**
   * @type {Function}
   */
  /* istanbul ignore next */
  get onopen() {
    return undefined;
  }

  /* istanbul ignore next */
  set onopen(listener) {}

  /**
   * @type {Function}
   */
  /* istanbul ignore next */
  get onmessage() {
    return undefined;
  }

  /* istanbul ignore next */
  set onmessage(listener) {}

  /**
   * @type {String}
   */
  get protocol() {
    return this._protocol;
  }

  /**
   * @type {Number}
   */
  get readyState() {
    return this._readyState;
  }

  /**
   * @type {String}
   */
  get url() {
    return this._url;
  }

  /**
   * Set up the socket and the internal resources.
   *
   * @param {(net.Socket|tls.Socket)} socket The network socket between the
   *     server and client
   * @param {Buffer} head The first packet of the upgraded stream
   * @param {Number} [maxPayload=0] The maximum allowed message size
   * @private
   */
  setSocket(socket, head, maxPayload) {
    const receiver = new Receiver(
      this.binaryType,
      this._extensions,
      this._isServer,
      maxPayload
    );

    this._sender = new Sender(socket, this._extensions);
    this._receiver = receiver;
    this._socket = socket;

    receiver[kWebSocket] = this;
    socket[kWebSocket] = this;

    receiver.on('conclude', receiverOnConclude);
    receiver.on('drain', receiverOnDrain);
    receiver.on('error', receiverOnError);
    receiver.on('message', receiverOnMessage);
    receiver.on('ping', receiverOnPing);
    receiver.on('pong', receiverOnPong);

    socket.setTimeout(0);
    socket.setNoDelay();

    if (head.length > 0) socket.unshift(head);

    socket.on('close', socketOnClose);
    socket.on('data', socketOnData);
    socket.on('end', socketOnEnd);
    socket.on('error', socketOnError);

    this._readyState = WebSocket.OPEN;
    this.emit('open');
  }

  /**
   * Emit the `'close'` event.
   *
   * @private
   */
  emitClose() {
    if (!this._socket) {
      this._readyState = WebSocket.CLOSED;
      this.emit('close', this._closeCode, this._closeMessage);
      return;
    }

    if (this._extensions[PerMessageDeflate.extensionName]) {
      this._extensions[PerMessageDeflate.extensionName].cleanup();
    }

    this._receiver.removeAllListeners();
    this._readyState = WebSocket.CLOSED;
    this.emit('close', this._closeCode, this._closeMessage);
  }

  /**
   * Start a closing handshake.
   *
   *          +----------+   +-----------+   +----------+
   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -
   *    |     +----------+   +-----------+   +----------+     |
   *          +----------+   +-----------+         |
   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING
   *          +----------+   +-----------+   |
   *    |           |                        |   +---+        |
   *                +------------------------+-->|fin| - - - -
   *    |         +---+                      |   +---+
   *     - - - - -|fin|<---------------------+
   *              +---+
   *
   * @param {Number} [code] Status code explaining why the connection is closing
   * @param {String} [data] A string explaining why the connection is closing
   * @public
   */
  close(code, data) {
    if (this.readyState === WebSocket.CLOSED) return;
    if (this.readyState === WebSocket.CONNECTING) {
      const msg = 'WebSocket was closed before the connection was established';
      return abortHandshake(this, this._req, msg);
    }

    if (this.readyState === WebSocket.CLOSING) {
      if (
        this._closeFrameSent &&
        (this._closeFrameReceived || this._receiver._writableState.errorEmitted)
      ) {
        this._socket.end();
      }

      return;
    }

    this._readyState = WebSocket.CLOSING;
    this._sender.close(code, data, !this._isServer, (err) => {
      //
      // This error is handled by the `'error'` listener on the socket. We only
      // want to know if the close frame has been sent here.
      //
      if (err) return;

      this._closeFrameSent = true;

      if (
        this._closeFrameReceived ||
        this._receiver._writableState.errorEmitted
      ) {
        this._socket.end();
      }
    });

    //
    // Specify a timeout for the closing handshake to complete.
    //
    this._closeTimer = setTimeout(
      this._socket.destroy.bind(this._socket),
      closeTimeout
    );
  }

  /**
   * Send a ping.
   *
   * @param {*} [data] The data to send
   * @param {Boolean} [mask] Indicates whether or not to mask `data`
   * @param {Function} [cb] Callback which is executed when the ping is sent
   * @public
   */
  ping(data, mask, cb) {
    if (this.readyState === WebSocket.CONNECTING) {
      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');
    }

    if (typeof data === 'function') {
      cb = data;
      data = mask = undefined;
    } else if (typeof mask === 'function') {
      cb = mask;
      mask = undefined;
    }

    if (typeof data === 'number') data = data.toString();

    if (this.readyState !== WebSocket.OPEN) {
      sendAfterClose(this, data, cb);
      return;
    }

    if (mask === undefined) mask = !this._isServer;
    this._sender.ping(data || EMPTY_BUFFER, mask, cb);
  }

  /**
   * Send a pong.
   *
   * @param {*} [data] The data to send
   * @param {Boolean} [mask] Indicates whether or not to mask `data`
   * @param {Function} [cb] Callback which is executed when the pong is sent
   * @public
   */
  pong(data, mask, cb) {
    if (this.readyState === WebSocket.CONNECTING) {
      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');
    }

    if (typeof data === 'function') {
      cb = data;
      data = mask = undefined;
    } else if (typeof mask === 'function') {
      cb = mask;
      mask = undefined;
    }

    if (typeof data === 'number') data = data.toString();

    if (this.readyState !== WebSocket.OPEN) {
      sendAfterClose(this, data, cb);
      return;
    }

    if (mask === undefined) mask = !this._isServer;
    this._sender.pong(data || EMPTY_BUFFER, mask, cb);
  }

  /**
   * Send a data message.
   *
   * @param {*} data The message to send
   * @param {Object} [options] Options object
   * @param {Boolean} [options.compress] Specifies whether or not to compress
   *     `data`
   * @param {Boolean} [options.binary] Specifies whether `data` is binary or
   *     text
   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the
   *     last one
   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`
   * @param {Function} [cb] Callback which is executed when data is written out
   * @public
   */
  send(data, options, cb) {
    if (this.readyState === WebSocket.CONNECTING) {
      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');
    }

    if (typeof options === 'function') {
      cb = options;
      options = {};
    }

    if (typeof data === 'number') data = data.toString();

    if (this.readyState !== WebSocket.OPEN) {
      sendAfterClose(this, data, cb);
      return;
    }

    const opts = {
      binary: typeof data !== 'string',
      mask: !this._isServer,
      compress: true,
      fin: true,
      ...options
    };

    if (!this._extensions[PerMessageDeflate.extensionName]) {
      opts.compress = false;
    }

    this._sender.send(data || EMPTY_BUFFER, opts, cb);
  }

  /**
   * Forcibly close the connection.
   *
   * @public
   */
  terminate() {
    if (this.readyState === WebSocket.CLOSED) return;
    if (this.readyState === WebSocket.CONNECTING) {
      const msg = 'WebSocket was closed before the connection was established';
      return abortHandshake(this, this._req, msg);
    }

    if (this._socket) {
      this._readyState = WebSocket.CLOSING;
      this._socket.destroy();
    }
  }
}

/**
 * @constant {Number} CONNECTING
 * @memberof WebSocket
 */
Object.defineProperty(WebSocket, 'CONNECTING', {
  enumerable: true,
  value: readyStates.indexOf('CONNECTING')
});

/**
 * @constant {Number} CONNECTING
 * @memberof WebSocket.prototype
 */
Object.defineProperty(WebSocket.prototype, 'CONNECTING', {
  enumerable: true,
  value: readyStates.indexOf('CONNECTING')
});

/**
 * @constant {Number} OPEN
 * @memberof WebSocket
 */
Object.defineProperty(WebSocket, 'OPEN', {
  enumerable: true,
  value: readyStates.indexOf('OPEN')
});

/**
 * @constant {Number} OPEN
 * @memberof WebSocket.prototype
 */
Object.defineProperty(WebSocket.prototype, 'OPEN', {
  enumerable: true,
  value: readyStates.indexOf('OPEN')
});

/**
 * @constant {Number} CLOSING
 * @memberof WebSocket
 */
Object.defineProperty(WebSocket, 'CLOSING', {
  enumerable: true,
  value: readyStates.indexOf('CLOSING')
});

/**
 * @constant {Number} CLOSING
 * @memberof WebSocket.prototype
 */
Object.defineProperty(WebSocket.prototype, 'CLOSING', {
  enumerable: true,
  value: readyStates.indexOf('CLOSING')
});

/**
 * @constant {Number} CLOSED
 * @memberof WebSocket
 */
Object.defineProperty(WebSocket, 'CLOSED', {
  enumerable: true,
  value: readyStates.indexOf('CLOSED')
});

/**
 * @constant {Number} CLOSED
 * @memberof WebSocket.prototype
 */
Object.defineProperty(WebSocket.prototype, 'CLOSED', {
  enumerable: true,
  value: readyStates.indexOf('CLOSED')
});

[
  'binaryType',
  'bufferedAmount',
  'extensions',
  'protocol',
  'readyState',
  'url'
].forEach((property) => {
  Object.defineProperty(WebSocket.prototype, property, { enumerable: true });
});

//
// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.
// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface
//
['open', 'error', 'close', 'message'].forEach((method) => {
  Object.defineProperty(WebSocket.prototype, `on${method}`, {
    enumerable: true,
    get() {
      const listeners = this.listeners(method);
      for (let i = 0; i < listeners.length; i++) {
        if (listeners[i]._listener) return listeners[i]._listener;
      }

      return undefined;
    },
    set(listener) {
      const listeners = this.listeners(method);
      for (let i = 0; i < listeners.length; i++) {
        //
        // Remove only the listeners added via `addEventListener`.
        //
        if (listeners[i]._listener) this.removeListener(method, listeners[i]);
      }
      this.addEventListener(method, listener);
    }
  });
});

WebSocket.prototype.addEventListener = addEventListener;
WebSocket.prototype.removeEventListener = removeEventListener;

module.exports = WebSocket;

/**
 * Initialize a WebSocket client.
 *
 * @param {WebSocket} websocket The client to initialize
 * @param {(String|URL)} address The URL to which to connect
 * @param {String} [protocols] The subprotocols
 * @param {Object} [options] Connection options
 * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable
 *     permessage-deflate
 * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the
 *     handshake request
 * @param {Number} [options.protocolVersion=13] Value of the
 *     `Sec-WebSocket-Version` header
 * @param {String} [options.origin] Value of the `Origin` or
 *     `Sec-WebSocket-Origin` header
 * @param {Number} [options.maxPayload=104857600] The maximum allowed message
 *     size
 * @param {Boolean} [options.followRedirects=false] Whether or not to follow
 *     redirects
 * @param {Number} [options.maxRedirects=10] The maximum number of redirects
 *     allowed
 * @private
 */
function initAsClient(websocket, address, protocols, options) {
  const opts = {
    protocolVersion: protocolVersions[1],
    maxPayload: 100 * 1024 * 1024,
    perMessageDeflate: true,
    followRedirects: false,
    maxRedirects: 10,
    ...options,
    createConnection: undefined,
    socketPath: undefined,
    hostname: undefined,
    protocol: undefined,
    timeout: undefined,
    method: undefined,
    host: undefined,
    path: undefined,
    port: undefined
  };

  if (!protocolVersions.includes(opts.protocolVersion)) {
    throw new RangeError(
      `Unsupported protocol version: ${opts.protocolVersion} ` +
        `(supported versions: ${protocolVersions.join(', ')})`
    );
  }

  let parsedUrl;

  if (address instanceof URL) {
    parsedUrl = address;
    websocket._url = address.href;
  } else {
    parsedUrl = new URL(address);
    websocket._url = address;
  }

  const isUnixSocket = parsedUrl.protocol === 'ws+unix:';

  if (!parsedUrl.host && (!isUnixSocket || !parsedUrl.pathname)) {
    const err = new Error(`Invalid URL: ${websocket.url}`);

    if (websocket._redirects === 0) {
      throw err;
    } else {
      emitErrorAndClose(websocket, err);
      return;
    }
  }

  const isSecure =
    parsedUrl.protocol === 'wss:' || parsedUrl.protocol === 'https:';
  const defaultPort = isSecure ? 443 : 80;
  const key = randomBytes(16).toString('base64');
  const get = isSecure ? https.get : http.get;
  let perMessageDeflate;

  opts.createConnection = isSecure ? tlsConnect : netConnect;
  opts.defaultPort = opts.defaultPort || defaultPort;
  opts.port = parsedUrl.port || defaultPort;
  opts.host = parsedUrl.hostname.startsWith('[')
    ? parsedUrl.hostname.slice(1, -1)
    : parsedUrl.hostname;
  opts.headers = {
    'Sec-WebSocket-Version': opts.protocolVersion,
    'Sec-WebSocket-Key': key,
    Connection: 'Upgrade',
    Upgrade: 'websocket',
    ...opts.headers
  };
  opts.path = parsedUrl.pathname + parsedUrl.search;
  opts.timeout = opts.handshakeTimeout;

  if (opts.perMessageDeflate) {
    perMessageDeflate = new PerMessageDeflate(
      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},
      false,
      opts.maxPayload
    );
    opts.headers['Sec-WebSocket-Extensions'] = format({
      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()
    });
  }
  if (protocols) {
    opts.headers['Sec-WebSocket-Protocol'] = protocols;
  }
  if (opts.origin) {
    if (opts.protocolVersion < 13) {
      opts.headers['Sec-WebSocket-Origin'] = opts.origin;
    } else {
      opts.headers.Origin = opts.origin;
    }
  }
  if (parsedUrl.username || parsedUrl.password) {
    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;
  }

  if (isUnixSocket) {
    const parts = opts.path.split(':');

    opts.socketPath = parts[0];
    opts.path = parts[1];
  }

  if (opts.followRedirects) {
    if (websocket._redirects === 0) {
      websocket._originalUnixSocket = isUnixSocket;
      websocket._originalSecure = isSecure;
      websocket._originalHostOrSocketPath = isUnixSocket
        ? opts.socketPath
        : parsedUrl.host;

      const headers = options && options.headers;

      //
      // Shallow copy the user provided options so that headers can be changed
      // without mutating the original object.
      //
      options = { ...options, headers: {} };

      if (headers) {
        for (const [key, value] of Object.entries(headers)) {
          options.headers[key.toLowerCase()] = value;
        }
      }
    } else {
      const isSameHost = isUnixSocket
        ? websocket._originalUnixSocket
          ? opts.socketPath === websocket._originalHostOrSocketPath
          : false
        : websocket._originalUnixSocket
        ? false
        : parsedUrl.host === websocket._originalHostOrSocketPath;

      if (!isSameHost || (websocket._originalSecure && !isSecure)) {
        //
        // Match curl 7.77.0 behavior and drop the following headers. These
        // headers are also dropped when following a redirect to a subdomain.
        //
        delete opts.headers.authorization;
        delete opts.headers.cookie;

        if (!isSameHost) delete opts.headers.host;

        opts.auth = undefined;
      }
    }

    //
    // Match curl 7.77.0 behavior and make the first `Authorization` header win.
    // If the `Authorization` header is set, then there is nothing to do as it
    // will take precedence.
    //
    if (opts.auth && !options.headers.authorization) {
      options.headers.authorization =
        'Basic ' + Buffer.from(opts.auth).toString('base64');
    }
  }

  let req = (websocket._req = get(opts));

  if (opts.timeout) {
    req.on('timeout', () => {
      abortHandshake(websocket, req, 'Opening handshake has timed out');
    });
  }

  req.on('error', (err) => {
    if (req === null || req.aborted) return;

    req = websocket._req = null;
    emitErrorAndClose(websocket, err);
  });

  req.on('response', (res) => {
    const location = res.headers.location;
    const statusCode = res.statusCode;

    if (
      location &&
      opts.followRedirects &&
      statusCode >= 300 &&
      statusCode < 400
    ) {
      if (++websocket._redirects > opts.maxRedirects) {
        abortHandshake(websocket, req, 'Maximum redirects exceeded');
        return;
      }

      req.abort();

      let addr;

      try {
        addr = new URL(location, address);
      } catch (err) {
        emitErrorAndClose(websocket, err);
        return;
      }

      initAsClient(websocket, addr, protocols, options);
    } else if (!websocket.emit('unexpected-response', req, res)) {
      abortHandshake(
        websocket,
        req,
        `Unexpected server response: ${res.statusCode}`
      );
    }
  });

  req.on('upgrade', (res, socket, head) => {
    websocket.emit('upgrade', res);

    //
    // The user may have closed the connection from a listener of the `upgrade`
    // event.
    //
    if (websocket.readyState !== WebSocket.CONNECTING) return;

    req = websocket._req = null;

    if (res.headers.upgrade.toLowerCase() !== 'websocket') {
      abortHandshake(websocket, socket, 'Invalid Upgrade header');
      return;
    }

    const digest = createHash('sha1')
      .update(key + GUID)
      .digest('base64');

    if (res.headers['sec-websocket-accept'] !== digest) {
      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');
      return;
    }

    const serverProt = res.headers['sec-websocket-protocol'];
    const protList = (protocols || '').split(/, */);
    let protError;

    if (!protocols && serverProt) {
      protError = 'Server sent a subprotocol but none was requested';
    } else if (protocols && !serverProt) {
      protError = 'Server sent no subprotocol';
    } else if (serverProt && !protList.includes(serverProt)) {
      protError = 'Server sent an invalid subprotocol';
    }

    if (protError) {
      abortHandshake(websocket, socket, protError);
      return;
    }

    if (serverProt) websocket._protocol = serverProt;

    const secWebSocketExtensions = res.headers['sec-websocket-extensions'];

    if (secWebSocketExtensions !== undefined) {
      if (!perMessageDeflate) {
        const message =
          'Server sent a Sec-WebSocket-Extensions header but no extension ' +
          'was requested';
        abortHandshake(websocket, socket, message);
        return;
      }

      let extensions;

      try {
        extensions = parse(secWebSocketExtensions);
      } catch (err) {
        const message = 'Invalid Sec-WebSocket-Extensions header';
        abortHandshake(websocket, socket, message);
        return;
      }

      const extensionNames = Object.keys(extensions);

      if (extensionNames.length) {
        if (
          extensionNames.length !== 1 ||
          extensionNames[0] !== PerMessageDeflate.extensionName
        ) {
          const message =
            'Server indicated an extension that was not requested';
          abortHandshake(websocket, socket, message);
          return;
        }

        try {
          perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);
        } catch (err) {
          const message = 'Invalid Sec-WebSocket-Extensions header';
          abortHandshake(websocket, socket, message);
          return;
        }

        websocket._extensions[PerMessageDeflate.extensionName] =
          perMessageDeflate;
      }
    }

    websocket.setSocket(socket, head, opts.maxPayload);
  });
}

/**
 * Emit the `'error'` and `'close'` event.
 *
 * @param {WebSocket} websocket The WebSocket instance
 * @param {Error} The error to emit
 * @private
 */
function emitErrorAndClose(websocket, err) {
  websocket._readyState = WebSocket.CLOSING;
  websocket.emit('error', err);
  websocket.emitClose();
}

/**
 * Create a `net.Socket` and initiate a connection.
 *
 * @param {Object} options Connection options
 * @return {net.Socket} The newly created socket used to start the connection
 * @private
 */
function netConnect(options) {
  options.path = options.socketPath;
  return net.connect(options);
}

/**
 * Create a `tls.TLSSocket` and initiate a connection.
 *
 * @param {Object} options Connection options
 * @return {tls.TLSSocket} The newly created socket used to start the connection
 * @private
 */
function tlsConnect(options) {
  options.path = undefined;

  if (!options.servername && options.servername !== '') {
    options.servername = net.isIP(options.host) ? '' : options.host;
  }

  return tls.connect(options);
}

/**
 * Abort the handshake and emit an error.
 *
 * @param {WebSocket} websocket The WebSocket instance
 * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to
 *     abort or the socket to destroy
 * @param {String} message The error message
 * @private
 */
function abortHandshake(websocket, stream, message) {
  websocket._readyState = WebSocket.CLOSING;

  const err = new Error(message);
  Error.captureStackTrace(err, abortHandshake);

  if (stream.setHeader) {
    stream.abort();

    if (stream.socket && !stream.socket.destroyed) {
      //
      // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if
      // called after the request completed. See
      // https://github.com/websockets/ws/issues/1869.
      //
      stream.socket.destroy();
    }

    stream.once('abort', websocket.emitClose.bind(websocket));
    websocket.emit('error', err);
  } else {
    stream.destroy(err);
    stream.once('error', websocket.emit.bind(websocket, 'error'));
    stream.once('close', websocket.emitClose.bind(websocket));
  }
}

/**
 * Handle cases where the `ping()`, `pong()`, or `send()` methods are called
 * when the `readyState` attribute is `CLOSING` or `CLOSED`.
 *
 * @param {WebSocket} websocket The WebSocket instance
 * @param {*} [data] The data to send
 * @param {Function} [cb] Callback
 * @private
 */
function sendAfterClose(websocket, data, cb) {
  if (data) {
    const length = toBuffer(data).length;

    //
    // The `_bufferedAmount` property is used only when the peer is a client and
    // the opening handshake fails. Under these circumstances, in fact, the
    // `setSocket()` method is not called, so the `_socket` and `_sender`
    // properties are set to `null`.
    //
    if (websocket._socket) websocket._sender._bufferedBytes += length;
    else websocket._bufferedAmount += length;
  }

  if (cb) {
    const err = new Error(
      `WebSocket is not open: readyState ${websocket.readyState} ` +
        `(${readyStates[websocket.readyState]})`
    );
    cb(err);
  }
}

/**
 * The listener of the `Receiver` `'conclude'` event.
 *
 * @param {Number} code The status code
 * @param {String} reason The reason for closing
 * @private
 */
function receiverOnConclude(code, reason) {
  const websocket = this[kWebSocket];

  websocket._closeFrameReceived = true;
  websocket._closeMessage = reason;
  websocket._closeCode = code;

  if (websocket._socket[kWebSocket] === undefined) return;

  websocket._socket.removeListener('data', socketOnData);
  process.nextTick(resume, websocket._socket);

  if (code === 1005) websocket.close();
  else websocket.close(code, reason);
}

/**
 * The listener of the `Receiver` `'drain'` event.
 *
 * @private
 */
function receiverOnDrain() {
  this[kWebSocket]._socket.resume();
}

/**
 * The listener of the `Receiver` `'error'` event.
 *
 * @param {(RangeError|Error)} err The emitted error
 * @private
 */
function receiverOnError(err) {
  const websocket = this[kWebSocket];

  if (websocket._socket[kWebSocket] !== undefined) {
    websocket._socket.removeListener('data', socketOnData);

    //
    // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See
    // https://github.com/websockets/ws/issues/1940.
    //
    process.nextTick(resume, websocket._socket);

    websocket.close(err[kStatusCode]);
  }

  websocket.emit('error', err);
}

/**
 * The listener of the `Receiver` `'finish'` event.
 *
 * @private
 */
function receiverOnFinish() {
  this[kWebSocket].emitClose();
}

/**
 * The listener of the `Receiver` `'message'` event.
 *
 * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The message
 * @private
 */
function receiverOnMessage(data) {
  this[kWebSocket].emit('message', data);
}

/**
 * The listener of the `Receiver` `'ping'` event.
 *
 * @param {Buffer} data The data included in the ping frame
 * @private
 */
function receiverOnPing(data) {
  const websocket = this[kWebSocket];

  websocket.pong(data, !websocket._isServer, NOOP);
  websocket.emit('ping', data);
}

/**
 * The listener of the `Receiver` `'pong'` event.
 *
 * @param {Buffer} data The data included in the pong frame
 * @private
 */
function receiverOnPong(data) {
  this[kWebSocket].emit('pong', data);
}

/**
 * Resume a readable stream
 *
 * @param {Readable} stream The readable stream
 * @private
 */
function resume(stream) {
  stream.resume();
}

/**
 * The listener of the `net.Socket` `'close'` event.
 *
 * @private
 */
function socketOnClose() {
  const websocket = this[kWebSocket];

  this.removeListener('close', socketOnClose);
  this.removeListener('data', socketOnData);
  this.removeListener('end', socketOnEnd);

  websocket._readyState = WebSocket.CLOSING;

  let chunk;

  //
  // The close frame might not have been received or the `'end'` event emitted,
  // for example, if the socket was destroyed due to an error. Ensure that the
  // `receiver` stream is closed after writing any remaining buffered data to
  // it. If the readable side of the socket is in flowing mode then there is no
  // buffered data as everything has been already written and `readable.read()`
  // will return `null`. If instead, the socket is paused, any possible buffered
  // data will be read as a single chunk.
  //
  if (
    !this._readableState.endEmitted &&
    !websocket._closeFrameReceived &&
    !websocket._receiver._writableState.errorEmitted &&
    (chunk = websocket._socket.read()) !== null
  ) {
    websocket._receiver.write(chunk);
  }

  websocket._receiver.end();

  this[kWebSocket] = undefined;

  clearTimeout(websocket._closeTimer);

  if (
    websocket._receiver._writableState.finished ||
    websocket._receiver._writableState.errorEmitted
  ) {
    websocket.emitClose();
  } else {
    websocket._receiver.on('error', receiverOnFinish);
    websocket._receiver.on('finish', receiverOnFinish);
  }
}

/**
 * The listener of the `net.Socket` `'data'` event.
 *
 * @param {Buffer} chunk A chunk of data
 * @private
 */
function socketOnData(chunk) {
  if (!this[kWebSocket]._receiver.write(chunk)) {
    this.pause();
  }
}

/**
 * The listener of the `net.Socket` `'end'` event.
 *
 * @private
 */
function socketOnEnd() {
  const websocket = this[kWebSocket];

  websocket._readyState = WebSocket.CLOSING;
  websocket._receiver.end();
  this.end();
}

/**
 * The listener of the `net.Socket` `'error'` event.
 *
 * @private
 */
function socketOnError() {
  const websocket = this[kWebSocket];

  this.removeListener('error', socketOnError);
  this.on('error', NOOP);

  if (websocket) {
    websocket._readyState = WebSocket.CLOSING;
    this.destroy();
  }
}


/***/ }),

/***/ 8781:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

var fs = __nccwpck_require__(7147);
var zlib = __nccwpck_require__(9796);
var fd_slicer = __nccwpck_require__(5010);
var crc32 = __nccwpck_require__(4794);
var util = __nccwpck_require__(3837);
var EventEmitter = (__nccwpck_require__(2361).EventEmitter);
var Transform = (__nccwpck_require__(2781).Transform);
var PassThrough = (__nccwpck_require__(2781).PassThrough);
var Writable = (__nccwpck_require__(2781).Writable);

exports.open = open;
exports.fromFd = fromFd;
exports.fromBuffer = fromBuffer;
exports.fromRandomAccessReader = fromRandomAccessReader;
exports.dosDateTimeToDate = dosDateTimeToDate;
exports.validateFileName = validateFileName;
exports.ZipFile = ZipFile;
exports.Entry = Entry;
exports.RandomAccessReader = RandomAccessReader;

function open(path, options, callback) {
  if (typeof options === "function") {
    callback = options;
    options = null;
  }
  if (options == null) options = {};
  if (options.autoClose == null) options.autoClose = true;
  if (options.lazyEntries == null) options.lazyEntries = false;
  if (options.decodeStrings == null) options.decodeStrings = true;
  if (options.validateEntrySizes == null) options.validateEntrySizes = true;
  if (options.strictFileNames == null) options.strictFileNames = false;
  if (callback == null) callback = defaultCallback;
  fs.open(path, "r", function(err, fd) {
    if (err) return callback(err);
    fromFd(fd, options, function(err, zipfile) {
      if (err) fs.close(fd, defaultCallback);
      callback(err, zipfile);
    });
  });
}

function fromFd(fd, options, callback) {
  if (typeof options === "function") {
    callback = options;
    options = null;
  }
  if (options == null) options = {};
  if (options.autoClose == null) options.autoClose = false;
  if (options.lazyEntries == null) options.lazyEntries = false;
  if (options.decodeStrings == null) options.decodeStrings = true;
  if (options.validateEntrySizes == null) options.validateEntrySizes = true;
  if (options.strictFileNames == null) options.strictFileNames = false;
  if (callback == null) callback = defaultCallback;
  fs.fstat(fd, function(err, stats) {
    if (err) return callback(err);
    var reader = fd_slicer.createFromFd(fd, {autoClose: true});
    fromRandomAccessReader(reader, stats.size, options, callback);
  });
}

function fromBuffer(buffer, options, callback) {
  if (typeof options === "function") {
    callback = options;
    options = null;
  }
  if (options == null) options = {};
  options.autoClose = false;
  if (options.lazyEntries == null) options.lazyEntries = false;
  if (options.decodeStrings == null) options.decodeStrings = true;
  if (options.validateEntrySizes == null) options.validateEntrySizes = true;
  if (options.strictFileNames == null) options.strictFileNames = false;
  // limit the max chunk size. see https://github.com/thejoshwolfe/yauzl/issues/87
  var reader = fd_slicer.createFromBuffer(buffer, {maxChunkSize: 0x10000});
  fromRandomAccessReader(reader, buffer.length, options, callback);
}

function fromRandomAccessReader(reader, totalSize, options, callback) {
  if (typeof options === "function") {
    callback = options;
    options = null;
  }
  if (options == null) options = {};
  if (options.autoClose == null) options.autoClose = true;
  if (options.lazyEntries == null) options.lazyEntries = false;
  if (options.decodeStrings == null) options.decodeStrings = true;
  var decodeStrings = !!options.decodeStrings;
  if (options.validateEntrySizes == null) options.validateEntrySizes = true;
  if (options.strictFileNames == null) options.strictFileNames = false;
  if (callback == null) callback = defaultCallback;
  if (typeof totalSize !== "number") throw new Error("expected totalSize parameter to be a number");
  if (totalSize > Number.MAX_SAFE_INTEGER) {
    throw new Error("zip file too large. only file sizes up to 2^52 are supported due to JavaScript's Number type being an IEEE 754 double.");
  }

  // the matching unref() call is in zipfile.close()
  reader.ref();

  // eocdr means End of Central Directory Record.
  // search backwards for the eocdr signature.
  // the last field of the eocdr is a variable-length comment.
  // the comment size is encoded in a 2-byte field in the eocdr, which we can't find without trudging backwards through the comment to find it.
  // as a consequence of this design decision, it's possible to have ambiguous zip file metadata if a coherent eocdr was in the comment.
  // we search backwards for a eocdr signature, and hope that whoever made the zip file was smart enough to forbid the eocdr signature in the comment.
  var eocdrWithoutCommentSize = 22;
  var maxCommentSize = 0xffff; // 2-byte size
  var bufferSize = Math.min(eocdrWithoutCommentSize + maxCommentSize, totalSize);
  var buffer = newBuffer(bufferSize);
  var bufferReadStart = totalSize - buffer.length;
  readAndAssertNoEof(reader, buffer, 0, bufferSize, bufferReadStart, function(err) {
    if (err) return callback(err);
    for (var i = bufferSize - eocdrWithoutCommentSize; i >= 0; i -= 1) {
      if (buffer.readUInt32LE(i) !== 0x06054b50) continue;
      // found eocdr
      var eocdrBuffer = buffer.slice(i);

      // 0 - End of central directory signature = 0x06054b50
      // 4 - Number of this disk
      var diskNumber = eocdrBuffer.readUInt16LE(4);
      if (diskNumber !== 0) {
        return callback(new Error("multi-disk zip files are not supported: found disk number: " + diskNumber));
      }
      // 6 - Disk where central directory starts
      // 8 - Number of central directory records on this disk
      // 10 - Total number of central directory records
      var entryCount = eocdrBuffer.readUInt16LE(10);
      // 12 - Size of central directory (bytes)
      // 16 - Offset of start of central directory, relative to start of archive
      var centralDirectoryOffset = eocdrBuffer.readUInt32LE(16);
      // 20 - Comment length
      var commentLength = eocdrBuffer.readUInt16LE(20);
      var expectedCommentLength = eocdrBuffer.length - eocdrWithoutCommentSize;
      if (commentLength !== expectedCommentLength) {
        return callback(new Error("invalid comment length. expected: " + expectedCommentLength + ". found: " + commentLength));
      }
      // 22 - Comment
      // the encoding is always cp437.
      var comment = decodeStrings ? decodeBuffer(eocdrBuffer, 22, eocdrBuffer.length, false)
                                  : eocdrBuffer.slice(22);

      if (!(entryCount === 0xffff || centralDirectoryOffset === 0xffffffff)) {
        return callback(null, new ZipFile(reader, centralDirectoryOffset, totalSize, entryCount, comment, options.autoClose, options.lazyEntries, decodeStrings, options.validateEntrySizes, options.strictFileNames));
      }

      // ZIP64 format

      // ZIP64 Zip64 end of central directory locator
      var zip64EocdlBuffer = newBuffer(20);
      var zip64EocdlOffset = bufferReadStart + i - zip64EocdlBuffer.length;
      readAndAssertNoEof(reader, zip64EocdlBuffer, 0, zip64EocdlBuffer.length, zip64EocdlOffset, function(err) {
        if (err) return callback(err);

        // 0 - zip64 end of central dir locator signature = 0x07064b50
        if (zip64EocdlBuffer.readUInt32LE(0) !== 0x07064b50) {
          return callback(new Error("invalid zip64 end of central directory locator signature"));
        }
        // 4 - number of the disk with the start of the zip64 end of central directory
        // 8 - relative offset of the zip64 end of central directory record
        var zip64EocdrOffset = readUInt64LE(zip64EocdlBuffer, 8);
        // 16 - total number of disks

        // ZIP64 end of central directory record
        var zip64EocdrBuffer = newBuffer(56);
        readAndAssertNoEof(reader, zip64EocdrBuffer, 0, zip64EocdrBuffer.length, zip64EocdrOffset, function(err) {
          if (err) return callback(err);

          // 0 - zip64 end of central dir signature                           4 bytes  (0x06064b50)
          if (zip64EocdrBuffer.readUInt32LE(0) !== 0x06064b50) {
            return callback(new Error("invalid zip64 end of central directory record signature"));
          }
          // 4 - size of zip64 end of central directory record                8 bytes
          // 12 - version made by                                             2 bytes
          // 14 - version needed to extract                                   2 bytes
          // 16 - number of this disk                                         4 bytes
          // 20 - number of the disk with the start of the central directory  4 bytes
          // 24 - total number of entries in the central directory on this disk         8 bytes
          // 32 - total number of entries in the central directory            8 bytes
          entryCount = readUInt64LE(zip64EocdrBuffer, 32);
          // 40 - size of the central directory                               8 bytes
          // 48 - offset of start of central directory with respect to the starting disk number     8 bytes
          centralDirectoryOffset = readUInt64LE(zip64EocdrBuffer, 48);
          // 56 - zip64 extensible data sector                                (variable size)
          return callback(null, new ZipFile(reader, centralDirectoryOffset, totalSize, entryCount, comment, options.autoClose, options.lazyEntries, decodeStrings, options.validateEntrySizes, options.strictFileNames));
        });
      });
      return;
    }
    callback(new Error("end of central directory record signature not found"));
  });
}

util.inherits(ZipFile, EventEmitter);
function ZipFile(reader, centralDirectoryOffset, fileSize, entryCount, comment, autoClose, lazyEntries, decodeStrings, validateEntrySizes, strictFileNames) {
  var self = this;
  EventEmitter.call(self);
  self.reader = reader;
  // forward close events
  self.reader.on("error", function(err) {
    // error closing the fd
    emitError(self, err);
  });
  self.reader.once("close", function() {
    self.emit("close");
  });
  self.readEntryCursor = centralDirectoryOffset;
  self.fileSize = fileSize;
  self.entryCount = entryCount;
  self.comment = comment;
  self.entriesRead = 0;
  self.autoClose = !!autoClose;
  self.lazyEntries = !!lazyEntries;
  self.decodeStrings = !!decodeStrings;
  self.validateEntrySizes = !!validateEntrySizes;
  self.strictFileNames = !!strictFileNames;
  self.isOpen = true;
  self.emittedError = false;

  if (!self.lazyEntries) self._readEntry();
}
ZipFile.prototype.close = function() {
  if (!this.isOpen) return;
  this.isOpen = false;
  this.reader.unref();
};

function emitErrorAndAutoClose(self, err) {
  if (self.autoClose) self.close();
  emitError(self, err);
}
function emitError(self, err) {
  if (self.emittedError) return;
  self.emittedError = true;
  self.emit("error", err);
}

ZipFile.prototype.readEntry = function() {
  if (!this.lazyEntries) throw new Error("readEntry() called without lazyEntries:true");
  this._readEntry();
};
ZipFile.prototype._readEntry = function() {
  var self = this;
  if (self.entryCount === self.entriesRead) {
    // done with metadata
    setImmediate(function() {
      if (self.autoClose) self.close();
      if (self.emittedError) return;
      self.emit("end");
    });
    return;
  }
  if (self.emittedError) return;
  var buffer = newBuffer(46);
  readAndAssertNoEof(self.reader, buffer, 0, buffer.length, self.readEntryCursor, function(err) {
    if (err) return emitErrorAndAutoClose(self, err);
    if (self.emittedError) return;
    var entry = new Entry();
    // 0 - Central directory file header signature
    var signature = buffer.readUInt32LE(0);
    if (signature !== 0x02014b50) return emitErrorAndAutoClose(self, new Error("invalid central directory file header signature: 0x" + signature.toString(16)));
    // 4 - Version made by
    entry.versionMadeBy = buffer.readUInt16LE(4);
    // 6 - Version needed to extract (minimum)
    entry.versionNeededToExtract = buffer.readUInt16LE(6);
    // 8 - General purpose bit flag
    entry.generalPurposeBitFlag = buffer.readUInt16LE(8);
    // 10 - Compression method
    entry.compressionMethod = buffer.readUInt16LE(10);
    // 12 - File last modification time
    entry.lastModFileTime = buffer.readUInt16LE(12);
    // 14 - File last modification date
    entry.lastModFileDate = buffer.readUInt16LE(14);
    // 16 - CRC-32
    entry.crc32 = buffer.readUInt32LE(16);
    // 20 - Compressed size
    entry.compressedSize = buffer.readUInt32LE(20);
    // 24 - Uncompressed size
    entry.uncompressedSize = buffer.readUInt32LE(24);
    // 28 - File name length (n)
    entry.fileNameLength = buffer.readUInt16LE(28);
    // 30 - Extra field length (m)
    entry.extraFieldLength = buffer.readUInt16LE(30);
    // 32 - File comment length (k)
    entry.fileCommentLength = buffer.readUInt16LE(32);
    // 34 - Disk number where file starts
    // 36 - Internal file attributes
    entry.internalFileAttributes = buffer.readUInt16LE(36);
    // 38 - External file attributes
    entry.externalFileAttributes = buffer.readUInt32LE(38);
    // 42 - Relative offset of local file header
    entry.relativeOffsetOfLocalHeader = buffer.readUInt32LE(42);

    if (entry.generalPurposeBitFlag & 0x40) return emitErrorAndAutoClose(self, new Error("strong encryption is not supported"));

    self.readEntryCursor += 46;

    buffer = newBuffer(entry.fileNameLength + entry.extraFieldLength + entry.fileCommentLength);
    readAndAssertNoEof(self.reader, buffer, 0, buffer.length, self.readEntryCursor, function(err) {
      if (err) return emitErrorAndAutoClose(self, err);
      if (self.emittedError) return;
      // 46 - File name
      var isUtf8 = (entry.generalPurposeBitFlag & 0x800) !== 0;
      entry.fileName = self.decodeStrings ? decodeBuffer(buffer, 0, entry.fileNameLength, isUtf8)
                                          : buffer.slice(0, entry.fileNameLength);

      // 46+n - Extra field
      var fileCommentStart = entry.fileNameLength + entry.extraFieldLength;
      var extraFieldBuffer = buffer.slice(entry.fileNameLength, fileCommentStart);
      entry.extraFields = [];
      var i = 0;
      while (i < extraFieldBuffer.length - 3) {
        var headerId = extraFieldBuffer.readUInt16LE(i + 0);
        var dataSize = extraFieldBuffer.readUInt16LE(i + 2);
        var dataStart = i + 4;
        var dataEnd = dataStart + dataSize;
        if (dataEnd > extraFieldBuffer.length) return emitErrorAndAutoClose(self, new Error("extra field length exceeds extra field buffer size"));
        var dataBuffer = newBuffer(dataSize);
        extraFieldBuffer.copy(dataBuffer, 0, dataStart, dataEnd);
        entry.extraFields.push({
          id: headerId,
          data: dataBuffer,
        });
        i = dataEnd;
      }

      // 46+n+m - File comment
      entry.fileComment = self.decodeStrings ? decodeBuffer(buffer, fileCommentStart, fileCommentStart + entry.fileCommentLength, isUtf8)
                                             : buffer.slice(fileCommentStart, fileCommentStart + entry.fileCommentLength);
      // compatibility hack for https://github.com/thejoshwolfe/yauzl/issues/47
      entry.comment = entry.fileComment;

      self.readEntryCursor += buffer.length;
      self.entriesRead += 1;

      if (entry.uncompressedSize            === 0xffffffff ||
          entry.compressedSize              === 0xffffffff ||
          entry.relativeOffsetOfLocalHeader === 0xffffffff) {
        // ZIP64 format
        // find the Zip64 Extended Information Extra Field
        var zip64EiefBuffer = null;
        for (var i = 0; i < entry.extraFields.length; i++) {
          var extraField = entry.extraFields[i];
          if (extraField.id === 0x0001) {
            zip64EiefBuffer = extraField.data;
            break;
          }
        }
        if (zip64EiefBuffer == null) {
          return emitErrorAndAutoClose(self, new Error("expected zip64 extended information extra field"));
        }
        var index = 0;
        // 0 - Original Size          8 bytes
        if (entry.uncompressedSize === 0xffffffff) {
          if (index + 8 > zip64EiefBuffer.length) {
            return emitErrorAndAutoClose(self, new Error("zip64 extended information extra field does not include uncompressed size"));
          }
          entry.uncompressedSize = readUInt64LE(zip64EiefBuffer, index);
          index += 8;
        }
        // 8 - Compressed Size        8 bytes
        if (entry.compressedSize === 0xffffffff) {
          if (index + 8 > zip64EiefBuffer.length) {
            return emitErrorAndAutoClose(self, new Error("zip64 extended information extra field does not include compressed size"));
          }
          entry.compressedSize = readUInt64LE(zip64EiefBuffer, index);
          index += 8;
        }
        // 16 - Relative Header Offset 8 bytes
        if (entry.relativeOffsetOfLocalHeader === 0xffffffff) {
          if (index + 8 > zip64EiefBuffer.length) {
            return emitErrorAndAutoClose(self, new Error("zip64 extended information extra field does not include relative header offset"));
          }
          entry.relativeOffsetOfLocalHeader = readUInt64LE(zip64EiefBuffer, index);
          index += 8;
        }
        // 24 - Disk Start Number      4 bytes
      }

      // check for Info-ZIP Unicode Path Extra Field (0x7075)
      // see https://github.com/thejoshwolfe/yauzl/issues/33
      if (self.decodeStrings) {
        for (var i = 0; i < entry.extraFields.length; i++) {
          var extraField = entry.extraFields[i];
          if (extraField.id === 0x7075) {
            if (extraField.data.length < 6) {
              // too short to be meaningful
              continue;
            }
            // Version       1 byte      version of this extra field, currently 1
            if (extraField.data.readUInt8(0) !== 1) {
              // > Changes may not be backward compatible so this extra
              // > field should not be used if the version is not recognized.
              continue;
            }
            // NameCRC32     4 bytes     File Name Field CRC32 Checksum
            var oldNameCrc32 = extraField.data.readUInt32LE(1);
            if (crc32.unsigned(buffer.slice(0, entry.fileNameLength)) !== oldNameCrc32) {
              // > If the CRC check fails, this UTF-8 Path Extra Field should be
              // > ignored and the File Name field in the header should be used instead.
              continue;
            }
            // UnicodeName   Variable    UTF-8 version of the entry File Name
            entry.fileName = decodeBuffer(extraField.data, 5, extraField.data.length, true);
            break;
          }
        }
      }

      // validate file size
      if (self.validateEntrySizes && entry.compressionMethod === 0) {
        var expectedCompressedSize = entry.uncompressedSize;
        if (entry.isEncrypted()) {
          // traditional encryption prefixes the file data with a header
          expectedCompressedSize += 12;
        }
        if (entry.compressedSize !== expectedCompressedSize) {
          var msg = "compressed/uncompressed size mismatch for stored file: " + entry.compressedSize + " != " + entry.uncompressedSize;
          return emitErrorAndAutoClose(self, new Error(msg));
        }
      }

      if (self.decodeStrings) {
        if (!self.strictFileNames) {
          // allow backslash
          entry.fileName = entry.fileName.replace(/\\/g, "/");
        }
        var errorMessage = validateFileName(entry.fileName, self.validateFileNameOptions);
        if (errorMessage != null) return emitErrorAndAutoClose(self, new Error(errorMessage));
      }
      self.emit("entry", entry);

      if (!self.lazyEntries) self._readEntry();
    });
  });
};

ZipFile.prototype.openReadStream = function(entry, options, callback) {
  var self = this;
  // parameter validation
  var relativeStart = 0;
  var relativeEnd = entry.compressedSize;
  if (callback == null) {
    callback = options;
    options = {};
  } else {
    // validate options that the caller has no excuse to get wrong
    if (options.decrypt != null) {
      if (!entry.isEncrypted()) {
        throw new Error("options.decrypt can only be specified for encrypted entries");
      }
      if (options.decrypt !== false) throw new Error("invalid options.decrypt value: " + options.decrypt);
      if (entry.isCompressed()) {
        if (options.decompress !== false) throw new Error("entry is encrypted and compressed, and options.decompress !== false");
      }
    }
    if (options.decompress != null) {
      if (!entry.isCompressed()) {
        throw new Error("options.decompress can only be specified for compressed entries");
      }
      if (!(options.decompress === false || options.decompress === true)) {
        throw new Error("invalid options.decompress value: " + options.decompress);
      }
    }
    if (options.start != null || options.end != null) {
      if (entry.isCompressed() && options.decompress !== false) {
        throw new Error("start/end range not allowed for compressed entry without options.decompress === false");
      }
      if (entry.isEncrypted() && options.decrypt !== false) {
        throw new Error("start/end range not allowed for encrypted entry without options.decrypt === false");
      }
    }
    if (options.start != null) {
      relativeStart = options.start;
      if (relativeStart < 0) throw new Error("options.start < 0");
      if (relativeStart > entry.compressedSize) throw new Error("options.start > entry.compressedSize");
    }
    if (options.end != null) {
      relativeEnd = options.end;
      if (relativeEnd < 0) throw new Error("options.end < 0");
      if (relativeEnd > entry.compressedSize) throw new Error("options.end > entry.compressedSize");
      if (relativeEnd < relativeStart) throw new Error("options.end < options.start");
    }
  }
  // any further errors can either be caused by the zipfile,
  // or were introduced in a minor version of yauzl,
  // so should be passed to the client rather than thrown.
  if (!self.isOpen) return callback(new Error("closed"));
  if (entry.isEncrypted()) {
    if (options.decrypt !== false) return callback(new Error("entry is encrypted, and options.decrypt !== false"));
  }
  // make sure we don't lose the fd before we open the actual read stream
  self.reader.ref();
  var buffer = newBuffer(30);
  readAndAssertNoEof(self.reader, buffer, 0, buffer.length, entry.relativeOffsetOfLocalHeader, function(err) {
    try {
      if (err) return callback(err);
      // 0 - Local file header signature = 0x04034b50
      var signature = buffer.readUInt32LE(0);
      if (signature !== 0x04034b50) {
        return callback(new Error("invalid local file header signature: 0x" + signature.toString(16)));
      }
      // all this should be redundant
      // 4 - Version needed to extract (minimum)
      // 6 - General purpose bit flag
      // 8 - Compression method
      // 10 - File last modification time
      // 12 - File last modification date
      // 14 - CRC-32
      // 18 - Compressed size
      // 22 - Uncompressed size
      // 26 - File name length (n)
      var fileNameLength = buffer.readUInt16LE(26);
      // 28 - Extra field length (m)
      var extraFieldLength = buffer.readUInt16LE(28);
      // 30 - File name
      // 30+n - Extra field
      var localFileHeaderEnd = entry.relativeOffsetOfLocalHeader + buffer.length + fileNameLength + extraFieldLength;
      var decompress;
      if (entry.compressionMethod === 0) {
        // 0 - The file is stored (no compression)
        decompress = false;
      } else if (entry.compressionMethod === 8) {
        // 8 - The file is Deflated
        decompress = options.decompress != null ? options.decompress : true;
      } else {
        return callback(new Error("unsupported compression method: " + entry.compressionMethod));
      }
      var fileDataStart = localFileHeaderEnd;
      var fileDataEnd = fileDataStart + entry.compressedSize;
      if (entry.compressedSize !== 0) {
        // bounds check now, because the read streams will probably not complain loud enough.
        // since we're dealing with an unsigned offset plus an unsigned size,
        // we only have 1 thing to check for.
        if (fileDataEnd > self.fileSize) {
          return callback(new Error("file data overflows file bounds: " +
              fileDataStart + " + " + entry.compressedSize + " > " + self.fileSize));
        }
      }
      var readStream = self.reader.createReadStream({
        start: fileDataStart + relativeStart,
        end: fileDataStart + relativeEnd,
      });
      var endpointStream = readStream;
      if (decompress) {
        var destroyed = false;
        var inflateFilter = zlib.createInflateRaw();
        readStream.on("error", function(err) {
          // setImmediate here because errors can be emitted during the first call to pipe()
          setImmediate(function() {
            if (!destroyed) inflateFilter.emit("error", err);
          });
        });
        readStream.pipe(inflateFilter);

        if (self.validateEntrySizes) {
          endpointStream = new AssertByteCountStream(entry.uncompressedSize);
          inflateFilter.on("error", function(err) {
            // forward zlib errors to the client-visible stream
            setImmediate(function() {
              if (!destroyed) endpointStream.emit("error", err);
            });
          });
          inflateFilter.pipe(endpointStream);
        } else {
          // the zlib filter is the client-visible stream
          endpointStream = inflateFilter;
        }
        // this is part of yauzl's API, so implement this function on the client-visible stream
        endpointStream.destroy = function() {
          destroyed = true;
          if (inflateFilter !== endpointStream) inflateFilter.unpipe(endpointStream);
          readStream.unpipe(inflateFilter);
          // TODO: the inflateFilter may cause a memory leak. see Issue #27.
          readStream.destroy();
        };
      }
      callback(null, endpointStream);
    } finally {
      self.reader.unref();
    }
  });
};

function Entry() {
}
Entry.prototype.getLastModDate = function() {
  return dosDateTimeToDate(this.lastModFileDate, this.lastModFileTime);
};
Entry.prototype.isEncrypted = function() {
  return (this.generalPurposeBitFlag & 0x1) !== 0;
};
Entry.prototype.isCompressed = function() {
  return this.compressionMethod === 8;
};

function dosDateTimeToDate(date, time) {
  var day = date & 0x1f; // 1-31
  var month = (date >> 5 & 0xf) - 1; // 1-12, 0-11
  var year = (date >> 9 & 0x7f) + 1980; // 0-128, 1980-2108

  var millisecond = 0;
  var second = (time & 0x1f) * 2; // 0-29, 0-58 (even numbers)
  var minute = time >> 5 & 0x3f; // 0-59
  var hour = time >> 11 & 0x1f; // 0-23

  return new Date(year, month, day, hour, minute, second, millisecond);
}

function validateFileName(fileName) {
  if (fileName.indexOf("\\") !== -1) {
    return "invalid characters in fileName: " + fileName;
  }
  if (/^[a-zA-Z]:/.test(fileName) || /^\//.test(fileName)) {
    return "absolute path: " + fileName;
  }
  if (fileName.split("/").indexOf("..") !== -1) {
    return "invalid relative path: " + fileName;
  }
  // all good
  return null;
}

function readAndAssertNoEof(reader, buffer, offset, length, position, callback) {
  if (length === 0) {
    // fs.read will throw an out-of-bounds error if you try to read 0 bytes from a 0 byte file
    return setImmediate(function() { callback(null, newBuffer(0)); });
  }
  reader.read(buffer, offset, length, position, function(err, bytesRead) {
    if (err) return callback(err);
    if (bytesRead < length) {
      return callback(new Error("unexpected EOF"));
    }
    callback();
  });
}

util.inherits(AssertByteCountStream, Transform);
function AssertByteCountStream(byteCount) {
  Transform.call(this);
  this.actualByteCount = 0;
  this.expectedByteCount = byteCount;
}
AssertByteCountStream.prototype._transform = function(chunk, encoding, cb) {
  this.actualByteCount += chunk.length;
  if (this.actualByteCount > this.expectedByteCount) {
    var msg = "too many bytes in the stream. expected " + this.expectedByteCount + ". got at least " + this.actualByteCount;
    return cb(new Error(msg));
  }
  cb(null, chunk);
};
AssertByteCountStream.prototype._flush = function(cb) {
  if (this.actualByteCount < this.expectedByteCount) {
    var msg = "not enough bytes in the stream. expected " + this.expectedByteCount + ". got only " + this.actualByteCount;
    return cb(new Error(msg));
  }
  cb();
};

util.inherits(RandomAccessReader, EventEmitter);
function RandomAccessReader() {
  EventEmitter.call(this);
  this.refCount = 0;
}
RandomAccessReader.prototype.ref = function() {
  this.refCount += 1;
};
RandomAccessReader.prototype.unref = function() {
  var self = this;
  self.refCount -= 1;

  if (self.refCount > 0) return;
  if (self.refCount < 0) throw new Error("invalid unref");

  self.close(onCloseDone);

  function onCloseDone(err) {
    if (err) return self.emit('error', err);
    self.emit('close');
  }
};
RandomAccessReader.prototype.createReadStream = function(options) {
  var start = options.start;
  var end = options.end;
  if (start === end) {
    var emptyStream = new PassThrough();
    setImmediate(function() {
      emptyStream.end();
    });
    return emptyStream;
  }
  var stream = this._readStreamForRange(start, end);

  var destroyed = false;
  var refUnrefFilter = new RefUnrefFilter(this);
  stream.on("error", function(err) {
    setImmediate(function() {
      if (!destroyed) refUnrefFilter.emit("error", err);
    });
  });
  refUnrefFilter.destroy = function() {
    stream.unpipe(refUnrefFilter);
    refUnrefFilter.unref();
    stream.destroy();
  };

  var byteCounter = new AssertByteCountStream(end - start);
  refUnrefFilter.on("error", function(err) {
    setImmediate(function() {
      if (!destroyed) byteCounter.emit("error", err);
    });
  });
  byteCounter.destroy = function() {
    destroyed = true;
    refUnrefFilter.unpipe(byteCounter);
    refUnrefFilter.destroy();
  };

  return stream.pipe(refUnrefFilter).pipe(byteCounter);
};
RandomAccessReader.prototype._readStreamForRange = function(start, end) {
  throw new Error("not implemented");
};
RandomAccessReader.prototype.read = function(buffer, offset, length, position, callback) {
  var readStream = this.createReadStream({start: position, end: position + length});
  var writeStream = new Writable();
  var written = 0;
  writeStream._write = function(chunk, encoding, cb) {
    chunk.copy(buffer, offset + written, 0, chunk.length);
    written += chunk.length;
    cb();
  };
  writeStream.on("finish", callback);
  readStream.on("error", function(error) {
    callback(error);
  });
  readStream.pipe(writeStream);
};
RandomAccessReader.prototype.close = function(callback) {
  setImmediate(callback);
};

util.inherits(RefUnrefFilter, PassThrough);
function RefUnrefFilter(context) {
  PassThrough.call(this);
  this.context = context;
  this.context.ref();
  this.unreffedYet = false;
}
RefUnrefFilter.prototype._flush = function(cb) {
  this.unref();
  cb();
};
RefUnrefFilter.prototype.unref = function(cb) {
  if (this.unreffedYet) return;
  this.unreffedYet = true;
  this.context.unref();
};

var cp437 = '\u0000☺☻♥♦♣♠•◘○◙♂♀♪♫☼►◄↕‼¶§▬↨↑↓→←∟↔▲▼ !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~⌂ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ ';
function decodeBuffer(buffer, start, end, isUtf8) {
  if (isUtf8) {
    return buffer.toString("utf8", start, end);
  } else {
    var result = "";
    for (var i = start; i < end; i++) {
      result += cp437[buffer[i]];
    }
    return result;
  }
}

function readUInt64LE(buffer, offset) {
  // there is no native function for this, because we can't actually store 64-bit integers precisely.
  // after 53 bits, JavaScript's Number type (IEEE 754 double) can't store individual integers anymore.
  // but since 53 bits is a whole lot more than 32 bits, we do our best anyway.
  var lower32 = buffer.readUInt32LE(offset);
  var upper32 = buffer.readUInt32LE(offset + 4);
  // we can't use bitshifting here, because JavaScript bitshifting only works on 32-bit integers.
  return upper32 * 0x100000000 + lower32;
  // as long as we're bounds checking the result of this function against the total file size,
  // we'll catch any overflow errors, because we already made sure the total file size was within reason.
}

// Node 10 deprecated new Buffer().
var newBuffer;
if (typeof Buffer.allocUnsafe === "function") {
  newBuffer = function(len) {
    return Buffer.allocUnsafe(len);
  };
} else {
  newBuffer = function(len) {
    return new Buffer(len);
  };
}

function defaultCallback(err) {
  if (err) throw err;
}


/***/ }),

/***/ 1269:
/***/ ((module) => {

module.exports = eval("require")("bufferutil");


/***/ }),

/***/ 132:
/***/ ((module) => {

module.exports = eval("require")("supports-color");


/***/ }),

/***/ 4592:
/***/ ((module) => {

module.exports = eval("require")("utf-8-validate");


/***/ }),

/***/ 6141:
/***/ ((module) => {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(() => {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = () => ([]);
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = 6141;
module.exports = webpackEmptyAsyncContext;

/***/ }),

/***/ 9491:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("assert");

/***/ }),

/***/ 4300:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("buffer");

/***/ }),

/***/ 2081:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("child_process");

/***/ }),

/***/ 2057:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("constants");

/***/ }),

/***/ 6113:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("crypto");

/***/ }),

/***/ 3639:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("domain");

/***/ }),

/***/ 2361:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("events");

/***/ }),

/***/ 7147:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("fs");

/***/ }),

/***/ 3685:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("http");

/***/ }),

/***/ 5687:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("https");

/***/ }),

/***/ 1808:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("net");

/***/ }),

/***/ 2037:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("os");

/***/ }),

/***/ 1017:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("path");

/***/ }),

/***/ 5477:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("punycode");

/***/ }),

/***/ 2781:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("stream");

/***/ }),

/***/ 1576:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("string_decoder");

/***/ }),

/***/ 4404:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("tls");

/***/ }),

/***/ 6224:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("tty");

/***/ }),

/***/ 7310:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("url");

/***/ }),

/***/ 3837:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("util");

/***/ }),

/***/ 9796:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("zlib");

/***/ }),

/***/ 6468:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "A": () => (/* binding */ Browser),
/* harmony export */   "k": () => (/* binding */ WEB_PERMISSION_TO_PROTOCOL_PERMISSION)
/* harmony export */ });
/* harmony import */ var _common_EventEmitter_js__WEBPACK_IMPORTED_MODULE_0__ = __nccwpck_require__(8856);
/**
 * Copyright 2017 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @internal
 */
const WEB_PERMISSION_TO_PROTOCOL_PERMISSION = new Map([
    ['geolocation', 'geolocation'],
    ['midi', 'midi'],
    ['notifications', 'notifications'],
    // TODO: push isn't a valid type?
    // ['push', 'push'],
    ['camera', 'videoCapture'],
    ['microphone', 'audioCapture'],
    ['background-sync', 'backgroundSync'],
    ['ambient-light-sensor', 'sensors'],
    ['accelerometer', 'sensors'],
    ['gyroscope', 'sensors'],
    ['magnetometer', 'sensors'],
    ['accessibility-events', 'accessibilityEvents'],
    ['clipboard-read', 'clipboardReadWrite'],
    ['clipboard-write', 'clipboardReadWrite'],
    ['payment-handler', 'paymentHandler'],
    ['persistent-storage', 'durableStorage'],
    ['idle-detection', 'idleDetection'],
    // chrome-specific permissions we have.
    ['midi-sysex', 'midiSysex'],
]);
/**
 * A Browser is created when Puppeteer connects to a Chromium instance, either through
 * {@link PuppeteerNode.launch} or {@link Puppeteer.connect}.
 *
 * @remarks
 *
 * The Browser class extends from Puppeteer's {@link EventEmitter} class and will
 * emit various events which are documented in the {@link BrowserEmittedEvents} enum.
 *
 * @example
 * An example of using a {@link Browser} to create a {@link Page}:
 *
 * ```ts
 * import puppeteer from 'puppeteer';
 *
 * (async () => {
 *   const browser = await puppeteer.launch();
 *   const page = await browser.newPage();
 *   await page.goto('https://example.com');
 *   await browser.close();
 * })();
 * ```
 *
 * @example
 * An example of disconnecting from and reconnecting to a {@link Browser}:
 *
 * ```ts
 * import puppeteer from 'puppeteer';
 *
 * (async () => {
 *   const browser = await puppeteer.launch();
 *   // Store the endpoint to be able to reconnect to Chromium
 *   const browserWSEndpoint = browser.wsEndpoint();
 *   // Disconnect puppeteer from Chromium
 *   browser.disconnect();
 *
 *   // Use the endpoint to reestablish a connection
 *   const browser2 = await puppeteer.connect({browserWSEndpoint});
 *   // Close Chromium
 *   await browser2.close();
 * })();
 * ```
 *
 * @public
 */
class Browser extends _common_EventEmitter_js__WEBPACK_IMPORTED_MODULE_0__/* .EventEmitter */ .v {
    /**
     * @internal
     */
    constructor() {
        super();
    }
    /**
     * @internal
     */
    _attach() {
        throw new Error('Not implemented');
    }
    /**
     * @internal
     */
    _detach() {
        throw new Error('Not implemented');
    }
    /**
     * @internal
     */
    get _targets() {
        throw new Error('Not implemented');
    }
    /**
     * The spawned browser process. Returns `null` if the browser instance was created with
     * {@link Puppeteer.connect}.
     */
    process() {
        throw new Error('Not implemented');
    }
    /**
     * @internal
     */
    _getIsPageTargetCallback() {
        throw new Error('Not implemented');
    }
    createIncognitoBrowserContext() {
        throw new Error('Not implemented');
    }
    /**
     * Returns an array of all open browser contexts. In a newly created browser, this will
     * return a single instance of {@link BrowserContext}.
     */
    browserContexts() {
        throw new Error('Not implemented');
    }
    /**
     * Returns the default browser context. The default browser context cannot be closed.
     */
    defaultBrowserContext() {
        throw new Error('Not implemented');
    }
    _disposeContext() {
        throw new Error('Not implemented');
    }
    /**
     * The browser websocket endpoint which can be used as an argument to
     * {@link Puppeteer.connect}.
     *
     * @returns The Browser websocket url.
     *
     * @remarks
     *
     * The format is `ws://${host}:${port}/devtools/browser/<id>`.
     *
     * You can find the `webSocketDebuggerUrl` from `http://${host}:${port}/json/version`.
     * Learn more about the
     * {@link https://chromedevtools.github.io/devtools-protocol | devtools protocol} and
     * the {@link
     * https://chromedevtools.github.io/devtools-protocol/#how-do-i-access-the-browser-target
     * | browser endpoint}.
     */
    wsEndpoint() {
        throw new Error('Not implemented');
    }
    /**
     * Promise which resolves to a new {@link Page} object. The Page is created in
     * a default browser context.
     */
    newPage() {
        throw new Error('Not implemented');
    }
    _createPageInContext() {
        throw new Error('Not implemented');
    }
    /**
     * All active targets inside the Browser. In case of multiple browser contexts, returns
     * an array with all the targets in all browser contexts.
     */
    targets() {
        throw new Error('Not implemented');
    }
    /**
     * The target associated with the browser.
     */
    target() {
        throw new Error('Not implemented');
    }
    waitForTarget() {
        throw new Error('Not implemented');
    }
    /**
     * An array of all open pages inside the Browser.
     *
     * @remarks
     *
     * In case of multiple browser contexts, returns an array with all the pages in all
     * browser contexts. Non-visible pages, such as `"background_page"`, will not be listed
     * here. You can find them using {@link Target.page}.
     */
    pages() {
        throw new Error('Not implemented');
    }
    /**
     * A string representing the browser name and version.
     *
     * @remarks
     *
     * For headless Chromium, this is similar to `HeadlessChrome/61.0.3153.0`. For
     * non-headless, this is similar to `Chrome/61.0.3153.0`.
     *
     * The format of browser.version() might change with future releases of Chromium.
     */
    version() {
        throw new Error('Not implemented');
    }
    /**
     * The browser's original user agent. Pages can override the browser user agent with
     * {@link Page.setUserAgent}.
     */
    userAgent() {
        throw new Error('Not implemented');
    }
    /**
     * Closes Chromium and all of its pages (if any were opened). The {@link Browser} object
     * itself is considered to be disposed and cannot be used anymore.
     */
    close() {
        throw new Error('Not implemented');
    }
    /**
     * Disconnects Puppeteer from the browser, but leaves the Chromium process running.
     * After calling `disconnect`, the {@link Browser} object is considered disposed and
     * cannot be used anymore.
     */
    disconnect() {
        throw new Error('Not implemented');
    }
    /**
     * Indicates that the browser is connected.
     */
    isConnected() {
        throw new Error('Not implemented');
    }
}
//# sourceMappingURL=Browser.js.map

/***/ }),

/***/ 5786:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "_": () => (/* binding */ BrowserContext)
/* harmony export */ });
/* harmony import */ var _common_EventEmitter_js__WEBPACK_IMPORTED_MODULE_0__ = __nccwpck_require__(8856);
/**
 * Copyright 2017 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * BrowserContexts provide a way to operate multiple independent browser
 * sessions. When a browser is launched, it has a single BrowserContext used by
 * default. The method {@link Browser.newPage | Browser.newPage} creates a page
 * in the default browser context.
 *
 * @remarks
 *
 * The Browser class extends from Puppeteer's {@link EventEmitter} class and
 * will emit various events which are documented in the
 * {@link BrowserContextEmittedEvents} enum.
 *
 * If a page opens another page, e.g. with a `window.open` call, the popup will
 * belong to the parent page's browser context.
 *
 * Puppeteer allows creation of "incognito" browser contexts with
 * {@link Browser.createIncognitoBrowserContext | Browser.createIncognitoBrowserContext}
 * method. "Incognito" browser contexts don't write any browsing data to disk.
 *
 * @example
 *
 * ```ts
 * // Create a new incognito browser context
 * const context = await browser.createIncognitoBrowserContext();
 * // Create a new page inside context.
 * const page = await context.newPage();
 * // ... do stuff with page ...
 * await page.goto('https://example.com');
 * // Dispose context once it's no longer needed.
 * await context.close();
 * ```
 *
 * @public
 */
class BrowserContext extends _common_EventEmitter_js__WEBPACK_IMPORTED_MODULE_0__/* .EventEmitter */ .v {
    /**
     * @internal
     */
    constructor() {
        super();
    }
    /**
     * An array of all active targets inside the browser context.
     */
    targets() {
        throw new Error('Not implemented');
    }
    waitForTarget() {
        throw new Error('Not implemented');
    }
    /**
     * An array of all pages inside the browser context.
     *
     * @returns Promise which resolves to an array of all open pages.
     * Non visible pages, such as `"background_page"`, will not be listed here.
     * You can find them using {@link Target.page | the target page}.
     */
    pages() {
        throw new Error('Not implemented');
    }
    /**
     * Returns whether BrowserContext is incognito.
     * The default browser context is the only non-incognito browser context.
     *
     * @remarks
     * The default browser context cannot be closed.
     */
    isIncognito() {
        throw new Error('Not implemented');
    }
    overridePermissions() {
        throw new Error('Not implemented');
    }
    /**
     * Clears all permission overrides for the browser context.
     *
     * @example
     *
     * ```ts
     * const context = browser.defaultBrowserContext();
     * context.overridePermissions('https://example.com', ['clipboard-read']);
     * // do stuff ..
     * context.clearPermissionOverrides();
     * ```
     */
    clearPermissionOverrides() {
        throw new Error('Not implemented');
    }
    /**
     * Creates a new page in the browser context.
     */
    newPage() {
        throw new Error('Not implemented');
    }
    /**
     * The browser this browser context belongs to.
     */
    browser() {
        throw new Error('Not implemented');
    }
    /**
     * Closes the browser context. All the targets that belong to the browser context
     * will be closed.
     *
     * @remarks
     * Only incognito browser contexts can be closed.
     */
    close() {
        throw new Error('Not implemented');
    }
    get id() {
        return undefined;
    }
}
//# sourceMappingURL=BrowserContext.js.map

/***/ }),

/***/ 2559:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "E": () => (/* binding */ ElementHandle)
/* harmony export */ });
/* harmony import */ var _JSHandle_js__WEBPACK_IMPORTED_MODULE_0__ = __nccwpck_require__(2165);
/**
 * Copyright 2023 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * ElementHandle represents an in-page DOM element.
 *
 * @remarks
 * ElementHandles can be created with the {@link Page.$} method.
 *
 * ```ts
 * import puppeteer from 'puppeteer';
 *
 * (async () => {
 *   const browser = await puppeteer.launch();
 *   const page = await browser.newPage();
 *   await page.goto('https://example.com');
 *   const hrefElement = await page.$('a');
 *   await hrefElement.click();
 *   // ...
 * })();
 * ```
 *
 * ElementHandle prevents the DOM element from being garbage-collected unless the
 * handle is {@link JSHandle.dispose | disposed}. ElementHandles are auto-disposed
 * when their origin frame gets navigated.
 *
 * ElementHandle instances can be used as arguments in {@link Page.$eval} and
 * {@link Page.evaluate} methods.
 *
 * If you're using TypeScript, ElementHandle takes a generic argument that
 * denotes the type of element the handle is holding within. For example, if you
 * have a handle to a `<select>` element, you can type it as
 * `ElementHandle<HTMLSelectElement>` and you get some nicer type checks.
 *
 * @public
 */
class ElementHandle extends _JSHandle_js__WEBPACK_IMPORTED_MODULE_0__/* .JSHandle */ .c {
    /**
     * @internal
     */
    constructor() {
        super();
    }
    /**
     * @internal
     */
    executionContext() {
        throw new Error('Not implemented');
    }
    /**
     * @internal
     */
    get client() {
        throw new Error('Not implemented');
    }
    get frame() {
        throw new Error('Not implemented');
    }
    async $() {
        throw new Error('Not implemented');
    }
    async $$() {
        throw new Error('Not implemented');
    }
    async $eval() {
        throw new Error('Not implemented');
    }
    async $$eval() {
        throw new Error('Not implemented');
    }
    async $x() {
        throw new Error('Not implemented');
    }
    async waitForSelector() {
        throw new Error('Not implemented');
    }
    async waitForXPath() {
        throw new Error('Not implemented');
    }
    async toElement() {
        throw new Error('Not implemented');
    }
    asElement() {
        return this;
    }
    /**
     * Resolves to the content frame for element handles referencing
     * iframe nodes, or null otherwise
     */
    async contentFrame() {
        throw new Error('Not implemented');
    }
    async clickablePoint() {
        throw new Error('Not implemented');
    }
    /**
     * This method scrolls element into view if needed, and then
     * uses {@link Page.mouse} to hover over the center of the element.
     * If the element is detached from DOM, the method throws an error.
     */
    async hover() {
        throw new Error('Not implemented');
    }
    async click() {
        throw new Error('Not implemented');
    }
    async drag() {
        throw new Error('Not implemented');
    }
    async dragEnter() {
        throw new Error('Not implemented');
    }
    async dragOver() {
        throw new Error('Not implemented');
    }
    async drop() {
        throw new Error('Not implemented');
    }
    async dragAndDrop() {
        throw new Error('Not implemented');
    }
    async select() {
        throw new Error('Not implemented');
    }
    async uploadFile() {
        throw new Error('Not implemented');
    }
    /**
     * This method scrolls element into view if needed, and then uses
     * {@link Touchscreen.tap} to tap in the center of the element.
     * If the element is detached from DOM, the method throws an error.
     */
    async tap() {
        throw new Error('Not implemented');
    }
    async touchStart() {
        throw new Error('Not implemented');
    }
    async touchMove() {
        throw new Error('Not implemented');
    }
    async touchEnd() {
        throw new Error('Not implemented');
    }
    /**
     * Calls {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus | focus} on the element.
     */
    async focus() {
        throw new Error('Not implemented');
    }
    async type() {
        throw new Error('Not implemented');
    }
    async press() {
        throw new Error('Not implemented');
    }
    /**
     * This method returns the bounding box of the element (relative to the main frame),
     * or `null` if the element is not visible.
     */
    async boundingBox() {
        throw new Error('Not implemented');
    }
    /**
     * This method returns boxes of the element, or `null` if the element is not visible.
     *
     * @remarks
     *
     * Boxes are represented as an array of points;
     * Each Point is an object `{x, y}`. Box points are sorted clock-wise.
     */
    async boxModel() {
        throw new Error('Not implemented');
    }
    async screenshot() {
        throw new Error('Not implemented');
    }
    async isIntersectingViewport() {
        throw new Error('Not implemented');
    }
}
//# sourceMappingURL=ElementHandle.js.map

/***/ }),

/***/ 2165:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "c": () => (/* binding */ JSHandle)
/* harmony export */ });
/**
 * Copyright 2023 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Represents a reference to a JavaScript object. Instances can be created using
 * {@link Page.evaluateHandle}.
 *
 * Handles prevent the referenced JavaScript object from being garbage-collected
 * unless the handle is purposely {@link JSHandle.dispose | disposed}. JSHandles
 * are auto-disposed when their associated frame is navigated away or the parent
 * context gets destroyed.
 *
 * Handles can be used as arguments for any evaluation function such as
 * {@link Page.$eval}, {@link Page.evaluate}, and {@link Page.evaluateHandle}.
 * They are resolved to their referenced object.
 *
 * @example
 *
 * ```ts
 * const windowHandle = await page.evaluateHandle(() => window);
 * ```
 *
 * @public
 */
class JSHandle {
    /**
     * @internal
     */
    constructor() { }
    /**
     * @internal
     */
    get disposed() {
        throw new Error('Not implemented');
    }
    /**
     * @internal
     */
    executionContext() {
        throw new Error('Not implemented');
    }
    /**
     * @internal
     */
    get client() {
        throw new Error('Not implemented');
    }
    async evaluate() {
        throw new Error('Not implemented');
    }
    async evaluateHandle() {
        throw new Error('Not implemented');
    }
    async getProperty() {
        throw new Error('Not implemented');
    }
    /**
     * Gets a map of handles representing the properties of the current handle.
     *
     * @example
     *
     * ```ts
     * const listHandle = await page.evaluateHandle(() => document.body.children);
     * const properties = await listHandle.getProperties();
     * const children = [];
     * for (const property of properties.values()) {
     *   const element = property.asElement();
     *   if (element) {
     *     children.push(element);
     *   }
     * }
     * children; // holds elementHandles to all children of document.body
     * ```
     */
    async getProperties() {
        throw new Error('Not implemented');
    }
    /**
     * @returns A vanilla object representing the serializable portions of the
     * referenced object.
     * @throws Throws if the object cannot be serialized due to circularity.
     *
     * @remarks
     * If the object has a `toJSON` function, it **will not** be called.
     */
    async jsonValue() {
        throw new Error('Not implemented');
    }
    /**
     * @returns Either `null` or the handle itself if the handle is an
     * instance of {@link ElementHandle}.
     */
    asElement() {
        throw new Error('Not implemented');
    }
    /**
     * Releases the object referenced by the handle for garbage collection.
     */
    async dispose() {
        throw new Error('Not implemented');
    }
    /**
     * Returns a string representation of the JSHandle.
     *
     * @remarks
     * Useful during debugging.
     */
    toString() {
        throw new Error('Not implemented');
    }
    /**
     * Provides access to the
     * [Protocol.Runtime.RemoteObject](https://chromedevtools.github.io/devtools-protocol/tot/Runtime/#type-RemoteObject)
     */
    remoteObject() {
        throw new Error('Not implemented');
    }
}
//# sourceMappingURL=JSHandle.js.map

/***/ }),

/***/ 3297:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "T3": () => (/* binding */ Page)
/* harmony export */ });
/* unused harmony exports supportedMetrics, unitToPixels */
/* harmony import */ var _common_EventEmitter_js__WEBPACK_IMPORTED_MODULE_0__ = __nccwpck_require__(8856);
/**
 * Copyright 2017 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _Page_handlerMap;

/**
 * Page provides methods to interact with a single tab or
 * {@link https://developer.chrome.com/extensions/background_pages | extension background page}
 * in Chromium.
 *
 * :::note
 *
 * One Browser instance might have multiple Page instances.
 *
 * :::
 *
 * @example
 * This example creates a page, navigates it to a URL, and then saves a screenshot:
 *
 * ```ts
 * import puppeteer from 'puppeteer';
 *
 * (async () => {
 *   const browser = await puppeteer.launch();
 *   const page = await browser.newPage();
 *   await page.goto('https://example.com');
 *   await page.screenshot({path: 'screenshot.png'});
 *   await browser.close();
 * })();
 * ```
 *
 * The Page class extends from Puppeteer's {@link EventEmitter} class and will
 * emit various events which are documented in the {@link PageEmittedEvents} enum.
 *
 * @example
 * This example logs a message for a single page `load` event:
 *
 * ```ts
 * page.once('load', () => console.log('Page loaded!'));
 * ```
 *
 * To unsubscribe from events use the {@link Page.off} method:
 *
 * ```ts
 * function logRequest(interceptedRequest) {
 *   console.log('A request was made:', interceptedRequest.url());
 * }
 * page.on('request', logRequest);
 * // Sometime later...
 * page.off('request', logRequest);
 * ```
 *
 * @public
 */
class Page extends _common_EventEmitter_js__WEBPACK_IMPORTED_MODULE_0__/* .EventEmitter */ .v {
    /**
     * @internal
     */
    constructor() {
        super();
        _Page_handlerMap.set(this, new WeakMap());
    }
    /**
     * @returns `true` if drag events are being intercepted, `false` otherwise.
     */
    isDragInterceptionEnabled() {
        throw new Error('Not implemented');
    }
    /**
     * @returns `true` if the page has JavaScript enabled, `false` otherwise.
     */
    isJavaScriptEnabled() {
        throw new Error('Not implemented');
    }
    /**
     * Listen to page events.
     *
     * :::note
     *
     * This method exists to define event typings and handle proper wireup of
     * cooperative request interception. Actual event listening and dispatching is
     * delegated to {@link EventEmitter}.
     *
     * :::
     */
    on(eventName, handler) {
        if (eventName === 'request') {
            const wrap = __classPrivateFieldGet(this, _Page_handlerMap, "f").get(handler) ||
                ((event) => {
                    event.enqueueInterceptAction(() => {
                        return handler(event);
                    });
                });
            __classPrivateFieldGet(this, _Page_handlerMap, "f").set(handler, wrap);
            return super.on(eventName, wrap);
        }
        return super.on(eventName, handler);
    }
    once(eventName, handler) {
        // Note: this method only exists to define the types; we delegate the impl
        // to EventEmitter.
        return super.once(eventName, handler);
    }
    off(eventName, handler) {
        if (eventName === 'request') {
            handler = __classPrivateFieldGet(this, _Page_handlerMap, "f").get(handler) || handler;
        }
        return super.off(eventName, handler);
    }
    waitForFileChooser() {
        throw new Error('Not implemented');
    }
    async setGeolocation() {
        throw new Error('Not implemented');
    }
    /**
     * @returns A target this page was created from.
     */
    target() {
        throw new Error('Not implemented');
    }
    /**
     * Get the browser the page belongs to.
     */
    browser() {
        throw new Error('Not implemented');
    }
    /**
     * Get the browser context that the page belongs to.
     */
    browserContext() {
        throw new Error('Not implemented');
    }
    /**
     * @returns The page's main frame.
     *
     * @remarks
     * Page is guaranteed to have a main frame which persists during navigations.
     */
    mainFrame() {
        throw new Error('Not implemented');
    }
    get keyboard() {
        throw new Error('Not implemented');
    }
    get touchscreen() {
        throw new Error('Not implemented');
    }
    get coverage() {
        throw new Error('Not implemented');
    }
    get tracing() {
        throw new Error('Not implemented');
    }
    get accessibility() {
        throw new Error('Not implemented');
    }
    /**
     * @returns An array of all frames attached to the page.
     */
    frames() {
        throw new Error('Not implemented');
    }
    /**
     * @returns all of the dedicated {@link
     * https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API |
     * WebWorkers} associated with the page.
     *
     * @remarks
     * This does not contain ServiceWorkers
     */
    workers() {
        throw new Error('Not implemented');
    }
    async setRequestInterception() {
        throw new Error('Not implemented');
    }
    async setDragInterception() {
        throw new Error('Not implemented');
    }
    setOfflineMode() {
        throw new Error('Not implemented');
    }
    emulateNetworkConditions() {
        throw new Error('Not implemented');
    }
    setDefaultNavigationTimeout() {
        throw new Error('Not implemented');
    }
    setDefaultTimeout() {
        throw new Error('Not implemented');
    }
    /**
     * @returns Maximum time in milliseconds.
     */
    getDefaultTimeout() {
        throw new Error('Not implemented');
    }
    async $() {
        throw new Error('Not implemented');
    }
    async $$() {
        throw new Error('Not implemented');
    }
    async evaluateHandle() {
        throw new Error('Not implemented');
    }
    async queryObjects() {
        throw new Error('Not implemented');
    }
    async $eval() {
        throw new Error('Not implemented');
    }
    async $$eval() {
        throw new Error('Not implemented');
    }
    async $x() {
        throw new Error('Not implemented');
    }
    async cookies() {
        throw new Error('Not implemented');
    }
    async deleteCookie() {
        throw new Error('Not implemented');
    }
    async setCookie() {
        throw new Error('Not implemented');
    }
    async addScriptTag() {
        throw new Error('Not implemented');
    }
    async addStyleTag() {
        throw new Error('Not implemented');
    }
    async exposeFunction() {
        throw new Error('Not implemented');
    }
    async authenticate() {
        throw new Error('Not implemented');
    }
    async setExtraHTTPHeaders() {
        throw new Error('Not implemented');
    }
    async setUserAgent() {
        throw new Error('Not implemented');
    }
    /**
     * @returns Object containing metrics as key/value pairs.
     *
     * - `Timestamp` : The timestamp when the metrics sample was taken.
     *
     * - `Documents` : Number of documents in the page.
     *
     * - `Frames` : Number of frames in the page.
     *
     * - `JSEventListeners` : Number of events in the page.
     *
     * - `Nodes` : Number of DOM nodes in the page.
     *
     * - `LayoutCount` : Total number of full or partial page layout.
     *
     * - `RecalcStyleCount` : Total number of page style recalculations.
     *
     * - `LayoutDuration` : Combined durations of all page layouts.
     *
     * - `RecalcStyleDuration` : Combined duration of all page style
     *   recalculations.
     *
     * - `ScriptDuration` : Combined duration of JavaScript execution.
     *
     * - `TaskDuration` : Combined duration of all tasks performed by the browser.
     *
     * - `JSHeapUsedSize` : Used JavaScript heap size.
     *
     * - `JSHeapTotalSize` : Total JavaScript heap size.
     *
     * @remarks
     * All timestamps are in monotonic time: monotonically increasing time
     * in seconds since an arbitrary point in the past.
     */
    async metrics() {
        throw new Error('Not implemented');
    }
    /**
     *
     * @returns
     * @remarks Shortcut for
     * {@link Frame.url | page.mainFrame().url()}.
     */
    url() {
        throw new Error('Not implemented');
    }
    async content() {
        throw new Error('Not implemented');
    }
    async setContent() {
        throw new Error('Not implemented');
    }
    async goto() {
        throw new Error('Not implemented');
    }
    async reload() {
        throw new Error('Not implemented');
    }
    async waitForNavigation() {
        throw new Error('Not implemented');
    }
    async waitForRequest() {
        throw new Error('Not implemented');
    }
    async waitForResponse() {
        throw new Error('Not implemented');
    }
    async waitForNetworkIdle() {
        throw new Error('Not implemented');
    }
    async waitForFrame() {
        throw new Error('Not implemented');
    }
    async goBack() {
        throw new Error('Not implemented');
    }
    async goForward() {
        throw new Error('Not implemented');
    }
    /**
     * Brings page to front (activates tab).
     */
    async bringToFront() {
        throw new Error('Not implemented');
    }
    /**
     * Emulates a given device's metrics and user agent.
     *
     * To aid emulation, Puppeteer provides a list of known devices that can be
     * via {@link KnownDevices}.
     *
     * @remarks
     * This method is a shortcut for calling two methods:
     * {@link Page.setUserAgent} and {@link Page.setViewport}.
     *
     * @remarks
     * This method will resize the page. A lot of websites don't expect phones to
     * change size, so you should emulate before navigating to the page.
     *
     * @example
     *
     * ```ts
     * import {KnownDevices} from 'puppeteer';
     * const iPhone = KnownDevices['iPhone 6'];
     *
     * (async () => {
     *   const browser = await puppeteer.launch();
     *   const page = await browser.newPage();
     *   await page.emulate(iPhone);
     *   await page.goto('https://www.google.com');
     *   // other actions...
     *   await browser.close();
     * })();
     * ```
     */
    async emulate(device) {
        await Promise.all([
            this.setUserAgent(device.userAgent),
            this.setViewport(device.viewport),
        ]);
    }
    async setJavaScriptEnabled() {
        throw new Error('Not implemented');
    }
    async setBypassCSP() {
        throw new Error('Not implemented');
    }
    async emulateMediaType() {
        throw new Error('Not implemented');
    }
    async emulateCPUThrottling() {
        throw new Error('Not implemented');
    }
    async emulateMediaFeatures() {
        throw new Error('Not implemented');
    }
    async emulateTimezone() {
        throw new Error('Not implemented');
    }
    async emulateIdleState() {
        throw new Error('Not implemented');
    }
    async emulateVisionDeficiency() {
        throw new Error('Not implemented');
    }
    async setViewport() {
        throw new Error('Not implemented');
    }
    /**
     * @returns
     *
     * - `width`: page's width in pixels
     *
     * - `height`: page's height in pixels
     *
     * - `deviceScaleFactor`: Specify device scale factor (can be though of as
     *   dpr). Defaults to `1`.
     *
     * - `isMobile`: Whether the meta viewport tag is taken into account. Defaults
     *   to `false`.
     *
     * - `hasTouch`: Specifies if viewport supports touch events. Defaults to
     *   `false`.
     *
     * - `isLandScape`: Specifies if viewport is in landscape mode. Defaults to
     *   `false`.
     */
    viewport() {
        throw new Error('Not implemented');
    }
    async evaluate() {
        throw new Error('Not implemented');
    }
    async evaluateOnNewDocument() {
        throw new Error('Not implemented');
    }
    async setCacheEnabled() {
        throw new Error('Not implemented');
    }
    async screenshot() {
        throw new Error('Not implemented');
    }
    async createPDFStream() {
        throw new Error('Not implemented');
    }
    async pdf() {
        throw new Error('Not implemented');
    }
    /**
     * @returns The page's title
     * @remarks
     * Shortcut for {@link Frame.title | page.mainFrame().title()}.
     */
    async title() {
        throw new Error('Not implemented');
    }
    async close() {
        throw new Error('Not implemented');
    }
    /**
     * Indicates that the page has been closed.
     * @returns
     */
    isClosed() {
        throw new Error('Not implemented');
    }
    get mouse() {
        throw new Error('Not implemented');
    }
    click() {
        throw new Error('Not implemented');
    }
    focus() {
        throw new Error('Not implemented');
    }
    hover() {
        throw new Error('Not implemented');
    }
    select() {
        throw new Error('Not implemented');
    }
    tap() {
        throw new Error('Not implemented');
    }
    type() {
        throw new Error('Not implemented');
    }
    waitForTimeout() {
        throw new Error('Not implemented');
    }
    async waitForSelector() {
        throw new Error('Not implemented');
    }
    waitForXPath() {
        throw new Error('Not implemented');
    }
    waitForFunction() {
        throw new Error('Not implemented');
    }
}
_Page_handlerMap = new WeakMap();
/**
 * @internal
 */
const supportedMetrics = new Set([
    'Timestamp',
    'Documents',
    'Frames',
    'JSEventListeners',
    'Nodes',
    'LayoutCount',
    'RecalcStyleCount',
    'LayoutDuration',
    'RecalcStyleDuration',
    'ScriptDuration',
    'TaskDuration',
    'JSHeapUsedSize',
    'JSHeapTotalSize',
]);
/**
 * @internal
 */
const unitToPixels = {
    px: 1,
    in: 96,
    cm: 37.8,
    mm: 3.78,
};
//# sourceMappingURL=Page.js.map

/***/ }),

/***/ 3503:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "f": () => (/* binding */ ariaHandler)
/* harmony export */ });
/* harmony import */ var _util_assert_js__WEBPACK_IMPORTED_MODULE_1__ = __nccwpck_require__(5172);
/* harmony import */ var _IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_0__ = __nccwpck_require__(6356);
/**
 * Copyright 2020 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


async function queryAXTree(client, element, accessibleName, role) {
    const { nodes } = await client.send('Accessibility.queryAXTree', {
        objectId: element.remoteObject().objectId,
        accessibleName,
        role,
    });
    const filteredNodes = nodes.filter((node) => {
        return !node.role || node.role.value !== 'StaticText';
    });
    return filteredNodes;
}
const normalizeValue = (value) => {
    return value.replace(/ +/g, ' ').trim();
};
const knownAttributes = new Set(['name', 'role']);
const attributeRegexp = /\[\s*(?<attribute>\w+)\s*=\s*(?<quote>"|')(?<value>\\.|.*?(?=\k<quote>))\k<quote>\s*\]/g;
function isKnownAttribute(attribute) {
    return knownAttributes.has(attribute);
}
/**
 * The selectors consist of an accessible name to query for and optionally
 * further aria attributes on the form `[<attribute>=<value>]`.
 * Currently, we only support the `name` and `role` attribute.
 * The following examples showcase how the syntax works wrt. querying:
 *
 * - 'title[role="heading"]' queries for elements with name 'title' and role 'heading'.
 * - '[role="img"]' queries for elements with role 'img' and any name.
 * - 'label' queries for elements with name 'label' and any role.
 * - '[name=""][role="button"]' queries for elements with no name and role 'button'.
 */
function parseAriaSelector(selector) {
    const queryOptions = {};
    const defaultName = selector.replace(attributeRegexp, (_, attribute, _quote, value) => {
        attribute = attribute.trim();
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_1__/* .assert */ .h)(isKnownAttribute(attribute), `Unknown aria attribute "${attribute}" in selector`);
        queryOptions[attribute] = normalizeValue(value);
        return '';
    });
    if (defaultName && !queryOptions.name) {
        queryOptions.name = normalizeValue(defaultName);
    }
    return queryOptions;
}
const queryOneId = async (element, selector) => {
    const { name, role } = parseAriaSelector(selector);
    const res = await queryAXTree(element.client, element, name, role);
    if (!res[0] || !res[0].backendDOMNodeId) {
        return null;
    }
    return res[0].backendDOMNodeId;
};
const queryOne = async (element, selector) => {
    const id = await queryOneId(element, selector);
    if (!id) {
        return null;
    }
    return (await element.frame.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_0__/* .MAIN_WORLD */ .H].adoptBackendNode(id));
};
const waitFor = async (elementOrFrame, selector, options) => {
    let frame;
    let element;
    if ('isOOPFrame' in elementOrFrame) {
        frame = elementOrFrame;
    }
    else {
        frame = elementOrFrame.frame;
        element = await frame.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_0__/* .PUPPETEER_WORLD */ .R].adoptHandle(elementOrFrame);
    }
    const ariaQuerySelector = async (selector) => {
        const id = await queryOneId(element || (await frame.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_0__/* .PUPPETEER_WORLD */ .R].document()), selector);
        if (!id) {
            return null;
        }
        return (await frame.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_0__/* .PUPPETEER_WORLD */ .R].adoptBackendNode(id));
    };
    const result = await frame.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_0__/* .PUPPETEER_WORLD */ .R]._waitForSelectorInPage((_, selector) => {
        return globalThis.ariaQuerySelector(selector);
    }, element, selector, options, new Map([['ariaQuerySelector', ariaQuerySelector]]));
    if (element) {
        await element.dispose();
    }
    const handle = result === null || result === void 0 ? void 0 : result.asElement();
    if (!handle) {
        await (result === null || result === void 0 ? void 0 : result.dispose());
        return null;
    }
    return handle.frame.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_0__/* .MAIN_WORLD */ .H].transferHandle(handle);
};
const queryAll = async (element, selector) => {
    const exeCtx = element.executionContext();
    const { name, role } = parseAriaSelector(selector);
    const res = await queryAXTree(exeCtx._client, element, name, role);
    const world = exeCtx._world;
    return Promise.all(res.map(axNode => {
        return world.adoptBackendNode(axNode.backendDOMNodeId);
    }));
};
/**
 * @internal
 */
const ariaHandler = {
    queryOne,
    waitFor,
    queryAll,
};
//# sourceMappingURL=AriaQueryHandler.js.map

/***/ }),

/***/ 1689:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

__nccwpck_require__.r(__webpack_exports__);
/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "BrowserWebSocketTransport": () => (/* binding */ BrowserWebSocketTransport)
/* harmony export */ });
var __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _BrowserWebSocketTransport_ws;
/**
 * @internal
 */
class BrowserWebSocketTransport {
    static create(url) {
        return new Promise((resolve, reject) => {
            const ws = new WebSocket(url);
            ws.addEventListener('open', () => {
                return resolve(new BrowserWebSocketTransport(ws));
            });
            ws.addEventListener('error', reject);
        });
    }
    constructor(ws) {
        _BrowserWebSocketTransport_ws.set(this, void 0);
        __classPrivateFieldSet(this, _BrowserWebSocketTransport_ws, ws, "f");
        __classPrivateFieldGet(this, _BrowserWebSocketTransport_ws, "f").addEventListener('message', event => {
            if (this.onmessage) {
                this.onmessage.call(null, event.data);
            }
        });
        __classPrivateFieldGet(this, _BrowserWebSocketTransport_ws, "f").addEventListener('close', () => {
            if (this.onclose) {
                this.onclose.call(null);
            }
        });
        // Silently ignore all errors - we don't know what to do with them.
        __classPrivateFieldGet(this, _BrowserWebSocketTransport_ws, "f").addEventListener('error', () => { });
    }
    send(message) {
        __classPrivateFieldGet(this, _BrowserWebSocketTransport_ws, "f").send(message);
    }
    close() {
        __classPrivateFieldGet(this, _BrowserWebSocketTransport_ws, "f").close();
    }
}
_BrowserWebSocketTransport_ws = new WeakMap();
//# sourceMappingURL=BrowserWebSocketTransport.js.map

/***/ }),

/***/ 9432:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "ew": () => (/* binding */ Connection),
/* harmony export */   "lK": () => (/* binding */ isTargetClosedError),
/* harmony export */   "vF": () => (/* binding */ ConnectionEmittedEvents),
/* harmony export */   "vG": () => (/* binding */ CDPSessionEmittedEvents)
/* harmony export */ });
/* unused harmony exports CDPSession, CDPSessionImpl */
/* harmony import */ var _util_assert_js__WEBPACK_IMPORTED_MODULE_3__ = __nccwpck_require__(5172);
/* harmony import */ var _Debug_js__WEBPACK_IMPORTED_MODULE_0__ = __nccwpck_require__(8528);
/* harmony import */ var _EventEmitter_js__WEBPACK_IMPORTED_MODULE_2__ = __nccwpck_require__(8856);
/* harmony import */ var _Errors_js__WEBPACK_IMPORTED_MODULE_1__ = __nccwpck_require__(7154);
var __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _Connection_instances, _Connection_url, _Connection_transport, _Connection_delay, _Connection_lastId, _Connection_sessions, _Connection_closed, _Connection_callbacks, _Connection_manuallyAttached, _Connection_onClose, _CDPSessionImpl_sessionId, _CDPSessionImpl_targetType, _CDPSessionImpl_callbacks, _CDPSessionImpl_connection;
/**
 * Copyright 2017 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


const debugProtocolSend = (0,_Debug_js__WEBPACK_IMPORTED_MODULE_0__/* .debug */ .fF)('puppeteer:protocol:SEND ►');
const debugProtocolReceive = (0,_Debug_js__WEBPACK_IMPORTED_MODULE_0__/* .debug */ .fF)('puppeteer:protocol:RECV ◀');


/**
 * Internal events that the Connection class emits.
 *
 * @internal
 */
const ConnectionEmittedEvents = {
    Disconnected: Symbol('Connection.Disconnected'),
};
/**
 * @public
 */
class Connection extends _EventEmitter_js__WEBPACK_IMPORTED_MODULE_2__/* .EventEmitter */ .v {
    constructor(url, transport, delay = 0) {
        super();
        _Connection_instances.add(this);
        _Connection_url.set(this, void 0);
        _Connection_transport.set(this, void 0);
        _Connection_delay.set(this, void 0);
        _Connection_lastId.set(this, 0);
        _Connection_sessions.set(this, new Map());
        _Connection_closed.set(this, false);
        _Connection_callbacks.set(this, new Map());
        _Connection_manuallyAttached.set(this, new Set());
        __classPrivateFieldSet(this, _Connection_url, url, "f");
        __classPrivateFieldSet(this, _Connection_delay, delay, "f");
        __classPrivateFieldSet(this, _Connection_transport, transport, "f");
        __classPrivateFieldGet(this, _Connection_transport, "f").onmessage = this.onMessage.bind(this);
        __classPrivateFieldGet(this, _Connection_transport, "f").onclose = __classPrivateFieldGet(this, _Connection_instances, "m", _Connection_onClose).bind(this);
    }
    static fromSession(session) {
        return session.connection();
    }
    /**
     * @internal
     */
    get _closed() {
        return __classPrivateFieldGet(this, _Connection_closed, "f");
    }
    /**
     * @internal
     */
    get _sessions() {
        return __classPrivateFieldGet(this, _Connection_sessions, "f");
    }
    /**
     * @param sessionId - The session id
     * @returns The current CDP session if it exists
     */
    session(sessionId) {
        return __classPrivateFieldGet(this, _Connection_sessions, "f").get(sessionId) || null;
    }
    url() {
        return __classPrivateFieldGet(this, _Connection_url, "f");
    }
    send(method, ...paramArgs) {
        // There is only ever 1 param arg passed, but the Protocol defines it as an
        // array of 0 or 1 items See this comment:
        // https://github.com/ChromeDevTools/devtools-protocol/pull/113#issuecomment-412603285
        // which explains why the protocol defines the params this way for better
        // type-inference.
        // So now we check if there are any params or not and deal with them accordingly.
        const params = paramArgs.length ? paramArgs[0] : undefined;
        const id = this._rawSend({ method, params });
        return new Promise((resolve, reject) => {
            __classPrivateFieldGet(this, _Connection_callbacks, "f").set(id, {
                resolve,
                reject,
                error: new _Errors_js__WEBPACK_IMPORTED_MODULE_1__/* .ProtocolError */ .K1(),
                method,
            });
        });
    }
    /**
     * @internal
     */
    _rawSend(message) {
        var _a;
        const id = __classPrivateFieldSet(this, _Connection_lastId, (_a = __classPrivateFieldGet(this, _Connection_lastId, "f"), ++_a), "f");
        const stringifiedMessage = JSON.stringify(Object.assign({}, message, { id }));
        debugProtocolSend(stringifiedMessage);
        __classPrivateFieldGet(this, _Connection_transport, "f").send(stringifiedMessage);
        return id;
    }
    /**
     * @internal
     */
    async onMessage(message) {
        if (__classPrivateFieldGet(this, _Connection_delay, "f")) {
            await new Promise(f => {
                return setTimeout(f, __classPrivateFieldGet(this, _Connection_delay, "f"));
            });
        }
        debugProtocolReceive(message);
        const object = JSON.parse(message);
        if (object.method === 'Target.attachedToTarget') {
            const sessionId = object.params.sessionId;
            const session = new CDPSessionImpl(this, object.params.targetInfo.type, sessionId);
            __classPrivateFieldGet(this, _Connection_sessions, "f").set(sessionId, session);
            this.emit('sessionattached', session);
            const parentSession = __classPrivateFieldGet(this, _Connection_sessions, "f").get(object.sessionId);
            if (parentSession) {
                parentSession.emit('sessionattached', session);
            }
        }
        else if (object.method === 'Target.detachedFromTarget') {
            const session = __classPrivateFieldGet(this, _Connection_sessions, "f").get(object.params.sessionId);
            if (session) {
                session._onClosed();
                __classPrivateFieldGet(this, _Connection_sessions, "f").delete(object.params.sessionId);
                this.emit('sessiondetached', session);
                const parentSession = __classPrivateFieldGet(this, _Connection_sessions, "f").get(object.sessionId);
                if (parentSession) {
                    parentSession.emit('sessiondetached', session);
                }
            }
        }
        if (object.sessionId) {
            const session = __classPrivateFieldGet(this, _Connection_sessions, "f").get(object.sessionId);
            if (session) {
                session._onMessage(object);
            }
        }
        else if (object.id) {
            const callback = __classPrivateFieldGet(this, _Connection_callbacks, "f").get(object.id);
            // Callbacks could be all rejected if someone has called `.dispose()`.
            if (callback) {
                __classPrivateFieldGet(this, _Connection_callbacks, "f").delete(object.id);
                if (object.error) {
                    callback.reject(createProtocolError(callback.error, callback.method, object));
                }
                else {
                    callback.resolve(object.result);
                }
            }
        }
        else {
            this.emit(object.method, object.params);
        }
    }
    dispose() {
        __classPrivateFieldGet(this, _Connection_instances, "m", _Connection_onClose).call(this);
        __classPrivateFieldGet(this, _Connection_transport, "f").close();
    }
    /**
     * @internal
     */
    isAutoAttached(targetId) {
        return !__classPrivateFieldGet(this, _Connection_manuallyAttached, "f").has(targetId);
    }
    /**
     * @internal
     */
    async _createSession(targetInfo, isAutoAttachEmulated = true) {
        if (!isAutoAttachEmulated) {
            __classPrivateFieldGet(this, _Connection_manuallyAttached, "f").add(targetInfo.targetId);
        }
        const { sessionId } = await this.send('Target.attachToTarget', {
            targetId: targetInfo.targetId,
            flatten: true,
        });
        __classPrivateFieldGet(this, _Connection_manuallyAttached, "f").delete(targetInfo.targetId);
        const session = __classPrivateFieldGet(this, _Connection_sessions, "f").get(sessionId);
        if (!session) {
            throw new Error('CDPSession creation failed.');
        }
        return session;
    }
    /**
     * @param targetInfo - The target info
     * @returns The CDP session that is created
     */
    async createSession(targetInfo) {
        return await this._createSession(targetInfo, false);
    }
}
_Connection_url = new WeakMap(), _Connection_transport = new WeakMap(), _Connection_delay = new WeakMap(), _Connection_lastId = new WeakMap(), _Connection_sessions = new WeakMap(), _Connection_closed = new WeakMap(), _Connection_callbacks = new WeakMap(), _Connection_manuallyAttached = new WeakMap(), _Connection_instances = new WeakSet(), _Connection_onClose = function _Connection_onClose() {
    if (__classPrivateFieldGet(this, _Connection_closed, "f")) {
        return;
    }
    __classPrivateFieldSet(this, _Connection_closed, true, "f");
    __classPrivateFieldGet(this, _Connection_transport, "f").onmessage = undefined;
    __classPrivateFieldGet(this, _Connection_transport, "f").onclose = undefined;
    for (const callback of __classPrivateFieldGet(this, _Connection_callbacks, "f").values()) {
        callback.reject(rewriteError(callback.error, `Protocol error (${callback.method}): Target closed.`));
    }
    __classPrivateFieldGet(this, _Connection_callbacks, "f").clear();
    for (const session of __classPrivateFieldGet(this, _Connection_sessions, "f").values()) {
        session._onClosed();
    }
    __classPrivateFieldGet(this, _Connection_sessions, "f").clear();
    this.emit(ConnectionEmittedEvents.Disconnected);
};
/**
 * Internal events that the CDPSession class emits.
 *
 * @internal
 */
const CDPSessionEmittedEvents = {
    Disconnected: Symbol('CDPSession.Disconnected'),
};
/**
 * The `CDPSession` instances are used to talk raw Chrome Devtools Protocol.
 *
 * @remarks
 *
 * Protocol methods can be called with {@link CDPSession.send} method and protocol
 * events can be subscribed to with `CDPSession.on` method.
 *
 * Useful links: {@link https://chromedevtools.github.io/devtools-protocol/ | DevTools Protocol Viewer}
 * and {@link https://github.com/aslushnikov/getting-started-with-cdp/blob/HEAD/README.md | Getting Started with DevTools Protocol}.
 *
 * @example
 *
 * ```ts
 * const client = await page.target().createCDPSession();
 * await client.send('Animation.enable');
 * client.on('Animation.animationCreated', () =>
 *   console.log('Animation created!')
 * );
 * const response = await client.send('Animation.getPlaybackRate');
 * console.log('playback rate is ' + response.playbackRate);
 * await client.send('Animation.setPlaybackRate', {
 *   playbackRate: response.playbackRate / 2,
 * });
 * ```
 *
 * @public
 */
class CDPSession extends _EventEmitter_js__WEBPACK_IMPORTED_MODULE_2__/* .EventEmitter */ .v {
    /**
     * @internal
     */
    constructor() {
        super();
    }
    connection() {
        throw new Error('Not implemented');
    }
    send() {
        throw new Error('Not implemented');
    }
    /**
     * Detaches the cdpSession from the target. Once detached, the cdpSession object
     * won't emit any events and can't be used to send messages.
     */
    async detach() {
        throw new Error('Not implemented');
    }
    /**
     * Returns the session's id.
     */
    id() {
        throw new Error('Not implemented');
    }
}
/**
 * @internal
 */
class CDPSessionImpl extends CDPSession {
    /**
     * @internal
     */
    constructor(connection, targetType, sessionId) {
        super();
        _CDPSessionImpl_sessionId.set(this, void 0);
        _CDPSessionImpl_targetType.set(this, void 0);
        _CDPSessionImpl_callbacks.set(this, new Map());
        _CDPSessionImpl_connection.set(this, void 0);
        __classPrivateFieldSet(this, _CDPSessionImpl_connection, connection, "f");
        __classPrivateFieldSet(this, _CDPSessionImpl_targetType, targetType, "f");
        __classPrivateFieldSet(this, _CDPSessionImpl_sessionId, sessionId, "f");
    }
    connection() {
        return __classPrivateFieldGet(this, _CDPSessionImpl_connection, "f");
    }
    send(method, ...paramArgs) {
        if (!__classPrivateFieldGet(this, _CDPSessionImpl_connection, "f")) {
            return Promise.reject(new Error(`Protocol error (${method}): Session closed. Most likely the ${__classPrivateFieldGet(this, _CDPSessionImpl_targetType, "f")} has been closed.`));
        }
        // See the comment in Connection#send explaining why we do this.
        const params = paramArgs.length ? paramArgs[0] : undefined;
        const id = __classPrivateFieldGet(this, _CDPSessionImpl_connection, "f")._rawSend({
            sessionId: __classPrivateFieldGet(this, _CDPSessionImpl_sessionId, "f"),
            method,
            params,
        });
        return new Promise((resolve, reject) => {
            __classPrivateFieldGet(this, _CDPSessionImpl_callbacks, "f").set(id, {
                resolve,
                reject,
                error: new _Errors_js__WEBPACK_IMPORTED_MODULE_1__/* .ProtocolError */ .K1(),
                method,
            });
        });
    }
    /**
     * @internal
     */
    _onMessage(object) {
        const callback = object.id ? __classPrivateFieldGet(this, _CDPSessionImpl_callbacks, "f").get(object.id) : undefined;
        if (object.id && callback) {
            __classPrivateFieldGet(this, _CDPSessionImpl_callbacks, "f").delete(object.id);
            if (object.error) {
                callback.reject(createProtocolError(callback.error, callback.method, object));
            }
            else {
                callback.resolve(object.result);
            }
        }
        else {
            (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_3__/* .assert */ .h)(!object.id);
            this.emit(object.method, object.params);
        }
    }
    /**
     * Detaches the cdpSession from the target. Once detached, the cdpSession object
     * won't emit any events and can't be used to send messages.
     */
    async detach() {
        if (!__classPrivateFieldGet(this, _CDPSessionImpl_connection, "f")) {
            throw new Error(`Session already detached. Most likely the ${__classPrivateFieldGet(this, _CDPSessionImpl_targetType, "f")} has been closed.`);
        }
        await __classPrivateFieldGet(this, _CDPSessionImpl_connection, "f").send('Target.detachFromTarget', {
            sessionId: __classPrivateFieldGet(this, _CDPSessionImpl_sessionId, "f"),
        });
    }
    /**
     * @internal
     */
    _onClosed() {
        for (const callback of __classPrivateFieldGet(this, _CDPSessionImpl_callbacks, "f").values()) {
            callback.reject(rewriteError(callback.error, `Protocol error (${callback.method}): Target closed.`));
        }
        __classPrivateFieldGet(this, _CDPSessionImpl_callbacks, "f").clear();
        __classPrivateFieldSet(this, _CDPSessionImpl_connection, undefined, "f");
        this.emit(CDPSessionEmittedEvents.Disconnected);
    }
    /**
     * Returns the session's id.
     */
    id() {
        return __classPrivateFieldGet(this, _CDPSessionImpl_sessionId, "f");
    }
}
_CDPSessionImpl_sessionId = new WeakMap(), _CDPSessionImpl_targetType = new WeakMap(), _CDPSessionImpl_callbacks = new WeakMap(), _CDPSessionImpl_connection = new WeakMap();
function createProtocolError(error, method, object) {
    let message = `Protocol error (${method}): ${object.error.message}`;
    if ('data' in object.error) {
        message += ` ${object.error.data}`;
    }
    return rewriteError(error, message, object.error.message);
}
function rewriteError(error, message, originalMessage) {
    error.message = message;
    error.originalMessage = originalMessage !== null && originalMessage !== void 0 ? originalMessage : error.originalMessage;
    return error;
}
/**
 * @internal
 */
function isTargetClosedError(err) {
    return (err.message.includes('Target closed') ||
        err.message.includes('Session closed'));
}
//# sourceMappingURL=Connection.js.map

/***/ }),

/***/ 8528:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "fF": () => (/* binding */ debug)
/* harmony export */ });
/* unused harmony exports importDebug, setLogCapture, getCapturedLogs */
/* harmony import */ var _environment_js__WEBPACK_IMPORTED_MODULE_0__ = __nccwpck_require__(2794);
/**
 * Copyright 2020 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @internal
 */
let debugModule = null;
/**
 * @internal
 */
async function importDebug() {
    if (!debugModule) {
        debugModule = (await Promise.resolve(/* import() */).then(__nccwpck_require__.t.bind(__nccwpck_require__, 8237, 19))).default;
    }
    return debugModule;
}
/**
 * A debug function that can be used in any environment.
 *
 * @remarks
 * If used in Node, it falls back to the
 * {@link https://www.npmjs.com/package/debug | debug module}. In the browser it
 * uses `console.log`.
 *
 * In Node, use the `DEBUG` environment variable to control logging:
 *
 * ```
 * DEBUG=* // logs all channels
 * DEBUG=foo // logs the `foo` channel
 * DEBUG=foo* // logs any channels starting with `foo`
 * ```
 *
 * In the browser, set `window.__PUPPETEER_DEBUG` to a string:
 *
 * ```
 * window.__PUPPETEER_DEBUG='*'; // logs all channels
 * window.__PUPPETEER_DEBUG='foo'; // logs the `foo` channel
 * window.__PUPPETEER_DEBUG='foo*'; // logs any channels starting with `foo`
 * ```
 *
 * @example
 *
 * ```
 * const log = debug('Page');
 *
 * log('new page created')
 * // logs "Page: new page created"
 * ```
 *
 * @param prefix - this will be prefixed to each log.
 * @returns a function that can be called to log to that debug channel.
 *
 * @internal
 */
const debug = (prefix) => {
    if (_environment_js__WEBPACK_IMPORTED_MODULE_0__/* .isNode */ .U) {
        return async (...logArgs) => {
            if (captureLogs) {
                capturedLogs.push(prefix + logArgs);
            }
            (await importDebug())(prefix)(logArgs);
        };
    }
    return (...logArgs) => {
        const debugLevel = globalThis.__PUPPETEER_DEBUG;
        if (!debugLevel) {
            return;
        }
        const everythingShouldBeLogged = debugLevel === '*';
        const prefixMatchesDebugLevel = everythingShouldBeLogged ||
            /**
             * If the debug level is `foo*`, that means we match any prefix that
             * starts with `foo`. If the level is `foo`, we match only the prefix
             * `foo`.
             */
            (debugLevel.endsWith('*')
                ? prefix.startsWith(debugLevel)
                : prefix === debugLevel);
        if (!prefixMatchesDebugLevel) {
            return;
        }
        // eslint-disable-next-line no-console
        console.log(`${prefix}:`, ...logArgs);
    };
};
/**
 * @internal
 */
let capturedLogs = [];
/**
 * @internal
 */
let captureLogs = false;
/**
 * @internal
 */
function setLogCapture(value) {
    capturedLogs = [];
    captureLogs = value;
}
/**
 * @internal
 */
function getCapturedLogs() {
    return capturedLogs;
}
//# sourceMappingURL=Debug.js.map

/***/ }),

/***/ 5498:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "g": () => (/* binding */ CDPElementHandle)
/* harmony export */ });
/* harmony import */ var _util_assert_js__WEBPACK_IMPORTED_MODULE_3__ = __nccwpck_require__(5172);
/* harmony import */ var _QueryHandler_js__WEBPACK_IMPORTED_MODULE_0__ = __nccwpck_require__(6402);
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_1__ = __nccwpck_require__(1823);
/* harmony import */ var _api_ElementHandle_js__WEBPACK_IMPORTED_MODULE_2__ = __nccwpck_require__(2559);
/**
 * Copyright 2019 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _CDPElementHandle_instances, _CDPElementHandle_disposed, _CDPElementHandle_frame, _CDPElementHandle_context, _CDPElementHandle_remoteObject, _CDPElementHandle_frameManager_get, _CDPElementHandle_page_get, _CDPElementHandle_scrollIntoViewIfNeeded, _CDPElementHandle_getOOPIFOffsets, _CDPElementHandle_getBoxModel, _CDPElementHandle_fromProtocolQuad, _CDPElementHandle_intersectQuadWithViewport;




const applyOffsetsToQuad = (quad, offsetX, offsetY) => {
    return quad.map(part => {
        return { x: part.x + offsetX, y: part.y + offsetY };
    });
};
/**
 * The CDPElementHandle extends ElementHandle now to keep compatibility
 * with `instanceof` because of that we need to have methods for
 * CDPJSHandle to in this implementation as well.
 *
 * @internal
 */
class CDPElementHandle extends _api_ElementHandle_js__WEBPACK_IMPORTED_MODULE_2__/* .ElementHandle */ .E {
    constructor(context, remoteObject, frame) {
        super();
        _CDPElementHandle_instances.add(this);
        _CDPElementHandle_disposed.set(this, false);
        _CDPElementHandle_frame.set(this, void 0);
        _CDPElementHandle_context.set(this, void 0);
        _CDPElementHandle_remoteObject.set(this, void 0);
        __classPrivateFieldSet(this, _CDPElementHandle_context, context, "f");
        __classPrivateFieldSet(this, _CDPElementHandle_remoteObject, remoteObject, "f");
        __classPrivateFieldSet(this, _CDPElementHandle_frame, frame, "f");
    }
    /**
     * @internal
     */
    executionContext() {
        return __classPrivateFieldGet(this, _CDPElementHandle_context, "f");
    }
    /**
     * @internal
     */
    get client() {
        return __classPrivateFieldGet(this, _CDPElementHandle_context, "f")._client;
    }
    remoteObject() {
        return __classPrivateFieldGet(this, _CDPElementHandle_remoteObject, "f");
    }
    async evaluate(pageFunction, ...args) {
        return this.executionContext().evaluate(pageFunction, this, ...args);
    }
    evaluateHandle(pageFunction, ...args) {
        return this.executionContext().evaluateHandle(pageFunction, this, ...args);
    }
    get frame() {
        return __classPrivateFieldGet(this, _CDPElementHandle_frame, "f");
    }
    get disposed() {
        return __classPrivateFieldGet(this, _CDPElementHandle_disposed, "f");
    }
    async getProperty(propertyName) {
        return this.evaluateHandle((object, propertyName) => {
            return object[propertyName];
        }, propertyName);
    }
    async jsonValue() {
        if (!__classPrivateFieldGet(this, _CDPElementHandle_remoteObject, "f").objectId) {
            return (0,_util_js__WEBPACK_IMPORTED_MODULE_1__/* .valueFromRemoteObject */ .jV)(__classPrivateFieldGet(this, _CDPElementHandle_remoteObject, "f"));
        }
        const value = await this.evaluate(object => {
            return object;
        });
        if (value === undefined) {
            throw new Error('Could not serialize referenced object');
        }
        return value;
    }
    toString() {
        if (!__classPrivateFieldGet(this, _CDPElementHandle_remoteObject, "f").objectId) {
            return 'JSHandle:' + (0,_util_js__WEBPACK_IMPORTED_MODULE_1__/* .valueFromRemoteObject */ .jV)(__classPrivateFieldGet(this, _CDPElementHandle_remoteObject, "f"));
        }
        const type = __classPrivateFieldGet(this, _CDPElementHandle_remoteObject, "f").subtype || __classPrivateFieldGet(this, _CDPElementHandle_remoteObject, "f").type;
        return 'JSHandle@' + type;
    }
    async $(selector) {
        const { updatedSelector, queryHandler } = (0,_QueryHandler_js__WEBPACK_IMPORTED_MODULE_0__/* .getQueryHandlerAndSelector */ .rB)(selector);
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_3__/* .assert */ .h)(queryHandler.queryOne, 'Cannot handle queries for a single element with the given selector');
        return (await queryHandler.queryOne(this, updatedSelector));
    }
    async $$(selector) {
        const { updatedSelector, queryHandler } = (0,_QueryHandler_js__WEBPACK_IMPORTED_MODULE_0__/* .getQueryHandlerAndSelector */ .rB)(selector);
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_3__/* .assert */ .h)(queryHandler.queryAll, 'Cannot handle queries for a multiple element with the given selector');
        return (await queryHandler.queryAll(this, updatedSelector));
    }
    async $eval(selector, pageFunction, ...args) {
        const elementHandle = await this.$(selector);
        if (!elementHandle) {
            throw new Error(`Error: failed to find element matching selector "${selector}"`);
        }
        const result = await elementHandle.evaluate(pageFunction, ...args);
        await elementHandle.dispose();
        return result;
    }
    async $$eval(selector, pageFunction, ...args) {
        const { updatedSelector, queryHandler } = (0,_QueryHandler_js__WEBPACK_IMPORTED_MODULE_0__/* .getQueryHandlerAndSelector */ .rB)(selector);
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_3__/* .assert */ .h)(queryHandler.queryAll, 'Cannot handle queries for a multiple element with the given selector');
        const handles = (await queryHandler.queryAll(this, updatedSelector));
        const elements = (await this.evaluateHandle((_, ...elements) => {
            return elements;
        }, ...handles));
        const [result] = await Promise.all([
            elements.evaluate(pageFunction, ...args),
            ...handles.map(handle => {
                return handle.dispose();
            }),
        ]);
        await elements.dispose();
        return result;
    }
    async $x(expression) {
        if (expression.startsWith('//')) {
            expression = `.${expression}`;
        }
        return this.$$(`xpath/${expression}`);
    }
    async waitForSelector(selector, options = {}) {
        const { updatedSelector, queryHandler } = (0,_QueryHandler_js__WEBPACK_IMPORTED_MODULE_0__/* .getQueryHandlerAndSelector */ .rB)(selector);
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_3__/* .assert */ .h)(queryHandler.waitFor, 'Query handler does not support waiting');
        return (await queryHandler.waitFor(this, updatedSelector, options));
    }
    async waitForXPath(xpath, options = {}) {
        if (xpath.startsWith('//')) {
            xpath = `.${xpath}`;
        }
        return this.waitForSelector(`xpath/${xpath}`, options);
    }
    async toElement(tagName) {
        const isMatchingTagName = await this.evaluate((node, tagName) => {
            return node.nodeName === tagName.toUpperCase();
        }, tagName);
        if (!isMatchingTagName) {
            throw new Error(`Element is not a(n) \`${tagName}\` element`);
        }
        return this;
    }
    asElement() {
        return this;
    }
    async contentFrame() {
        const nodeInfo = await this.client.send('DOM.describeNode', {
            objectId: this.remoteObject().objectId,
        });
        if (typeof nodeInfo.node.frameId !== 'string') {
            return null;
        }
        return __classPrivateFieldGet(this, _CDPElementHandle_instances, "a", _CDPElementHandle_frameManager_get).frame(nodeInfo.node.frameId);
    }
    async clickablePoint(offset) {
        const [result, layoutMetrics] = await Promise.all([
            this.client
                .send('DOM.getContentQuads', {
                objectId: this.remoteObject().objectId,
            })
                .catch(_util_js__WEBPACK_IMPORTED_MODULE_1__/* .debugError */ .ur),
            __classPrivateFieldGet(this, _CDPElementHandle_instances, "a", _CDPElementHandle_page_get)._client().send('Page.getLayoutMetrics'),
        ]);
        if (!result || !result.quads.length) {
            throw new Error('Node is either not clickable or not an HTMLElement');
        }
        // Filter out quads that have too small area to click into.
        // Fallback to `layoutViewport` in case of using Firefox.
        const { clientWidth, clientHeight } = layoutMetrics.cssLayoutViewport || layoutMetrics.layoutViewport;
        const { offsetX, offsetY } = await __classPrivateFieldGet(this, _CDPElementHandle_instances, "m", _CDPElementHandle_getOOPIFOffsets).call(this, __classPrivateFieldGet(this, _CDPElementHandle_frame, "f"));
        const quads = result.quads
            .map(quad => {
            return __classPrivateFieldGet(this, _CDPElementHandle_instances, "m", _CDPElementHandle_fromProtocolQuad).call(this, quad);
        })
            .map(quad => {
            return applyOffsetsToQuad(quad, offsetX, offsetY);
        })
            .map(quad => {
            return __classPrivateFieldGet(this, _CDPElementHandle_instances, "m", _CDPElementHandle_intersectQuadWithViewport).call(this, quad, clientWidth, clientHeight);
        })
            .filter(quad => {
            return computeQuadArea(quad) > 1;
        });
        if (!quads.length) {
            throw new Error('Node is either not clickable or not an HTMLElement');
        }
        const quad = quads[0];
        if (offset) {
            // Return the point of the first quad identified by offset.
            let minX = Number.MAX_SAFE_INTEGER;
            let minY = Number.MAX_SAFE_INTEGER;
            for (const point of quad) {
                if (point.x < minX) {
                    minX = point.x;
                }
                if (point.y < minY) {
                    minY = point.y;
                }
            }
            if (minX !== Number.MAX_SAFE_INTEGER &&
                minY !== Number.MAX_SAFE_INTEGER) {
                return {
                    x: minX + offset.x,
                    y: minY + offset.y,
                };
            }
        }
        // Return the middle point of the first quad.
        let x = 0;
        let y = 0;
        for (const point of quad) {
            x += point.x;
            y += point.y;
        }
        return {
            x: x / 4,
            y: y / 4,
        };
    }
    /**
     * This method scrolls element into view if needed, and then
     * uses {@link Page.mouse} to hover over the center of the element.
     * If the element is detached from DOM, the method throws an error.
     */
    async hover() {
        await __classPrivateFieldGet(this, _CDPElementHandle_instances, "m", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);
        const { x, y } = await this.clickablePoint();
        await __classPrivateFieldGet(this, _CDPElementHandle_instances, "a", _CDPElementHandle_page_get).mouse.move(x, y);
    }
    /**
     * This method scrolls element into view if needed, and then
     * uses {@link Page.mouse} to click in the center of the element.
     * If the element is detached from DOM, the method throws an error.
     */
    async click(options = {}) {
        await __classPrivateFieldGet(this, _CDPElementHandle_instances, "m", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);
        const { x, y } = await this.clickablePoint(options.offset);
        await __classPrivateFieldGet(this, _CDPElementHandle_instances, "a", _CDPElementHandle_page_get).mouse.click(x, y, options);
    }
    /**
     * This method creates and captures a dragevent from the element.
     */
    async drag(target) {
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_3__/* .assert */ .h)(__classPrivateFieldGet(this, _CDPElementHandle_instances, "a", _CDPElementHandle_page_get).isDragInterceptionEnabled(), 'Drag Interception is not enabled!');
        await __classPrivateFieldGet(this, _CDPElementHandle_instances, "m", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);
        const start = await this.clickablePoint();
        return await __classPrivateFieldGet(this, _CDPElementHandle_instances, "a", _CDPElementHandle_page_get).mouse.drag(start, target);
    }
    async dragEnter(data = { items: [], dragOperationsMask: 1 }) {
        await __classPrivateFieldGet(this, _CDPElementHandle_instances, "m", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);
        const target = await this.clickablePoint();
        await __classPrivateFieldGet(this, _CDPElementHandle_instances, "a", _CDPElementHandle_page_get).mouse.dragEnter(target, data);
    }
    async dragOver(data = { items: [], dragOperationsMask: 1 }) {
        await __classPrivateFieldGet(this, _CDPElementHandle_instances, "m", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);
        const target = await this.clickablePoint();
        await __classPrivateFieldGet(this, _CDPElementHandle_instances, "a", _CDPElementHandle_page_get).mouse.dragOver(target, data);
    }
    async drop(data = { items: [], dragOperationsMask: 1 }) {
        await __classPrivateFieldGet(this, _CDPElementHandle_instances, "m", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);
        const destination = await this.clickablePoint();
        await __classPrivateFieldGet(this, _CDPElementHandle_instances, "a", _CDPElementHandle_page_get).mouse.drop(destination, data);
    }
    async dragAndDrop(target, options) {
        await __classPrivateFieldGet(this, _CDPElementHandle_instances, "m", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);
        const startPoint = await this.clickablePoint();
        const targetPoint = await target.clickablePoint();
        await __classPrivateFieldGet(this, _CDPElementHandle_instances, "a", _CDPElementHandle_page_get).mouse.dragAndDrop(startPoint, targetPoint, options);
    }
    async select(...values) {
        for (const value of values) {
            (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_3__/* .assert */ .h)((0,_util_js__WEBPACK_IMPORTED_MODULE_1__/* .isString */ .HD)(value), 'Values must be strings. Found value "' +
                value +
                '" of type "' +
                typeof value +
                '"');
        }
        return this.evaluate((element, vals) => {
            const values = new Set(vals);
            if (!(element instanceof HTMLSelectElement)) {
                throw new Error('Element is not a <select> element.');
            }
            const selectedValues = new Set();
            if (!element.multiple) {
                for (const option of element.options) {
                    option.selected = false;
                }
                for (const option of element.options) {
                    if (values.has(option.value)) {
                        option.selected = true;
                        selectedValues.add(option.value);
                        break;
                    }
                }
            }
            else {
                for (const option of element.options) {
                    option.selected = values.has(option.value);
                    if (option.selected) {
                        selectedValues.add(option.value);
                    }
                }
            }
            element.dispatchEvent(new Event('input', { bubbles: true }));
            element.dispatchEvent(new Event('change', { bubbles: true }));
            return [...selectedValues.values()];
        }, values);
    }
    async uploadFile(...filePaths) {
        const isMultiple = await this.evaluate(element => {
            return element.multiple;
        });
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_3__/* .assert */ .h)(filePaths.length <= 1 || isMultiple, 'Multiple file uploads only work with <input type=file multiple>');
        // Locate all files and confirm that they exist.
        let path;
        try {
            path = await Promise.resolve(/* import() */).then(__nccwpck_require__.t.bind(__nccwpck_require__, 1017, 19));
        }
        catch (error) {
            if (error instanceof TypeError) {
                throw new Error(`JSHandle#uploadFile can only be used in Node-like environments.`);
            }
            throw error;
        }
        const files = filePaths.map(filePath => {
            if (path.win32.isAbsolute(filePath) || path.posix.isAbsolute(filePath)) {
                return filePath;
            }
            else {
                return path.resolve(filePath);
            }
        });
        const { objectId } = this.remoteObject();
        const { node } = await this.client.send('DOM.describeNode', {
            objectId,
        });
        const { backendNodeId } = node;
        /*  The zero-length array is a special case, it seems that
             DOM.setFileInputFiles does not actually update the files in that case,
             so the solution is to eval the element value to a new FileList directly.
         */
        if (files.length === 0) {
            await this.evaluate(element => {
                element.files = new DataTransfer().files;
                // Dispatch events for this case because it should behave akin to a user action.
                element.dispatchEvent(new Event('input', { bubbles: true }));
                element.dispatchEvent(new Event('change', { bubbles: true }));
            });
        }
        else {
            await this.client.send('DOM.setFileInputFiles', {
                objectId,
                files,
                backendNodeId,
            });
        }
    }
    async tap() {
        await __classPrivateFieldGet(this, _CDPElementHandle_instances, "m", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);
        const { x, y } = await this.clickablePoint();
        await __classPrivateFieldGet(this, _CDPElementHandle_instances, "a", _CDPElementHandle_page_get).touchscreen.touchStart(x, y);
        await __classPrivateFieldGet(this, _CDPElementHandle_instances, "a", _CDPElementHandle_page_get).touchscreen.touchEnd();
    }
    async touchStart() {
        await __classPrivateFieldGet(this, _CDPElementHandle_instances, "m", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);
        const { x, y } = await this.clickablePoint();
        await __classPrivateFieldGet(this, _CDPElementHandle_instances, "a", _CDPElementHandle_page_get).touchscreen.touchStart(x, y);
    }
    async touchMove() {
        await __classPrivateFieldGet(this, _CDPElementHandle_instances, "m", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);
        const { x, y } = await this.clickablePoint();
        await __classPrivateFieldGet(this, _CDPElementHandle_instances, "a", _CDPElementHandle_page_get).touchscreen.touchMove(x, y);
    }
    async touchEnd() {
        await __classPrivateFieldGet(this, _CDPElementHandle_instances, "m", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);
        await __classPrivateFieldGet(this, _CDPElementHandle_instances, "a", _CDPElementHandle_page_get).touchscreen.touchEnd();
    }
    async focus() {
        await this.evaluate(element => {
            if (!(element instanceof HTMLElement)) {
                throw new Error('Cannot focus non-HTMLElement');
            }
            return element.focus();
        });
    }
    async type(text, options) {
        await this.focus();
        await __classPrivateFieldGet(this, _CDPElementHandle_instances, "a", _CDPElementHandle_page_get).keyboard.type(text, options);
    }
    async press(key, options) {
        await this.focus();
        await __classPrivateFieldGet(this, _CDPElementHandle_instances, "a", _CDPElementHandle_page_get).keyboard.press(key, options);
    }
    async boundingBox() {
        const result = await __classPrivateFieldGet(this, _CDPElementHandle_instances, "m", _CDPElementHandle_getBoxModel).call(this);
        if (!result) {
            return null;
        }
        const { offsetX, offsetY } = await __classPrivateFieldGet(this, _CDPElementHandle_instances, "m", _CDPElementHandle_getOOPIFOffsets).call(this, __classPrivateFieldGet(this, _CDPElementHandle_frame, "f"));
        const quad = result.model.border;
        const x = Math.min(quad[0], quad[2], quad[4], quad[6]);
        const y = Math.min(quad[1], quad[3], quad[5], quad[7]);
        const width = Math.max(quad[0], quad[2], quad[4], quad[6]) - x;
        const height = Math.max(quad[1], quad[3], quad[5], quad[7]) - y;
        return { x: x + offsetX, y: y + offsetY, width, height };
    }
    async boxModel() {
        const result = await __classPrivateFieldGet(this, _CDPElementHandle_instances, "m", _CDPElementHandle_getBoxModel).call(this);
        if (!result) {
            return null;
        }
        const { offsetX, offsetY } = await __classPrivateFieldGet(this, _CDPElementHandle_instances, "m", _CDPElementHandle_getOOPIFOffsets).call(this, __classPrivateFieldGet(this, _CDPElementHandle_frame, "f"));
        const { content, padding, border, margin, width, height } = result.model;
        return {
            content: applyOffsetsToQuad(__classPrivateFieldGet(this, _CDPElementHandle_instances, "m", _CDPElementHandle_fromProtocolQuad).call(this, content), offsetX, offsetY),
            padding: applyOffsetsToQuad(__classPrivateFieldGet(this, _CDPElementHandle_instances, "m", _CDPElementHandle_fromProtocolQuad).call(this, padding), offsetX, offsetY),
            border: applyOffsetsToQuad(__classPrivateFieldGet(this, _CDPElementHandle_instances, "m", _CDPElementHandle_fromProtocolQuad).call(this, border), offsetX, offsetY),
            margin: applyOffsetsToQuad(__classPrivateFieldGet(this, _CDPElementHandle_instances, "m", _CDPElementHandle_fromProtocolQuad).call(this, margin), offsetX, offsetY),
            width,
            height,
        };
    }
    async screenshot(options = {}) {
        let needsViewportReset = false;
        let boundingBox = await this.boundingBox();
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_3__/* .assert */ .h)(boundingBox, 'Node is either not visible or not an HTMLElement');
        const viewport = __classPrivateFieldGet(this, _CDPElementHandle_instances, "a", _CDPElementHandle_page_get).viewport();
        if (viewport &&
            (boundingBox.width > viewport.width ||
                boundingBox.height > viewport.height)) {
            const newViewport = {
                width: Math.max(viewport.width, Math.ceil(boundingBox.width)),
                height: Math.max(viewport.height, Math.ceil(boundingBox.height)),
            };
            await __classPrivateFieldGet(this, _CDPElementHandle_instances, "a", _CDPElementHandle_page_get).setViewport(Object.assign({}, viewport, newViewport));
            needsViewportReset = true;
        }
        await __classPrivateFieldGet(this, _CDPElementHandle_instances, "m", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);
        boundingBox = await this.boundingBox();
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_3__/* .assert */ .h)(boundingBox, 'Node is either not visible or not an HTMLElement');
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_3__/* .assert */ .h)(boundingBox.width !== 0, 'Node has 0 width.');
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_3__/* .assert */ .h)(boundingBox.height !== 0, 'Node has 0 height.');
        const layoutMetrics = await this.client.send('Page.getLayoutMetrics');
        // Fallback to `layoutViewport` in case of using Firefox.
        const { pageX, pageY } = layoutMetrics.cssVisualViewport || layoutMetrics.layoutViewport;
        const clip = Object.assign({}, boundingBox);
        clip.x += pageX;
        clip.y += pageY;
        const imageData = await __classPrivateFieldGet(this, _CDPElementHandle_instances, "a", _CDPElementHandle_page_get).screenshot(Object.assign({}, {
            clip,
        }, options));
        if (needsViewportReset && viewport) {
            await __classPrivateFieldGet(this, _CDPElementHandle_instances, "a", _CDPElementHandle_page_get).setViewport(viewport);
        }
        return imageData;
    }
    async isIntersectingViewport(options) {
        const { threshold = 0 } = options !== null && options !== void 0 ? options : {};
        return await this.evaluate(async (element, threshold) => {
            const visibleRatio = await new Promise(resolve => {
                const observer = new IntersectionObserver(entries => {
                    resolve(entries[0].intersectionRatio);
                    observer.disconnect();
                });
                observer.observe(element);
            });
            return threshold === 1 ? visibleRatio === 1 : visibleRatio > threshold;
        }, threshold);
    }
    async dispose() {
        if (__classPrivateFieldGet(this, _CDPElementHandle_disposed, "f")) {
            return;
        }
        __classPrivateFieldSet(this, _CDPElementHandle_disposed, true, "f");
        await (0,_util_js__WEBPACK_IMPORTED_MODULE_1__/* .releaseObject */ .M9)(this.client, __classPrivateFieldGet(this, _CDPElementHandle_remoteObject, "f"));
    }
}
_CDPElementHandle_disposed = new WeakMap(), _CDPElementHandle_frame = new WeakMap(), _CDPElementHandle_context = new WeakMap(), _CDPElementHandle_remoteObject = new WeakMap(), _CDPElementHandle_instances = new WeakSet(), _CDPElementHandle_frameManager_get = function _CDPElementHandle_frameManager_get() {
    return __classPrivateFieldGet(this, _CDPElementHandle_frame, "f")._frameManager;
}, _CDPElementHandle_page_get = function _CDPElementHandle_page_get() {
    return __classPrivateFieldGet(this, _CDPElementHandle_frame, "f").page();
}, _CDPElementHandle_scrollIntoViewIfNeeded = async function _CDPElementHandle_scrollIntoViewIfNeeded() {
    const error = await this.evaluate(async (element) => {
        if (!element.isConnected) {
            return 'Node is detached from document';
        }
        if (element.nodeType !== Node.ELEMENT_NODE) {
            return 'Node is not of type HTMLElement';
        }
        return;
    });
    if (error) {
        throw new Error(error);
    }
    try {
        await this.client.send('DOM.scrollIntoViewIfNeeded', {
            objectId: this.remoteObject().objectId,
        });
    }
    catch (_err) {
        // Fallback to Element.scrollIntoView if DOM.scrollIntoViewIfNeeded is not supported
        await this.evaluate(async (element, pageJavascriptEnabled) => {
            const visibleRatio = async () => {
                return await new Promise(resolve => {
                    const observer = new IntersectionObserver(entries => {
                        resolve(entries[0].intersectionRatio);
                        observer.disconnect();
                    });
                    observer.observe(element);
                });
            };
            if (!pageJavascriptEnabled || (await visibleRatio()) !== 1.0) {
                element.scrollIntoView({
                    block: 'center',
                    inline: 'center',
                    // @ts-expect-error Chrome still supports behavior: instant but
                    // it's not in the spec so TS shouts We don't want to make this
                    // breaking change in Puppeteer yet so we'll ignore the line.
                    behavior: 'instant',
                });
            }
        }, __classPrivateFieldGet(this, _CDPElementHandle_instances, "a", _CDPElementHandle_page_get).isJavaScriptEnabled());
    }
}, _CDPElementHandle_getOOPIFOffsets = async function _CDPElementHandle_getOOPIFOffsets(frame) {
    let offsetX = 0;
    let offsetY = 0;
    let currentFrame = frame;
    while (currentFrame && currentFrame.parentFrame()) {
        const parent = currentFrame.parentFrame();
        if (!currentFrame.isOOPFrame() || !parent) {
            currentFrame = parent;
            continue;
        }
        const { backendNodeId } = await parent._client().send('DOM.getFrameOwner', {
            frameId: currentFrame._id,
        });
        const result = await parent._client().send('DOM.getBoxModel', {
            backendNodeId: backendNodeId,
        });
        if (!result) {
            break;
        }
        const contentBoxQuad = result.model.content;
        const topLeftCorner = __classPrivateFieldGet(this, _CDPElementHandle_instances, "m", _CDPElementHandle_fromProtocolQuad).call(this, contentBoxQuad)[0];
        offsetX += topLeftCorner.x;
        offsetY += topLeftCorner.y;
        currentFrame = parent;
    }
    return { offsetX, offsetY };
}, _CDPElementHandle_getBoxModel = function _CDPElementHandle_getBoxModel() {
    const params = {
        objectId: this.remoteObject().objectId,
    };
    return this.client.send('DOM.getBoxModel', params).catch(error => {
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_1__/* .debugError */ .ur)(error);
    });
}, _CDPElementHandle_fromProtocolQuad = function _CDPElementHandle_fromProtocolQuad(quad) {
    return [
        { x: quad[0], y: quad[1] },
        { x: quad[2], y: quad[3] },
        { x: quad[4], y: quad[5] },
        { x: quad[6], y: quad[7] },
    ];
}, _CDPElementHandle_intersectQuadWithViewport = function _CDPElementHandle_intersectQuadWithViewport(quad, width, height) {
    return quad.map(point => {
        return {
            x: Math.min(Math.max(point.x, 0), width),
            y: Math.min(Math.max(point.y, 0), height),
        };
    });
};
function computeQuadArea(quad) {
    /* Compute sum of all directed areas of adjacent triangles
       https://en.wikipedia.org/wiki/Polygon#Simple_polygons
     */
    let area = 0;
    for (let i = 0; i < quad.length; ++i) {
        const p1 = quad[i];
        const p2 = quad[(i + 1) % quad.length];
        area += (p1.x * p2.y - p2.x * p1.y) / 2;
    }
    return Math.abs(area);
}
//# sourceMappingURL=ElementHandle.js.map

/***/ }),

/***/ 7154:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "K1": () => (/* binding */ ProtocolError),
/* harmony export */   "W5": () => (/* binding */ TimeoutError)
/* harmony export */ });
/* unused harmony exports CustomError, errors */
/**
 * Copyright 2018 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _ProtocolError_code, _ProtocolError_originalMessage;
/**
 * @deprecated Do not use.
 *
 * @public
 */
class CustomError extends Error {
    /**
     * @internal
     */
    constructor(message) {
        super(message);
        this.name = this.constructor.name;
        Error.captureStackTrace(this, this.constructor);
    }
}
/**
 * TimeoutError is emitted whenever certain operations are terminated due to
 * timeout.
 *
 * @remarks
 * Example operations are {@link Page.waitForSelector | page.waitForSelector} or
 * {@link PuppeteerNode.launch | puppeteer.launch}.
 *
 * @public
 */
class TimeoutError extends CustomError {
}
/**
 * ProtocolError is emitted whenever there is an error from the protocol.
 *
 * @public
 */
class ProtocolError extends CustomError {
    constructor() {
        super(...arguments);
        _ProtocolError_code.set(this, void 0);
        _ProtocolError_originalMessage.set(this, '');
    }
    /**
     * @internal
     */
    set code(code) {
        __classPrivateFieldSet(this, _ProtocolError_code, code, "f");
    }
    /**
     * @public
     */
    get code() {
        return __classPrivateFieldGet(this, _ProtocolError_code, "f");
    }
    /**
     * @internal
     */
    set originalMessage(originalMessage) {
        __classPrivateFieldSet(this, _ProtocolError_originalMessage, originalMessage, "f");
    }
    /**
     * @public
     */
    get originalMessage() {
        return __classPrivateFieldGet(this, _ProtocolError_originalMessage, "f");
    }
}
_ProtocolError_code = new WeakMap(), _ProtocolError_originalMessage = new WeakMap();
/**
 * @deprecated Import error classes directly.
 *
 * Puppeteer methods might throw errors if they are unable to fulfill a request.
 * For example, `page.waitForSelector(selector[, options])` might fail if the
 * selector doesn't match any nodes during the given timeframe.
 *
 * For certain types of errors Puppeteer uses specific error classes. These
 * classes are available via `puppeteer.errors`.
 *
 * @example
 * An example of handling a timeout error:
 *
 * ```ts
 * try {
 *   await page.waitForSelector('.foo');
 * } catch (e) {
 *   if (e instanceof TimeoutError) {
 *     // Do something if this is a timeout.
 *   }
 * }
 * ```
 *
 * @public
 */
const errors = Object.freeze({
    TimeoutError,
    ProtocolError,
});
//# sourceMappingURL=Errors.js.map

/***/ }),

/***/ 8856:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {


// EXPORTS
__nccwpck_require__.d(__webpack_exports__, {
  "v": () => (/* binding */ EventEmitter)
});

;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/third_party/mitt/index.js
function mitt(n){return {all:n=n||new Map,on:function(t,e){var i=n.get(t);i?i.push(e):n.set(t,[e]);},off:function(t,e){var i=n.get(t);i&&(e?i.splice(i.indexOf(e)>>>0,1):n.set(t,[]));},emit:function(t,e){var i=n.get(t);i&&i.slice().map(function(n){n(e);}),(i=n.get("*"))&&i.slice().map(function(n){n(t,e);});}}}



;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/EventEmitter.js
/**
 * Copyright 2022 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * The EventEmitter class that many Puppeteer classes extend.
 *
 * @remarks
 *
 * This allows you to listen to events that Puppeteer classes fire and act
 * accordingly. Therefore you'll mostly use {@link EventEmitter.on | on} and
 * {@link EventEmitter.off | off} to bind
 * and unbind to event listeners.
 *
 * @public
 */
class EventEmitter {
    /**
     * @internal
     */
    constructor() {
        this.eventsMap = new Map();
        this.emitter = mitt(this.eventsMap);
    }
    /**
     * Bind an event listener to fire when an event occurs.
     * @param event - the event type you'd like to listen to. Can be a string or symbol.
     * @param handler - the function to be called when the event occurs.
     * @returns `this` to enable you to chain method calls.
     */
    on(event, handler) {
        this.emitter.on(event, handler);
        return this;
    }
    /**
     * Remove an event listener from firing.
     * @param event - the event type you'd like to stop listening to.
     * @param handler - the function that should be removed.
     * @returns `this` to enable you to chain method calls.
     */
    off(event, handler) {
        this.emitter.off(event, handler);
        return this;
    }
    /**
     * Remove an event listener.
     * @deprecated please use {@link EventEmitter.off} instead.
     */
    removeListener(event, handler) {
        this.off(event, handler);
        return this;
    }
    /**
     * Add an event listener.
     * @deprecated please use {@link EventEmitter.on} instead.
     */
    addListener(event, handler) {
        this.on(event, handler);
        return this;
    }
    /**
     * Emit an event and call any associated listeners.
     *
     * @param event - the event you'd like to emit
     * @param eventData - any data you'd like to emit with the event
     * @returns `true` if there are any listeners, `false` if there are not.
     */
    emit(event, eventData) {
        this.emitter.emit(event, eventData);
        return this.eventListenersCount(event) > 0;
    }
    /**
     * Like `on` but the listener will only be fired once and then it will be removed.
     * @param event - the event you'd like to listen to
     * @param handler - the handler function to run when the event occurs
     * @returns `this` to enable you to chain method calls.
     */
    once(event, handler) {
        const onceHandler = eventData => {
            handler(eventData);
            this.off(event, onceHandler);
        };
        return this.on(event, onceHandler);
    }
    /**
     * Gets the number of listeners for a given event.
     *
     * @param event - the event to get the listener count for
     * @returns the number of listeners bound to the given event
     */
    listenerCount(event) {
        return this.eventListenersCount(event);
    }
    /**
     * Removes all listeners. If given an event argument, it will remove only
     * listeners for that event.
     * @param event - the event to remove listeners for.
     * @returns `this` to enable you to chain method calls.
     */
    removeAllListeners(event) {
        if (event) {
            this.eventsMap.delete(event);
        }
        else {
            this.eventsMap.clear();
        }
        return this;
    }
    eventListenersCount(event) {
        var _a;
        return ((_a = this.eventsMap.get(event)) === null || _a === void 0 ? void 0 : _a.length) || 0;
    }
}
//# sourceMappingURL=EventEmitter.js.map

/***/ }),

/***/ 7365:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {


// EXPORTS
__nccwpck_require__.d(__webpack_exports__, {
  "z": () => (/* binding */ EVALUATION_SCRIPT_URL),
  "r": () => (/* binding */ ExecutionContext)
});

;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/generated/injected.js
/**
 * CommonJS JavaScript code that provides the puppeteer utilities. See the
 * [README](https://github.com/puppeteer/puppeteer/blob/main/src/injected/README.md)
 * for injection for more information.
 *
 * @internal
 */
const source = "\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/injected/injected.ts\nvar injected_exports = {};\n__export(injected_exports, {\n  default: () => injected_default\n});\nmodule.exports = __toCommonJS(injected_exports);\n\n// src/common/Errors.ts\nvar CustomError = class extends Error {\n  constructor(message) {\n    super(message);\n    this.name = this.constructor.name;\n    Error.captureStackTrace(this, this.constructor);\n  }\n};\nvar TimeoutError = class extends CustomError {\n};\nvar ProtocolError = class extends CustomError {\n  #code;\n  #originalMessage = \"\";\n  set code(code) {\n    this.#code = code;\n  }\n  get code() {\n    return this.#code;\n  }\n  set originalMessage(originalMessage) {\n    this.#originalMessage = originalMessage;\n  }\n  get originalMessage() {\n    return this.#originalMessage;\n  }\n};\nvar errors = Object.freeze({\n  TimeoutError,\n  ProtocolError\n});\n\n// src/util/DeferredPromise.ts\nfunction createDeferredPromise(opts) {\n  let isResolved = false;\n  let isRejected = false;\n  let resolver;\n  let rejector;\n  const taskPromise = new Promise((resolve, reject) => {\n    resolver = resolve;\n    rejector = reject;\n  });\n  const timeoutId = opts && opts.timeout > 0 ? setTimeout(() => {\n    isRejected = true;\n    rejector(new TimeoutError(opts.message));\n  }, opts.timeout) : void 0;\n  return Object.assign(taskPromise, {\n    resolved: () => {\n      return isResolved;\n    },\n    finished: () => {\n      return isResolved || isRejected;\n    },\n    resolve: (value) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      isResolved = true;\n      resolver(value);\n    },\n    reject: (err) => {\n      clearTimeout(timeoutId);\n      isRejected = true;\n      rejector(err);\n    }\n  });\n}\n\n// src/util/assert.ts\nvar assert = (value, message) => {\n  if (!value) {\n    throw new Error(message);\n  }\n};\n\n// src/injected/Poller.ts\nvar MutationPoller = class {\n  #fn;\n  #root;\n  #observer;\n  #promise;\n  constructor(fn, root) {\n    this.#fn = fn;\n    this.#root = root;\n  }\n  async start() {\n    const promise = this.#promise = createDeferredPromise();\n    const result = await this.#fn();\n    if (result) {\n      promise.resolve(result);\n      return;\n    }\n    this.#observer = new MutationObserver(async () => {\n      const result2 = await this.#fn();\n      if (!result2) {\n        return;\n      }\n      promise.resolve(result2);\n      await this.stop();\n    });\n    this.#observer.observe(this.#root, {\n      childList: true,\n      subtree: true,\n      attributes: true\n    });\n  }\n  async stop() {\n    assert(this.#promise, \"Polling never started.\");\n    if (!this.#promise.finished()) {\n      this.#promise.reject(new Error(\"Polling stopped\"));\n    }\n    if (this.#observer) {\n      this.#observer.disconnect();\n      this.#observer = void 0;\n    }\n  }\n  result() {\n    assert(this.#promise, \"Polling never started.\");\n    return this.#promise;\n  }\n};\nvar RAFPoller = class {\n  #fn;\n  #promise;\n  constructor(fn) {\n    this.#fn = fn;\n  }\n  async start() {\n    const promise = this.#promise = createDeferredPromise();\n    const result = await this.#fn();\n    if (result) {\n      promise.resolve(result);\n      return;\n    }\n    const poll = async () => {\n      if (promise.finished()) {\n        return;\n      }\n      const result2 = await this.#fn();\n      if (!result2) {\n        window.requestAnimationFrame(poll);\n        return;\n      }\n      promise.resolve(result2);\n      await this.stop();\n    };\n    window.requestAnimationFrame(poll);\n  }\n  async stop() {\n    assert(this.#promise, \"Polling never started.\");\n    if (!this.#promise.finished()) {\n      this.#promise.reject(new Error(\"Polling stopped\"));\n    }\n  }\n  result() {\n    assert(this.#promise, \"Polling never started.\");\n    return this.#promise;\n  }\n};\nvar IntervalPoller = class {\n  #fn;\n  #ms;\n  #interval;\n  #promise;\n  constructor(fn, ms) {\n    this.#fn = fn;\n    this.#ms = ms;\n  }\n  async start() {\n    const promise = this.#promise = createDeferredPromise();\n    const result = await this.#fn();\n    if (result) {\n      promise.resolve(result);\n      return;\n    }\n    this.#interval = setInterval(async () => {\n      const result2 = await this.#fn();\n      if (!result2) {\n        return;\n      }\n      promise.resolve(result2);\n      await this.stop();\n    }, this.#ms);\n  }\n  async stop() {\n    assert(this.#promise, \"Polling never started.\");\n    if (!this.#promise.finished()) {\n      this.#promise.reject(new Error(\"Polling stopped\"));\n    }\n    if (this.#interval) {\n      clearInterval(this.#interval);\n      this.#interval = void 0;\n    }\n  }\n  result() {\n    assert(this.#promise, \"Polling never started.\");\n    return this.#promise;\n  }\n};\n\n// src/injected/TextContent.ts\nvar TRIVIAL_VALUE_INPUT_TYPES = /* @__PURE__ */ new Set([\"checkbox\", \"image\", \"radio\"]);\nvar isNonTrivialValueNode = (node) => {\n  if (node instanceof HTMLSelectElement) {\n    return true;\n  }\n  if (node instanceof HTMLTextAreaElement) {\n    return true;\n  }\n  if (node instanceof HTMLInputElement && !TRIVIAL_VALUE_INPUT_TYPES.has(node.type)) {\n    return true;\n  }\n  return false;\n};\nvar UNSUITABLE_NODE_NAMES = /* @__PURE__ */ new Set([\"SCRIPT\", \"STYLE\"]);\nvar isSuitableNodeForTextMatching = (node) => {\n  return !UNSUITABLE_NODE_NAMES.has(node.nodeName) && !document.head?.contains(node);\n};\nvar textContentCache = /* @__PURE__ */ new WeakMap();\nvar eraseFromCache = (node) => {\n  while (node) {\n    textContentCache.delete(node);\n    if (node instanceof ShadowRoot) {\n      node = node.host;\n    } else {\n      node = node.parentNode;\n    }\n  }\n};\nvar observedNodes = /* @__PURE__ */ new WeakSet();\nvar textChangeObserver = new MutationObserver((mutations) => {\n  for (const mutation of mutations) {\n    eraseFromCache(mutation.target);\n  }\n});\nvar createTextContent = (root) => {\n  let value = textContentCache.get(root);\n  if (value) {\n    return value;\n  }\n  value = { full: \"\", immediate: [] };\n  if (!isSuitableNodeForTextMatching(root)) {\n    return value;\n  }\n  let currentImmediate = \"\";\n  if (isNonTrivialValueNode(root)) {\n    value.full = root.value;\n    value.immediate.push(root.value);\n    root.addEventListener(\n      \"input\",\n      (event) => {\n        eraseFromCache(event.target);\n      },\n      { once: true, capture: true }\n    );\n  } else {\n    for (let child = root.firstChild; child; child = child.nextSibling) {\n      if (child.nodeType === Node.TEXT_NODE) {\n        value.full += child.nodeValue ?? \"\";\n        currentImmediate += child.nodeValue ?? \"\";\n        continue;\n      }\n      if (currentImmediate) {\n        value.immediate.push(currentImmediate);\n      }\n      currentImmediate = \"\";\n      if (child.nodeType === Node.ELEMENT_NODE) {\n        value.full += createTextContent(child).full;\n      }\n    }\n    if (currentImmediate) {\n      value.immediate.push(currentImmediate);\n    }\n    if (root instanceof Element && root.shadowRoot) {\n      value.full += createTextContent(root.shadowRoot).full;\n    }\n    if (!observedNodes.has(root)) {\n      textChangeObserver.observe(root, {\n        childList: true,\n        characterData: true\n      });\n      observedNodes.add(root);\n    }\n  }\n  textContentCache.set(root, value);\n  return value;\n};\n\n// src/injected/TextQuerySelector.ts\nvar TextQuerySelector_exports = {};\n__export(TextQuerySelector_exports, {\n  textQuerySelector: () => textQuerySelector,\n  textQuerySelectorAll: () => textQuerySelectorAll\n});\nvar textQuerySelector = (root, selector) => {\n  for (const node of root.childNodes) {\n    if (node instanceof Element && isSuitableNodeForTextMatching(node)) {\n      let matchedNode;\n      if (node.shadowRoot) {\n        matchedNode = textQuerySelector(node.shadowRoot, selector);\n      } else {\n        matchedNode = textQuerySelector(node, selector);\n      }\n      if (matchedNode) {\n        return matchedNode;\n      }\n    }\n  }\n  if (root instanceof Element) {\n    const textContent = createTextContent(root);\n    if (textContent.full.includes(selector)) {\n      return root;\n    }\n  }\n  return null;\n};\nvar textQuerySelectorAll = (root, selector) => {\n  let results = [];\n  for (const node of root.childNodes) {\n    if (node instanceof Element) {\n      let matchedNodes;\n      if (node.shadowRoot) {\n        matchedNodes = textQuerySelectorAll(node.shadowRoot, selector);\n      } else {\n        matchedNodes = textQuerySelectorAll(node, selector);\n      }\n      results = results.concat(matchedNodes);\n    }\n  }\n  if (results.length > 0) {\n    return results;\n  }\n  if (root instanceof Element) {\n    const textContent = createTextContent(root);\n    if (textContent.full.includes(selector)) {\n      return [root];\n    }\n  }\n  return [];\n};\n\n// src/injected/XPathQuerySelector.ts\nvar XPathQuerySelector_exports = {};\n__export(XPathQuerySelector_exports, {\n  xpathQuerySelector: () => xpathQuerySelector,\n  xpathQuerySelectorAll: () => xpathQuerySelectorAll\n});\nvar xpathQuerySelector = (root, selector) => {\n  const doc = root.ownerDocument || document;\n  const result = doc.evaluate(\n    selector,\n    root,\n    null,\n    XPathResult.FIRST_ORDERED_NODE_TYPE\n  );\n  return result.singleNodeValue;\n};\nvar xpathQuerySelectorAll = (root, selector) => {\n  const doc = root.ownerDocument || document;\n  const iterator = doc.evaluate(\n    selector,\n    root,\n    null,\n    XPathResult.ORDERED_NODE_ITERATOR_TYPE\n  );\n  const array = [];\n  let item;\n  while (item = iterator.iterateNext()) {\n    array.push(item);\n  }\n  return array;\n};\n\n// src/injected/PierceQuerySelector.ts\nvar PierceQuerySelector_exports = {};\n__export(PierceQuerySelector_exports, {\n  pierceQuerySelector: () => pierceQuerySelector,\n  pierceQuerySelectorAll: () => pierceQuerySelectorAll\n});\nvar pierceQuerySelector = (root, selector) => {\n  let found = null;\n  const search = (root2) => {\n    const iter = document.createTreeWalker(root2, NodeFilter.SHOW_ELEMENT);\n    do {\n      const currentNode = iter.currentNode;\n      if (currentNode.shadowRoot) {\n        search(currentNode.shadowRoot);\n      }\n      if (currentNode instanceof ShadowRoot) {\n        continue;\n      }\n      if (currentNode !== root2 && !found && currentNode.matches(selector)) {\n        found = currentNode;\n      }\n    } while (!found && iter.nextNode());\n  };\n  if (root instanceof Document) {\n    root = root.documentElement;\n  }\n  search(root);\n  return found;\n};\nvar pierceQuerySelectorAll = (element, selector) => {\n  const result = [];\n  const collect = (root) => {\n    const iter = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT);\n    do {\n      const currentNode = iter.currentNode;\n      if (currentNode.shadowRoot) {\n        collect(currentNode.shadowRoot);\n      }\n      if (currentNode instanceof ShadowRoot) {\n        continue;\n      }\n      if (currentNode !== root && currentNode.matches(selector)) {\n        result.push(currentNode);\n      }\n    } while (iter.nextNode());\n  };\n  if (element instanceof Document) {\n    element = element.documentElement;\n  }\n  collect(element);\n  return result;\n};\n\n// src/injected/util.ts\nvar util_exports = {};\n__export(util_exports, {\n  checkVisibility: () => checkVisibility,\n  createFunction: () => createFunction\n});\nvar createdFunctions = /* @__PURE__ */ new Map();\nvar createFunction = (functionValue) => {\n  let fn = createdFunctions.get(functionValue);\n  if (fn) {\n    return fn;\n  }\n  fn = new Function(`return ${functionValue}`)();\n  createdFunctions.set(functionValue, fn);\n  return fn;\n};\nvar HIDDEN_VISIBILITY_VALUES = [\"hidden\", \"collapse\"];\nvar checkVisibility = (node, visible) => {\n  if (!node) {\n    return visible === false;\n  }\n  if (visible === void 0) {\n    return node;\n  }\n  const element = node.nodeType === Node.TEXT_NODE ? node.parentElement : node;\n  const style = window.getComputedStyle(element);\n  const isVisible = style && !HIDDEN_VISIBILITY_VALUES.includes(style.visibility) && !isBoundingBoxEmpty(element);\n  return visible === isVisible ? node : false;\n};\nfunction isBoundingBoxEmpty(element) {\n  const rect = element.getBoundingClientRect();\n  return rect.width === 0 || rect.height === 0;\n}\n\n// src/injected/injected.ts\nvar PuppeteerUtil = Object.freeze({\n  ...util_exports,\n  ...TextQuerySelector_exports,\n  ...XPathQuerySelector_exports,\n  ...PierceQuerySelector_exports,\n  createDeferredPromise,\n  createTextContent,\n  IntervalPoller,\n  isSuitableNodeForTextMatching,\n  MutationPoller,\n  RAFPoller\n});\nvar injected_default = PuppeteerUtil;\n";
//# sourceMappingURL=injected.js.map
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/api/JSHandle.js
var JSHandle = __nccwpck_require__(2165);
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/LazyArg.js
var LazyArg = __nccwpck_require__(5532);
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/util.js
var util = __nccwpck_require__(1823);
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/ExecutionContext.js
/**
 * Copyright 2017 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var _ExecutionContext_instances, _ExecutionContext_puppeteerUtil, _ExecutionContext_evaluate;




/**
 * @public
 */
const EVALUATION_SCRIPT_URL = 'pptr://__puppeteer_evaluation_script__';
const SOURCE_URL_REGEX = /^[\040\t]*\/\/[@#] sourceURL=\s*(\S*?)\s*$/m;
/**
 * Represents a context for JavaScript execution.
 *
 * @example
 * A {@link Page} can have several execution contexts:
 *
 * - Each {@link Frame} of a {@link Page | page} has a "default" execution
 *   context that is always created after frame is attached to DOM. This context
 *   is returned by the {@link Frame.executionContext} method.
 * - Each {@link https://developer.chrome.com/extensions | Chrome extensions}
 *   creates additional execution contexts to isolate their code.
 *
 * @remarks
 * By definition, each context is isolated from one another, however they are
 * all able to manipulate non-JavaScript resources (such as DOM).
 *
 * @remarks
 * Besides pages, execution contexts can be found in
 * {@link WebWorker | workers}.
 *
 * @internal
 */
class ExecutionContext {
    /**
     * @internal
     */
    constructor(client, contextPayload, world) {
        _ExecutionContext_instances.add(this);
        _ExecutionContext_puppeteerUtil.set(this, void 0);
        this._client = client;
        this._world = world;
        this._contextId = contextPayload.id;
        this._contextName = contextPayload.name;
    }
    get puppeteerUtil() {
        if (!__classPrivateFieldGet(this, _ExecutionContext_puppeteerUtil, "f")) {
            __classPrivateFieldSet(this, _ExecutionContext_puppeteerUtil, this.evaluateHandle(`(() => {
            const module = {};
            ${source}
            return module.exports.default;
          })()`), "f");
        }
        return __classPrivateFieldGet(this, _ExecutionContext_puppeteerUtil, "f");
    }
    /**
     * Evaluates the given function.
     *
     * @example
     *
     * ```ts
     * const executionContext = await page.mainFrame().executionContext();
     * const result = await executionContext.evaluate(() => Promise.resolve(8 * 7))* ;
     * console.log(result); // prints "56"
     * ```
     *
     * @example
     * A string can also be passed in instead of a function:
     *
     * ```ts
     * console.log(await executionContext.evaluate('1 + 2')); // prints "3"
     * ```
     *
     * @example
     * Handles can also be passed as `args`. They resolve to their referenced object:
     *
     * ```ts
     * const oneHandle = await executionContext.evaluateHandle(() => 1);
     * const twoHandle = await executionContext.evaluateHandle(() => 2);
     * const result = await executionContext.evaluate(
     *   (a, b) => a + b,
     *   oneHandle,
     *   twoHandle
     * );
     * await oneHandle.dispose();
     * await twoHandle.dispose();
     * console.log(result); // prints '3'.
     * ```
     *
     * @param pageFunction - The function to evaluate.
     * @param args - Additional arguments to pass into the function.
     * @returns The result of evaluating the function. If the result is an object,
     * a vanilla object containing the serializable properties of the result is
     * returned.
     */
    async evaluate(pageFunction, ...args) {
        return await __classPrivateFieldGet(this, _ExecutionContext_instances, "m", _ExecutionContext_evaluate).call(this, true, pageFunction, ...args);
    }
    /**
     * Evaluates the given function.
     *
     * Unlike {@link ExecutionContext.evaluate | evaluate}, this method returns a
     * handle to the result of the function.
     *
     * This method may be better suited if the object cannot be serialized (e.g.
     * `Map`) and requires further manipulation.
     *
     * @example
     *
     * ```ts
     * const context = await page.mainFrame().executionContext();
     * const handle: JSHandle<typeof globalThis> = await context.evaluateHandle(
     *   () => Promise.resolve(self)
     * );
     * ```
     *
     * @example
     * A string can also be passed in instead of a function.
     *
     * ```ts
     * const handle: JSHandle<number> = await context.evaluateHandle('1 + 2');
     * ```
     *
     * @example
     * Handles can also be passed as `args`. They resolve to their referenced object:
     *
     * ```ts
     * const bodyHandle: ElementHandle<HTMLBodyElement> =
     *   await context.evaluateHandle(() => {
     *     return document.body;
     *   });
     * const stringHandle: JSHandle<string> = await context.evaluateHandle(
     *   body => body.innerHTML,
     *   body
     * );
     * console.log(await stringHandle.jsonValue()); // prints body's innerHTML
     * // Always dispose your garbage! :)
     * await bodyHandle.dispose();
     * await stringHandle.dispose();
     * ```
     *
     * @param pageFunction - The function to evaluate.
     * @param args - Additional arguments to pass into the function.
     * @returns A {@link JSHandle | handle} to the result of evaluating the
     * function. If the result is a `Node`, then this will return an
     * {@link ElementHandle | element handle}.
     */
    async evaluateHandle(pageFunction, ...args) {
        return __classPrivateFieldGet(this, _ExecutionContext_instances, "m", _ExecutionContext_evaluate).call(this, false, pageFunction, ...args);
    }
}
_ExecutionContext_puppeteerUtil = new WeakMap(), _ExecutionContext_instances = new WeakSet(), _ExecutionContext_evaluate = async function _ExecutionContext_evaluate(returnByValue, pageFunction, ...args) {
    const suffix = `//# sourceURL=${EVALUATION_SCRIPT_URL}`;
    if ((0,util/* isString */.HD)(pageFunction)) {
        const contextId = this._contextId;
        const expression = pageFunction;
        const expressionWithSourceUrl = SOURCE_URL_REGEX.test(expression)
            ? expression
            : expression + '\n' + suffix;
        const { exceptionDetails, result: remoteObject } = await this._client
            .send('Runtime.evaluate', {
            expression: expressionWithSourceUrl,
            contextId,
            returnByValue,
            awaitPromise: true,
            userGesture: true,
        })
            .catch(rewriteError);
        if (exceptionDetails) {
            throw new Error('Evaluation failed: ' + (0,util/* getExceptionMessage */.is)(exceptionDetails));
        }
        return returnByValue
            ? (0,util/* valueFromRemoteObject */.jV)(remoteObject)
            : (0,util/* createJSHandle */.tB)(this, remoteObject);
    }
    let callFunctionOnPromise;
    try {
        callFunctionOnPromise = this._client.send('Runtime.callFunctionOn', {
            functionDeclaration: (0,util/* stringifyFunction */.D)(pageFunction) + '\n' + suffix + '\n',
            executionContextId: this._contextId,
            arguments: await Promise.all(args.map(convertArgument.bind(this))),
            returnByValue,
            awaitPromise: true,
            userGesture: true,
        });
    }
    catch (error) {
        if (error instanceof TypeError &&
            error.message.startsWith('Converting circular structure to JSON')) {
            error.message += ' Recursive objects are not allowed.';
        }
        throw error;
    }
    const { exceptionDetails, result: remoteObject } = await callFunctionOnPromise.catch(rewriteError);
    if (exceptionDetails) {
        throw new Error('Evaluation failed: ' + (0,util/* getExceptionMessage */.is)(exceptionDetails));
    }
    return returnByValue
        ? (0,util/* valueFromRemoteObject */.jV)(remoteObject)
        : (0,util/* createJSHandle */.tB)(this, remoteObject);
    async function convertArgument(arg) {
        if (arg instanceof LazyArg/* LazyArg */.O) {
            arg = await arg.get(this);
        }
        if (typeof arg === 'bigint') {
            // eslint-disable-line valid-typeof
            return { unserializableValue: `${arg.toString()}n` };
        }
        if (Object.is(arg, -0)) {
            return { unserializableValue: '-0' };
        }
        if (Object.is(arg, Infinity)) {
            return { unserializableValue: 'Infinity' };
        }
        if (Object.is(arg, -Infinity)) {
            return { unserializableValue: '-Infinity' };
        }
        if (Object.is(arg, NaN)) {
            return { unserializableValue: 'NaN' };
        }
        const objectHandle = arg && arg instanceof JSHandle/* JSHandle */.c ? arg : null;
        if (objectHandle) {
            if (objectHandle.executionContext() !== this) {
                throw new Error('JSHandles can be evaluated only in the context they were created!');
            }
            if (objectHandle.disposed) {
                throw new Error('JSHandle is disposed!');
            }
            if (objectHandle.remoteObject().unserializableValue) {
                return {
                    unserializableValue: objectHandle.remoteObject().unserializableValue,
                };
            }
            if (!objectHandle.remoteObject().objectId) {
                return { value: objectHandle.remoteObject().value };
            }
            return { objectId: objectHandle.remoteObject().objectId };
        }
        return { value: arg };
    }
};
const rewriteError = (error) => {
    if (error.message.includes('Object reference chain is too long')) {
        return { result: { type: 'undefined' } };
    }
    if (error.message.includes("Object couldn't be returned by value")) {
        return { result: { type: 'undefined' } };
    }
    if (error.message.endsWith('Cannot find context with specified id') ||
        error.message.endsWith('Inspected target navigated or closed')) {
        throw new Error('Execution context was destroyed, most likely because of a navigation.');
    }
    throw error;
};
//# sourceMappingURL=ExecutionContext.js.map

/***/ }),

/***/ 5360:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "R": () => (/* binding */ Frame)
/* harmony export */ });
/* harmony import */ var _util_assert_js__WEBPACK_IMPORTED_MODULE_7__ = __nccwpck_require__(5172);
/* harmony import */ var _util_ErrorLike_js__WEBPACK_IMPORTED_MODULE_6__ = __nccwpck_require__(9713);
/* harmony import */ var _IsolatedWorld_js__WEBPACK_IMPORTED_MODULE_0__ = __nccwpck_require__(2860);
/* harmony import */ var _IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_1__ = __nccwpck_require__(6356);
/* harmony import */ var _LifecycleWatcher_js__WEBPACK_IMPORTED_MODULE_2__ = __nccwpck_require__(9518);
/* harmony import */ var _QueryHandler_js__WEBPACK_IMPORTED_MODULE_3__ = __nccwpck_require__(6402);
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_4__ = __nccwpck_require__(1823);
/* harmony import */ var _LazyArg_js__WEBPACK_IMPORTED_MODULE_5__ = __nccwpck_require__(5532);
/**
 * Copyright 2017 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _Frame_url, _Frame_detached, _Frame_client;








/**
 * Represents a DOM frame.
 *
 * To understand frames, you can think of frames as `<iframe>` elements. Just
 * like iframes, frames can be nested, and when JavaScript is executed in a
 * frame, the JavaScript does not effect frames inside the ambient frame the
 * JavaScript executes in.
 *
 * @example
 * At any point in time, {@link Page | pages} expose their current frame
 * tree via the {@link Page.mainFrame} and {@link Frame.childFrames} methods.
 *
 * @example
 * An example of dumping frame tree:
 *
 * ```ts
 * import puppeteer from 'puppeteer';
 *
 * (async () => {
 *   const browser = await puppeteer.launch();
 *   const page = await browser.newPage();
 *   await page.goto('https://www.google.com/chrome/browser/canary.html');
 *   dumpFrameTree(page.mainFrame(), '');
 *   await browser.close();
 *
 *   function dumpFrameTree(frame, indent) {
 *     console.log(indent + frame.url());
 *     for (const child of frame.childFrames()) {
 *       dumpFrameTree(child, indent + '  ');
 *     }
 *   }
 * })();
 * ```
 *
 * @example
 * An example of getting text from an iframe element:
 *
 * ```ts
 * const frame = page.frames().find(frame => frame.name() === 'myframe');
 * const text = await frame.$eval('.selector', element => element.textContent);
 * console.log(text);
 * ```
 *
 * @remarks
 * Frame lifecycles are controlled by three events that are all dispatched on
 * the parent {@link Frame.page | page}:
 *
 * - {@link PageEmittedEvents.FrameAttached}
 * - {@link PageEmittedEvents.FrameNavigated}
 * - {@link PageEmittedEvents.FrameDetached}
 *
 * @public
 */
class Frame {
    /**
     * @internal
     */
    constructor(frameManager, frameId, parentFrameId, client) {
        _Frame_url.set(this, '');
        _Frame_detached.set(this, false);
        _Frame_client.set(this, void 0);
        /**
         * @internal
         */
        this._loaderId = '';
        /**
         * @internal
         */
        this._hasStartedLoading = false;
        /**
         * @internal
         */
        this._lifecycleEvents = new Set();
        this._frameManager = frameManager;
        __classPrivateFieldSet(this, _Frame_url, '', "f");
        this._id = frameId;
        this._parentId = parentFrameId;
        __classPrivateFieldSet(this, _Frame_detached, false, "f");
        this._loaderId = '';
        this.updateClient(client);
    }
    /**
     * @internal
     */
    updateClient(client) {
        __classPrivateFieldSet(this, _Frame_client, client, "f");
        this.worlds = {
            [_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_1__/* .MAIN_WORLD */ .H]: new _IsolatedWorld_js__WEBPACK_IMPORTED_MODULE_0__/* .IsolatedWorld */ .E(this),
            [_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_1__/* .PUPPETEER_WORLD */ .R]: new _IsolatedWorld_js__WEBPACK_IMPORTED_MODULE_0__/* .IsolatedWorld */ .E(this),
        };
    }
    /**
     * @returns The page associated with the frame.
     */
    page() {
        return this._frameManager.page();
    }
    /**
     * @returns `true` if the frame is an out-of-process (OOP) frame. Otherwise,
     * `false`.
     */
    isOOPFrame() {
        return __classPrivateFieldGet(this, _Frame_client, "f") !== this._frameManager.client;
    }
    /**
     * Navigates a frame to the given url.
     *
     * @remarks
     * Navigation to `about:blank` or navigation to the same URL with a different
     * hash will succeed and return `null`.
     *
     * :::warning
     *
     * Headless mode doesn't support navigation to a PDF document. See the {@link
     * https://bugs.chromium.org/p/chromium/issues/detail?id=761295 | upstream
     * issue}.
     *
     * :::
     *
     * @param url - the URL to navigate the frame to. This should include the
     * scheme, e.g. `https://`.
     * @param options - navigation options. `waitUntil` is useful to define when
     * the navigation should be considered successful - see the docs for
     * {@link PuppeteerLifeCycleEvent} for more details.
     *
     * @returns A promise which resolves to the main resource response. In case of
     * multiple redirects, the navigation will resolve with the response of the
     * last redirect.
     * @throws This method will throw an error if:
     *
     * - there's an SSL error (e.g. in case of self-signed certificates).
     * - target URL is invalid.
     * - the `timeout` is exceeded during navigation.
     * - the remote server does not respond or is unreachable.
     * - the main resource failed to load.
     *
     * This method will not throw an error when any valid HTTP status code is
     * returned by the remote server, including 404 "Not Found" and 500 "Internal
     * Server Error". The status code for such responses can be retrieved by
     * calling {@link HTTPResponse.status}.
     */
    async goto(url, options = {}) {
        const { referer = this._frameManager.networkManager.extraHTTPHeaders()['referer'], referrerPolicy = this._frameManager.networkManager.extraHTTPHeaders()['referer-policy'], waitUntil = ['load'], timeout = this._frameManager.timeoutSettings.navigationTimeout(), } = options;
        let ensureNewDocumentNavigation = false;
        const watcher = new _LifecycleWatcher_js__WEBPACK_IMPORTED_MODULE_2__/* .LifecycleWatcher */ .C(this._frameManager, this, waitUntil, timeout);
        let error = await Promise.race([
            navigate(__classPrivateFieldGet(this, _Frame_client, "f"), url, referer, referrerPolicy, this._id),
            watcher.timeoutOrTerminationPromise(),
        ]);
        if (!error) {
            error = await Promise.race([
                watcher.timeoutOrTerminationPromise(),
                ensureNewDocumentNavigation
                    ? watcher.newDocumentNavigationPromise()
                    : watcher.sameDocumentNavigationPromise(),
            ]);
        }
        try {
            if (error) {
                throw error;
            }
            return await watcher.navigationResponse();
        }
        finally {
            watcher.dispose();
        }
        async function navigate(client, url, referrer, referrerPolicy, frameId) {
            try {
                const response = await client.send('Page.navigate', {
                    url,
                    referrer,
                    frameId,
                    referrerPolicy,
                });
                ensureNewDocumentNavigation = !!response.loaderId;
                if (response.errorText === 'net::ERR_HTTP_RESPONSE_CODE_FAILURE') {
                    return null;
                }
                return response.errorText
                    ? new Error(`${response.errorText} at ${url}`)
                    : null;
            }
            catch (error) {
                if ((0,_util_ErrorLike_js__WEBPACK_IMPORTED_MODULE_6__/* .isErrorLike */ .x)(error)) {
                    return error;
                }
                throw error;
            }
        }
    }
    /**
     * Waits for the frame to navigate. It is useful for when you run code which
     * will indirectly cause the frame to navigate.
     *
     * Usage of the
     * {@link https://developer.mozilla.org/en-US/docs/Web/API/History_API | History API}
     * to change the URL is considered a navigation.
     *
     * @example
     *
     * ```ts
     * const [response] = await Promise.all([
     *   // The navigation promise resolves after navigation has finished
     *   frame.waitForNavigation(),
     *   // Clicking the link will indirectly cause a navigation
     *   frame.click('a.my-link'),
     * ]);
     * ```
     *
     * @param options - options to configure when the navigation is consided
     * finished.
     * @returns a promise that resolves when the frame navigates to a new URL.
     */
    async waitForNavigation(options = {}) {
        const { waitUntil = ['load'], timeout = this._frameManager.timeoutSettings.navigationTimeout(), } = options;
        const watcher = new _LifecycleWatcher_js__WEBPACK_IMPORTED_MODULE_2__/* .LifecycleWatcher */ .C(this._frameManager, this, waitUntil, timeout);
        const error = await Promise.race([
            watcher.timeoutOrTerminationPromise(),
            watcher.sameDocumentNavigationPromise(),
            watcher.newDocumentNavigationPromise(),
        ]);
        try {
            if (error) {
                throw error;
            }
            return await watcher.navigationResponse();
        }
        finally {
            watcher.dispose();
        }
    }
    /**
     * @internal
     */
    _client() {
        return __classPrivateFieldGet(this, _Frame_client, "f");
    }
    /**
     * @internal
     */
    executionContext() {
        return this.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_1__/* .MAIN_WORLD */ .H].executionContext();
    }
    /**
     * Behaves identically to {@link Page.evaluateHandle} except it's run within
     * the context of this frame.
     *
     * @see {@link Page.evaluateHandle} for details.
     */
    async evaluateHandle(pageFunction, ...args) {
        return this.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_1__/* .MAIN_WORLD */ .H].evaluateHandle(pageFunction, ...args);
    }
    /**
     * Behaves identically to {@link Page.evaluate} except it's run within the
     * the context of this frame.
     *
     * @see {@link Page.evaluate} for details.
     */
    async evaluate(pageFunction, ...args) {
        return this.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_1__/* .MAIN_WORLD */ .H].evaluate(pageFunction, ...args);
    }
    /**
     * Queries the frame for an element matching the given selector.
     *
     * @param selector - The selector to query for.
     * @returns A {@link ElementHandle | element handle} to the first element
     * matching the given selector. Otherwise, `null`.
     */
    async $(selector) {
        return this.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_1__/* .MAIN_WORLD */ .H].$(selector);
    }
    /**
     * Queries the frame for all elements matching the given selector.
     *
     * @param selector - The selector to query for.
     * @returns An array of {@link ElementHandle | element handles} that point to
     * elements matching the given selector.
     */
    async $$(selector) {
        return this.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_1__/* .MAIN_WORLD */ .H].$$(selector);
    }
    /**
     * Runs the given function on the first element matching the given selector in
     * the frame.
     *
     * If the given function returns a promise, then this method will wait till
     * the promise resolves.
     *
     * @example
     *
     * ```ts
     * const searchValue = await frame.$eval('#search', el => el.value);
     * ```
     *
     * @param selector - The selector to query for.
     * @param pageFunction - The function to be evaluated in the frame's context.
     * The first element matching the selector will be passed to the function as
     * its first argument.
     * @param args - Additional arguments to pass to `pageFunction`.
     * @returns A promise to the result of the function.
     */
    async $eval(selector, pageFunction, ...args) {
        return this.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_1__/* .MAIN_WORLD */ .H].$eval(selector, pageFunction, ...args);
    }
    /**
     * Runs the given function on an array of elements matching the given selector
     * in the frame.
     *
     * If the given function returns a promise, then this method will wait till
     * the promise resolves.
     *
     * @example
     *
     * ```js
     * const divsCounts = await frame.$$eval('div', divs => divs.length);
     * ```
     *
     * @param selector - The selector to query for.
     * @param pageFunction - The function to be evaluated in the frame's context.
     * An array of elements matching the given selector will be passed to the
     * function as its first argument.
     * @param args - Additional arguments to pass to `pageFunction`.
     * @returns A promise to the result of the function.
     */
    async $$eval(selector, pageFunction, ...args) {
        return this.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_1__/* .MAIN_WORLD */ .H].$$eval(selector, pageFunction, ...args);
    }
    /**
     * @deprecated Use {@link Frame.$$} with the `xpath` prefix.
     *
     * Example: `await frame.$$('xpath/' + xpathExpression)`
     *
     * This method evaluates the given XPath expression and returns the results.
     * If `xpath` starts with `//` instead of `.//`, the dot will be appended
     * automatically.
     * @param expression - the XPath expression to evaluate.
     */
    async $x(expression) {
        return this.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_1__/* .MAIN_WORLD */ .H].$x(expression);
    }
    /**
     * Waits for an element matching the given selector to appear in the frame.
     *
     * This method works across navigations.
     *
     * @example
     *
     * ```ts
     * import puppeteer from 'puppeteer';
     *
     * (async () => {
     *   const browser = await puppeteer.launch();
     *   const page = await browser.newPage();
     *   let currentURL;
     *   page
     *     .mainFrame()
     *     .waitForSelector('img')
     *     .then(() => console.log('First URL with image: ' + currentURL));
     *
     *   for (currentURL of [
     *     'https://example.com',
     *     'https://google.com',
     *     'https://bbc.com',
     *   ]) {
     *     await page.goto(currentURL);
     *   }
     *   await browser.close();
     * })();
     * ```
     *
     * @param selector - The selector to query and wait for.
     * @param options - Options for customizing waiting behavior.
     * @returns An element matching the given selector.
     * @throws Throws if an element matching the given selector doesn't appear.
     */
    async waitForSelector(selector, options = {}) {
        const { updatedSelector, queryHandler } = (0,_QueryHandler_js__WEBPACK_IMPORTED_MODULE_3__/* .getQueryHandlerAndSelector */ .rB)(selector);
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_7__/* .assert */ .h)(queryHandler.waitFor, 'Query handler does not support waiting');
        return (await queryHandler.waitFor(this, updatedSelector, options));
    }
    /**
     * @deprecated Use {@link Frame.waitForSelector} with the `xpath` prefix.
     *
     * Example: `await frame.waitForSelector('xpath/' + xpathExpression)`
     *
     * The method evaluates the XPath expression relative to the Frame.
     * If `xpath` starts with `//` instead of `.//`, the dot will be appended
     * automatically.
     *
     * Wait for the `xpath` to appear in page. If at the moment of calling the
     * method the `xpath` already exists, the method will return immediately. If
     * the xpath doesn't appear after the `timeout` milliseconds of waiting, the
     * function will throw.
     *
     * For a code example, see the example for {@link Frame.waitForSelector}. That
     * function behaves identically other than taking a CSS selector rather than
     * an XPath.
     *
     * @param xpath - the XPath expression to wait for.
     * @param options - options to configure the visibility of the element and how
     * long to wait before timing out.
     */
    async waitForXPath(xpath, options = {}) {
        if (xpath.startsWith('//')) {
            xpath = `.${xpath}`;
        }
        return this.waitForSelector(`xpath/${xpath}`, options);
    }
    /**
     * @example
     * The `waitForFunction` can be used to observe viewport size change:
     *
     * ```ts
     * import puppeteer from 'puppeteer';
     *
     * (async () => {
     * .  const browser = await puppeteer.launch();
     * .  const page = await browser.newPage();
     * .  const watchDog = page.mainFrame().waitForFunction('window.innerWidth < 100');
     * .  page.setViewport({width: 50, height: 50});
     * .  await watchDog;
     * .  await browser.close();
     * })();
     * ```
     *
     * To pass arguments from Node.js to the predicate of `page.waitForFunction` function:
     *
     * ```ts
     * const selector = '.foo';
     * await frame.waitForFunction(
     *   selector => !!document.querySelector(selector),
     *   {}, // empty options object
     *   selector
     * );
     * ```
     *
     * @param pageFunction - the function to evaluate in the frame context.
     * @param options - options to configure the polling method and timeout.
     * @param args - arguments to pass to the `pageFunction`.
     * @returns the promise which resolve when the `pageFunction` returns a truthy value.
     */
    waitForFunction(pageFunction, options = {}, ...args) {
        return this.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_1__/* .MAIN_WORLD */ .H].waitForFunction(pageFunction, options, ...args);
    }
    /**
     * @returns The full HTML contents of the frame, including the DOCTYPE.
     */
    async content() {
        return this.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_1__/* .PUPPETEER_WORLD */ .R].content();
    }
    /**
     * Set the content of the frame.
     *
     * @param html - HTML markup to assign to the page.
     * @param options - Options to configure how long before timing out and at
     * what point to consider the content setting successful.
     */
    async setContent(html, options = {}) {
        return this.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_1__/* .PUPPETEER_WORLD */ .R].setContent(html, options);
    }
    /**
     * @returns The frame's `name` attribute as specified in the tag.
     *
     * @remarks
     * If the name is empty, it returns the `id` attribute instead.
     *
     * @remarks
     * This value is calculated once when the frame is created, and will not
     * update if the attribute is changed later.
     */
    name() {
        return this._name || '';
    }
    /**
     * @returns The frame's URL.
     */
    url() {
        return __classPrivateFieldGet(this, _Frame_url, "f");
    }
    /**
     * @returns The parent frame, if any. Detached and main frames return `null`.
     */
    parentFrame() {
        return this._frameManager._frameTree.parentFrame(this._id) || null;
    }
    /**
     * @returns An array of child frames.
     */
    childFrames() {
        return this._frameManager._frameTree.childFrames(this._id);
    }
    /**
     * @returns `true` if the frame has been detached. Otherwise, `false`.
     */
    isDetached() {
        return __classPrivateFieldGet(this, _Frame_detached, "f");
    }
    /**
     * Adds a `<script>` tag into the page with the desired url or content.
     *
     * @param options - Options for the script.
     * @returns An {@link ElementHandle | element handle} to the injected
     * `<script>` element.
     */
    async addScriptTag(options) {
        let { content = '', type } = options;
        const { path } = options;
        if (+!!options.url + +!!path + +!!content !== 1) {
            throw new Error('Exactly one of `url`, `path`, or `content` must be specified.');
        }
        if (path) {
            let fs;
            try {
                fs = (await Promise.resolve(/* import() */).then(__nccwpck_require__.t.bind(__nccwpck_require__, 7147, 19))).promises;
            }
            catch (error) {
                if (error instanceof TypeError) {
                    throw new Error('Can only pass a file path in a Node-like environment.');
                }
                throw error;
            }
            content = await fs.readFile(path, 'utf8');
            content += `//# sourceURL=${path.replace(/\n/g, '')}`;
        }
        type = type !== null && type !== void 0 ? type : 'text/javascript';
        return this.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_1__/* .MAIN_WORLD */ .H].transferHandle(await this.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_1__/* .PUPPETEER_WORLD */ .R].evaluateHandle(async ({ createDeferredPromise }, { url, id, type, content }) => {
            const promise = createDeferredPromise();
            const script = document.createElement('script');
            script.type = type;
            script.text = content;
            if (url) {
                script.src = url;
                script.addEventListener('load', () => {
                    return promise.resolve();
                }, { once: true });
                script.addEventListener('error', event => {
                    var _a;
                    promise.reject(new Error((_a = event.message) !== null && _a !== void 0 ? _a : 'Could not load script'));
                }, { once: true });
            }
            else {
                promise.resolve();
            }
            if (id) {
                script.id = id;
            }
            document.head.appendChild(script);
            await promise;
            return script;
        }, _LazyArg_js__WEBPACK_IMPORTED_MODULE_5__/* .LazyArg.create */ .O.create(context => {
            return context.puppeteerUtil;
        }), { ...options, type, content }));
    }
    async addStyleTag(options) {
        let { content = '' } = options;
        const { path } = options;
        if (+!!options.url + +!!path + +!!content !== 1) {
            throw new Error('Exactly one of `url`, `path`, or `content` must be specified.');
        }
        if (path) {
            let fs;
            try {
                fs = (await (0,_util_js__WEBPACK_IMPORTED_MODULE_4__/* .importFS */ .FX)()).promises;
            }
            catch (error) {
                if (error instanceof TypeError) {
                    throw new Error('Can only pass a file path in a Node-like environment.');
                }
                throw error;
            }
            content = await fs.readFile(path, 'utf8');
            content += '/*# sourceURL=' + path.replace(/\n/g, '') + '*/';
            options.content = content;
        }
        return this.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_1__/* .MAIN_WORLD */ .H].transferHandle(await this.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_1__/* .PUPPETEER_WORLD */ .R].evaluateHandle(async ({ createDeferredPromise }, { url, content }) => {
            const promise = createDeferredPromise();
            let element;
            if (!url) {
                element = document.createElement('style');
                element.appendChild(document.createTextNode(content));
            }
            else {
                const link = document.createElement('link');
                link.rel = 'stylesheet';
                link.href = url;
                element = link;
            }
            element.addEventListener('load', () => {
                promise.resolve();
            }, { once: true });
            element.addEventListener('error', event => {
                var _a;
                promise.reject(new Error((_a = event.message) !== null && _a !== void 0 ? _a : 'Could not load style'));
            }, { once: true });
            document.head.appendChild(element);
            await promise;
            return element;
        }, _LazyArg_js__WEBPACK_IMPORTED_MODULE_5__/* .LazyArg.create */ .O.create(context => {
            return context.puppeteerUtil;
        }), options));
    }
    /**
     * Clicks the first element found that matches `selector`.
     *
     * @remarks
     * If `click()` triggers a navigation event and there's a separate
     * `page.waitForNavigation()` promise to be resolved, you may end up with a
     * race condition that yields unexpected results. The correct pattern for
     * click and wait for navigation is the following:
     *
     * ```ts
     * const [response] = await Promise.all([
     *   page.waitForNavigation(waitOptions),
     *   frame.click(selector, clickOptions),
     * ]);
     * ```
     *
     * @param selector - The selector to query for.
     */
    async click(selector, options = {}) {
        return this.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_1__/* .PUPPETEER_WORLD */ .R].click(selector, options);
    }
    /**
     * Focuses the first element that matches the `selector`.
     *
     * @param selector - The selector to query for.
     * @throws Throws if there's no element matching `selector`.
     */
    async focus(selector) {
        return this.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_1__/* .PUPPETEER_WORLD */ .R].focus(selector);
    }
    /**
     * Hovers the pointer over the center of the first element that matches the
     * `selector`.
     *
     * @param selector - The selector to query for.
     * @throws Throws if there's no element matching `selector`.
     */
    async hover(selector) {
        return this.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_1__/* .PUPPETEER_WORLD */ .R].hover(selector);
    }
    /**
     * Selects a set of value on the first `<select>` element that matches the
     * `selector`.
     *
     * @example
     *
     * ```ts
     * frame.select('select#colors', 'blue'); // single selection
     * frame.select('select#colors', 'red', 'green', 'blue'); // multiple selections
     * ```
     *
     * @param selector - The selector to query for.
     * @param values - The array of values to select. If the `<select>` has the
     * `multiple` attribute, all values are considered, otherwise only the first
     * one is taken into account.
     * @returns the list of values that were successfully selected.
     * @throws Throws if there's no `<select>` matching `selector`.
     */
    select(selector, ...values) {
        return this.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_1__/* .PUPPETEER_WORLD */ .R].select(selector, ...values);
    }
    /**
     * Taps the first element that matches the `selector`.
     *
     * @param selector - The selector to query for.
     * @throws Throws if there's no element matching `selector`.
     */
    async tap(selector) {
        return this.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_1__/* .PUPPETEER_WORLD */ .R].tap(selector);
    }
    /**
     * Sends a `keydown`, `keypress`/`input`, and `keyup` event for each character
     * in the text.
     *
     * @remarks
     * To press a special key, like `Control` or `ArrowDown`, use
     * {@link Keyboard.press}.
     *
     * @example
     *
     * ```ts
     * await frame.type('#mytextarea', 'Hello'); // Types instantly
     * await frame.type('#mytextarea', 'World', {delay: 100}); // Types slower, like a user
     * ```
     *
     * @param selector - the selector for the element to type into. If there are
     * multiple the first will be used.
     * @param text - text to type into the element
     * @param options - takes one option, `delay`, which sets the time to wait
     * between key presses in milliseconds. Defaults to `0`.
     */
    async type(selector, text, options) {
        return this.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_1__/* .PUPPETEER_WORLD */ .R].type(selector, text, options);
    }
    /**
     * @deprecated Replace with `new Promise(r => setTimeout(r, milliseconds));`.
     *
     * Causes your script to wait for the given number of milliseconds.
     *
     * @remarks
     * It's generally recommended to not wait for a number of seconds, but instead
     * use {@link Frame.waitForSelector}, {@link Frame.waitForXPath} or
     * {@link Frame.waitForFunction} to wait for exactly the conditions you want.
     *
     * @example
     *
     * Wait for 1 second:
     *
     * ```ts
     * await frame.waitForTimeout(1000);
     * ```
     *
     * @param milliseconds - the number of milliseconds to wait.
     */
    waitForTimeout(milliseconds) {
        return new Promise(resolve => {
            setTimeout(resolve, milliseconds);
        });
    }
    /**
     * @returns the frame's title.
     */
    async title() {
        return this.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_1__/* .PUPPETEER_WORLD */ .R].title();
    }
    /**
     * @internal
     */
    _navigated(framePayload) {
        this._name = framePayload.name;
        __classPrivateFieldSet(this, _Frame_url, `${framePayload.url}${framePayload.urlFragment || ''}`, "f");
    }
    /**
     * @internal
     */
    _navigatedWithinDocument(url) {
        __classPrivateFieldSet(this, _Frame_url, url, "f");
    }
    /**
     * @internal
     */
    _onLifecycleEvent(loaderId, name) {
        if (name === 'init') {
            this._loaderId = loaderId;
            this._lifecycleEvents.clear();
        }
        this._lifecycleEvents.add(name);
    }
    /**
     * @internal
     */
    _onLoadingStopped() {
        this._lifecycleEvents.add('DOMContentLoaded');
        this._lifecycleEvents.add('load');
    }
    /**
     * @internal
     */
    _onLoadingStarted() {
        this._hasStartedLoading = true;
    }
    /**
     * @internal
     */
    _detach() {
        __classPrivateFieldSet(this, _Frame_detached, true, "f");
        this.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_1__/* .MAIN_WORLD */ .H]._detach();
        this.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_1__/* .PUPPETEER_WORLD */ .R]._detach();
    }
}
_Frame_url = new WeakMap(), _Frame_detached = new WeakMap(), _Frame_client = new WeakMap();
//# sourceMappingURL=Frame.js.map

/***/ }),

/***/ 3918:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "G": () => (/* binding */ FrameManagerEmittedEvents),
/* harmony export */   "R": () => (/* binding */ FrameManager)
/* harmony export */ });
/* harmony import */ var _util_assert_js__WEBPACK_IMPORTED_MODULE_9__ = __nccwpck_require__(5172);
/* harmony import */ var _util_ErrorLike_js__WEBPACK_IMPORTED_MODULE_8__ = __nccwpck_require__(9713);
/* harmony import */ var _Connection_js__WEBPACK_IMPORTED_MODULE_0__ = __nccwpck_require__(9432);
/* harmony import */ var _EventEmitter_js__WEBPACK_IMPORTED_MODULE_7__ = __nccwpck_require__(8856);
/* harmony import */ var _ExecutionContext_js__WEBPACK_IMPORTED_MODULE_1__ = __nccwpck_require__(7365);
/* harmony import */ var _Frame_js__WEBPACK_IMPORTED_MODULE_2__ = __nccwpck_require__(5360);
/* harmony import */ var _FrameTree_js__WEBPACK_IMPORTED_MODULE_3__ = __nccwpck_require__(3832);
/* harmony import */ var _IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_4__ = __nccwpck_require__(6356);
/* harmony import */ var _NetworkManager_js__WEBPACK_IMPORTED_MODULE_5__ = __nccwpck_require__(2765);
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_6__ = __nccwpck_require__(1823);
/**
 * Copyright 2017 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var _FrameManager_instances, _FrameManager_page, _FrameManager_networkManager, _FrameManager_timeoutSettings, _FrameManager_contextIdToContext, _FrameManager_isolatedWorlds, _FrameManager_client, _FrameManager_frameNavigatedReceived, _FrameManager_onLifecycleEvent, _FrameManager_onFrameStartedLoading, _FrameManager_onFrameStoppedLoading, _FrameManager_handleFrameTree, _FrameManager_onFrameAttached, _FrameManager_onFrameNavigated, _FrameManager_createIsolatedWorld, _FrameManager_onFrameNavigatedWithinDocument, _FrameManager_onFrameDetached, _FrameManager_onExecutionContextCreated, _FrameManager_onExecutionContextDestroyed, _FrameManager_onExecutionContextsCleared, _FrameManager_removeFramesRecursively;










const UTILITY_WORLD_NAME = '__puppeteer_utility_world__';
/**
 * We use symbols to prevent external parties listening to these events.
 * They are internal to Puppeteer.
 *
 * @internal
 */
const FrameManagerEmittedEvents = {
    FrameAttached: Symbol('FrameManager.FrameAttached'),
    FrameNavigated: Symbol('FrameManager.FrameNavigated'),
    FrameDetached: Symbol('FrameManager.FrameDetached'),
    FrameSwapped: Symbol('FrameManager.FrameSwapped'),
    LifecycleEvent: Symbol('FrameManager.LifecycleEvent'),
    FrameNavigatedWithinDocument: Symbol('FrameManager.FrameNavigatedWithinDocument'),
    ExecutionContextCreated: Symbol('FrameManager.ExecutionContextCreated'),
    ExecutionContextDestroyed: Symbol('FrameManager.ExecutionContextDestroyed'),
};
/**
 * A frame manager manages the frames for a given {@link Page | page}.
 *
 * @internal
 */
class FrameManager extends _EventEmitter_js__WEBPACK_IMPORTED_MODULE_7__/* .EventEmitter */ .v {
    get timeoutSettings() {
        return __classPrivateFieldGet(this, _FrameManager_timeoutSettings, "f");
    }
    get networkManager() {
        return __classPrivateFieldGet(this, _FrameManager_networkManager, "f");
    }
    get client() {
        return __classPrivateFieldGet(this, _FrameManager_client, "f");
    }
    constructor(client, page, ignoreHTTPSErrors, timeoutSettings) {
        super();
        _FrameManager_instances.add(this);
        _FrameManager_page.set(this, void 0);
        _FrameManager_networkManager.set(this, void 0);
        _FrameManager_timeoutSettings.set(this, void 0);
        _FrameManager_contextIdToContext.set(this, new Map());
        _FrameManager_isolatedWorlds.set(this, new Set());
        _FrameManager_client.set(this, void 0);
        /**
         * @internal
         */
        this._frameTree = new _FrameTree_js__WEBPACK_IMPORTED_MODULE_3__/* .FrameTree */ .W();
        /**
         * Set of frame IDs stored to indicate if a frame has received a
         * frameNavigated event so that frame tree responses could be ignored as the
         * frameNavigated event usually contains the latest information.
         */
        _FrameManager_frameNavigatedReceived.set(this, new Set());
        __classPrivateFieldSet(this, _FrameManager_client, client, "f");
        __classPrivateFieldSet(this, _FrameManager_page, page, "f");
        __classPrivateFieldSet(this, _FrameManager_networkManager, new _NetworkManager_js__WEBPACK_IMPORTED_MODULE_5__/* .NetworkManager */ .r(client, ignoreHTTPSErrors, this), "f");
        __classPrivateFieldSet(this, _FrameManager_timeoutSettings, timeoutSettings, "f");
        this.setupEventListeners(__classPrivateFieldGet(this, _FrameManager_client, "f"));
    }
    setupEventListeners(session) {
        session.on('Page.frameAttached', event => {
            __classPrivateFieldGet(this, _FrameManager_instances, "m", _FrameManager_onFrameAttached).call(this, session, event.frameId, event.parentFrameId);
        });
        session.on('Page.frameNavigated', event => {
            __classPrivateFieldGet(this, _FrameManager_frameNavigatedReceived, "f").add(event.frame.id);
            __classPrivateFieldGet(this, _FrameManager_instances, "m", _FrameManager_onFrameNavigated).call(this, event.frame);
        });
        session.on('Page.navigatedWithinDocument', event => {
            __classPrivateFieldGet(this, _FrameManager_instances, "m", _FrameManager_onFrameNavigatedWithinDocument).call(this, event.frameId, event.url);
        });
        session.on('Page.frameDetached', (event) => {
            __classPrivateFieldGet(this, _FrameManager_instances, "m", _FrameManager_onFrameDetached).call(this, event.frameId, event.reason);
        });
        session.on('Page.frameStartedLoading', event => {
            __classPrivateFieldGet(this, _FrameManager_instances, "m", _FrameManager_onFrameStartedLoading).call(this, event.frameId);
        });
        session.on('Page.frameStoppedLoading', event => {
            __classPrivateFieldGet(this, _FrameManager_instances, "m", _FrameManager_onFrameStoppedLoading).call(this, event.frameId);
        });
        session.on('Runtime.executionContextCreated', event => {
            __classPrivateFieldGet(this, _FrameManager_instances, "m", _FrameManager_onExecutionContextCreated).call(this, event.context, session);
        });
        session.on('Runtime.executionContextDestroyed', event => {
            __classPrivateFieldGet(this, _FrameManager_instances, "m", _FrameManager_onExecutionContextDestroyed).call(this, event.executionContextId, session);
        });
        session.on('Runtime.executionContextsCleared', () => {
            __classPrivateFieldGet(this, _FrameManager_instances, "m", _FrameManager_onExecutionContextsCleared).call(this, session);
        });
        session.on('Page.lifecycleEvent', event => {
            __classPrivateFieldGet(this, _FrameManager_instances, "m", _FrameManager_onLifecycleEvent).call(this, event);
        });
    }
    async initialize(client = __classPrivateFieldGet(this, _FrameManager_client, "f")) {
        try {
            const result = await Promise.all([
                client.send('Page.enable'),
                client.send('Page.getFrameTree'),
            ]);
            const { frameTree } = result[1];
            __classPrivateFieldGet(this, _FrameManager_instances, "m", _FrameManager_handleFrameTree).call(this, client, frameTree);
            await Promise.all([
                client.send('Page.setLifecycleEventsEnabled', { enabled: true }),
                client.send('Runtime.enable').then(() => {
                    return __classPrivateFieldGet(this, _FrameManager_instances, "m", _FrameManager_createIsolatedWorld).call(this, client, UTILITY_WORLD_NAME);
                }),
                // TODO: Network manager is not aware of OOP iframes yet.
                client === __classPrivateFieldGet(this, _FrameManager_client, "f")
                    ? __classPrivateFieldGet(this, _FrameManager_networkManager, "f").initialize()
                    : Promise.resolve(),
            ]);
        }
        catch (error) {
            // The target might have been closed before the initialization finished.
            if ((0,_util_ErrorLike_js__WEBPACK_IMPORTED_MODULE_8__/* .isErrorLike */ .x)(error) && (0,_Connection_js__WEBPACK_IMPORTED_MODULE_0__/* .isTargetClosedError */ .lK)(error)) {
                return;
            }
            throw error;
        }
    }
    executionContextById(contextId, session = __classPrivateFieldGet(this, _FrameManager_client, "f")) {
        const context = this.getExecutionContextById(contextId, session);
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_9__/* .assert */ .h)(context, 'INTERNAL ERROR: missing context with id = ' + contextId);
        return context;
    }
    getExecutionContextById(contextId, session = __classPrivateFieldGet(this, _FrameManager_client, "f")) {
        return __classPrivateFieldGet(this, _FrameManager_contextIdToContext, "f").get(`${session.id()}:${contextId}`);
    }
    page() {
        return __classPrivateFieldGet(this, _FrameManager_page, "f");
    }
    mainFrame() {
        const mainFrame = this._frameTree.getMainFrame();
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_9__/* .assert */ .h)(mainFrame, 'Requesting main frame too early!');
        return mainFrame;
    }
    frames() {
        return Array.from(this._frameTree.frames());
    }
    frame(frameId) {
        return this._frameTree.getById(frameId) || null;
    }
    onAttachedToTarget(target) {
        if (target._getTargetInfo().type !== 'iframe') {
            return;
        }
        const frame = this.frame(target._getTargetInfo().targetId);
        if (frame) {
            frame.updateClient(target._session());
        }
        this.setupEventListeners(target._session());
        this.initialize(target._session());
    }
}
_FrameManager_page = new WeakMap(), _FrameManager_networkManager = new WeakMap(), _FrameManager_timeoutSettings = new WeakMap(), _FrameManager_contextIdToContext = new WeakMap(), _FrameManager_isolatedWorlds = new WeakMap(), _FrameManager_client = new WeakMap(), _FrameManager_frameNavigatedReceived = new WeakMap(), _FrameManager_instances = new WeakSet(), _FrameManager_onLifecycleEvent = function _FrameManager_onLifecycleEvent(event) {
    const frame = this.frame(event.frameId);
    if (!frame) {
        return;
    }
    frame._onLifecycleEvent(event.loaderId, event.name);
    this.emit(FrameManagerEmittedEvents.LifecycleEvent, frame);
}, _FrameManager_onFrameStartedLoading = function _FrameManager_onFrameStartedLoading(frameId) {
    const frame = this.frame(frameId);
    if (!frame) {
        return;
    }
    frame._onLoadingStarted();
}, _FrameManager_onFrameStoppedLoading = function _FrameManager_onFrameStoppedLoading(frameId) {
    const frame = this.frame(frameId);
    if (!frame) {
        return;
    }
    frame._onLoadingStopped();
    this.emit(FrameManagerEmittedEvents.LifecycleEvent, frame);
}, _FrameManager_handleFrameTree = function _FrameManager_handleFrameTree(session, frameTree) {
    if (frameTree.frame.parentId) {
        __classPrivateFieldGet(this, _FrameManager_instances, "m", _FrameManager_onFrameAttached).call(this, session, frameTree.frame.id, frameTree.frame.parentId);
    }
    if (!__classPrivateFieldGet(this, _FrameManager_frameNavigatedReceived, "f").has(frameTree.frame.id)) {
        __classPrivateFieldGet(this, _FrameManager_instances, "m", _FrameManager_onFrameNavigated).call(this, frameTree.frame);
    }
    else {
        __classPrivateFieldGet(this, _FrameManager_frameNavigatedReceived, "f").delete(frameTree.frame.id);
    }
    if (!frameTree.childFrames) {
        return;
    }
    for (const child of frameTree.childFrames) {
        __classPrivateFieldGet(this, _FrameManager_instances, "m", _FrameManager_handleFrameTree).call(this, session, child);
    }
}, _FrameManager_onFrameAttached = function _FrameManager_onFrameAttached(session, frameId, parentFrameId) {
    let frame = this.frame(frameId);
    if (frame) {
        if (session && frame.isOOPFrame()) {
            // If an OOP iframes becomes a normal iframe again
            // it is first attached to the parent page before
            // the target is removed.
            frame.updateClient(session);
        }
        return;
    }
    frame = new _Frame_js__WEBPACK_IMPORTED_MODULE_2__/* .Frame */ .R(this, frameId, parentFrameId, session);
    this._frameTree.addFrame(frame);
    this.emit(FrameManagerEmittedEvents.FrameAttached, frame);
}, _FrameManager_onFrameNavigated = async function _FrameManager_onFrameNavigated(framePayload) {
    const frameId = framePayload.id;
    const isMainFrame = !framePayload.parentId;
    let frame = this._frameTree.getById(frameId);
    // Detach all child frames first.
    if (frame) {
        for (const child of frame.childFrames()) {
            __classPrivateFieldGet(this, _FrameManager_instances, "m", _FrameManager_removeFramesRecursively).call(this, child);
        }
    }
    // Update or create main frame.
    if (isMainFrame) {
        if (frame) {
            // Update frame id to retain frame identity on cross-process navigation.
            this._frameTree.removeFrame(frame);
            frame._id = frameId;
        }
        else {
            // Initial main frame navigation.
            frame = new _Frame_js__WEBPACK_IMPORTED_MODULE_2__/* .Frame */ .R(this, frameId, undefined, __classPrivateFieldGet(this, _FrameManager_client, "f"));
        }
        this._frameTree.addFrame(frame);
    }
    frame = await this._frameTree.waitForFrame(frameId);
    frame._navigated(framePayload);
    this.emit(FrameManagerEmittedEvents.FrameNavigated, frame);
}, _FrameManager_createIsolatedWorld = async function _FrameManager_createIsolatedWorld(session, name) {
    const key = `${session.id()}:${name}`;
    if (__classPrivateFieldGet(this, _FrameManager_isolatedWorlds, "f").has(key)) {
        return;
    }
    await session.send('Page.addScriptToEvaluateOnNewDocument', {
        source: `//# sourceURL=${_ExecutionContext_js__WEBPACK_IMPORTED_MODULE_1__/* .EVALUATION_SCRIPT_URL */ .z}`,
        worldName: name,
    });
    await Promise.all(this.frames()
        .filter(frame => {
        return frame._client() === session;
    })
        .map(frame => {
        // Frames might be removed before we send this, so we don't want to
        // throw an error.
        return session
            .send('Page.createIsolatedWorld', {
            frameId: frame._id,
            worldName: name,
            grantUniveralAccess: true,
        })
            .catch(_util_js__WEBPACK_IMPORTED_MODULE_6__/* .debugError */ .ur);
    }));
    __classPrivateFieldGet(this, _FrameManager_isolatedWorlds, "f").add(key);
}, _FrameManager_onFrameNavigatedWithinDocument = function _FrameManager_onFrameNavigatedWithinDocument(frameId, url) {
    const frame = this.frame(frameId);
    if (!frame) {
        return;
    }
    frame._navigatedWithinDocument(url);
    this.emit(FrameManagerEmittedEvents.FrameNavigatedWithinDocument, frame);
    this.emit(FrameManagerEmittedEvents.FrameNavigated, frame);
}, _FrameManager_onFrameDetached = function _FrameManager_onFrameDetached(frameId, reason) {
    const frame = this.frame(frameId);
    if (reason === 'remove') {
        // Only remove the frame if the reason for the detached event is
        // an actual removement of the frame.
        // For frames that become OOP iframes, the reason would be 'swap'.
        if (frame) {
            __classPrivateFieldGet(this, _FrameManager_instances, "m", _FrameManager_removeFramesRecursively).call(this, frame);
        }
    }
    else if (reason === 'swap') {
        this.emit(FrameManagerEmittedEvents.FrameSwapped, frame);
    }
}, _FrameManager_onExecutionContextCreated = function _FrameManager_onExecutionContextCreated(contextPayload, session) {
    const auxData = contextPayload.auxData;
    const frameId = auxData && auxData.frameId;
    const frame = typeof frameId === 'string' ? this.frame(frameId) : undefined;
    let world;
    if (frame) {
        // Only care about execution contexts created for the current session.
        if (frame._client() !== session) {
            return;
        }
        if (contextPayload.auxData && contextPayload.auxData['isDefault']) {
            world = frame.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_4__/* .MAIN_WORLD */ .H];
        }
        else if (contextPayload.name === UTILITY_WORLD_NAME &&
            !frame.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_4__/* .PUPPETEER_WORLD */ .R].hasContext()) {
            // In case of multiple sessions to the same target, there's a race between
            // connections so we might end up creating multiple isolated worlds.
            // We can use either.
            world = frame.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_4__/* .PUPPETEER_WORLD */ .R];
        }
    }
    const context = new _ExecutionContext_js__WEBPACK_IMPORTED_MODULE_1__/* .ExecutionContext */ .r((frame === null || frame === void 0 ? void 0 : frame._client()) || __classPrivateFieldGet(this, _FrameManager_client, "f"), contextPayload, world);
    if (world) {
        world.setContext(context);
    }
    const key = `${session.id()}:${contextPayload.id}`;
    __classPrivateFieldGet(this, _FrameManager_contextIdToContext, "f").set(key, context);
}, _FrameManager_onExecutionContextDestroyed = function _FrameManager_onExecutionContextDestroyed(executionContextId, session) {
    const key = `${session.id()}:${executionContextId}`;
    const context = __classPrivateFieldGet(this, _FrameManager_contextIdToContext, "f").get(key);
    if (!context) {
        return;
    }
    __classPrivateFieldGet(this, _FrameManager_contextIdToContext, "f").delete(key);
    if (context._world) {
        context._world.clearContext();
    }
}, _FrameManager_onExecutionContextsCleared = function _FrameManager_onExecutionContextsCleared(session) {
    for (const [key, context] of __classPrivateFieldGet(this, _FrameManager_contextIdToContext, "f").entries()) {
        // Make sure to only clear execution contexts that belong
        // to the current session.
        if (context._client !== session) {
            continue;
        }
        if (context._world) {
            context._world.clearContext();
        }
        __classPrivateFieldGet(this, _FrameManager_contextIdToContext, "f").delete(key);
    }
}, _FrameManager_removeFramesRecursively = function _FrameManager_removeFramesRecursively(frame) {
    for (const child of frame.childFrames()) {
        __classPrivateFieldGet(this, _FrameManager_instances, "m", _FrameManager_removeFramesRecursively).call(this, child);
    }
    frame._detach();
    this._frameTree.removeFrame(frame);
    this.emit(FrameManagerEmittedEvents.FrameDetached, frame);
};
//# sourceMappingURL=FrameManager.js.map

/***/ }),

/***/ 3832:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "W": () => (/* binding */ FrameTree)
/* harmony export */ });
/* harmony import */ var _util_DeferredPromise_js__WEBPACK_IMPORTED_MODULE_0__ = __nccwpck_require__(761);
/**
 * Copyright 2022 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var _FrameTree_frames, _FrameTree_parentIds, _FrameTree_childIds, _FrameTree_mainFrame, _FrameTree_waitRequests;

/**
 * Keeps track of the page frame tree and it's is managed by
 * {@link FrameManager}. FrameTree uses frame IDs to reference frame and it
 * means that referenced frames might not be in the tree anymore. Thus, the tree
 * structure is eventually consistent.
 * @internal
 */
class FrameTree {
    constructor() {
        _FrameTree_frames.set(this, new Map());
        // frameID -> parentFrameID
        _FrameTree_parentIds.set(this, new Map());
        // frameID -> childFrameIDs
        _FrameTree_childIds.set(this, new Map());
        _FrameTree_mainFrame.set(this, void 0);
        _FrameTree_waitRequests.set(this, new Map());
    }
    getMainFrame() {
        return __classPrivateFieldGet(this, _FrameTree_mainFrame, "f");
    }
    getById(frameId) {
        return __classPrivateFieldGet(this, _FrameTree_frames, "f").get(frameId);
    }
    /**
     * Returns a promise that is resolved once the frame with
     * the given ID is added to the tree.
     */
    waitForFrame(frameId) {
        const frame = this.getById(frameId);
        if (frame) {
            return Promise.resolve(frame);
        }
        const deferred = (0,_util_DeferredPromise_js__WEBPACK_IMPORTED_MODULE_0__/* .createDeferredPromise */ .W)();
        const callbacks = __classPrivateFieldGet(this, _FrameTree_waitRequests, "f").get(frameId) || new Set();
        callbacks.add(deferred);
        return deferred;
    }
    frames() {
        return Array.from(__classPrivateFieldGet(this, _FrameTree_frames, "f").values());
    }
    addFrame(frame) {
        var _a;
        __classPrivateFieldGet(this, _FrameTree_frames, "f").set(frame._id, frame);
        if (frame._parentId) {
            __classPrivateFieldGet(this, _FrameTree_parentIds, "f").set(frame._id, frame._parentId);
            if (!__classPrivateFieldGet(this, _FrameTree_childIds, "f").has(frame._parentId)) {
                __classPrivateFieldGet(this, _FrameTree_childIds, "f").set(frame._parentId, new Set());
            }
            __classPrivateFieldGet(this, _FrameTree_childIds, "f").get(frame._parentId).add(frame._id);
        }
        else {
            __classPrivateFieldSet(this, _FrameTree_mainFrame, frame, "f");
        }
        (_a = __classPrivateFieldGet(this, _FrameTree_waitRequests, "f").get(frame._id)) === null || _a === void 0 ? void 0 : _a.forEach(request => {
            return request.resolve(frame);
        });
    }
    removeFrame(frame) {
        var _a;
        __classPrivateFieldGet(this, _FrameTree_frames, "f").delete(frame._id);
        __classPrivateFieldGet(this, _FrameTree_parentIds, "f").delete(frame._id);
        if (frame._parentId) {
            (_a = __classPrivateFieldGet(this, _FrameTree_childIds, "f").get(frame._parentId)) === null || _a === void 0 ? void 0 : _a.delete(frame._id);
        }
        else {
            __classPrivateFieldSet(this, _FrameTree_mainFrame, undefined, "f");
        }
    }
    childFrames(frameId) {
        const childIds = __classPrivateFieldGet(this, _FrameTree_childIds, "f").get(frameId);
        if (!childIds) {
            return [];
        }
        return Array.from(childIds)
            .map(id => {
            return this.getById(id);
        })
            .filter((frame) => {
            return frame !== undefined;
        });
    }
    parentFrame(frameId) {
        const parentId = __classPrivateFieldGet(this, _FrameTree_parentIds, "f").get(frameId);
        return parentId ? this.getById(parentId) : undefined;
    }
}
_FrameTree_frames = new WeakMap(), _FrameTree_parentIds = new WeakMap(), _FrameTree_childIds = new WeakMap(), _FrameTree_mainFrame = new WeakMap(), _FrameTree_waitRequests = new WeakMap();
//# sourceMappingURL=FrameTree.js.map

/***/ }),

/***/ 4573:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "w2": () => (/* binding */ HTTPRequest)
/* harmony export */ });
/* unused harmony exports DEFAULT_INTERCEPT_RESOLUTION_PRIORITY, InterceptResolutionAction */
/* harmony import */ var _util_assert_js__WEBPACK_IMPORTED_MODULE_1__ = __nccwpck_require__(5172);
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_0__ = __nccwpck_require__(1823);
var __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var _HTTPRequest_instances, _HTTPRequest_client, _HTTPRequest_isNavigationRequest, _HTTPRequest_allowInterception, _HTTPRequest_interceptionHandled, _HTTPRequest_url, _HTTPRequest_resourceType, _HTTPRequest_method, _HTTPRequest_postData, _HTTPRequest_headers, _HTTPRequest_frame, _HTTPRequest_continueRequestOverrides, _HTTPRequest_responseForRequest, _HTTPRequest_abortErrorReason, _HTTPRequest_interceptResolutionState, _HTTPRequest_interceptHandlers, _HTTPRequest_initiator, _HTTPRequest_continue, _HTTPRequest_respond, _HTTPRequest_abort;


/**
 * The default cooperative request interception resolution priority
 *
 * @public
 */
const DEFAULT_INTERCEPT_RESOLUTION_PRIORITY = 0;
/**
 * Represents an HTTP request sent by a page.
 * @remarks
 *
 * Whenever the page sends a request, such as for a network resource, the
 * following events are emitted by Puppeteer's `page`:
 *
 * - `request`: emitted when the request is issued by the page.
 * - `requestfinished` - emitted when the response body is downloaded and the
 *   request is complete.
 *
 * If request fails at some point, then instead of `requestfinished` event the
 * `requestfailed` event is emitted.
 *
 * All of these events provide an instance of `HTTPRequest` representing the
 * request that occurred:
 *
 * ```
 * page.on('request', request => ...)
 * ```
 *
 * NOTE: HTTP Error responses, such as 404 or 503, are still successful
 * responses from HTTP standpoint, so request will complete with
 * `requestfinished` event.
 *
 * If request gets a 'redirect' response, the request is successfully finished
 * with the `requestfinished` event, and a new request is issued to a
 * redirected url.
 *
 * @public
 */
class HTTPRequest {
    /**
     * Warning! Using this client can break Puppeteer. Use with caution.
     *
     * @experimental
     */
    get client() {
        return __classPrivateFieldGet(this, _HTTPRequest_client, "f");
    }
    /**
     * @internal
     */
    constructor(client, frame, interceptionId, allowInterception, event, redirectChain) {
        _HTTPRequest_instances.add(this);
        /**
         * @internal
         */
        this._failureText = null;
        /**
         * @internal
         */
        this._response = null;
        /**
         * @internal
         */
        this._fromMemoryCache = false;
        _HTTPRequest_client.set(this, void 0);
        _HTTPRequest_isNavigationRequest.set(this, void 0);
        _HTTPRequest_allowInterception.set(this, void 0);
        _HTTPRequest_interceptionHandled.set(this, false);
        _HTTPRequest_url.set(this, void 0);
        _HTTPRequest_resourceType.set(this, void 0);
        _HTTPRequest_method.set(this, void 0);
        _HTTPRequest_postData.set(this, void 0);
        _HTTPRequest_headers.set(this, {});
        _HTTPRequest_frame.set(this, void 0);
        _HTTPRequest_continueRequestOverrides.set(this, void 0);
        _HTTPRequest_responseForRequest.set(this, null);
        _HTTPRequest_abortErrorReason.set(this, null);
        _HTTPRequest_interceptResolutionState.set(this, {
            action: InterceptResolutionAction.None,
        });
        _HTTPRequest_interceptHandlers.set(this, void 0);
        _HTTPRequest_initiator.set(this, void 0);
        __classPrivateFieldSet(this, _HTTPRequest_client, client, "f");
        this._requestId = event.requestId;
        __classPrivateFieldSet(this, _HTTPRequest_isNavigationRequest, event.requestId === event.loaderId && event.type === 'Document', "f");
        this._interceptionId = interceptionId;
        __classPrivateFieldSet(this, _HTTPRequest_allowInterception, allowInterception, "f");
        __classPrivateFieldSet(this, _HTTPRequest_url, event.request.url, "f");
        __classPrivateFieldSet(this, _HTTPRequest_resourceType, (event.type || 'other').toLowerCase(), "f");
        __classPrivateFieldSet(this, _HTTPRequest_method, event.request.method, "f");
        __classPrivateFieldSet(this, _HTTPRequest_postData, event.request.postData, "f");
        __classPrivateFieldSet(this, _HTTPRequest_frame, frame, "f");
        this._redirectChain = redirectChain;
        __classPrivateFieldSet(this, _HTTPRequest_continueRequestOverrides, {}, "f");
        __classPrivateFieldSet(this, _HTTPRequest_interceptHandlers, [], "f");
        __classPrivateFieldSet(this, _HTTPRequest_initiator, event.initiator, "f");
        for (const [key, value] of Object.entries(event.request.headers)) {
            __classPrivateFieldGet(this, _HTTPRequest_headers, "f")[key.toLowerCase()] = value;
        }
    }
    /**
     * @returns the URL of the request
     */
    url() {
        return __classPrivateFieldGet(this, _HTTPRequest_url, "f");
    }
    /**
     * @returns the `ContinueRequestOverrides` that will be used
     * if the interception is allowed to continue (ie, `abort()` and
     * `respond()` aren't called).
     */
    continueRequestOverrides() {
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_1__/* .assert */ .h)(__classPrivateFieldGet(this, _HTTPRequest_allowInterception, "f"), 'Request Interception is not enabled!');
        return __classPrivateFieldGet(this, _HTTPRequest_continueRequestOverrides, "f");
    }
    /**
     * @returns The `ResponseForRequest` that gets used if the
     * interception is allowed to respond (ie, `abort()` is not called).
     */
    responseForRequest() {
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_1__/* .assert */ .h)(__classPrivateFieldGet(this, _HTTPRequest_allowInterception, "f"), 'Request Interception is not enabled!');
        return __classPrivateFieldGet(this, _HTTPRequest_responseForRequest, "f");
    }
    /**
     * @returns the most recent reason for aborting the request
     */
    abortErrorReason() {
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_1__/* .assert */ .h)(__classPrivateFieldGet(this, _HTTPRequest_allowInterception, "f"), 'Request Interception is not enabled!');
        return __classPrivateFieldGet(this, _HTTPRequest_abortErrorReason, "f");
    }
    /**
     * @returns An InterceptResolutionState object describing the current resolution
     * action and priority.
     *
     * InterceptResolutionState contains:
     * action: InterceptResolutionAction
     * priority?: number
     *
     * InterceptResolutionAction is one of: `abort`, `respond`, `continue`,
     * `disabled`, `none`, or `already-handled`.
     */
    interceptResolutionState() {
        if (!__classPrivateFieldGet(this, _HTTPRequest_allowInterception, "f")) {
            return { action: InterceptResolutionAction.Disabled };
        }
        if (__classPrivateFieldGet(this, _HTTPRequest_interceptionHandled, "f")) {
            return { action: InterceptResolutionAction.AlreadyHandled };
        }
        return { ...__classPrivateFieldGet(this, _HTTPRequest_interceptResolutionState, "f") };
    }
    /**
     * @returns `true` if the intercept resolution has already been handled,
     * `false` otherwise.
     */
    isInterceptResolutionHandled() {
        return __classPrivateFieldGet(this, _HTTPRequest_interceptionHandled, "f");
    }
    /**
     * Adds an async request handler to the processing queue.
     * Deferred handlers are not guaranteed to execute in any particular order,
     * but they are guaranteed to resolve before the request interception
     * is finalized.
     */
    enqueueInterceptAction(pendingHandler) {
        __classPrivateFieldGet(this, _HTTPRequest_interceptHandlers, "f").push(pendingHandler);
    }
    /**
     * Awaits pending interception handlers and then decides how to fulfill
     * the request interception.
     */
    async finalizeInterceptions() {
        await __classPrivateFieldGet(this, _HTTPRequest_interceptHandlers, "f").reduce((promiseChain, interceptAction) => {
            return promiseChain.then(interceptAction);
        }, Promise.resolve());
        const { action } = this.interceptResolutionState();
        switch (action) {
            case 'abort':
                return __classPrivateFieldGet(this, _HTTPRequest_instances, "m", _HTTPRequest_abort).call(this, __classPrivateFieldGet(this, _HTTPRequest_abortErrorReason, "f"));
            case 'respond':
                if (__classPrivateFieldGet(this, _HTTPRequest_responseForRequest, "f") === null) {
                    throw new Error('Response is missing for the interception');
                }
                return __classPrivateFieldGet(this, _HTTPRequest_instances, "m", _HTTPRequest_respond).call(this, __classPrivateFieldGet(this, _HTTPRequest_responseForRequest, "f"));
            case 'continue':
                return __classPrivateFieldGet(this, _HTTPRequest_instances, "m", _HTTPRequest_continue).call(this, __classPrivateFieldGet(this, _HTTPRequest_continueRequestOverrides, "f"));
        }
    }
    /**
     * Contains the request's resource type as it was perceived by the rendering
     * engine.
     */
    resourceType() {
        return __classPrivateFieldGet(this, _HTTPRequest_resourceType, "f");
    }
    /**
     * @returns the method used (`GET`, `POST`, etc.)
     */
    method() {
        return __classPrivateFieldGet(this, _HTTPRequest_method, "f");
    }
    /**
     * @returns the request's post body, if any.
     */
    postData() {
        return __classPrivateFieldGet(this, _HTTPRequest_postData, "f");
    }
    /**
     * @returns an object with HTTP headers associated with the request. All
     * header names are lower-case.
     */
    headers() {
        return __classPrivateFieldGet(this, _HTTPRequest_headers, "f");
    }
    /**
     * @returns A matching `HTTPResponse` object, or null if the response has not
     * been received yet.
     */
    response() {
        return this._response;
    }
    /**
     * @returns the frame that initiated the request, or null if navigating to
     * error pages.
     */
    frame() {
        return __classPrivateFieldGet(this, _HTTPRequest_frame, "f");
    }
    /**
     * @returns true if the request is the driver of the current frame's navigation.
     */
    isNavigationRequest() {
        return __classPrivateFieldGet(this, _HTTPRequest_isNavigationRequest, "f");
    }
    /**
     * @returns the initiator of the request.
     */
    initiator() {
        return __classPrivateFieldGet(this, _HTTPRequest_initiator, "f");
    }
    /**
     * A `redirectChain` is a chain of requests initiated to fetch a resource.
     * @remarks
     *
     * `redirectChain` is shared between all the requests of the same chain.
     *
     * For example, if the website `http://example.com` has a single redirect to
     * `https://example.com`, then the chain will contain one request:
     *
     * ```ts
     * const response = await page.goto('http://example.com');
     * const chain = response.request().redirectChain();
     * console.log(chain.length); // 1
     * console.log(chain[0].url()); // 'http://example.com'
     * ```
     *
     * If the website `https://google.com` has no redirects, then the chain will be empty:
     *
     * ```ts
     * const response = await page.goto('https://google.com');
     * const chain = response.request().redirectChain();
     * console.log(chain.length); // 0
     * ```
     *
     * @returns the chain of requests - if a server responds with at least a
     * single redirect, this chain will contain all requests that were redirected.
     */
    redirectChain() {
        return this._redirectChain.slice();
    }
    /**
     * Access information about the request's failure.
     *
     * @remarks
     *
     * @example
     *
     * Example of logging all failed requests:
     *
     * ```ts
     * page.on('requestfailed', request => {
     *   console.log(request.url() + ' ' + request.failure().errorText);
     * });
     * ```
     *
     * @returns `null` unless the request failed. If the request fails this can
     * return an object with `errorText` containing a human-readable error
     * message, e.g. `net::ERR_FAILED`. It is not guaranteed that there will be
     * failure text if the request fails.
     */
    failure() {
        if (!this._failureText) {
            return null;
        }
        return {
            errorText: this._failureText,
        };
    }
    /**
     * Continues request with optional request overrides.
     *
     * @remarks
     *
     * To use this, request
     * interception should be enabled with {@link Page.setRequestInterception}.
     *
     * Exception is immediately thrown if the request interception is not enabled.
     *
     * @example
     *
     * ```ts
     * await page.setRequestInterception(true);
     * page.on('request', request => {
     *   // Override headers
     *   const headers = Object.assign({}, request.headers(), {
     *     foo: 'bar', // set "foo" header
     *     origin: undefined, // remove "origin" header
     *   });
     *   request.continue({headers});
     * });
     * ```
     *
     * @param overrides - optional overrides to apply to the request.
     * @param priority - If provided, intercept is resolved using
     * cooperative handling rules. Otherwise, intercept is resolved
     * immediately.
     */
    async continue(overrides = {}, priority) {
        // Request interception is not supported for data: urls.
        if (__classPrivateFieldGet(this, _HTTPRequest_url, "f").startsWith('data:')) {
            return;
        }
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_1__/* .assert */ .h)(__classPrivateFieldGet(this, _HTTPRequest_allowInterception, "f"), 'Request Interception is not enabled!');
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_1__/* .assert */ .h)(!__classPrivateFieldGet(this, _HTTPRequest_interceptionHandled, "f"), 'Request is already handled!');
        if (priority === undefined) {
            return __classPrivateFieldGet(this, _HTTPRequest_instances, "m", _HTTPRequest_continue).call(this, overrides);
        }
        __classPrivateFieldSet(this, _HTTPRequest_continueRequestOverrides, overrides, "f");
        if (__classPrivateFieldGet(this, _HTTPRequest_interceptResolutionState, "f").priority === undefined ||
            priority > __classPrivateFieldGet(this, _HTTPRequest_interceptResolutionState, "f").priority) {
            __classPrivateFieldSet(this, _HTTPRequest_interceptResolutionState, {
                action: InterceptResolutionAction.Continue,
                priority,
            }, "f");
            return;
        }
        if (priority === __classPrivateFieldGet(this, _HTTPRequest_interceptResolutionState, "f").priority) {
            if (__classPrivateFieldGet(this, _HTTPRequest_interceptResolutionState, "f").action === 'abort' ||
                __classPrivateFieldGet(this, _HTTPRequest_interceptResolutionState, "f").action === 'respond') {
                return;
            }
            __classPrivateFieldGet(this, _HTTPRequest_interceptResolutionState, "f").action =
                InterceptResolutionAction.Continue;
        }
        return;
    }
    /**
     * Fulfills a request with the given response.
     *
     * @remarks
     *
     * To use this, request
     * interception should be enabled with {@link Page.setRequestInterception}.
     *
     * Exception is immediately thrown if the request interception is not enabled.
     *
     * @example
     * An example of fulfilling all requests with 404 responses:
     *
     * ```ts
     * await page.setRequestInterception(true);
     * page.on('request', request => {
     *   request.respond({
     *     status: 404,
     *     contentType: 'text/plain',
     *     body: 'Not Found!',
     *   });
     * });
     * ```
     *
     * NOTE: Mocking responses for dataURL requests is not supported.
     * Calling `request.respond` for a dataURL request is a noop.
     *
     * @param response - the response to fulfill the request with.
     * @param priority - If provided, intercept is resolved using
     * cooperative handling rules. Otherwise, intercept is resolved
     * immediately.
     */
    async respond(response, priority) {
        // Mocking responses for dataURL requests is not currently supported.
        if (__classPrivateFieldGet(this, _HTTPRequest_url, "f").startsWith('data:')) {
            return;
        }
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_1__/* .assert */ .h)(__classPrivateFieldGet(this, _HTTPRequest_allowInterception, "f"), 'Request Interception is not enabled!');
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_1__/* .assert */ .h)(!__classPrivateFieldGet(this, _HTTPRequest_interceptionHandled, "f"), 'Request is already handled!');
        if (priority === undefined) {
            return __classPrivateFieldGet(this, _HTTPRequest_instances, "m", _HTTPRequest_respond).call(this, response);
        }
        __classPrivateFieldSet(this, _HTTPRequest_responseForRequest, response, "f");
        if (__classPrivateFieldGet(this, _HTTPRequest_interceptResolutionState, "f").priority === undefined ||
            priority > __classPrivateFieldGet(this, _HTTPRequest_interceptResolutionState, "f").priority) {
            __classPrivateFieldSet(this, _HTTPRequest_interceptResolutionState, {
                action: InterceptResolutionAction.Respond,
                priority,
            }, "f");
            return;
        }
        if (priority === __classPrivateFieldGet(this, _HTTPRequest_interceptResolutionState, "f").priority) {
            if (__classPrivateFieldGet(this, _HTTPRequest_interceptResolutionState, "f").action === 'abort') {
                return;
            }
            __classPrivateFieldGet(this, _HTTPRequest_interceptResolutionState, "f").action = InterceptResolutionAction.Respond;
        }
    }
    /**
     * Aborts a request.
     *
     * @remarks
     * To use this, request interception should be enabled with
     * {@link Page.setRequestInterception}. If it is not enabled, this method will
     * throw an exception immediately.
     *
     * @param errorCode - optional error code to provide.
     * @param priority - If provided, intercept is resolved using
     * cooperative handling rules. Otherwise, intercept is resolved
     * immediately.
     */
    async abort(errorCode = 'failed', priority) {
        // Request interception is not supported for data: urls.
        if (__classPrivateFieldGet(this, _HTTPRequest_url, "f").startsWith('data:')) {
            return;
        }
        const errorReason = errorReasons[errorCode];
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_1__/* .assert */ .h)(errorReason, 'Unknown error code: ' + errorCode);
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_1__/* .assert */ .h)(__classPrivateFieldGet(this, _HTTPRequest_allowInterception, "f"), 'Request Interception is not enabled!');
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_1__/* .assert */ .h)(!__classPrivateFieldGet(this, _HTTPRequest_interceptionHandled, "f"), 'Request is already handled!');
        if (priority === undefined) {
            return __classPrivateFieldGet(this, _HTTPRequest_instances, "m", _HTTPRequest_abort).call(this, errorReason);
        }
        __classPrivateFieldSet(this, _HTTPRequest_abortErrorReason, errorReason, "f");
        if (__classPrivateFieldGet(this, _HTTPRequest_interceptResolutionState, "f").priority === undefined ||
            priority >= __classPrivateFieldGet(this, _HTTPRequest_interceptResolutionState, "f").priority) {
            __classPrivateFieldSet(this, _HTTPRequest_interceptResolutionState, {
                action: InterceptResolutionAction.Abort,
                priority,
            }, "f");
            return;
        }
    }
}
_HTTPRequest_client = new WeakMap(), _HTTPRequest_isNavigationRequest = new WeakMap(), _HTTPRequest_allowInterception = new WeakMap(), _HTTPRequest_interceptionHandled = new WeakMap(), _HTTPRequest_url = new WeakMap(), _HTTPRequest_resourceType = new WeakMap(), _HTTPRequest_method = new WeakMap(), _HTTPRequest_postData = new WeakMap(), _HTTPRequest_headers = new WeakMap(), _HTTPRequest_frame = new WeakMap(), _HTTPRequest_continueRequestOverrides = new WeakMap(), _HTTPRequest_responseForRequest = new WeakMap(), _HTTPRequest_abortErrorReason = new WeakMap(), _HTTPRequest_interceptResolutionState = new WeakMap(), _HTTPRequest_interceptHandlers = new WeakMap(), _HTTPRequest_initiator = new WeakMap(), _HTTPRequest_instances = new WeakSet(), _HTTPRequest_continue = async function _HTTPRequest_continue(overrides = {}) {
    const { url, method, postData, headers } = overrides;
    __classPrivateFieldSet(this, _HTTPRequest_interceptionHandled, true, "f");
    const postDataBinaryBase64 = postData
        ? Buffer.from(postData).toString('base64')
        : undefined;
    if (this._interceptionId === undefined) {
        throw new Error('HTTPRequest is missing _interceptionId needed for Fetch.continueRequest');
    }
    await __classPrivateFieldGet(this, _HTTPRequest_client, "f")
        .send('Fetch.continueRequest', {
        requestId: this._interceptionId,
        url,
        method,
        postData: postDataBinaryBase64,
        headers: headers ? headersArray(headers) : undefined,
    })
        .catch(error => {
        __classPrivateFieldSet(this, _HTTPRequest_interceptionHandled, false, "f");
        return handleError(error);
    });
}, _HTTPRequest_respond = async function _HTTPRequest_respond(response) {
    __classPrivateFieldSet(this, _HTTPRequest_interceptionHandled, true, "f");
    const responseBody = response.body && (0,_util_js__WEBPACK_IMPORTED_MODULE_0__/* .isString */ .HD)(response.body)
        ? Buffer.from(response.body)
        : response.body || null;
    const responseHeaders = {};
    if (response.headers) {
        for (const header of Object.keys(response.headers)) {
            const value = response.headers[header];
            responseHeaders[header.toLowerCase()] = Array.isArray(value)
                ? value.map(item => {
                    return String(item);
                })
                : String(value);
        }
    }
    if (response.contentType) {
        responseHeaders['content-type'] = response.contentType;
    }
    if (responseBody && !('content-length' in responseHeaders)) {
        responseHeaders['content-length'] = String(Buffer.byteLength(responseBody));
    }
    const status = response.status || 200;
    if (this._interceptionId === undefined) {
        throw new Error('HTTPRequest is missing _interceptionId needed for Fetch.fulfillRequest');
    }
    await __classPrivateFieldGet(this, _HTTPRequest_client, "f")
        .send('Fetch.fulfillRequest', {
        requestId: this._interceptionId,
        responseCode: status,
        responsePhrase: STATUS_TEXTS[status],
        responseHeaders: headersArray(responseHeaders),
        body: responseBody ? responseBody.toString('base64') : undefined,
    })
        .catch(error => {
        __classPrivateFieldSet(this, _HTTPRequest_interceptionHandled, false, "f");
        return handleError(error);
    });
}, _HTTPRequest_abort = async function _HTTPRequest_abort(errorReason) {
    __classPrivateFieldSet(this, _HTTPRequest_interceptionHandled, true, "f");
    if (this._interceptionId === undefined) {
        throw new Error('HTTPRequest is missing _interceptionId needed for Fetch.failRequest');
    }
    await __classPrivateFieldGet(this, _HTTPRequest_client, "f")
        .send('Fetch.failRequest', {
        requestId: this._interceptionId,
        errorReason: errorReason || 'Failed',
    })
        .catch(handleError);
};
/**
 * @public
 */
var InterceptResolutionAction;
(function (InterceptResolutionAction) {
    InterceptResolutionAction["Abort"] = "abort";
    InterceptResolutionAction["Respond"] = "respond";
    InterceptResolutionAction["Continue"] = "continue";
    InterceptResolutionAction["Disabled"] = "disabled";
    InterceptResolutionAction["None"] = "none";
    InterceptResolutionAction["AlreadyHandled"] = "already-handled";
})(InterceptResolutionAction || (InterceptResolutionAction = {}));
const errorReasons = {
    aborted: 'Aborted',
    accessdenied: 'AccessDenied',
    addressunreachable: 'AddressUnreachable',
    blockedbyclient: 'BlockedByClient',
    blockedbyresponse: 'BlockedByResponse',
    connectionaborted: 'ConnectionAborted',
    connectionclosed: 'ConnectionClosed',
    connectionfailed: 'ConnectionFailed',
    connectionrefused: 'ConnectionRefused',
    connectionreset: 'ConnectionReset',
    internetdisconnected: 'InternetDisconnected',
    namenotresolved: 'NameNotResolved',
    timedout: 'TimedOut',
    failed: 'Failed',
};
function headersArray(headers) {
    const result = [];
    for (const name in headers) {
        const value = headers[name];
        if (!Object.is(value, undefined)) {
            const values = Array.isArray(value) ? value : [value];
            result.push(...values.map(value => {
                return { name, value: value + '' };
            }));
        }
    }
    return result;
}
async function handleError(error) {
    if (['Invalid header'].includes(error.originalMessage)) {
        throw error;
    }
    // In certain cases, protocol will return error if the request was
    // already canceled or the page was closed. We should tolerate these
    // errors.
    (0,_util_js__WEBPACK_IMPORTED_MODULE_0__/* .debugError */ .ur)(error);
}
// List taken from
// https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml
// with extra 306 and 418 codes.
const STATUS_TEXTS = {
    '100': 'Continue',
    '101': 'Switching Protocols',
    '102': 'Processing',
    '103': 'Early Hints',
    '200': 'OK',
    '201': 'Created',
    '202': 'Accepted',
    '203': 'Non-Authoritative Information',
    '204': 'No Content',
    '205': 'Reset Content',
    '206': 'Partial Content',
    '207': 'Multi-Status',
    '208': 'Already Reported',
    '226': 'IM Used',
    '300': 'Multiple Choices',
    '301': 'Moved Permanently',
    '302': 'Found',
    '303': 'See Other',
    '304': 'Not Modified',
    '305': 'Use Proxy',
    '306': 'Switch Proxy',
    '307': 'Temporary Redirect',
    '308': 'Permanent Redirect',
    '400': 'Bad Request',
    '401': 'Unauthorized',
    '402': 'Payment Required',
    '403': 'Forbidden',
    '404': 'Not Found',
    '405': 'Method Not Allowed',
    '406': 'Not Acceptable',
    '407': 'Proxy Authentication Required',
    '408': 'Request Timeout',
    '409': 'Conflict',
    '410': 'Gone',
    '411': 'Length Required',
    '412': 'Precondition Failed',
    '413': 'Payload Too Large',
    '414': 'URI Too Long',
    '415': 'Unsupported Media Type',
    '416': 'Range Not Satisfiable',
    '417': 'Expectation Failed',
    '418': "I'm a teapot",
    '421': 'Misdirected Request',
    '422': 'Unprocessable Entity',
    '423': 'Locked',
    '424': 'Failed Dependency',
    '425': 'Too Early',
    '426': 'Upgrade Required',
    '428': 'Precondition Required',
    '429': 'Too Many Requests',
    '431': 'Request Header Fields Too Large',
    '451': 'Unavailable For Legal Reasons',
    '500': 'Internal Server Error',
    '501': 'Not Implemented',
    '502': 'Bad Gateway',
    '503': 'Service Unavailable',
    '504': 'Gateway Timeout',
    '505': 'HTTP Version Not Supported',
    '506': 'Variant Also Negotiates',
    '507': 'Insufficient Storage',
    '508': 'Loop Detected',
    '510': 'Not Extended',
    '511': 'Network Authentication Required',
};
//# sourceMappingURL=HTTPRequest.js.map

/***/ }),

/***/ 8599:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "t": () => (/* binding */ HTTPResponse)
/* harmony export */ });
/* harmony import */ var _SecurityDetails_js__WEBPACK_IMPORTED_MODULE_0__ = __nccwpck_require__(4029);
/* harmony import */ var _Errors_js__WEBPACK_IMPORTED_MODULE_1__ = __nccwpck_require__(7154);
var __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _HTTPResponse_instances, _HTTPResponse_client, _HTTPResponse_request, _HTTPResponse_contentPromise, _HTTPResponse_bodyLoadedPromise, _HTTPResponse_bodyLoadedPromiseFulfill, _HTTPResponse_remoteAddress, _HTTPResponse_status, _HTTPResponse_statusText, _HTTPResponse_url, _HTTPResponse_fromDiskCache, _HTTPResponse_fromServiceWorker, _HTTPResponse_headers, _HTTPResponse_securityDetails, _HTTPResponse_timing, _HTTPResponse_parseStatusTextFromExtrInfo;


/**
 * The HTTPResponse class represents responses which are received by the
 * {@link Page} class.
 *
 * @public
 */
class HTTPResponse {
    /**
     * @internal
     */
    constructor(client, request, responsePayload, extraInfo) {
        _HTTPResponse_instances.add(this);
        _HTTPResponse_client.set(this, void 0);
        _HTTPResponse_request.set(this, void 0);
        _HTTPResponse_contentPromise.set(this, null);
        _HTTPResponse_bodyLoadedPromise.set(this, void 0);
        _HTTPResponse_bodyLoadedPromiseFulfill.set(this, () => { });
        _HTTPResponse_remoteAddress.set(this, void 0);
        _HTTPResponse_status.set(this, void 0);
        _HTTPResponse_statusText.set(this, void 0);
        _HTTPResponse_url.set(this, void 0);
        _HTTPResponse_fromDiskCache.set(this, void 0);
        _HTTPResponse_fromServiceWorker.set(this, void 0);
        _HTTPResponse_headers.set(this, {});
        _HTTPResponse_securityDetails.set(this, void 0);
        _HTTPResponse_timing.set(this, void 0);
        __classPrivateFieldSet(this, _HTTPResponse_client, client, "f");
        __classPrivateFieldSet(this, _HTTPResponse_request, request, "f");
        __classPrivateFieldSet(this, _HTTPResponse_bodyLoadedPromise, new Promise(fulfill => {
            __classPrivateFieldSet(this, _HTTPResponse_bodyLoadedPromiseFulfill, fulfill, "f");
        }), "f");
        __classPrivateFieldSet(this, _HTTPResponse_remoteAddress, {
            ip: responsePayload.remoteIPAddress,
            port: responsePayload.remotePort,
        }, "f");
        __classPrivateFieldSet(this, _HTTPResponse_statusText, __classPrivateFieldGet(this, _HTTPResponse_instances, "m", _HTTPResponse_parseStatusTextFromExtrInfo).call(this, extraInfo) ||
            responsePayload.statusText, "f");
        __classPrivateFieldSet(this, _HTTPResponse_url, request.url(), "f");
        __classPrivateFieldSet(this, _HTTPResponse_fromDiskCache, !!responsePayload.fromDiskCache, "f");
        __classPrivateFieldSet(this, _HTTPResponse_fromServiceWorker, !!responsePayload.fromServiceWorker, "f");
        __classPrivateFieldSet(this, _HTTPResponse_status, extraInfo ? extraInfo.statusCode : responsePayload.status, "f");
        const headers = extraInfo ? extraInfo.headers : responsePayload.headers;
        for (const [key, value] of Object.entries(headers)) {
            __classPrivateFieldGet(this, _HTTPResponse_headers, "f")[key.toLowerCase()] = value;
        }
        __classPrivateFieldSet(this, _HTTPResponse_securityDetails, responsePayload.securityDetails
            ? new _SecurityDetails_js__WEBPACK_IMPORTED_MODULE_0__/* .SecurityDetails */ .S(responsePayload.securityDetails)
            : null, "f");
        __classPrivateFieldSet(this, _HTTPResponse_timing, responsePayload.timing || null, "f");
    }
    /**
     * @internal
     */
    _resolveBody(err) {
        if (err) {
            return __classPrivateFieldGet(this, _HTTPResponse_bodyLoadedPromiseFulfill, "f").call(this, err);
        }
        return __classPrivateFieldGet(this, _HTTPResponse_bodyLoadedPromiseFulfill, "f").call(this);
    }
    /**
     * @returns The IP address and port number used to connect to the remote
     * server.
     */
    remoteAddress() {
        return __classPrivateFieldGet(this, _HTTPResponse_remoteAddress, "f");
    }
    /**
     * @returns The URL of the response.
     */
    url() {
        return __classPrivateFieldGet(this, _HTTPResponse_url, "f");
    }
    /**
     * @returns True if the response was successful (status in the range 200-299).
     */
    ok() {
        // TODO: document === 0 case?
        return __classPrivateFieldGet(this, _HTTPResponse_status, "f") === 0 || (__classPrivateFieldGet(this, _HTTPResponse_status, "f") >= 200 && __classPrivateFieldGet(this, _HTTPResponse_status, "f") <= 299);
    }
    /**
     * @returns The status code of the response (e.g., 200 for a success).
     */
    status() {
        return __classPrivateFieldGet(this, _HTTPResponse_status, "f");
    }
    /**
     * @returns The status text of the response (e.g. usually an "OK" for a
     * success).
     */
    statusText() {
        return __classPrivateFieldGet(this, _HTTPResponse_statusText, "f");
    }
    /**
     * @returns An object with HTTP headers associated with the response. All
     * header names are lower-case.
     */
    headers() {
        return __classPrivateFieldGet(this, _HTTPResponse_headers, "f");
    }
    /**
     * @returns {@link SecurityDetails} if the response was received over the
     * secure connection, or `null` otherwise.
     */
    securityDetails() {
        return __classPrivateFieldGet(this, _HTTPResponse_securityDetails, "f");
    }
    /**
     * @returns Timing information related to the response.
     */
    timing() {
        return __classPrivateFieldGet(this, _HTTPResponse_timing, "f");
    }
    /**
     * @returns Promise which resolves to a buffer with response body.
     */
    buffer() {
        if (!__classPrivateFieldGet(this, _HTTPResponse_contentPromise, "f")) {
            __classPrivateFieldSet(this, _HTTPResponse_contentPromise, __classPrivateFieldGet(this, _HTTPResponse_bodyLoadedPromise, "f").then(async (error) => {
                if (error) {
                    throw error;
                }
                try {
                    const response = await __classPrivateFieldGet(this, _HTTPResponse_client, "f").send('Network.getResponseBody', {
                        requestId: __classPrivateFieldGet(this, _HTTPResponse_request, "f")._requestId,
                    });
                    return Buffer.from(response.body, response.base64Encoded ? 'base64' : 'utf8');
                }
                catch (error) {
                    if (error instanceof _Errors_js__WEBPACK_IMPORTED_MODULE_1__/* .ProtocolError */ .K1 &&
                        error.originalMessage === 'No resource with given identifier found') {
                        throw new _Errors_js__WEBPACK_IMPORTED_MODULE_1__/* .ProtocolError */ .K1('Could not load body for this request. This might happen if the request is a preflight request.');
                    }
                    throw error;
                }
            }), "f");
        }
        return __classPrivateFieldGet(this, _HTTPResponse_contentPromise, "f");
    }
    /**
     * @returns Promise which resolves to a text representation of response body.
     */
    async text() {
        const content = await this.buffer();
        return content.toString('utf8');
    }
    /**
     *
     * @returns Promise which resolves to a JSON representation of response body.
     *
     * @remarks
     *
     * This method will throw if the response body is not parsable via
     * `JSON.parse`.
     */
    async json() {
        const content = await this.text();
        return JSON.parse(content);
    }
    /**
     * @returns A matching {@link HTTPRequest} object.
     */
    request() {
        return __classPrivateFieldGet(this, _HTTPResponse_request, "f");
    }
    /**
     * @returns True if the response was served from either the browser's disk
     * cache or memory cache.
     */
    fromCache() {
        return __classPrivateFieldGet(this, _HTTPResponse_fromDiskCache, "f") || __classPrivateFieldGet(this, _HTTPResponse_request, "f")._fromMemoryCache;
    }
    /**
     * @returns True if the response was served by a service worker.
     */
    fromServiceWorker() {
        return __classPrivateFieldGet(this, _HTTPResponse_fromServiceWorker, "f");
    }
    /**
     * @returns A {@link Frame} that initiated this response, or `null` if
     * navigating to error pages.
     */
    frame() {
        return __classPrivateFieldGet(this, _HTTPResponse_request, "f").frame();
    }
}
_HTTPResponse_client = new WeakMap(), _HTTPResponse_request = new WeakMap(), _HTTPResponse_contentPromise = new WeakMap(), _HTTPResponse_bodyLoadedPromise = new WeakMap(), _HTTPResponse_bodyLoadedPromiseFulfill = new WeakMap(), _HTTPResponse_remoteAddress = new WeakMap(), _HTTPResponse_status = new WeakMap(), _HTTPResponse_statusText = new WeakMap(), _HTTPResponse_url = new WeakMap(), _HTTPResponse_fromDiskCache = new WeakMap(), _HTTPResponse_fromServiceWorker = new WeakMap(), _HTTPResponse_headers = new WeakMap(), _HTTPResponse_securityDetails = new WeakMap(), _HTTPResponse_timing = new WeakMap(), _HTTPResponse_instances = new WeakSet(), _HTTPResponse_parseStatusTextFromExtrInfo = function _HTTPResponse_parseStatusTextFromExtrInfo(extraInfo) {
    if (!extraInfo || !extraInfo.headersText) {
        return;
    }
    const firstLine = extraInfo.headersText.split('\r', 1)[0];
    if (!firstLine) {
        return;
    }
    const match = firstLine.match(/[^ ]* [^ ]* (.*)/);
    if (!match) {
        return;
    }
    const statusText = match[1];
    if (!statusText) {
        return;
    }
    return statusText;
};
//# sourceMappingURL=HTTPResponse.js.map

/***/ }),

/***/ 2860:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "E": () => (/* binding */ IsolatedWorld)
/* harmony export */ });
/* harmony import */ var _util_assert_js__WEBPACK_IMPORTED_MODULE_6__ = __nccwpck_require__(5172);
/* harmony import */ var _util_DeferredPromise_js__WEBPACK_IMPORTED_MODULE_0__ = __nccwpck_require__(761);
/* harmony import */ var _util_ErrorLike_js__WEBPACK_IMPORTED_MODULE_7__ = __nccwpck_require__(9713);
/* harmony import */ var _IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_1__ = __nccwpck_require__(6356);
/* harmony import */ var _LifecycleWatcher_js__WEBPACK_IMPORTED_MODULE_2__ = __nccwpck_require__(9518);
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_3__ = __nccwpck_require__(1823);
/* harmony import */ var _WaitTask_js__WEBPACK_IMPORTED_MODULE_4__ = __nccwpck_require__(6134);
/* harmony import */ var _LazyArg_js__WEBPACK_IMPORTED_MODULE_5__ = __nccwpck_require__(5532);
/**
 * Copyright 2019 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var _IsolatedWorld_instances, _a, _IsolatedWorld_frame, _IsolatedWorld_document, _IsolatedWorld_context, _IsolatedWorld_detached, _IsolatedWorld_ctxBindings, _IsolatedWorld_boundFunctions, _IsolatedWorld_taskManager, _IsolatedWorld_bindingIdentifier, _IsolatedWorld_client_get, _IsolatedWorld_frameManager_get, _IsolatedWorld_timeoutSettings_get, _IsolatedWorld_settingUpBinding, _IsolatedWorld_onBindingCalled;








/**
 * @internal
 */
class IsolatedWorld {
    get taskManager() {
        return __classPrivateFieldGet(this, _IsolatedWorld_taskManager, "f");
    }
    get _boundFunctions() {
        return __classPrivateFieldGet(this, _IsolatedWorld_boundFunctions, "f");
    }
    constructor(frame) {
        _IsolatedWorld_instances.add(this);
        _IsolatedWorld_frame.set(this, void 0);
        _IsolatedWorld_document.set(this, void 0);
        _IsolatedWorld_context.set(this, (0,_util_DeferredPromise_js__WEBPACK_IMPORTED_MODULE_0__/* .createDeferredPromise */ .W)());
        _IsolatedWorld_detached.set(this, false);
        // Set of bindings that have been registered in the current context.
        _IsolatedWorld_ctxBindings.set(this, new Set());
        // Contains mapping from functions that should be bound to Puppeteer functions.
        _IsolatedWorld_boundFunctions.set(this, new Map());
        _IsolatedWorld_taskManager.set(this, new _WaitTask_js__WEBPACK_IMPORTED_MODULE_4__/* .TaskManager */ .q());
        // If multiple waitFor are set up asynchronously, we need to wait for the
        // first one to set up the binding in the page before running the others.
        _IsolatedWorld_settingUpBinding.set(this, null);
        _IsolatedWorld_onBindingCalled.set(this, async (event) => {
            let payload;
            if (!this.hasContext()) {
                return;
            }
            const context = await this.executionContext();
            try {
                payload = JSON.parse(event.payload);
            }
            catch {
                // The binding was either called by something in the page or it was
                // called before our wrapper was initialized.
                return;
            }
            const { type, name, seq, args } = payload;
            if (type !== 'internal' ||
                !__classPrivateFieldGet(this, _IsolatedWorld_ctxBindings, "f").has(__classPrivateFieldGet(IsolatedWorld, _a, "f", _IsolatedWorld_bindingIdentifier).call(IsolatedWorld, name, context._contextId))) {
                return;
            }
            if (context._contextId !== event.executionContextId) {
                return;
            }
            try {
                const fn = this._boundFunctions.get(name);
                if (!fn) {
                    throw new Error(`Bound function $name is not found`);
                }
                const result = await fn(...args);
                await context.evaluate((name, seq, result) => {
                    // @ts-expect-error Code is evaluated in a different context.
                    const callbacks = self[name].callbacks;
                    callbacks.get(seq).resolve(result);
                    callbacks.delete(seq);
                }, name, seq, result);
            }
            catch (error) {
                // The WaitTask may already have been resolved by timing out, or the
                // execution context may have been destroyed.
                // In both caes, the promises above are rejected with a protocol error.
                // We can safely ignores these, as the WaitTask is re-installed in
                // the next execution context if needed.
                if (error.message.includes('Protocol error')) {
                    return;
                }
                (0,_util_js__WEBPACK_IMPORTED_MODULE_3__/* .debugError */ .ur)(error);
            }
        });
        // Keep own reference to client because it might differ from the FrameManager's
        // client for OOP iframes.
        __classPrivateFieldSet(this, _IsolatedWorld_frame, frame, "f");
        __classPrivateFieldGet(this, _IsolatedWorld_instances, "a", _IsolatedWorld_client_get).on('Runtime.bindingCalled', __classPrivateFieldGet(this, _IsolatedWorld_onBindingCalled, "f"));
    }
    frame() {
        return __classPrivateFieldGet(this, _IsolatedWorld_frame, "f");
    }
    clearContext() {
        __classPrivateFieldSet(this, _IsolatedWorld_document, undefined, "f");
        __classPrivateFieldSet(this, _IsolatedWorld_context, (0,_util_DeferredPromise_js__WEBPACK_IMPORTED_MODULE_0__/* .createDeferredPromise */ .W)(), "f");
    }
    setContext(context) {
        __classPrivateFieldGet(this, _IsolatedWorld_ctxBindings, "f").clear();
        __classPrivateFieldGet(this, _IsolatedWorld_context, "f").resolve(context);
        __classPrivateFieldGet(this, _IsolatedWorld_taskManager, "f").rerunAll();
    }
    hasContext() {
        return __classPrivateFieldGet(this, _IsolatedWorld_context, "f").resolved();
    }
    _detach() {
        __classPrivateFieldSet(this, _IsolatedWorld_detached, true, "f");
        __classPrivateFieldGet(this, _IsolatedWorld_instances, "a", _IsolatedWorld_client_get).off('Runtime.bindingCalled', __classPrivateFieldGet(this, _IsolatedWorld_onBindingCalled, "f"));
        __classPrivateFieldGet(this, _IsolatedWorld_taskManager, "f").terminateAll(new Error('waitForFunction failed: frame got detached.'));
    }
    executionContext() {
        if (__classPrivateFieldGet(this, _IsolatedWorld_detached, "f")) {
            throw new Error(`Execution context is not available in detached frame "${__classPrivateFieldGet(this, _IsolatedWorld_frame, "f").url()}" (are you trying to evaluate?)`);
        }
        if (__classPrivateFieldGet(this, _IsolatedWorld_context, "f") === null) {
            throw new Error(`Execution content promise is missing`);
        }
        return __classPrivateFieldGet(this, _IsolatedWorld_context, "f");
    }
    async evaluateHandle(pageFunction, ...args) {
        const context = await this.executionContext();
        return context.evaluateHandle(pageFunction, ...args);
    }
    async evaluate(pageFunction, ...args) {
        const context = await this.executionContext();
        return context.evaluate(pageFunction, ...args);
    }
    async $(selector) {
        const document = await this.document();
        return document.$(selector);
    }
    async $$(selector) {
        const document = await this.document();
        return document.$$(selector);
    }
    async document() {
        if (__classPrivateFieldGet(this, _IsolatedWorld_document, "f")) {
            return __classPrivateFieldGet(this, _IsolatedWorld_document, "f");
        }
        const context = await this.executionContext();
        __classPrivateFieldSet(this, _IsolatedWorld_document, await context.evaluateHandle(() => {
            return document;
        }), "f");
        return __classPrivateFieldGet(this, _IsolatedWorld_document, "f");
    }
    async $x(expression) {
        const document = await this.document();
        return document.$x(expression);
    }
    async $eval(selector, pageFunction, ...args) {
        const document = await this.document();
        return document.$eval(selector, pageFunction, ...args);
    }
    async $$eval(selector, pageFunction, ...args) {
        const document = await this.document();
        return document.$$eval(selector, pageFunction, ...args);
    }
    async content() {
        return await this.evaluate(() => {
            let retVal = '';
            if (document.doctype) {
                retVal = new XMLSerializer().serializeToString(document.doctype);
            }
            if (document.documentElement) {
                retVal += document.documentElement.outerHTML;
            }
            return retVal;
        });
    }
    async setContent(html, options = {}) {
        const { waitUntil = ['load'], timeout = __classPrivateFieldGet(this, _IsolatedWorld_instances, "a", _IsolatedWorld_timeoutSettings_get).navigationTimeout(), } = options;
        // We rely upon the fact that document.open() will reset frame lifecycle with "init"
        // lifecycle event. @see https://crrev.com/608658
        await this.evaluate(html => {
            document.open();
            document.write(html);
            document.close();
        }, html);
        const watcher = new _LifecycleWatcher_js__WEBPACK_IMPORTED_MODULE_2__/* .LifecycleWatcher */ .C(__classPrivateFieldGet(this, _IsolatedWorld_instances, "a", _IsolatedWorld_frameManager_get), __classPrivateFieldGet(this, _IsolatedWorld_frame, "f"), waitUntil, timeout);
        const error = await Promise.race([
            watcher.timeoutOrTerminationPromise(),
            watcher.lifecyclePromise(),
        ]);
        watcher.dispose();
        if (error) {
            throw error;
        }
    }
    async click(selector, options) {
        const handle = await this.$(selector);
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_6__/* .assert */ .h)(handle, `No element found for selector: ${selector}`);
        await handle.click(options);
        await handle.dispose();
    }
    async focus(selector) {
        const handle = await this.$(selector);
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_6__/* .assert */ .h)(handle, `No element found for selector: ${selector}`);
        await handle.focus();
        await handle.dispose();
    }
    async hover(selector) {
        const handle = await this.$(selector);
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_6__/* .assert */ .h)(handle, `No element found for selector: ${selector}`);
        await handle.hover();
        await handle.dispose();
    }
    async select(selector, ...values) {
        const handle = await this.$(selector);
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_6__/* .assert */ .h)(handle, `No element found for selector: ${selector}`);
        const result = await handle.select(...values);
        await handle.dispose();
        return result;
    }
    async tap(selector) {
        const handle = await this.$(selector);
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_6__/* .assert */ .h)(handle, `No element found for selector: ${selector}`);
        await handle.tap();
        await handle.dispose();
    }
    async type(selector, text, options) {
        const handle = await this.$(selector);
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_6__/* .assert */ .h)(handle, `No element found for selector: ${selector}`);
        await handle.type(text, options);
        await handle.dispose();
    }
    async _addBindingToContext(context, name) {
        // Previous operation added the binding so we are done.
        if (__classPrivateFieldGet(this, _IsolatedWorld_ctxBindings, "f").has(__classPrivateFieldGet(IsolatedWorld, _a, "f", _IsolatedWorld_bindingIdentifier).call(IsolatedWorld, name, context._contextId))) {
            return;
        }
        // Wait for other operation to finish
        if (__classPrivateFieldGet(this, _IsolatedWorld_settingUpBinding, "f")) {
            await __classPrivateFieldGet(this, _IsolatedWorld_settingUpBinding, "f");
            return this._addBindingToContext(context, name);
        }
        const bind = async (name) => {
            const expression = (0,_util_js__WEBPACK_IMPORTED_MODULE_3__/* .pageBindingInitString */ .TF)('internal', name);
            try {
                // TODO: In theory, it would be enough to call this just once
                await context._client.send('Runtime.addBinding', {
                    name,
                    executionContextName: context._contextName,
                });
                await context.evaluate(expression);
            }
            catch (error) {
                // We could have tried to evaluate in a context which was already
                // destroyed. This happens, for example, if the page is navigated while
                // we are trying to add the binding
                if (error instanceof Error) {
                    // Destroyed context.
                    if (error.message.includes('Execution context was destroyed')) {
                        return;
                    }
                    // Missing context.
                    if (error.message.includes('Cannot find context with specified id')) {
                        return;
                    }
                }
                (0,_util_js__WEBPACK_IMPORTED_MODULE_3__/* .debugError */ .ur)(error);
                return;
            }
            __classPrivateFieldGet(this, _IsolatedWorld_ctxBindings, "f").add(__classPrivateFieldGet(IsolatedWorld, _a, "f", _IsolatedWorld_bindingIdentifier).call(IsolatedWorld, name, context._contextId));
        };
        __classPrivateFieldSet(this, _IsolatedWorld_settingUpBinding, bind(name), "f");
        await __classPrivateFieldGet(this, _IsolatedWorld_settingUpBinding, "f");
        __classPrivateFieldSet(this, _IsolatedWorld_settingUpBinding, null, "f");
    }
    async _waitForSelectorInPage(queryOne, root, selector, options, bindings = new Map()) {
        const { visible: waitForVisible = false, hidden: waitForHidden = false, timeout = __classPrivateFieldGet(this, _IsolatedWorld_instances, "a", _IsolatedWorld_timeoutSettings_get).timeout(), } = options;
        try {
            const handle = await this.waitForFunction(async (PuppeteerUtil, query, selector, root, visible) => {
                if (!PuppeteerUtil) {
                    return;
                }
                const node = (await PuppeteerUtil.createFunction(query)(root || document, selector, PuppeteerUtil));
                return PuppeteerUtil.checkVisibility(node, visible);
            }, {
                bindings,
                polling: waitForVisible || waitForHidden ? 'raf' : 'mutation',
                root,
                timeout,
            }, _LazyArg_js__WEBPACK_IMPORTED_MODULE_5__/* .LazyArg.create */ .O.create(context => {
                return context.puppeteerUtil;
            }), queryOne.toString(), selector, root, waitForVisible ? true : waitForHidden ? false : undefined);
            const elementHandle = handle.asElement();
            if (!elementHandle) {
                await handle.dispose();
                return null;
            }
            return elementHandle;
        }
        catch (error) {
            if (!(0,_util_ErrorLike_js__WEBPACK_IMPORTED_MODULE_7__/* .isErrorLike */ .x)(error)) {
                throw error;
            }
            error.message = `Waiting for selector \`${selector}\` failed: ${error.message}`;
            throw error;
        }
    }
    waitForFunction(pageFunction, options = {}, ...args) {
        const { polling = 'raf', timeout = __classPrivateFieldGet(this, _IsolatedWorld_instances, "a", _IsolatedWorld_timeoutSettings_get).timeout(), bindings, root, } = options;
        if (typeof polling === 'number' && polling < 0) {
            throw new Error('Cannot poll with non-positive interval');
        }
        const waitTask = new _WaitTask_js__WEBPACK_IMPORTED_MODULE_4__/* .WaitTask */ .F(this, {
            bindings,
            polling,
            root,
            timeout,
        }, pageFunction, ...args);
        return waitTask.result;
    }
    async title() {
        return this.evaluate(() => {
            return document.title;
        });
    }
    async adoptBackendNode(backendNodeId) {
        const executionContext = await this.executionContext();
        const { object } = await __classPrivateFieldGet(this, _IsolatedWorld_instances, "a", _IsolatedWorld_client_get).send('DOM.resolveNode', {
            backendNodeId: backendNodeId,
            executionContextId: executionContext._contextId,
        });
        return (0,_util_js__WEBPACK_IMPORTED_MODULE_3__/* .createJSHandle */ .tB)(executionContext, object);
    }
    async adoptHandle(handle) {
        const executionContext = await this.executionContext();
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_6__/* .assert */ .h)(handle.executionContext() !== executionContext, 'Cannot adopt handle that already belongs to this execution context');
        const nodeInfo = await __classPrivateFieldGet(this, _IsolatedWorld_instances, "a", _IsolatedWorld_client_get).send('DOM.describeNode', {
            objectId: handle.remoteObject().objectId,
        });
        return (await this.adoptBackendNode(nodeInfo.node.backendNodeId));
    }
    async transferHandle(handle) {
        const result = await this.adoptHandle(handle);
        await handle.dispose();
        return result;
    }
}
_a = IsolatedWorld, _IsolatedWorld_frame = new WeakMap(), _IsolatedWorld_document = new WeakMap(), _IsolatedWorld_context = new WeakMap(), _IsolatedWorld_detached = new WeakMap(), _IsolatedWorld_ctxBindings = new WeakMap(), _IsolatedWorld_boundFunctions = new WeakMap(), _IsolatedWorld_taskManager = new WeakMap(), _IsolatedWorld_settingUpBinding = new WeakMap(), _IsolatedWorld_onBindingCalled = new WeakMap(), _IsolatedWorld_instances = new WeakSet(), _IsolatedWorld_client_get = function _IsolatedWorld_client_get() {
    return __classPrivateFieldGet(this, _IsolatedWorld_frame, "f")._client();
}, _IsolatedWorld_frameManager_get = function _IsolatedWorld_frameManager_get() {
    return __classPrivateFieldGet(this, _IsolatedWorld_frame, "f")._frameManager;
}, _IsolatedWorld_timeoutSettings_get = function _IsolatedWorld_timeoutSettings_get() {
    return __classPrivateFieldGet(this, _IsolatedWorld_instances, "a", _IsolatedWorld_frameManager_get).timeoutSettings;
};
_IsolatedWorld_bindingIdentifier = { value: (name, contextId) => {
        return `${name}_${contextId}`;
    } };
//# sourceMappingURL=IsolatedWorld.js.map

/***/ }),

/***/ 6356:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "H": () => (/* binding */ MAIN_WORLD),
/* harmony export */   "R": () => (/* binding */ PUPPETEER_WORLD)
/* harmony export */ });
/**
 * Copyright 2022 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A unique key for {@link IsolatedWorldChart} to denote the default world.
 * Execution contexts are automatically created in the default world.
 *
 * @internal
 */
const MAIN_WORLD = Symbol('mainWorld');
/**
 * A unique key for {@link IsolatedWorldChart} to denote the puppeteer world.
 * This world contains all puppeteer-internal bindings/code.
 *
 * @internal
 */
const PUPPETEER_WORLD = Symbol('puppeteerWorld');
//# sourceMappingURL=IsolatedWorlds.js.map

/***/ }),

/***/ 7979:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "U": () => (/* binding */ CDPJSHandle)
/* harmony export */ });
/* harmony import */ var _api_JSHandle_js__WEBPACK_IMPORTED_MODULE_1__ = __nccwpck_require__(2165);
/* harmony import */ var _util_assert_js__WEBPACK_IMPORTED_MODULE_2__ = __nccwpck_require__(5172);
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_0__ = __nccwpck_require__(1823);
/**
 * Copyright 2019 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var _CDPJSHandle_disposed, _CDPJSHandle_context, _CDPJSHandle_remoteObject;



/**
 * @internal
 */
class CDPJSHandle extends _api_JSHandle_js__WEBPACK_IMPORTED_MODULE_1__/* .JSHandle */ .c {
    get disposed() {
        return __classPrivateFieldGet(this, _CDPJSHandle_disposed, "f");
    }
    constructor(context, remoteObject) {
        super();
        _CDPJSHandle_disposed.set(this, false);
        _CDPJSHandle_context.set(this, void 0);
        _CDPJSHandle_remoteObject.set(this, void 0);
        __classPrivateFieldSet(this, _CDPJSHandle_context, context, "f");
        __classPrivateFieldSet(this, _CDPJSHandle_remoteObject, remoteObject, "f");
    }
    executionContext() {
        return __classPrivateFieldGet(this, _CDPJSHandle_context, "f");
    }
    get client() {
        return __classPrivateFieldGet(this, _CDPJSHandle_context, "f")._client;
    }
    /**
     * @see {@link ExecutionContext.evaluate} for more details.
     */
    async evaluate(pageFunction, ...args) {
        return await this.executionContext().evaluate(pageFunction, this, ...args);
    }
    /**
     * @see {@link ExecutionContext.evaluateHandle} for more details.
     */
    async evaluateHandle(pageFunction, ...args) {
        return await this.executionContext().evaluateHandle(pageFunction, this, ...args);
    }
    async getProperty(propertyName) {
        return this.evaluateHandle((object, propertyName) => {
            return object[propertyName];
        }, propertyName);
    }
    async getProperties() {
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_2__/* .assert */ .h)(__classPrivateFieldGet(this, _CDPJSHandle_remoteObject, "f").objectId);
        // We use Runtime.getProperties rather than iterative building because the
        // iterative approach might create a distorted snapshot.
        const response = await this.client.send('Runtime.getProperties', {
            objectId: __classPrivateFieldGet(this, _CDPJSHandle_remoteObject, "f").objectId,
            ownProperties: true,
        });
        const result = new Map();
        for (const property of response.result) {
            if (!property.enumerable || !property.value) {
                continue;
            }
            result.set(property.name, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__/* .createJSHandle */ .tB)(__classPrivateFieldGet(this, _CDPJSHandle_context, "f"), property.value));
        }
        return result;
    }
    async jsonValue() {
        if (!__classPrivateFieldGet(this, _CDPJSHandle_remoteObject, "f").objectId) {
            return (0,_util_js__WEBPACK_IMPORTED_MODULE_0__/* .valueFromRemoteObject */ .jV)(__classPrivateFieldGet(this, _CDPJSHandle_remoteObject, "f"));
        }
        const value = await this.evaluate(object => {
            return object;
        });
        if (value === undefined) {
            throw new Error('Could not serialize referenced object');
        }
        return value;
    }
    /**
     * @returns Either `null` or the handle itself if the handle is an
     * instance of {@link ElementHandle}.
     */
    asElement() {
        return null;
    }
    async dispose() {
        if (__classPrivateFieldGet(this, _CDPJSHandle_disposed, "f")) {
            return;
        }
        __classPrivateFieldSet(this, _CDPJSHandle_disposed, true, "f");
        await (0,_util_js__WEBPACK_IMPORTED_MODULE_0__/* .releaseObject */ .M9)(this.client, __classPrivateFieldGet(this, _CDPJSHandle_remoteObject, "f"));
    }
    toString() {
        if (!__classPrivateFieldGet(this, _CDPJSHandle_remoteObject, "f").objectId) {
            return 'JSHandle:' + (0,_util_js__WEBPACK_IMPORTED_MODULE_0__/* .valueFromRemoteObject */ .jV)(__classPrivateFieldGet(this, _CDPJSHandle_remoteObject, "f"));
        }
        const type = __classPrivateFieldGet(this, _CDPJSHandle_remoteObject, "f").subtype || __classPrivateFieldGet(this, _CDPJSHandle_remoteObject, "f").type;
        return 'JSHandle@' + type;
    }
    remoteObject() {
        return __classPrivateFieldGet(this, _CDPJSHandle_remoteObject, "f");
    }
}
_CDPJSHandle_disposed = new WeakMap(), _CDPJSHandle_context = new WeakMap(), _CDPJSHandle_remoteObject = new WeakMap();
//# sourceMappingURL=JSHandle.js.map

/***/ }),

/***/ 5532:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "O": () => (/* binding */ LazyArg)
/* harmony export */ });
/**
 * Copyright 2022 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _LazyArg_get;
/**
 * @internal
 */
class LazyArg {
    constructor(get) {
        _LazyArg_get.set(this, void 0);
        __classPrivateFieldSet(this, _LazyArg_get, get, "f");
    }
    async get(context) {
        return __classPrivateFieldGet(this, _LazyArg_get, "f").call(this, context);
    }
}
_LazyArg_get = new WeakMap();
LazyArg.create = (get) => {
    // We don't want to introduce LazyArg to the type system, otherwise we would
    // have to make it public.
    return new LazyArg(get);
};
//# sourceMappingURL=LazyArg.js.map

/***/ }),

/***/ 9518:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "C": () => (/* binding */ LifecycleWatcher)
/* harmony export */ });
/* harmony import */ var _util_assert_js__WEBPACK_IMPORTED_MODULE_6__ = __nccwpck_require__(5172);
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_0__ = __nccwpck_require__(1823);
/* harmony import */ var _util_DeferredPromise_js__WEBPACK_IMPORTED_MODULE_1__ = __nccwpck_require__(761);
/* harmony import */ var _Errors_js__WEBPACK_IMPORTED_MODULE_2__ = __nccwpck_require__(7154);
/* harmony import */ var _FrameManager_js__WEBPACK_IMPORTED_MODULE_3__ = __nccwpck_require__(3918);
/* harmony import */ var _NetworkManager_js__WEBPACK_IMPORTED_MODULE_4__ = __nccwpck_require__(2765);
/* harmony import */ var _Connection_js__WEBPACK_IMPORTED_MODULE_5__ = __nccwpck_require__(9432);
/**
 * Copyright 2019 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _LifecycleWatcher_instances, _LifecycleWatcher_expectedLifecycle, _LifecycleWatcher_frameManager, _LifecycleWatcher_frame, _LifecycleWatcher_timeout, _LifecycleWatcher_navigationRequest, _LifecycleWatcher_eventListeners, _LifecycleWatcher_initialLoaderId, _LifecycleWatcher_sameDocumentNavigationCompleteCallback, _LifecycleWatcher_sameDocumentNavigationPromise, _LifecycleWatcher_lifecycleCallback, _LifecycleWatcher_lifecyclePromise, _LifecycleWatcher_newDocumentNavigationCompleteCallback, _LifecycleWatcher_newDocumentNavigationPromise, _LifecycleWatcher_terminationCallback, _LifecycleWatcher_terminationPromise, _LifecycleWatcher_timeoutPromise, _LifecycleWatcher_maximumTimer, _LifecycleWatcher_hasSameDocumentNavigation, _LifecycleWatcher_swapped, _LifecycleWatcher_navigationResponseReceived, _LifecycleWatcher_onRequest, _LifecycleWatcher_onRequestFailed, _LifecycleWatcher_onResponse, _LifecycleWatcher_onFrameDetached, _LifecycleWatcher_terminate, _LifecycleWatcher_createTimeoutPromise, _LifecycleWatcher_navigatedWithinDocument, _LifecycleWatcher_navigated, _LifecycleWatcher_frameSwapped, _LifecycleWatcher_checkLifecycleComplete;







const puppeteerToProtocolLifecycle = new Map([
    ['load', 'load'],
    ['domcontentloaded', 'DOMContentLoaded'],
    ['networkidle0', 'networkIdle'],
    ['networkidle2', 'networkAlmostIdle'],
]);
const noop = () => { };
/**
 * @internal
 */
class LifecycleWatcher {
    constructor(frameManager, frame, waitUntil, timeout) {
        _LifecycleWatcher_instances.add(this);
        _LifecycleWatcher_expectedLifecycle.set(this, void 0);
        _LifecycleWatcher_frameManager.set(this, void 0);
        _LifecycleWatcher_frame.set(this, void 0);
        _LifecycleWatcher_timeout.set(this, void 0);
        _LifecycleWatcher_navigationRequest.set(this, null);
        _LifecycleWatcher_eventListeners.set(this, void 0);
        _LifecycleWatcher_initialLoaderId.set(this, void 0);
        _LifecycleWatcher_sameDocumentNavigationCompleteCallback.set(this, noop);
        _LifecycleWatcher_sameDocumentNavigationPromise.set(this, new Promise(fulfill => {
            __classPrivateFieldSet(this, _LifecycleWatcher_sameDocumentNavigationCompleteCallback, fulfill, "f");
        }));
        _LifecycleWatcher_lifecycleCallback.set(this, noop);
        _LifecycleWatcher_lifecyclePromise.set(this, new Promise(fulfill => {
            __classPrivateFieldSet(this, _LifecycleWatcher_lifecycleCallback, fulfill, "f");
        }));
        _LifecycleWatcher_newDocumentNavigationCompleteCallback.set(this, noop);
        _LifecycleWatcher_newDocumentNavigationPromise.set(this, new Promise(fulfill => {
            __classPrivateFieldSet(this, _LifecycleWatcher_newDocumentNavigationCompleteCallback, fulfill, "f");
        }));
        _LifecycleWatcher_terminationCallback.set(this, noop);
        _LifecycleWatcher_terminationPromise.set(this, new Promise(fulfill => {
            __classPrivateFieldSet(this, _LifecycleWatcher_terminationCallback, fulfill, "f");
        }));
        _LifecycleWatcher_timeoutPromise.set(this, void 0);
        _LifecycleWatcher_maximumTimer.set(this, void 0);
        _LifecycleWatcher_hasSameDocumentNavigation.set(this, void 0);
        _LifecycleWatcher_swapped.set(this, void 0);
        _LifecycleWatcher_navigationResponseReceived.set(this, void 0);
        if (Array.isArray(waitUntil)) {
            waitUntil = waitUntil.slice();
        }
        else if (typeof waitUntil === 'string') {
            waitUntil = [waitUntil];
        }
        __classPrivateFieldSet(this, _LifecycleWatcher_initialLoaderId, frame._loaderId, "f");
        __classPrivateFieldSet(this, _LifecycleWatcher_expectedLifecycle, waitUntil.map(value => {
            const protocolEvent = puppeteerToProtocolLifecycle.get(value);
            (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_6__/* .assert */ .h)(protocolEvent, 'Unknown value for options.waitUntil: ' + value);
            return protocolEvent;
        }), "f");
        __classPrivateFieldSet(this, _LifecycleWatcher_frameManager, frameManager, "f");
        __classPrivateFieldSet(this, _LifecycleWatcher_frame, frame, "f");
        __classPrivateFieldSet(this, _LifecycleWatcher_timeout, timeout, "f");
        __classPrivateFieldSet(this, _LifecycleWatcher_eventListeners, [
            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__/* .addEventListener */ .Oo)(frameManager.client, _Connection_js__WEBPACK_IMPORTED_MODULE_5__/* .CDPSessionEmittedEvents.Disconnected */ .vG.Disconnected, __classPrivateFieldGet(this, _LifecycleWatcher_instances, "m", _LifecycleWatcher_terminate).bind(this, new Error('Navigation failed because browser has disconnected!'))),
            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__/* .addEventListener */ .Oo)(__classPrivateFieldGet(this, _LifecycleWatcher_frameManager, "f"), _FrameManager_js__WEBPACK_IMPORTED_MODULE_3__/* .FrameManagerEmittedEvents.LifecycleEvent */ .G.LifecycleEvent, __classPrivateFieldGet(this, _LifecycleWatcher_instances, "m", _LifecycleWatcher_checkLifecycleComplete).bind(this)),
            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__/* .addEventListener */ .Oo)(__classPrivateFieldGet(this, _LifecycleWatcher_frameManager, "f"), _FrameManager_js__WEBPACK_IMPORTED_MODULE_3__/* .FrameManagerEmittedEvents.FrameNavigatedWithinDocument */ .G.FrameNavigatedWithinDocument, __classPrivateFieldGet(this, _LifecycleWatcher_instances, "m", _LifecycleWatcher_navigatedWithinDocument).bind(this)),
            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__/* .addEventListener */ .Oo)(__classPrivateFieldGet(this, _LifecycleWatcher_frameManager, "f"), _FrameManager_js__WEBPACK_IMPORTED_MODULE_3__/* .FrameManagerEmittedEvents.FrameNavigated */ .G.FrameNavigated, __classPrivateFieldGet(this, _LifecycleWatcher_instances, "m", _LifecycleWatcher_navigated).bind(this)),
            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__/* .addEventListener */ .Oo)(__classPrivateFieldGet(this, _LifecycleWatcher_frameManager, "f"), _FrameManager_js__WEBPACK_IMPORTED_MODULE_3__/* .FrameManagerEmittedEvents.FrameSwapped */ .G.FrameSwapped, __classPrivateFieldGet(this, _LifecycleWatcher_instances, "m", _LifecycleWatcher_frameSwapped).bind(this)),
            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__/* .addEventListener */ .Oo)(__classPrivateFieldGet(this, _LifecycleWatcher_frameManager, "f"), _FrameManager_js__WEBPACK_IMPORTED_MODULE_3__/* .FrameManagerEmittedEvents.FrameDetached */ .G.FrameDetached, __classPrivateFieldGet(this, _LifecycleWatcher_instances, "m", _LifecycleWatcher_onFrameDetached).bind(this)),
            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__/* .addEventListener */ .Oo)(__classPrivateFieldGet(this, _LifecycleWatcher_frameManager, "f").networkManager, _NetworkManager_js__WEBPACK_IMPORTED_MODULE_4__/* .NetworkManagerEmittedEvents.Request */ .x.Request, __classPrivateFieldGet(this, _LifecycleWatcher_instances, "m", _LifecycleWatcher_onRequest).bind(this)),
            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__/* .addEventListener */ .Oo)(__classPrivateFieldGet(this, _LifecycleWatcher_frameManager, "f").networkManager, _NetworkManager_js__WEBPACK_IMPORTED_MODULE_4__/* .NetworkManagerEmittedEvents.Response */ .x.Response, __classPrivateFieldGet(this, _LifecycleWatcher_instances, "m", _LifecycleWatcher_onResponse).bind(this)),
            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__/* .addEventListener */ .Oo)(__classPrivateFieldGet(this, _LifecycleWatcher_frameManager, "f").networkManager, _NetworkManager_js__WEBPACK_IMPORTED_MODULE_4__/* .NetworkManagerEmittedEvents.RequestFailed */ .x.RequestFailed, __classPrivateFieldGet(this, _LifecycleWatcher_instances, "m", _LifecycleWatcher_onRequestFailed).bind(this)),
        ], "f");
        __classPrivateFieldSet(this, _LifecycleWatcher_timeoutPromise, __classPrivateFieldGet(this, _LifecycleWatcher_instances, "m", _LifecycleWatcher_createTimeoutPromise).call(this), "f");
        __classPrivateFieldGet(this, _LifecycleWatcher_instances, "m", _LifecycleWatcher_checkLifecycleComplete).call(this);
    }
    async navigationResponse() {
        var _a;
        // Continue with a possibly null response.
        await ((_a = __classPrivateFieldGet(this, _LifecycleWatcher_navigationResponseReceived, "f")) === null || _a === void 0 ? void 0 : _a.catch(() => { }));
        return __classPrivateFieldGet(this, _LifecycleWatcher_navigationRequest, "f") ? __classPrivateFieldGet(this, _LifecycleWatcher_navigationRequest, "f").response() : null;
    }
    sameDocumentNavigationPromise() {
        return __classPrivateFieldGet(this, _LifecycleWatcher_sameDocumentNavigationPromise, "f");
    }
    newDocumentNavigationPromise() {
        return __classPrivateFieldGet(this, _LifecycleWatcher_newDocumentNavigationPromise, "f");
    }
    lifecyclePromise() {
        return __classPrivateFieldGet(this, _LifecycleWatcher_lifecyclePromise, "f");
    }
    timeoutOrTerminationPromise() {
        return Promise.race([__classPrivateFieldGet(this, _LifecycleWatcher_timeoutPromise, "f"), __classPrivateFieldGet(this, _LifecycleWatcher_terminationPromise, "f")]);
    }
    dispose() {
        (0,_util_js__WEBPACK_IMPORTED_MODULE_0__/* .removeEventListeners */ .nJ)(__classPrivateFieldGet(this, _LifecycleWatcher_eventListeners, "f"));
        __classPrivateFieldGet(this, _LifecycleWatcher_maximumTimer, "f") !== undefined && clearTimeout(__classPrivateFieldGet(this, _LifecycleWatcher_maximumTimer, "f"));
    }
}
_LifecycleWatcher_expectedLifecycle = new WeakMap(), _LifecycleWatcher_frameManager = new WeakMap(), _LifecycleWatcher_frame = new WeakMap(), _LifecycleWatcher_timeout = new WeakMap(), _LifecycleWatcher_navigationRequest = new WeakMap(), _LifecycleWatcher_eventListeners = new WeakMap(), _LifecycleWatcher_initialLoaderId = new WeakMap(), _LifecycleWatcher_sameDocumentNavigationCompleteCallback = new WeakMap(), _LifecycleWatcher_sameDocumentNavigationPromise = new WeakMap(), _LifecycleWatcher_lifecycleCallback = new WeakMap(), _LifecycleWatcher_lifecyclePromise = new WeakMap(), _LifecycleWatcher_newDocumentNavigationCompleteCallback = new WeakMap(), _LifecycleWatcher_newDocumentNavigationPromise = new WeakMap(), _LifecycleWatcher_terminationCallback = new WeakMap(), _LifecycleWatcher_terminationPromise = new WeakMap(), _LifecycleWatcher_timeoutPromise = new WeakMap(), _LifecycleWatcher_maximumTimer = new WeakMap(), _LifecycleWatcher_hasSameDocumentNavigation = new WeakMap(), _LifecycleWatcher_swapped = new WeakMap(), _LifecycleWatcher_navigationResponseReceived = new WeakMap(), _LifecycleWatcher_instances = new WeakSet(), _LifecycleWatcher_onRequest = function _LifecycleWatcher_onRequest(request) {
    var _a, _b;
    if (request.frame() !== __classPrivateFieldGet(this, _LifecycleWatcher_frame, "f") || !request.isNavigationRequest()) {
        return;
    }
    __classPrivateFieldSet(this, _LifecycleWatcher_navigationRequest, request, "f");
    // Resolve previous navigation response in case there are multiple
    // navigation requests reported by the backend. This generally should not
    // happen by it looks like it's possible.
    (_a = __classPrivateFieldGet(this, _LifecycleWatcher_navigationResponseReceived, "f")) === null || _a === void 0 ? void 0 : _a.resolve();
    __classPrivateFieldSet(this, _LifecycleWatcher_navigationResponseReceived, (0,_util_DeferredPromise_js__WEBPACK_IMPORTED_MODULE_1__/* .createDeferredPromise */ .W)(), "f");
    if (request.response() !== null) {
        (_b = __classPrivateFieldGet(this, _LifecycleWatcher_navigationResponseReceived, "f")) === null || _b === void 0 ? void 0 : _b.resolve();
    }
}, _LifecycleWatcher_onRequestFailed = function _LifecycleWatcher_onRequestFailed(request) {
    var _a, _b;
    if (((_a = __classPrivateFieldGet(this, _LifecycleWatcher_navigationRequest, "f")) === null || _a === void 0 ? void 0 : _a._requestId) !== request._requestId) {
        return;
    }
    (_b = __classPrivateFieldGet(this, _LifecycleWatcher_navigationResponseReceived, "f")) === null || _b === void 0 ? void 0 : _b.resolve();
}, _LifecycleWatcher_onResponse = function _LifecycleWatcher_onResponse(response) {
    var _a, _b;
    if (((_a = __classPrivateFieldGet(this, _LifecycleWatcher_navigationRequest, "f")) === null || _a === void 0 ? void 0 : _a._requestId) !== response.request()._requestId) {
        return;
    }
    (_b = __classPrivateFieldGet(this, _LifecycleWatcher_navigationResponseReceived, "f")) === null || _b === void 0 ? void 0 : _b.resolve();
}, _LifecycleWatcher_onFrameDetached = function _LifecycleWatcher_onFrameDetached(frame) {
    if (__classPrivateFieldGet(this, _LifecycleWatcher_frame, "f") === frame) {
        __classPrivateFieldGet(this, _LifecycleWatcher_terminationCallback, "f").call(null, new Error('Navigating frame was detached'));
        return;
    }
    __classPrivateFieldGet(this, _LifecycleWatcher_instances, "m", _LifecycleWatcher_checkLifecycleComplete).call(this);
}, _LifecycleWatcher_terminate = function _LifecycleWatcher_terminate(error) {
    __classPrivateFieldGet(this, _LifecycleWatcher_terminationCallback, "f").call(null, error);
}, _LifecycleWatcher_createTimeoutPromise = async function _LifecycleWatcher_createTimeoutPromise() {
    if (!__classPrivateFieldGet(this, _LifecycleWatcher_timeout, "f")) {
        return new Promise(noop);
    }
    const errorMessage = 'Navigation timeout of ' + __classPrivateFieldGet(this, _LifecycleWatcher_timeout, "f") + ' ms exceeded';
    await new Promise(fulfill => {
        return (__classPrivateFieldSet(this, _LifecycleWatcher_maximumTimer, setTimeout(fulfill, __classPrivateFieldGet(this, _LifecycleWatcher_timeout, "f")), "f"));
    });
    return new _Errors_js__WEBPACK_IMPORTED_MODULE_2__/* .TimeoutError */ .W5(errorMessage);
}, _LifecycleWatcher_navigatedWithinDocument = function _LifecycleWatcher_navigatedWithinDocument(frame) {
    if (frame !== __classPrivateFieldGet(this, _LifecycleWatcher_frame, "f")) {
        return;
    }
    __classPrivateFieldSet(this, _LifecycleWatcher_hasSameDocumentNavigation, true, "f");
    __classPrivateFieldGet(this, _LifecycleWatcher_instances, "m", _LifecycleWatcher_checkLifecycleComplete).call(this);
}, _LifecycleWatcher_navigated = function _LifecycleWatcher_navigated(frame) {
    if (frame !== __classPrivateFieldGet(this, _LifecycleWatcher_frame, "f")) {
        return;
    }
    __classPrivateFieldGet(this, _LifecycleWatcher_instances, "m", _LifecycleWatcher_checkLifecycleComplete).call(this);
}, _LifecycleWatcher_frameSwapped = function _LifecycleWatcher_frameSwapped(frame) {
    if (frame !== __classPrivateFieldGet(this, _LifecycleWatcher_frame, "f")) {
        return;
    }
    __classPrivateFieldSet(this, _LifecycleWatcher_swapped, true, "f");
    __classPrivateFieldGet(this, _LifecycleWatcher_instances, "m", _LifecycleWatcher_checkLifecycleComplete).call(this);
}, _LifecycleWatcher_checkLifecycleComplete = function _LifecycleWatcher_checkLifecycleComplete() {
    // We expect navigation to commit.
    if (!checkLifecycle(__classPrivateFieldGet(this, _LifecycleWatcher_frame, "f"), __classPrivateFieldGet(this, _LifecycleWatcher_expectedLifecycle, "f"))) {
        return;
    }
    __classPrivateFieldGet(this, _LifecycleWatcher_lifecycleCallback, "f").call(this);
    if (__classPrivateFieldGet(this, _LifecycleWatcher_hasSameDocumentNavigation, "f")) {
        __classPrivateFieldGet(this, _LifecycleWatcher_sameDocumentNavigationCompleteCallback, "f").call(this);
    }
    if (__classPrivateFieldGet(this, _LifecycleWatcher_swapped, "f") || __classPrivateFieldGet(this, _LifecycleWatcher_frame, "f")._loaderId !== __classPrivateFieldGet(this, _LifecycleWatcher_initialLoaderId, "f")) {
        __classPrivateFieldGet(this, _LifecycleWatcher_newDocumentNavigationCompleteCallback, "f").call(this);
    }
    function checkLifecycle(frame, expectedLifecycle) {
        for (const event of expectedLifecycle) {
            if (!frame._lifecycleEvents.has(event)) {
                return false;
            }
        }
        for (const child of frame.childFrames()) {
            if (child._hasStartedLoading &&
                !checkLifecycle(child, expectedLifecycle)) {
                return false;
            }
        }
        return true;
    }
};
//# sourceMappingURL=LifecycleWatcher.js.map

/***/ }),

/***/ 6557:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "z": () => (/* binding */ NetworkEventManager)
/* harmony export */ });
/**
 * Copyright 2022 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _NetworkEventManager_requestWillBeSentMap, _NetworkEventManager_requestPausedMap, _NetworkEventManager_httpRequestsMap, _NetworkEventManager_responseReceivedExtraInfoMap, _NetworkEventManager_queuedRedirectInfoMap, _NetworkEventManager_queuedEventGroupMap;
/**
 * Helper class to track network events by request ID
 *
 * @internal
 */
class NetworkEventManager {
    constructor() {
        /**
         * There are four possible orders of events:
         * A. `_onRequestWillBeSent`
         * B. `_onRequestWillBeSent`, `_onRequestPaused`
         * C. `_onRequestPaused`, `_onRequestWillBeSent`
         * D. `_onRequestPaused`, `_onRequestWillBeSent`, `_onRequestPaused`,
         * `_onRequestWillBeSent`, `_onRequestPaused`, `_onRequestPaused`
         * (see crbug.com/1196004)
         *
         * For `_onRequest` we need the event from `_onRequestWillBeSent` and
         * optionally the `interceptionId` from `_onRequestPaused`.
         *
         * If request interception is disabled, call `_onRequest` once per call to
         * `_onRequestWillBeSent`.
         * If request interception is enabled, call `_onRequest` once per call to
         * `_onRequestPaused` (once per `interceptionId`).
         *
         * Events are stored to allow for subsequent events to call `_onRequest`.
         *
         * Note that (chains of) redirect requests have the same `requestId` (!) as
         * the original request. We have to anticipate series of events like these:
         * A. `_onRequestWillBeSent`,
         * `_onRequestWillBeSent`, ...
         * B. `_onRequestWillBeSent`, `_onRequestPaused`,
         * `_onRequestWillBeSent`, `_onRequestPaused`, ...
         * C. `_onRequestWillBeSent`, `_onRequestPaused`,
         * `_onRequestPaused`, `_onRequestWillBeSent`, ...
         * D. `_onRequestPaused`, `_onRequestWillBeSent`,
         * `_onRequestPaused`, `_onRequestWillBeSent`, `_onRequestPaused`,
         * `_onRequestWillBeSent`, `_onRequestPaused`, `_onRequestPaused`, ...
         * (see crbug.com/1196004)
         */
        _NetworkEventManager_requestWillBeSentMap.set(this, new Map());
        _NetworkEventManager_requestPausedMap.set(this, new Map());
        _NetworkEventManager_httpRequestsMap.set(this, new Map());
        /*
         * The below maps are used to reconcile Network.responseReceivedExtraInfo
         * events with their corresponding request. Each response and redirect
         * response gets an ExtraInfo event, and we don't know which will come first.
         * This means that we have to store a Response or an ExtraInfo for each
         * response, and emit the event when we get both of them. In addition, to
         * handle redirects, we have to make them Arrays to represent the chain of
         * events.
         */
        _NetworkEventManager_responseReceivedExtraInfoMap.set(this, new Map());
        _NetworkEventManager_queuedRedirectInfoMap.set(this, new Map());
        _NetworkEventManager_queuedEventGroupMap.set(this, new Map());
    }
    forget(networkRequestId) {
        __classPrivateFieldGet(this, _NetworkEventManager_requestWillBeSentMap, "f").delete(networkRequestId);
        __classPrivateFieldGet(this, _NetworkEventManager_requestPausedMap, "f").delete(networkRequestId);
        __classPrivateFieldGet(this, _NetworkEventManager_queuedEventGroupMap, "f").delete(networkRequestId);
        __classPrivateFieldGet(this, _NetworkEventManager_queuedRedirectInfoMap, "f").delete(networkRequestId);
        __classPrivateFieldGet(this, _NetworkEventManager_responseReceivedExtraInfoMap, "f").delete(networkRequestId);
    }
    responseExtraInfo(networkRequestId) {
        if (!__classPrivateFieldGet(this, _NetworkEventManager_responseReceivedExtraInfoMap, "f").has(networkRequestId)) {
            __classPrivateFieldGet(this, _NetworkEventManager_responseReceivedExtraInfoMap, "f").set(networkRequestId, []);
        }
        return __classPrivateFieldGet(this, _NetworkEventManager_responseReceivedExtraInfoMap, "f").get(networkRequestId);
    }
    queuedRedirectInfo(fetchRequestId) {
        if (!__classPrivateFieldGet(this, _NetworkEventManager_queuedRedirectInfoMap, "f").has(fetchRequestId)) {
            __classPrivateFieldGet(this, _NetworkEventManager_queuedRedirectInfoMap, "f").set(fetchRequestId, []);
        }
        return __classPrivateFieldGet(this, _NetworkEventManager_queuedRedirectInfoMap, "f").get(fetchRequestId);
    }
    queueRedirectInfo(fetchRequestId, redirectInfo) {
        this.queuedRedirectInfo(fetchRequestId).push(redirectInfo);
    }
    takeQueuedRedirectInfo(fetchRequestId) {
        return this.queuedRedirectInfo(fetchRequestId).shift();
    }
    numRequestsInProgress() {
        return [...__classPrivateFieldGet(this, _NetworkEventManager_httpRequestsMap, "f")].filter(([, request]) => {
            return !request.response();
        }).length;
    }
    storeRequestWillBeSent(networkRequestId, event) {
        __classPrivateFieldGet(this, _NetworkEventManager_requestWillBeSentMap, "f").set(networkRequestId, event);
    }
    getRequestWillBeSent(networkRequestId) {
        return __classPrivateFieldGet(this, _NetworkEventManager_requestWillBeSentMap, "f").get(networkRequestId);
    }
    forgetRequestWillBeSent(networkRequestId) {
        __classPrivateFieldGet(this, _NetworkEventManager_requestWillBeSentMap, "f").delete(networkRequestId);
    }
    getRequestPaused(networkRequestId) {
        return __classPrivateFieldGet(this, _NetworkEventManager_requestPausedMap, "f").get(networkRequestId);
    }
    forgetRequestPaused(networkRequestId) {
        __classPrivateFieldGet(this, _NetworkEventManager_requestPausedMap, "f").delete(networkRequestId);
    }
    storeRequestPaused(networkRequestId, event) {
        __classPrivateFieldGet(this, _NetworkEventManager_requestPausedMap, "f").set(networkRequestId, event);
    }
    getRequest(networkRequestId) {
        return __classPrivateFieldGet(this, _NetworkEventManager_httpRequestsMap, "f").get(networkRequestId);
    }
    storeRequest(networkRequestId, request) {
        __classPrivateFieldGet(this, _NetworkEventManager_httpRequestsMap, "f").set(networkRequestId, request);
    }
    forgetRequest(networkRequestId) {
        __classPrivateFieldGet(this, _NetworkEventManager_httpRequestsMap, "f").delete(networkRequestId);
    }
    getQueuedEventGroup(networkRequestId) {
        return __classPrivateFieldGet(this, _NetworkEventManager_queuedEventGroupMap, "f").get(networkRequestId);
    }
    queueEventGroup(networkRequestId, event) {
        __classPrivateFieldGet(this, _NetworkEventManager_queuedEventGroupMap, "f").set(networkRequestId, event);
    }
    forgetQueuedEventGroup(networkRequestId) {
        __classPrivateFieldGet(this, _NetworkEventManager_queuedEventGroupMap, "f").delete(networkRequestId);
    }
}
_NetworkEventManager_requestWillBeSentMap = new WeakMap(), _NetworkEventManager_requestPausedMap = new WeakMap(), _NetworkEventManager_httpRequestsMap = new WeakMap(), _NetworkEventManager_responseReceivedExtraInfoMap = new WeakMap(), _NetworkEventManager_queuedRedirectInfoMap = new WeakMap(), _NetworkEventManager_queuedEventGroupMap = new WeakMap();
//# sourceMappingURL=NetworkEventManager.js.map

/***/ }),

/***/ 2765:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "r": () => (/* binding */ NetworkManager),
/* harmony export */   "x": () => (/* binding */ NetworkManagerEmittedEvents)
/* harmony export */ });
/* harmony import */ var _util_assert_js__WEBPACK_IMPORTED_MODULE_6__ = __nccwpck_require__(5172);
/* harmony import */ var _EventEmitter_js__WEBPACK_IMPORTED_MODULE_5__ = __nccwpck_require__(8856);
/* harmony import */ var _HTTPRequest_js__WEBPACK_IMPORTED_MODULE_0__ = __nccwpck_require__(4573);
/* harmony import */ var _HTTPResponse_js__WEBPACK_IMPORTED_MODULE_1__ = __nccwpck_require__(8599);
/* harmony import */ var _NetworkEventManager_js__WEBPACK_IMPORTED_MODULE_2__ = __nccwpck_require__(6557);
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_3__ = __nccwpck_require__(1823);
/* harmony import */ var _util_DebuggableDeferredPromise_js__WEBPACK_IMPORTED_MODULE_4__ = __nccwpck_require__(8125);
/**
 * Copyright 2017 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _NetworkManager_instances, _NetworkManager_client, _NetworkManager_ignoreHTTPSErrors, _NetworkManager_frameManager, _NetworkManager_networkEventManager, _NetworkManager_extraHTTPHeaders, _NetworkManager_credentials, _NetworkManager_attemptedAuthentications, _NetworkManager_userRequestInterceptionEnabled, _NetworkManager_protocolRequestInterceptionEnabled, _NetworkManager_userCacheDisabled, _NetworkManager_emulatedNetworkConditions, _NetworkManager_deferredInitPromise, _NetworkManager_updateNetworkConditions, _NetworkManager_updateProtocolRequestInterception, _NetworkManager_cacheDisabled, _NetworkManager_updateProtocolCacheDisabled, _NetworkManager_onRequestWillBeSent, _NetworkManager_onAuthRequired, _NetworkManager_onRequestPaused, _NetworkManager_patchRequestEventHeaders, _NetworkManager_onRequest, _NetworkManager_onRequestServedFromCache, _NetworkManager_handleRequestRedirect, _NetworkManager_emitResponseEvent, _NetworkManager_onResponseReceived, _NetworkManager_onResponseReceivedExtraInfo, _NetworkManager_forgetRequest, _NetworkManager_onLoadingFinished, _NetworkManager_emitLoadingFinished, _NetworkManager_onLoadingFailed, _NetworkManager_emitLoadingFailed;







/**
 * We use symbols to prevent any external parties listening to these events.
 * They are internal to Puppeteer.
 *
 * @internal
 */
const NetworkManagerEmittedEvents = {
    Request: Symbol('NetworkManager.Request'),
    RequestServedFromCache: Symbol('NetworkManager.RequestServedFromCache'),
    Response: Symbol('NetworkManager.Response'),
    RequestFailed: Symbol('NetworkManager.RequestFailed'),
    RequestFinished: Symbol('NetworkManager.RequestFinished'),
};
/**
 * @internal
 */
class NetworkManager extends _EventEmitter_js__WEBPACK_IMPORTED_MODULE_5__/* .EventEmitter */ .v {
    constructor(client, ignoreHTTPSErrors, frameManager) {
        super();
        _NetworkManager_instances.add(this);
        _NetworkManager_client.set(this, void 0);
        _NetworkManager_ignoreHTTPSErrors.set(this, void 0);
        _NetworkManager_frameManager.set(this, void 0);
        _NetworkManager_networkEventManager.set(this, new _NetworkEventManager_js__WEBPACK_IMPORTED_MODULE_2__/* .NetworkEventManager */ .z());
        _NetworkManager_extraHTTPHeaders.set(this, {});
        _NetworkManager_credentials.set(this, void 0);
        _NetworkManager_attemptedAuthentications.set(this, new Set());
        _NetworkManager_userRequestInterceptionEnabled.set(this, false);
        _NetworkManager_protocolRequestInterceptionEnabled.set(this, false);
        _NetworkManager_userCacheDisabled.set(this, false);
        _NetworkManager_emulatedNetworkConditions.set(this, {
            offline: false,
            upload: -1,
            download: -1,
            latency: 0,
        });
        _NetworkManager_deferredInitPromise.set(this, void 0);
        __classPrivateFieldSet(this, _NetworkManager_client, client, "f");
        __classPrivateFieldSet(this, _NetworkManager_ignoreHTTPSErrors, ignoreHTTPSErrors, "f");
        __classPrivateFieldSet(this, _NetworkManager_frameManager, frameManager, "f");
        __classPrivateFieldGet(this, _NetworkManager_client, "f").on('Fetch.requestPaused', __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_onRequestPaused).bind(this));
        __classPrivateFieldGet(this, _NetworkManager_client, "f").on('Fetch.authRequired', __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_onAuthRequired).bind(this));
        __classPrivateFieldGet(this, _NetworkManager_client, "f").on('Network.requestWillBeSent', __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_onRequestWillBeSent).bind(this));
        __classPrivateFieldGet(this, _NetworkManager_client, "f").on('Network.requestServedFromCache', __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_onRequestServedFromCache).bind(this));
        __classPrivateFieldGet(this, _NetworkManager_client, "f").on('Network.responseReceived', __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_onResponseReceived).bind(this));
        __classPrivateFieldGet(this, _NetworkManager_client, "f").on('Network.loadingFinished', __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_onLoadingFinished).bind(this));
        __classPrivateFieldGet(this, _NetworkManager_client, "f").on('Network.loadingFailed', __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_onLoadingFailed).bind(this));
        __classPrivateFieldGet(this, _NetworkManager_client, "f").on('Network.responseReceivedExtraInfo', __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_onResponseReceivedExtraInfo).bind(this));
    }
    /**
     * Initialize calls should avoid async dependencies between CDP calls as those
     * might not resolve until after the target is resumed causing a deadlock.
     */
    initialize() {
        if (__classPrivateFieldGet(this, _NetworkManager_deferredInitPromise, "f")) {
            return __classPrivateFieldGet(this, _NetworkManager_deferredInitPromise, "f");
        }
        __classPrivateFieldSet(this, _NetworkManager_deferredInitPromise, (0,_util_DebuggableDeferredPromise_js__WEBPACK_IMPORTED_MODULE_4__/* .createDebuggableDeferredPromise */ .j)('NetworkManager initialization timed out'), "f");
        const init = Promise.all([
            __classPrivateFieldGet(this, _NetworkManager_ignoreHTTPSErrors, "f")
                ? __classPrivateFieldGet(this, _NetworkManager_client, "f").send('Security.setIgnoreCertificateErrors', {
                    ignore: true,
                })
                : null,
            __classPrivateFieldGet(this, _NetworkManager_client, "f").send('Network.enable'),
        ]);
        const deferredInitPromise = __classPrivateFieldGet(this, _NetworkManager_deferredInitPromise, "f");
        init
            .then(() => {
            deferredInitPromise.resolve();
        })
            .catch(err => {
            deferredInitPromise.reject(err);
        });
        return __classPrivateFieldGet(this, _NetworkManager_deferredInitPromise, "f");
    }
    async authenticate(credentials) {
        __classPrivateFieldSet(this, _NetworkManager_credentials, credentials, "f");
        await __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_updateProtocolRequestInterception).call(this);
    }
    async setExtraHTTPHeaders(extraHTTPHeaders) {
        __classPrivateFieldSet(this, _NetworkManager_extraHTTPHeaders, {}, "f");
        for (const key of Object.keys(extraHTTPHeaders)) {
            const value = extraHTTPHeaders[key];
            (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_6__/* .assert */ .h)((0,_util_js__WEBPACK_IMPORTED_MODULE_3__/* .isString */ .HD)(value), `Expected value of header "${key}" to be String, but "${typeof value}" is found.`);
            __classPrivateFieldGet(this, _NetworkManager_extraHTTPHeaders, "f")[key.toLowerCase()] = value;
        }
        await __classPrivateFieldGet(this, _NetworkManager_client, "f").send('Network.setExtraHTTPHeaders', {
            headers: __classPrivateFieldGet(this, _NetworkManager_extraHTTPHeaders, "f"),
        });
    }
    extraHTTPHeaders() {
        return Object.assign({}, __classPrivateFieldGet(this, _NetworkManager_extraHTTPHeaders, "f"));
    }
    numRequestsInProgress() {
        return __classPrivateFieldGet(this, _NetworkManager_networkEventManager, "f").numRequestsInProgress();
    }
    async setOfflineMode(value) {
        __classPrivateFieldGet(this, _NetworkManager_emulatedNetworkConditions, "f").offline = value;
        await __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_updateNetworkConditions).call(this);
    }
    async emulateNetworkConditions(networkConditions) {
        __classPrivateFieldGet(this, _NetworkManager_emulatedNetworkConditions, "f").upload = networkConditions
            ? networkConditions.upload
            : -1;
        __classPrivateFieldGet(this, _NetworkManager_emulatedNetworkConditions, "f").download = networkConditions
            ? networkConditions.download
            : -1;
        __classPrivateFieldGet(this, _NetworkManager_emulatedNetworkConditions, "f").latency = networkConditions
            ? networkConditions.latency
            : 0;
        await __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_updateNetworkConditions).call(this);
    }
    async setUserAgent(userAgent, userAgentMetadata) {
        await __classPrivateFieldGet(this, _NetworkManager_client, "f").send('Network.setUserAgentOverride', {
            userAgent: userAgent,
            userAgentMetadata: userAgentMetadata,
        });
    }
    async setCacheEnabled(enabled) {
        __classPrivateFieldSet(this, _NetworkManager_userCacheDisabled, !enabled, "f");
        await __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_updateProtocolCacheDisabled).call(this);
    }
    async setRequestInterception(value) {
        __classPrivateFieldSet(this, _NetworkManager_userRequestInterceptionEnabled, value, "f");
        await __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_updateProtocolRequestInterception).call(this);
    }
}
_NetworkManager_client = new WeakMap(), _NetworkManager_ignoreHTTPSErrors = new WeakMap(), _NetworkManager_frameManager = new WeakMap(), _NetworkManager_networkEventManager = new WeakMap(), _NetworkManager_extraHTTPHeaders = new WeakMap(), _NetworkManager_credentials = new WeakMap(), _NetworkManager_attemptedAuthentications = new WeakMap(), _NetworkManager_userRequestInterceptionEnabled = new WeakMap(), _NetworkManager_protocolRequestInterceptionEnabled = new WeakMap(), _NetworkManager_userCacheDisabled = new WeakMap(), _NetworkManager_emulatedNetworkConditions = new WeakMap(), _NetworkManager_deferredInitPromise = new WeakMap(), _NetworkManager_instances = new WeakSet(), _NetworkManager_updateNetworkConditions = async function _NetworkManager_updateNetworkConditions() {
    await __classPrivateFieldGet(this, _NetworkManager_client, "f").send('Network.emulateNetworkConditions', {
        offline: __classPrivateFieldGet(this, _NetworkManager_emulatedNetworkConditions, "f").offline,
        latency: __classPrivateFieldGet(this, _NetworkManager_emulatedNetworkConditions, "f").latency,
        uploadThroughput: __classPrivateFieldGet(this, _NetworkManager_emulatedNetworkConditions, "f").upload,
        downloadThroughput: __classPrivateFieldGet(this, _NetworkManager_emulatedNetworkConditions, "f").download,
    });
}, _NetworkManager_updateProtocolRequestInterception = async function _NetworkManager_updateProtocolRequestInterception() {
    const enabled = __classPrivateFieldGet(this, _NetworkManager_userRequestInterceptionEnabled, "f") || !!__classPrivateFieldGet(this, _NetworkManager_credentials, "f");
    if (enabled === __classPrivateFieldGet(this, _NetworkManager_protocolRequestInterceptionEnabled, "f")) {
        return;
    }
    __classPrivateFieldSet(this, _NetworkManager_protocolRequestInterceptionEnabled, enabled, "f");
    if (enabled) {
        await Promise.all([
            __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_updateProtocolCacheDisabled).call(this),
            __classPrivateFieldGet(this, _NetworkManager_client, "f").send('Fetch.enable', {
                handleAuthRequests: true,
                patterns: [{ urlPattern: '*' }],
            }),
        ]);
    }
    else {
        await Promise.all([
            __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_updateProtocolCacheDisabled).call(this),
            __classPrivateFieldGet(this, _NetworkManager_client, "f").send('Fetch.disable'),
        ]);
    }
}, _NetworkManager_cacheDisabled = function _NetworkManager_cacheDisabled() {
    return __classPrivateFieldGet(this, _NetworkManager_userCacheDisabled, "f");
}, _NetworkManager_updateProtocolCacheDisabled = async function _NetworkManager_updateProtocolCacheDisabled() {
    await __classPrivateFieldGet(this, _NetworkManager_client, "f").send('Network.setCacheDisabled', {
        cacheDisabled: __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_cacheDisabled).call(this),
    });
}, _NetworkManager_onRequestWillBeSent = function _NetworkManager_onRequestWillBeSent(event) {
    // Request interception doesn't happen for data URLs with Network Service.
    if (__classPrivateFieldGet(this, _NetworkManager_userRequestInterceptionEnabled, "f") &&
        !event.request.url.startsWith('data:')) {
        const { requestId: networkRequestId } = event;
        __classPrivateFieldGet(this, _NetworkManager_networkEventManager, "f").storeRequestWillBeSent(networkRequestId, event);
        /**
         * CDP may have sent a Fetch.requestPaused event already. Check for it.
         */
        const requestPausedEvent = __classPrivateFieldGet(this, _NetworkManager_networkEventManager, "f").getRequestPaused(networkRequestId);
        if (requestPausedEvent) {
            const { requestId: fetchRequestId } = requestPausedEvent;
            __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_patchRequestEventHeaders).call(this, event, requestPausedEvent);
            __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_onRequest).call(this, event, fetchRequestId);
            __classPrivateFieldGet(this, _NetworkManager_networkEventManager, "f").forgetRequestPaused(networkRequestId);
        }
        return;
    }
    __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_onRequest).call(this, event, undefined);
}, _NetworkManager_onAuthRequired = function _NetworkManager_onAuthRequired(event) {
    let response = 'Default';
    if (__classPrivateFieldGet(this, _NetworkManager_attemptedAuthentications, "f").has(event.requestId)) {
        response = 'CancelAuth';
    }
    else if (__classPrivateFieldGet(this, _NetworkManager_credentials, "f")) {
        response = 'ProvideCredentials';
        __classPrivateFieldGet(this, _NetworkManager_attemptedAuthentications, "f").add(event.requestId);
    }
    const { username, password } = __classPrivateFieldGet(this, _NetworkManager_credentials, "f") || {
        username: undefined,
        password: undefined,
    };
    __classPrivateFieldGet(this, _NetworkManager_client, "f")
        .send('Fetch.continueWithAuth', {
        requestId: event.requestId,
        authChallengeResponse: { response, username, password },
    })
        .catch(_util_js__WEBPACK_IMPORTED_MODULE_3__/* .debugError */ .ur);
}, _NetworkManager_onRequestPaused = function _NetworkManager_onRequestPaused(event) {
    if (!__classPrivateFieldGet(this, _NetworkManager_userRequestInterceptionEnabled, "f") &&
        __classPrivateFieldGet(this, _NetworkManager_protocolRequestInterceptionEnabled, "f")) {
        __classPrivateFieldGet(this, _NetworkManager_client, "f")
            .send('Fetch.continueRequest', {
            requestId: event.requestId,
        })
            .catch(_util_js__WEBPACK_IMPORTED_MODULE_3__/* .debugError */ .ur);
    }
    const { networkId: networkRequestId, requestId: fetchRequestId } = event;
    if (!networkRequestId) {
        return;
    }
    const requestWillBeSentEvent = (() => {
        const requestWillBeSentEvent = __classPrivateFieldGet(this, _NetworkManager_networkEventManager, "f").getRequestWillBeSent(networkRequestId);
        // redirect requests have the same `requestId`,
        if (requestWillBeSentEvent &&
            (requestWillBeSentEvent.request.url !== event.request.url ||
                requestWillBeSentEvent.request.method !== event.request.method)) {
            __classPrivateFieldGet(this, _NetworkManager_networkEventManager, "f").forgetRequestWillBeSent(networkRequestId);
            return;
        }
        return requestWillBeSentEvent;
    })();
    if (requestWillBeSentEvent) {
        __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_patchRequestEventHeaders).call(this, requestWillBeSentEvent, event);
        __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_onRequest).call(this, requestWillBeSentEvent, fetchRequestId);
    }
    else {
        __classPrivateFieldGet(this, _NetworkManager_networkEventManager, "f").storeRequestPaused(networkRequestId, event);
    }
}, _NetworkManager_patchRequestEventHeaders = function _NetworkManager_patchRequestEventHeaders(requestWillBeSentEvent, requestPausedEvent) {
    requestWillBeSentEvent.request.headers = {
        ...requestWillBeSentEvent.request.headers,
        // includes extra headers, like: Accept, Origin
        ...requestPausedEvent.request.headers,
    };
}, _NetworkManager_onRequest = function _NetworkManager_onRequest(event, fetchRequestId) {
    let redirectChain = [];
    if (event.redirectResponse) {
        // We want to emit a response and requestfinished for the
        // redirectResponse, but we can't do so unless we have a
        // responseExtraInfo ready to pair it up with. If we don't have any
        // responseExtraInfos saved in our queue, they we have to wait until
        // the next one to emit response and requestfinished, *and* we should
        // also wait to emit this Request too because it should come after the
        // response/requestfinished.
        let redirectResponseExtraInfo = null;
        if (event.redirectHasExtraInfo) {
            redirectResponseExtraInfo = __classPrivateFieldGet(this, _NetworkManager_networkEventManager, "f")
                .responseExtraInfo(event.requestId)
                .shift();
            if (!redirectResponseExtraInfo) {
                __classPrivateFieldGet(this, _NetworkManager_networkEventManager, "f").queueRedirectInfo(event.requestId, {
                    event,
                    fetchRequestId,
                });
                return;
            }
        }
        const request = __classPrivateFieldGet(this, _NetworkManager_networkEventManager, "f").getRequest(event.requestId);
        // If we connect late to the target, we could have missed the
        // requestWillBeSent event.
        if (request) {
            __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_handleRequestRedirect).call(this, request, event.redirectResponse, redirectResponseExtraInfo);
            redirectChain = request._redirectChain;
        }
    }
    const frame = event.frameId
        ? __classPrivateFieldGet(this, _NetworkManager_frameManager, "f").frame(event.frameId)
        : null;
    const request = new _HTTPRequest_js__WEBPACK_IMPORTED_MODULE_0__/* .HTTPRequest */ .w2(__classPrivateFieldGet(this, _NetworkManager_client, "f"), frame, fetchRequestId, __classPrivateFieldGet(this, _NetworkManager_userRequestInterceptionEnabled, "f"), event, redirectChain);
    __classPrivateFieldGet(this, _NetworkManager_networkEventManager, "f").storeRequest(event.requestId, request);
    this.emit(NetworkManagerEmittedEvents.Request, request);
    request.finalizeInterceptions();
}, _NetworkManager_onRequestServedFromCache = function _NetworkManager_onRequestServedFromCache(event) {
    const request = __classPrivateFieldGet(this, _NetworkManager_networkEventManager, "f").getRequest(event.requestId);
    if (request) {
        request._fromMemoryCache = true;
    }
    this.emit(NetworkManagerEmittedEvents.RequestServedFromCache, request);
}, _NetworkManager_handleRequestRedirect = function _NetworkManager_handleRequestRedirect(request, responsePayload, extraInfo) {
    const response = new _HTTPResponse_js__WEBPACK_IMPORTED_MODULE_1__/* .HTTPResponse */ .t(__classPrivateFieldGet(this, _NetworkManager_client, "f"), request, responsePayload, extraInfo);
    request._response = response;
    request._redirectChain.push(request);
    response._resolveBody(new Error('Response body is unavailable for redirect responses'));
    __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_forgetRequest).call(this, request, false);
    this.emit(NetworkManagerEmittedEvents.Response, response);
    this.emit(NetworkManagerEmittedEvents.RequestFinished, request);
}, _NetworkManager_emitResponseEvent = function _NetworkManager_emitResponseEvent(responseReceived, extraInfo) {
    const request = __classPrivateFieldGet(this, _NetworkManager_networkEventManager, "f").getRequest(responseReceived.requestId);
    // FileUpload sends a response without a matching request.
    if (!request) {
        return;
    }
    const extraInfos = __classPrivateFieldGet(this, _NetworkManager_networkEventManager, "f").responseExtraInfo(responseReceived.requestId);
    if (extraInfos.length) {
        (0,_util_js__WEBPACK_IMPORTED_MODULE_3__/* .debugError */ .ur)(new Error('Unexpected extraInfo events for request ' +
            responseReceived.requestId));
    }
    const response = new _HTTPResponse_js__WEBPACK_IMPORTED_MODULE_1__/* .HTTPResponse */ .t(__classPrivateFieldGet(this, _NetworkManager_client, "f"), request, responseReceived.response, extraInfo);
    request._response = response;
    this.emit(NetworkManagerEmittedEvents.Response, response);
}, _NetworkManager_onResponseReceived = function _NetworkManager_onResponseReceived(event) {
    const request = __classPrivateFieldGet(this, _NetworkManager_networkEventManager, "f").getRequest(event.requestId);
    let extraInfo = null;
    if (request && !request._fromMemoryCache && event.hasExtraInfo) {
        extraInfo = __classPrivateFieldGet(this, _NetworkManager_networkEventManager, "f")
            .responseExtraInfo(event.requestId)
            .shift();
        if (!extraInfo) {
            // Wait until we get the corresponding ExtraInfo event.
            __classPrivateFieldGet(this, _NetworkManager_networkEventManager, "f").queueEventGroup(event.requestId, {
                responseReceivedEvent: event,
            });
            return;
        }
    }
    __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_emitResponseEvent).call(this, event, extraInfo);
}, _NetworkManager_onResponseReceivedExtraInfo = function _NetworkManager_onResponseReceivedExtraInfo(event) {
    // We may have skipped a redirect response/request pair due to waiting for
    // this ExtraInfo event. If so, continue that work now that we have the
    // request.
    const redirectInfo = __classPrivateFieldGet(this, _NetworkManager_networkEventManager, "f").takeQueuedRedirectInfo(event.requestId);
    if (redirectInfo) {
        __classPrivateFieldGet(this, _NetworkManager_networkEventManager, "f").responseExtraInfo(event.requestId).push(event);
        __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_onRequest).call(this, redirectInfo.event, redirectInfo.fetchRequestId);
        return;
    }
    // We may have skipped response and loading events because we didn't have
    // this ExtraInfo event yet. If so, emit those events now.
    const queuedEvents = __classPrivateFieldGet(this, _NetworkManager_networkEventManager, "f").getQueuedEventGroup(event.requestId);
    if (queuedEvents) {
        __classPrivateFieldGet(this, _NetworkManager_networkEventManager, "f").forgetQueuedEventGroup(event.requestId);
        __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_emitResponseEvent).call(this, queuedEvents.responseReceivedEvent, event);
        if (queuedEvents.loadingFinishedEvent) {
            __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_emitLoadingFinished).call(this, queuedEvents.loadingFinishedEvent);
        }
        if (queuedEvents.loadingFailedEvent) {
            __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_emitLoadingFailed).call(this, queuedEvents.loadingFailedEvent);
        }
        return;
    }
    // Wait until we get another event that can use this ExtraInfo event.
    __classPrivateFieldGet(this, _NetworkManager_networkEventManager, "f").responseExtraInfo(event.requestId).push(event);
}, _NetworkManager_forgetRequest = function _NetworkManager_forgetRequest(request, events) {
    const requestId = request._requestId;
    const interceptionId = request._interceptionId;
    __classPrivateFieldGet(this, _NetworkManager_networkEventManager, "f").forgetRequest(requestId);
    interceptionId !== undefined &&
        __classPrivateFieldGet(this, _NetworkManager_attemptedAuthentications, "f").delete(interceptionId);
    if (events) {
        __classPrivateFieldGet(this, _NetworkManager_networkEventManager, "f").forget(requestId);
    }
}, _NetworkManager_onLoadingFinished = function _NetworkManager_onLoadingFinished(event) {
    // If the response event for this request is still waiting on a
    // corresponding ExtraInfo event, then wait to emit this event too.
    const queuedEvents = __classPrivateFieldGet(this, _NetworkManager_networkEventManager, "f").getQueuedEventGroup(event.requestId);
    if (queuedEvents) {
        queuedEvents.loadingFinishedEvent = event;
    }
    else {
        __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_emitLoadingFinished).call(this, event);
    }
}, _NetworkManager_emitLoadingFinished = function _NetworkManager_emitLoadingFinished(event) {
    var _a;
    const request = __classPrivateFieldGet(this, _NetworkManager_networkEventManager, "f").getRequest(event.requestId);
    // For certain requestIds we never receive requestWillBeSent event.
    // @see https://crbug.com/750469
    if (!request) {
        return;
    }
    // Under certain conditions we never get the Network.responseReceived
    // event from protocol. @see https://crbug.com/883475
    if (request.response()) {
        (_a = request.response()) === null || _a === void 0 ? void 0 : _a._resolveBody(null);
    }
    __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_forgetRequest).call(this, request, true);
    this.emit(NetworkManagerEmittedEvents.RequestFinished, request);
}, _NetworkManager_onLoadingFailed = function _NetworkManager_onLoadingFailed(event) {
    // If the response event for this request is still waiting on a
    // corresponding ExtraInfo event, then wait to emit this event too.
    const queuedEvents = __classPrivateFieldGet(this, _NetworkManager_networkEventManager, "f").getQueuedEventGroup(event.requestId);
    if (queuedEvents) {
        queuedEvents.loadingFailedEvent = event;
    }
    else {
        __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_emitLoadingFailed).call(this, event);
    }
}, _NetworkManager_emitLoadingFailed = function _NetworkManager_emitLoadingFailed(event) {
    const request = __classPrivateFieldGet(this, _NetworkManager_networkEventManager, "f").getRequest(event.requestId);
    // For certain requestIds we never receive requestWillBeSent event.
    // @see https://crbug.com/750469
    if (!request) {
        return;
    }
    request._failureText = event.errorText;
    const response = request.response();
    if (response) {
        response._resolveBody(null);
    }
    __classPrivateFieldGet(this, _NetworkManager_instances, "m", _NetworkManager_forgetRequest).call(this, request, true);
    this.emit(NetworkManagerEmittedEvents.RequestFailed, request);
};
//# sourceMappingURL=NetworkManager.js.map

/***/ }),

/***/ 2401:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

// ESM COMPAT FLAG
__nccwpck_require__.r(__webpack_exports__);

// EXPORTS
__nccwpck_require__.d(__webpack_exports__, {
  "NodeWebSocketTransport": () => (/* binding */ NodeWebSocketTransport)
});

// EXTERNAL MODULE: ./node_modules/puppeteer-core/node_modules/ws/lib/stream.js
var stream = __nccwpck_require__(4286);
// EXTERNAL MODULE: ./node_modules/puppeteer-core/node_modules/ws/lib/receiver.js
var receiver = __nccwpck_require__(2516);
// EXTERNAL MODULE: ./node_modules/puppeteer-core/node_modules/ws/lib/sender.js
var sender = __nccwpck_require__(5353);
// EXTERNAL MODULE: ./node_modules/puppeteer-core/node_modules/ws/lib/websocket.js
var websocket = __nccwpck_require__(9870);
// EXTERNAL MODULE: ./node_modules/puppeteer-core/node_modules/ws/lib/websocket-server.js
var websocket_server = __nccwpck_require__(4137);
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/node_modules/ws/wrapper.mjs







/* harmony default export */ const wrapper = (websocket);

;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/generated/version.js
/**
 * @internal
 */
const packageVersion = '19.7.0';
//# sourceMappingURL=version.js.map
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/NodeWebSocketTransport.js
var __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _NodeWebSocketTransport_ws;
/**
 * Copyright 2018 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/**
 * @internal
 */
class NodeWebSocketTransport {
    static create(url, headers) {
        return new Promise((resolve, reject) => {
            const ws = new wrapper(url, [], {
                followRedirects: true,
                perMessageDeflate: false,
                maxPayload: 256 * 1024 * 1024,
                headers: {
                    'User-Agent': `Puppeteer ${packageVersion}`,
                    ...headers,
                },
            });
            ws.addEventListener('open', () => {
                return resolve(new NodeWebSocketTransport(ws));
            });
            ws.addEventListener('error', reject);
        });
    }
    constructor(ws) {
        _NodeWebSocketTransport_ws.set(this, void 0);
        __classPrivateFieldSet(this, _NodeWebSocketTransport_ws, ws, "f");
        __classPrivateFieldGet(this, _NodeWebSocketTransport_ws, "f").addEventListener('message', event => {
            if (this.onmessage) {
                this.onmessage.call(null, event.data);
            }
        });
        __classPrivateFieldGet(this, _NodeWebSocketTransport_ws, "f").addEventListener('close', () => {
            if (this.onclose) {
                this.onclose.call(null);
            }
        });
        // Silently ignore all errors - we don't know what to do with them.
        __classPrivateFieldGet(this, _NodeWebSocketTransport_ws, "f").addEventListener('error', () => { });
    }
    send(message) {
        __classPrivateFieldGet(this, _NodeWebSocketTransport_ws, "f").send(message);
    }
    close() {
        __classPrivateFieldGet(this, _NodeWebSocketTransport_ws, "f").close();
    }
}
_NodeWebSocketTransport_ws = new WeakMap();
//# sourceMappingURL=NodeWebSocketTransport.js.map

/***/ }),

/***/ 6402:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "RO": () => (/* binding */ unregisterCustomQueryHandler),
/* harmony export */   "e3": () => (/* binding */ customQueryHandlerNames),
/* harmony export */   "oc": () => (/* binding */ clearCustomQueryHandlers),
/* harmony export */   "rB": () => (/* binding */ getQueryHandlerAndSelector),
/* harmony export */   "sc": () => (/* binding */ registerCustomQueryHandler)
/* harmony export */ });
/* harmony import */ var _util_assert_js__WEBPACK_IMPORTED_MODULE_4__ = __nccwpck_require__(5172);
/* harmony import */ var _AriaQueryHandler_js__WEBPACK_IMPORTED_MODULE_0__ = __nccwpck_require__(3503);
/* harmony import */ var _api_ElementHandle_js__WEBPACK_IMPORTED_MODULE_5__ = __nccwpck_require__(2559);
/* harmony import */ var _Frame_js__WEBPACK_IMPORTED_MODULE_1__ = __nccwpck_require__(5360);
/* harmony import */ var _IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_2__ = __nccwpck_require__(6356);
/* harmony import */ var _LazyArg_js__WEBPACK_IMPORTED_MODULE_3__ = __nccwpck_require__(5532);
/**
 * Copyright 2020 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */






function createPuppeteerQueryHandler(handler) {
    const internalHandler = {};
    if (handler.queryOne) {
        const queryOne = handler.queryOne;
        internalHandler.queryOne = async (element, selector) => {
            const world = element.executionContext()._world;
            (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_4__/* .assert */ .h)(world);
            const jsHandle = await element.evaluateHandle(queryOne, selector, _LazyArg_js__WEBPACK_IMPORTED_MODULE_3__/* .LazyArg.create */ .O.create(context => {
                return context.puppeteerUtil;
            }));
            const elementHandle = jsHandle.asElement();
            if (elementHandle) {
                return elementHandle;
            }
            await jsHandle.dispose();
            return null;
        };
        internalHandler.waitFor = async (elementOrFrame, selector, options) => {
            let frame;
            let element;
            if (elementOrFrame instanceof _Frame_js__WEBPACK_IMPORTED_MODULE_1__/* .Frame */ .R) {
                frame = elementOrFrame;
            }
            else {
                frame = elementOrFrame.frame;
                element = await frame.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_2__/* .PUPPETEER_WORLD */ .R].adoptHandle(elementOrFrame);
            }
            const result = await frame.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_2__/* .PUPPETEER_WORLD */ .R]._waitForSelectorInPage(queryOne, element, selector, options);
            if (element) {
                await element.dispose();
            }
            if (!result) {
                return null;
            }
            if (!(result instanceof _api_ElementHandle_js__WEBPACK_IMPORTED_MODULE_5__/* .ElementHandle */ .E)) {
                await result.dispose();
                return null;
            }
            return frame.worlds[_IsolatedWorlds_js__WEBPACK_IMPORTED_MODULE_2__/* .MAIN_WORLD */ .H].transferHandle(result);
        };
    }
    if (handler.queryAll) {
        const queryAll = handler.queryAll;
        internalHandler.queryAll = async (element, selector) => {
            const world = element.executionContext()._world;
            (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_4__/* .assert */ .h)(world);
            const jsHandle = await element.evaluateHandle(queryAll, selector, _LazyArg_js__WEBPACK_IMPORTED_MODULE_3__/* .LazyArg.create */ .O.create(context => {
                return context.puppeteerUtil;
            }));
            const properties = await jsHandle.getProperties();
            await jsHandle.dispose();
            const result = [];
            for (const property of properties.values()) {
                const elementHandle = property.asElement();
                if (elementHandle) {
                    result.push(elementHandle);
                }
            }
            return result;
        };
    }
    return internalHandler;
}
const defaultHandler = createPuppeteerQueryHandler({
    queryOne: (element, selector) => {
        if (!('querySelector' in element)) {
            throw new Error(`Could not invoke \`querySelector\` on node of type ${element.nodeName}.`);
        }
        return element.querySelector(selector);
    },
    queryAll: (element, selector) => {
        if (!('querySelectorAll' in element)) {
            throw new Error(`Could not invoke \`querySelectorAll\` on node of type ${element.nodeName}.`);
        }
        return [
            ...element.querySelectorAll(selector),
        ];
    },
});
const pierceHandler = createPuppeteerQueryHandler({
    queryOne: (element, selector, { pierceQuerySelector }) => {
        return pierceQuerySelector(element, selector);
    },
    queryAll: (element, selector, { pierceQuerySelectorAll }) => {
        return pierceQuerySelectorAll(element, selector);
    },
});
const xpathHandler = createPuppeteerQueryHandler({
    queryOne: (element, selector, { xpathQuerySelector }) => {
        return xpathQuerySelector(element, selector);
    },
    queryAll: (element, selector, { xpathQuerySelectorAll }) => {
        return xpathQuerySelectorAll(element, selector);
    },
});
const textQueryHandler = createPuppeteerQueryHandler({
    queryOne: (element, selector, { textQuerySelector }) => {
        return textQuerySelector(element, selector);
    },
    queryAll: (element, selector, { textQuerySelectorAll }) => {
        return textQuerySelectorAll(element, selector);
    },
});
const INTERNAL_QUERY_HANDLERS = new Map([
    ['aria', { handler: _AriaQueryHandler_js__WEBPACK_IMPORTED_MODULE_0__/* .ariaHandler */ .f }],
    ['pierce', { handler: pierceHandler }],
    ['xpath', { handler: xpathHandler }],
    ['text', { handler: textQueryHandler }],
]);
const QUERY_HANDLERS = new Map();
/**
 * @deprecated Import {@link Puppeteer} and use the static method
 * {@link Puppeteer.registerCustomQueryHandler}
 *
 * @public
 */
function registerCustomQueryHandler(name, handler) {
    if (INTERNAL_QUERY_HANDLERS.has(name)) {
        throw new Error(`A query handler named "${name}" already exists`);
    }
    if (QUERY_HANDLERS.has(name)) {
        throw new Error(`A custom query handler named "${name}" already exists`);
    }
    const isValidName = /^[a-zA-Z]+$/.test(name);
    if (!isValidName) {
        throw new Error(`Custom query handler names may only contain [a-zA-Z]`);
    }
    QUERY_HANDLERS.set(name, { handler: createPuppeteerQueryHandler(handler) });
}
/**
 * @deprecated Import {@link Puppeteer} and use the static method
 * {@link Puppeteer.unregisterCustomQueryHandler}
 *
 * @public
 */
function unregisterCustomQueryHandler(name) {
    QUERY_HANDLERS.delete(name);
}
/**
 * @deprecated Import {@link Puppeteer} and use the static method
 * {@link Puppeteer.customQueryHandlerNames}
 *
 * @public
 */
function customQueryHandlerNames() {
    return [...QUERY_HANDLERS.keys()];
}
/**
 * @deprecated Import {@link Puppeteer} and use the static method
 * {@link Puppeteer.clearCustomQueryHandlers}
 *
 * @public
 */
function clearCustomQueryHandlers() {
    QUERY_HANDLERS.clear();
}
const CUSTOM_QUERY_SEPARATORS = ['=', '/'];
/**
 * @internal
 */
function getQueryHandlerAndSelector(selector) {
    for (const handlerMap of [QUERY_HANDLERS, INTERNAL_QUERY_HANDLERS]) {
        for (const [name, { handler: queryHandler, transformSelector },] of handlerMap) {
            for (const separator of CUSTOM_QUERY_SEPARATORS) {
                const prefix = `${name}${separator}`;
                if (selector.startsWith(prefix)) {
                    selector = selector.slice(prefix.length);
                    if (transformSelector) {
                        selector = transformSelector(selector);
                    }
                    return { updatedSelector: selector, queryHandler };
                }
            }
        }
    }
    return { updatedSelector: selector, queryHandler: defaultHandler };
}
//# sourceMappingURL=QueryHandler.js.map

/***/ }),

/***/ 4029:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "S": () => (/* binding */ SecurityDetails)
/* harmony export */ });
/**
 * Copyright 2020 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _SecurityDetails_subjectName, _SecurityDetails_issuer, _SecurityDetails_validFrom, _SecurityDetails_validTo, _SecurityDetails_protocol, _SecurityDetails_sanList;
/**
 * The SecurityDetails class represents the security details of a
 * response that was received over a secure connection.
 *
 * @public
 */
class SecurityDetails {
    /**
     * @internal
     */
    constructor(securityPayload) {
        _SecurityDetails_subjectName.set(this, void 0);
        _SecurityDetails_issuer.set(this, void 0);
        _SecurityDetails_validFrom.set(this, void 0);
        _SecurityDetails_validTo.set(this, void 0);
        _SecurityDetails_protocol.set(this, void 0);
        _SecurityDetails_sanList.set(this, void 0);
        __classPrivateFieldSet(this, _SecurityDetails_subjectName, securityPayload.subjectName, "f");
        __classPrivateFieldSet(this, _SecurityDetails_issuer, securityPayload.issuer, "f");
        __classPrivateFieldSet(this, _SecurityDetails_validFrom, securityPayload.validFrom, "f");
        __classPrivateFieldSet(this, _SecurityDetails_validTo, securityPayload.validTo, "f");
        __classPrivateFieldSet(this, _SecurityDetails_protocol, securityPayload.protocol, "f");
        __classPrivateFieldSet(this, _SecurityDetails_sanList, securityPayload.sanList, "f");
    }
    /**
     * @returns The name of the issuer of the certificate.
     */
    issuer() {
        return __classPrivateFieldGet(this, _SecurityDetails_issuer, "f");
    }
    /**
     * @returns {@link https://en.wikipedia.org/wiki/Unix_time | Unix timestamp}
     * marking the start of the certificate's validity.
     */
    validFrom() {
        return __classPrivateFieldGet(this, _SecurityDetails_validFrom, "f");
    }
    /**
     * @returns {@link https://en.wikipedia.org/wiki/Unix_time | Unix timestamp}
     * marking the end of the certificate's validity.
     */
    validTo() {
        return __classPrivateFieldGet(this, _SecurityDetails_validTo, "f");
    }
    /**
     * @returns The security protocol being used, e.g. "TLS 1.2".
     */
    protocol() {
        return __classPrivateFieldGet(this, _SecurityDetails_protocol, "f");
    }
    /**
     * @returns The name of the subject to which the certificate was issued.
     */
    subjectName() {
        return __classPrivateFieldGet(this, _SecurityDetails_subjectName, "f");
    }
    /**
     * @returns The list of {@link https://en.wikipedia.org/wiki/Subject_Alternative_Name | subject alternative names (SANs)} of the certificate.
     */
    subjectAlternativeNames() {
        return __classPrivateFieldGet(this, _SecurityDetails_sanList, "f");
    }
}
_SecurityDetails_subjectName = new WeakMap(), _SecurityDetails_issuer = new WeakMap(), _SecurityDetails_validFrom = new WeakMap(), _SecurityDetails_validTo = new WeakMap(), _SecurityDetails_protocol = new WeakMap(), _SecurityDetails_sanList = new WeakMap();
//# sourceMappingURL=SecurityDetails.js.map

/***/ }),

/***/ 6134:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "F": () => (/* binding */ WaitTask),
/* harmony export */   "q": () => (/* binding */ TaskManager)
/* harmony export */ });
/* harmony import */ var _util_DeferredPromise_js__WEBPACK_IMPORTED_MODULE_0__ = __nccwpck_require__(761);
/* harmony import */ var _Errors_js__WEBPACK_IMPORTED_MODULE_1__ = __nccwpck_require__(7154);
/* harmony import */ var _LazyArg_js__WEBPACK_IMPORTED_MODULE_2__ = __nccwpck_require__(5532);
/**
 * Copyright 2022 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _WaitTask_world, _WaitTask_bindings, _WaitTask_polling, _WaitTask_root, _WaitTask_fn, _WaitTask_args, _WaitTask_timeout, _WaitTask_result, _WaitTask_poller, _TaskManager_tasks;



/**
 * @internal
 */
class WaitTask {
    constructor(world, options, fn, ...args) {
        var _a;
        _WaitTask_world.set(this, void 0);
        _WaitTask_bindings.set(this, void 0);
        _WaitTask_polling.set(this, void 0);
        _WaitTask_root.set(this, void 0);
        _WaitTask_fn.set(this, void 0);
        _WaitTask_args.set(this, void 0);
        _WaitTask_timeout.set(this, void 0);
        _WaitTask_result.set(this, (0,_util_DeferredPromise_js__WEBPACK_IMPORTED_MODULE_0__/* .createDeferredPromise */ .W)());
        _WaitTask_poller.set(this, void 0);
        __classPrivateFieldSet(this, _WaitTask_world, world, "f");
        __classPrivateFieldSet(this, _WaitTask_bindings, (_a = options.bindings) !== null && _a !== void 0 ? _a : new Map(), "f");
        __classPrivateFieldSet(this, _WaitTask_polling, options.polling, "f");
        __classPrivateFieldSet(this, _WaitTask_root, options.root, "f");
        switch (typeof fn) {
            case 'string':
                __classPrivateFieldSet(this, _WaitTask_fn, `() => {return (${fn});}`, "f");
                break;
            default:
                __classPrivateFieldSet(this, _WaitTask_fn, fn.toString(), "f");
                break;
        }
        __classPrivateFieldSet(this, _WaitTask_args, args, "f");
        __classPrivateFieldGet(this, _WaitTask_world, "f").taskManager.add(this);
        if (options.timeout) {
            __classPrivateFieldSet(this, _WaitTask_timeout, setTimeout(() => {
                this.terminate(new _Errors_js__WEBPACK_IMPORTED_MODULE_1__/* .TimeoutError */ .W5(`Waiting failed: ${options.timeout}ms exceeded`));
            }, options.timeout), "f");
        }
        if (__classPrivateFieldGet(this, _WaitTask_bindings, "f").size !== 0) {
            for (const [name, fn] of __classPrivateFieldGet(this, _WaitTask_bindings, "f")) {
                __classPrivateFieldGet(this, _WaitTask_world, "f")._boundFunctions.set(name, fn);
            }
        }
        this.rerun();
    }
    get result() {
        return __classPrivateFieldGet(this, _WaitTask_result, "f");
    }
    async rerun() {
        try {
            if (__classPrivateFieldGet(this, _WaitTask_bindings, "f").size !== 0) {
                const context = await __classPrivateFieldGet(this, _WaitTask_world, "f").executionContext();
                await Promise.all([...__classPrivateFieldGet(this, _WaitTask_bindings, "f")].map(async ([name]) => {
                    return await __classPrivateFieldGet(this, _WaitTask_world, "f")._addBindingToContext(context, name);
                }));
            }
            switch (__classPrivateFieldGet(this, _WaitTask_polling, "f")) {
                case 'raf':
                    __classPrivateFieldSet(this, _WaitTask_poller, await __classPrivateFieldGet(this, _WaitTask_world, "f").evaluateHandle(({ RAFPoller, createFunction }, fn, ...args) => {
                        const fun = createFunction(fn);
                        return new RAFPoller(() => {
                            return fun(...args);
                        });
                    }, _LazyArg_js__WEBPACK_IMPORTED_MODULE_2__/* .LazyArg.create */ .O.create(context => {
                        return context.puppeteerUtil;
                    }), __classPrivateFieldGet(this, _WaitTask_fn, "f"), ...__classPrivateFieldGet(this, _WaitTask_args, "f")), "f");
                    break;
                case 'mutation':
                    __classPrivateFieldSet(this, _WaitTask_poller, await __classPrivateFieldGet(this, _WaitTask_world, "f").evaluateHandle(({ MutationPoller, createFunction }, root, fn, ...args) => {
                        const fun = createFunction(fn);
                        return new MutationPoller(() => {
                            return fun(...args);
                        }, root || document);
                    }, _LazyArg_js__WEBPACK_IMPORTED_MODULE_2__/* .LazyArg.create */ .O.create(context => {
                        return context.puppeteerUtil;
                    }), __classPrivateFieldGet(this, _WaitTask_root, "f"), __classPrivateFieldGet(this, _WaitTask_fn, "f"), ...__classPrivateFieldGet(this, _WaitTask_args, "f")), "f");
                    break;
                default:
                    __classPrivateFieldSet(this, _WaitTask_poller, await __classPrivateFieldGet(this, _WaitTask_world, "f").evaluateHandle(({ IntervalPoller, createFunction }, ms, fn, ...args) => {
                        const fun = createFunction(fn);
                        return new IntervalPoller(() => {
                            return fun(...args);
                        }, ms);
                    }, _LazyArg_js__WEBPACK_IMPORTED_MODULE_2__/* .LazyArg.create */ .O.create(context => {
                        return context.puppeteerUtil;
                    }), __classPrivateFieldGet(this, _WaitTask_polling, "f"), __classPrivateFieldGet(this, _WaitTask_fn, "f"), ...__classPrivateFieldGet(this, _WaitTask_args, "f")), "f");
                    break;
            }
            await __classPrivateFieldGet(this, _WaitTask_poller, "f").evaluate(poller => {
                poller.start();
            });
            const result = await __classPrivateFieldGet(this, _WaitTask_poller, "f").evaluateHandle(poller => {
                return poller.result();
            });
            __classPrivateFieldGet(this, _WaitTask_result, "f").resolve(result);
            await this.terminate();
        }
        catch (error) {
            const badError = this.getBadError(error);
            if (badError) {
                await this.terminate(badError);
            }
        }
    }
    async terminate(error) {
        __classPrivateFieldGet(this, _WaitTask_world, "f").taskManager.delete(this);
        if (__classPrivateFieldGet(this, _WaitTask_timeout, "f")) {
            clearTimeout(__classPrivateFieldGet(this, _WaitTask_timeout, "f"));
        }
        if (error && !__classPrivateFieldGet(this, _WaitTask_result, "f").finished()) {
            __classPrivateFieldGet(this, _WaitTask_result, "f").reject(error);
        }
        if (__classPrivateFieldGet(this, _WaitTask_poller, "f")) {
            try {
                await __classPrivateFieldGet(this, _WaitTask_poller, "f").evaluateHandle(async (poller) => {
                    await poller.stop();
                });
                if (__classPrivateFieldGet(this, _WaitTask_poller, "f")) {
                    await __classPrivateFieldGet(this, _WaitTask_poller, "f").dispose();
                    __classPrivateFieldSet(this, _WaitTask_poller, undefined, "f");
                }
            }
            catch {
                // Ignore errors since they most likely come from low-level cleanup.
            }
        }
    }
    /**
     * Not all errors lead to termination. They usually imply we need to rerun the task.
     */
    getBadError(error) {
        if (error instanceof Error) {
            // When frame is detached the task should have been terminated by the IsolatedWorld.
            // This can fail if we were adding this task while the frame was detached,
            // so we terminate here instead.
            if (error.message.includes('Execution context is not available in detached frame')) {
                return new Error('Waiting failed: Frame detached');
            }
            // When the page is navigated, the promise is rejected.
            // We will try again in the new execution context.
            if (error.message.includes('Execution context was destroyed')) {
                return;
            }
            // We could have tried to evaluate in a context which was already
            // destroyed.
            if (error.message.includes('Cannot find context with specified id')) {
                return;
            }
        }
        return error;
    }
}
_WaitTask_world = new WeakMap(), _WaitTask_bindings = new WeakMap(), _WaitTask_polling = new WeakMap(), _WaitTask_root = new WeakMap(), _WaitTask_fn = new WeakMap(), _WaitTask_args = new WeakMap(), _WaitTask_timeout = new WeakMap(), _WaitTask_result = new WeakMap(), _WaitTask_poller = new WeakMap();
/**
 * @internal
 */
class TaskManager {
    constructor() {
        _TaskManager_tasks.set(this, new Set());
    }
    add(task) {
        __classPrivateFieldGet(this, _TaskManager_tasks, "f").add(task);
    }
    delete(task) {
        __classPrivateFieldGet(this, _TaskManager_tasks, "f").delete(task);
    }
    terminateAll(error) {
        for (const task of __classPrivateFieldGet(this, _TaskManager_tasks, "f")) {
            task.terminate(error);
        }
        __classPrivateFieldGet(this, _TaskManager_tasks, "f").clear();
    }
    async rerunAll() {
        await Promise.all([...__classPrivateFieldGet(this, _TaskManager_tasks, "f")].map(task => {
            return task.rerun();
        }));
    }
}
_TaskManager_tasks = new WeakMap();
//# sourceMappingURL=WaitTask.js.map

/***/ }),

/***/ 1823:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "CS": () => (/* binding */ waitWithTimeout),
/* harmony export */   "D": () => (/* binding */ stringifyFunction),
/* harmony export */   "FP": () => (/* binding */ pageBindingDeliverErrorString),
/* harmony export */   "FX": () => (/* binding */ importFS),
/* harmony export */   "HD": () => (/* binding */ isString),
/* harmony export */   "Hz": () => (/* binding */ evaluationString),
/* harmony export */   "J_": () => (/* binding */ isDate),
/* harmony export */   "Kj": () => (/* binding */ isRegExp),
/* harmony export */   "M9": () => (/* binding */ releaseObject),
/* harmony export */   "Mt": () => (/* binding */ pageBindingDeliverResultString),
/* harmony export */   "Oo": () => (/* binding */ addEventListener),
/* harmony export */   "PO": () => (/* binding */ isPlainObject),
/* harmony export */   "TF": () => (/* binding */ pageBindingInitString),
/* harmony export */   "hj": () => (/* binding */ isNumber),
/* harmony export */   "is": () => (/* binding */ getExceptionMessage),
/* harmony export */   "jV": () => (/* binding */ valueFromRemoteObject),
/* harmony export */   "mA": () => (/* binding */ waitForEvent),
/* harmony export */   "nJ": () => (/* binding */ removeEventListeners),
/* harmony export */   "st": () => (/* binding */ pageBindingDeliverErrorValueString),
/* harmony export */   "tB": () => (/* binding */ createJSHandle),
/* harmony export */   "ur": () => (/* binding */ debugError),
/* harmony export */   "xA": () => (/* binding */ getReadableFromProtocolStream),
/* harmony export */   "ze": () => (/* binding */ getReadableAsBuffer)
/* harmony export */ });
/* harmony import */ var _environment_js__WEBPACK_IMPORTED_MODULE_0__ = __nccwpck_require__(2794);
/* harmony import */ var _util_assert_js__WEBPACK_IMPORTED_MODULE_5__ = __nccwpck_require__(5172);
/* harmony import */ var _util_ErrorLike_js__WEBPACK_IMPORTED_MODULE_6__ = __nccwpck_require__(9713);
/* harmony import */ var _Debug_js__WEBPACK_IMPORTED_MODULE_1__ = __nccwpck_require__(8528);
/* harmony import */ var _ElementHandle_js__WEBPACK_IMPORTED_MODULE_2__ = __nccwpck_require__(5498);
/* harmony import */ var _Errors_js__WEBPACK_IMPORTED_MODULE_3__ = __nccwpck_require__(7154);
/* harmony import */ var _JSHandle_js__WEBPACK_IMPORTED_MODULE_4__ = __nccwpck_require__(7979);
/**
 * Copyright 2017 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */







/**
 * @internal
 */
const debugError = (0,_Debug_js__WEBPACK_IMPORTED_MODULE_1__/* .debug */ .fF)('puppeteer:error');
/**
 * @internal
 */
function getExceptionMessage(exceptionDetails) {
    if (exceptionDetails.exception) {
        return (exceptionDetails.exception.description || exceptionDetails.exception.value);
    }
    let message = exceptionDetails.text;
    if (exceptionDetails.stackTrace) {
        for (const callframe of exceptionDetails.stackTrace.callFrames) {
            const location = callframe.url +
                ':' +
                callframe.lineNumber +
                ':' +
                callframe.columnNumber;
            const functionName = callframe.functionName || '<anonymous>';
            message += `\n    at ${functionName} (${location})`;
        }
    }
    return message;
}
/**
 * @internal
 */
function valueFromRemoteObject(remoteObject) {
    (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_5__/* .assert */ .h)(!remoteObject.objectId, 'Cannot extract value when objectId is given');
    if (remoteObject.unserializableValue) {
        if (remoteObject.type === 'bigint' && typeof BigInt !== 'undefined') {
            return BigInt(remoteObject.unserializableValue.replace('n', ''));
        }
        switch (remoteObject.unserializableValue) {
            case '-0':
                return -0;
            case 'NaN':
                return NaN;
            case 'Infinity':
                return Infinity;
            case '-Infinity':
                return -Infinity;
            default:
                throw new Error('Unsupported unserializable value: ' +
                    remoteObject.unserializableValue);
        }
    }
    return remoteObject.value;
}
/**
 * @internal
 */
async function releaseObject(client, remoteObject) {
    if (!remoteObject.objectId) {
        return;
    }
    await client
        .send('Runtime.releaseObject', { objectId: remoteObject.objectId })
        .catch(error => {
        // Exceptions might happen in case of a page been navigated or closed.
        // Swallow these since they are harmless and we don't leak anything in this case.
        debugError(error);
    });
}
/**
 * @internal
 */
function addEventListener(emitter, eventName, handler) {
    emitter.on(eventName, handler);
    return { emitter, eventName, handler };
}
/**
 * @internal
 */
function removeEventListeners(listeners) {
    for (const listener of listeners) {
        listener.emitter.removeListener(listener.eventName, listener.handler);
    }
    listeners.length = 0;
}
/**
 * @internal
 */
const isString = (obj) => {
    return typeof obj === 'string' || obj instanceof String;
};
/**
 * @internal
 */
const isNumber = (obj) => {
    return typeof obj === 'number' || obj instanceof Number;
};
/**
 * @internal
 */
const isPlainObject = (obj) => {
    return typeof obj === 'object' && (obj === null || obj === void 0 ? void 0 : obj.constructor) === Object;
};
/**
 * @internal
 */
const isRegExp = (obj) => {
    return typeof obj === 'object' && (obj === null || obj === void 0 ? void 0 : obj.constructor) === RegExp;
};
/**
 * @internal
 */
const isDate = (obj) => {
    return typeof obj === 'object' && (obj === null || obj === void 0 ? void 0 : obj.constructor) === Date;
};
/**
 * @internal
 */
async function waitForEvent(emitter, eventName, predicate, timeout, abortPromise) {
    let eventTimeout;
    let resolveCallback;
    let rejectCallback;
    const promise = new Promise((resolve, reject) => {
        resolveCallback = resolve;
        rejectCallback = reject;
    });
    const listener = addEventListener(emitter, eventName, async (event) => {
        if (!(await predicate(event))) {
            return;
        }
        resolveCallback(event);
    });
    if (timeout) {
        eventTimeout = setTimeout(() => {
            rejectCallback(new _Errors_js__WEBPACK_IMPORTED_MODULE_3__/* .TimeoutError */ .W5('Timeout exceeded while waiting for event'));
        }, timeout);
    }
    function cleanup() {
        removeEventListeners([listener]);
        clearTimeout(eventTimeout);
    }
    const result = await Promise.race([promise, abortPromise]).then(r => {
        cleanup();
        return r;
    }, error => {
        cleanup();
        throw error;
    });
    if ((0,_util_ErrorLike_js__WEBPACK_IMPORTED_MODULE_6__/* .isErrorLike */ .x)(result)) {
        throw result;
    }
    return result;
}
/**
 * @internal
 */
function createJSHandle(context, remoteObject) {
    if (remoteObject.subtype === 'node' && context._world) {
        return new _ElementHandle_js__WEBPACK_IMPORTED_MODULE_2__/* .CDPElementHandle */ .g(context, remoteObject, context._world.frame());
    }
    return new _JSHandle_js__WEBPACK_IMPORTED_MODULE_4__/* .CDPJSHandle */ .U(context, remoteObject);
}
/**
 * @internal
 */
function evaluationString(fun, ...args) {
    if (isString(fun)) {
        (0,_util_assert_js__WEBPACK_IMPORTED_MODULE_5__/* .assert */ .h)(args.length === 0, 'Cannot evaluate a string with arguments');
        return fun;
    }
    function serializeArgument(arg) {
        if (Object.is(arg, undefined)) {
            return 'undefined';
        }
        return JSON.stringify(arg);
    }
    return `(${fun})(${args.map(serializeArgument).join(',')})`;
}
/**
 * @internal
 */
function pageBindingInitString(type, name) {
    function addPageBinding(type, name) {
        // This is the CDP binding.
        // @ts-expect-error: In a different context.
        const callCDP = self[name];
        // We replace the CDP binding with a Puppeteer binding.
        Object.assign(self, {
            [name](...args) {
                var _a, _b;
                // This is the Puppeteer binding.
                // @ts-expect-error: In a different context.
                const callPuppeteer = self[name];
                (_a = callPuppeteer.callbacks) !== null && _a !== void 0 ? _a : (callPuppeteer.callbacks = new Map());
                const seq = ((_b = callPuppeteer.lastSeq) !== null && _b !== void 0 ? _b : 0) + 1;
                callPuppeteer.lastSeq = seq;
                callCDP(JSON.stringify({ type, name, seq, args }));
                return new Promise((resolve, reject) => {
                    callPuppeteer.callbacks.set(seq, { resolve, reject });
                });
            },
        });
    }
    return evaluationString(addPageBinding, type, name);
}
/**
 * @internal
 */
function pageBindingDeliverResultString(name, seq, result) {
    function deliverResult(name, seq, result) {
        window[name].callbacks.get(seq).resolve(result);
        window[name].callbacks.delete(seq);
    }
    return evaluationString(deliverResult, name, seq, result);
}
/**
 * @internal
 */
function pageBindingDeliverErrorString(name, seq, message, stack) {
    function deliverError(name, seq, message, stack) {
        const error = new Error(message);
        error.stack = stack;
        window[name].callbacks.get(seq).reject(error);
        window[name].callbacks.delete(seq);
    }
    return evaluationString(deliverError, name, seq, message, stack);
}
/**
 * @internal
 */
function pageBindingDeliverErrorValueString(name, seq, value) {
    function deliverErrorValue(name, seq, value) {
        window[name].callbacks.get(seq).reject(value);
        window[name].callbacks.delete(seq);
    }
    return evaluationString(deliverErrorValue, name, seq, value);
}
/**
 * @internal
 */
async function waitWithTimeout(promise, taskName, timeout) {
    let reject;
    const timeoutError = new _Errors_js__WEBPACK_IMPORTED_MODULE_3__/* .TimeoutError */ .W5(`waiting for ${taskName} failed: timeout ${timeout}ms exceeded`);
    const timeoutPromise = new Promise((_res, rej) => {
        return (reject = rej);
    });
    let timeoutTimer = null;
    if (timeout) {
        timeoutTimer = setTimeout(() => {
            return reject(timeoutError);
        }, timeout);
    }
    try {
        return await Promise.race([promise, timeoutPromise]);
    }
    finally {
        if (timeoutTimer) {
            clearTimeout(timeoutTimer);
        }
    }
}
/**
 * @internal
 */
let fs = null;
/**
 * @internal
 */
async function importFS() {
    if (!fs) {
        fs = await Promise.resolve(/* import() */).then(__nccwpck_require__.t.bind(__nccwpck_require__, 7147, 19));
    }
    return fs;
}
/**
 * @internal
 */
async function getReadableAsBuffer(readable, path) {
    const buffers = [];
    if (path) {
        let fs;
        try {
            fs = (await importFS()).promises;
        }
        catch (error) {
            if (error instanceof TypeError) {
                throw new Error('Cannot write to a path outside of a Node-like environment.');
            }
            throw error;
        }
        const fileHandle = await fs.open(path, 'w+');
        for await (const chunk of readable) {
            buffers.push(chunk);
            await fileHandle.writeFile(chunk);
        }
        await fileHandle.close();
    }
    else {
        for await (const chunk of readable) {
            buffers.push(chunk);
        }
    }
    try {
        return Buffer.concat(buffers);
    }
    catch (error) {
        return null;
    }
}
/**
 * @internal
 */
async function getReadableFromProtocolStream(client, handle) {
    // TODO: Once Node 18 becomes the lowest supported version, we can migrate to
    // ReadableStream.
    if (!_environment_js__WEBPACK_IMPORTED_MODULE_0__/* .isNode */ .U) {
        throw new Error('Cannot create a stream outside of Node.js environment.');
    }
    const { Readable } = await Promise.resolve(/* import() */).then(__nccwpck_require__.t.bind(__nccwpck_require__, 2781, 19));
    let eof = false;
    return new Readable({
        async read(size) {
            if (eof) {
                return;
            }
            const response = await client.send('IO.read', { handle, size });
            this.push(response.data, response.base64Encoded ? 'base64' : undefined);
            if (response.eof) {
                eof = true;
                await client.send('IO.close', { handle });
                this.push(null);
            }
        },
    });
}
/**
 * @internal
 */
function stringifyFunction(expression) {
    let functionText = expression.toString();
    try {
        new Function('(' + functionText + ')');
    }
    catch (error) {
        // This means we might have a function shorthand. Try another
        // time prefixing 'function '.
        if (functionText.startsWith('async ')) {
            functionText =
                'async function ' + functionText.substring('async '.length);
        }
        else {
            functionText = 'function ' + functionText;
        }
        try {
            new Function('(' + functionText + ')');
        }
        catch (error) {
            // We tried hard to serialize, but there's a weird beast here.
            throw new Error('Passed function is not well-serializable!');
        }
    }
    return functionText;
}
//# sourceMappingURL=util.js.map

/***/ }),

/***/ 2794:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "U": () => (/* binding */ isNode),
/* harmony export */   "p": () => (/* binding */ DEFERRED_PROMISE_DEBUG_TIMEOUT)
/* harmony export */ });
/**
 * Copyright 2020 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @internal
 */
const isNode = !!(typeof process !== 'undefined' && process.version);
/**
 * @internal
 */
const DEFERRED_PROMISE_DEBUG_TIMEOUT = typeof process !== 'undefined' &&
    typeof process.env['PUPPETEER_DEFERRED_PROMISE_DEBUG_TIMEOUT'] !== 'undefined'
    ? Number(process.env['PUPPETEER_DEFERRED_PROMISE_DEBUG_TIMEOUT'])
    : -1;
//# sourceMappingURL=environment.js.map

/***/ }),

/***/ 8125:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "j": () => (/* binding */ createDebuggableDeferredPromise)
/* harmony export */ });
/* harmony import */ var _environment_js__WEBPACK_IMPORTED_MODULE_0__ = __nccwpck_require__(2794);
/* harmony import */ var _DeferredPromise_js__WEBPACK_IMPORTED_MODULE_1__ = __nccwpck_require__(761);


/**
 * Creates and returns a deferred promise using DEFERRED_PROMISE_DEBUG_TIMEOUT
 * if it's specified or a normal deferred promise otherwise.
 *
 * @internal
 */
function createDebuggableDeferredPromise(message) {
    if (_environment_js__WEBPACK_IMPORTED_MODULE_0__/* .DEFERRED_PROMISE_DEBUG_TIMEOUT */ .p > 0) {
        return (0,_DeferredPromise_js__WEBPACK_IMPORTED_MODULE_1__/* .createDeferredPromise */ .W)({
            message,
            timeout: _environment_js__WEBPACK_IMPORTED_MODULE_0__/* .DEFERRED_PROMISE_DEBUG_TIMEOUT */ .p,
        });
    }
    return (0,_DeferredPromise_js__WEBPACK_IMPORTED_MODULE_1__/* .createDeferredPromise */ .W)();
}
//# sourceMappingURL=DebuggableDeferredPromise.js.map

/***/ }),

/***/ 761:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "W": () => (/* binding */ createDeferredPromise)
/* harmony export */ });
/* harmony import */ var _common_Errors_js__WEBPACK_IMPORTED_MODULE_0__ = __nccwpck_require__(7154);

/**
 * Creates and returns a promise along with the resolve/reject functions.
 *
 * If the promise has not been resolved/rejected within the `timeout` period,
 * the promise gets rejected with a timeout error. `timeout` has to be greater than 0 or
 * it is ignored.
 *
 * @internal
 */
function createDeferredPromise(opts) {
    let isResolved = false;
    let isRejected = false;
    let resolver;
    let rejector;
    const taskPromise = new Promise((resolve, reject) => {
        resolver = resolve;
        rejector = reject;
    });
    const timeoutId = opts && opts.timeout > 0
        ? setTimeout(() => {
            isRejected = true;
            rejector(new _common_Errors_js__WEBPACK_IMPORTED_MODULE_0__/* .TimeoutError */ .W5(opts.message));
        }, opts.timeout)
        : undefined;
    return Object.assign(taskPromise, {
        resolved: () => {
            return isResolved;
        },
        finished: () => {
            return isResolved || isRejected;
        },
        resolve: (value) => {
            if (timeoutId) {
                clearTimeout(timeoutId);
            }
            isResolved = true;
            resolver(value);
        },
        reject: (err) => {
            clearTimeout(timeoutId);
            isRejected = true;
            rejector(err);
        },
    });
}
//# sourceMappingURL=DeferredPromise.js.map

/***/ }),

/***/ 9713:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "H": () => (/* binding */ isErrnoException),
/* harmony export */   "x": () => (/* binding */ isErrorLike)
/* harmony export */ });
/**
 * @internal
 */
/**
 * @internal
 */
function isErrorLike(obj) {
    return (typeof obj === 'object' && obj !== null && 'name' in obj && 'message' in obj);
}
/**
 * @internal
 */
function isErrnoException(obj) {
    return (isErrorLike(obj) &&
        ('errno' in obj || 'code' in obj || 'path' in obj || 'syscall' in obj));
}
//# sourceMappingURL=ErrorLike.js.map

/***/ }),

/***/ 5172:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nccwpck_require__) => {

/* harmony export */ __nccwpck_require__.d(__webpack_exports__, {
/* harmony export */   "h": () => (/* binding */ assert)
/* harmony export */ });
/**
 * Copyright 2020 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Asserts that the given value is truthy.
 * @param value - some conditional statement
 * @param message - the error message to throw if the value is not truthy.
 *
 * @internal
 */
const assert = (value, message) => {
    if (!value) {
        throw new Error(message);
    }
};
//# sourceMappingURL=assert.js.map

/***/ }),

/***/ 6656:
/***/ ((module) => {

module.exports = JSON.parse('[[32,33,3.06],[34,34,5.09],[35,36,6.12],[37,37,11],[38,38,7.53],[39,39,3.06],[40,41,3.26],[42,42,4.48],[43,43,6.6],[44,44,3.06],[45,45,4.48],[46,46,3.06],[47,47,4.08],[48,57,6.12],[58,59,3.06],[60,62,6.6],[63,63,6.12],[64,64,8.8],[65,65,7.53],[66,66,7.74],[67,68,8.15],[69,69,7.13],[70,70,6.52],[71,71,8.35],[72,72,8.15],[73,73,3.24],[74,74,6.12],[75,75,7.94],[76,76,6.52],[77,77,9.98],[78,78,8.15],[79,79,8.56],[80,80,7.34],[81,81,8.56],[82,82,7.94],[83,83,7.14],[84,84,6.72],[85,85,8.15],[86,86,6.93],[87,87,10.38],[88,89,7.34],[90,90,7.13],[91,91,3.66],[92,92,4.08],[93,93,3.66],[94,94,6.6],[95,95,5.5],[96,96,2.85],[97,97,6.31],[98,98,6.72],[99,99,6.31],[100,100,6.72],[101,101,6.31],[102,102,3.66],[103,103,6.72],[104,104,6.52],[105,105,2.84],[106,106,3.06],[107,107,6.31],[108,108,2.84],[109,109,9.97],[110,110,6.52],[111,113,6.72],[114,114,4.28],[115,115,5.91],[116,116,3.87],[117,117,6.52],[118,118,5.72],[119,119,8.95],[120,120,5.91],[121,122,5.71],[123,123,3.66],[124,124,2.45],[125,125,3.66],[126,126,6.6],[160,161,3.06],[162,165,6.12],[166,166,2.45],[167,167,6.12],[168,168,2.85],[169,169,8.8],[170,170,3.78],[171,171,4.88],[172,172,6.6],[173,173,0],[174,174,8.8],[175,175,2.85],[176,176,4.4],[177,177,6.6],[178,179,4.31],[180,180,2.85],[181,181,6.52],[182,182,6.82],[183,183,3.06],[184,184,2.85],[185,185,4.31],[186,186,4.04],[187,187,4.88],[188,188,9.81],[189,190,9.78],[191,191,6.12],[192,197,7.53],[198,198,10.79],[199,199,8.15],[200,203,7.13],[204,207,3.24],[208,209,8.15],[210,214,8.56],[215,215,6.6],[216,216,8.56],[217,220,8.15],[221,222,7.34],[223,223,6.72],[224,229,6.31],[230,230,9.98],[231,235,6.31],[236,239,2.84],[240,240,6.72],[241,241,6.52],[242,246,6.72],[247,247,6.6],[248,248,6.72],[249,252,6.52],[253,253,5.71],[254,254,6.72],[256,256,7.53],[257,257,6.31],[258,258,7.53],[259,259,6.31],[260,260,7.53],[261,261,6.31],[262,262,8.15],[263,263,6.31],[264,264,8.15],[265,265,6.31],[266,266,8.15],[267,267,6.31],[268,268,8.15],[269,269,6.31],[270,270,8.15],[271,271,6.72],[272,272,8.15],[273,273,6.83],[274,274,7.13],[275,275,6.31],[276,276,7.13],[277,277,6.31],[278,278,7.13],[279,279,6.31],[280,280,7.13],[281,281,6.31],[282,282,7.13],[283,283,6.31],[284,284,8.35],[285,285,6.72],[286,286,8.35],[287,287,6.72],[288,288,8.35],[289,289,6.72],[290,290,8.35],[291,291,6.72],[292,292,8.15],[293,293,6.52],[294,294,8.15],[295,295,6.63],[296,296,3.24],[297,297,2.84],[298,298,3.24],[299,299,2.84],[300,300,3.24],[301,301,2.84],[302,302,3.24],[303,303,2.84],[304,304,3.24],[305,305,2.84],[306,306,9.29],[307,307,5.76],[308,308,6.12],[309,309,3.06],[310,310,7.94],[311,311,6.31],[312,312,6.21],[313,313,6.52],[314,314,2.84],[315,315,6.52],[316,316,2.84],[317,317,6.52],[318,318,4.27],[319,319,6.52],[320,320,4.51],[321,321,6.52],[322,322,2.84],[323,323,8.15],[324,324,6.52],[325,325,8.15],[326,326,6.52],[327,327,8.15],[328,328,6.52],[329,329,8.11],[330,330,8.15],[331,331,6.52],[332,332,8.56],[333,333,6.72],[334,334,8.56],[335,335,6.72],[336,336,8.56],[337,337,6.72],[338,338,12.02],[339,339,10.19],[340,340,7.94],[341,341,4.28],[342,342,7.94],[343,343,4.28],[344,344,7.94],[345,345,4.28],[346,346,7.14],[347,347,5.91],[348,348,7.14],[349,349,5.91],[350,350,7.14],[351,351,5.91],[352,352,7.14],[353,353,5.91],[354,354,6.72],[355,355,3.87],[356,356,6.72],[357,357,3.87],[358,358,6.72],[359,359,3.87],[360,360,8.15],[361,361,6.52],[362,362,8.15],[363,363,6.52],[364,364,8.15],[365,365,6.52],[366,366,8.15],[367,367,6.52],[368,368,8.15],[369,369,6.52],[370,370,8.15],[371,371,6.52],[372,372,10.38],[373,373,8.95],[374,374,7.34],[375,375,5.71],[376,376,7.34],[377,377,7.13],[378,378,5.71],[379,379,7.13],[380,380,5.71],[381,381,7.13],[382,382,5.71],[384,384,6.72],[385,385,8.3],[386,386,7.34],[387,387,6.72],[388,388,7.27],[389,389,6.12],[390,391,7.94],[392,392,4.88],[393,393,7.94],[394,394,8.98],[395,395,7.34],[396,396,6.72],[397,397,6.35],[398,398,7.34],[399,399,8.23],[400,400,6.25],[401,401,6.72],[402,402,6.12],[403,403,8.56],[404,404,7.94],[405,405,8.6],[406,406,3.06],[407,407,4.29],[408,408,8.56],[409,409,6.12],[410,410,4.29],[411,411,6.04],[412,412,10.34],[413,413,7.94],[414,414,6.72],[415,415,8.56],[416,416,10.41],[417,417,8.74],[418,418,10.14],[419,419,8.4],[420,420,7.64],[421,421,6.12],[422,422,7.15],[423,423,7.34],[424,424,6.12],[425,425,6.54],[426,426,5.64],[427,427,3.66],[428,428,7.34],[429,429,3.66],[430,430,6.72],[431,431,10.1],[432,432,8.85],[433,433,8.52],[434,434,7.17],[435,435,8.7],[436,436,5.5],[437,437,7.13],[438,438,5.71],[439,440,6.6],[441,441,6.06],[442,442,4.98],[443,443,6.73],[444,444,5.55],[445,445,4.23],[446,446,3.66],[447,447,6.56],[448,448,3.08],[449,449,5.82],[450,450,6.29],[451,451,3.66],[452,452,13.53],[453,453,12.45],[454,454,11.66],[455,455,11.64],[456,456,9.18],[457,457,5.73],[458,458,12.74],[459,459,9.97],[460,460,8.8],[461,461,7.94],[462,462,6.12],[463,464,3.06],[465,465,8.56],[466,466,6.72],[467,467,7.94],[468,468,6.72],[469,469,7.94],[470,470,6.72],[471,471,7.94],[472,472,6.72],[473,473,7.94],[474,474,6.72],[475,475,7.94],[476,476,6.72],[477,477,6.12],[478,478,7.94],[479,479,6.12],[480,480,7.94],[481,481,6.12],[482,482,11],[483,483,9.78],[484,484,9.07],[485,485,7.56],[486,486,8.56],[487,487,6.72],[488,488,7.94],[489,489,6.12],[490,490,8.56],[491,491,6.72],[492,492,8.56],[493,493,6.72],[494,494,6.39],[495,495,5.86],[496,496,3.06],[497,497,13.82],[498,498,12.68],[499,499,11.91],[500,500,8.56],[501,501,6.72],[502,502,10.67],[503,503,7.34],[504,504,7.94],[505,505,6.72],[506,506,7.53],[507,507,6.31],[508,508,10.79],[509,509,9.98],[510,510,8.56],[511,511,6.72],[512,512,7.94],[513,513,6.12],[514,514,7.94],[515,515,6.12],[516,516,7.34],[517,517,6.12],[518,518,7.34],[519,519,6.12],[520,523,3.06],[524,524,8.56],[525,525,6.72],[526,526,8.56],[527,527,6.72],[528,528,7.94],[529,529,4.28],[530,530,7.94],[531,531,4.28],[532,532,7.94],[533,533,6.72],[534,534,7.94],[535,535,6.72],[536,536,7.14],[537,537,5.91],[538,538,6.72],[539,539,3.87],[540,541,7.3],[542,542,7.94],[543,543,6.72],[544,544,7.94],[545,545,6.12],[546,546,7.44],[547,547,5.52],[548,548,7.34],[549,549,4.88],[550,550,7.94],[551,551,6.12],[552,552,7.34],[553,553,6.12],[554,554,8.56],[555,555,6.72],[556,556,8.56],[557,557,6.72],[558,558,8.56],[559,559,6.72],[560,560,8.56],[561,561,6.72],[562,562,7.34],[563,563,6.12],[564,564,3.06],[565,565,6.12],[566,566,3.97],[567,567,3.06],[568,568,10.57],[569,569,10.59],[570,571,7.94],[572,572,6.12],[573,574,6.72],[575,575,4.28],[576,576,4.88],[577,578,6.72],[579,579,8.39],[580,580,9.15],[581,582,7.34],[583,584,6.12],[585,585,3.06],[586,586,9.06],[587,587,7.25],[588,588,8.49],[589,589,4.83],[590,590,8.44],[880,880,4.67],[881,881,3.68],[882,882,6.93],[883,883,5.83],[884,885,3.06],[886,886,8.03],[887,887,6.52],[888,889,5.5],[890,890,1.53],[891,893,6.12],[894,894,3.06],[895,895,3.66],[896,899,5.5],[900,900,2.65],[901,901,5.63],[902,902,7.94],[903,903,3.06],[904,904,9.28],[905,905,10.31],[906,906,5.4],[907,907,5.5],[908,908,10.21],[909,909,5.5],[910,910,10.16],[911,911,10.22],[912,912,3.08],[913,913,7.53],[914,914,7.74],[915,915,6.28],[916,916,7.49],[917,918,7.13],[919,919,8.15],[920,920,8.56],[921,921,3.24],[922,922,7.94],[923,923,7.31],[924,924,9.98],[925,925,8.15],[926,926,6.85],[927,927,8.56],[928,928,8.28],[929,929,7.34],[930,930,5.5],[931,931,7.13],[932,932,6.72],[933,933,7.34],[934,934,8.96],[935,935,7.34],[936,936,9.25],[937,937,8.5],[938,938,3.26],[939,939,7.23],[940,940,6.8],[941,941,5.66],[942,942,6.52],[943,943,3],[944,944,6.25],[945,945,6.8],[946,946,6.47],[947,947,5.59],[948,948,6.51],[949,949,5.66],[950,950,5.21],[951,951,6.52],[952,952,6.32],[953,953,3],[954,954,6.24],[955,955,6.06],[956,956,6.52],[957,957,5.83],[958,958,5.11],[959,959,6.72],[960,960,7.33],[961,961,6.57],[962,962,6.02],[963,963,6.58],[964,964,5.49],[965,965,6.29],[966,966,8.29],[967,967,5.91],[968,968,7.99],[969,969,8.36],[970,970,3.08],[971,971,6.32],[972,972,6.72],[973,973,6.32],[974,974,8.36],[975,975,6.14],[976,976,5.8],[977,977,6.59],[978,978,7.94],[979,979,10.16],[980,980,7.94],[981,981,6.86],[982,982,8.04],[983,983,6.38],[984,984,8.56],[985,985,5.5],[986,986,7.94],[987,987,4.64],[988,988,6.72],[989,989,6.01],[990,990,6.55],[991,991,5.07],[992,992,8.27],[993,993,6.1],[994,994,9.57],[995,995,9.16],[996,996,7.98],[997,997,6.45],[998,998,8.14],[999,999,4.88],[1000,1000,6.88],[1001,1001,6.45],[1002,1002,7.5],[1003,1003,6.66],[1004,1004,7.97],[1005,1005,5.67],[1006,1006,5.94],[1007,1007,4.95],[1008,1008,6.38],[1009,1009,5.5],[1010,1010,6.12],[1011,1011,2.83],[1012,1012,8.56],[1013,1014,5.6],[1015,1015,7.34],[1016,1016,6.72],[1017,1017,7.94],[1018,1018,9.16],[1019,1019,8.5],[1020,1020,7.26],[1021,1022,7.94],[1024,1025,7.13],[1026,1026,8.84],[1027,1027,6.31],[1028,1028,8.1],[1029,1029,7.14],[1030,1031,3.24],[1032,1032,6.12],[1033,1033,12.38],[1034,1034,12.35],[1035,1035,8.84],[1036,1036,7.94],[1037,1037,8.19],[1038,1038,7.12],[1039,1039,8.05],[1040,1040,7.53],[1041,1041,7.72],[1042,1042,7.74],[1043,1043,6.31],[1044,1044,8.49],[1045,1045,7.13],[1046,1046,11.67],[1047,1047,7.12],[1048,1049,8.19],[1050,1050,7.94],[1051,1051,8.17],[1052,1052,9.98],[1053,1053,8.15],[1054,1054,8.56],[1055,1055,8.05],[1056,1056,7.34],[1057,1057,8.15],[1058,1058,6.72],[1059,1059,7.12],[1060,1060,10.15],[1061,1061,7.34],[1062,1062,8.27],[1063,1063,7.48],[1064,1064,11.45],[1065,1065,11.67],[1066,1066,8.95],[1067,1067,10.22],[1068,1068,7.45],[1069,1069,8.12],[1070,1070,11.25],[1071,1071,7.97],[1072,1072,6.31],[1073,1073,6.68],[1074,1074,6.39],[1075,1075,4.98],[1076,1076,6.86],[1077,1077,6.31],[1078,1078,8.93],[1079,1079,5.96],[1080,1081,6.6],[1082,1082,6.31],[1083,1083,6.59],[1084,1084,8.12],[1085,1085,6.52],[1086,1086,6.72],[1087,1087,6.41],[1088,1088,6.72],[1089,1089,6.31],[1090,1090,5.52],[1091,1091,5.71],[1092,1092,9.42],[1093,1093,5.91],[1094,1094,6.63],[1095,1095,6.31],[1096,1096,9.01],[1097,1097,9.17],[1098,1098,7.11],[1099,1099,8.56],[1100,1100,6.03],[1101,1101,6.34],[1102,1102,9.18],[1103,1103,6.36],[1104,1105,6.31],[1106,1106,6.74],[1107,1107,4.98],[1108,1108,6.34],[1109,1109,5.91],[1110,1110,2.84],[1111,1111,3.3],[1112,1112,3.06],[1113,1113,9.87],[1114,1114,9.8],[1115,1115,6.74],[1116,1116,6.31],[1117,1117,6.6],[1118,1118,5.71],[1119,1119,6.41],[1120,1120,13.76],[1121,1121,6.81],[1122,1122,8.29],[1123,1123,6.47],[1124,1124,11.19],[1125,1125,8.08],[1126,1126,7.94],[1127,1127,6.12],[1128,1128,11.05],[1129,1129,8.6],[1130,1130,10.97],[1131,1131,9.04],[1132,1132,11.74],[1133,1133,9.14],[1134,1134,5.81],[1135,1135,4.42],[1136,1136,9.17],[1137,1137,7.94],[1138,1138,8.56],[1139,1139,6.72],[1140,1140,7.37],[1141,1141,5.94],[1142,1142,8.14],[1143,1143,6.72],[1144,1144,14.67],[1145,1145,12.84],[1146,1146,9.06],[1147,1147,6.44],[1148,1148,13.6],[1149,1149,8.88],[1150,1150,13.76],[1151,1151,6.81],[1152,1152,7.94],[1153,1153,4.88],[1154,1154,3.72],[1155,1161,0],[1162,1162,8.56],[1163,1163,6.34],[1164,1164,8.29],[1165,1165,6.47],[1166,1166,6.72],[1167,1167,6.12],[1168,1168,6.31],[1169,1169,4.98],[1170,1170,6.9],[1171,1171,5.44],[1172,1172,7.94],[1173,1173,6.34],[1174,1174,11.9],[1175,1175,9.15],[1176,1176,7.12],[1177,1177,5.96],[1178,1178,8.17],[1179,1179,6.45],[1180,1180,8.27],[1181,1181,6.76],[1182,1182,7.98],[1183,1183,6.34],[1184,1184,9.45],[1185,1185,7.39],[1186,1186,8.37],[1187,1187,6.71],[1188,1188,11.16],[1189,1189,8.7],[1190,1190,12.26],[1191,1191,9.28],[1192,1192,8.02],[1193,1193,5.87],[1194,1194,8.15],[1195,1195,6.31],[1196,1196,6.83],[1197,1197,5.6],[1198,1198,7.34],[1199,1199,5.71],[1200,1200,7.34],[1201,1201,5.71],[1202,1202,7.57],[1203,1203,6.08],[1204,1204,10.11],[1205,1205,7.24],[1206,1206,7.69],[1207,1207,6.5],[1208,1208,7.48],[1209,1209,6.31],[1210,1210,7.42],[1211,1211,6.52],[1212,1212,10.17],[1213,1213,8.21],[1214,1214,10.17],[1215,1215,8.21],[1216,1216,3.24],[1217,1217,11.67],[1218,1218,8.93],[1219,1219,8.11],[1220,1220,6.53],[1221,1221,8.2],[1222,1222,6.17],[1223,1223,8.07],[1224,1224,6.21],[1225,1225,8.56],[1226,1226,6.34],[1227,1227,8.07],[1228,1228,6.2],[1229,1229,10.38],[1230,1230,7.49],[1231,1231,3.06],[1232,1232,7.53],[1233,1233,6.31],[1234,1234,7.53],[1235,1235,6.31],[1236,1236,10.79],[1237,1237,9.98],[1238,1238,7.13],[1239,1239,6.31],[1240,1240,8.23],[1241,1241,6.31],[1242,1242,8.26],[1243,1243,6.12],[1244,1244,11.67],[1245,1245,8.93],[1246,1246,7.12],[1247,1247,5.96],[1248,1248,6.6],[1249,1249,6.06],[1250,1250,8.19],[1251,1251,6.6],[1252,1252,8.19],[1253,1253,6.6],[1254,1254,8.56],[1255,1255,6.72],[1256,1256,8.56],[1257,1257,6.72],[1258,1258,8.71],[1259,1259,6.21],[1260,1260,8.07],[1261,1261,5.6],[1262,1262,7.12],[1263,1263,5.71],[1264,1264,7.12],[1265,1265,5.71],[1266,1266,7.12],[1267,1267,5.71],[1268,1268,7.42],[1269,1269,6.31],[1270,1270,6.67],[1271,1271,4.8],[1272,1272,10.22],[1273,1273,8.56],[1274,1274,7],[1275,1275,5],[1276,1276,7.94],[1277,1277,5.5],[1278,1278,7.46],[1280,1280,6.02],[1281,1281,5.5],[1282,1282,9.37],[1283,1283,8.59],[1284,1284,8.77],[1285,1285,7.46],[1286,1286,6.54],[1287,1287,5.06],[1288,1288,10.29],[1289,1289,8.57],[1290,1290,10.67],[1291,1291,8.73],[1292,1292,8.56],[1293,1293,6.5],[1294,1294,7.87],[1295,1295,6.79],[1296,1296,7.3],[1297,1297,5.55],[1298,1298,8.17],[1299,1299,6.34],[1300,1300,8.38],[1301,1301,7.62],[1302,1302,9.13],[1303,1303,7.49],[1304,1304,11.34],[1305,1305,8.11],[1306,1306,8.56],[1307,1307,6.12],[1308,1308,11],[1309,1309,7.94],[1310,1310,7.53],[1311,1311,6.94],[1312,1312,10.79],[1313,1313,8.76],[1314,1314,12.22],[1315,1315,9.99],[1316,1316,7.77],[1317,1317,6.78],[1318,1318,7.56],[1319,1319,6.92],[1320,1320,4.88],[1321,1321,4.43],[1322,1322,9.8],[1323,1323,8.94],[1324,1324,6.18],[1325,1325,5.76],[1326,1326,7.49],[7424,7424,5.7],[7425,7425,8.27],[7426,7426,7.94],[7427,7427,5.94],[7428,7428,5.76],[7429,7430,6.35],[7431,7431,5.27],[7432,7432,5.55],[7433,7433,3.06],[7434,7434,4.38],[7435,7435,6.75],[7436,7436,5.32],[7437,7437,7.49],[7438,7438,5.82],[7439,7439,5.5],[7440,7440,5.76],[7441,7441,6.88],[7442,7442,6.86],[7443,7443,7.13],[7444,7444,10.38],[7445,7445,5.52],[7446,7447,6.72],[7448,7450,5.86],[7451,7451,5.4],[7452,7452,6.01],[7453,7453,6.81],[7454,7454,8.84],[7455,7455,6.82],[7456,7456,5.5],[7457,7457,7.94],[7458,7458,4.88],[7459,7459,4.62],[7460,7460,5.1],[7461,7461,5.98],[7462,7462,5],[7463,7463,5.35],[7464,7464,6.34],[7465,7465,5.82],[7466,7466,6.59],[7467,7467,6.17],[7468,7468,4.69],[7469,7469,6.56],[7470,7471,4.36],[7472,7472,4.73],[7473,7474,4.29],[7475,7475,5.12],[7476,7476,5.19],[7477,7477,2.6],[7478,7478,3.51],[7479,7479,5.25],[7480,7480,4.37],[7481,7481,6.3],[7482,7482,4.84],[7483,7483,5.26],[7484,7484,4.96],[7485,7485,4.32],[7486,7486,3.99],[7487,7487,4.89],[7488,7488,4.24],[7489,7489,4.82],[7490,7490,6.54],[7491,7492,4.34],[7493,7493,4.62],[7494,7494,6.94],[7495,7496,4.77],[7497,7498,4.34],[7499,7500,3.94],[7501,7501,4.77],[7502,7502,2.17],[7503,7503,4.34],[7504,7504,6.94],[7505,7506,4.77],[7507,7507,4.34],[7508,7510,4.77],[7511,7511,2.6],[7512,7512,4.77],[7513,7513,4.83],[7514,7514,6.94],[7515,7515,4.34],[7516,7516,3.54],[7517,7517,4.72],[7518,7518,4.34],[7519,7519,4.77],[7520,7520,3.93],[7521,7521,4.34],[7522,7522,2.17],[7523,7523,3.04],[7524,7524,4.77],[7525,7525,4.34],[7526,7526,4.72],[7527,7527,4.34],[7528,7528,4.77],[7529,7529,3.93],[7530,7530,4.34],[7531,7531,9.82],[7532,7532,7.11],[7533,7533,7.35],[7534,7534,4.3],[7535,7535,9.16],[7536,7536,6.12],[7537,7537,7.11],[7538,7538,4.74],[7539,7540,4.28],[7541,7541,4.29],[7542,7542,4.88],[7543,7543,5.5],[7544,7544,3.66],[7545,7545,5.71],[7546,7546,11.81],[7547,7547,3.16],[7548,7548,3.41],[7549,7549,6.12],[7550,7550,6.01],[7680,7680,7.94],[7681,7681,6.12],[7682,7682,7.94],[7683,7683,6.72],[7684,7684,7.94],[7685,7685,6.72],[7686,7686,7.94],[7687,7687,6.72],[7688,7688,7.94],[7689,7689,6.12],[7690,7690,7.94],[7691,7691,6.72],[7692,7692,7.94],[7693,7693,6.72],[7694,7694,7.94],[7695,7695,6.72],[7696,7696,7.94],[7697,7697,6.72],[7698,7698,7.94],[7699,7699,6.72],[7700,7700,7.34],[7701,7701,6.12],[7702,7702,7.34],[7703,7703,6.12],[7704,7704,7.34],[7705,7705,6.12],[7706,7706,7.34],[7707,7707,6.12],[7708,7708,7.34],[7709,7709,6.12],[7710,7710,6.72],[7711,7711,3.66],[7712,7712,8.56],[7713,7713,6.72],[7714,7714,7.94],[7715,7715,6.72],[7716,7716,7.94],[7717,7717,6.72],[7718,7718,7.94],[7719,7719,6.72],[7720,7720,7.94],[7721,7721,6.72],[7722,7722,7.94],[7723,7723,6.72],[7724,7727,3.06],[7728,7728,7.94],[7729,7729,6.12],[7730,7730,7.94],[7731,7731,6.12],[7732,7732,7.94],[7733,7733,6.12],[7734,7734,6.72],[7735,7735,3.06],[7736,7736,6.72],[7737,7737,3.06],[7738,7738,6.72],[7739,7739,3.06],[7740,7740,6.72],[7741,7741,3.06],[7742,7742,9.16],[7743,7743,9.78],[7744,7744,9.16],[7745,7745,9.78],[7746,7746,9.16],[7747,7747,9.78],[7748,7748,7.94],[7749,7749,6.72],[7750,7750,7.94],[7751,7751,6.72],[7752,7752,7.94],[7753,7753,6.72],[7754,7754,7.94],[7755,7755,6.72],[7756,7756,8.56],[7757,7757,6.72],[7758,7758,8.56],[7759,7759,6.72],[7760,7760,8.56],[7761,7761,6.72],[7762,7762,8.56],[7763,7763,6.72],[7764,7764,7.34],[7765,7765,6.72],[7766,7766,7.34],[7767,7767,6.72],[7768,7768,7.94],[7769,7769,4.28],[7770,7770,7.94],[7771,7771,4.28],[7772,7772,7.94],[7773,7773,4.28],[7774,7774,7.94],[7775,7775,4.28],[7776,7776,7.34],[7777,7777,6.12],[7778,7778,7.34],[7779,7779,6.12],[7780,7780,7.34],[7781,7781,6.12],[7782,7782,7.34],[7783,7783,6.12],[7784,7784,7.34],[7785,7785,6.12],[7786,7786,6.72],[7787,7787,3.66],[7788,7788,6.72],[7789,7789,3.66],[7790,7790,6.72],[7791,7791,3.66],[7792,7792,6.72],[7793,7793,3.66],[7794,7794,7.94],[7795,7795,6.72],[7796,7796,7.94],[7797,7797,6.72],[7798,7798,7.94],[7799,7799,6.72],[7800,7800,7.94],[7801,7801,6.72],[7802,7802,7.94],[7803,7803,6.72],[7804,7804,7.34],[7805,7805,6.12],[7806,7806,7.34],[7807,7807,6.12],[7808,7808,10.38],[7809,7809,8.95],[7810,7810,10.38],[7811,7811,8.95],[7812,7812,10.38],[7813,7813,8.95],[7814,7814,10.38],[7815,7815,8.56],[7816,7816,10.38],[7817,7817,8.56],[7818,7818,7.34],[7819,7819,6.12],[7820,7820,7.34],[7821,7821,6.12],[7822,7822,7.34],[7823,7823,6.12],[7824,7824,6.72],[7825,7825,5.5],[7826,7826,6.72],[7827,7827,5.5],[7828,7828,6.72],[7829,7829,5.5],[7830,7830,6.72],[7831,7831,3.66],[7832,7832,8.56],[7833,7834,6.12],[7835,7835,3.66],[7836,7836,4.66],[7837,7837,4.65],[7838,7838,8.34],[7839,7839,6.62],[7840,7840,7.94],[7841,7841,6.12],[7842,7842,7.94],[7843,7843,6.12],[7844,7844,8.01],[7845,7845,6.76],[7846,7846,8.03],[7847,7847,6.4],[7848,7848,7.94],[7849,7849,6.26],[7850,7850,7.94],[7851,7851,6.12],[7852,7852,7.94],[7853,7853,6.12],[7854,7854,7.94],[7855,7855,6.12],[7856,7856,7.94],[7857,7857,6.12],[7858,7858,7.94],[7859,7859,6.12],[7860,7860,7.94],[7861,7861,6.12],[7862,7862,7.94],[7863,7863,6.12],[7864,7864,7.34],[7865,7865,6.12],[7866,7866,7.34],[7867,7867,6.12],[7868,7868,7.34],[7869,7869,6.12],[7870,7870,7.5],[7871,7871,6.17],[7872,7872,7.34],[7873,7873,6.37],[7874,7874,7.34],[7875,7875,6.12],[7876,7876,7.34],[7877,7877,6.12],[7878,7878,7.34],[7879,7879,6.12],[7880,7883,3.06],[7884,7884,8.56],[7885,7885,6.72],[7886,7886,8.56],[7887,7887,6.72],[7888,7888,8.56],[7889,7889,6.72],[7890,7890,8.56],[7891,7891,6.72],[7892,7892,8.56],[7893,7893,6.72],[7894,7894,8.56],[7895,7895,6.72],[7896,7896,8.56],[7897,7897,6.72],[7898,7898,10.41],[7899,7899,8.74],[7900,7900,10.41],[7901,7901,8.74],[7902,7902,10.41],[7903,7903,8.74],[7904,7904,10.41],[7905,7905,8.74],[7906,7906,10.41],[7907,7907,8.74],[7908,7908,7.94],[7909,7909,6.72],[7910,7910,7.94],[7911,7911,6.72],[7912,7912,10.1],[7913,7913,8.85],[7914,7914,10.1],[7915,7915,8.85],[7916,7916,10.1],[7917,7917,8.85],[7918,7918,10.1],[7919,7919,8.85],[7920,7920,10.1],[7921,7921,8.85],[7922,7922,7.34],[7923,7923,5.71],[7924,7924,7.34],[7925,7925,6.12],[7926,7926,7.34],[7927,7927,6.12],[7928,7928,7.34],[7929,7929,6.12],[7930,7930,10.3],[7931,7931,6.48],[7932,7932,5.57],[7933,7933,4.89],[7934,7934,5.04],[7936,7943,6.73],[7944,7944,8.47],[7945,7945,8.57],[7946,7946,11.59],[7947,7947,11.15],[7948,7948,10.38],[7949,7949,10.91],[7950,7951,10.38],[7952,7957,6.12],[7958,7959,5.5],[7960,7961,9.78],[7962,7962,12.1],[7963,7963,12.06],[7964,7964,11.8],[7965,7965,12.03],[7966,7967,5.5],[7968,7975,6.71],[7976,7977,10.38],[7978,7978,12.7],[7979,7979,12.66],[7980,7980,12.41],[7981,7981,12.64],[7982,7983,10.38],[7984,7991,3.06],[7992,7993,5.7],[7994,7994,8.02],[7995,7995,7.97],[7996,7996,7.72],[7997,7997,7.95],[7998,7999,5.7],[8000,8005,6.73],[8006,8007,5.5],[8008,8009,11],[8010,8010,13.31],[8011,8011,13.28],[8012,8012,13.02],[8013,8013,13.25],[8014,8015,5.5],[8016,8023,6.71],[8024,8024,5.5],[8025,8025,9.78],[8026,8026,5.5],[8027,8027,12.06],[8028,8028,5.5],[8029,8029,12.03],[8030,8030,5.5],[8031,8031,10.41],[8032,8039,7.94],[8040,8041,10.89],[8042,8042,13.21],[8043,8043,13.17],[8044,8044,12.91],[8045,8045,13.14],[8046,8047,10.89],[8048,8049,6.73],[8050,8051,6.12],[8052,8053,6.71],[8054,8055,3.06],[8056,8057,6.73],[8058,8059,6.71],[8060,8061,7.94],[8062,8063,5.5],[8064,8071,6.73],[8072,8072,11.82],[8073,8073,11.65],[8074,8074,14.37],[8075,8075,14.42],[8076,8076,13.86],[8077,8077,14.39],[8078,8079,13.44],[8080,8087,6.71],[8088,8089,13.44],[8090,8090,15.76],[8091,8091,15.72],[8092,8092,15.47],[8093,8093,15.7],[8094,8095,13.44],[8096,8103,7.94],[8104,8105,13.95],[8106,8106,16.27],[8107,8107,16.22],[8108,8108,15.97],[8109,8109,16.2],[8110,8111,13.95],[8112,8116,6.73],[8117,8117,5.5],[8118,8119,6.73],[8120,8121,7.94],[8122,8123,9.35],[8124,8124,10.78],[8125,8125,2.44],[8126,8126,3.82],[8127,8127,2.44],[8128,8129,2.94],[8130,8132,6.71],[8133,8133,5.5],[8134,8135,6.71],[8136,8136,10.15],[8137,8137,10.33],[8138,8138,10.83],[8139,8139,10.71],[8140,8140,11.03],[8141,8141,4.76],[8142,8142,4.47],[8143,8143,2.44],[8144,8147,3.06],[8148,8149,5.5],[8150,8151,3.06],[8152,8153,3.26],[8154,8154,5.82],[8155,8155,5.95],[8156,8156,5.5],[8157,8157,4.72],[8158,8158,4.7],[8159,8159,2.44],[8160,8163,6.71],[8164,8165,6.72],[8166,8167,6.71],[8168,8169,7.34],[8170,8170,10.52],[8171,8171,10.44],[8172,8172,9.78],[8173,8174,4.34],[8175,8175,2.94],[8176,8177,5.5],[8178,8180,7.94],[8181,8181,5.5],[8182,8183,7.94],[8184,8184,10.94],[8185,8185,11.23],[8186,8186,11.54],[8187,8187,11.82],[8188,8188,11.44],[8189,8189,2.94],[8190,8190,2.44],[8192,8192,5.5],[8193,8193,11],[8194,8194,3.06],[8195,8195,9.16],[8196,8196,3.66],[8197,8197,3.06],[8198,8198,1.84],[8199,8199,6.12],[8200,8200,1.15],[8201,8201,0.48],[8202,8202,0.16],[8203,8207,0],[8208,8208,4.48],[8209,8210,3.66],[8211,8211,5.5],[8212,8213,11],[8214,8214,5.82],[8215,8215,3.66],[8216,8219,3.06],[8220,8222,5.09],[8223,8223,5.5],[8224,8225,6.12],[8226,8226,3.85],[8227,8227,7.33],[8228,8228,3.64],[8229,8229,7.41],[8230,8230,11],[8231,8231,3.64],[8232,8239,0],[8240,8240,12.62],[8241,8241,15.65],[8242,8242,3.66],[8243,8243,6.71],[8244,8244,9.47],[8245,8245,3.66],[8246,8246,6.71],[8247,8247,9.47],[8248,8248,3.66],[8249,8250,2.65],[8251,8251,8.92],[8252,8252,7.33],[8253,8253,6.12],[8254,8254,3.66],[8255,8256,10.55],[8257,8257,6.83],[8258,8258,9.31],[8259,8259,3.66],[8260,8260,1.84],[8261,8262,3.66],[8263,8263,13.44],[8264,8265,10.38],[8266,8266,6.83],[8267,8269,6.12],[8270,8270,4.28],[8271,8271,3.66],[8272,8272,10.55],[8273,8273,4.28],[8274,8274,9.78],[8275,8275,9.64],[8276,8276,10.55],[8277,8278,8.92],[8279,8279,12.18],[8280,8281,8.92],[8282,8282,3.66],[8283,8284,8.92],[8285,8286,3.66],[8287,8287,3.06],[8288,8302,0],[8304,8304,4.29],[8305,8305,1.53],[8306,8307,5.5],[8308,8313,4.29],[8314,8314,4.4],[8315,8315,2.97],[8316,8316,4.4],[8317,8318,2.47],[8319,8329,4.29],[8330,8330,4.4],[8331,8331,2.97],[8332,8332,4.4],[8333,8334,2.47],[8335,8335,5.5],[8336,8337,3.06],[8338,8338,3.37],[8339,8340,3.06],[8341,8350,5.5],[8352,8352,6.01],[8353,8354,7.94],[8355,8355,6.12],[8356,8356,7.14],[8357,8357,9.78],[8358,8358,8.9],[8359,8359,8.45],[8360,8360,6.92],[8361,8361,11.26],[8362,8362,8.34],[8363,8363,6.72],[8364,8364,6.12],[8365,8365,8.6],[8366,8366,6.72],[8367,8367,12.29],[8368,8368,5.5],[8369,8369,8.57],[8370,8370,8.56],[8371,8371,7.94],[8372,8372,7.01],[8373,8373,7.94],[8374,8374,7.44],[8375,8375,10.33],[8376,8376,6.12],[8377,8377,6.08],[8378,8378,6.12],[8379,8379,10.82],[8380,8381,6.12],[8382,8382,8.28],[8383,8383,7.22],[8384,8398,5.5],[8400,8402,0],[8403,8403,6.6],[8404,8405,7.7],[8406,8408,0],[8409,8410,6.6],[8411,8413,0],[8414,8414,11],[8415,8415,9.51],[8416,8416,9.9],[8417,8417,0],[8418,8418,5.5],[8419,8432,0],[8433,8446,5.5],[8448,8449,9.17],[8450,8450,7.94],[8451,8451,12.34],[8452,8452,7.78],[8453,8454,9.17],[8455,8455,7.69],[8456,8456,6.98],[8457,8457,11.12],[8458,8458,11],[8459,8459,9.96],[8460,8460,9.27],[8461,8461,7.94],[8462,8462,6.34],[8463,8463,7.11],[8464,8464,7.57],[8465,8465,8.69],[8466,8466,7.79],[8467,8467,5.5],[8468,8468,8.56],[8469,8469,6.62],[8470,8470,11.73],[8471,8471,8.8],[8472,8472,9.35],[8473,8473,7.34],[8474,8474,8.56],[8475,8475,10.19],[8476,8476,9.72],[8477,8477,6.62],[8478,8478,7.51],[8479,8479,7.34],[8480,8480,8.25],[8481,8481,10.38],[8482,8482,11],[8483,8483,7.94],[8484,8484,6.62],[8485,8485,5.96],[8486,8486,8.5],[8487,8487,8.45],[8488,8488,8.3],[8489,8489,3.06],[8490,8491,7.94],[8492,8492,10.19],[8493,8493,8.5],[8494,8494,8.47],[8495,8495,4.23],[8496,8496,6.77],[8497,8497,7.57],[8498,8498,6.72],[8499,8499,12.27],[8500,8500,4.46],[8501,8501,7.21],[8502,8502,6.64],[8503,8503,5.11],[8504,8504,6.18],[8505,8505,7.26],[8506,8506,8.56],[8507,8507,11],[8508,8508,8.84],[8509,8509,7.11],[8510,8510,5.47],[8511,8511,8.45],[8512,8512,10.74],[8513,8513,8.56],[8514,8515,6.72],[8516,8516,7.34],[8517,8517,8.88],[8518,8518,7.63],[8519,8519,6.74],[8520,8520,4.52],[8521,8521,4.65],[8522,8522,7.43],[8523,8523,7.94],[8524,8524,8.91],[8525,8525,9.44],[8526,8526,4.96],[8528,8530,11],[8531,8532,9.17],[8533,8538,10.45],[8539,8543,9.17],[8544,8544,3.06],[8545,8545,6.12],[8546,8546,9.16],[8547,8547,10.39],[8548,8548,7.34],[8549,8549,10.39],[8550,8550,13.45],[8551,8551,16.5],[8552,8552,10.39],[8553,8553,7.34],[8554,8554,10.39],[8555,8555,13.45],[8556,8556,6.72],[8557,8558,7.94],[8559,8559,9.16],[8560,8560,3.06],[8561,8561,6.12],[8562,8562,9.16],[8563,8563,9.17],[8564,8564,6.12],[8565,8565,9.17],[8566,8566,12.23],[8567,8567,15.29],[8568,8568,9.17],[8569,8569,6.12],[8570,8570,9.17],[8571,8571,12.23],[8572,8572,3.06],[8573,8573,6.12],[8574,8574,6.72],[8575,8575,9.78],[8576,8576,11.9],[8577,8577,8.72],[8578,8578,13.87],[8579,8579,7.94],[8580,8580,6.12],[8581,8581,7.17],[8582,8582,6.21],[8583,8584,5.5],[8585,8585,11],[8586,8590,5.5],[8592,8592,11],[8593,8593,5.5],[8594,8594,11],[8595,8595,5.5],[8596,8596,11],[8597,8597,5.5],[8598,8598,10.07],[8599,8599,11],[8600,8600,10.07],[8601,8603,11],[8604,8615,6.62],[8616,8616,5.5],[8617,8618,11],[8619,8621,6.62],[8622,8622,11],[8623,8623,6.62],[8624,8626,9.51],[8627,8627,11],[8628,8628,9.51],[8629,8629,11],[8630,8631,9.51],[8632,8633,11],[8634,8635,6.62],[8636,8636,9.51],[8637,8639,6.62],[8640,8640,9.51],[8641,8643,6.62],[8644,8646,11],[8647,8650,6.62],[8651,8652,11],[8653,8653,9.68],[8654,8654,6.62],[8655,8655,9.56],[8656,8656,11],[8657,8657,9.51],[8658,8658,11],[8659,8659,9.51],[8660,8660,11],[8661,8669,6.62],[8670,8671,7.95],[8672,8672,11],[8673,8673,7.95],[8674,8674,11],[8675,8675,7.95],[8676,8678,11],[8679,8679,12.99],[8680,8681,11],[8682,8682,12.99],[8683,8687,6.62],[8688,8688,9.51],[8689,8692,6.62],[8693,8693,11],[8694,8702,6.62],[8704,8704,6.93],[8705,8705,5.16],[8706,8706,6.16],[8707,8707,5.78],[8708,8708,5.88],[8709,8709,7.89],[8710,8710,7.55],[8711,8711,6.73],[8712,8712,6.34],[8713,8713,6.73],[8714,8714,5.6],[8715,8715,6.34],[8716,8716,6.48],[8717,8717,5.6],[8718,8718,5.74],[8719,8719,8.24],[8720,8720,9.05],[8721,8721,6.8],[8722,8722,6.6],[8723,8723,8.75],[8724,8724,6.58],[8725,8725,1.84],[8726,8726,8.84],[8727,8727,5.76],[8728,8728,3.9],[8729,8729,3.06],[8730,8730,6.21],[8731,8731,8.23],[8732,8732,7.97],[8733,8733,5.7],[8734,8734,9.05],[8735,8735,10.77],[8736,8736,6.57],[8737,8737,6.61],[8738,8738,6.66],[8739,8739,2.74],[8740,8740,5.2],[8741,8741,3.8],[8742,8742,5.78],[8743,8744,6.53],[8745,8745,7.91],[8746,8746,5.84],[8747,8747,4.59],[8748,8748,10.06],[8749,8749,12.36],[8750,8750,7.46],[8751,8751,10.16],[8752,8752,12.83],[8753,8753,6.58],[8754,8754,6.91],[8755,8755,6.57],[8756,8756,6.64],[8757,8757,6.57],[8758,8758,3.7],[8759,8759,6.33],[8760,8760,6.19],[8761,8761,6.33],[8762,8762,6.38],[8763,8763,6.16],[8764,8765,6.05],[8766,8766,5.97],[8767,8767,6.42],[8768,8768,4.29],[8769,8769,6.32],[8770,8770,6.38],[8771,8771,6.43],[8772,8772,7.38],[8773,8773,7.66],[8774,8774,6.92],[8775,8775,6.72],[8776,8777,6.6],[8778,8778,6.64],[8779,8779,7.38],[8780,8780,5.97],[8781,8781,6.63],[8782,8782,6.57],[8783,8783,6.52],[8784,8784,6.16],[8785,8785,7.02],[8786,8787,6.96],[8788,8789,8.4],[8790,8790,6.36],[8791,8791,6.55],[8792,8792,6.48],[8793,8793,6.69],[8794,8794,6.81],[8795,8795,7.11],[8796,8796,7],[8797,8797,6.19],[8798,8798,6.32],[8799,8799,6.49],[8800,8800,6.6],[8801,8802,6.27],[8803,8803,6.52],[8804,8805,6.6],[8806,8806,6.32],[8807,8807,6.2],[8808,8808,6.84],[8809,8809,6.48],[8810,8810,8.07],[8811,8811,7.71],[8812,8812,3.94],[8813,8813,6.09],[8814,8817,6.6],[8818,8818,6.2],[8819,8819,6.24],[8820,8820,6.41],[8821,8821,6.39],[8822,8823,6.66],[8824,8824,6.17],[8825,8825,6.34],[8826,8826,6.24],[8827,8827,6.36],[8828,8828,6.56],[8829,8829,6.36],[8830,8830,6.44],[8831,8831,6.4],[8832,8832,6.68],[8833,8833,6.36],[8834,8835,6.95],[8836,8836,7.08],[8837,8837,6.94],[8838,8839,7.29],[8840,8840,7.34],[8841,8841,7.14],[8842,8843,6.18],[8844,8845,6.4],[8846,8846,6.7],[8847,8848,7.19],[8849,8850,7.17],[8851,8852,6.72],[8853,8853,7.96],[8854,8854,8.2],[8855,8855,7.83],[8856,8856,7.94],[8857,8857,8.32],[8858,8858,8.09],[8859,8859,7.9],[8860,8860,8.37],[8861,8861,8.31],[8862,8862,8.62],[8863,8863,8.36],[8864,8864,8.06],[8865,8865,7.87],[8866,8869,8.26],[8870,8870,3.63],[8871,8871,3.67],[8872,8872,6.86],[8873,8873,8.02],[8874,8874,6.85],[8875,8875,8.31],[8876,8876,8.53],[8877,8877,8.56],[8878,8878,9.61],[8879,8879,9.2],[8880,8881,6.96],[8882,8883,8.15],[8884,8885,7.73],[8886,8887,8.08],[8888,8888,6.55],[8889,8889,7.51],[8890,8890,5.28],[8891,8892,7.66],[8893,8893,7.42],[8894,8894,8.16],[8895,8895,6.94],[8896,8897,7.38],[8898,8899,7.05],[8900,8900,4.19],[8901,8901,4.85],[8902,8902,4.93],[8903,8903,6.94],[8904,8904,8.5],[8905,8906,8.14],[8907,8908,7.96],[8909,8909,6.43],[8910,8911,6.98],[8912,8913,7.13],[8914,8915,6.26],[8916,8916,6.04],[8917,8917,6.75],[8918,8919,6.63],[8920,8921,10.65],[8922,8923,7.16],[8924,8925,7.11],[8926,8927,7.36],[8928,8928,7.33],[8929,8929,7.21],[8930,8930,7.55],[8931,8931,7.3],[8932,8932,7.38],[8933,8933,7.41],[8934,8934,7.44],[8935,8935,7.55],[8936,8936,7.91],[8937,8937,7.57],[8938,8938,8.23],[8939,8939,8.42],[8940,8940,8.49],[8941,8941,8.54],[8942,8942,4.52],[8943,8943,11],[8944,8944,10.12],[8945,8945,10.33],[8946,8946,7.15],[8947,8947,6.34],[8948,8948,5.6],[8949,8950,6.34],[8951,8951,5.6],[8952,8952,6.34],[8953,8953,6.95],[8954,8954,7.15],[8955,8955,6.34],[8956,8956,5.6],[8957,8957,6.34],[8958,8958,5.6],[8960,8961,6.62],[8962,8962,6.6],[8963,8963,10.21],[8964,8964,6.62],[8965,8965,8.74],[8966,8966,7.53],[8967,8967,11],[8968,8975,6.62],[8976,8976,6.27],[8977,8977,6.62],[8978,8978,11],[8979,8979,6.62],[8980,8980,9.51],[8981,8981,6.62],[8982,8982,6.04],[8983,8983,7.15],[8984,8984,10.21],[8985,8985,6.62],[8986,8987,11],[8988,8991,6.62],[8992,8993,6.64],[8994,8995,9.51],[8996,8996,8.74],[8997,8997,11],[8998,8998,14.38],[8999,8999,11],[9000,9000,6.62],[9001,9002,11],[9003,9003,14.38],[9004,9012,6.04],[9013,9013,6.62],[9014,9014,10.19],[9015,9020,6.62],[9021,9021,11],[9022,9022,6.62],[9023,9023,8.01],[9024,9024,6.6],[9025,9028,6.62],[9029,9030,6.6],[9031,9033,6.62],[9034,9034,6.6],[9035,9037,6.62],[9038,9039,6.6],[9040,9040,6.62],[9041,9041,6.6],[9042,9044,6.62],[9045,9046,6.6],[9047,9052,6.62],[9053,9053,6.6],[9054,9056,6.62],[9057,9058,6.6],[9059,9061,6.62],[9062,9063,6.6],[9064,9065,6.62],[9066,9066,6.6],[9067,9072,6.62],[9073,9074,6.6],[9075,9082,6.62],[9083,9083,7.36],[9084,9084,10.3],[9085,9085,3.51],[9086,9086,10.33],[9087,9087,4.08],[9088,9091,6.62],[9092,9092,8.63],[9093,9093,7.52],[9094,9094,7.42],[9095,9096,11],[9097,9098,6.62],[9099,9099,9.81],[9100,9100,8.88],[9101,9101,8.65],[9102,9102,8.22],[9103,9107,7.24],[9108,9108,8.17],[9109,9109,6.62],[9110,9110,5.19],[9111,9112,8.67],[9113,9114,8.97],[9115,9133,11],[9134,9134,6.62],[9135,9135,3.46],[9136,9137,11],[9138,9139,16.37],[9140,9141,6.77],[9142,9142,7.96],[9143,9143,7.07],[9144,9149,5.54],[9150,9164,11],[9165,9165,10.97],[9166,9166,12.03],[9167,9167,9.43],[9168,9168,5.62],[9169,9169,5.96],[9170,9171,5.97],[9172,9173,11.34],[9174,9174,10.54],[9175,9177,10.73],[9178,9179,11],[9180,9183,6.79],[9184,9184,6.77],[9185,9185,11],[9186,9186,12.58],[9187,9187,10.01],[9188,9188,12.03],[9189,9189,11.2],[9190,9190,10.19],[9191,9191,8.78],[9192,9192,5.5],[9193,9203,11],[9204,9207,5.5],[9208,9210,11],[9211,9214,5.5],[9216,9247,11],[9248,9248,6.6],[9249,9249,11],[9250,9250,6.6],[9251,9251,6.63],[9252,9252,6.6],[9253,9253,8.71],[9254,9254,4.44],[9255,9278,5.5],[9280,9285,6.64],[9286,9289,8.25],[9290,9290,6.64],[9291,9310,5.5],[9312,9412,11],[9413,9413,9.24],[9414,9470,11],[9472,9499,11],[9500,9500,7.79],[9501,9507,11],[9508,9508,7.79],[9509,9515,11],[9516,9516,7.79],[9517,9523,11],[9524,9524,7.79],[9525,9531,11],[9532,9532,7.79],[9533,9547,11],[9548,9551,6.8],[9552,9580,7.79],[9581,9588,11],[9589,9598,6.8],[9600,9600,7.79],[9601,9603,11],[9604,9604,7.79],[9605,9611,11],[9612,9612,7.79],[9613,9615,11],[9616,9618,7.79],[9619,9619,8.02],[9620,9621,11],[9622,9630,6.62],[9632,9633,6.64],[9634,9634,11],[9635,9641,9.51],[9642,9643,3.9],[9644,9644,11],[9645,9645,9.51],[9646,9648,6.62],[9649,9649,11],[9650,9650,10.89],[9651,9651,11],[9652,9652,6.96],[9653,9653,9.51],[9654,9654,9.68],[9655,9655,11],[9656,9657,5.83],[9658,9658,10.89],[9659,9659,6.62],[9660,9660,10.89],[9661,9661,11],[9662,9663,7.03],[9664,9664,11],[9665,9665,8.74],[9666,9666,6.62],[9667,9667,9.51],[9668,9668,10.89],[9669,9669,6.62],[9670,9670,7.95],[9671,9671,6.76],[9672,9672,9.51],[9673,9673,11],[9674,9674,6.6],[9675,9675,6.64],[9676,9676,6.54],[9677,9677,6.62],[9678,9678,11],[9679,9679,6.85],[9680,9683,11],[9684,9687,6.62],[9688,9689,6.64],[9690,9697,6.62],[9698,9701,11],[9702,9702,3.9],[9703,9710,6.62],[9711,9711,11],[9712,9722,6.62],[9723,9726,11],[9728,9731,11],[9732,9732,6.62],[9733,9734,11],[9735,9736,6.62],[9737,9737,11],[9738,9741,6.62],[9742,9742,11],[9743,9743,9.51],[9744,9746,9.13],[9747,9747,6.62],[9748,9751,11],[9752,9755,6.62],[9756,9759,11],[9760,9774,6.62],[9775,9775,9.51],[9776,9783,9.9],[9784,9784,6.62],[9785,9785,8.11],[9786,9786,11.23],[9787,9787,8.11],[9788,9788,10.08],[9789,9791,6.62],[9792,9792,8.25],[9793,9793,6.62],[9794,9794,8.25],[9795,9799,6.62],[9800,9811,11],[9812,9823,6.62],[9824,9824,5.84],[9825,9826,11],[9827,9827,7.22],[9828,9828,11],[9829,9829,6.53],[9830,9830,5.61],[9831,9833,11],[9834,9834,6.01],[9835,9835,8.25],[9836,9836,11],[9837,9837,5.49],[9838,9838,11],[9839,9839,6.04],[9840,9841,6.62],[9842,9853,11],[9854,9854,6.62],[9855,9855,11],[9856,9867,6.62],[9868,9868,9.67],[9869,9869,9.49],[9870,9870,9.45],[9871,9871,9.86],[9872,9874,6.62],[9875,9875,11],[9876,9884,6.62],[9885,9887,5.5],[9888,9889,11],[9890,9890,9.81],[9891,9891,9.87],[9892,9892,9.71],[9893,9893,7.26],[9894,9894,8.15],[9895,9895,10.16],[9896,9896,5.86],[9897,9897,10.12],[9898,9899,11],[9900,9900,7.1],[9901,9901,8.54],[9902,9902,11.61],[9903,9903,12.3],[9904,9905,6.62],[9906,9906,6.63],[9907,9916,5.5],[9917,9918,11],[9919,9923,5.5],[9924,9925,11],[9926,9927,5.5],[9928,9928,11],[9929,9930,5.5],[9931,9931,11],[9932,9933,5.5],[9934,9935,11],[9936,9936,5.5],[9937,9937,11],[9938,9938,5.5],[9939,9940,11],[9941,9953,5.5],[9954,9954,7.7],[9955,9960,5.5],[9961,9962,11],[9963,9967,5.5],[9968,9973,11],[9974,9974,5.5],[9975,9978,11],[9979,9980,5.5],[9981,9981,11],[9982,9982,5.5],[9984,9984,5.5],[9985,9985,10.72],[9986,9986,10.57],[9987,9987,10.72],[9988,9988,10.78],[9989,9989,11],[9990,9990,8.68],[9991,9991,8.69],[9992,9992,8.7],[9993,9993,7.59],[9994,9997,11],[9998,9998,8.72],[9999,9999,10.26],[10000,10000,10.02],[10001,10001,10.39],[10002,10002,10.72],[10003,10003,8.41],[10004,10004,9.31],[10005,10005,8.38],[10006,10006,8.37],[10007,10007,6.28],[10008,10008,7.44],[10009,10009,8.4],[10010,10010,8.36],[10011,10011,8.35],[10012,10012,8.29],[10013,10013,5.44],[10014,10014,6.07],[10015,10015,5.91],[10016,10016,6.35],[10017,10017,7.61],[10018,10018,8.65],[10019,10020,8.67],[10021,10021,8.69],[10022,10022,8.72],[10023,10023,8.73],[10024,10024,11],[10025,10025,9.06],[10026,10026,8.68],[10027,10027,9.25],[10028,10028,9.06],[10029,10029,9.16],[10030,10030,8.98],[10031,10031,9.14],[10032,10032,10.15],[10033,10033,8.19],[10034,10034,7.95],[10035,10035,8.24],[10036,10036,8.69],[10037,10037,8.71],[10038,10038,7.64],[10039,10039,8.53],[10040,10040,8.45],[10041,10041,8.71],[10042,10042,8.35],[10043,10043,7.78],[10044,10044,7.79],[10045,10045,7.5],[10046,10046,7.71],[10047,10047,9.09],[10048,10048,8.96],[10049,10050,8.68],[10051,10051,7.78],[10052,10052,7.56],[10053,10053,7.65],[10054,10054,7.58],[10055,10055,8.65],[10056,10056,8.66],[10057,10057,7.84],[10058,10058,8.7],[10059,10059,8.64],[10060,10060,11],[10061,10061,9.6],[10062,10062,11],[10063,10064,8.38],[10065,10066,8.35],[10067,10069,11],[10070,10070,8.63],[10071,10071,11],[10072,10072,3.31],[10073,10073,3.05],[10074,10074,4.57],[10075,10076,4.31],[10077,10078,7.35],[10079,10080,5.5],[10081,10081,8.05],[10082,10083,5.98],[10084,10084,10.01],[10085,10085,7.34],[10086,10087,8.36],[10088,10089,4.29],[10090,10091,3.49],[10092,10093,3.03],[10094,10095,5.6],[10096,10097,4.51],[10098,10099,2.57],[10100,10101,3.67],[10102,10131,8.67],[10132,10132,9.83],[10133,10135,11],[10136,10136,8.23],[10137,10137,10.16],[10138,10138,8.23],[10139,10139,10.1],[10140,10140,10.19],[10141,10142,10.21],[10143,10143,9.17],[10144,10144,9.6],[10145,10145,9.11],[10146,10147,10.16],[10148,10148,10.09],[10149,10149,10.23],[10150,10150,10.24],[10151,10151,5.09],[10152,10152,9.71],[10153,10154,9.2],[10155,10156,9.54],[10157,10158,7.65],[10159,10159,9.61],[10160,10160,11],[10161,10161,9.61],[10162,10162,8.36],[10163,10163,10.4],[10164,10164,8.48],[10165,10165,9.52],[10166,10166,8.48],[10167,10167,9.77],[10168,10168,10.63],[10169,10169,9.77],[10170,10170,9.14],[10171,10171,9.6],[10172,10172,10.19],[10173,10173,10.67],[10174,10174,10.1],[10176,10176,6.03],[10177,10177,10.43],[10178,10178,7.58],[10179,10180,6.21],[10181,10182,6.62],[10183,10183,6.82],[10184,10185,10.1],[10186,10186,3.74],[10187,10187,9.22],[10188,10188,3.57],[10189,10189,9.22],[10190,10191,5.5],[10192,10192,8.21],[10193,10193,6.82],[10194,10194,6.57],[10195,10196,5.97],[10197,10198,9.93],[10199,10199,12.26],[10200,10201,7.58],[10202,10202,9.57],[10203,10203,9.42],[10204,10204,11.6],[10205,10206,9.33],[10207,10207,4.36],[10208,10208,6.06],[10209,10209,7.7],[10210,10211,9.64],[10212,10213,10.41],[10214,10215,4.64],[10216,10217,4.02],[10218,10219,5.1],[10220,10221,5.37],[10222,10222,2.56],[10224,10225,10.8],[10226,10227,10.48],[10228,10228,13.71],[10229,10238,12.97],[10240,10494,7.52],[10496,10497,10.29],[10498,10499,9.52],[10500,10500,11.39],[10501,10501,10.29],[10502,10503,9.52],[10504,10505,5.25],[10506,10507,7.89],[10508,10511,9.7],[10512,10512,11.47],[10513,10513,9.22],[10514,10515,8.33],[10516,10517,9.51],[10518,10520,11.47],[10521,10524,9.51],[10525,10528,9.7],[10529,10530,8.21],[10531,10534,7.15],[10535,10535,8.57],[10536,10536,8.13],[10537,10537,8.57],[10538,10538,8.13],[10539,10540,7.68],[10541,10544,8.13],[10545,10546,8.57],[10547,10547,9.31],[10548,10549,11],[10550,10551,9.51],[10552,10552,4.48],[10553,10553,9.51],[10554,10557,8.89],[10558,10559,7.21],[10560,10561,8.39],[10562,10567,9.22],[10568,10568,10.13],[10569,10569,5.36],[10570,10571,9.22],[10572,10573,5.44],[10574,10574,9.22],[10575,10575,4.76],[10576,10576,9.22],[10577,10577,4.76],[10578,10579,9.49],[10580,10581,4.76],[10582,10583,9.49],[10584,10585,4.76],[10586,10587,9.59],[10588,10589,4.76],[10590,10591,9.59],[10592,10593,4.76],[10594,10597,9.51],[10598,10605,9.22],[10606,10607,7.85],[10608,10613,9.22],[10614,10614,7.95],[10615,10615,11.47],[10616,10616,7.95],[10617,10617,8.41],[10618,10618,10.13],[10619,10619,8.41],[10620,10621,6.12],[10622,10622,6.57],[10624,10624,4.01],[10625,10625,4.18],[10626,10626,3.45],[10627,10628,4.11],[10629,10630,4.92],[10631,10632,3.68],[10633,10634,4.35],[10635,10636,3.31],[10637,10640,3.3],[10641,10641,4.02],[10642,10642,4.04],[10643,10644,7.25],[10645,10646,7.65],[10647,10648,7.13],[10649,10649,2.48],[10650,10650,3.05],[10651,10651,6.53],[10652,10653,6.51],[10654,10654,7.27],[10655,10655,6.03],[10656,10657,6.53],[10658,10661,6.03],[10662,10663,8.28],[10664,10671,6.53],[10672,10676,7.73],[10677,10677,9.56],[10678,10678,7.7],[10679,10679,7.72],[10680,10680,7.94],[10681,10681,7.72],[10682,10682,7.73],[10683,10683,7.74],[10684,10689,7.72],[10690,10690,9.41],[10691,10691,9.61],[10692,10696,8.22],[10697,10697,8.75],[10698,10700,8.23],[10701,10701,10.38],[10702,10702,7.15],[10703,10704,8.34],[10705,10707,7.56],[10708,10709,7.17],[10710,10711,8.44],[10712,10713,3.05],[10714,10715,4.66],[10716,10716,7.01],[10717,10717,7.12],[10718,10718,7.01],[10719,10719,7.41],[10720,10720,8.22],[10721,10721,7.19],[10722,10722,7.51],[10723,10725,7.3],[10726,10726,7.81],[10727,10727,6.99],[10728,10729,8.23],[10730,10730,7.89],[10731,10731,5.2],[10732,10733,9.89],[10734,10735,6.57],[10736,10737,7.79],[10738,10739,7.72],[10740,10740,9],[10741,10741,4.08],[10742,10742,6.34],[10743,10745,5.59],[10746,10747,7.43],[10748,10749,5.91],[10750,10750,5.2],[10752,10753,9.89],[10754,10754,9.92],[10755,10756,5.99],[10757,10758,6.55],[10759,10760,8.43],[10761,10761,7.33],[10762,10762,9.41],[10763,10763,7.18],[10764,10764,16.56],[10765,10767,6.72],[10768,10768,6.52],[10769,10769,8.01],[10770,10770,6.74],[10771,10771,6.52],[10772,10772,7.42],[10773,10773,6.52],[10774,10774,6.72],[10775,10775,7.43],[10776,10778,6.72],[10779,10779,7.02],[10780,10780,6.79],[10781,10781,7.56],[10782,10782,4.35],[10783,10783,3.67],[10784,10784,8.92],[10785,10785,3.59],[10786,10787,5.95],[10788,10788,5.99],[10789,10789,5.95],[10790,10790,5.99],[10791,10791,7.12],[10792,10792,7.02],[10793,10794,5.99],[10795,10796,5.97],[10797,10798,8.37],[10799,10799,5.04],[10800,10800,5.82],[10801,10801,5.96],[10802,10802,5.74],[10803,10803,8.85],[10804,10805,7.86],[10806,10808,9.89],[10809,10811,8.23],[10812,10813,5.63],[10814,10814,3.67],[10815,10815,6.77],[10816,10821,5.99],[10822,10823,4.27],[10824,10825,5.96],[10826,10827,5.62],[10828,10829,8.13],[10830,10831,6.55],[10832,10832,8.13],[10833,10834,6.71],[10835,10836,7.17],[10837,10838,8.28],[10839,10840,7.17],[10841,10841,6.67],[10842,10843,7.17],[10844,10845,8.12],[10846,10848,6.71],[10849,10849,5.97],[10850,10851,6.71],[10852,10853,7.34],[10854,10857,5.96],[10858,10861,5.98],[10862,10862,5.33],[10863,10864,5.98],[10865,10866,5.97],[10867,10867,5.99],[10868,10868,9.33],[10869,10869,10.82],[10870,10870,16.03],[10871,10871,6],[10872,10872,6.55],[10873,10874,7.25],[10875,10876,5.63],[10877,10879,5.97],[10880,10880,5.98],[10881,10884,5.97],[10885,10886,5.98],[10887,10887,6.06],[10888,10888,6.27],[10889,10890,5.98],[10891,10892,5.97],[10893,10893,6.06],[10894,10894,6.03],[10895,10896,5.99],[10897,10903,5.97],[10904,10906,5.98],[10907,10908,5.97],[10909,10910,5.98],[10911,10911,6.07],[10912,10912,6],[10913,10914,7.51],[10915,10915,8.87],[10916,10916,5.99],[10917,10917,10.29],[10918,10921,6.75],[10922,10922,5.63],[10923,10923,5.76],[10924,10924,6.06],[10925,10925,6.11],[10926,10926,5.97],[10927,10929,6.08],[10930,10930,6.06],[10931,10934,6.08],[10935,10935,6.02],[10936,10936,6.03],[10937,10937,6.02],[10938,10938,6.03],[10939,10940,9.76],[10941,10942,6.21],[10943,10950,5.05],[10951,10954,6],[10955,10956,5.05],[10957,10958,10.48],[10959,10960,6.21],[10961,10962,6.2],[10963,10966,5.05],[10967,10968,9.35],[10969,10971,6.57],[10972,10972,6.71],[10973,10973,6.57],[10974,10974,4.32],[10975,10977,7.58],[10978,10978,7.55],[10979,10979,7.52],[10980,10980,7.55],[10981,10981,9.21],[10982,10982,7.54],[10983,10985,7.58],[10986,10987,7.62],[10988,10989,5.63],[10990,10990,3.44],[10991,10992,3.13],[10993,10993,3.29],[10994,10994,4.29],[10995,10995,5.98],[10996,10996,3.84],[10997,10997,5.26],[10998,10998,2.48],[10999,11000,10.68],[11001,11002,5.97],[11003,11003,5.48],[11004,11004,3.9],[11005,11005,4.52],[11006,11006,3.23],[11904,11929,11],[11930,11930,5.5],[11931,12019,11],[12020,12030,5.5],[12272,12283,11],[12284,12286,5.5],[12288,12333,11],[12334,12335,17.6],[12336,12350,11],[12800,12827,9.51],[12828,12828,9.56],[12829,12831,5.5],[12832,12879,11],[12880,12880,5.5],[12881,12895,11],[12896,12923,9.51],[12924,12926,5.5],[12927,12927,9.51],[12928,13003,11],[13004,13007,5.5],[13008,13054,11],[13056,13174,11],[13175,13178,5.5],[13179,13183,11],[13184,13188,9.51],[13189,13193,11],[13194,13196,9.51],[13197,13200,11],[13201,13205,9.51],[13206,13208,11],[13209,13210,9.51],[13211,13222,11],[13223,13231,9.51],[13232,13235,11],[13236,13249,9.51],[13250,13250,11],[13251,13251,9.51],[13252,13252,11],[13253,13255,9.51],[13256,13256,11],[13257,13258,9.51],[13259,13262,11],[13263,13264,9.51],[13265,13266,11],[13267,13267,9.51],[13268,13269,11],[13270,13270,9.51],[13271,13274,11],[13275,13277,9.51],[13278,13279,5.5],[13280,13310,11],[13312,19893,11],[19894,19902,5.5],[19968,40898,11],[40899,40899,5.5],[40900,40900,11],[40901,40901,5.5],[40902,40912,11],[40913,40958,5.5],[63744,64045,11],[64046,64047,5.5],[64048,64109,11],[64110,64254,5.5],[65072,65102,11],[65136,65136,3.43],[65137,65137,2.23],[65138,65138,3.43],[65139,65139,3.3],[65140,65140,3.43],[65141,65141,5.5],[65142,65142,3.43],[65143,65143,2.23],[65144,65144,3.43],[65145,65145,2.23],[65146,65146,3.43],[65147,65147,2.23],[65148,65148,3.43],[65149,65149,2.23],[65150,65150,3.43],[65151,65151,2.23],[65152,65152,5.16],[65153,65153,2.62],[65154,65154,2.79],[65155,65155,2.38],[65156,65156,2.58],[65157,65158,4.96],[65159,65159,2.38],[65160,65160,2.58],[65161,65161,7.09],[65162,65162,6.35],[65163,65164,2.99],[65165,65165,2.38],[65166,65166,2.58],[65167,65168,7.14],[65169,65170,2.99],[65171,65171,3.77],[65172,65172,4.57],[65173,65174,7.14],[65175,65176,2.99],[65177,65178,7.14],[65179,65180,2.99],[65181,65181,6.35],[65182,65182,6.14],[65183,65184,5.76],[65185,65185,6.35],[65186,65186,6.14],[65187,65188,5.76],[65189,65189,6.35],[65190,65190,6.14],[65191,65192,5.76],[65193,65196,3.77],[65197,65200,4.76],[65201,65202,9.89],[65203,65204,6.69],[65205,65206,9.89],[65207,65208,6.69],[65209,65210,11.69],[65211,65212,8.49],[65213,65214,11.69],[65215,65216,8.49],[65217,65224,5.76],[65225,65225,5.95],[65226,65226,5.16],[65227,65227,5.95],[65228,65228,3.96],[65229,65229,5.95],[65230,65230,5.16],[65231,65231,5.95],[65232,65232,3.96],[65233,65234,8.34],[65235,65235,3.35],[65236,65236,3.57],[65237,65238,6.74],[65239,65239,3.35],[65240,65240,3.57],[65241,65242,5.95],[65243,65244,3.96],[65245,65246,4.96],[65247,65248,2.58],[65249,65250,3.96],[65251,65252,4.57],[65253,65254,5.95],[65255,65256,2.99],[65257,65257,3.77],[65258,65258,4.57],[65259,65259,5.16],[65260,65262,4.96],[65263,65263,7.09],[65264,65264,6.1],[65265,65265,7.09],[65266,65266,6.35],[65267,65268,2.99],[65269,65269,5.95],[65270,65270,6.55],[65271,65271,5.35],[65272,65272,5.95],[65273,65273,5.35],[65274,65274,5.95],[65275,65275,5.35],[65276,65276,5.95],[65277,65278,5.5],[65280,65280,5.5],[65281,65376,11],[65377,65440,5.5],[65441,65441,5.22],[65442,65443,5.5],[65444,65444,5.22],[65445,65446,5.5],[65447,65447,5.22],[65448,65503,5.5],[65504,65510,11],[65511,65511,5.5],[65512,65512,11],[65513,65518,5.5],[65792,65792,7.53],[65793,65793,6.31],[65794,65794,7.53],[65795,65795,6.31],[65796,65796,7.53],[65797,65797,6.31],[65798,65798,8.15],[65799,65799,6.31],[65800,65800,8.15],[65801,65801,6.31],[65802,65802,8.15],[65803,65803,6.31],[65804,65804,8.15],[65805,65805,6.31],[65806,65806,8.15],[65807,65807,6.72],[65808,65808,8.15],[65809,65809,6.83],[65810,65810,7.13],[65811,65811,6.31],[65812,65812,7.13],[65813,65813,6.31],[65814,65814,7.13],[65815,65815,6.31],[65816,65816,7.13],[65817,65817,6.31],[65818,65818,7.13],[65819,65819,6.31],[65820,65820,8.35],[65821,65821,6.72],[65822,65822,8.35],[65823,65823,6.72],[65824,65824,8.35],[65825,65825,6.72],[65826,65826,8.35],[65827,65827,6.72],[65828,65828,8.15],[65829,65829,6.52],[65830,65830,8.15],[65831,65831,6.63],[65832,65832,3.24],[65833,65833,2.84],[65834,65834,3.24],[65835,65835,2.84],[65836,65836,3.24],[65837,65837,2.84],[65838,65838,3.24],[65839,65839,2.84],[65840,65840,3.24],[65841,65841,2.84],[65842,65842,9.29],[65843,65843,5.76],[65844,65844,6.12],[65845,65845,3.06],[65846,65846,7.94],[65847,65847,6.31],[65848,65848,6.21],[65849,65849,6.52],[65850,65850,2.84],[65851,65851,6.52],[65852,65852,2.84],[65853,65853,6.52],[65854,65854,4.27],[66304,66350,0],[66352,66382,0],[66560,66561,7.13],[66562,66562,8.84],[66563,66563,6.31],[66564,66564,8.1],[66565,66565,7.14],[66566,66567,3.24],[66568,66568,6.12],[66569,66569,12.38],[66570,66570,12.35],[66571,66571,8.84],[66572,66572,7.94],[66573,66573,8.19],[66574,66574,7.12],[66575,66575,8.05],[66576,66576,7.53],[66577,66577,7.72],[66578,66578,7.74],[66579,66579,6.31],[66580,66580,8.49],[66581,66581,7.13],[66582,66582,11.67],[66583,66583,7.12],[66584,66585,8.19],[66586,66586,7.94],[66587,66587,8.17],[66588,66588,9.98],[66589,66589,8.15],[66590,66590,8.56],[66591,66591,8.05],[66592,66592,7.34],[66593,66593,8.15],[66594,66594,6.72],[66595,66595,7.12],[66596,66596,10.15],[66597,66597,7.34],[66598,66598,8.27],[66599,66599,7.48],[66600,66600,11.45],[66601,66601,11.67],[66602,66602,8.95],[66603,66603,10.22],[66604,66604,7.45],[66605,66605,8.12],[66606,66606,11.25],[66607,66607,7.97],[66608,66608,6.31],[66609,66609,6.68],[66610,66610,6.39],[66611,66611,4.98],[66612,66612,6.86],[66613,66613,6.31],[66614,66614,8.93],[66615,66615,5.96],[66616,66617,6.6],[66618,66618,6.31],[66619,66619,6.59],[66620,66620,8.12],[66621,66621,6.52],[66622,66622,6.72],[66623,66623,6.41],[66624,66624,6.72],[66625,66625,6.31],[66626,66626,5.52],[66627,66627,5.71],[66628,66628,9.42],[66629,66629,5.91],[66630,66630,6.63],[66631,66631,6.31],[66632,66632,9.01],[66633,66633,9.17],[66634,66634,7.11],[66635,66635,8.56],[66636,66636,6.03],[66637,66637,6.34],[66638,66638,9.18],[119040,119294,9.51],[119808,120739,9.51],[120740,120830,5.5],[131072,131072,0],[131073,131079,3.66],[131080,131080,0],[131081,131085,3.06],[131086,131100,3.66],[131101,131101,0],[131102,131103,3.66],[131104,131105,3.06],[131106,131106,5.09],[131107,131108,6.12],[131109,131109,11],[131110,131110,7.53],[131111,131111,3.06],[131112,131113,3.26],[131114,131114,4.48],[131115,131115,6.6],[131116,131116,3.06],[131117,131117,4.48],[131118,131118,3.06],[131119,131119,4.08],[131120,131129,6.12],[131130,131131,3.06],[131132,131134,6.6],[131135,131135,6.12],[131136,131136,8.8],[131137,131137,7.53],[131138,131138,7.74],[131139,131140,8.15],[131141,131141,7.13],[131142,131142,6.52],[131143,131143,8.35],[131144,131144,8.15],[131145,131145,3.24],[131146,131146,6.12],[131147,131147,7.94],[131148,131148,6.52],[131149,131149,9.98],[131150,131150,8.15],[131151,131151,8.56],[131152,131152,7.34],[131153,131153,8.56],[131154,131154,7.94],[131155,131155,7.14],[131156,131156,6.72],[131157,131157,8.15],[131158,131158,6.93],[131159,131159,10.38],[131160,131161,7.34],[131162,131162,7.13],[131163,131163,3.66],[131164,131164,4.08],[131165,131165,3.66],[131166,131166,6.6],[131167,131167,5.5],[131168,131168,2.85],[131169,131169,6.31],[131170,131170,6.72],[131171,131171,6.31],[131172,131172,6.72],[131173,131173,6.31],[131174,131174,3.66],[131175,131175,6.72],[131176,131176,6.52],[131177,131177,2.84],[131178,131178,3.06],[131179,131179,6.31],[131180,131180,2.84],[131181,131181,9.97],[131182,131182,6.52],[131183,131185,6.72],[131186,131186,4.28],[131187,131187,5.91],[131188,131188,3.87],[131189,131189,6.52],[131190,131190,5.72],[131191,131191,8.95],[131192,131192,5.91],[131193,131194,5.71],[131195,131195,3.66],[131196,131196,2.45],[131197,131197,3.66],[131198,131198,6.6],[131199,131199,0],[131200,131200,6.39],[131201,131231,5.5],[131232,131233,3.06],[131234,131237,6.12],[131238,131238,2.45],[131239,131239,6.12],[131240,131240,2.85],[131241,131241,8.8],[131242,131242,3.78],[131243,131243,4.88],[131244,131244,6.6],[131245,131245,0],[131246,131246,8.8],[131247,131247,2.85],[131248,131248,4.4],[131249,131249,6.6],[131250,131251,4.31],[131252,131252,2.85],[131253,131253,6.52],[131254,131254,6.82],[131255,131255,3.06],[131256,131256,2.85],[131257,131257,4.31],[131258,131258,4.04],[131259,131259,4.88],[131260,131260,9.81],[131261,131262,9.78],[131263,131263,6.12],[131264,131269,7.53],[131270,131270,10.79],[131271,131271,8.15],[131272,131275,7.13],[131276,131279,3.24],[131280,131281,8.15],[131282,131286,8.56],[131287,131287,6.6],[131288,131288,8.56],[131289,131292,8.15],[131293,131294,7.34],[131295,131295,6.72],[131296,131301,6.31],[131302,131302,9.98],[131303,131307,6.31],[131308,131311,2.84],[131312,131312,6.72],[131313,131313,6.52],[131314,131318,6.72],[131319,131319,6.6],[131320,131320,6.72],[131321,131324,6.52],[131325,131325,5.71],[131326,131326,6.72],[131327,131327,5.71],[131328,131328,7.53],[131329,131329,6.31],[131330,131330,7.53],[131331,131331,6.31],[131332,131332,7.53],[131333,131333,6.31],[131334,131334,8.15],[131335,131335,6.31],[131336,131336,8.15],[131337,131337,6.31],[131338,131338,8.15],[131339,131339,6.31],[131340,131340,8.15],[131341,131341,6.31],[131342,131342,8.15],[131343,131343,6.72],[131344,131344,8.15],[131345,131345,6.83],[131346,131346,7.13],[131347,131347,6.31],[131348,131348,7.13],[131349,131349,6.31],[131350,131350,7.13],[131351,131351,6.31],[131352,131352,7.13],[131353,131353,6.31],[131354,131354,7.13],[131355,131355,6.31],[131356,131356,8.35],[131357,131357,6.72],[131358,131358,8.35],[131359,131359,6.72],[131360,131360,8.35],[131361,131361,6.72],[131362,131362,8.35],[131363,131363,6.72],[131364,131364,8.15],[131365,131365,6.52],[131366,131366,8.15],[131367,131367,6.63],[131368,131368,3.24],[131369,131369,2.84],[131370,131370,3.24],[131371,131371,2.84],[131372,131372,3.24],[131373,131373,2.84],[131374,131374,3.24],[131375,131375,2.84],[131376,131376,3.24],[131377,131377,2.84],[131378,131378,9.29],[131379,131379,5.76],[131380,131380,6.12],[131381,131381,3.06],[131382,131382,7.94],[131383,131383,6.31],[131384,131384,6.21],[131385,131385,6.52],[131386,131386,2.84],[131387,131387,6.52],[131388,131388,2.84],[131389,131389,6.52],[131390,131390,4.27],[131391,131391,6.52],[131392,131392,4.51],[131393,131393,6.52],[131394,131394,2.84],[131395,131395,8.15],[131396,131396,6.52],[131397,131397,8.15],[131398,131398,6.52],[131399,131399,8.15],[131400,131400,6.52],[131401,131401,8.11],[131402,131402,8.15],[131403,131403,6.52],[131404,131404,8.56],[131405,131405,6.72],[131406,131406,8.56],[131407,131407,6.72],[131408,131408,8.56],[131409,131409,6.72],[131410,131410,12.02],[131411,131411,10.19],[131412,131412,7.94],[131413,131413,4.28],[131414,131414,7.94],[131415,131415,4.28],[131416,131416,7.94],[131417,131417,4.28],[131418,131418,7.14],[131419,131419,5.91],[131420,131420,7.14],[131421,131421,5.91],[131422,131422,7.14],[131423,131423,5.91],[131424,131424,7.14],[131425,131425,5.91],[131426,131426,6.72],[131427,131427,3.87],[131428,131428,6.72],[131429,131429,3.87],[131430,131430,6.72],[131431,131431,3.87],[131432,131432,8.15],[131433,131433,6.52],[131434,131434,8.15],[131435,131435,6.52],[131436,131436,8.15],[131437,131437,6.52],[131438,131438,8.15],[131439,131439,6.52],[131440,131440,8.15],[131441,131441,6.52],[131442,131442,8.15],[131443,131443,6.52],[131444,131444,10.38],[131445,131445,8.95],[131446,131446,7.34],[131447,131447,5.71],[131448,131448,7.34],[131449,131449,7.13],[131450,131450,5.71],[131451,131451,7.13],[131452,131452,5.71],[131453,131453,7.13],[131454,131454,5.71],[131455,131455,3.66],[131456,131456,6.72],[131457,131457,8.3],[131458,131458,7.34],[131459,131459,6.72],[131460,131460,7.27],[131461,131461,6.12],[131462,131463,7.94],[131464,131464,4.88],[131465,131465,7.94],[131466,131466,8.98],[131467,131467,7.34],[131468,131468,6.72],[131469,131469,6.35],[131470,131470,7.34],[131471,131471,8.23],[131472,131472,6.25],[131473,131473,6.72],[131474,131474,6.12],[131475,131475,8.56],[131476,131476,7.94],[131477,131477,8.6],[131478,131478,3.06],[131479,131479,4.29],[131480,131480,8.56],[131481,131481,6.12],[131482,131482,4.29],[131483,131483,6.04],[131484,131484,10.34],[131485,131485,7.94],[131486,131486,6.72],[131487,131487,8.56],[131488,131488,10.41],[131489,131489,8.74],[131490,131490,10.14],[131491,131491,8.4],[131492,131492,7.64],[131493,131493,6.12],[131494,131494,7.15],[131495,131495,7.34],[131496,131496,6.12],[131497,131497,6.54],[131498,131498,5.64],[131499,131499,3.66],[131500,131500,7.34],[131501,131501,3.66],[131502,131502,6.72],[131503,131503,10.1],[131504,131504,8.85],[131505,131505,8.52],[131506,131506,7.17],[131507,131507,8.7],[131508,131508,5.5],[131509,131509,7.13],[131510,131510,5.71],[131511,131512,6.6],[131513,131513,6.06],[131514,131514,4.98],[131515,131515,6.73],[131516,131516,5.55],[131517,131517,4.23],[131518,131518,3.66],[131519,131519,6.56],[131520,131520,3.08],[131521,131521,5.82],[131522,131522,6.29],[131523,131523,3.66],[131524,131524,13.53],[131525,131525,12.45],[131526,131526,11.66],[131527,131527,11.64],[131528,131528,9.18],[131529,131529,5.73],[131530,131530,12.74],[131531,131531,9.97],[131532,131532,8.8],[131533,131533,7.94],[131534,131534,6.12],[131535,131536,3.06],[131537,131537,8.56],[131538,131538,6.72],[131539,131539,7.94],[131540,131540,6.72],[131541,131541,7.94],[131542,131542,6.72],[131543,131543,7.94],[131544,131544,6.72],[131545,131545,7.94],[131546,131546,6.72],[131547,131547,7.94],[131548,131548,6.72],[131549,131549,6.12],[131550,131550,7.94],[131551,131551,6.12],[131552,131552,7.94],[131553,131553,6.12],[131554,131554,11],[131555,131555,9.78],[131556,131556,9.07],[131557,131557,7.56],[131558,131558,8.56],[131559,131559,6.72],[131560,131560,7.94],[131561,131561,6.12],[131562,131562,8.56],[131563,131563,6.72],[131564,131564,8.56],[131565,131565,6.72],[131566,131566,6.39],[131567,131567,5.86],[131568,131568,3.06],[131569,131569,13.82],[131570,131570,12.68],[131571,131571,11.91],[131572,131572,8.56],[131573,131573,6.72],[131574,131574,10.67],[131575,131575,7.34],[131576,131576,7.94],[131577,131577,6.72],[131578,131578,7.53],[131579,131579,6.31],[131580,131580,10.79],[131581,131581,9.98],[131582,131582,8.56],[131583,131583,6.72],[131584,131584,7.94],[131585,131585,6.12],[131586,131586,7.94],[131587,131587,6.12],[131588,131588,7.34],[131589,131589,6.12],[131590,131590,7.34],[131591,131591,6.12],[131592,131595,3.06],[131596,131596,8.56],[131597,131597,6.72],[131598,131598,8.56],[131599,131599,6.72],[131600,131600,7.94],[131601,131601,4.28],[131602,131602,7.94],[131603,131603,4.28],[131604,131604,7.94],[131605,131605,6.72],[131606,131606,7.94],[131607,131607,6.72],[131608,131608,7.14],[131609,131609,5.91],[131610,131610,6.72],[131611,131611,3.87],[131612,131613,7.3],[131614,131614,7.94],[131615,131615,6.72],[131616,131616,7.94],[131617,131617,6.12],[131618,131618,7.44],[131619,131619,5.52],[131620,131620,7.34],[131621,131621,4.88],[131622,131622,7.94],[131623,131623,6.12],[131624,131624,7.34],[131625,131625,6.12],[131626,131626,8.56],[131627,131627,6.72],[131628,131628,8.56],[131629,131629,6.72],[131630,131630,8.56],[131631,131631,6.72],[131632,131632,8.56],[131633,131633,6.72],[131634,131634,7.34],[131635,131635,6.12],[131636,131636,3.06],[131637,131637,6.12],[131638,131638,3.97],[131639,131639,3.06],[131640,131640,10.57],[131641,131641,10.59],[131642,131643,7.94],[131644,131644,6.12],[131645,131646,6.72],[131647,131647,4.28],[131648,131648,4.88],[131649,131650,6.72],[131651,131651,8.39],[131652,131652,9.15],[131653,131654,7.34],[131655,131656,6.12],[131657,131657,3.06],[131658,131658,9.06],[131659,131659,7.25],[131660,131660,8.49],[131661,131661,4.83],[131662,131662,8.44],[131663,131663,7.27],[131664,131664,6.12],[131665,131666,6.51],[131667,131667,6.72],[131668,131668,6.12],[131669,131669,4.88],[131670,131670,7.11],[131671,131671,6.72],[131672,131672,6.12],[131673,131673,6.31],[131674,131674,9.7],[131675,131676,5.55],[131677,131677,8.78],[131678,131678,5.91],[131679,131679,3.66],[131680,131681,6.72],[131682,131682,6.5],[131683,131683,5.5],[131684,131684,5.69],[131685,131686,6.72],[131687,131687,7.25],[131688,131688,4.16],[131689,131689,3.06],[131690,131690,3.67],[131691,131691,4.31],[131692,131692,3.06],[131693,131693,3.35],[131694,131694,6.68],[131695,131697,9.78],[131698,131698,6.72],[131699,131699,7.13],[131700,131700,5.82],[131701,131701,6.72],[131702,131702,10.38],[131703,131703,8.04],[131704,131704,7.94],[131705,131706,4.28],[131707,131707,5.19],[131708,131709,4.28],[131710,131711,3.06],[131712,131713,5.86],[131714,131714,4.28],[131715,131716,4.18],[131717,131717,4.71],[131718,131718,3.51],[131719,131720,3.66],[131721,131721,8.24],[131722,131722,6.35],[131723,131723,5.76],[131724,131724,6.12],[131725,131725,8.56],[131726,131726,6.12],[131727,131727,5.49],[131728,131728,4.88],[131729,131729,5.65],[131730,131730,6.06],[131731,131731,5.04],[131732,131734,6.72],[131735,131735,5.72],[131736,131736,8.56],[131737,131737,5.94],[131738,131738,5.91],[131739,131739,6.5],[131740,131740,7.11],[131741,131741,3.66],[131742,131742,6.12],[131743,131743,5.84],[131744,131746,6.72],[131747,131747,11],[131748,131748,11.18],[131749,131749,10.23],[131750,131750,8.66],[131751,131751,6.68],[131752,131752,7.78],[131753,131753,9.2],[131754,131754,7.56],[131755,131755,7.34],[131756,131756,4.87],[131757,131757,6.47],[131758,131759,6.72],[131760,131761,3.37],[131762,131762,1.53],[131763,131764,2.14],[131765,131765,2.6],[131766,131766,4.16],[131767,131767,4.28],[131768,131768,3.06],[131769,131769,3.66],[131770,131770,6.71],[131771,131773,3.06],[131774,131775,2.25],[131776,131777,3.37],[131778,131781,3.21],[131782,131783,2.85],[131784,131784,3.66],[131785,131785,2.85],[131786,131791,3.66],[131792,131793,2.29],[131794,131795,2.25],[131796,131798,3.21],[131799,131799,3.66],[131800,131805,2.85],[131806,131806,4.55],[131807,131807,3.21],[131808,131808,3.06],[131809,131809,1.53],[131810,131811,3.06],[131812,131812,3.37],[131813,131813,5.22],[131814,131816,5.17],[131817,131817,5.22],[131818,131818,3.26],[131819,131819,3.24],[131820,131821,3.66],[131822,131822,5.5],[131823,131826,3.21],[131827,131838,3.66],[131839,131839,6.54],[131840,131951,0],[131952,131952,4.67],[131953,131953,3.68],[131954,131954,6.93],[131955,131955,5.83],[131956,131957,3.06],[131958,131958,8.03],[131959,131959,6.52],[131960,131961,5.5],[131962,131962,1.53],[131963,131965,6.12],[131966,131966,3.06],[131967,131967,3.66],[131968,131971,5.5],[131972,131972,2.65],[131973,131973,5.63],[131974,131974,7.94],[131975,131975,3.06],[131976,131976,9.28],[131977,131977,10.31],[131978,131978,5.4],[131979,131979,5.5],[131980,131980,10.21],[131981,131981,5.5],[131982,131982,10.16],[131983,131983,10.22],[131984,131984,3.08],[131985,131985,7.53],[131986,131986,7.74],[131987,131987,6.28],[131988,131988,7.49],[131989,131990,7.13],[131991,131991,8.15],[131992,131992,8.56],[131993,131993,3.24],[131994,131994,7.94],[131995,131995,7.31],[131996,131996,9.98],[131997,131997,8.15],[131998,131998,6.85],[131999,131999,8.56],[132000,132000,8.28],[132001,132001,7.34],[132002,132002,5.5],[132003,132003,7.13],[132004,132004,6.72],[132005,132005,7.34],[132006,132006,8.96],[132007,132007,7.34],[132008,132008,9.25],[132009,132009,8.5],[132010,132010,3.26],[132011,132011,7.23],[132012,132012,6.8],[132013,132013,5.66],[132014,132014,6.52],[132015,132015,3],[132016,132016,6.25],[132017,132017,6.8],[132018,132018,6.47],[132019,132019,5.59],[132020,132020,6.51],[132021,132021,5.66],[132022,132022,5.21],[132023,132023,6.52],[132024,132024,6.32],[132025,132025,3],[132026,132026,6.24],[132027,132027,6.06],[132028,132028,6.52],[132029,132029,5.83],[132030,132030,5.11],[132031,132031,6.72],[132032,132032,7.33],[132033,132033,6.57],[132034,132034,6.02],[132035,132035,6.58],[132036,132036,5.49],[132037,132037,6.29],[132038,132038,8.29],[132039,132039,5.91],[132040,132040,7.99],[132041,132041,8.36],[132042,132042,3.08],[132043,132043,6.32],[132044,132044,6.72],[132045,132045,6.32],[132046,132046,8.36],[132047,132047,6.14],[132048,132048,5.8],[132049,132049,6.59],[132050,132050,7.94],[132051,132051,10.16],[132052,132052,7.94],[132053,132053,6.86],[132054,132054,8.04],[132055,132055,6.38],[132056,132056,8.56],[132057,132057,5.5],[132058,132058,7.94],[132059,132059,4.64],[132060,132060,6.72],[132061,132061,6.01],[132062,132062,6.55],[132063,132063,5.07],[132064,132064,8.27],[132065,132065,6.1],[132066,132066,9.57],[132067,132067,9.16],[132068,132068,7.98],[132069,132069,6.45],[132070,132070,8.14],[132071,132071,4.88],[132072,132072,6.88],[132073,132073,6.45],[132074,132074,7.5],[132075,132075,6.66],[132076,132076,7.97],[132077,132077,5.67],[132078,132078,5.94],[132079,132079,4.95],[132080,132080,6.38],[132081,132081,5.5],[132082,132082,6.12],[132083,132083,2.83],[132084,132084,8.56],[132085,132086,5.6],[132087,132087,7.34],[132088,132088,6.72],[132089,132089,7.94],[132090,132090,9.16],[132091,132091,8.5],[132092,132092,7.26],[132093,132095,7.94],[132096,132097,7.13],[132098,132098,8.84],[132099,132099,6.31],[132100,132100,8.1],[132101,132101,7.14],[132102,132103,3.24],[132104,132104,6.12],[132105,132105,12.38],[132106,132106,12.35],[132107,132107,8.84],[132108,132108,7.94],[132109,132109,8.19],[132110,132110,7.12],[132111,132111,8.05],[132112,132112,7.53],[132113,132113,7.72],[132114,132114,7.74],[132115,132115,6.31],[132116,132116,8.49],[132117,132117,7.13],[132118,132118,11.67],[132119,132119,7.12],[132120,132121,8.19],[132122,132122,7.94],[132123,132123,8.17],[132124,132124,9.98],[132125,132125,8.15],[132126,132126,8.56],[132127,132127,8.05],[132128,132128,7.34],[132129,132129,8.15],[132130,132130,6.72],[132131,132131,7.12],[132132,132132,10.15],[132133,132133,7.34],[132134,132134,8.27],[132135,132135,7.48],[132136,132136,11.45],[132137,132137,11.67],[132138,132138,8.95],[132139,132139,10.22],[132140,132140,7.45],[132141,132141,8.12],[132142,132142,11.25],[132143,132143,7.97],[132144,132144,6.31],[132145,132145,6.68],[132146,132146,6.39],[132147,132147,4.98],[132148,132148,6.86],[132149,132149,6.31],[132150,132150,8.93],[132151,132151,5.96],[132152,132153,6.6],[132154,132154,6.31],[132155,132155,6.59],[132156,132156,8.12],[132157,132157,6.52],[132158,132158,6.72],[132159,132159,6.41],[132160,132160,6.72],[132161,132161,6.31],[132162,132162,5.52],[132163,132163,5.71],[132164,132164,9.42],[132165,132165,5.91],[132166,132166,6.63],[132167,132167,6.31],[132168,132168,9.01],[132169,132169,9.17],[132170,132170,7.11],[132171,132171,8.56],[132172,132172,6.03],[132173,132173,6.34],[132174,132174,9.18],[132175,132175,6.36],[132176,132177,6.31],[132178,132178,6.74],[132179,132179,4.98],[132180,132180,6.34],[132181,132181,5.91],[132182,132182,2.84],[132183,132183,3.3],[132184,132184,3.06],[132185,132185,9.87],[132186,132186,9.8],[132187,132187,6.74],[132188,132188,6.31],[132189,132189,6.6],[132190,132190,5.71],[132191,132191,6.41],[132192,132192,13.76],[132193,132193,6.81],[132194,132194,8.29],[132195,132195,6.47],[132196,132196,11.19],[132197,132197,8.08],[132198,132198,7.94],[132199,132199,6.12],[132200,132200,11.05],[132201,132201,8.6],[132202,132202,10.97],[132203,132203,9.04],[132204,132204,11.74],[132205,132205,9.14],[132206,132206,5.81],[132207,132207,4.42],[132208,132208,9.17],[132209,132209,7.94],[132210,132210,8.56],[132211,132211,6.72],[132212,132212,7.37],[132213,132213,5.94],[132214,132214,8.14],[132215,132215,6.72],[132216,132216,14.67],[132217,132217,12.84],[132218,132218,9.06],[132219,132219,6.44],[132220,132220,13.6],[132221,132221,8.88],[132222,132222,13.76],[132223,132223,6.81],[132224,132224,7.94],[132225,132225,4.88],[132226,132226,3.72],[132227,132233,0],[132234,132234,8.56],[132235,132235,6.34],[132236,132236,8.29],[132237,132237,6.47],[132238,132238,6.72],[132239,132239,6.12],[132240,132240,6.31],[132241,132241,4.98],[132242,132242,6.9],[132243,132243,5.44],[132244,132244,7.94],[132245,132245,6.34],[132246,132246,11.9],[132247,132247,9.15],[132248,132248,7.12],[132249,132249,5.96],[132250,132250,8.17],[132251,132251,6.45],[132252,132252,8.27],[132253,132253,6.76],[132254,132254,7.98],[132255,132255,6.34],[132256,132256,9.45],[132257,132257,7.39],[132258,132258,8.37],[132259,132259,6.71],[132260,132260,11.16],[132261,132261,8.7],[132262,132262,12.26],[132263,132263,9.28],[132264,132264,8.02],[132265,132265,5.87],[132266,132266,8.15],[132267,132267,6.31],[132268,132268,6.83],[132269,132269,5.6],[132270,132270,7.34],[132271,132271,5.71],[132272,132272,7.34],[132273,132273,5.71],[132274,132274,7.57],[132275,132275,6.08],[132276,132276,10.11],[132277,132277,7.24],[132278,132278,7.69],[132279,132279,6.5],[132280,132280,7.48],[132281,132281,6.31],[132282,132282,7.42],[132283,132283,6.52],[132284,132284,10.17],[132285,132285,8.21],[132286,132286,10.17],[132287,132287,8.21],[132288,132288,3.24],[132289,132289,11.67],[132290,132290,8.93],[132291,132291,8.11],[132292,132292,6.53],[132293,132293,8.2],[132294,132294,6.17],[132295,132295,8.07],[132296,132296,6.21],[132297,132297,8.56],[132298,132298,6.34],[132299,132299,8.07],[132300,132300,6.2],[132301,132301,10.38],[132302,132302,7.49],[132303,132303,3.06],[132304,132304,7.53],[132305,132305,6.31],[132306,132306,7.53],[132307,132307,6.31],[132308,132308,10.79],[132309,132309,9.98],[132310,132310,7.13],[132311,132311,6.31],[132312,132312,8.23],[132313,132313,6.31],[132314,132314,8.26],[132315,132315,6.12],[132316,132316,11.67],[132317,132317,8.93],[132318,132318,7.12],[132319,132319,5.96],[132320,132320,6.6],[132321,132321,6.06],[132322,132322,8.19],[132323,132323,6.6],[132324,132324,8.19],[132325,132325,6.6],[132326,132326,8.56],[132327,132327,6.72],[132328,132328,8.56],[132329,132329,6.72],[132330,132330,8.71],[132331,132331,6.21],[132332,132332,8.07],[132333,132333,5.6],[132334,132334,7.12],[132335,132335,5.71],[132336,132336,7.12],[132337,132337,5.71],[132338,132338,7.12],[132339,132339,5.71],[132340,132340,7.42],[132341,132341,6.31],[132342,132342,6.67],[132343,132343,4.8],[132344,132344,10.22],[132345,132345,8.56],[132346,132346,7],[132347,132347,5],[132348,132348,7.94],[132349,132349,5.5],[132350,132350,7.46],[132351,132351,5.6],[132352,132352,6.02],[132353,132353,5.5],[132354,132354,9.37],[132355,132355,8.59],[132356,132356,8.77],[132357,132357,7.46],[132358,132358,6.54],[132359,132359,5.06],[132360,132360,10.29],[132361,132361,8.57],[132362,132362,10.67],[132363,132363,8.73],[132364,132364,8.56],[132365,132365,6.5],[132366,132366,7.87],[132367,132367,6.79],[132368,132368,7.3],[132369,132369,5.55],[132370,132370,8.17],[132371,132371,6.34],[132372,132372,8.38],[132373,132373,7.62],[132374,132374,9.13],[132375,132375,7.49],[132376,132376,11.34],[132377,132377,8.11],[132378,132378,8.56],[132379,132379,6.12],[132380,132380,11],[132381,132381,7.94],[132382,132382,7.53],[132383,132383,6.94],[132384,132384,10.79],[132385,132385,8.76],[132386,132386,12.22],[132387,132387,9.99],[132388,132388,7.77],[132389,132389,6.78],[132390,132390,7.56],[132391,132391,6.92],[132392,132392,4.88],[132393,132393,4.43],[132394,132394,9.8],[132395,132395,8.94],[132396,132396,6.18],[132397,132397,5.76],[132398,132398,7.49],[132399,132399,6.65],[132400,132400,5.5],[132401,132401,9.36],[132402,132402,7.89],[132403,132403,8.5],[132404,132404,8.58],[132405,132405,7.89],[132406,132406,7.62],[132407,132407,6.95],[132408,132408,7.89],[132409,132409,10.16],[132410,132410,8.49],[132411,132411,8],[132412,132412,4.91],[132413,132413,10.01],[132414,132414,8.1],[132415,132415,8.15],[132416,132416,6.96],[132417,132417,7.36],[132418,132418,8.58],[132419,132419,7.94],[132420,132420,8.94],[132421,132421,6.98],[132422,132422,7.39],[132423,132423,7.5],[132424,132424,8.07],[132425,132425,7.12],[132426,132426,9.43],[132427,132427,7.37],[132428,132428,9],[132429,132429,8.07],[132430,132430,8.98],[132431,132431,6.52],[132432,132432,7.42],[132433,132433,7.18],[132434,132434,6.95],[132435,132435,9.35],[132436,132436,7.18],[132437,132437,8.72],[132438,132438,8.54],[132439,132440,5.5],[132441,132442,2.57],[132443,132443,3.07],[132444,132444,3.32],[132445,132445,3.07],[132446,132446,4.85],[132447,132447,4.42],[132448,132448,5.5],[132449,132449,10.7],[132450,132450,7.05],[132451,132451,7.8],[132452,132452,7.91],[132453,132453,7.05],[132454,132454,7.08],[132455,132455,5.65],[132456,132456,7.05],[132457,132457,8.25],[132458,132458,7.38],[132459,132459,7.05],[132460,132460,3.51],[132461,132461,10.74],[132462,132462,6.96],[132463,132463,7.05],[132464,132464,6.62],[132465,132465,7.33],[132466,132466,7.19],[132467,132467,6.81],[132468,132468,7.15],[132469,132469,3.44],[132470,132470,7.01],[132471,132471,4.85],[132472,132472,7.05],[132473,132473,4.19],[132474,132474,10.7],[132475,132475,5.85],[132476,132476,7.4],[132477,132477,7.05],[132478,132478,7.15],[132479,132479,10.68],[132480,132480,7.05],[132481,132481,6.98],[132482,132482,4.36],[132483,132483,10.68],[132484,132484,6.98],[132485,132485,6.75],[132486,132486,8.22],[132487,132487,7.67],[132488,132488,5.5],[132489,132489,3.08],[132490,132490,4.74],[132491,132492,5.5],[132493,132493,8.99],[132494,132494,9],[132495,132495,8.32],[132496,132496,5.5],[132497,132541,0],[132542,132542,4],[132543,132543,0],[132544,132544,3.66],[132545,132546,0],[132547,132547,3.66],[132548,132549,0],[132550,132550,3.48],[132551,132551,0],[132552,132559,5.5],[132560,132560,5.8],[132561,132561,5.05],[132562,132562,4.03],[132563,132563,5.11],[132564,132564,5.63],[132565,132565,3.28],[132566,132566,3.49],[132567,132567,5.55],[132568,132568,5.82],[132569,132569,3.42],[132570,132570,5.03],[132571,132571,4.91],[132572,132572,4.79],[132573,132573,5.62],[132574,132574,5.87],[132575,132575,3.58],[132576,132576,3.48],[132577,132577,5.26],[132578,132578,5.58],[132579,132579,5.42],[132580,132580,5.03],[132581,132581,6.21],[132582,132582,5.66],[132583,132583,5.31],[132584,132584,5.1],[132585,132585,7.57],[132586,132586,5.7],[132587,132591,5.5],[132592,132592,6.56],[132593,132593,6.7],[132594,132594,6.83],[132595,132595,2.81],[132596,132596,5.06],[132597,132607,5.5],[132608,132608,8.15],[132609,132609,14.57],[132610,132610,8.35],[132611,132611,10.11],[132612,132612,30.71],[132613,132613,12.03],[132614,132615,7.09],[132616,132616,8.56],[132617,132618,5.78],[132619,132619,3.57],[132620,132620,3.51],[132621,132621,2.63],[132622,132622,7.22],[132623,132623,5.95],[132624,132634,0],[132635,132635,3.51],[132636,132636,0],[132637,132637,5.5],[132638,132638,4.45],[132639,132639,3.92],[132640,132640,9.66],[132641,132641,5.16],[132642,132642,2.62],[132643,132643,2.38],[132644,132644,4.96],[132645,132645,2.38],[132646,132646,7.09],[132647,132647,2.38],[132648,132648,7.14],[132649,132649,3.77],[132650,132651,7.14],[132652,132654,6.35],[132655,132656,3.77],[132657,132658,4.76],[132659,132660,9.89],[132661,132662,11.69],[132663,132664,5.76],[132665,132666,5.95],[132667,132668,7.82],[132669,132671,8.06],[132672,132672,2.18],[132673,132673,8.34],[132674,132674,6.74],[132675,132675,5.95],[132676,132676,4.96],[132677,132677,3.96],[132678,132678,5.95],[132679,132679,3.77],[132680,132680,4.96],[132681,132682,7.09],[132683,132703,0],[132704,132713,6.18],[132714,132714,5.78],[132715,132716,3.51],[132717,132717,5.78],[132718,132718,7.14],[132719,132719,6.74],[132720,132720,0],[132721,132723,2.38],[132724,132724,0],[132725,132725,2.38],[132726,132727,4.96],[132728,132728,7.09],[132729,132736,7.14],[132737,132743,6.35],[132744,132752,3.77],[132753,132761,4.76],[132762,132764,9.89],[132765,132766,11.69],[132767,132767,5.76],[132768,132768,5.95],[132769,132774,8.34],[132775,132776,6.74],[132777,132777,8.33],[132778,132778,12.71],[132779,132779,8.33],[132780,132782,5.95],[132783,132788,8.33],[132789,132792,4.96],[132793,132797,5.95],[132798,132798,5.16],[132799,132799,6.35],[132800,132803,3.77],[132804,132811,4.96],[132812,132814,7.09],[132815,132815,4.96],[132816,132817,7.09],[132818,132819,8.93],[132820,132820,2.28],[132821,132821,3.77],[132822,132828,0],[132829,132829,12.35],[132830,132830,11.93],[132831,132840,0],[132841,132841,6.6],[132842,132845,0],[132846,132846,3.77],[132847,132847,4.76],[132848,132857,6.18],[132858,132858,9.89],[132859,132859,11.69],[132860,132860,5.95],[132861,132861,5.16],[132862,132862,3.96],[132863,132863,5.16],[132864,132864,6.5],[132865,132865,3.27],[132866,132868,2.83],[132869,132869,5.88],[132870,132871,4.25],[132872,132873,4.14],[132874,132874,6.37],[132875,132875,10.15],[132876,132876,7.63],[132877,132877,8.34],[132878,132878,5.5],[132879,132879,0],[132880,132880,10.23],[132881,132881,0],[132882,132882,10.54],[132883,132884,12],[132885,132886,5.93],[132887,132887,10.23],[132888,132888,6.71],[132889,132889,3.02],[132890,132890,7.71],[132891,132892,10.99],[132893,132893,2.67],[132894,132894,13.42],[132895,132895,9.78],[132896,132896,7.22],[132897,132897,9.73],[132898,132898,7.46],[132899,132900,9.75],[132901,132901,10.48],[132902,132902,9.27],[132903,132903,8.77],[132904,132904,6.89],[132905,132905,9.17],[132906,132906,5.93],[132907,132907,10.39],[132908,132908,8.17],[132909,132909,10.54],[132910,132910,12],[132911,132911,6.54],[132912,132938,0],[132939,132940,5.5],[132941,132941,6.41],[132942,132942,9.27],[132943,132943,7.22],[132944,132950,7.14],[132951,132952,6.35],[132953,132954,3.77],[132955,132955,4.76],[132956,132956,9.89],[132957,132959,5.95],[132960,132961,8.34],[132962,132964,8.33],[132965,132966,3.96],[132967,132969,5.95],[132970,132970,4.96],[132971,132972,4.76],[132973,132973,9.89],[132974,132975,7.55],[132976,132976,11.6],[132977,132977,4.75],[132978,132978,7.55],[132979,132980,3.22],[132981,132983,8.06],[132984,132985,5.97],[132986,132987,6.42],[132988,132988,7.55],[132989,132990,11.6],[132991,132991,6.68],[132992,132992,5.82],[132993,132993,7.46],[132994,132994,8.9],[132995,132995,7.14],[132996,132996,7.83],[132997,132997,5.99],[132998,132998,6.05],[132999,132999,5.86],[133000,133000,5.92],[133001,133001,5.7],[133002,133002,4.94],[133003,133003,6.97],[133004,133004,7.14],[133005,133005,6.34],[133006,133006,5.5],[133007,133007,7.94],[133008,133008,11.21],[133009,133009,4.29],[133010,133010,6.27],[133011,133011,7.38],[133012,133012,8.01],[133013,133013,4.94],[133014,133014,6.41],[133015,133015,7.11],[133016,133016,6.8],[133017,133018,5.82],[133019,133019,6.97],[133020,133020,7.14],[133021,133023,11.21],[133024,133025,7.14],[133026,133027,5.92],[133028,133028,5.5],[133029,133029,5.57],[133030,133040,0],[133041,133041,5.2],[133042,133055,5.5],[133056,133056,5.94],[133057,133057,5.96],[133058,133058,5.99],[133059,133059,5.65],[133060,133061,5.93],[133062,133062,5.77],[133063,133064,5.96],[133065,133065,6.09],[133066,133066,2.91],[133067,133067,7.26],[133068,133068,4.81],[133069,133069,6.81],[133070,133070,6.52],[133071,133071,6.06],[133072,133072,7.09],[133073,133073,5.74],[133074,133074,7.53],[133075,133076,4.61],[133077,133077,6.2],[133078,133078,5.36],[133079,133079,4.15],[133080,133080,8.71],[133081,133081,4.3],[133082,133082,7.15],[133083,133083,7.79],[133084,133084,6.34],[133085,133085,8.06],[133086,133086,5.98],[133087,133087,6.36],[133088,133088,5.73],[133089,133089,6.34],[133090,133090,5.95],[133091,133092,5.98],[133093,133093,5.77],[133094,133094,5.73],[133095,133095,5.82],[133096,133097,4.98],[133098,133098,4.3],[133099,133107,0],[133108,133109,3.72],[133110,133110,6.09],[133111,133111,10.45],[133112,133113,5.29],[133114,133114,4.59],[133115,133119,5.5],[133120,133120,10.2],[133121,133121,8.54],[133122,133122,8.7],[133123,133123,7.24],[133124,133124,9.44],[133125,133125,10.19],[133126,133126,9.66],[133127,133127,10.39],[133128,133128,10.48],[133129,133129,12.03],[133130,133130,8.1],[133131,133131,6.68],[133132,133132,10.03],[133133,133133,8],[133134,133134,8.48],[133135,133135,9.88],[133136,133136,8.29],[133137,133137,11.79],[133138,133138,8.01],[133139,133139,7.84],[133140,133140,9.25],[133141,133141,10.31],[133142,133145,0],[133146,133146,4.45],[133147,133155,0],[133156,133156,2.52],[133157,133159,0],[133160,133160,2.72],[133161,133165,0],[133166,133167,5.5],[133168,133169,3.95],[133170,133170,6.5],[133171,133172,9.63],[133173,133173,6.37],[133174,133174,7.37],[133175,133175,14.4],[133176,133176,11.82],[133177,133178,11.7],[133179,133179,5.52],[133180,133180,6.78],[133181,133181,8.87],[133182,133182,4.67],[133183,133183,5.5],[133184,133184,5.87],[133185,133185,9.83],[133186,133186,5.25],[133187,133187,7.28],[133188,133188,9.91],[133189,133189,4.53],[133190,133190,2.74],[133191,133191,8.58],[133192,133192,7.44],[133193,133193,4.86],[133194,133194,7.38],[133195,133195,5.06],[133196,133196,10.9],[133197,133197,6.46],[133198,133198,10.92],[133199,133199,9.39],[133200,133200,7.92],[133201,133201,11.25],[133202,133202,9.48],[133203,133203,9.14],[133204,133204,10.04],[133205,133205,7.06],[133206,133206,8.39],[133207,133207,12.46],[133208,133208,5.24],[133209,133211,0],[133212,133213,5.5],[133214,133214,6.13],[133215,133279,5.5],[133280,133281,9.62],[133282,133282,7.43],[133283,133283,8.42],[133284,133284,10.14],[133285,133285,7.43],[133286,133286,6.97],[133287,133287,5.34],[133288,133289,8.34],[133290,133290,6.03],[133291,133291,4.72],[133292,133292,6.39],[133293,133293,2.63],[133294,133294,5.25],[133295,133295,12.4],[133296,133296,9.23],[133297,133297,5.16],[133298,133298,3.71],[133299,133299,6.77],[133300,133300,8.75],[133301,133301,5.5],[133302,133304,9.62],[133305,133305,3.76],[133306,133306,8.34],[133307,133307,10.18],[133308,133308,7.43],[133309,133309,6.58],[133310,133332,5.5],[133333,133333,5.78],[133334,133334,3.96],[133335,133335,4.07],[133336,133336,3.41],[133337,133337,3.27],[133338,133343,5.5],[133344,133344,5.65],[133345,133345,6.19],[133346,133346,5.5],[133347,133369,0],[133370,133370,5.5],[133371,133375,0],[133376,133378,7.26],[133379,133379,10.72],[133380,133381,8.4],[133382,133382,11.6],[133383,133384,6.06],[133385,133385,5.6],[133386,133386,8.14],[133387,133387,9.99],[133388,133388,8.11],[133389,133392,6.35],[133393,133395,11.6],[133396,133396,11.59],[133397,133397,8.78],[133398,133398,9.23],[133399,133399,6.56],[133400,133400,7.34],[133401,133401,7.19],[133402,133402,7.49],[133403,133403,7.69],[133404,133404,8.46],[133405,133405,8.79],[133406,133406,8.36],[133407,133407,5.93],[133408,133408,6.72],[133409,133409,6.29],[133410,133410,6.25],[133411,133411,8.73],[133412,133412,6.49],[133413,133413,7.78],[133414,133414,6.15],[133415,133415,7.17],[133416,133417,6.09],[133418,133418,6.51],[133419,133419,9.13],[133420,133420,6.5],[133421,133421,6.93],[133422,133422,6.69],[133423,133423,6.89],[133424,133424,4.85],[133425,133425,5.14],[133426,133426,8.11],[133427,133428,8.04],[133429,133429,6.31],[133430,133430,8.52],[133431,133431,6.59],[133432,133432,7.91],[133433,133433,5.88],[133434,133434,7.26],[133435,133435,10.46],[133436,133436,7.26],[133437,133437,5.94],[133438,133440,10.46],[133441,133448,7.26],[133449,133452,10.46],[133453,133453,7.26],[133454,133455,10.46],[133456,133456,13.44],[133457,133460,0],[133461,133463,7.26],[133464,133464,8.78],[133465,133465,9.23],[133466,133466,6.56],[133467,133467,8.46],[133468,133468,6.29],[133469,133469,6.25],[133470,133470,9.13],[133471,133471,6.89],[133472,133472,9.99],[133473,133473,8.11],[133474,133475,7.26],[133476,133476,5.96],[133477,133477,8.7],[133478,133478,5.49],[133479,133479,5.05],[133480,133480,5.49],[133481,133481,5.61],[133482,133482,5.83],[133483,133483,6.05],[133484,133484,5.72],[133485,133485,7.38],[133486,133486,5.69],[133487,133487,5.46],[133488,133488,5.86],[133489,133489,3.66],[133490,133491,8.4],[133492,133493,11.6],[133494,133495,8.4],[133496,133496,6.06],[133497,133497,8.46],[133498,133498,6.89],[133499,133499,6.56],[133500,133500,8.22],[133501,133501,5.47],[133502,133502,6.47],[133503,133503,6.5],[133504,133504,6.59],[133505,133505,7.26],[133506,133506,12.67],[133507,133507,12.45],[133508,133508,5.5],[133509,133509,10.43],[133510,133510,13.73],[133511,133511,5.68],[133512,133512,7.68],[133513,133513,7.99],[133514,133514,8.16],[133515,133515,8.74],[133516,133516,7.22],[133517,133518,5.5],[133519,133519,8.29],[133520,133520,9.39],[133521,133522,5.5],[133523,133523,7.01],[133524,133524,8.79],[133525,133525,8.11],[133526,133526,8],[133527,133527,7.56],[133528,133528,7.13],[133529,133529,7.97],[133530,133530,5.97],[133531,133531,6.84],[133532,133532,9.8],[133533,133533,9.02],[133534,133534,11.25],[133535,133535,6.15],[133536,133536,6.58],[133537,133537,7.99],[133538,133538,6.26],[133539,133539,7.31],[133540,133540,7.93],[133541,133541,7.83],[133542,133542,6.42],[133543,133543,6.83],[133544,133544,7.44],[133545,133545,5.5],[133546,133546,7.67],[133547,133547,8.9],[133548,133548,6.26],[133549,133549,8.7],[133550,133550,6.86],[133551,133551,6.53],[133552,133552,6.26],[133553,133553,5.5],[133554,133554,8.61],[133555,133557,5.5],[133558,133558,7.91],[133559,133559,6.84],[133560,133560,7.68],[133561,133561,5.57],[133562,133563,5.5],[133564,133564,7.26],[133565,133565,5.48],[133566,133566,10.56],[133567,133567,10.55],[133568,133568,10.56],[133569,133572,7.26],[133573,133574,5.5],[133575,133576,10.65],[133577,133578,5.5],[133579,133580,13.95],[133581,133581,7.26],[133582,133582,6.13],[133583,133590,5.5],[133591,133591,10.56],[133592,133595,5.5],[133596,133596,7.99],[133597,133597,6.26],[133598,133598,5.5],[133599,133599,6.53],[133600,133600,8.74],[133601,133601,7.22],[133602,133603,7.26],[133604,133605,5.5],[133606,133606,7.14],[133607,133607,5.94],[133608,133608,5.39],[133609,133609,8.37],[133610,133610,5.79],[133611,133611,7.13],[133612,133612,7.67],[133613,133613,6.59],[133614,133614,8.45],[133615,133615,7.12],[133616,133616,6.46],[133617,133617,6.26],[133618,133618,4.73],[133619,133619,7.68],[133620,133620,4.63],[133621,133621,7.55],[133622,133622,7.26],[133623,133623,3.3],[133624,133624,6.74],[133625,133625,6.65],[133626,133626,7.4],[133627,133627,3.37],[133628,133632,5.5],[133633,133634,7.45],[133635,133635,10.09],[133636,133636,5.5],[133637,133637,8.63],[133638,133638,11.4],[133639,133640,9.23],[133641,133642,6.82],[133643,133646,5.5],[133647,133647,6.37],[133648,133648,8.63],[133649,133650,5.5],[133651,133651,6.73],[133652,133652,8.63],[133653,133653,6.61],[133654,133654,6.65],[133655,133655,8.55],[133656,133656,8.43],[133657,133657,6.23],[133658,133658,6.88],[133659,133659,6.57],[133660,133660,6.79],[133661,133661,6.21],[133662,133662,6.32],[133663,133663,5.99],[133664,133664,6.67],[133665,133665,6.18],[133666,133666,6.74],[133667,133667,6.39],[133668,133668,5.82],[133669,133669,6.69],[133670,133670,6.56],[133671,133671,6.52],[133672,133672,6.7],[133673,133673,5.5],[133674,133674,6.5],[133675,133675,6.21],[133676,133676,6.75],[133677,133677,6.27],[133678,133678,6.5],[133679,133679,8.17],[133680,133680,6.18],[133681,133681,5.5],[133682,133682,7.7],[133683,133683,7.72],[133684,133684,5.5],[133685,133685,6.17],[133686,133686,6.59],[133687,133687,5.5],[133688,133688,6.5],[133689,133689,6.18],[133690,133691,5.5],[133692,133692,7.45],[133693,133693,5.5],[133694,133694,10.21],[133695,133696,10.3],[133697,133698,7.45],[133699,133702,5.5],[133703,133704,7.45],[133705,133706,5.5],[133707,133709,7.45],[133710,133712,5.5],[133713,133713,7.45],[133714,133720,5.5],[133721,133721,6.65],[133722,133722,8.55],[133723,133723,6.74],[133724,133724,6.19],[133725,133725,5.5],[133726,133726,6.21],[133727,133733,5.5],[133734,133734,6.1],[133735,133735,5.49],[133736,133736,5.74],[133737,133737,5.84],[133738,133738,6.4],[133739,133739,6.57],[133740,133740,5.71],[133741,133741,5.95],[133742,133742,6.59],[133743,133743,6.65],[133744,133745,7.45],[133746,133746,6.37],[133747,133747,6.82],[133748,133748,12.17],[133749,133749,7.45],[133750,133760,5.5],[133761,133762,7.16],[133763,133763,10.19],[133764,133764,5.5],[133765,133765,10.27],[133766,133766,13.52],[133767,133767,7.06],[133768,133768,7.12],[133769,133769,7.36],[133770,133770,10.11],[133771,133771,10.37],[133772,133772,8.16],[133773,133773,10.27],[133774,133774,5.5],[133775,133776,10.27],[133777,133777,13.52],[133778,133778,5.5],[133779,133780,13.52],[133781,133781,6.65],[133782,133782,8.9],[133783,133783,8.44],[133784,133784,7.53],[133785,133785,6.74],[133786,133786,8.12],[133787,133787,8.25],[133788,133788,7.46],[133789,133789,9.01],[133790,133790,8.39],[133791,133791,5.9],[133792,133792,7.01],[133793,133793,5.95],[133794,133794,6.65],[133795,133795,9.57],[133796,133796,6.93],[133797,133797,7.73],[133798,133798,5.64],[133799,133799,7.57],[133800,133800,6.49],[133801,133801,5.5],[133802,133802,6.62],[133803,133803,6.65],[133804,133804,9.02],[133805,133805,9.06],[133806,133806,6.97],[133807,133807,7.5],[133808,133808,5.61],[133809,133809,5.5],[133810,133810,7.88],[133811,133811,9.03],[133812,133812,5.5],[133813,133813,7.06],[133814,133814,8.57],[133815,133815,6.8],[133816,133816,8.68],[133817,133817,6.65],[133818,133819,5.5],[133820,133820,7.16],[133821,133821,5.94],[133822,133824,10.41],[133825,133829,7.16],[133830,133830,5.5],[133831,133832,7.16],[133833,133833,10.41],[133834,133834,5.5],[133835,133836,10.41],[133837,133837,7.16],[133838,133839,5.5],[133840,133840,12.3],[133841,133855,5.5],[133856,133856,10.97],[133857,133857,8.16],[133858,133859,7.16],[133860,133861,5.5],[133862,133862,5.92],[133863,133863,6.1],[133864,133864,5.58],[133865,133865,5.46],[133866,133866,6.01],[133867,133867,6.53],[133868,133868,5.79],[133869,133869,7.7],[133870,133870,5.5],[133871,133871,5.72],[133872,133872,4.6],[133873,133873,10.35],[133874,133880,5.5],[133881,133881,8.47],[133882,133888,5.5],[133889,133889,5.61],[133890,133890,9.52],[133891,133891,10.72],[133892,133892,5.5],[133893,133893,7.81],[133894,133894,10.36],[133895,133895,8.23],[133896,133896,8.33],[133897,133897,8.16],[133898,133898,8.31],[133899,133899,8.12],[133900,133900,6.24],[133901,133902,5.5],[133903,133903,7.65],[133904,133904,10.16],[133905,133906,5.5],[133907,133907,7.56],[133908,133908,10.04],[133909,133909,7.92],[133910,133910,7.99],[133911,133911,7.86],[133912,133912,7.78],[133913,133913,8.5],[133914,133914,7.34],[133915,133915,7.47],[133916,133916,7.92],[133917,133917,7.65],[133918,133918,8.05],[133919,133919,7.68],[133920,133920,8.16],[133921,133921,7.64],[133922,133922,7.58],[133923,133923,7.72],[133924,133924,7.58],[133925,133925,7.62],[133926,133926,7.58],[133927,133927,6.93],[133928,133928,7.58],[133929,133929,5.5],[133930,133930,7.78],[133931,133931,9.52],[133932,133932,7.49],[133933,133933,8.35],[133934,133934,7.78],[133935,133935,8.25],[133936,133936,7.92],[133937,133937,5.5],[133938,133938,8.68],[133939,133939,7.92],[133940,133940,5.5],[133941,133941,7.49],[133942,133942,7.94],[133943,133943,7.93],[133944,133944,7.72],[133945,133945,7.38],[133946,133947,5.5],[133948,133948,5.61],[133949,133949,4.3],[133950,133950,8.16],[133951,133951,5.61],[133952,133952,9.43],[133953,133956,5.61],[133957,133958,5.5],[133959,133960,10.95],[133961,133962,5.5],[133963,133964,13.5],[133965,133965,5.61],[133966,133973,5.5],[133974,133974,5.61],[133975,133975,8.16],[133976,133979,5.5],[133980,133980,7.64],[133981,133981,7.58],[133982,133982,5.5],[133983,133983,8.71],[133984,133984,8.15],[133985,133985,6.24],[133986,133987,5.61],[133988,133989,5.5],[133990,133999,6.29],[134000,134000,6.83],[134001,134001,6.97],[134002,134002,2.86],[134003,134003,4.77],[134004,134004,6.45],[134005,134005,5.44],[134006,134006,6.51],[134007,134007,7.28],[134008,134017,5.5],[134018,134018,6.14],[134019,134019,7.64],[134020,134020,5.5],[134021,134021,9.75],[134022,134022,11.53],[134023,134023,10.13],[134024,134024,7.03],[134025,134025,10.22],[134026,134026,12.85],[134027,134029,5.5],[134030,134031,7.83],[134032,134032,8.58],[134033,134033,5.5],[134034,134035,8.25],[134036,134036,16.87],[134037,134037,7.83],[134038,134040,5.5],[134041,134041,9.15],[134042,134042,7.19],[134043,134043,5.5],[134044,134044,8.27],[134045,134045,5.5],[134046,134046,10.5],[134047,134047,8.37],[134048,134050,5.5],[134051,134051,13.52],[134052,134052,7.63],[134053,134055,5.5],[134056,134056,7.4],[134057,134057,10.08],[134058,134058,6.58],[134059,134061,5.5],[134062,134062,7.4],[134063,134063,7.52],[134064,134064,6.05],[134065,134065,7.06],[134066,134066,8.7],[134067,134067,9.25],[134068,134068,7.4],[134069,134069,8.04],[134070,134070,9.91],[134071,134071,10.16],[134072,134072,10.81],[134073,134073,12.78],[134074,134077,5.5],[134078,134078,11.91],[134079,134079,8.41],[134080,134080,6.62],[134081,134081,10.7],[134082,134082,12.27],[134083,134085,5.5],[134086,134086,13.85],[134087,134087,12.78],[134088,134088,16.27],[134089,134089,5.5],[134090,134090,18.93],[134091,134091,17.71],[134092,134092,22.13],[134093,134093,6.14],[134094,134095,5.5],[134096,134096,9.13],[134097,134102,5.5],[134103,134103,15.06],[134104,134115,5.5],[134116,134116,2.87],[134117,134117,4.75],[134118,134118,6.03],[134119,134119,6.98],[134120,134120,7],[134121,134121,6.67],[134122,134122,6.73],[134123,134123,8.12],[134124,134124,9.04],[134125,134125,7.07],[134126,134126,9.35],[134127,134127,9.17],[134128,134128,7.8],[134129,134129,7.62],[134130,134130,8.51],[134131,134131,8.99],[134132,134132,7.83],[134133,134133,15.66],[134134,134134,8.06],[134135,134135,12.48],[134136,134136,13.77],[134137,134137,8.03],[134138,134138,11.05],[134139,134143,5.5],[134144,134144,7.26],[134145,134145,11.13],[134146,134146,14.33],[134147,134147,11.59],[134148,134148,5.5],[134149,134149,9.69],[134150,134150,9.55],[134151,134151,8.58],[134152,134152,11.84],[134153,134153,10.23],[134154,134154,14.11],[134155,134155,17.48],[134156,134156,12],[134157,134157,5.5],[134158,134159,8.96],[134160,134160,9.23],[134161,134161,5.5],[134162,134163,8.92],[134164,134164,9.18],[134165,134165,6.08],[134166,134166,10.17],[134167,134167,7],[134168,134168,12.63],[134169,134169,9.03],[134170,134171,9.38],[134172,134172,8.98],[134173,134173,14.92],[134174,134174,11.51],[134175,134175,9.35],[134176,134176,7.07],[134177,134178,9.43],[134179,134179,9.75],[134180,134180,8.96],[134181,134183,9.15],[134184,134184,8.74],[134185,134185,5.5],[134186,134187,8.88],[134188,134189,9.58],[134190,134190,12.69],[134191,134191,14.92],[134192,134192,7.07],[134193,134193,10.23],[134194,134194,8.78],[134195,134195,7.36],[134196,134196,10.23],[134197,134197,8.78],[134198,134198,6.27],[134199,134199,8.78],[134200,134200,8.82],[134201,134201,12.83],[134202,134204,5.5],[134205,134205,7.57],[134206,134206,10.93],[134207,134208,7.26],[134209,134209,11.16],[134210,134210,14.27],[134211,134211,12.34],[134212,134212,15.73],[134213,134213,5.5],[134214,134216,7.26],[134217,134217,5.5],[134218,134219,7.26],[134220,134220,10.92],[134221,134221,7.26],[134222,134228,5.5],[134229,134230,7.26],[134231,134231,5.5],[134232,134232,9.38],[134233,134233,8.98],[134234,134234,9.15],[134235,134239,5.5],[134240,134240,21.61],[134241,134241,16.2],[134242,134243,7.26],[134244,134245,5.5],[134246,134246,6.64],[134247,134247,6.78],[134248,134248,8.52],[134249,134249,5.9],[134250,134250,6.84],[134251,134251,7.72],[134252,134252,5.65],[134253,134253,5.92],[134254,134254,6.69],[134255,134255,5.65],[134256,134263,5.5],[134264,134264,6.02],[134265,134265,2.87],[134266,134266,5.47],[134267,134267,8.56],[134268,134268,7.75],[134269,134269,7.67],[134270,134270,7.61],[134271,134271,9.02],[134272,134272,6.73],[134273,134273,6.17],[134274,134274,12.86],[134275,134275,9.93],[134276,134276,5.5],[134277,134277,10.53],[134278,134278,10.33],[134279,134279,8.91],[134280,134280,11.96],[134281,134281,14.68],[134282,134282,19.25],[134283,134283,13.99],[134284,134284,10.38],[134285,134285,5.5],[134286,134287,9.39],[134288,134288,9.64],[134289,134289,5.5],[134290,134291,9.53],[134292,134292,9.54],[134293,134293,7.01],[134294,134294,10.14],[134295,134295,7.71],[134296,134296,11.85],[134297,134297,9.53],[134298,134298,9.83],[134299,134299,10.16],[134300,134300,9.53],[134301,134301,15.58],[134302,134302,12],[134303,134303,9.98],[134304,134304,7.7],[134305,134306,9.21],[134307,134307,10.66],[134308,134308,7.55],[134309,134311,9.02],[134312,134312,8.47],[134313,134313,5.5],[134314,134315,9.47],[134316,134316,9.77],[134317,134317,9.86],[134318,134318,13.47],[134319,134319,15.22],[134320,134320,7.61],[134321,134321,10.8],[134322,134322,8.98],[134323,134323,8.47],[134324,134324,5.5],[134325,134325,9.49],[134326,134326,7.68],[134327,134327,9.68],[134328,134328,8.45],[134329,134329,9.47],[134330,134331,5.5],[134332,134332,6.17],[134333,134333,5.55],[134334,134334,11.74],[134335,134335,10.34],[134336,134336,15.61],[134337,134337,10.15],[134338,134338,15.26],[134339,134339,7.72],[134340,134340,11.82],[134341,134341,5.5],[134342,134342,6.17],[134343,134343,11.44],[134344,134344,8.23],[134345,134345,5.5],[134346,134346,15.26],[134347,134347,20.53],[134348,134348,11.64],[134349,134349,10.17],[134350,134356,5.5],[134357,134357,11.44],[134358,134358,8.23],[134359,134365,5.5],[134366,134366,10.54],[134367,134367,5.5],[134368,134368,19.06],[134369,134369,15.83],[134370,134371,6.97],[134372,134373,5.5],[134374,134383,7.57],[134384,134384,5.5],[134385,134385,6.36],[134386,134386,9.81],[134387,134400,5.5],[134401,134401,0],[134402,134402,4.24],[134403,134403,3.11],[134404,134404,5.5],[134405,134405,13.63],[134406,134406,15.09],[134407,134407,9.89],[134408,134408,17.93],[134409,134409,6.99],[134410,134410,14.97],[134411,134411,8.84],[134412,134412,10.98],[134413,134413,5.5],[134414,134415,12.25],[134416,134416,18.4],[134417,134417,5.5],[134418,134418,7.31],[134419,134419,12.19],[134420,134420,15.52],[134421,134421,9.73],[134422,134422,8.79],[134423,134423,8.27],[134424,134424,13.1],[134425,134425,10.66],[134426,134426,9.12],[134427,134427,12.74],[134428,134428,8.77],[134429,134429,15.9],[134430,134430,13.83],[134431,134431,5.69],[134432,134432,6.38],[134433,134433,12.03],[134434,134434,12.39],[134435,134435,13.66],[134436,134436,9.59],[134437,134437,8.1],[134438,134438,6.11],[134439,134440,9.24],[134441,134441,10.05],[134442,134442,7.87],[134443,134443,11.29],[134444,134444,12.44],[134445,134445,6.37],[134446,134446,6.38],[134447,134447,9.7],[134448,134448,6.72],[134449,134449,6.28],[134450,134450,8.45],[134451,134451,7.15],[134452,134452,6.33],[134453,134453,8.79],[134454,134454,9.45],[134455,134455,11.04],[134456,134456,12.03],[134457,134457,12.12],[134458,134458,8.1],[134459,134460,5.5],[134461,134461,4.19],[134462,134462,11.22],[134463,134463,8.91],[134464,134464,8.82],[134465,134465,9.56],[134466,134466,9.62],[134467,134467,10.17],[134468,134468,10.22],[134469,134469,5.5],[134470,134470,12.57],[134471,134471,11.67],[134472,134472,18.51],[134473,134473,5.5],[134474,134474,17.15],[134475,134475,20.2],[134476,134476,14.63],[134477,134477,6.58],[134478,134478,1.9],[134479,134486,5.5],[134487,134487,14.63],[134488,134494,5.5],[134495,134495,15.1],[134496,134496,8.79],[134497,134497,12.11],[134498,134498,6.63],[134499,134499,7.38],[134500,134501,5.5],[134502,134502,6.38],[134503,134503,8.6],[134504,134504,8.79],[134505,134505,10.85],[134506,134506,6.8],[134507,134507,9.7],[134508,134508,13.26],[134509,134509,4.84],[134510,134510,8.79],[134511,134511,10.14],[134512,134512,9.24],[134513,134513,9.64],[134514,134514,13.14],[134515,134515,7.55],[134516,134516,8.24],[134517,134517,11.1],[134518,134520,5.5],[134521,134521,11.61],[134522,134522,14.75],[134523,134523,10.14],[134524,134524,6.8],[134525,134525,10.85],[134526,134526,9.36],[134527,134527,10.81],[134528,134529,5.5],[134530,134530,4.57],[134531,134531,3.12],[134532,134532,5.5],[134533,134533,6.63],[134534,134534,9.61],[134535,134535,10.13],[134536,134536,10.09],[134537,134537,6.52],[134538,134538,6.25],[134539,134539,6.47],[134540,134540,11.41],[134541,134541,11.21],[134542,134542,15.24],[134543,134543,8.65],[134544,134544,14.43],[134545,134545,7.36],[134546,134546,7.53],[134547,134547,12.26],[134548,134549,7.33],[134550,134550,12.48],[134551,134553,5.5],[134554,134554,8.58],[134555,134555,8.04],[134556,134556,7.32],[134557,134557,6.54],[134558,134558,7.14],[134559,134559,9.04],[134560,134560,6.75],[134561,134561,6.01],[134562,134562,5.87],[134563,134563,13.19],[134564,134564,12.24],[134565,134565,11.25],[134566,134566,7.26],[134567,134567,6.47],[134568,134568,6.79],[134569,134569,7.28],[134570,134570,6.94],[134571,134571,9.38],[134572,134572,9.04],[134573,134573,7.84],[134574,134574,6.52],[134575,134575,5.55],[134576,134576,7.14],[134577,134577,7.52],[134578,134578,5.5],[134579,134579,7.09],[134580,134580,5.87],[134581,134581,6.92],[134582,134582,7.48],[134583,134583,8.64],[134584,134584,7.27],[134585,134585,7.23],[134586,134586,6.66],[134587,134587,5.96],[134588,134588,5.5],[134589,134589,6.89],[134590,134591,5.5],[134592,134592,6.64],[134593,134593,7.67],[134594,134594,6.09],[134595,134595,6.94],[134596,134596,8.02],[134597,134597,7.44],[134598,134598,6.9],[134599,134601,5.5],[134602,134602,6.82],[134603,134606,5.5],[134607,134607,8.93],[134608,134608,9.25],[134609,134609,9.24],[134610,134611,6.17],[134612,134612,6.11],[134613,134613,5.5],[134614,134614,6.11],[134615,134615,5.5],[134616,134616,10.1],[134617,134617,11.46],[134618,134618,12.28],[134619,134619,16.61],[134620,134621,14.25],[134622,134622,16.4],[134623,134623,11.06],[134624,134641,5.5],[134642,134642,14.24],[134643,134643,5.12],[134644,134644,11.74],[134645,134655,5.5],[134656,134656,2.14],[134657,134657,6.6],[134658,134658,6.29],[134659,134659,6.26],[134660,134660,7.03],[134661,134661,6.92],[134662,134662,6.99],[134663,134663,5.24],[134664,134664,5.81],[134665,134665,6.71],[134666,134666,6.45],[134667,134667,6.5],[134668,134668,9],[134669,134669,8.96],[134670,134671,7.27],[134672,134672,5.86],[134673,134673,7.61],[134674,134674,9.37],[134675,134675,9],[134676,134676,6.94],[134677,134677,6.92],[134678,134678,6.6],[134679,134679,6.94],[134680,134680,6.07],[134681,134681,6.81],[134682,134683,7.16],[134684,134685,6.54],[134686,134686,7.39],[134687,134687,7.44],[134688,134688,7.31],[134689,134689,6.94],[134690,134690,6.72],[134691,134691,5.26],[134692,134692,6.58],[134693,134693,6.41],[134694,134694,7.31],[134695,134695,5.62],[134696,134696,6.87],[134697,134697,7.12],[134698,134698,6.56],[134699,134699,6.95],[134700,134700,7.39],[134701,134701,6.36],[134702,134702,6.33],[134703,134703,6.76],[134704,134704,4.8],[134705,134705,5.59],[134706,134706,5.57],[134707,134707,11.26],[134708,134714,5.59],[134715,134718,5.5],[134719,134719,8.02],[134720,134720,3.47],[134721,134721,6.38],[134722,134722,5.52],[134723,134723,5.99],[134724,134724,4.64],[134725,134725,5.68],[134726,134726,6.66],[134727,134734,5.59],[134735,134735,8.05],[134736,134736,6.43],[134737,134737,6.76],[134738,134738,7.21],[134739,134739,7.46],[134740,134740,6.77],[134741,134741,6.63],[134742,134742,6.37],[134743,134743,8.39],[134744,134744,6.82],[134745,134745,7.35],[134746,134746,8.53],[134747,134747,14.01],[134748,134784,5.5],[134785,134785,6.8],[134786,134786,5.95],[134787,134787,5.5],[134788,134788,6.24],[134789,134790,5.5],[134791,134791,5.62],[134792,134792,6.12],[134793,134793,5.5],[134794,134794,6.04],[134795,134796,5.5],[134797,134797,6.24],[134798,134803,5.5],[134804,134804,6.41],[134805,134805,6.62],[134806,134806,6.85],[134807,134807,7.05],[134808,134808,5.5],[134809,134809,6.75],[134810,134810,5.8],[134811,134811,5.84],[134812,134812,7.42],[134813,134813,7.34],[134814,134814,7.32],[134815,134815,7.36],[134816,134816,5.5],[134817,134817,6.8],[134818,134818,6.15],[134819,134819,5.95],[134820,134820,5.5],[134821,134821,6.11],[134822,134822,5.5],[134823,134823,5.89],[134824,134825,5.5],[134826,134826,6.11],[134827,134827,8.45],[134828,134828,5.5],[134829,134829,6.11],[134830,134830,6.06],[134831,134831,5.81],[134832,134832,5.65],[134833,134833,0],[134834,134834,4.73],[134835,134841,0],[134842,134842,5.5],[134843,134844,0],[134845,134845,5],[134846,134847,5.5],[134848,134848,3.75],[134849,134849,6.5],[134850,134850,3.71],[134851,134851,3.74],[134852,134852,3.66],[134853,134853,5.5],[134854,134854,6.46],[134855,134855,5.5],[134856,134859,0],[134860,134860,3.58],[134861,134861,0],[134862,134863,5.5],[134864,134864,6.14],[134865,134865,5.59],[134866,134866,5.48],[134867,134867,6.33],[134868,134868,5.62],[134869,134869,5.8],[134870,134870,6.85],[134871,134871,6.91],[134872,134872,7.32],[134873,134873,6.9],[134874,134875,5.5],[134876,134877,11.01],[134878,134911,5.5],[134912,134912,6.85],[134913,134913,5.43],[134914,134915,8.46],[134916,134916,12.73],[134917,134917,6.57],[134918,134918,12.73],[134919,134919,16.49],[134920,134920,4.23],[134921,134921,6.35],[134922,134922,7.09],[134923,134924,1.76],[134925,134925,2.69],[134926,134926,5.04],[134927,134928,2.69],[134929,134929,2.89],[134930,134930,11.57],[134931,134931,6.55],[134932,134932,3.95],[134933,134933,7.13],[134934,134934,5.19],[134935,134935,8.28],[134936,134937,0],[134938,134938,3.22],[134939,134940,5.53],[134941,134941,3.35],[134942,134942,5.48],[134943,134943,5.84],[134944,134945,3.75],[134946,134946,5.97],[134947,134947,5.68],[134948,134948,7.61],[134949,134949,5.48],[134950,134951,6.26],[134952,134952,5.2],[134953,134953,5.58],[134954,134954,5.6],[134955,134955,5.97],[134956,134956,5.68],[134957,134957,7.61],[134958,134958,5.48],[134959,134960,6.26],[134961,134961,5.55],[134962,134962,5.58],[134963,134963,5.47],[134964,134964,5.78],[134965,134965,0],[134966,134966,5.47],[134967,134967,0],[134968,134968,6.02],[134969,134969,0],[134970,134970,14.96],[134971,134971,14.63],[134972,134972,5.37],[134973,134973,5.41],[134974,134974,3.14],[134975,134975,4.71],[134976,134978,5.68],[134979,134979,5.58],[134980,134980,5.2],[134981,134981,5.88],[134982,134982,5.68],[134983,134983,5.2],[134984,134984,5.5],[134985,134985,5.1],[134986,134988,5.2],[134989,134989,5.58],[134990,134993,5.2],[134994,134994,5.58],[134995,134995,5.2],[134996,134998,5.68],[134999,134999,5.58],[135000,135000,5.68],[135001,135001,5.88],[135002,135002,5.68],[135003,135003,5.2],[135004,135004,5.58],[135005,135006,5.2],[135007,135007,5.39],[135008,135008,5.2],[135009,135009,6.16],[135010,135010,5.39],[135011,135011,5.88],[135012,135014,5.68],[135015,135015,5.2],[135016,135016,6.65],[135017,135017,5.58],[135018,135018,5.39],[135019,135019,5.76],[135020,135020,5.83],[135021,135024,5.5],[135025,135025,5.98],[135026,135026,0],[135027,135027,5.98],[135028,135028,6.08],[135029,135029,12.06],[135030,135030,5.58],[135031,135031,11.56],[135032,135032,5.58],[135033,135033,11.56],[135034,135038,0],[135039,135039,5.08],[135040,135040,0],[135041,135041,5.98],[135042,135044,0],[135045,135045,5.67],[135046,135048,0],[135049,135049,5.78],[135050,135050,5.24],[135051,135051,5.75],[135052,135055,5.5],[135056,135063,5.58],[135064,135064,5.5],[135065,135100,5.58],[135101,135101,5.5],[135102,135102,5.62],[135103,135103,5.64],[135104,135104,6.38],[135105,135105,4.32],[135106,135106,5.46],[135107,135107,6.43],[135108,135108,4.55],[135109,135109,3.6],[135110,135110,0],[135111,135111,7.1],[135112,135112,3.91],[135113,135113,6.09],[135114,135114,6.56],[135115,135115,6.37],[135116,135116,6.78],[135117,135117,5.5],[135118,135118,6.04],[135119,135119,5.48],[135120,135120,22.69],[135121,135121,5.23],[135122,135122,2.31],[135123,135123,12.68],[135124,135124,5.35],[135125,135125,7.02],[135126,135126,7.22],[135127,135127,6.7],[135128,135128,6.98],[135129,135167,5.5],[135168,135168,12.21],[135169,135169,7.69],[135170,135170,7.58],[135171,135171,12.22],[135172,135172,7.27],[135173,135173,7.68],[135174,135174,12.23],[135175,135175,7.68],[135176,135176,10.06],[135177,135177,7.26],[135178,135178,11.96],[135179,135179,7.47],[135180,135180,7.26],[135181,135181,7.47],[135182,135182,7.83],[135183,135183,14.89],[135184,135184,12.2],[135185,135185,12.21],[135186,135186,7.31],[135187,135187,7.68],[135188,135188,6.17],[135189,135189,7.68],[135190,135190,7.67],[135191,135191,7.71],[135192,135192,12.22],[135193,135193,7.67],[135194,135194,12.21],[135195,135195,7.68],[135196,135196,12.21],[135197,135197,7.68],[135198,135198,12.25],[135199,135199,12.2],[135200,135200,7.47],[135201,135201,11.15],[135202,135202,12.14],[135203,135203,11.97],[135204,135204,15.32],[135205,135206,7.29],[135207,135207,6.93],[135208,135208,8.39],[135209,135209,15.6],[135210,135210,27.4],[135211,135211,10.02],[135212,135212,11.02],[135213,135216,6.53],[135217,135217,13.49],[135218,135223,6.53],[135224,135224,10.75],[135225,135226,6.53],[135227,135227,9.94],[135228,135228,10.17],[135229,135230,6.53],[135231,135231,16.77],[135232,135232,7.31],[135233,135233,6.88],[135234,135234,8.01],[135235,135236,6.88],[135237,135238,8.39],[135239,135239,7.14],[135240,135240,7.31],[135241,135241,8.39],[135242,135242,3.35],[135243,135243,5.79],[135244,135244,7.47],[135245,135245,11.15],[135246,135246,7.26],[135247,135247,14.2],[135248,135248,7.58],[135249,135249,7.67],[135250,135250,7.66],[135251,135251,7.49],[135252,135252,6.95],[135253,135253,7.3],[135254,135254,10.67],[135255,135255,10.89],[135256,135257,6.53],[135258,135258,6.88],[135259,135259,10.06],[135260,135260,7.53],[135261,135261,7.31],[135262,135264,6.53],[135265,135265,8.12],[135266,135266,10.26],[135267,135267,13.79],[135268,135268,11.2],[135269,135269,7.68],[135270,135270,7.31],[135271,135271,11.43],[135272,135272,10.94],[135273,135273,11.57],[135274,135276,11.53],[135277,135277,11.57],[135278,135278,14.87],[135279,135279,12.01],[135280,135280,11.85],[135281,135284,6.53],[135285,135285,7.73],[135286,135286,7.7],[135287,135287,7.69],[135288,135289,12.22],[135290,135290,11.79],[135291,135291,12.23],[135292,135292,12.12],[135293,135293,12.09],[135294,135294,11.44],[135295,135295,7.68],[135296,135296,12.18],[135297,135297,7.31],[135298,135298,6.53],[135299,135299,10.26],[135300,135300,13.18],[135301,135302,6.53],[135303,135303,10.99],[135304,135305,10.77],[135306,135306,11.54],[135307,135307,10.77],[135308,135308,14.54],[135309,135309,6.53],[135310,135310,7.68],[135311,135311,10.77],[135312,135312,8.39],[135313,135313,7.11],[135314,135314,7.61],[135315,135315,8.07],[135316,135316,8.24],[135317,135317,8.19],[135318,135318,8.05],[135319,135319,6.1],[135320,135321,7.31],[135322,135322,10.77],[135323,135323,10.99],[135324,135324,11.54],[135325,135325,6.53],[135326,135326,4.41],[135327,135327,11.14],[135328,135328,7.28],[135329,135329,7.44],[135330,135330,7.79],[135331,135331,7.65],[135332,135332,6.7],[135333,135333,8.69],[135334,135334,7.3],[135335,135335,8.64],[135336,135336,6.16],[135337,135337,6.97],[135338,135338,8.6],[135339,135339,7.71],[135340,135340,6.92],[135341,135341,7.5],[135342,135342,7.76],[135343,135343,7.61],[135344,135344,8.07],[135345,135345,6.77],[135346,135346,6.51],[135347,135347,7.48],[135348,135348,7.47],[135349,135349,7.76],[135350,135350,7.07],[135351,135352,6.85],[135353,135353,6.92],[135354,135354,6.96],[135355,135355,8.47],[135356,135356,6.51],[135357,135357,7.28],[135358,135358,6.92],[135359,135359,7.39],[135360,135360,8.08],[135361,135361,6.34],[135362,135362,6.67],[135363,135363,6.65],[135364,135364,7.43],[135365,135365,8.71],[135366,135375,5.5],[135376,135376,6.06],[135377,135377,6.51],[135378,135378,6.26],[135379,135379,9.42],[135380,135380,6.26],[135381,135381,6.21],[135382,135382,7.4],[135383,135383,9.49],[135384,135384,6.26],[135385,135385,6.17],[135386,135386,11.25],[135387,135388,6.62],[135389,135389,8.44],[135390,135390,6.3],[135391,135391,6.47],[135392,135392,8.45],[135393,135393,6.41],[135394,135394,7.78],[135395,135395,6.53],[135396,135396,9.04],[135397,135397,6.38],[135398,135398,8.45],[135399,135399,6.37],[135400,135400,6.71],[135401,135401,6.48],[135402,135402,7.01],[135403,135403,6.6],[135404,135404,6.71],[135405,135405,7.01],[135406,135406,6.61],[135407,135407,6.15],[135408,135408,6.2],[135409,135409,7.01],[135410,135410,6.18],[135411,135411,6.25],[135412,135412,6.26],[135413,135413,6.9],[135414,135414,8.37],[135415,135415,6.37],[135416,135416,6.35],[135417,135417,6.3],[135418,135418,6.01],[135419,135419,6.49],[135420,135420,4.29],[135421,135421,6.75],[135422,135422,6.18],[135423,135423,6.45],[135424,135442,9.51],[135443,135518,11],[135519,135520,0],[135521,135541,9.51],[135542,135581,11],[135582,135582,9.51],[135583,135585,11],[135586,135586,9.51],[135587,135591,11],[135592,135618,9.51],[135619,135673,11],[135674,135679,5.5],[135680,135680,8.1],[135681,135681,10.63],[135682,135682,7.52],[135683,135683,7.72],[135684,135684,7.64],[135685,135685,8.59],[135686,135686,10.52],[135687,135687,12.84],[135688,135688,7.6],[135689,135689,9.95],[135690,135690,9.75],[135691,135691,7.6],[135692,135692,10.03],[135693,135693,9.06],[135694,135694,12.57],[135695,135695,10.16],[135696,135696,11.99],[135697,135697,14.37],[135698,135698,14.34],[135699,135699,11.99],[135700,135700,14.21],[135701,135701,11.99],[135702,135702,12.05],[135703,135703,14.44],[135704,135704,12.57],[135705,135705,15.69],[135706,135706,13.23],[135707,135707,12.57],[135708,135708,13.24],[135709,135710,12.57],[135711,135711,13.37],[135712,135712,11.34],[135713,135713,14.2],[135714,135714,11.62],[135715,135715,11.34],[135716,135716,11.68],[135717,135717,12.71],[135718,135718,11.04],[135719,135719,11.76],[135720,135720,7.17],[135721,135721,8.47],[135722,135722,8.02],[135723,135723,10.61],[135724,135724,9.55],[135725,135725,7.27],[135726,135726,9.69],[135727,135727,10.61],[135728,135728,7.86],[135729,135729,10.33],[135730,135730,10.26],[135731,135731,7.86],[135732,135732,10.12],[135733,135734,7.86],[135735,135735,10.37],[135736,135736,9.24],[135737,135737,10.95],[135738,135738,10.88],[135739,135739,9.24],[135740,135740,10.74],[135741,135741,9.85],[135742,135742,9.24],[135743,135743,10.98],[135744,135751,9.96],[135752,135752,11.66],[135753,135753,5.5],[135754,135754,14.85],[135755,135756,9.96],[135757,135757,14.85],[135758,135759,5.5],[135760,135764,10.28],[135765,135765,11.74],[135766,135766,10.28],[135767,135767,5.5],[135768,135768,11.83],[135769,135769,5.5],[135770,135770,15.01],[135771,135772,10.28],[135773,135773,13.09],[135774,135775,5.5],[135776,135776,8.28],[135777,135777,10.55],[135778,135778,10.48],[135779,135779,8.29],[135780,135780,10.34],[135781,135781,10.87],[135782,135782,8.28],[135783,135783,10.58],[135784,135784,9.24],[135785,135785,10.95],[135786,135786,10.88],[135787,135787,9.24],[135788,135788,10.74],[135789,135789,11.31],[135790,135790,9.24],[135791,135791,10.98],[135792,135794,9.21],[135795,135795,9.22],[135796,135796,9.32],[135797,135800,9.21],[135801,135801,9.24],[135802,135802,9.21],[135803,135803,9.22],[135804,135804,9.21],[135805,135805,11.06],[135806,135806,9.28],[135807,135807,9.21],[135808,135808,8.31],[135809,135809,10.47],[135810,135810,9.89],[135811,135811,8.31],[135812,135812,9.63],[135813,135813,8.1],[135814,135815,12.11],[135816,135816,12.59],[135817,135817,5.5],[135818,135818,12.24],[135819,135819,9.14],[135820,135820,9.63],[135821,135821,12.24],[135822,135823,5.5],[135824,135824,6.38],[135825,135825,8.53],[135826,135826,7.95],[135827,135827,7.51],[135828,135828,7.69],[135829,135829,8.21],[135830,135830,9.35],[135831,135831,8.77],[135832,135832,9.18],[135833,135833,10.65],[135834,135834,10.07],[135835,135835,9.18],[135836,135836,9.81],[135837,135837,9.18],[135838,135838,11.39],[135839,135839,9.54],[135840,135840,7.34],[135841,135841,10.03],[135842,135842,10.01],[135843,135843,7.34],[135844,135844,9.87],[135845,135845,7.68],[135846,135846,7.34],[135847,135847,9.45],[135848,135848,8.41],[135849,135849,10.89],[135850,135850,10.81],[135851,135851,8.41],[135852,135852,10.68],[135853,135854,8.41],[135855,135855,10.52],[135856,135856,13.33],[135857,135857,5.5],[135858,135858,12.65],[135859,135859,10.19],[135860,135860,10.68],[135861,135861,12.65],[135862,135863,5.5],[135864,135864,10.59],[135865,135865,13.07],[135866,135866,12.99],[135867,135867,10.59],[135868,135868,12.85],[135869,135870,10.59],[135871,135871,5.5],[135872,135872,15.5],[135873,135873,5.5],[135874,135874,14.83],[135875,135875,13.09],[135876,135876,12.85],[135877,135877,14.83],[135878,135879,5.5],[135880,135880,10.72],[135881,135881,13.2],[135882,135884,10.72],[135885,135885,13.63],[135886,135886,10.72],[135887,135887,13.81],[135888,135888,7.82],[135889,135889,10.52],[135890,135890,10.22],[135891,135891,7.62],[135892,135892,10.15],[135893,135893,7.61],[135894,135894,8.05],[135895,135895,5.5],[135896,135896,8.67],[135897,135897,10.78],[135898,135898,10.79],[135899,135899,8.67],[135900,135900,10.66],[135901,135901,10.56],[135902,135902,8.67],[135903,135903,10.91],[135904,135908,13.2],[135909,135909,14.88],[135910,135911,13.2],[135912,135912,6.88],[135913,135913,8.66],[135914,135914,10.22],[135915,135915,7.09],[135916,135916,11.27],[135917,135917,8.19],[135918,135918,9.74],[135919,135919,12.25],[135920,135920,9.06],[135921,135921,12.22],[135922,135922,11.44],[135923,135923,8.85],[135924,135924,11.05],[135925,135925,10],[135926,135926,9.84],[135927,135927,11.42],[135928,135928,9.01],[135929,135929,11.89],[135930,135930,11.11],[135931,135931,8.51],[135932,135932,11],[135933,135933,10.65],[135934,135934,9.84],[135935,135935,11.09],[135936,135936,9.33],[135937,135937,12.5],[135938,135938,11.71],[135939,135939,9.12],[135940,135940,11.61],[135941,135941,10.98],[135942,135942,9.92],[135943,135943,11.69],[135944,135944,6.92],[135945,135945,9.93],[135946,135946,7.34],[135947,135947,7.51],[135948,135948,7.2],[135949,135949,9.54],[135950,135950,6.92],[135951,135951,8.43],[135952,135952,12.37],[135953,135953,5.5],[135954,135954,11.7],[135955,135955,7.4],[135956,135956,8.71],[135957,135957,11.7],[135958,135959,5.5],[135960,135960,8.97],[135961,135961,10.9],[135962,135964,8.97],[135965,135965,10.44],[135966,135966,9.28],[135967,135967,8.97],[135968,135968,13.2],[135969,135969,15.52],[135970,135970,15.5],[135971,135971,13.15],[135972,135972,15.36],[135973,135973,12.73],[135974,135974,13.2],[135975,135975,15.54],[135976,135976,16.17],[135977,135977,16.58],[135978,135978,16.51],[135979,135979,16.17],[135980,135980,19.93],[135981,135981,15.73],[135982,135982,15.95],[135983,135983,16.61],[135984,135984,7.94],[135985,135985,10.57],[135986,135986,10.34],[135987,135987,7.81],[135988,135988,10.21],[135989,135989,10.16],[135990,135990,8],[135991,135991,10.32],[135992,135992,8.21],[135993,135993,10.73],[135994,135994,10.5],[135995,135995,7.98],[135996,135996,10.37],[135997,135997,10.36],[135998,135998,8.27],[135999,135999,10.37],[136000,136000,7.82],[136001,136001,10.52],[136002,136002,7.95],[136003,136003,7.03],[136004,136004,8.01],[136005,136005,7.61],[136006,136006,8.04],[136007,136007,9.81],[136008,136008,10.23],[136009,136009,10.43],[136010,136010,10.88],[136011,136011,10.43],[136012,136012,12.06],[136013,136013,10.1],[136014,136014,10.26],[136015,136015,10.1],[136016,136016,9.21],[136017,136017,9.24],[136018,136018,9.21],[136019,136019,9.22],[136020,136021,9.21],[136022,136022,9.31],[136023,136023,9.21],[136024,136024,9.72],[136025,136025,13.28],[136026,136026,11.15],[136027,136030,5.5],[136031,136031,8.74],[136032,136032,10.57],[136033,136033,3.63],[136034,136034,7.35],[136035,136037,4.37],[136038,136038,6.35],[136039,136039,3.63],[136040,136040,11.07],[136041,136041,6.48],[136042,136042,5.89],[136043,136043,6.47],[136044,136044,6.43],[136045,136045,7.79],[136046,136046,7.29],[136047,136047,7.48],[136048,136048,7.91],[136049,136049,6.7],[136050,136050,5.01],[136051,136051,8.8],[136052,136052,8.74],[136053,136053,10.15],[136054,136054,6.43],[136055,136055,7.91],[136056,136056,9.39],[136057,136057,10.44],[136058,136058,6.62],[136059,136059,6.81],[136060,136060,12.71],[136061,136063,5.5],[136064,136064,18.01],[136065,136065,17.02],[136066,136066,13.24],[136067,136067,17.75],[136068,136068,12.89],[136069,136069,12.4],[136070,136070,10.34],[136071,136071,15.48],[136072,136073,11.75],[136074,136074,12.85],[136075,136075,15.04],[136076,136076,11.59],[136077,136077,11.07],[136078,136078,9.32],[136079,136079,13.04],[136080,136080,3.61],[136081,136081,6.53],[136082,136083,3.61],[136084,136084,6.53],[136085,136085,7.97],[136086,136086,5.31],[136087,136087,10.27],[136088,136088,12.08],[136089,136089,6.27],[136090,136095,5.5],[136096,136096,8.22],[136097,136097,7.64],[136098,136098,7.26],[136099,136099,10.33],[136100,136100,11.56],[136101,136101,5.15],[136102,136102,7.92],[136103,136103,9.69],[136104,136104,7.13],[136105,136105,6.81],[136106,136106,8.06],[136107,136107,6.61],[136108,136108,6.84],[136109,136109,10.61],[136110,136110,6.85],[136111,136111,9.4],[136112,136112,6.21],[136113,136113,6.51],[136114,136114,11.81],[136115,136115,11.1],[136116,136116,7.03],[136117,136117,6.74],[136118,136118,8.19],[136119,136119,10.09],[136120,136120,6.71],[136121,136121,10.9],[136122,136122,11.6],[136123,136123,8.62],[136124,136124,6.93],[136125,136125,9.11],[136126,136126,8.65],[136127,136127,8.33],[136128,136128,8.35],[136129,136129,9.71],[136130,136130,6.8],[136131,136131,6.94],[136132,136132,6.71],[136133,136133,12.52],[136134,136134,6.98],[136135,136135,10.15],[136136,136136,9.77],[136137,136137,13.44],[136138,136138,10.15],[136139,136139,7.28],[136140,136140,8.37],[136141,136141,11.9],[136142,136142,7.5],[136143,136143,7.22],[136144,136144,6.66],[136145,136145,8.66],[136146,136146,7.64],[136147,136147,5.78],[136148,136148,11.12],[136149,136149,7.68],[136150,136150,9.5],[136151,136151,7.63],[136152,136152,7.62],[136153,136153,7.93],[136154,136154,7.43],[136155,136155,9.97],[136156,136156,9.86],[136157,136157,6.82],[136158,136158,6.54],[136159,136159,7.93],[136160,136160,10.04],[136161,136161,11.93],[136162,136162,7.22],[136163,136163,9.01],[136164,136164,8.97],[136165,136165,9.08],[136166,136166,7.99],[136167,136167,7.14],[136168,136168,10.37],[136169,136169,9.03],[136170,136170,11.48],[136171,136171,8.65],[136172,136172,10.13],[136173,136173,8],[136174,136174,7.36],[136175,136175,10.15],[136176,136176,8.19],[136177,136177,10.14],[136178,136178,7.17],[136179,136179,10.41],[136180,136180,7.63],[136181,136181,8.3],[136182,136183,10.15],[136184,136184,6.39],[136185,136185,7.91],[136186,136186,5.59],[136187,136187,8.12],[136188,136188,5.95],[136189,136189,6.47],[136190,136190,9.03],[136191,136191,10.15],[136192,136192,5.5],[136193,136196,9.6],[136197,136198,8.7],[136199,136199,8.69],[136200,136201,8.74],[136202,136203,8.7],[136204,136209,9.93],[136210,136210,10.47],[136211,136211,10.6],[136212,136212,10.4],[136213,136213,10.6],[136214,136214,8.74],[136215,136215,10.61],[136216,136216,10.03],[136217,136217,10.61],[136218,136218,10.07],[136219,136219,8.69],[136220,136220,8.63],[136221,136221,6.93],[136222,136222,6.17],[136223,136223,4.01],[136224,136224,4.03],[136225,136226,5.93],[136227,136227,4.35],[136228,136228,5.3],[136229,136229,6.29],[136230,136230,4.62],[136231,136231,2.36],[136232,136232,4.4],[136233,136233,5.19],[136234,136234,4.6],[136235,136235,13.44],[136236,136236,10.58],[136237,136237,11.32],[136238,136238,12.32],[136239,136239,9.62],[136240,136242,9.44],[136243,136247,8.68],[136248,136249,8.66],[136250,136250,9.8],[136251,136251,9.76],[136252,136252,9.79],[136253,136253,9.96],[136254,136254,9.79],[136255,136255,9.82],[136256,136256,9.87],[136257,136257,10.51],[136258,136258,9.87],[136259,136259,10.51],[136260,136260,10.31],[136261,136261,9.58],[136262,136262,10.59],[136263,136263,9.61],[136264,136264,8.36],[136265,136265,4.76],[136266,136266,2.19],[136267,136267,5.47],[136268,136271,9.77],[136272,136278,7.97],[136279,136279,11.77],[136280,136280,11.63],[136281,136281,11.62],[136282,136282,11.63],[136283,136283,11.62],[136284,136284,11.63],[136285,136285,9.14],[136286,136286,9.92],[136287,136287,9.14],[136288,136288,9.92],[136289,136289,9.49],[136290,136290,9.19],[136291,136291,9.49],[136292,136292,9.19],[136293,136293,9.5],[136294,136294,4.35],[136295,136296,12.25],[136297,136298,10.47],[136299,136307,7.16],[136308,136308,8.91],[136309,136309,8.73],[136310,136310,8.63],[136311,136311,9.01],[136312,136312,8.62],[136313,136313,9.01],[136314,136314,8.93],[136315,136315,8.71],[136316,136316,8.93],[136317,136317,8.71],[136318,136318,8.93],[136319,136319,8.71],[136320,136320,8.93],[136321,136321,8.71],[136322,136322,8.56],[136323,136324,5.29],[136325,136325,9.37],[136326,136326,9.49],[136327,136328,8.65],[136329,136337,7.8],[136338,136345,9.55],[136346,136346,9.42],[136347,136347,9.55],[136348,136348,9.54],[136349,136349,9.55],[136350,136350,9.54],[136351,136351,9.42],[136352,136352,9.54],[136353,136354,4.98],[136355,136355,7.07],[136356,136363,6.84],[136364,136364,8.04],[136365,136365,8.82],[136366,136366,8.53],[136367,136367,7.86],[136368,136368,8.53],[136369,136369,7.86],[136370,136370,7.81],[136371,136371,8.59],[136372,136372,7.81],[136373,136374,8.59],[136375,136375,7.86],[136376,136376,8.58],[136377,136377,7.86],[136378,136378,8.45],[136379,136379,4.26],[136380,136380,4.08],[136381,136381,4.26],[136382,136382,4.95],[136383,136383,6.66],[136384,136391,10.09],[136392,136392,9.89],[136393,136393,11.81],[136394,136394,11.84],[136395,136395,11.86],[136396,136396,9.96],[136397,136397,11.86],[136398,136398,9.96],[136399,136399,10.09],[136400,136400,6.55],[136401,136401,6.13],[136402,136402,6.72],[136403,136411,9.6],[136412,136413,11.35],[136414,136414,11.5],[136415,136415,11.35],[136416,136416,11.5],[136417,136417,11.34],[136418,136418,9.6],[136419,136419,11.35],[136420,136420,9.6],[136421,136421,11.35],[136422,136422,11.46],[136423,136423,9.47],[136424,136424,11.54],[136425,136425,9.47],[136426,136426,6.09],[136427,136427,4.9],[136428,136428,7.35],[136429,136437,6.73],[136438,136438,8.21],[136439,136439,8.46],[136440,136440,8.14],[136441,136441,7.92],[136442,136442,8.3],[136443,136443,7.92],[136444,136444,6.99],[136445,136445,8.95],[136446,136446,6.97],[136447,136447,8.95],[136448,136448,8.61],[136449,136449,8.36],[136450,136450,8.72],[136451,136451,8.36],[136452,136452,8.63],[136453,136453,4.58],[136454,136454,4.5],[136455,136455,4.58],[136456,136456,5.48],[136457,136458,4.59],[136459,136459,4.58],[136460,136460,13.2],[136461,136461,12.58],[136462,136462,11.62],[136463,136463,12.26],[136464,136466,10.73],[136467,136470,7.56],[136471,136476,12.72],[136477,136484,9.2],[136485,136485,6.93],[136486,136494,6.74],[136495,136495,8.1],[136496,136496,6.74],[136497,136497,8.48],[136498,136498,8.16],[136499,136499,8.48],[136500,136500,8.16],[136501,136501,8.43],[136502,136502,8.48],[136503,136503,8.43],[136504,136505,8.48],[136506,136506,8.64],[136507,136507,8.1],[136508,136509,8.48],[136510,136510,4.08],[136511,136511,5.45],[136512,136512,4.46],[136513,136513,4.79],[136514,136519,10.36],[136520,136525,7.19],[136526,136526,8.94],[136527,136527,8.81],[136528,136528,4.44],[136529,136529,4.9],[136530,136530,7.35],[136531,136534,9.99],[136535,136538,10.15],[136539,136539,11.68],[136540,136540,11.61],[136541,136541,6.54],[136542,136547,10.46],[136548,136551,9.17],[136552,136552,10.92],[136553,136553,10.77],[136554,136554,5.8],[136555,136556,9.77],[136557,136558,7.97],[136559,136559,6.61],[136560,136561,9.77],[136562,136563,7.96],[136564,136564,9.23],[136565,136566,9.25],[136567,136570,8.71],[136571,136571,6.87],[136572,136572,8.05],[136573,136573,4.74],[136574,136580,11.6],[136581,136581,9.64],[136582,136585,7.35],[136586,136589,9.88],[136590,136592,15.12],[136593,136594,11.61],[136595,136596,15.11],[136597,136597,7.36],[136598,136598,11.41],[136599,136602,8.29],[136603,136606,10.09],[136607,136607,6.55],[136608,136613,9.6],[136614,136614,6.09],[136615,136621,6.74],[136622,136622,4.08],[136623,136623,6.26],[136624,136627,6.91],[136628,136631,6.33],[136632,136635,9.22],[136636,136639,8.78],[136640,136643,9.22],[136644,136645,9.54],[136646,136649,8.66],[136650,136651,9.54],[136652,136655,8.66],[136656,136657,9.37],[136658,136659,8.72],[136660,136660,8.35],[136661,136661,8.72],[136662,136663,9.14],[136664,136665,8.72],[136666,136666,8.87],[136667,136667,8.72],[136668,136669,8.82],[136670,136670,7.69],[136671,136672,7.52],[136673,136673,7.69],[136674,136675,8.82],[136676,136677,7.37],[136678,136678,7.29],[136679,136679,7.37],[136680,136681,10.29],[136682,136685,8.03],[136686,136686,5.04],[136687,136688,11.61],[136689,136692,6.4],[136693,136694,11.6],[136695,136698,7.36],[136699,136700,11.53],[136701,136704,7.36],[136705,136705,5.47],[136706,136707,7.79],[136708,136711,9.95],[136712,136713,11.61],[136714,136717,6.4],[136718,136719,9.21],[136720,136723,7.75],[136724,136726,7.02],[136727,136731,10.37],[136732,136733,8.6],[136734,136737,10.25],[136738,136739,10.37],[136740,136743,7.05],[136744,136745,10.79],[136746,136749,7.12],[136750,136751,9.57],[136752,136752,6.88],[136753,136754,6.84],[136755,136755,6.88],[136756,136757,11.05],[136758,136761,6.96],[136762,136763,13.47],[136764,136767,6.65],[136768,136769,8.38],[136770,136773,7.63],[136774,136775,4.48],[136776,136777,8.38],[136778,136778,7.63],[136779,136779,7.57],[136780,136781,7.63],[136782,136783,11.83],[136784,136787,6.5],[136788,136789,11.83],[136790,136793,7.72],[136794,136794,4.14],[136795,136796,11.83],[136797,136800,8.19],[136801,136802,11.83],[136803,136804,6.5],[136805,136805,6.75],[136806,136806,6.5],[136807,136808,11.83],[136809,136809,8.19],[136810,136811,7.87],[136812,136812,8.19],[136813,136813,7.91],[136814,136814,6.03],[136815,136815,11.6],[136816,136817,19.24],[136818,136818,19.61],[136819,136820,15.74],[136821,136822,19.21],[136823,136831,5.5],[136832,136832,4.89],[136833,136833,3.31],[136834,136834,4.89],[136835,136835,6.48],[136836,136836,8.06],[136837,136837,9.65],[136838,136838,3.31],[136839,136839,4.89],[136840,136840,6.48],[136841,136841,8.06],[136842,136842,9.65],[136843,136843,3.31],[136844,136844,4.89],[136845,136845,6.48],[136846,136846,8.06],[136847,136847,9.65],[136848,136848,3.31],[136849,136849,4.89],[136850,136850,6.48],[136851,136851,8.06],[136852,136852,9.65],[136853,136853,3.31],[136854,136854,4.89],[136855,136856,6.48],[136857,136857,8.06],[136858,136858,6.48],[136859,136860,5],[136861,136863,5.5],[136864,136864,7.49],[136865,136865,7.77],[136866,136866,7.52],[136867,136867,6.59],[136868,136869,7.52],[136870,136871,5.77],[136872,136872,4.36],[136873,136874,6.48],[136875,136875,6.12],[136876,136876,5.55],[136877,136877,4.36],[136878,136878,4.42],[136879,136879,5.69],[136880,136880,5.71],[136881,136881,5.51],[136882,136882,3.67],[136883,136883,4.89],[136884,136885,6.26],[136886,136886,6.48],[136887,136887,6.45],[136888,136888,7.08],[136889,136889,4.83],[136890,136891,8.04],[136892,136892,5.64],[136893,136893,3.6],[136894,136894,5.59],[136895,136895,4.36],[136896,136896,5.59],[136897,136897,3.13],[136898,136898,3.6],[136899,136899,5.63],[136900,136900,5.36],[136901,136901,5.71],[136902,136902,4.42],[136903,136903,5.59],[136904,136904,5.05],[136905,136905,6.68],[136906,136906,4.19],[136907,136907,7.18],[136908,136908,3.13],[136909,136909,3.6],[136910,136910,5.71],[136911,136911,5.64],[136912,136912,4.43],[136913,136913,4.66],[136914,136914,5.6],[136915,136915,4.42],[136916,136916,6.05],[136917,136917,5.69],[136918,136918,8.1],[136919,136919,8.29],[136920,136920,7.28],[136921,136921,3.87],[136922,136922,4.37],[136923,136923,4.72],[136924,136924,5.84],[136925,136925,6.47],[136926,136926,8.04],[136927,136927,6.4],[136928,136928,6.96],[136929,136929,5.64],[136930,136930,6.96],[136931,136931,6.68],[136932,136932,7.55],[136933,136933,8.04],[136934,136934,7.28],[136935,136935,3.13],[136936,136936,5.71],[136937,136937,4.83],[136938,136938,8.41],[136939,136939,4.03],[136940,136940,3.05],[136941,136941,5.09],[136942,136942,5.64],[136943,136943,7.28],[136944,136944,6.62],[136945,136945,5.68],[136946,136946,6.07],[136947,136947,5.02],[136948,136948,6.08],[136949,136949,4.09],[136950,136950,5.21],[136951,136951,5.54],[136952,136952,6.23],[136953,136959,5.5],[136960,136960,11.15],[136961,136961,11.12],[136962,136962,5.88],[136963,136963,10.82],[136964,136964,9.21],[136965,136965,11.12],[136966,136966,10.72],[136967,136967,11.53],[136968,136968,9.35],[136969,136969,11.77],[136970,136970,9.36],[136971,136971,11.33],[136972,136972,11.32],[136973,136973,5.5],[136974,136974,10.04],[136975,136975,8.37],[136976,136976,10.14],[136977,136977,11.54],[136978,136980,6.53],[136981,136991,5.5],[136992,136992,9.68],[136993,136993,9.64],[136994,136994,5.73],[136995,136995,6.9],[136996,136996,8.62],[136997,136997,8.85],[136998,136998,10.56],[136999,136999,9.57],[137000,137000,10.63],[137001,137001,9.6],[137002,137002,5.71],[137003,137003,9.59],[137004,137004,9.63],[137005,137005,6.74],[137006,137006,9.81],[137007,137007,11.19],[137008,137008,10.54],[137009,137009,8.85],[137010,137012,6.53],[137013,137013,3.62],[137014,137014,5.37],[137015,137023,5.5],[137024,137025,9.11],[137026,137026,6.88],[137027,137027,6.81],[137028,137028,6.59],[137029,137029,8.85],[137030,137030,11.27],[137031,137031,8.99],[137032,137032,4.82],[137033,137033,9.11],[137034,137034,6.81],[137035,137035,8.07],[137036,137036,9.69],[137037,137037,6.74],[137038,137038,9.54],[137039,137039,8.99],[137040,137040,8.34],[137041,137041,6.31],[137042,137043,6.53],[137044,137055,5.5],[137056,137056,8.85],[137057,137057,10.1],[137058,137058,4.31],[137059,137059,6.92],[137060,137060,8.77],[137061,137061,10.39],[137062,137062,11.16],[137063,137063,8.85],[137064,137064,8.77],[137065,137065,10.1],[137066,137066,9.38],[137067,137067,10.1],[137068,137068,10.35],[137069,137069,5.5],[137070,137070,10.32],[137071,137071,9.17],[137072,137072,11.58],[137073,137073,5.5],[137074,137075,6.53],[137076,137087,5.5],[137088,137090,6.6],[137091,137091,10.45],[137092,137095,6.6],[137096,137096,14.3],[137097,137097,10.45],[137098,137100,6.6],[137101,137101,10.45],[137102,137102,14.3],[137103,137104,6.6],[137105,137105,6.84],[137106,137112,6.6],[137113,137113,10.45],[137114,137114,3.85],[137115,137115,10.45],[137116,137116,3.85],[137117,137118,6.6],[137119,137120,10.45],[137121,137121,10.69],[137122,137122,6.38],[137123,137123,6.6],[137124,137124,10.45],[137125,137125,6.6],[137126,137126,10.45],[137127,137128,6.6],[137129,137129,7.81],[137130,137130,6.82],[137131,137139,6.6],[137140,137141,0],[137142,137142,9.44],[137143,137143,6.13],[137144,137146,6.12],[137147,137149,5.25],[137150,137150,9.91],[137151,137152,11.23],[137153,137154,9.14],[137155,137155,9.36],[137156,137156,13.3],[137157,137157,13.68],[137158,137158,5.25],[137159,137159,8.74],[137160,137160,7.85],[137161,137161,5.25],[137162,137162,6.57],[137163,137164,5.25],[137165,137165,5.29],[137166,137171,5.25],[137172,137172,5.11],[137173,137173,6.82],[137174,137174,3.77],[137175,137175,5.83],[137176,137176,20.08],[137177,137177,7.12],[137178,137178,12.93],[137179,137179,4.18],[137180,137180,5.83],[137181,137181,5.25],[137182,137183,5.5],[137184,137185,5.83],[137186,137186,7.27],[137187,137187,9.68],[137188,137190,6.54],[137191,137191,7.66],[137192,137192,6.54],[137193,137193,6.21],[137194,137199,5.5],[137200,137200,4.14],[137201,137201,4.53],[137202,137202,1.76],[137203,137203,7.25],[137204,137204,4.53],[137205,137205,4.38],[137206,137206,3.13],[137207,137207,5.88],[137208,137208,3.13],[137209,137209,4.88],[137210,137215,5.5],[137216,137216,5.88],[137217,137217,11.33],[137218,137218,4.22],[137219,137219,7.02],[137220,137220,4.22],[137221,137221,6.4],[137222,137222,4.4],[137223,137223,5.88],[137224,137224,4.64],[137225,137225,7.06],[137226,137226,1.85],[137227,137230,0],[137231,137231,11],[137232,137233,6.29],[137234,137234,6.65],[137235,137235,9.63],[137236,137236,5.88],[137237,137237,7.83],[137238,137239,6.93],[137240,137240,6.2],[137241,137241,5.88],[137242,137247,11],[137248,137248,10.22],[137249,137249,9.07],[137250,137250,10.92],[137251,137252,10.25],[137253,137254,13.58],[137255,137255,13.2],[137256,137256,6.24],[137257,137257,8.12],[137258,137258,7.48],[137259,137259,7.42],[137260,137261,9.49],[137262,137263,6.24],[137264,137265,8.31],[137266,137266,8.2],[137267,137267,8.23],[137268,137268,8.44],[137269,137270,5.46],[137271,137271,7.62],[137272,137272,6.55],[137273,137273,7.48],[137274,137274,6.06],[137275,137275,6.05],[137276,137276,9.81],[137277,137277,8.96],[137278,137278,11.97],[137279,137279,9.99],[137280,137280,11.97],[137281,137281,7.05],[137282,137282,12.94],[137283,137283,2.21],[137284,137284,9.89],[137285,137285,9.96],[137286,137286,10.07],[137287,137287,12.39],[137288,137288,10.07],[137289,137289,12.39],[137290,137290,11.76],[137291,137291,10.17],[137292,137292,7.87],[137293,137294,9.47],[137295,137295,5.78],[137296,137296,7.95],[137297,137297,6.06],[137298,137298,8.64],[137299,137299,8.44],[137300,137300,7.15],[137301,137301,4.96],[137302,137302,8.24],[137303,137303,6.25],[137304,137304,6.03],[137305,137305,12.1],[137306,137306,8.13],[137307,137307,5.7],[137308,137308,8],[137309,137309,9.07],[137310,137310,10.92],[137311,137311,3.13],[137312,137312,10.25],[137313,137313,13.58],[137314,137314,10.12],[137315,137315,4.71],[137316,137316,7.62],[137317,137317,8.71],[137318,137318,7.9],[137319,137319,7.49],[137320,137320,9.15],[137321,137321,8.2],[137322,137322,5.63],[137323,137323,6.55],[137324,137325,6.06],[137326,137327,8.31],[137328,137328,4.1],[137329,137329,8.44],[137330,137330,5.63],[137331,137331,10.92],[137332,137332,6.02],[137333,137333,9.55],[137334,137334,6.16],[137335,137335,5.46],[137336,137343,11],[137344,137344,6.41],[137345,137345,8.69],[137346,137346,7.4],[137347,137348,5.31],[137349,137349,11.63],[137350,137350,10.85],[137351,137351,11.23],[137352,137352,10.92],[137353,137353,7.77],[137354,137354,10.01],[137355,137355,6.9],[137356,137356,5.61],[137357,137357,8.71],[137358,137358,6.77],[137359,137359,5.77],[137360,137360,5.98],[137361,137361,6.06],[137362,137362,7.48],[137363,137363,7.42],[137364,137364,7.2],[137365,137365,9.16],[137366,137366,8],[137367,137367,6.05],[137368,137368,6.88],[137369,137369,9.46],[137370,137370,12.85],[137371,137371,9.34],[137372,137372,8.31],[137373,137373,10.15],[137374,137374,5.72],[137375,137375,7.66],[137376,137376,6.06],[137377,137377,11.53],[137378,137378,8.31],[137379,137379,5.72],[137380,137381,8.31],[137382,137382,5.55],[137383,137383,6.13],[137384,137384,10.98],[137385,137385,0],[137386,137386,7.9],[137387,137391,11],[137392,137471,5.5],[137472,137472,7.41],[137473,137473,6.65],[137474,137474,7.71],[137475,137475,6.54],[137476,137476,6.62],[137477,137477,10.2],[137478,137478,6.9],[137479,137479,6.95],[137480,137480,7.42],[137481,137481,6.41],[137482,137482,8.55],[137483,137483,6.08],[137484,137484,7.6],[137485,137485,6.88],[137486,137486,7.48],[137487,137487,6.65],[137488,137488,8.22],[137489,137489,8.92],[137490,137490,6.76],[137491,137491,7.7],[137492,137492,7.12],[137493,137493,6.64],[137494,137494,6.88],[137495,137495,7.22],[137496,137496,7.27],[137497,137497,7],[137498,137498,5.73],[137499,137499,6.94],[137500,137500,7.25],[137501,137501,6.76],[137502,137502,6.61],[137503,137503,5.5],[137504,137506,7.93],[137507,137507,11.08],[137508,137508,14.1],[137509,137509,11.08],[137510,137510,14.1],[137511,137512,7.93],[137513,137513,11.87],[137514,137514,7.93],[137515,137515,12.44],[137516,137519,5.5],[137520,137520,13.95],[137521,137521,10.83],[137522,137522,7.93],[137523,137523,10.9],[137524,137524,13.18],[137525,137525,13.58],[137526,137526,13.46],[137527,137527,9.15],[137528,137528,11.49],[137529,137531,7.93],[137532,137535,5.5],[137536,137536,6.05],[137537,137539,5.5],[137540,137540,4.84],[137541,137541,5.28],[137542,137542,6.04],[137543,137543,5.49],[137544,137544,5.47],[137545,137545,5.07],[137546,137546,5.5],[137547,137547,5.36],[137548,137549,5.41],[137550,137550,5.47],[137551,137551,5.41],[137552,137552,5.64],[137553,137553,7.3],[137554,137554,5.9],[137555,137555,8],[137556,137556,7.24],[137557,137557,6.69],[137558,137558,9.92],[137559,137559,10.64],[137560,137560,6.26],[137561,137561,5.72],[137562,137562,9.14],[137563,137563,5.6],[137564,137564,9.14],[137565,137565,6.35],[137566,137566,9.34],[137567,137567,7.48],[137568,137568,5.59],[137569,137569,7.2],[137570,137570,5.9],[137571,137571,2.63],[137572,137572,6.04],[137573,137573,5.65],[137574,137574,6.04],[137575,137575,3.19],[137576,137576,2.72],[137577,137577,5.52],[137578,137578,6.04],[137579,137579,5.65],[137580,137580,2.3],[137581,137581,6.92],[137582,137583,5.5],[137584,137584,6.09],[137585,137585,5.75],[137586,137586,6.63],[137587,137587,6.01],[137588,137588,5.75],[137589,137599,5.5],[137600,137601,10.22],[137602,137602,9.99],[137603,137603,5.83],[137604,137604,10.05],[137605,137605,6.72],[137606,137606,6.58],[137607,137607,7.11],[137608,137608,6.36],[137609,137609,10.22],[137610,137610,6.83],[137611,137611,6.72],[137612,137612,6.58],[137613,137614,9.99],[137615,137615,6.92],[137616,137616,10.05],[137617,137617,7.06],[137618,137618,8.24],[137619,137619,6.34],[137620,137620,6.98],[137621,137621,9.16],[137622,137622,10.05],[137623,137623,9.99],[137624,137624,10.22],[137625,137625,6.72],[137626,137626,7.06],[137627,137628,10.05],[137629,137629,9.99],[137630,137630,6.09],[137631,137632,10.05],[137633,137633,5.97],[137634,137634,6.72],[137635,137635,7.46],[137636,137636,5.97],[137637,137637,6.72],[137638,137638,9.99],[137639,137639,5.95],[137640,137640,6.72],[137641,137641,6.58],[137642,137642,10.22],[137643,137643,6.58],[137644,137647,5.5],[137648,137648,7.33],[137649,137649,5.97],[137650,137650,6.64],[137651,137651,5.97],[137652,137652,6.57],[137653,137653,7.73],[137654,137654,14.3],[137655,137655,5.81],[137656,137656,5.71],[137657,137657,6.64],[137658,137658,6.19],[137659,137659,8.88],[137660,137660,9.02],[137661,137661,9],[137662,137662,7.96],[137663,137664,9.55],[137665,137665,6.09],[137666,137666,7.12],[137667,137667,6.42],[137668,137668,6.72],[137669,137669,9.99],[137670,137670,5.97],[137671,137671,6.72],[137672,137672,5.63],[137673,137673,5.74],[137674,137679,5.5],[137680,137680,6.09],[137681,137681,5.97],[137682,137682,3.95],[137683,137684,5.92],[137685,137685,8.54],[137686,137686,6.91],[137687,137687,8.54],[137688,137688,6.17],[137689,137689,6.58],[137690,137690,6.79],[137691,137693,5.5],[137694,137695,9.2],[137696,137696,7.08],[137697,137697,5.83],[137698,137698,7.27],[137699,137699,9.68],[137700,137702,6.54],[137703,137703,7.66],[137704,137704,6.54],[137705,137705,6.21],[137706,137707,13.97],[137708,137708,14.5],[137709,137709,15.84],[137710,137711,13.97],[137712,137712,6.98],[137713,137713,5.83],[137714,137714,7.27],[137715,137715,9.68],[137716,137718,6.54],[137719,137719,7.66],[137720,137720,6.54],[137721,137721,6.21],[137722,137723,13.97],[137724,137724,14.5],[137725,137725,15.84],[137726,137727,13.97],[137728,137728,7.45],[137729,137729,11.51],[137730,137730,6.65],[137731,137731,8.3],[137732,137732,11.51],[137733,137733,7.45],[137734,137734,10.39],[137735,137735,9.66],[137736,137738,10.39],[137739,137740,11.51],[137741,137741,8.62],[137742,137742,13.43],[137743,137743,14.57],[137744,137744,13.41],[137745,137745,7.58],[137746,137746,13.73],[137747,137747,13.41],[137748,137748,6.34],[137749,137749,13.38],[137750,137750,11.37],[137751,137752,6.53],[137753,137753,10.46],[137754,137754,12.47],[137755,137755,6.53],[137756,137757,5.5],[137758,137758,5.54],[137759,137759,5.92],[137760,137760,10.18],[137761,137761,5.81],[137762,137762,5.76],[137763,137763,6.53],[137764,137764,6.42],[137765,137765,11.47],[137766,137766,6.94],[137767,137767,6.55],[137768,137768,10],[137769,137770,6.12],[137771,137771,10.78],[137772,137772,10.01],[137773,137774,7.44],[137775,137775,5.77],[137776,137776,7.2],[137777,137777,12.01],[137778,137778,9.82],[137779,137779,7.72],[137780,137780,7.12],[137781,137781,7],[137782,137782,6.07],[137783,137783,6.53],[137784,137784,6.9],[137785,137785,7.7],[137786,137786,7.56],[137787,137788,7.23],[137789,137789,9.66],[137790,137790,6.53],[137791,137791,10.73],[137792,137792,6.74],[137793,137793,7.1],[137794,137794,7.25],[137795,137795,9.88],[137796,137796,5.77],[137797,137797,5.92],[137798,137798,6.53],[137799,137800,10.01],[137801,137801,9.88],[137802,137802,6.94],[137803,137803,9.73],[137804,137804,9.88],[137805,137805,7.23],[137806,137806,8.92],[137807,137808,5.77],[137809,137809,6.56],[137810,137810,11.88],[137811,137811,10.1],[137812,137812,14.25],[137813,137814,0],[137815,137815,3.12],[137816,137822,0],[137823,137823,5.5],[137824,137824,0],[137825,137825,4.93],[137826,137826,0],[137827,137827,5.4],[137828,137828,2.72],[137829,137836,0],[137837,137837,2.34],[137838,137838,5.93],[137839,137839,11.11],[137840,137841,5.93],[137842,137842,6.02],[137843,137852,0],[137853,137854,5.5],[137855,137855,0],[137856,137856,5.92],[137857,137857,5.89],[137858,137858,3.73],[137859,137860,5.83],[137861,137861,5.82],[137862,137862,5.88],[137863,137863,5.82],[137864,137864,6.14],[137865,137865,5.88],[137866,137871,5.5],[137872,137872,5.92],[137873,137873,7.28],[137874,137874,4.46],[137875,137875,9.9],[137876,137876,7.22],[137877,137877,7.12],[137878,137878,7.45],[137879,137879,7.44],[137880,137880,7.23],[137881,137881,9.88],[137882,137887,5.5],[137888,137888,7.85],[137889,137889,7.88],[137890,137890,10.79],[137891,137891,9.06],[137892,137892,7.85],[137893,137893,8.06],[137894,137894,7.19],[137895,137895,7.34],[137896,137896,3.28],[137897,137897,5.05],[137898,137898,6.59],[137899,137899,8.2],[137900,137900,13.56],[137901,137901,6.07],[137902,137983,5.5],[137984,137987,6.53],[137988,137988,11.07],[137989,137989,12.13],[137990,137990,17.05],[137991,137991,10.26],[137992,137992,15.18],[137993,137993,8.24],[137994,137994,13.16],[137995,137995,8.88],[137996,137996,13.79],[137997,137997,10.42],[137998,137998,15.33],[137999,137999,7.9],[138000,138000,12.58],[138001,138001,10.81],[138002,138002,15.73],[138003,138003,12.22],[138004,138004,12.44],[138005,138005,12.01],[138006,138006,12.85],[138007,138007,10.26],[138008,138008,8.73],[138009,138009,11.57],[138010,138010,9.67],[138011,138011,13.29],[138012,138012,16.6],[138013,138013,11.55],[138014,138014,11.12],[138015,138015,10.27],[138016,138016,8.91],[138017,138017,13.43],[138018,138018,13.24],[138019,138019,8.72],[138020,138020,11.79],[138021,138021,10.12],[138022,138022,9.39],[138023,138023,8.88],[138024,138024,8.41],[138025,138025,12.98],[138026,138026,10.17],[138027,138027,9.39],[138028,138028,10.55],[138029,138029,9.29],[138030,138030,13.45],[138031,138031,8.72],[138032,138032,12.01],[138033,138033,8.88],[138034,138034,8.89],[138035,138035,13.45],[138036,138036,6.53],[138037,138037,11.45],[138038,138042,6.53],[138043,138043,11.45],[138044,138044,6.53],[138045,138045,11.45],[138046,138047,11.85],[138048,138049,16.76],[138050,138050,6.53],[138051,138051,11.45],[138052,138052,3.83],[138053,138053,13.34],[138054,138054,19.9],[138055,138055,13.24],[138056,138056,8.88],[138057,138057,8.72],[138058,138058,8.89],[138059,138059,16.08],[138060,138063,5.5],[138064,138064,5.19],[138065,138065,13],[138066,138066,10.42],[138067,138067,10.81],[138068,138068,5.59],[138069,138069,7.19],[138070,138070,7.9],[138071,138071,12.02],[138072,138072,8.41],[138073,138073,9.92],[138074,138074,12.87],[138075,138075,14.21],[138076,138076,4.07],[138077,138077,5.04],[138078,138078,4.32],[138079,138079,7.06],[138080,138080,4.74],[138081,138081,6.12],[138082,138082,5.31],[138083,138083,4.62],[138084,138084,5.27],[138085,138085,6.69],[138086,138086,7.3],[138087,138087,10.34],[138088,138088,4.26],[138089,138089,14.33],[138090,138090,4.53],[138091,138099,6.53],[138100,138100,6.61],[138101,138101,6.28],[138102,138102,6.61],[138103,138103,6.28],[138104,138104,6.49],[138105,138105,6.86],[138106,138106,6.49],[138107,138107,6.96],[138108,138108,4.42],[138109,138111,5.5],[138112,138113,6.53],[138114,138114,10.79],[138115,138115,9.58],[138116,138116,6.17],[138117,138117,8.41],[138118,138118,10.02],[138119,138119,8.84],[138120,138120,8.74],[138121,138121,9.58],[138122,138122,8.72],[138123,138123,8.8],[138124,138124,8.81],[138125,138125,8.01],[138126,138126,8.25],[138127,138127,8.96],[138128,138128,9.12],[138129,138129,11.85],[138130,138130,9.47],[138131,138131,7.83],[138132,138132,7.93],[138133,138134,8.72],[138135,138135,7.44],[138136,138136,10.67],[138137,138137,7.6],[138138,138138,9.56],[138139,138139,5.88],[138140,138140,8.67],[138141,138141,7.52],[138142,138143,8.77],[138144,138144,8.47],[138145,138149,6.53],[138150,138151,10.66],[138152,138153,6.53],[138154,138154,9.44],[138155,138155,0],[138156,138157,6.53],[138158,138158,15.2],[138159,138159,18.12],[138160,138160,9.11],[138161,138161,8.79],[138162,138162,7.71],[138163,138163,8.41],[138164,138164,5.88],[138165,138165,9.53],[138166,138166,7.29],[138167,138167,8.16],[138168,138168,8.77],[138169,138169,8.19],[138170,138170,4],[138171,138171,7.83],[138172,138172,12.98],[138173,138173,14.7],[138174,138174,11.82],[138175,138175,8],[138176,138176,12.39],[138177,138177,12.58],[138178,138178,11.44],[138179,138179,11.62],[138180,138180,11.64],[138181,138181,11.77],[138182,138182,10.89],[138183,138183,9.24],[138184,138184,10.37],[138185,138185,10.89],[138186,138186,10.52],[138187,138187,11],[138188,138188,11.62],[138189,138189,8.67],[138190,138190,10.35],[138191,138191,11.62],[138192,138192,11.25],[138193,138193,8.92],[138194,138194,10.48],[138195,138195,10.85],[138196,138196,11.59],[138197,138197,11.97],[138198,138198,8.78],[138199,138199,11.8],[138200,138200,10.56],[138201,138202,11.62],[138203,138204,11.77],[138205,138205,8.32],[138206,138206,10.24],[138207,138207,11.62],[138208,138208,10.09],[138209,138209,11.19],[138210,138210,9.63],[138211,138211,10.89],[138212,138213,10.04],[138214,138214,6.53],[138215,138215,10.03],[138216,138217,6.53],[138218,138218,11.85],[138219,138219,10.35],[138220,138220,12.4],[138221,138225,6.53],[138226,138226,12.57],[138227,138227,11.42],[138228,138235,5.5],[138236,138236,11.77],[138237,138237,12.18],[138238,138238,9.36],[138239,138239,7.57],[138240,138240,6.62],[138241,138241,5.95],[138242,138242,7.13],[138243,138244,10.26],[138245,138245,4.72],[138246,138246,7.45],[138247,138247,7.64],[138248,138248,7.84],[138249,138249,6.71],[138250,138250,7.03],[138251,138251,7.33],[138252,138252,6.68],[138253,138253,8.03],[138254,138256,6.61],[138257,138257,6.93],[138258,138258,10.72],[138259,138259,7.19],[138260,138260,10.26],[138261,138262,8.15],[138263,138263,7.04],[138264,138264,11.33],[138265,138265,6.51],[138266,138266,5.79],[138267,138267,5.6],[138268,138268,10.72],[138269,138269,7.81],[138270,138270,6.49],[138271,138271,7.19],[138272,138272,11.11],[138273,138273,7.42],[138274,138274,11.78],[138275,138275,6.7],[138276,138276,9.42],[138277,138277,8.14],[138278,138278,9.5],[138279,138279,9.49],[138280,138280,8.37],[138281,138281,7.81],[138282,138282,8.68],[138283,138283,9.67],[138284,138291,5.61],[138292,138292,9.84],[138293,138293,7.59],[138294,138295,5.61],[138296,138298,5.5],[138299,138299,2.75],[138300,138300,4.73],[138301,138301,5.76],[138302,138302,6.2],[138303,138303,6.47],[138304,138305,5.39],[138306,138306,6.17],[138307,138307,6.34],[138308,138308,7.46],[138309,138309,7.42],[138310,138310,6.5],[138311,138311,5.18],[138312,138312,5.99],[138313,138313,5.54],[138314,138316,5.5],[138317,138318,6.2],[138319,138319,7.29],[138320,138320,6.29],[138321,138321,5.66],[138322,138322,5.64],[138323,138323,5.73],[138324,138324,5.31],[138325,138325,6.06],[138326,138326,5.57],[138327,138327,5.65],[138328,138328,7.35],[138329,138329,6.95],[138330,138330,7.14],[138331,138331,8.59],[138332,138332,7.44],[138333,138333,7.39],[138334,138334,6.42],[138335,138335,7.61],[138336,138336,6.37],[138337,138338,6.92],[138339,138339,7.2],[138340,138340,6.17],[138341,138341,6.46],[138342,138342,8.38],[138343,138343,6.42],[138344,138344,5.96],[138345,138345,5.99],[138346,138346,7.19],[138347,138347,7.46],[138348,138348,8.38],[138349,138349,7.2],[138350,138350,6.31],[138351,138351,8.01],[138352,138352,7.9],[138353,138354,6.25],[138355,138355,7.36],[138356,138356,6.92],[138357,138357,7.9],[138358,138358,7.2],[138359,138359,7.9],[138360,138362,2.95],[138363,138363,5.5],[138364,138364,3.59],[138365,138365,5.85],[138366,138366,2.95],[138367,138367,5.51],[138368,138383,5.5],[138384,138384,6.64],[138385,138385,6.84],[138386,138386,6.81],[138387,138387,9.94],[138388,138388,6.75],[138389,138389,6.67],[138390,138390,7.4],[138391,138391,10.53],[138392,138392,6.98],[138393,138393,6.53],[138394,138394,12.07],[138395,138396,6.98],[138397,138397,9.6],[138398,138398,6.56],[138399,138399,6.9],[138400,138400,8.87],[138401,138401,6.89],[138402,138402,8.45],[138403,138403,7.06],[138404,138404,9.31],[138405,138405,6.81],[138406,138406,9.16],[138407,138407,6.93],[138408,138408,7],[138409,138409,6.9],[138410,138410,7.66],[138411,138411,7.04],[138412,138412,7.02],[138413,138413,7.35],[138414,138414,7.06],[138415,138415,6.67],[138416,138416,6.63],[138417,138417,7.58],[138418,138418,6.98],[138419,138420,6.6],[138421,138421,7.16],[138422,138422,8.66],[138423,138423,6.67],[138424,138424,6.93],[138425,138425,6.81],[138426,138426,6.8],[138427,138428,5.5],[138429,138429,7.46],[138430,138430,6.98],[138431,138431,8.04],[138432,138432,11.2],[138433,138435,7.41],[138436,138436,18.48],[138437,138437,8.18],[138438,138438,12.48],[138439,138439,18.09],[138440,138457,5.5],[138458,138458,0],[138459,138484,5.5],[138485,138485,6.07],[138486,138495,5.5],[138496,138496,5.7],[138497,138497,8.27],[138498,138498,7.94],[138499,138499,5.94],[138500,138500,5.76],[138501,138502,6.35],[138503,138503,5.27],[138504,138504,5.55],[138505,138505,3.06],[138506,138506,4.38],[138507,138507,6.75],[138508,138508,5.32],[138509,138509,7.49],[138510,138510,5.82],[138511,138511,5.5],[138512,138512,5.76],[138513,138513,6.88],[138514,138514,6.86],[138515,138515,7.13],[138516,138516,10.38],[138517,138517,5.52],[138518,138519,6.72],[138520,138522,5.86],[138523,138523,5.4],[138524,138524,6.01],[138525,138525,6.81],[138526,138526,8.84],[138527,138527,6.82],[138528,138528,5.5],[138529,138529,7.94],[138530,138530,4.88],[138531,138531,4.62],[138532,138532,5.1],[138533,138533,5.98],[138534,138534,5],[138535,138535,5.35],[138536,138536,6.34],[138537,138537,5.82],[138538,138538,6.59],[138539,138539,6.17],[138540,138540,4.69],[138541,138541,6.56],[138542,138543,4.36],[138544,138544,4.73],[138545,138546,4.29],[138547,138547,5.12],[138548,138548,5.19],[138549,138549,2.6],[138550,138550,3.51],[138551,138551,5.25],[138552,138552,4.37],[138553,138553,6.3],[138554,138554,4.84],[138555,138555,5.26],[138556,138556,4.96],[138557,138557,4.32],[138558,138558,3.99],[138559,138559,4.89],[138560,138560,4.24],[138561,138561,4.82],[138562,138562,6.54],[138563,138564,4.34],[138565,138565,4.62],[138566,138566,6.94],[138567,138568,4.77],[138569,138570,4.34],[138571,138572,3.94],[138573,138573,4.77],[138574,138574,2.17],[138575,138575,4.34],[138576,138576,6.94],[138577,138578,4.77],[138579,138579,4.34],[138580,138582,4.77],[138583,138583,2.6],[138584,138584,4.77],[138585,138585,4.83],[138586,138586,6.94],[138587,138587,4.34],[138588,138588,3.54],[138589,138589,4.72],[138590,138590,4.34],[138591,138591,4.77],[138592,138592,3.93],[138593,138593,4.34],[138594,138594,2.17],[138595,138595,3.04],[138596,138596,4.77],[138597,138597,4.34],[138598,138598,4.72],[138599,138599,4.34],[138600,138600,4.77],[138601,138601,3.93],[138602,138602,4.34],[138603,138603,9.82],[138604,138604,7.11],[138605,138605,7.35],[138606,138606,4.3],[138607,138607,9.16],[138608,138608,6.12],[138609,138609,7.11],[138610,138610,4.74],[138611,138612,4.28],[138613,138613,4.29],[138614,138614,4.88],[138615,138615,5.5],[138616,138616,3.66],[138617,138617,5.71],[138618,138618,11.81],[138619,138619,3.16],[138620,138620,3.41],[138621,138621,6.12],[138622,138622,6.01],[138623,138623,6.79],[138624,138625,6.12],[138626,138626,3.66],[138627,138627,6.7],[138628,138628,6.12],[138629,138629,3.06],[138630,138630,9.16],[138631,138632,6.12],[138633,138633,4.88],[138634,138634,4.28],[138635,138635,5.03],[138636,138637,5.5],[138638,138638,4.88],[138639,138639,5.5],[138640,138640,6.32],[138641,138641,6.12],[138642,138642,4.88],[138643,138644,4.7],[138645,138645,4.88],[138646,138646,3.06],[138647,138647,4.88],[138648,138648,3.99],[138649,138649,6.12],[138650,138650,5.04],[138651,138651,3.71],[138652,138653,2.85],[138654,138654,3.15],[138655,138655,2.78],[138656,138657,2.15],[138658,138658,3.1],[138659,138659,3.58],[138660,138660,1.95],[138661,138661,2.21],[138662,138663,1.95],[138664,138664,2.52],[138665,138666,1.95],[138667,138667,3.31],[138668,138669,5.41],[138670,138671,3.58],[138672,138672,3.56],[138673,138673,3.15],[138674,138674,4.61],[138675,138675,2.39],[138676,138676,1.95],[138677,138677,2.33],[138678,138678,3.58],[138679,138679,3.92],[138680,138680,3.58],[138681,138681,3.4],[138682,138682,3.29],[138683,138684,3.08],[138685,138685,3.5],[138686,138686,3.08],[138687,138687,4.21],[138688,138703,0],[138704,138706,5.5],[138707,138713,0],[138714,138714,5.5],[138715,138726,0],[138727,138749,5.5],[138750,138751,0],[138752,138752,7.94],[138753,138753,6.12],[138754,138754,7.94],[138755,138755,6.72],[138756,138756,7.94],[138757,138757,6.72],[138758,138758,7.94],[138759,138759,6.72],[138760,138760,7.94],[138761,138761,6.12],[138762,138762,7.94],[138763,138763,6.72],[138764,138764,7.94],[138765,138765,6.72],[138766,138766,7.94],[138767,138767,6.72],[138768,138768,7.94],[138769,138769,6.72],[138770,138770,7.94],[138771,138771,6.72],[138772,138772,7.34],[138773,138773,6.12],[138774,138774,7.34],[138775,138775,6.12],[138776,138776,7.34],[138777,138777,6.12],[138778,138778,7.34],[138779,138779,6.12],[138780,138780,7.34],[138781,138781,6.12],[138782,138782,6.72],[138783,138783,3.66],[138784,138784,8.56],[138785,138785,6.72],[138786,138786,7.94],[138787,138787,6.72],[138788,138788,7.94],[138789,138789,6.72],[138790,138790,7.94],[138791,138791,6.72],[138792,138792,7.94],[138793,138793,6.72],[138794,138794,7.94],[138795,138795,6.72],[138796,138799,3.06],[138800,138800,7.94],[138801,138801,6.12],[138802,138802,7.94],[138803,138803,6.12],[138804,138804,7.94],[138805,138805,6.12],[138806,138806,6.72],[138807,138807,3.06],[138808,138808,6.72],[138809,138809,3.06],[138810,138810,6.72],[138811,138811,3.06],[138812,138812,6.72],[138813,138813,3.06],[138814,138814,9.16],[138815,138815,9.78],[138816,138816,9.16],[138817,138817,9.78],[138818,138818,9.16],[138819,138819,9.78],[138820,138820,7.94],[138821,138821,6.72],[138822,138822,7.94],[138823,138823,6.72],[138824,138824,7.94],[138825,138825,6.72],[138826,138826,7.94],[138827,138827,6.72],[138828,138828,8.56],[138829,138829,6.72],[138830,138830,8.56],[138831,138831,6.72],[138832,138832,8.56],[138833,138833,6.72],[138834,138834,8.56],[138835,138835,6.72],[138836,138836,7.34],[138837,138837,6.72],[138838,138838,7.34],[138839,138839,6.72],[138840,138840,7.94],[138841,138841,4.28],[138842,138842,7.94],[138843,138843,4.28],[138844,138844,7.94],[138845,138845,4.28],[138846,138846,7.94],[138847,138847,4.28],[138848,138848,7.34],[138849,138849,6.12],[138850,138850,7.34],[138851,138851,6.12],[138852,138852,7.34],[138853,138853,6.12],[138854,138854,7.34],[138855,138855,6.12],[138856,138856,7.34],[138857,138857,6.12],[138858,138858,6.72],[138859,138859,3.66],[138860,138860,6.72],[138861,138861,3.66],[138862,138862,6.72],[138863,138863,3.66],[138864,138864,6.72],[138865,138865,3.66],[138866,138866,7.94],[138867,138867,6.72],[138868,138868,7.94],[138869,138869,6.72],[138870,138870,7.94],[138871,138871,6.72],[138872,138872,7.94],[138873,138873,6.72],[138874,138874,7.94],[138875,138875,6.72],[138876,138876,7.34],[138877,138877,6.12],[138878,138878,7.34],[138879,138879,6.12],[138880,138880,10.38],[138881,138881,8.95],[138882,138882,10.38],[138883,138883,8.95],[138884,138884,10.38],[138885,138885,8.95],[138886,138886,10.38],[138887,138887,8.56],[138888,138888,10.38],[138889,138889,8.56],[138890,138890,7.34],[138891,138891,6.12],[138892,138892,7.34],[138893,138893,6.12],[138894,138894,7.34],[138895,138895,6.12],[138896,138896,6.72],[138897,138897,5.5],[138898,138898,6.72],[138899,138899,5.5],[138900,138900,6.72],[138901,138901,5.5],[138902,138902,6.72],[138903,138903,3.66],[138904,138904,8.56],[138905,138906,6.12],[138907,138907,3.66],[138908,138908,4.66],[138909,138909,4.65],[138910,138910,8.34],[138911,138911,6.62],[138912,138912,7.94],[138913,138913,6.12],[138914,138914,7.94],[138915,138915,6.12],[138916,138916,8.01],[138917,138917,6.76],[138918,138918,8.03],[138919,138919,6.4],[138920,138920,7.94],[138921,138921,6.26],[138922,138922,7.94],[138923,138923,6.12],[138924,138924,7.94],[138925,138925,6.12],[138926,138926,7.94],[138927,138927,6.12],[138928,138928,7.94],[138929,138929,6.12],[138930,138930,7.94],[138931,138931,6.12],[138932,138932,7.94],[138933,138933,6.12],[138934,138934,7.94],[138935,138935,6.12],[138936,138936,7.34],[138937,138937,6.12],[138938,138938,7.34],[138939,138939,6.12],[138940,138940,7.34],[138941,138941,6.12],[138942,138942,7.5],[138943,138943,6.17],[138944,138944,7.34],[138945,138945,6.37],[138946,138946,7.34],[138947,138947,6.12],[138948,138948,7.34],[138949,138949,6.12],[138950,138950,7.34],[138951,138951,6.12],[138952,138955,3.06],[138956,138956,8.56],[138957,138957,6.72],[138958,138958,8.56],[138959,138959,6.72],[138960,138960,8.56],[138961,138961,6.72],[138962,138962,8.56],[138963,138963,6.72],[138964,138964,8.56],[138965,138965,6.72],[138966,138966,8.56],[138967,138967,6.72],[138968,138968,8.56],[138969,138969,6.72],[138970,138970,10.41],[138971,138971,8.74],[138972,138972,10.41],[138973,138973,8.74],[138974,138974,10.41],[138975,138975,8.74],[138976,138976,10.41],[138977,138977,8.74],[138978,138978,10.41],[138979,138979,8.74],[138980,138980,7.94],[138981,138981,6.72],[138982,138982,7.94],[138983,138983,6.72],[138984,138984,10.1],[138985,138985,8.85],[138986,138986,10.1],[138987,138987,8.85],[138988,138988,10.1],[138989,138989,8.85],[138990,138990,10.1],[138991,138991,8.85],[138992,138992,10.1],[138993,138993,8.85],[138994,138994,7.34],[138995,138995,5.71],[138996,138996,7.34],[138997,138997,6.12],[138998,138998,7.34],[138999,138999,6.12],[139000,139000,7.34],[139001,139001,6.12],[139002,139002,10.3],[139003,139003,6.48],[139004,139004,5.57],[139005,139005,4.89],[139006,139007,5.04],[139008,139015,6.73],[139016,139016,8.47],[139017,139017,8.57],[139018,139018,11.59],[139019,139019,11.15],[139020,139020,10.38],[139021,139021,10.91],[139022,139023,10.38],[139024,139029,6.12],[139030,139031,5.5],[139032,139033,9.78],[139034,139034,12.1],[139035,139035,12.06],[139036,139036,11.8],[139037,139037,12.03],[139038,139039,5.5],[139040,139047,6.71],[139048,139049,10.38],[139050,139050,12.7],[139051,139051,12.66],[139052,139052,12.41],[139053,139053,12.64],[139054,139055,10.38],[139056,139063,3.06],[139064,139065,5.7],[139066,139066,8.02],[139067,139067,7.97],[139068,139068,7.72],[139069,139069,7.95],[139070,139071,5.7],[139072,139077,6.73],[139078,139079,5.5],[139080,139081,11],[139082,139082,13.31],[139083,139083,13.28],[139084,139084,13.02],[139085,139085,13.25],[139086,139087,5.5],[139088,139095,6.71],[139096,139096,5.5],[139097,139097,9.78],[139098,139098,5.5],[139099,139099,12.06],[139100,139100,5.5],[139101,139101,12.03],[139102,139102,5.5],[139103,139103,10.41],[139104,139111,7.94],[139112,139113,10.89],[139114,139114,13.21],[139115,139115,13.17],[139116,139116,12.91],[139117,139117,13.14],[139118,139119,10.89],[139120,139121,6.73],[139122,139123,6.12],[139124,139125,6.71],[139126,139127,3.06],[139128,139129,6.73],[139130,139131,6.71],[139132,139133,7.94],[139134,139135,5.5],[139136,139143,6.73],[139144,139144,11.82],[139145,139145,11.65],[139146,139146,14.37],[139147,139147,14.42],[139148,139148,13.86],[139149,139149,14.39],[139150,139151,13.44],[139152,139159,6.71],[139160,139161,13.44],[139162,139162,15.76],[139163,139163,15.72],[139164,139164,15.47],[139165,139165,15.7],[139166,139167,13.44],[139168,139175,7.94],[139176,139177,13.95],[139178,139178,16.27],[139179,139179,16.22],[139180,139180,15.97],[139181,139181,16.2],[139182,139183,13.95],[139184,139188,6.73],[139189,139189,5.5],[139190,139191,6.73],[139192,139193,7.94],[139194,139195,9.35],[139196,139196,10.78],[139197,139197,2.44],[139198,139198,3.82],[139199,139199,2.44],[139200,139201,2.94],[139202,139204,6.71],[139205,139205,5.5],[139206,139207,6.71],[139208,139208,10.15],[139209,139209,10.33],[139210,139210,10.83],[139211,139211,10.71],[139212,139212,11.03],[139213,139213,4.76],[139214,139214,4.47],[139215,139215,2.44],[139216,139219,3.06],[139220,139221,5.5],[139222,139223,3.06],[139224,139225,3.26],[139226,139226,5.82],[139227,139227,5.95],[139228,139228,5.5],[139229,139229,4.72],[139230,139230,4.7],[139231,139231,2.44],[139232,139235,6.71],[139236,139237,6.72],[139238,139239,6.71],[139240,139241,7.34],[139242,139242,10.52],[139243,139243,10.44],[139244,139244,9.78],[139245,139246,4.34],[139247,139247,2.94],[139248,139249,5.5],[139250,139252,7.94],[139253,139253,5.5],[139254,139255,7.94],[139256,139256,10.94],[139257,139257,11.23],[139258,139258,11.54],[139259,139259,11.82],[139260,139260,11.44],[139261,139261,2.94],[139262,139262,2.44],[139263,139264,5.5],[139265,139265,11],[139266,139266,3.06],[139267,139267,9.16],[139268,139268,3.66],[139269,139269,3.06],[139270,139270,1.84],[139271,139271,6.12],[139272,139272,1.15],[139273,139273,0.48],[139274,139274,0.16],[139275,139279,0],[139280,139280,4.48],[139281,139282,3.66],[139283,139283,5.5],[139284,139285,11],[139286,139286,5.82],[139287,139287,3.66],[139288,139291,3.06],[139292,139294,5.09],[139295,139295,5.5],[139296,139297,6.12],[139298,139298,3.85],[139299,139299,7.33],[139300,139300,3.64],[139301,139301,7.41],[139302,139302,11],[139303,139303,3.64],[139304,139311,0],[139312,139312,12.62],[139313,139313,15.65],[139314,139314,3.66],[139315,139315,6.71],[139316,139316,9.47],[139317,139317,3.66],[139318,139318,6.71],[139319,139319,9.47],[139320,139320,3.66],[139321,139322,2.65],[139323,139323,8.92],[139324,139324,7.33],[139325,139325,6.12],[139326,139326,3.66],[139327,139328,10.55],[139329,139329,6.83],[139330,139330,9.31],[139331,139331,3.66],[139332,139332,1.84],[139333,139334,3.66],[139335,139335,13.44],[139336,139337,10.38],[139338,139338,6.83],[139339,139341,6.12],[139342,139342,4.28],[139343,139343,3.66],[139344,139344,10.55],[139345,139345,4.28],[139346,139346,9.78],[139347,139347,9.64],[139348,139348,10.55],[139349,139350,8.92],[139351,139351,12.18],[139352,139353,8.92],[139354,139354,3.66],[139355,139356,8.92],[139357,139358,3.66],[139359,139359,3.06],[139360,139375,0],[139376,139376,4.29],[139377,139377,1.53],[139378,139379,5.5],[139380,139385,4.29],[139386,139386,4.4],[139387,139387,2.97],[139388,139388,4.4],[139389,139390,2.47],[139391,139401,4.29],[139402,139402,4.4],[139403,139403,2.97],[139404,139404,4.4],[139405,139406,2.47],[139407,139407,5.5],[139408,139409,3.06],[139410,139410,3.37],[139411,139412,3.06],[139413,139423,5.5],[139424,139424,6.01],[139425,139426,7.94],[139427,139427,6.12],[139428,139428,7.14],[139429,139429,9.78],[139430,139430,8.9],[139431,139431,8.45],[139432,139432,6.92],[139433,139433,11.26],[139434,139434,8.34],[139435,139435,6.72],[139436,139436,6.12],[139437,139437,8.6],[139438,139438,6.72],[139439,139439,12.29],[139440,139440,5.5],[139441,139441,8.57],[139442,139442,8.56],[139443,139443,7.94],[139444,139444,7.01],[139445,139445,7.94],[139446,139446,7.44],[139447,139447,10.33],[139448,139448,6.12],[139449,139449,6.08],[139450,139450,6.12],[139451,139451,10.82],[139452,139453,6.12],[139454,139454,8.28],[139455,139455,7.22],[139456,139471,5.5],[139472,139474,0],[139475,139475,6.6],[139476,139477,7.7],[139478,139480,0],[139481,139482,6.6],[139483,139485,0],[139486,139486,11],[139487,139487,9.51],[139488,139488,9.9],[139489,139489,0],[139490,139490,5.5],[139491,139504,0],[139505,139519,5.5],[139520,139521,9.17],[139522,139522,7.94],[139523,139523,12.34],[139524,139524,7.78],[139525,139526,9.17],[139527,139527,7.69],[139528,139528,6.98],[139529,139529,11.12],[139530,139530,11],[139531,139531,9.96],[139532,139532,9.27],[139533,139533,7.94],[139534,139534,6.34],[139535,139535,7.11],[139536,139536,7.57],[139537,139537,8.69],[139538,139538,7.79],[139539,139539,5.5],[139540,139540,8.56],[139541,139541,6.62],[139542,139542,11.73],[139543,139543,8.8],[139544,139544,9.35],[139545,139545,7.34],[139546,139546,8.56],[139547,139547,10.19],[139548,139548,9.72],[139549,139549,6.62],[139550,139550,7.51],[139551,139551,7.34],[139552,139552,8.25],[139553,139553,10.38],[139554,139554,11],[139555,139555,7.94],[139556,139556,6.62],[139557,139557,5.96],[139558,139558,8.5],[139559,139559,8.45],[139560,139560,8.3],[139561,139561,3.06],[139562,139563,7.94],[139564,139564,10.19],[139565,139565,8.5],[139566,139566,8.47],[139567,139567,4.23],[139568,139568,6.77],[139569,139569,7.57],[139570,139570,6.72],[139571,139571,12.27],[139572,139572,4.46],[139573,139573,7.21],[139574,139574,6.64],[139575,139575,5.11],[139576,139576,6.18],[139577,139577,7.26],[139578,139578,8.56],[139579,139579,11],[139580,139580,8.84],[139581,139581,7.11],[139582,139582,5.47],[139583,139583,8.45],[139584,139584,10.74],[139585,139585,8.56],[139586,139587,6.72],[139588,139588,7.34],[139589,139589,8.88],[139590,139590,7.63],[139591,139591,6.74],[139592,139592,4.52],[139593,139593,4.65],[139594,139594,7.43],[139595,139595,7.94],[139596,139596,8.91],[139597,139597,9.44],[139598,139598,4.96],[139599,139599,5.5],[139600,139602,11],[139603,139604,9.17],[139605,139610,10.45],[139611,139615,9.17],[139616,139616,3.06],[139617,139617,6.12],[139618,139618,9.16],[139619,139619,10.39],[139620,139620,7.34],[139621,139621,10.39],[139622,139622,13.45],[139623,139623,16.5],[139624,139624,10.39],[139625,139625,7.34],[139626,139626,10.39],[139627,139627,13.45],[139628,139628,6.72],[139629,139630,7.94],[139631,139631,9.16],[139632,139632,3.06],[139633,139633,6.12],[139634,139634,9.16],[139635,139635,9.17],[139636,139636,6.12],[139637,139637,9.17],[139638,139638,12.23],[139639,139639,15.29],[139640,139640,9.17],[139641,139641,6.12],[139642,139642,9.17],[139643,139643,12.23],[139644,139644,3.06],[139645,139645,6.12],[139646,139646,6.72],[139647,139647,9.78],[139648,139648,11.9],[139649,139649,8.72],[139650,139650,13.87],[139651,139651,7.94],[139652,139652,6.12],[139653,139653,7.17],[139654,139654,6.21],[139655,139656,5.5],[139657,139657,11],[139658,139663,5.5],[139664,139664,11],[139665,139665,5.5],[139666,139666,11],[139667,139667,5.5],[139668,139668,11],[139669,139669,5.5],[139670,139670,10.07],[139671,139671,11],[139672,139672,10.07],[139673,139675,11],[139676,139687,6.62],[139688,139688,5.5],[139689,139690,11],[139691,139693,6.62],[139694,139694,11],[139695,139695,6.62],[139696,139698,9.51],[139699,139699,11],[139700,139700,9.51],[139701,139701,11],[139702,139703,9.51],[139704,139705,11],[139706,139707,6.62],[139708,139708,9.51],[139709,139711,6.62],[139712,139712,9.51],[139713,139715,6.62],[139716,139718,11],[139719,139722,6.62],[139723,139724,11],[139725,139725,9.68],[139726,139726,6.62],[139727,139727,9.56],[139728,139728,11],[139729,139729,9.51],[139730,139730,11],[139731,139731,9.51],[139732,139732,11],[139733,139741,6.62],[139742,139743,7.95],[139744,139744,11],[139745,139745,7.95],[139746,139746,11],[139747,139747,7.95],[139748,139750,11],[139751,139751,12.99],[139752,139753,11],[139754,139754,12.99],[139755,139759,6.62],[139760,139760,9.51],[139761,139764,6.62],[139765,139765,11],[139766,139775,6.62],[139776,139776,6.93],[139777,139777,5.16],[139778,139778,6.16],[139779,139779,5.78],[139780,139780,5.88],[139781,139781,7.89],[139782,139782,7.55],[139783,139783,6.73],[139784,139784,6.34],[139785,139785,6.73],[139786,139786,5.6],[139787,139787,6.34],[139788,139788,6.48],[139789,139789,5.6],[139790,139790,5.74],[139791,139791,8.24],[139792,139792,9.05],[139793,139793,6.8],[139794,139794,6.6],[139795,139795,8.75],[139796,139796,6.58],[139797,139797,1.84],[139798,139798,8.84],[139799,139799,5.76],[139800,139800,3.9],[139801,139801,3.06],[139802,139802,6.21],[139803,139803,8.23],[139804,139804,7.97],[139805,139805,5.7],[139806,139806,9.05],[139807,139807,10.77],[139808,139808,6.57],[139809,139809,6.61],[139810,139810,6.66],[139811,139811,2.74],[139812,139812,5.2],[139813,139813,3.8],[139814,139814,5.78],[139815,139816,6.53],[139817,139817,7.91],[139818,139818,5.84],[139819,139819,4.59],[139820,139820,10.06],[139821,139821,12.36],[139822,139822,7.46],[139823,139823,10.16],[139824,139824,12.83],[139825,139825,6.58],[139826,139826,6.91],[139827,139827,6.57],[139828,139828,6.64],[139829,139829,6.57],[139830,139830,3.7],[139831,139831,6.33],[139832,139832,6.19],[139833,139833,6.33],[139834,139834,6.38],[139835,139835,6.16],[139836,139837,6.05],[139838,139838,5.97],[139839,139839,6.42],[139840,139840,4.29],[139841,139841,6.32],[139842,139842,6.38],[139843,139843,6.43],[139844,139844,7.38],[139845,139845,7.66],[139846,139846,6.92],[139847,139847,6.72],[139848,139849,6.6],[139850,139850,6.64],[139851,139851,7.38],[139852,139852,5.97],[139853,139853,6.63],[139854,139854,6.57],[139855,139855,6.52],[139856,139856,6.16],[139857,139857,7.02],[139858,139859,6.96],[139860,139861,8.4],[139862,139862,6.36],[139863,139863,6.55],[139864,139864,6.48],[139865,139865,6.69],[139866,139866,6.81],[139867,139867,7.11],[139868,139868,7],[139869,139869,6.19],[139870,139870,6.32],[139871,139871,6.49],[139872,139872,6.6],[139873,139874,6.27],[139875,139875,6.52],[139876,139877,6.6],[139878,139878,6.32],[139879,139879,6.2],[139880,139880,6.84],[139881,139881,6.48],[139882,139882,8.07],[139883,139883,7.71],[139884,139884,3.94],[139885,139885,6.09],[139886,139889,6.6],[139890,139890,6.2],[139891,139891,6.24],[139892,139892,6.41],[139893,139893,6.39],[139894,139895,6.66],[139896,139896,6.17],[139897,139897,6.34],[139898,139898,6.24],[139899,139899,6.36],[139900,139900,6.56],[139901,139901,6.36],[139902,139902,6.44],[139903,139903,6.4],[139904,139904,6.68],[139905,139905,6.36],[139906,139907,6.95],[139908,139908,7.08],[139909,139909,6.94],[139910,139911,7.29],[139912,139912,7.34],[139913,139913,7.14],[139914,139915,6.18],[139916,139917,6.4],[139918,139918,6.7],[139919,139920,7.19],[139921,139922,7.17],[139923,139924,6.72],[139925,139925,7.96],[139926,139926,8.2],[139927,139927,7.83],[139928,139928,7.94],[139929,139929,8.32],[139930,139930,8.09],[139931,139931,7.9],[139932,139932,8.37],[139933,139933,8.31],[139934,139934,8.62],[139935,139935,8.36],[139936,139936,8.06],[139937,139937,7.87],[139938,139941,8.26],[139942,139942,3.63],[139943,139943,3.67],[139944,139944,6.86],[139945,139945,8.02],[139946,139946,6.85],[139947,139947,8.31],[139948,139948,8.53],[139949,139949,8.56],[139950,139950,9.61],[139951,139951,9.2],[139952,139953,6.96],[139954,139955,8.15],[139956,139957,7.73],[139958,139959,8.08],[139960,139960,6.55],[139961,139961,7.51],[139962,139962,5.28],[139963,139964,7.66],[139965,139965,7.42],[139966,139966,8.16],[139967,139967,6.94],[139968,139969,7.38],[139970,139971,7.05],[139972,139972,4.19],[139973,139973,4.85],[139974,139974,4.93],[139975,139975,6.94],[139976,139976,8.5],[139977,139978,8.14],[139979,139980,7.96],[139981,139981,6.43],[139982,139983,6.98],[139984,139985,7.13],[139986,139987,6.26],[139988,139988,6.04],[139989,139989,6.75],[139990,139991,6.63],[139992,139993,10.65],[139994,139995,7.16],[139996,139997,7.11],[139998,139999,7.36],[140000,140000,7.33],[140001,140001,7.21],[140002,140002,7.55],[140003,140003,7.3],[140004,140004,7.38],[140005,140005,7.41],[140006,140006,7.44],[140007,140007,7.55],[140008,140008,7.91],[140009,140009,7.57],[140010,140010,8.23],[140011,140011,8.42],[140012,140012,8.49],[140013,140013,8.54],[140014,140014,4.52],[140015,140015,11],[140016,140016,10.12],[140017,140017,10.33],[140018,140018,7.15],[140019,140019,6.34],[140020,140020,5.6],[140021,140022,6.34],[140023,140023,5.6],[140024,140024,6.34],[140025,140025,6.95],[140026,140026,7.15],[140027,140027,6.34],[140028,140028,5.6],[140029,140029,6.34],[140030,140030,5.6],[140031,140031,5.78],[140032,140033,6.62],[140034,140034,6.6],[140035,140035,10.21],[140036,140036,6.62],[140037,140037,8.74],[140038,140038,7.53],[140039,140039,11],[140040,140047,6.62],[140048,140048,6.27],[140049,140049,6.62],[140050,140050,11],[140051,140051,6.62],[140052,140052,9.51],[140053,140053,6.62],[140054,140054,6.04],[140055,140055,7.15],[140056,140056,10.21],[140057,140057,6.62],[140058,140059,11],[140060,140063,6.62],[140064,140065,6.64],[140066,140067,9.51],[140068,140068,8.74],[140069,140069,11],[140070,140070,14.38],[140071,140071,11],[140072,140072,6.62],[140073,140074,11],[140075,140075,14.38],[140076,140084,6.04],[140085,140085,6.62],[140086,140086,10.19],[140087,140092,6.62],[140093,140093,11],[140094,140094,6.62],[140095,140095,8.01],[140096,140096,6.6],[140097,140100,6.62],[140101,140102,6.6],[140103,140105,6.62],[140106,140106,6.6],[140107,140109,6.62],[140110,140111,6.6],[140112,140112,6.62],[140113,140113,6.6],[140114,140116,6.62],[140117,140118,6.6],[140119,140124,6.62],[140125,140125,6.6],[140126,140128,6.62],[140129,140130,6.6],[140131,140133,6.62],[140134,140135,6.6],[140136,140137,6.62],[140138,140138,6.6],[140139,140144,6.62],[140145,140146,6.6],[140147,140154,6.62],[140155,140155,7.36],[140156,140156,10.3],[140157,140157,3.51],[140158,140158,10.33],[140159,140159,4.08],[140160,140163,6.62],[140164,140164,8.63],[140165,140165,7.52],[140166,140166,7.42],[140167,140168,11],[140169,140170,6.62],[140171,140171,9.81],[140172,140172,8.88],[140173,140173,8.65],[140174,140174,8.22],[140175,140179,7.24],[140180,140180,8.17],[140181,140181,6.62],[140182,140182,5.19],[140183,140184,8.67],[140185,140186,8.97],[140187,140205,11],[140206,140206,6.62],[140207,140207,3.46],[140208,140209,11],[140210,140211,16.37],[140212,140213,6.77],[140214,140214,7.96],[140215,140215,7.07],[140216,140221,5.54],[140222,140236,11],[140237,140237,10.97],[140238,140238,12.03],[140239,140239,9.43],[140240,140240,5.62],[140241,140241,5.96],[140242,140243,5.97],[140244,140245,11.34],[140246,140246,10.54],[140247,140249,10.73],[140250,140251,11],[140252,140255,6.79],[140256,140256,6.77],[140257,140257,11],[140258,140258,12.58],[140259,140259,10.01],[140260,140260,12.03],[140261,140261,11.2],[140262,140262,10.19],[140263,140263,8.78],[140264,140264,5.5],[140265,140275,11],[140276,140279,5.5],[140280,140282,11],[140283,140287,5.5],[140288,140319,11],[140320,140320,6.6],[140321,140321,11],[140322,140322,6.6],[140323,140323,6.63],[140324,140324,6.6],[140325,140325,8.71],[140326,140326,4.44],[140327,140351,5.5],[140352,140357,6.64],[140358,140361,8.25],[140362,140362,6.64],[140363,140383,5.5],[140384,140484,11],[140485,140485,9.24],[140486,140571,11],[140572,140572,7.79],[140573,140579,11],[140580,140580,7.79],[140581,140587,11],[140588,140588,7.79],[140589,140595,11],[140596,140596,7.79],[140597,140603,11],[140604,140604,7.79],[140605,140619,11],[140620,140623,6.8],[140624,140652,7.79],[140653,140660,11],[140661,140671,6.8],[140672,140672,7.79],[140673,140675,11],[140676,140676,7.79],[140677,140683,11],[140684,140684,7.79],[140685,140687,11],[140688,140690,7.79],[140691,140691,8.02],[140692,140693,11],[140694,140703,6.62],[140704,140705,6.64],[140706,140706,11],[140707,140713,9.51],[140714,140715,3.9],[140716,140716,11],[140717,140717,9.51],[140718,140720,6.62],[140721,140721,11],[140722,140722,10.89],[140723,140723,11],[140724,140724,6.96],[140725,140725,9.51],[140726,140726,9.68],[140727,140727,11],[140728,140729,5.83],[140730,140730,10.89],[140731,140731,6.62],[140732,140732,10.89],[140733,140733,11],[140734,140735,7.03],[140736,140736,11],[140737,140737,8.74],[140738,140738,6.62],[140739,140739,9.51],[140740,140740,10.89],[140741,140741,6.62],[140742,140742,7.95],[140743,140743,6.76],[140744,140744,9.51],[140745,140745,11],[140746,140746,6.6],[140747,140747,6.64],[140748,140748,6.54],[140749,140749,6.62],[140750,140750,11],[140751,140751,6.85],[140752,140755,11],[140756,140759,6.62],[140760,140761,6.64],[140762,140769,6.62],[140770,140773,11],[140774,140774,3.9],[140775,140782,6.62],[140783,140783,11],[140784,140794,6.62],[140795,140798,11],[140799,140799,6.62],[140800,140803,11],[140804,140804,6.62],[140805,140806,11],[140807,140808,6.62],[140809,140809,11],[140810,140813,6.62],[140814,140814,11],[140815,140815,9.51],[140816,140818,9.13],[140819,140819,6.62],[140820,140823,11],[140824,140827,6.62],[140828,140831,11],[140832,140846,6.62],[140847,140847,9.51],[140848,140855,9.9],[140856,140856,6.62],[140857,140857,8.11],[140858,140858,11.23],[140859,140859,8.11],[140860,140860,10.08],[140861,140863,6.62],[140864,140864,8.25],[140865,140865,6.62],[140866,140866,8.25],[140867,140871,6.62],[140872,140883,11],[140884,140895,6.62],[140896,140896,5.84],[140897,140898,11],[140899,140899,7.22],[140900,140900,11],[140901,140901,6.53],[140902,140902,5.61],[140903,140905,11],[140906,140906,6.01],[140907,140907,8.25],[140908,140908,11],[140909,140909,5.49],[140910,140910,11],[140911,140911,6.04],[140912,140913,6.62],[140914,140925,11],[140926,140926,6.62],[140927,140927,11],[140928,140939,6.62],[140940,140940,9.67],[140941,140941,9.49],[140942,140942,9.45],[140943,140943,9.86],[140944,140946,6.62],[140947,140947,11],[140948,140956,6.62],[140957,140959,5.5],[140960,140961,11],[140962,140962,9.81],[140963,140963,9.87],[140964,140964,9.71],[140965,140965,7.26],[140966,140966,8.15],[140967,140967,10.16],[140968,140968,5.86],[140969,140969,10.12],[140970,140971,11],[140972,140972,7.1],[140973,140973,8.54],[140974,140974,11.61],[140975,140975,12.3],[140976,140977,6.62],[140978,140978,6.63],[140979,140988,5.5],[140989,140990,11],[140991,140995,5.5],[140996,140997,11],[140998,140999,5.5],[141000,141000,11],[141001,141002,5.5],[141003,141003,11],[141004,141005,5.5],[141006,141007,11],[141008,141008,5.5],[141009,141009,11],[141010,141010,5.5],[141011,141012,11],[141013,141025,5.5],[141026,141026,7.7],[141027,141032,5.5],[141033,141034,11],[141035,141039,5.5],[141040,141045,11],[141046,141046,5.5],[141047,141050,11],[141051,141052,5.5],[141053,141053,11],[141054,141056,5.5],[141057,141057,10.72],[141058,141058,10.57],[141059,141059,10.72],[141060,141060,10.78],[141061,141061,11],[141062,141062,8.68],[141063,141063,8.69],[141064,141064,8.7],[141065,141065,7.59],[141066,141069,11],[141070,141070,8.72],[141071,141071,10.26],[141072,141072,10.02],[141073,141073,10.39],[141074,141074,10.72],[141075,141075,8.41],[141076,141076,9.31],[141077,141077,8.38],[141078,141078,8.37],[141079,141079,6.28],[141080,141080,7.44],[141081,141081,8.4],[141082,141082,8.36],[141083,141083,8.35],[141084,141084,8.29],[141085,141085,5.44],[141086,141086,6.07],[141087,141087,5.91],[141088,141088,6.35],[141089,141089,7.61],[141090,141090,8.65],[141091,141092,8.67],[141093,141093,8.69],[141094,141094,8.72],[141095,141095,8.73],[141096,141096,11],[141097,141097,9.06],[141098,141098,8.68],[141099,141099,9.25],[141100,141100,9.06],[141101,141101,9.16],[141102,141102,8.98],[141103,141103,9.14],[141104,141104,10.15],[141105,141105,8.19],[141106,141106,7.95],[141107,141107,8.24],[141108,141108,8.69],[141109,141109,8.71],[141110,141110,7.64],[141111,141111,8.53],[141112,141112,8.45],[141113,141113,8.71],[141114,141114,8.35],[141115,141115,7.78],[141116,141116,7.79],[141117,141117,7.5],[141118,141118,7.71],[141119,141119,9.09],[141120,141120,8.96],[141121,141122,8.68],[141123,141123,7.78],[141124,141124,7.56],[141125,141125,7.65],[141126,141126,7.58],[141127,141127,8.65],[141128,141128,8.66],[141129,141129,7.84],[141130,141130,8.7],[141131,141131,8.64],[141132,141132,11],[141133,141133,9.6],[141134,141134,11],[141135,141136,8.38],[141137,141138,8.35],[141139,141141,11],[141142,141142,8.63],[141143,141143,11],[141144,141144,3.31],[141145,141145,3.05],[141146,141146,4.57],[141147,141148,4.31],[141149,141150,7.35],[141151,141152,5.5],[141153,141153,8.05],[141154,141155,5.98],[141156,141156,10.01],[141157,141157,7.34],[141158,141159,8.36],[141160,141161,4.29],[141162,141163,3.49],[141164,141165,3.03],[141166,141167,5.6],[141168,141169,4.51],[141170,141171,2.57],[141172,141173,3.67],[141174,141203,8.67],[141204,141204,9.83],[141205,141207,11],[141208,141208,8.23],[141209,141209,10.16],[141210,141210,8.23],[141211,141211,10.1],[141212,141212,10.19],[141213,141214,10.21],[141215,141215,9.17],[141216,141216,9.6],[141217,141217,9.11],[141218,141219,10.16],[141220,141220,10.09],[141221,141221,10.23],[141222,141222,10.24],[141223,141223,5.09],[141224,141224,9.71],[141225,141226,9.2],[141227,141228,9.54],[141229,141230,7.65],[141231,141231,9.61],[141232,141232,11],[141233,141233,9.61],[141234,141234,8.36],[141235,141235,10.4],[141236,141236,8.48],[141237,141237,9.52],[141238,141238,8.48],[141239,141239,9.77],[141240,141240,10.63],[141241,141241,9.77],[141242,141242,9.14],[141243,141243,9.6],[141244,141244,10.19],[141245,141245,10.67],[141246,141246,10.1],[141247,141247,11],[141248,141248,6.03],[141249,141249,10.43],[141250,141250,7.58],[141251,141252,6.21],[141253,141254,6.62],[141255,141255,6.82],[141256,141257,10.1],[141258,141258,3.74],[141259,141259,9.22],[141260,141260,3.57],[141261,141261,9.22],[141262,141263,5.5],[141264,141264,8.21],[141265,141265,6.82],[141266,141266,6.57],[141267,141268,5.97],[141269,141270,9.93],[141271,141271,12.26],[141272,141273,7.58],[141274,141274,9.57],[141275,141275,9.42],[141276,141276,11.6],[141277,141278,9.33],[141279,141279,4.36],[141280,141280,6.06],[141281,141281,7.7],[141282,141283,9.64],[141284,141285,10.41],[141286,141287,4.64],[141288,141289,4.02],[141290,141291,5.1],[141292,141293,5.37],[141294,141295,2.56],[141296,141297,10.8],[141298,141299,10.48],[141300,141300,13.71],[141301,141311,12.97],[141312,141567,7.52],[141568,141569,10.29],[141570,141571,9.52],[141572,141572,11.39],[141573,141573,10.29],[141574,141575,9.52],[141576,141577,5.25],[141578,141579,7.89],[141580,141583,9.7],[141584,141584,11.47],[141585,141585,9.22],[141586,141587,8.33],[141588,141589,9.51],[141590,141592,11.47],[141593,141596,9.51],[141597,141600,9.7],[141601,141602,8.21],[141603,141606,7.15],[141607,141607,8.57],[141608,141608,8.13],[141609,141609,8.57],[141610,141610,8.13],[141611,141612,7.68],[141613,141616,8.13],[141617,141618,8.57],[141619,141619,9.31],[141620,141621,11],[141622,141623,9.51],[141624,141624,4.48],[141625,141625,9.51],[141626,141629,8.89],[141630,141631,7.21],[141632,141633,8.39],[141634,141639,9.22],[141640,141640,10.13],[141641,141641,5.36],[141642,141643,9.22],[141644,141645,5.44],[141646,141646,9.22],[141647,141647,4.76],[141648,141648,9.22],[141649,141649,4.76],[141650,141651,9.49],[141652,141653,4.76],[141654,141655,9.49],[141656,141657,4.76],[141658,141659,9.59],[141660,141661,4.76],[141662,141663,9.59],[141664,141665,4.76],[141666,141669,9.51],[141670,141677,9.22],[141678,141679,7.85],[141680,141685,9.22],[141686,141686,7.95],[141687,141687,11.47],[141688,141688,7.95],[141689,141689,8.41],[141690,141690,10.13],[141691,141691,8.41],[141692,141693,6.12],[141694,141695,6.57],[141696,141696,4.01],[141697,141697,4.18],[141698,141698,3.45],[141699,141700,4.11],[141701,141702,4.92],[141703,141704,3.68],[141705,141706,4.35],[141707,141708,3.31],[141709,141712,3.3],[141713,141713,4.02],[141714,141714,4.04],[141715,141716,7.25],[141717,141718,7.65],[141719,141720,7.13],[141721,141721,2.48],[141722,141722,3.05],[141723,141723,6.53],[141724,141725,6.51],[141726,141726,7.27],[141727,141727,6.03],[141728,141729,6.53],[141730,141733,6.03],[141734,141735,8.28],[141736,141743,6.53],[141744,141748,7.73],[141749,141749,9.56],[141750,141750,7.7],[141751,141751,7.72],[141752,141752,7.94],[141753,141753,7.72],[141754,141754,7.73],[141755,141755,7.74],[141756,141761,7.72],[141762,141762,9.41],[141763,141763,9.61],[141764,141768,8.22],[141769,141769,8.75],[141770,141772,8.23],[141773,141773,10.38],[141774,141774,7.15],[141775,141776,8.34],[141777,141779,7.56],[141780,141781,7.17],[141782,141783,8.44],[141784,141785,3.05],[141786,141787,4.66],[141788,141788,7.01],[141789,141789,7.12],[141790,141790,7.01],[141791,141791,7.41],[141792,141792,8.22],[141793,141793,7.19],[141794,141794,7.51],[141795,141797,7.3],[141798,141798,7.81],[141799,141799,6.99],[141800,141801,8.23],[141802,141802,7.89],[141803,141803,5.2],[141804,141805,9.89],[141806,141807,6.57],[141808,141809,7.79],[141810,141811,7.72],[141812,141812,9],[141813,141813,4.08],[141814,141814,6.34],[141815,141817,5.59],[141818,141819,7.43],[141820,141821,5.91],[141822,141823,5.2],[141824,141825,9.89],[141826,141826,9.92],[141827,141828,5.99],[141829,141830,6.55],[141831,141832,8.43],[141833,141833,7.33],[141834,141834,9.41],[141835,141835,7.18],[141836,141836,16.56],[141837,141839,6.72],[141840,141840,6.52],[141841,141841,8.01],[141842,141842,6.74],[141843,141843,6.52],[141844,141844,7.42],[141845,141845,6.52],[141846,141846,6.72],[141847,141847,7.43],[141848,141850,6.72],[141851,141851,7.02],[141852,141852,6.79],[141853,141853,7.56],[141854,141854,4.35],[141855,141855,3.67],[141856,141856,8.92],[141857,141857,3.59],[141858,141859,5.95],[141860,141860,5.99],[141861,141861,5.95],[141862,141862,5.99],[141863,141863,7.12],[141864,141864,7.02],[141865,141866,5.99],[141867,141868,5.97],[141869,141870,8.37],[141871,141871,5.04],[141872,141872,5.82],[141873,141873,5.96],[141874,141874,5.74],[141875,141875,8.85],[141876,141877,7.86],[141878,141880,9.89],[141881,141883,8.23],[141884,141885,5.63],[141886,141886,3.67],[141887,141887,6.77],[141888,141893,5.99],[141894,141895,4.27],[141896,141897,5.96],[141898,141899,5.62],[141900,141901,8.13],[141902,141903,6.55],[141904,141904,8.13],[141905,141906,6.71],[141907,141908,7.17],[141909,141910,8.28],[141911,141912,7.17],[141913,141913,6.67],[141914,141915,7.17],[141916,141917,8.12],[141918,141920,6.71],[141921,141921,5.97],[141922,141923,6.71],[141924,141925,7.34],[141926,141929,5.96],[141930,141933,5.98],[141934,141934,5.33],[141935,141936,5.98],[141937,141938,5.97],[141939,141939,5.99],[141940,141940,9.33],[141941,141941,10.82],[141942,141942,16.03],[141943,141943,6],[141944,141944,6.55],[141945,141946,7.25],[141947,141948,5.63],[141949,141951,5.97],[141952,141952,5.98],[141953,141956,5.97],[141957,141958,5.98],[141959,141959,6.06],[141960,141960,6.27],[141961,141962,5.98],[141963,141964,5.97],[141965,141965,6.06],[141966,141966,6.03],[141967,141968,5.99],[141969,141975,5.97],[141976,141978,5.98],[141979,141980,5.97],[141981,141982,5.98],[141983,141983,6.07],[141984,141984,6],[141985,141986,7.51],[141987,141987,8.87],[141988,141988,5.99],[141989,141989,10.29],[141990,141993,6.75],[141994,141994,5.63],[141995,141995,5.76],[141996,141996,6.06],[141997,141997,6.11],[141998,141998,5.97],[141999,142001,6.08],[142002,142002,6.06],[142003,142006,6.08],[142007,142007,6.02],[142008,142008,6.03],[142009,142009,6.02],[142010,142010,6.03],[142011,142012,9.76],[142013,142014,6.21],[142015,142022,5.05],[142023,142026,6],[142027,142028,5.05],[142029,142030,10.48],[142031,142032,6.21],[142033,142034,6.2],[142035,142038,5.05],[142039,142040,9.35],[142041,142043,6.57],[142044,142044,6.71],[142045,142045,6.57],[142046,142046,4.32],[142047,142049,7.58],[142050,142050,7.55],[142051,142051,7.52],[142052,142052,7.55],[142053,142053,9.21],[142054,142054,7.54],[142055,142057,7.58],[142058,142059,7.62],[142060,142061,5.63],[142062,142062,3.44],[142063,142064,3.13],[142065,142065,3.29],[142066,142066,4.29],[142067,142067,5.98],[142068,142068,3.84],[142069,142069,5.26],[142070,142070,2.48],[142071,142072,10.68],[142073,142074,5.97],[142075,142075,5.48],[142076,142076,3.9],[142077,142077,4.52],[142078,142079,3.23],[142080,142083,6.62],[142084,142084,12.07],[142085,142087,11],[142088,142091,6.62],[142092,142092,12.07],[142093,142093,6.45],[142094,142097,6.6],[142098,142105,6.62],[142106,142108,11],[142109,142110,2.64],[142111,142114,10.01],[142115,142115,10.19],[142116,142116,13.28],[142117,142118,11],[142119,142120,5.98],[142121,142121,11],[142122,142123,3.93],[142124,142125,9.26],[142126,142127,6.56],[142128,142129,10.19],[142130,142130,13.2],[142131,142131,17.31],[142132,142134,10.19],[142135,142135,15.53],[142136,142148,10.19],[142149,142150,10.21],[142151,142156,10.19],[142157,142159,5.5],[142160,142160,11],[142161,142161,8.73],[142162,142162,7.7],[142163,142164,9.51],[142165,142165,11],[142166,142175,5.5],[142176,142181,11],[142182,142209,5.5],[142210,142211,11],[142212,142223,5.5],[142224,142225,13.35],[142226,142228,5.5],[142229,142229,11],[142230,142335,5.5],[142336,142336,8.99],[142337,142337,9.32],[142338,142338,11.69],[142339,142339,10.54],[142340,142340,11.78],[142341,142341,7.24],[142342,142342,11.69],[142343,142343,9.39],[142344,142344,11.21],[142345,142346,11.79],[142347,142347,5.73],[142348,142348,12.06],[142349,142349,4.89],[142350,142350,11.42],[142351,142351,9.2],[142352,142353,6.26],[142354,142354,8.46],[142355,142355,6.26],[142356,142356,8.84],[142357,142357,11.69],[142358,142358,9.39],[142359,142359,8.76],[142360,142360,9.4],[142361,142361,8.76],[142362,142362,9.51],[142363,142363,9],[142364,142364,9.24],[142365,142365,10],[142366,142366,9.43],[142367,142367,8.16],[142368,142368,7.69],[142369,142369,10.3],[142370,142370,8.56],[142371,142371,9.43],[142372,142372,8],[142373,142373,9.35],[142374,142374,9.46],[142375,142375,11.33],[142376,142376,11.44],[142377,142377,14.34],[142378,142378,10.2],[142379,142379,6.61],[142380,142380,4.27],[142381,142381,8.71],[142382,142382,10.88],[142383,142383,5.5],[142384,142384,7.78],[142385,142385,8],[142386,142386,10.12],[142387,142387,8.78],[142388,142388,9.86],[142389,142389,5.59],[142390,142390,10.12],[142391,142391,7.57],[142392,142392,9.17],[142393,142394,10.05],[142395,142395,5.2],[142396,142396,10.11],[142397,142397,4.37],[142398,142398,9.58],[142399,142399,7.95],[142400,142400,5.42],[142401,142401,5.57],[142402,142402,7.29],[142403,142403,5.35],[142404,142404,7.06],[142405,142405,10.12],[142406,142406,8.12],[142407,142407,8.17],[142408,142408,7.69],[142409,142409,6.85],[142410,142410,7.72],[142411,142411,7.78],[142412,142412,7.36],[142413,142413,7.68],[142414,142414,8.21],[142415,142415,7.03],[142416,142416,6.74],[142417,142417,7.94],[142418,142418,6.64],[142419,142419,8.21],[142420,142420,6.2],[142421,142421,7.3],[142422,142422,7.94],[142423,142423,8.62],[142424,142424,9.38],[142425,142425,11.42],[142426,142426,8.77],[142427,142427,5.31],[142428,142428,3.43],[142429,142429,7.08],[142430,142430,8.48],[142431,142431,5.5],[142432,142432,7.26],[142433,142433,5.25],[142434,142434,8.54],[142435,142435,7.88],[142436,142436,7.94],[142437,142437,6.12],[142438,142438,3.66],[142439,142439,8.58],[142440,142440,7.07],[142441,142441,7.94],[142442,142442,6.12],[142443,142443,6.72],[142444,142444,5.5],[142445,142445,9.06],[142446,142447,6.62],[142448,142448,9.88],[142449,142449,6.73],[142450,142450,11.99],[142451,142451,9.2],[142452,142452,5.41],[142453,142453,6.42],[142454,142454,5.7],[142455,142455,6.86],[142456,142456,7.58],[142457,142458,6.62],[142459,142459,4.48],[142460,142461,6.62],[142462,142462,6.45],[142463,142463,6.6],[142464,142464,6.96],[142465,142465,6.31],[142466,142466,7.15],[142467,142467,6.34],[142468,142468,5.76],[142469,142469,4.76],[142470,142470,8.95],[142471,142471,7.24],[142472,142472,7.07],[142473,142473,5.44],[142474,142474,6.12],[142475,142475,5.27],[142476,142476,6.29],[142477,142477,4.99],[142478,142478,8.15],[142479,142479,7.01],[142480,142480,8.6],[142481,142481,6.65],[142482,142482,3.12],[142483,142483,2.84],[142484,142484,6.81],[142485,142485,5.87],[142486,142486,6.39],[142487,142487,5.14],[142488,142488,8.8],[142489,142489,8.21],[142490,142490,8.36],[142491,142491,6.95],[142492,142492,6.29],[142493,142493,5.17],[142494,142494,8.59],[142495,142495,6.65],[142496,142496,8.04],[142497,142497,6.86],[142498,142498,6.65],[142499,142499,5.83],[142500,142500,6.95],[142501,142501,5.28],[142502,142502,6.71],[142503,142503,6.24],[142504,142504,6.23],[142505,142505,5.59],[142506,142506,8.84],[142507,142507,7.97],[142508,142508,6.45],[142509,142509,5.82],[142510,142510,9.17],[142511,142511,7.7],[142512,142512,11.35],[142513,142513,8.98],[142514,142514,7.12],[142515,142515,5.57],[142516,142516,6.09],[142517,142517,6.29],[142518,142518,6.93],[142519,142519,6.07],[142520,142520,6.29],[142521,142521,5.17],[142522,142522,7.12],[142523,142523,5.57],[142524,142524,8.67],[142525,142525,7.77],[142526,142526,8.98],[142527,142527,8.19],[142528,142528,7.14],[142529,142529,5.92],[142530,142530,11.35],[142531,142531,8.98],[142532,142532,6.42],[142533,142533,5.48],[142534,142534,4.85],[142535,142535,4.18],[142536,142536,6.04],[142537,142537,5.77],[142538,142539,6.29],[142540,142540,6.47],[142541,142541,5.61],[142542,142542,6.79],[142543,142543,6.05],[142544,142544,5.76],[142545,142545,4.78],[142546,142547,6.29],[142548,142548,3.93],[142549,142549,4.06],[142550,142550,6.59],[142551,142551,5.69],[142552,142552,8.04],[142553,142553,6.86],[142554,142554,8.95],[142555,142555,7.24],[142556,142557,6.64],[142558,142558,6.12],[142559,142559,5.17],[142560,142560,9.06],[142561,142561,8.01],[142562,142562,7.24],[142563,142563,6.43],[142564,142564,5.87],[142565,142565,8.24],[142566,142566,8.01],[142567,142567,9.58],[142568,142569,7.62],[142570,142570,11.49],[142571,142571,9],[142572,142572,6.51],[142573,142573,8.36],[142574,142574,7.27],[142575,142577,0],[142578,142578,8.03],[142579,142579,6.76],[142580,142584,5.5],[142585,142585,9.2],[142586,142587,6.09],[142588,142588,9.2],[142589,142589,3.81],[142590,142590,4.69],[142591,142591,3.3],[142592,142639,5.5],[142640,142640,4.55],[142641,142641,9.42],[142642,142642,9.43],[142643,142644,7.47],[142645,142645,7.03],[142646,142646,6.65],[142647,142648,6.94],[142649,142650,7.12],[142651,142651,7.7],[142652,142652,8.73],[142653,142653,7.96],[142654,142654,5.48],[142655,142655,7.96],[142656,142657,9.43],[142658,142658,3.13],[142659,142659,7.03],[142660,142660,7.97],[142661,142661,7.03],[142662,142662,7.69],[142663,142663,8.01],[142664,142664,8.16],[142665,142665,5.25],[142666,142666,5.62],[142667,142667,6.9],[142668,142668,8.62],[142669,142669,5.9],[142670,142670,7.12],[142671,142671,3.11],[142672,142672,8.41],[142673,142673,3],[142674,142674,6.06],[142675,142675,4.55],[142676,142677,9.43],[142678,142678,7.97],[142679,142679,3.21],[142680,142680,7.81],[142681,142682,9.43],[142683,142683,8.32],[142684,142684,5.71],[142685,142685,7.03],[142686,142686,8.32],[142687,142687,7.12],[142688,142688,7.38],[142689,142689,7.75],[142690,142690,5.25],[142691,142691,9.2],[142692,142692,4.99],[142693,142693,9.2],[142694,142694,7.16],[142695,142695,8.48],[142696,142702,5.5],[142703,142703,3.39],[142704,142704,8.46],[142705,142718,5.5],[142719,142719,0],[142720,142720,15.18],[142721,142721,12.57],[142722,142722,12.84],[142723,142723,10.5],[142724,142724,11.26],[142725,142725,10.81],[142726,142726,9.21],[142727,142727,9.28],[142728,142728,9.35],[142729,142729,11.39],[142730,142730,9.68],[142731,142731,11.03],[142732,142732,12.1],[142733,142733,11.75],[142734,142734,11.78],[142735,142735,16.52],[142736,142736,19.27],[142737,142737,10.07],[142738,142738,10.84],[142739,142739,12.74],[142740,142740,12.57],[142741,142741,8.97],[142742,142742,12.57],[142743,142751,5.5],[142752,142752,11.26],[142753,142753,13.07],[142754,142754,12.9],[142755,142755,11.26],[142756,142756,12.76],[142757,142758,11.26],[142759,142759,5.5],[142760,142762,9.21],[142763,142763,9.22],[142764,142764,9.21],[142765,142765,11.06],[142766,142766,9.28],[142767,142767,5.5],[142768,142772,13.41],[142773,142773,14.88],[142774,142774,13.41],[142775,142775,5.5],[142776,142776,18.63],[142777,142777,19.05],[142778,142778,18.97],[142779,142779,18.73],[142780,142780,22.4],[142781,142781,18.3],[142782,142782,18.51],[142783,142783,5.5],[142784,142790,9.96],[142791,142791,5.5],[142792,142792,8.41],[142793,142793,10.89],[142794,142794,10.81],[142795,142795,8.41],[142796,142796,10.68],[142797,142798,8.41],[142799,142799,5.5],[142800,142800,10.59],[142801,142801,13.07],[142802,142802,12.99],[142803,142803,10.59],[142804,142804,12.85],[142805,142806,10.59],[142807,142807,5.5],[142808,142808,6.92],[142809,142809,9.93],[142810,142810,7.34],[142811,142811,7.51],[142812,142812,7.2],[142813,142813,9.54],[142814,142814,6.92],[142815,142815,5.5],[142816,142847,0],[142848,142848,2.64],[142849,142849,2.68],[142850,142851,2.33],[142852,142853,2.51],[142854,142854,4.44],[142855,142855,4.49],[142856,142856,4.48],[142857,142858,4.47],[142859,142859,4.13],[142860,142861,2.95],[142862,142862,10.89],[142863,142863,13.07],[142864,142865,12.65],[142866,142866,1.77],[142867,142867,6.21],[142868,142868,8.01],[142869,142869,8],[142870,142870,6.62],[142871,142871,6.16],[142872,142872,6.62],[142873,142873,5.5],[142874,142874,4.17],[142875,142875,7.33],[142876,142877,2.95],[142878,142879,7.33],[142880,142881,4.71],[142882,142885,4.91],[142886,142887,7.4],[142888,142889,6.94],[142890,142892,7.61],[142893,142893,7.33],[142894,142894,6.62],[142895,142895,2.58],[142896,142896,3.75],[142897,142897,3.08],[142898,142975,5.5],[142976,143001,11],[143002,143002,5.5],[143003,143091,11],[143092,143103,5.5],[143104,143317,11],[143318,143343,5.5],[143344,143355,11],[143356,143359,5.5],[143360,143405,11],[143406,143407,17.6],[143408,143422,11],[143423,143424,5.5],[143425,143510,11],[143511,143512,5.5],[143513,143514,0],[143515,143615,11],[143616,143620,5.5],[143621,143660,11],[143661,143664,5.5],[143665,143758,9.51],[143759,143759,5.5],[143760,143799,11],[143800,143807,5.5],[143808,143823,11],[143824,143855,5.5],[143856,143871,11],[143872,143899,9.51],[143900,143900,9.56],[143901,143903,5.5],[143904,143951,11],[143952,143952,5.5],[143953,143967,11],[143968,143995,9.51],[143996,143998,5.5],[143999,143999,9.51],[144000,144075,11],[144076,144079,5.5],[144080,144246,11],[144247,144250,5.5],[144251,144255,11],[144256,144260,9.51],[144261,144265,11],[144266,144268,9.51],[144269,144272,11],[144273,144277,9.51],[144278,144280,11],[144281,144282,9.51],[144283,144294,11],[144295,144303,9.51],[144304,144307,11],[144308,144321,9.51],[144322,144322,11],[144323,144323,9.51],[144324,144324,11],[144325,144327,9.51],[144328,144328,11],[144329,144330,9.51],[144331,144334,11],[144335,144336,9.51],[144337,144338,11],[144339,144339,9.51],[144340,144341,11],[144342,144342,9.51],[144343,144346,11],[144347,144349,9.51],[144350,144351,5.5],[144352,144382,11],[144383,144383,5.5],[144384,150965,11],[150966,150975,5.5],[150976,151039,9.67],[151040,171970,11],[171971,171971,5.5],[171972,171972,11],[171973,171973,5.5],[171974,171984,11],[171985,172031,5.5],[172032,172034,6.79],[172035,172035,7.05],[172036,172036,6.76],[172037,172038,6.25],[172039,172039,6.93],[172040,172040,5.77],[172041,172042,5.97],[172043,172043,6.18],[172044,172045,6.52],[172046,172046,6.3],[172047,172047,6.4],[172048,172050,7.53],[172051,172051,6.48],[172052,172052,6.36],[172053,172053,7.01],[172054,172054,6.89],[172055,172057,5.85],[172058,172058,7.42],[172059,172060,6.42],[172061,172061,6.9],[172062,172062,5.65],[172063,172064,7.01],[172065,172065,6.65],[172066,172067,6.41],[172068,172068,4.94],[172069,172069,6.61],[172070,172071,5.72],[172072,172072,5.7],[172073,172074,6.73],[172075,172075,4.94],[172076,172076,6.29],[172077,172078,5.76],[172079,172079,5.44],[172080,172081,6.67],[172082,172082,6.02],[172083,172084,5.93],[172085,172085,6.62],[172086,172087,7.75],[172088,172088,6.68],[172089,172090,6.84],[172091,172091,6.29],[172092,172093,7.34],[172094,172094,6.73],[172095,172095,6.52],[172096,172097,6.74],[172098,172098,6.85],[172099,172100,6.3],[172101,172101,6.48],[172102,172102,6.82],[172103,172104,7.03],[172105,172105,6.19],[172106,172106,5.51],[172107,172108,6.38],[172109,172109,6.57],[172110,172111,6.85],[172112,172112,6.68],[172113,172114,7.07],[172115,172115,6.72],[172116,172117,6.79],[172118,172118,6.73],[172119,172120,6.4],[172121,172121,6.51],[172122,172122,6.9],[172123,172124,6.28],[172125,172125,6.75],[172126,172126,6.92],[172127,172128,8.81],[172129,172129,7.01],[172130,172131,6.31],[172132,172132,6.68],[172133,172133,6.7],[172134,172135,5.53],[172136,172136,6.73],[172137,172138,6.34],[172139,172139,6.69],[172140,172140,6.78],[172141,172142,6.5],[172143,172143,6.09],[172144,172145,6.34],[172146,172146,6.14],[172147,172148,5.83],[172149,172149,5.61],[172150,172150,6.43],[172151,172152,6.25],[172153,172153,6.08],[172154,172155,6.48],[172156,172156,5.8],[172157,172157,7.29],[172158,172159,5.99],[172160,172160,7.38],[172161,172161,6.63],[172162,172164,7.01],[172165,172165,6.17],[172166,172167,6.68],[172168,172168,6.19],[172169,172170,7.8],[172171,172171,6.45],[172172,172173,6.74],[172174,172174,6.27],[172175,172176,6.2],[172177,172177,5.61],[172178,172179,6.16],[172180,172180,6.51],[172181,172181,7.03],[172182,172182,6.81],[172183,172183,5.57],[172184,172184,6.63],[172185,172186,6.54],[172187,172187,6.34],[172188,172189,6.46],[172190,172190,5.87],[172191,172191,6.68],[172192,172193,6.42],[172194,172194,6.12],[172195,172195,6.04],[172196,172197,5.96],[172198,172198,6.51],[172199,172200,7.03],[172201,172202,5.72],[172203,172203,5.87],[172204,172205,6.73],[172206,172206,6.51],[172207,172208,5.95],[172209,172209,5.7],[172210,172211,6.51],[172212,172212,5.99],[172213,172213,6.96],[172214,172215,6.58],[172216,172216,7.01],[172217,172217,6.15],[172218,172219,6.26],[172220,172220,7.53],[172221,172221,6.68],[172222,172223,6.16],[172224,172224,6.41],[172225,172226,6.6],[172227,172227,6.35],[172228,172229,7.19],[172230,172230,6.4],[172231,172232,5.8],[172233,172233,5.85],[172234,172235,7.03],[172236,172236,5.8],[172237,172237,6.09],[172238,172239,6.12],[172240,172240,5.76],[172241,172241,7.24],[172242,172244,6.17],[172245,172246,5.81],[172247,172247,5.9],[172248,172248,5.3],[172249,172250,6.84],[172251,172251,6.69],[172252,172253,6.02],[172254,172254,6.16],[172255,172258,6.69],[172259,172260,5.94],[172261,172261,6.02],[172262,172262,5.93],[172263,172264,5.53],[172265,172265,5.66],[172266,172268,6.51],[172269,172269,5.66],[172270,172270,6.23],[172271,172272,6.13],[172273,172273,6.98],[172274,172275,5.96],[172276,172276,6.35],[172277,172278,5.7],[172279,172279,5.94],[172280,172281,6.12],[172282,172282,6.16],[172283,172284,7.03],[172285,172285,6.16],[172286,172287,6.86],[172288,172288,7.41],[172289,172290,6.09],[172291,172291,6.79],[172292,172293,6.28],[172294,172294,6.23],[172295,172295,6.89],[172296,172297,5.73],[172298,172298,6.73],[172299,172300,5.9],[172301,172301,6.25],[172302,172303,6.21],[172304,172304,5.61],[172305,172306,5.48],[172307,172307,5.91],[172308,172308,5.39],[172309,172310,5.59],[172311,172311,6.08],[172312,172313,5.53],[172314,172314,5.61],[172315,172316,5.42],[172317,172317,5.59],[172318,172319,6.29],[172320,172320,6.26],[172321,172321,5.48],[172322,172323,5.91],[172324,172324,5.48],[172325,172325,6.15],[172326,172327,5.3],[172328,172328,6.54],[172329,172329,5.61],[172330,172331,5.87],[172332,172332,5.92],[172333,172334,6.19],[172335,172335,5.91],[172336,172336,6.49],[172337,172338,6.51],[172339,172339,6.46],[172340,172341,6.76],[172342,172342,5.91],[172343,172344,5.73],[172345,172348,5.91],[172349,172349,6.19],[172350,172352,5.91],[172353,172354,6.15],[172355,172355,6.06],[172356,172356,5.72],[172357,172358,5.58],[172359,172359,5.83],[172360,172361,5.7],[172362,172362,6.68],[172363,172363,6.32],[172364,172365,7.03],[172366,172366,6.46],[172367,172368,6.74],[172369,172369,5.91],[172370,172371,5.35],[172372,172372,6.09],[172373,172374,6.3],[172375,172375,6.19],[172376,172377,6.16],[172378,172378,7.11],[172379,172379,6.08],[172380,172382,6.16],[172383,172384,6.68],[172385,172385,6.57],[172386,172386,5.61],[172387,172388,5.84],[172389,172389,6.4],[172390,172391,6.08],[172392,172392,5.43],[172393,172394,5.32],[172395,172395,6.16],[172396,172396,5.95],[172397,172398,6.69],[172399,172399,6.2],[172400,172400,5.52],[172401,172402,6.45],[172403,172403,5.87],[172404,172405,7.33],[172406,172406,6.34],[172407,172408,5.74],[172409,172410,5.91],[172411,172411,6.28],[172412,172412,6.39],[172413,172413,6.51],[172414,172415,6.74],[172416,172416,6.68],[172417,172418,6.53],[172419,172419,6.05],[172420,172421,6.15],[172422,172422,6.04],[172423,172424,5.92],[172425,172425,6.3],[172426,172426,6.2],[172427,172428,6.26],[172429,172429,6.2],[172430,172431,5.76],[172432,172432,5.72],[172433,172433,6.02],[172434,172436,6.34],[172437,172438,5.96],[172439,172441,6.16],[172442,172442,5.93],[172443,172444,6.16],[172445,172445,6.4],[172446,172446,6.84],[172447,172448,6.7],[172449,172449,6.29],[172450,172451,6.1],[172452,172452,6.28],[172453,172454,5.9],[172455,172455,6.28],[172456,172458,5.72],[172459,172459,6.21],[172460,172461,5.5],[172462,172462,5.96],[172463,172464,6.02],[172465,172465,6.53],[172466,172467,6.6],[172468,172468,6.38],[172469,172470,6.34],[172471,172471,5.91],[172472,172473,5.09],[172474,172474,6.51],[172475,172475,5.39],[172476,172477,5.37],[172478,172478,5.36],[172479,172479,6.88],[172480,172481,5.64],[172482,172482,6.15],[172483,172485,5.84],[172486,172486,6.6],[172487,172487,6.59],[172488,172489,6.25],[172490,172490,6.09],[172491,172492,5.51],[172493,172493,7.01],[172494,172494,6.51],[172495,172496,7.01],[172497,172497,6.16],[172498,172499,5.62],[172500,172500,6.6],[172501,172502,6.17],[172503,172503,5.91],[172504,172505,5.49],[172506,172506,6.56],[172507,172508,6.41],[172509,172510,5.72],[172511,172512,6.59],[172513,172513,5.72],[172514,172514,6.18],[172515,172516,6.01],[172517,172517,6.51],[172518,172518,6.88],[172519,172520,7.07],[172521,172521,6.51],[172522,172522,7.19],[172523,172524,6.13],[172525,172525,5.8],[172526,172526,5.85],[172527,172528,5.61],[172529,172529,5.43],[172530,172530,6.89],[172531,172532,6.74],[172533,172533,6.51],[172534,172535,6.15],[172536,172536,6.27],[172537,172538,6.09],[172539,172539,5.46],[172540,172541,5.91],[172542,172542,6.2],[172543,172543,6.39],[172544,172545,5.84],[172546,172546,5.85],[172547,172548,5.96],[172549,172549,6.36],[172550,172550,5.8],[172551,172552,5.53],[172553,172553,6.01],[172554,172554,6.78],[172555,172556,4.99],[172557,172557,7.03],[172558,172558,6.6],[172559,172560,6.31],[172561,172561,5.92],[172562,172563,5.58],[172564,172564,6.51],[172565,172566,5.91],[172567,172568,6.57],[172569,172569,6.23],[172570,172570,6.28],[172571,172572,6.07],[172573,172573,5.77],[172574,172574,6.02],[172575,172576,6.89],[172577,172577,6.4],[172578,172578,5.82],[172579,172580,5.14],[172581,172581,5.04],[172582,172582,5.96],[172583,172584,6.52],[172585,172585,7.4],[172586,172586,6.63],[172587,172589,5.82],[172590,172591,6.08],[172592,172593,6.58],[172594,172594,5.93],[172595,172596,6.7],[172597,172597,5.93],[172598,172599,6.08],[172600,172601,5.95],[172602,172603,6.43],[172604,172604,6.34],[172605,172606,5.68],[172607,172607,6.02],[172608,172608,6.92],[172609,172610,5.25],[172611,172611,6.3],[172612,172613,6.74],[172614,172614,6.15],[172615,172616,6.2],[172617,172617,6.04],[172618,172618,5.58],[172619,172620,6.14],[172621,172621,6.69],[172622,172622,6.46],[172623,172624,5.86],[172625,172625,6.18],[172626,172626,6.65],[172627,172628,6.27],[172629,172629,6.65],[172630,172630,5.48],[172631,172632,5.76],[172633,172633,6.2],[172634,172635,6.08],[172636,172636,6.09],[172637,172638,6.15],[172639,172639,5.76],[172640,172640,6.7],[172641,172642,5.91],[172643,172643,6.47],[172644,172644,6.51],[172645,172646,5.74],[172647,172647,5.26],[172648,172649,6.19],[172650,172650,7.11],[172651,172652,5.7],[172653,172653,6.72],[172654,172656,5.77],[172657,172657,6.64],[172658,172660,6.78],[172661,172661,5.97],[172662,172663,6.08],[172664,172664,6.38],[172665,172665,5.79],[172666,172667,6.51],[172668,172668,6.24],[172669,172670,6.48],[172671,172671,6.73],[172672,172672,6.82],[172673,172675,6.13],[172676,172677,6.05],[172678,172678,6.38],[172679,172680,5.69],[172681,172681,5.37],[172682,172683,6.03],[172684,172684,6.34],[172685,172685,6.27],[172686,172687,6.79],[172688,172688,6.17],[172689,172690,6.26],[172691,172691,6.1],[172692,172694,6.01],[172695,172695,6.79],[172696,172697,6.19],[172698,172698,6.64],[172699,172699,6.36],[172700,172701,6.58],[172702,172702,6.19],[172703,172704,6.28],[172705,172705,5.77],[172706,172706,6.08],[172707,172708,5.26],[172709,172709,6.01],[172710,172711,7.15],[172712,172712,5.69],[172713,172714,5.95],[172715,172715,5.27],[172716,172717,6.04],[172718,172718,5.7],[172719,172720,5.32],[172721,172721,5.46],[172722,172722,6.54],[172723,172724,6.08],[172725,172725,6.09],[172726,172728,6.51],[172729,172729,7.42],[172730,172731,5.61],[172732,172732,6.26],[172733,172733,6.98],[172734,172735,6.93],[172736,172736,6.24],[172737,172738,6.51],[172739,172739,7.01],[172740,172740,6.56],[172741,172742,6.96],[172743,172743,6.21],[172744,172745,6.47],[172746,172746,5.38],[172747,172748,6.41],[172749,172749,5.61],[172750,172751,5.64],[172752,172752,6.28],[172753,172754,6.68],[172755,172755,5.85],[172756,172756,5.7],[172757,172758,6.08],[172759,172759,6.13],[172760,172760,6.47],[172761,172762,6.35],[172763,172763,6.47],[172764,172765,6.4],[172766,172766,5.95],[172767,172768,6.41],[172769,172769,6.32],[172770,172771,6.08],[172772,172772,6.04],[172773,172774,5.6],[172775,172775,6.64],[172776,172777,5.66],[172778,172778,5.91],[172779,172780,6.59],[172781,172781,6.23],[172782,172783,5.96],[172784,172784,5.82],[172785,172787,7.09],[172788,172790,5.96],[172791,172791,5.84],[172792,172793,6.57],[172794,172795,6.19],[172796,172797,5.05],[172798,172799,6.57],[172800,172800,6.31],[172801,172802,6.74],[172803,172803,6.23],[172804,172805,5.25],[172806,172806,6.51],[172807,172808,6.74],[172809,172809,6.59],[172810,172811,6.57],[172812,172812,5.77],[172813,172814,6.96],[172815,172815,6.69],[172816,172816,5.72],[172817,172818,5.57],[172819,172819,6.06],[172820,172822,5.25],[172823,172823,6.01],[172824,172825,5.64],[172826,172826,6.01],[172827,172828,6.28],[172829,172829,5.74],[172830,172830,6.58],[172831,172832,5.65],[172833,172833,6.19],[172834,172835,6.07],[172836,172838,6.3],[172839,172839,5.96],[172840,172841,6.3],[172842,172842,5.49],[172843,172844,5.51],[172845,172845,5.75],[172846,172847,6.16],[172848,172848,5.91],[172849,172849,7.01],[172850,172852,6.08],[172853,172853,5.98],[172854,172855,6.51],[172856,172856,7.2],[172857,172858,5.61],[172859,172859,6.51],[172860,172860,5.96],[172861,172862,6.04],[172863,172863,6.91],[172864,172864,7.14],[172865,172866,6.05],[172867,172867,6.14],[172868,172869,6.73],[172870,172870,6.41],[172871,172872,6.34],[172873,172873,5.59],[172874,172875,5.96],[172876,172876,5.85],[172877,172877,7.34],[172878,172879,6.96],[172880,172880,6.28],[172881,172883,5.72],[172884,172884,6.74],[172885,172885,7.27],[172886,172887,7.05],[172888,172888,6.67],[172889,172890,6.35],[172891,172891,6.07],[172892,172893,6.16],[172894,172894,5.7],[172895,172896,6.15],[172897,172897,5.87],[172898,172899,6.56],[172900,172900,6.16],[172901,172901,6.34],[172902,172903,5.92],[172904,172904,6.53],[172905,172905,6.2],[172906,172907,5.53],[172908,172908,5.77],[172909,172911,6.25],[172912,172912,5.91],[172913,172914,7.75],[172915,172915,6.41],[172916,172917,6.31],[172918,172918,6.14],[172919,172920,6.29],[172921,172921,5.87],[172922,172923,6.14],[172924,172925,6.19],[172926,172927,5.85],[172928,172928,6.46],[172929,172930,6.09],[172931,172931,6.41],[172932,172932,5.74],[172933,172934,5.59],[172935,172935,6.16],[172936,172936,5.84],[172937,172938,6.41],[172939,172939,6.96],[172940,172941,5.83],[172942,172942,6.23],[172943,172944,5.83],[172945,172945,5.65],[172946,172947,6.08],[172948,172948,6.51],[172949,172950,6.42],[172951,172951,5.7],[172952,172954,6.41],[172955,172955,5.59],[172956,172957,6.25],[172958,172958,6.68],[172959,172959,6.16],[172960,172961,6.19],[172962,172962,6.69],[172963,172964,6.29],[172965,172965,5.88],[172966,172967,6.23],[172968,172968,5.91],[172969,172970,6.57],[172971,172971,5.84],[172972,172973,6.25],[172974,172974,6.85],[172975,172976,5.53],[172977,172977,5.5],[172978,172978,6.39],[172979,172980,6.57],[172981,172981,6.71],[172982,172982,6.6],[172983,172985,5.74],[172986,172986,5.71],[172987,172988,6.36],[172989,172989,6.08],[172990,172991,5.96],[172992,172992,5.91],[172993,172994,5.27],[172995,172995,6.69],[172996,172997,5.53],[172998,172998,6.51],[172999,173000,7.16],[173001,173001,6.02],[173002,173003,6.42],[173004,173004,5.55],[173005,173005,6.32],[173006,173006,6.19],[173007,173007,6.32],[173008,173008,6.7],[173009,173010,6.14],[173011,173011,6.75],[173012,173012,5.53],[173013,173014,5.91],[173015,173015,5.87],[173016,173017,5.53],[173018,173018,7.71],[173019,173020,5.85],[173021,173021,6.35],[173022,173023,5.59],[173024,173024,6.17],[173025,173026,5.91],[173027,173027,6.23],[173028,173028,6.04],[173029,173030,6.68],[173031,173031,6.1],[173032,173032,5.95],[173033,173035,6.57],[173036,173038,7.01],[173039,173039,6.57],[173040,173040,6.51],[173041,173042,5.41],[173043,173043,6.17],[173044,173045,6.74],[173046,173046,6.35],[173047,173048,6.28],[173049,173049,5.48],[173050,173051,6.2],[173052,173052,6.58],[173053,173054,6.27],[173055,173055,6.51],[173056,173056,8.51],[173057,173058,6.68],[173059,173059,6.95],[173060,173060,5.85],[173061,173063,6.15],[173064,173064,5.8],[173065,173066,7.42],[173067,173067,6.51],[173068,173068,6.23],[173069,173070,6.51],[173071,173071,5.7],[173072,173073,6.51],[173074,173074,6.03],[173075,173077,6.69],[173078,173079,6.09],[173080,173080,6.16],[173081,173082,5.64],[173083,173083,6.15],[173084,173084,6.3],[173085,173086,6.2],[173087,173087,6.79],[173088,173089,6.01],[173090,173090,7.19],[173091,173091,6.45],[173092,173093,6.16],[173094,173094,6.01],[173095,173095,6.4],[173096,173097,7.26],[173098,173098,6.29],[173099,173100,6.17],[173101,173101,5.91],[173102,173103,6.81],[173104,173104,5.95],[173105,173105,5.83],[173106,173107,6.3],[173108,173108,6.6],[173109,173109,7.01],[173110,173111,6.82],[173112,173112,6.08],[173113,173114,7.01],[173115,173115,6.61],[173116,173117,7.25],[173118,173118,6.19],[173119,173120,5.54],[173121,173121,5.5],[173122,173123,6.35],[173124,173124,5.95],[173125,173126,5.69],[173127,173127,5.61],[173128,173129,6.14],[173130,173130,6.28],[173131,173132,5.32],[173133,173133,5.25],[173134,173134,6.42],[173135,173136,6.64],[173137,173137,5.5],[173138,173139,6.08],[173140,173140,6.48],[173141,173141,6.14],[173142,173143,6.34],[173144,173144,6.25],[173145,173145,6.51],[173146,173147,5.84],[173148,173148,5.96],[173149,173149,7.01],[173150,173151,6.75],[173152,173152,5.95],[173153,173155,7.01],[173156,173156,7.4],[173157,173158,6.16],[173159,173159,7.01],[173160,173161,6.39],[173162,173162,6.56],[173163,173163,5.95],[173164,173168,5.91],[173169,173169,6.79],[173170,173171,6.39],[173172,173172,5.61],[173173,173173,6.79],[173174,173175,5.95],[173176,173176,6.29],[173177,173177,6.17],[173178,173179,5.85],[173180,173180,5.96],[173181,173181,6.15],[173182,173183,6.17],[173184,173184,6.3],[173185,173185,5.87],[173186,173187,6.79],[173188,173188,5.84],[173189,173190,5.96],[173191,173191,5.95],[173192,173193,5.86],[173194,173194,6.04],[173195,173196,6.12],[173197,173199,11],[173200,173200,2.9],[173201,173202,4.49],[173203,173203,4.13],[173204,173204,5.61],[173205,173206,5.9],[173207,173207,5.27],[173208,173208,5.5],[173209,173209,6.15],[173210,173210,6.01],[173211,173211,3.73],[173212,173212,6.41],[173213,173213,6.17],[173214,173214,5.3],[173215,173215,4.96],[173216,173216,5.48],[173217,173218,7.03],[173219,173219,5.38],[173220,173220,6.74],[173221,173221,5.93],[173222,173222,6.24],[173223,173223,6.25],[173224,173224,6.51],[173225,173225,5.5],[173226,173226,6.29],[173227,173227,5.93],[173228,173228,6.68],[173229,173229,6.42],[173230,173230,6.79],[173231,173231,5.53],[173232,173233,4.26],[173234,173234,3.87],[173235,173235,7.01],[173236,173236,8.95],[173237,173237,6.81],[173238,173238,8.08],[173239,173239,6.2],[173240,173240,5.18],[173241,173241,5.59],[173242,173242,5.96],[173243,173243,5.37],[173244,173244,5.62],[173245,173245,6.26],[173246,173246,5.46],[173247,173247,6.48],[173248,173248,5.84],[173249,173249,6.06],[173250,173250,6.71],[173251,173251,5.47],[173252,173252,5.37],[173253,173253,6.08],[173254,173254,4.62],[173255,173263,5.5],[173264,173264,7.15],[173265,173266,6.65],[173267,173267,8.03],[173268,173269,6.12],[173270,173270,8.01],[173271,173272,6.81],[173273,173273,4.08],[173274,173275,6.95],[173276,173276,6.29],[173277,173278,5.71],[173279,173279,9.98],[173280,173280,8.36],[173281,173281,5.76],[173282,173282,6.04],[173283,173284,6.84],[173285,173286,6.6],[173287,173287,8.15],[173288,173288,8.01],[173289,173289,4.08],[173290,173290,10.23],[173291,173291,6.45],[173292,173292,6.23],[173293,173293,7.15],[173294,173295,7.03],[173296,173297,6.12],[173298,173298,3.13],[173299,173299,8.59],[173300,173301,8.04],[173302,173302,5.76],[173303,173303,8.03],[173304,173304,3.3],[173305,173305,3.33],[173306,173306,5.39],[173307,173307,5.42],[173308,173308,3.33],[173309,173309,3.3],[173310,173310,6.96],[173311,173311,6.01],[173312,173312,7.15],[173313,173313,7.63],[173314,173314,8.57],[173315,173316,9.43],[173317,173317,9.7],[173318,173318,11.9],[173319,173320,8.08],[173321,173323,7.35],[173324,173325,5.98],[173326,173326,10.04],[173327,173327,10.16],[173328,173329,13.16],[173330,173331,9.36],[173332,173332,7.8],[173333,173333,7.64],[173334,173334,7.7],[173335,173335,7.71],[173336,173337,7.7],[173338,173339,11.73],[173340,173341,8.57],[173342,173342,15.29],[173343,173343,11.44],[173344,173344,8.69],[173345,173345,7.96],[173346,173346,8.49],[173347,173347,11.73],[173348,173348,9.36],[173349,173349,10.35],[173350,173350,10.24],[173351,173351,4.95],[173352,173352,9.26],[173353,173353,9.81],[173354,173354,6.68],[173355,173355,9.59],[173356,173356,7.3],[173357,173357,7.74],[173358,173358,6.79],[173359,173359,7.11],[173360,173360,8.47],[173361,173361,8.74],[173362,173362,8.01],[173363,173363,8.81],[173364,173364,9.28],[173365,173366,7.27],[173367,173368,4.77],[173369,173369,6.78],[173370,173370,9.95],[173371,173371,8.39],[173372,173372,9.16],[173373,173373,7.5],[173374,173374,8.5],[173375,173375,6.67],[173376,173378,9.97],[173379,173380,5.81],[173381,173381,10.45],[173382,173382,8.56],[173383,173383,6.89],[173384,173384,7.64],[173385,173385,6.01],[173386,173386,7.9],[173387,173387,8.14],[173388,173389,10.21],[173390,173390,8.81],[173391,173391,10.25],[173392,173392,9.56],[173393,173393,9.18],[173394,173394,10.41],[173395,173395,9.83],[173396,173396,7.5],[173397,173397,7.12],[173398,173398,8.23],[173399,173399,6.68],[173400,173400,6.03],[173401,173401,8.07],[173402,173403,7.77],[173404,173404,8.39],[173405,173405,10.58],[173406,173407,7.72],[173408,173409,9.66],[173410,173411,10.09],[173412,173412,9.61],[173413,173413,9.97],[173414,173414,7.95],[173415,173415,8.45],[173416,173416,7.47],[173417,173417,8.91],[173418,173418,7.39],[173419,173419,8.99],[173420,173420,8.17],[173421,173421,10.43],[173422,173422,8.05],[173423,173423,6.75],[173424,173424,10.05],[173425,173425,7.47],[173426,173426,7.8],[173427,173427,7.47],[173428,173428,7.82],[173429,173429,8.15],[173430,173431,6.23],[173432,173432,8.1],[173433,173433,9.76],[173434,173434,6.59],[173435,173435,8.72],[173436,173436,6.52],[173437,173438,7.99],[173439,173440,7.57],[173441,173442,10.21],[173443,173444,9.43],[173445,173445,9.55],[173446,173446,10.32],[173447,173447,8.58],[173448,173448,8.81],[173449,173449,5.49],[173450,173450,7.85],[173451,173452,7.04],[173453,173453,9.03],[173454,173454,5.52],[173455,173455,8.05],[173456,173456,9.01],[173457,173457,7.39],[173458,173458,9.76],[173459,173459,10.91],[173460,173460,7.7],[173461,173461,8.6],[173462,173462,8.84],[173463,173463,8.45],[173464,173464,7.88],[173465,173465,7.77],[173466,173466,8.57],[173467,173467,8.69],[173468,173468,9.7],[173469,173469,8.25],[173470,173470,8.58],[173471,173473,7.99],[173474,173474,9.38],[173475,173475,10.69],[173476,173476,5.84],[173477,173477,6.54],[173478,173478,8.91],[173479,173479,10.69],[173480,173483,7.38],[173484,173487,7.8],[173488,173491,8.48],[173492,173492,6.79],[173493,173494,5.98],[173495,173495,7.39],[173496,173496,8.36],[173497,173497,6.73],[173498,173498,8.74],[173499,173500,9.22],[173501,173501,9.32],[173502,173502,9.21],[173503,173503,8.49],[173504,173504,9.32],[173505,173506,10.69],[173507,173508,7.72],[173509,173510,9.07],[173511,173512,8.98],[173513,173514,6.47],[173515,173515,7.42],[173516,173516,9.03],[173517,173517,7.42],[173518,173518,9.23],[173519,173520,5.91],[173521,173522,8.12],[173523,173523,8],[173524,173524,8.93],[173525,173525,8],[173526,173526,8.93],[173527,173527,5.99],[173528,173529,7.52],[173530,173530,6.15],[173531,173531,8.1],[173532,173532,11.54],[173533,173533,8.65],[173534,173534,6.74],[173535,173535,6.23],[173536,173536,10.52],[173537,173537,7.78],[173538,173538,13.82],[173539,173539,8.28],[173540,173540,8.37],[173541,173541,10.65],[173542,173542,8.12],[173543,173543,8.34],[173544,173544,6.3],[173545,173545,7.31],[173546,173546,7.01],[173547,173547,8.11],[173548,173550,9.76],[173551,173552,9.6],[173553,173554,8.1],[173555,173555,9.02],[173556,173556,9.9],[173557,173558,8.91],[173559,173562,6.71],[173563,173566,9.95],[173567,173567,7.66],[173568,173568,9.09],[173569,173569,8.98],[173570,173570,8.76],[173571,173575,7.77],[173576,173576,9.9],[173577,173577,6.25],[173578,173578,8.33],[173579,173579,9.05],[173580,173580,6.98],[173581,173581,5.18],[173582,173582,6.26],[173583,173583,8.16],[173584,173584,14.81],[173585,173585,8.49],[173586,173586,10.79],[173587,173587,5.4],[173588,173588,9.47],[173589,173589,10.21],[173590,173590,7.59],[173591,173591,7.8],[173592,173592,8],[173593,173593,8.16],[173594,173594,11.86],[173595,173595,10.05],[173596,173596,7.94],[173597,173597,9.09],[173598,173598,10.11],[173599,173599,6.84],[173600,173600,6.54],[173601,173601,3.3],[173602,173602,7.28],[173603,173603,7.33],[173604,173604,7.19],[173605,173605,7.14],[173606,173606,6.01],[173607,173607,7.2],[173608,173608,6.47],[173609,173609,6.84],[173610,173610,9.87],[173611,173611,5.97],[173612,173631,5.5],[173632,173632,8.23],[173633,173633,6.12],[173634,173634,8.23],[173635,173635,6.12],[173636,173636,8.17],[173637,173637,4.99],[173638,173638,3.42],[173639,173639,2.86],[173640,173640,7.81],[173641,173641,6.29],[173642,173643,6.36],[173644,173644,9.93],[173645,173645,7.8],[173646,173646,7.77],[173647,173647,6.53],[173648,173648,10.37],[173649,173649,9],[173650,173650,8.9],[173651,173651,7.68],[173652,173652,11.24],[173653,173653,8.87],[173654,173654,10.3],[173655,173655,8.19],[173656,173656,8],[173657,173657,6.18],[173658,173658,7.81],[173659,173659,6.62],[173660,173660,10.19],[173661,173661,8.71],[173662,173662,7.97],[173663,173663,7.02],[173664,173664,7.93],[173665,173665,6.51],[173666,173666,8.46],[173667,173667,7.6],[173668,173668,7.88],[173669,173669,7.09],[173670,173670,11.48],[173671,173671,10.3],[173672,173672,7.92],[173673,173673,6.3],[173674,173674,7.92],[173675,173675,6.3],[173676,173676,10.45],[173677,173677,7.78],[173678,173678,7.5],[173679,173682,0],[173683,173683,5.54],[173684,173693,0],[173694,173695,5.5],[173696,173696,8.46],[173697,173697,7.29],[173698,173698,4.77],[173699,173699,3.81],[173700,173700,13.86],[173701,173701,12.19],[173702,173702,10.05],[173703,173704,8.46],[173705,173705,7.29],[173706,173706,8.68],[173707,173707,7.44],[173708,173708,6.24],[173709,173709,5.91],[173710,173710,8],[173711,173711,6.93],[173712,173712,6.73],[173713,173713,5.91],[173714,173714,9.27],[173715,173715,8.01],[173716,173716,7.64],[173717,173717,6.41],[173718,173718,9.98],[173719,173719,8.7],[173720,173720,8.65],[173721,173721,7.35],[173722,173722,5.79],[173723,173723,4.95],[173724,173724,2.16],[173725,173725,1.86],[173726,173727,0],[173728,173728,7.26],[173729,173729,8.45],[173730,173730,6.01],[173731,173731,7.22],[173732,173732,7.78],[173733,173733,6.79],[173734,173734,6.36],[173735,173735,6.67],[173736,173736,6.05],[173737,173737,7.97],[173738,173738,7.25],[173739,173739,6.6],[173740,173740,7.27],[173741,173741,6.29],[173742,173742,6.04],[173743,173743,6.6],[173744,173744,7.01],[173745,173745,6.05],[173746,173746,6.23],[173747,173747,5.76],[173748,173748,7.6],[173749,173749,6.47],[173750,173750,8.15],[173751,173751,7.88],[173752,173752,8.6],[173753,173753,5.28],[173754,173754,6.83],[173755,173755,6.8],[173756,173756,7.03],[173757,173757,6.6],[173758,173758,8.15],[173759,173761,6.81],[173762,173762,5.86],[173763,173763,8.47],[173764,173764,7.67],[173765,173765,6.62],[173766,173766,6.26],[173767,173767,6.83],[173768,173768,7.37],[173769,173769,6.29],[173770,173770,8.23],[173771,173771,6.19],[173772,173772,5.31],[173773,173773,6.01],[173774,173774,6.6],[173775,173775,7.81],[173776,173776,5.11],[173777,173777,6.83],[173778,173778,5.72],[173779,173779,7.47],[173780,173780,7.84],[173781,173781,5.72],[173782,173782,6.37],[173783,173783,7.91],[173784,173784,7.9],[173785,173785,6.6],[173786,173786,5.76],[173787,173787,7.16],[173788,173788,6.81],[173789,173789,7.35],[173790,173790,6.37],[194560,194814,5.5],[194815,194815,8.69],[194816,195102,11],[917504,917504,0],[917505,917511,3.66],[917512,917512,0],[917513,917517,3.06],[917518,917532,3.66],[917533,917533,0],[917534,917535,3.66],[917536,917537,3.06],[917538,917538,5.09],[917539,917540,6.12],[917541,917541,11],[917542,917542,7.53],[917543,917543,3.06],[917544,917545,3.26],[917546,917546,4.48],[917547,917547,6.6],[917548,917548,3.06],[917549,917549,4.48],[917550,917550,3.06],[917551,917551,4.08],[917552,917561,6.12],[917562,917563,3.06],[917564,917566,6.6],[917567,917567,6.12],[917568,917568,8.8],[917569,917569,7.53],[917570,917570,7.74],[917571,917572,8.15],[917573,917573,7.13],[917574,917574,6.52],[917575,917575,8.35],[917576,917576,8.15],[917577,917577,3.24],[917578,917578,6.12],[917579,917579,7.94],[917580,917580,6.52],[917581,917581,9.98],[917582,917582,8.15],[917583,917583,8.56],[917584,917584,7.34],[917585,917585,8.56],[917586,917586,7.94],[917587,917587,7.14],[917588,917588,6.72],[917589,917589,8.15],[917590,917590,6.93],[917591,917591,10.38],[917592,917593,7.34],[917594,917594,7.13],[917595,917595,3.66],[917596,917596,4.08],[917597,917597,3.66],[917598,917598,6.6],[917599,917599,5.5],[917600,917600,2.85],[917601,917601,6.31],[917602,917602,6.72],[917603,917603,6.31],[917604,917604,6.72],[917605,917605,6.31],[917606,917606,3.66],[917607,917607,6.72],[917608,917608,6.52],[917609,917609,2.84],[917610,917610,3.06],[917611,917611,6.31],[917612,917612,2.84],[917613,917613,9.97],[917614,917614,6.52],[917615,917617,6.72],[917618,917618,4.28],[917619,917619,5.91],[917620,917620,3.87],[917621,917621,6.52],[917622,917622,5.72],[917623,917623,8.95],[917624,917624,5.91],[917625,917626,5.71],[917627,917627,3.66],[917628,917628,2.45],[917629,917629,3.66],[917630,917630,6.6]]');

/***/ }),

/***/ 4769:
/***/ ((module) => {

module.exports = JSON.parse('[[32,32,3.42],[33,33,4.02],[34,34,5.87],[35,35,8.67],[36,36,7.11],[37,37,12.72],[38,38,8.62],[39,39,3.32],[40,41,5.43],[42,42,7.11],[43,43,8.67],[44,44,3.61],[45,45,4.8],[46,46,3.61],[47,47,6.89],[48,57,7.11],[58,59,4.02],[60,62,8.67],[63,63,6.17],[64,64,9.64],[65,65,7.76],[66,66,7.62],[67,67,7.24],[68,68,8.3],[69,69,6.83],[70,70,6.5],[71,71,8.11],[72,72,8.37],[73,73,5.46],[74,74,5.55],[75,75,7.71],[76,76,6.37],[77,77,9.48],[78,78,8.47],[79,79,8.5],[80,80,7.33],[81,81,8.5],[82,82,7.82],[83,83,7.1],[84,84,6.82],[85,85,8.12],[86,86,7.64],[87,87,11.28],[88,88,7.64],[89,89,7.37],[90,90,6.92],[91,91,5.43],[92,92,6.89],[93,93,5.43],[94,94,8.67],[95,96,7.11],[97,97,6.68],[98,98,6.99],[99,99,5.88],[100,100,6.99],[101,101,6.64],[102,102,4.22],[103,103,6.99],[104,104,7.12],[105,105,3.42],[106,106,4.03],[107,107,6.71],[108,108,3.42],[109,109,10.58],[110,110,7.12],[111,111,6.87],[112,113,6.99],[114,114,4.97],[115,115,5.93],[116,116,4.56],[117,117,7.12],[118,118,6.5],[119,119,9.79],[120,120,6.69],[121,121,6.51],[122,122,5.97],[123,123,7.11],[124,124,5.43],[125,125,7.11],[126,126,8.67],[160,160,3.42],[161,161,4.02],[162,165,7.11],[166,166,5.43],[167,168,7.11],[169,169,9.64],[170,170,5.98],[171,171,8.5],[172,172,8.67],[173,173,0],[174,174,9.64],[175,175,7.11],[176,176,5.87],[177,177,8.67],[178,179,5.98],[180,180,7.11],[181,181,7.21],[182,182,7.11],[183,183,3.61],[184,184,7.11],[185,186,5.98],[187,187,8.5],[188,190,11.82],[191,191,6.17],[192,197,7.76],[198,198,10.94],[199,199,7.24],[200,203,6.83],[204,207,5.46],[208,208,8.3],[209,209,8.47],[210,214,8.5],[215,215,8.67],[216,216,8.5],[217,220,8.12],[221,221,7.37],[222,222,7.35],[223,223,7.13],[224,229,6.68],[230,230,10.18],[231,231,5.88],[232,235,6.64],[236,239,3.42],[240,240,6.79],[241,241,7.12],[242,246,6.87],[247,247,8.67],[248,248,6.87],[249,252,7.12],[253,253,6.51],[254,254,6.99],[256,256,7.76],[257,257,6.68],[258,258,7.76],[259,259,6.68],[260,260,7.76],[261,261,6.68],[262,262,7.24],[263,263,5.88],[264,264,7.24],[265,265,5.88],[266,266,7.24],[267,267,5.88],[268,268,7.24],[269,269,5.88],[270,270,8.3],[271,271,8.8],[272,272,8.3],[273,273,6.99],[274,274,6.83],[275,275,6.64],[276,276,6.83],[277,277,6.64],[278,278,6.83],[279,279,6.64],[280,280,6.83],[281,281,6.64],[282,282,6.83],[283,283,6.64],[284,284,8.11],[285,285,6.99],[286,286,8.11],[287,287,6.99],[288,288,8.11],[289,289,6.99],[290,290,8.11],[291,291,6.99],[292,292,8.37],[293,293,7.12],[294,294,8.37],[295,295,7.12],[296,296,5.46],[297,297,3.42],[298,298,5.46],[299,299,3.42],[300,300,5.46],[301,301,3.42],[302,302,5.46],[303,303,3.42],[304,304,5.46],[305,305,3.42],[306,306,10.07],[307,307,7.28],[308,308,5.55],[309,309,4.03],[310,310,7.71],[311,312,6.71],[313,313,6.37],[314,314,3.42],[315,315,6.37],[316,316,3.42],[317,317,6.37],[318,318,5.22],[319,319,6.37],[320,320,5.57],[321,321,6.42],[322,322,3.52],[323,323,8.47],[324,324,7.12],[325,325,8.47],[326,326,7.12],[327,327,8.47],[328,328,7.12],[329,329,8.25],[330,330,8.47],[331,331,7.12],[332,332,8.5],[333,333,6.87],[334,334,8.5],[335,335,6.87],[336,336,8.5],[337,337,6.87],[338,338,11.35],[339,339,10.68],[340,340,7.82],[341,341,4.97],[342,342,7.82],[343,343,4.97],[344,344,7.82],[345,345,4.97],[346,346,7.1],[347,347,5.93],[348,348,7.1],[349,349,5.93],[350,350,7.1],[351,351,5.93],[352,352,7.1],[353,353,5.93],[354,354,6.82],[355,355,4.56],[356,356,6.82],[357,357,4.65],[358,358,6.82],[359,359,4.56],[360,360,8.12],[361,361,7.12],[362,362,8.12],[363,363,7.12],[364,364,8.12],[365,365,7.12],[366,366,8.12],[367,367,7.12],[368,368,8.12],[369,369,7.12],[370,370,8.12],[371,371,7.12],[372,372,11.28],[373,373,9.79],[374,374,7.37],[375,375,6.51],[376,376,7.37],[377,377,6.92],[378,378,5.97],[379,379,6.92],[380,380,5.97],[381,381,6.92],[382,382,5.97],[384,384,5.56],[385,385,7.55],[386,386,6.61],[387,387,5.56],[388,388,6.61],[389,389,5.56],[390,391,7.22],[392,392,4.44],[393,393,7.22],[394,394,8.16],[395,395,6.61],[396,396,5.56],[397,397,5.19],[398,398,6.67],[399,399,8.05],[400,400,5.28],[401,401,6.11],[402,402,7.11],[403,403,7.78],[404,404,7.22],[405,405,7.82],[406,406,3.07],[407,407,3.89],[408,408,7.78],[409,409,5.56],[410,410,2.78],[411,411,4.91],[412,412,9.4],[413,413,7.22],[414,414,5.56],[415,415,7.78],[416,416,9.14],[417,417,6.87],[418,418,10.56],[419,419,7.71],[420,420,6.94],[421,421,5.56],[422,422,6.11],[423,423,5.56],[424,424,3.89],[425,425,6.54],[426,426,5.13],[427,427,3.33],[428,428,6.67],[429,429,3.33],[430,430,6.67],[431,431,8.46],[432,432,7.42],[433,433,8.01],[434,434,6.52],[435,435,7.91],[436,436,5],[437,437,6.67],[438,438,4.44],[439,440,5.82],[441,441,4.58],[442,442,4.53],[443,443,5],[444,444,5.04],[445,445,3.85],[446,446,3.33],[447,447,5.96],[448,448,2.2],[449,449,3.24],[450,450,2.79],[451,451,3.33],[452,452,13.89],[453,453,11.66],[454,454,10],[455,455,11.67],[456,456,10],[457,457,6.11],[458,458,12.22],[459,459,10.55],[460,460,8.89],[461,461,7.22],[462,462,5],[463,463,3.89],[464,464,2.78],[465,465,7.78],[466,466,5],[467,467,7.22],[468,468,5.56],[469,469,7.22],[470,470,5.56],[471,471,8.12],[472,472,7.12],[473,473,7.22],[474,474,5.56],[475,475,8.12],[476,476,7.12],[477,477,4.44],[478,478,7.22],[479,479,5],[480,480,7.22],[481,481,5],[482,482,10],[483,483,7.22],[484,484,7.78],[485,485,5],[486,486,7.78],[487,487,5],[488,488,7.78],[489,489,5.56],[490,490,7.78],[491,491,5],[492,492,7.78],[493,493,5],[494,494,5.82],[495,495,4.58],[496,496,3.33],[497,497,13.89],[498,498,11.66],[499,499,10],[500,500,8.11],[501,501,6.99],[502,502,9.7],[503,503,6.46],[504,504,8.47],[505,505,7.12],[506,506,7.76],[507,507,6.68],[508,508,10.94],[509,509,10.18],[510,510,8.5],[511,511,6.87],[512,512,7.22],[513,513,5],[514,514,7.22],[515,515,5],[516,516,6.67],[517,517,4.44],[518,518,6.67],[519,519,4.44],[520,520,3.89],[521,521,2.78],[522,522,3.89],[523,523,2.78],[524,524,7.78],[525,525,5],[526,526,7.78],[527,527,5],[528,528,7.22],[529,529,4.44],[530,530,7.22],[531,531,4.44],[532,532,7.22],[533,533,5.56],[534,534,7.22],[535,535,5.56],[536,536,7.1],[537,537,5.93],[538,538,6.82],[539,539,4.56],[540,540,5.54],[541,541,3.74],[542,542,7.78],[543,543,5.56],[544,544,7.34],[545,545,5.56],[546,546,6.76],[547,547,5.01],[548,548,6.67],[549,549,4.44],[550,550,7.22],[551,551,5],[552,552,6.67],[553,553,4.44],[554,554,7.78],[555,555,5],[556,556,7.78],[557,557,5],[558,558,7.78],[559,559,5],[560,560,7.78],[561,561,5],[562,562,7.22],[563,563,5],[564,564,2.78],[565,565,5.56],[566,566,3.61],[567,567,3.33],[568,569,8.23],[570,571,7.22],[572,572,5],[573,574,6.67],[575,575,3.89],[576,576,4.44],[577,577,5.32],[578,578,4.66],[579,579,6.67],[580,580,7.22],[581,581,7.17],[582,582,6.67],[583,583,4.44],[584,584,5],[585,585,3.33],[586,586,8.25],[587,587,5.56],[588,588,7.22],[589,589,4.44],[590,590,7.22],[880,880,4.25],[881,881,3.35],[882,882,6.3],[883,883,5.3],[884,885,3.33],[886,886,7.3],[887,887,5.93],[888,889,10],[890,890,3.33],[891,893,4.44],[894,894,4.02],[895,895,3.33],[896,899,10],[900,901,7.11],[902,902,7.97],[903,903,4.02],[904,904,8.48],[905,905,10.01],[906,906,7.05],[907,907,10],[908,908,9.68],[909,909,10],[910,910,9.39],[911,911,9.7],[912,912,3.42],[913,913,7.76],[914,914,7.62],[915,915,6.37],[916,916,8.06],[917,917,6.83],[918,918,6.92],[919,919,8.37],[920,920,8.5],[921,921,5.46],[922,922,7.71],[923,923,7.76],[924,924,9.48],[925,925,8.47],[926,926,7.15],[927,927,8.5],[928,928,8.37],[929,929,7.33],[930,930,10],[931,931,6.84],[932,932,6.82],[933,933,7.37],[934,934,9.52],[935,935,7.64],[936,936,9.76],[937,937,8.44],[938,938,5.46],[939,939,7.37],[940,940,6.99],[941,941,5.85],[942,942,7.12],[943,943,3.42],[944,944,7.06],[945,945,6.99],[946,946,7.16],[947,947,6.51],[948,948,6.87],[949,949,5.85],[950,950,5.49],[951,951,7.12],[952,952,7],[953,953,3.42],[954,954,6.71],[955,955,6.51],[956,956,7.21],[957,957,6.5],[958,958,5.81],[959,959,6.87],[960,960,7.2],[961,961,6.99],[962,962,5.62],[963,963,7.26],[964,964,5.35],[965,965,7.06],[966,966,9.15],[967,967,6.35],[968,968,9.41],[969,969,8.94],[970,970,3.42],[971,971,7.06],[972,972,6.87],[973,973,7.06],[974,974,8.94],[975,975,5.58],[976,976,5.27],[977,977,5.99],[978,978,7.22],[979,979,9.23],[980,980,7.22],[981,981,6.24],[982,982,7.31],[983,983,5.8],[984,984,7.78],[985,985,5],[986,986,7.22],[987,987,4.22],[988,988,6.11],[989,989,5.46],[990,990,5.95],[991,991,4.61],[992,992,7.51],[993,993,5.54],[994,994,8.7],[995,995,8.33],[996,996,7.25],[997,997,5.86],[998,998,7.4],[999,999,4.44],[1000,1000,6.25],[1001,1001,5.86],[1002,1002,6.82],[1003,1003,6.05],[1004,1004,7.25],[1005,1005,5.16],[1006,1006,5.4],[1007,1007,4.5],[1008,1008,5.8],[1009,1009,5],[1010,1010,4.44],[1011,1011,3.33],[1012,1012,7.78],[1013,1014,4.21],[1015,1015,6.11],[1016,1016,5.56],[1017,1017,7.22],[1018,1018,9.44],[1019,1019,6.81],[1020,1020,5.35],[1021,1022,7.22],[1024,1025,6.83],[1026,1026,9.11],[1027,1027,6.37],[1028,1028,7.42],[1029,1029,7.1],[1030,1031,5.46],[1032,1032,5.55],[1033,1033,12.22],[1034,1034,12.14],[1035,1035,9.36],[1036,1036,7.71],[1037,1037,8.46],[1038,1038,7.37],[1039,1039,8.37],[1040,1040,7.76],[1041,1041,7.58],[1042,1042,7.62],[1043,1043,6.37],[1044,1044,8.41],[1045,1045,6.83],[1046,1046,11.15],[1047,1047,7.07],[1048,1049,8.46],[1050,1050,7.71],[1051,1051,8.45],[1052,1052,9.48],[1053,1053,8.37],[1054,1054,8.5],[1055,1055,8.37],[1056,1056,7.33],[1057,1057,7.24],[1058,1058,6.82],[1059,1059,7.37],[1060,1060,9.52],[1061,1061,7.64],[1062,1062,8.5],[1063,1063,7.87],[1064,1064,11.64],[1065,1065,11.77],[1066,1066,9.07],[1067,1067,10.63],[1068,1068,7.58],[1069,1069,7.42],[1070,1070,11.95],[1071,1071,7.95],[1072,1072,6.68],[1073,1073,6.97],[1074,1074,6.77],[1075,1075,5.31],[1076,1076,6.91],[1077,1077,6.64],[1078,1078,9.99],[1079,1079,5.88],[1080,1081,7.2],[1082,1082,6.71],[1083,1083,7.09],[1084,1084,8.3],[1085,1085,7.2],[1086,1086,6.87],[1087,1087,7.2],[1088,1088,6.99],[1089,1089,5.98],[1090,1090,5.35],[1091,1091,6.51],[1092,1092,9.66],[1093,1093,6.69],[1094,1094,7.29],[1095,1095,6.84],[1096,1096,10.02],[1097,1097,10.13],[1098,1098,7.43],[1099,1099,9.37],[1100,1100,6.49],[1101,1101,6.06],[1102,1102,9.94],[1103,1103,6.82],[1104,1105,6.64],[1106,1106,7.12],[1107,1107,5.31],[1108,1108,6.05],[1109,1109,5.93],[1110,1111,3.42],[1112,1112,4.03],[1113,1113,10.12],[1114,1114,10.2],[1115,1115,7.12],[1116,1116,6.71],[1117,1117,7.2],[1118,1118,6.51],[1119,1119,7.2],[1120,1120,12.5],[1121,1121,6.19],[1122,1122,7.64],[1123,1123,6],[1124,1124,10.07],[1125,1125,6.64],[1126,1126,7.22],[1127,1127,5],[1128,1128,10.98],[1129,1129,7.73],[1130,1130,9.89],[1131,1131,7.25],[1132,1132,13.6],[1133,1133,9.99],[1134,1134,5.28],[1135,1135,4.02],[1136,1136,7.8],[1137,1137,6.88],[1138,1138,7.78],[1139,1139,5],[1140,1140,8.15],[1141,1141,6.05],[1142,1142,8.15],[1143,1143,6.05],[1144,1144,13.52],[1145,1145,12.28],[1146,1146,8.24],[1147,1147,5.85],[1148,1148,10.46],[1149,1149,8.98],[1150,1150,12.5],[1151,1151,6.19],[1152,1152,7.22],[1153,1153,4.44],[1154,1154,3.38],[1155,1158,0],[1159,1159,6.36],[1160,1161,0],[1162,1162,7.78],[1163,1163,5.76],[1164,1164,6.61],[1165,1165,5.29],[1166,1166,6.11],[1167,1167,5.56],[1168,1168,6.37],[1169,1169,5.31],[1170,1170,6.37],[1171,1171,5.31],[1172,1172,7.22],[1173,1173,5.77],[1174,1174,11.15],[1175,1175,9.99],[1176,1176,5.28],[1177,1177,4.02],[1178,1178,7.71],[1179,1179,6.71],[1180,1180,7.71],[1181,1181,6.71],[1182,1182,7.25],[1183,1183,5.76],[1184,1184,8.29],[1185,1185,6.3],[1186,1186,8.37],[1187,1187,7.2],[1188,1188,9.21],[1189,1189,6.67],[1190,1190,11.15],[1191,1191,8.44],[1192,1192,8.71],[1193,1193,6.87],[1194,1194,7.22],[1195,1195,4.44],[1196,1196,6.67],[1197,1197,4.91],[1198,1198,7.37],[1199,1199,6.51],[1200,1200,7.37],[1201,1201,6.51],[1202,1202,7.64],[1203,1203,6.69],[1204,1204,8.67],[1205,1205,6.09],[1206,1206,7.34],[1207,1207,5.64],[1208,1208,7.87],[1209,1209,6.84],[1210,1210,7.87],[1211,1211,7.12],[1212,1212,10.15],[1213,1213,7.88],[1214,1214,10.15],[1215,1215,7.88],[1216,1216,3.89],[1217,1217,9.89],[1218,1218,7.25],[1219,1219,7.37],[1220,1220,5.93],[1221,1221,7.45],[1222,1222,5.61],[1223,1223,7.78],[1224,1224,5.76],[1225,1225,7.78],[1226,1226,5.76],[1227,1227,7.34],[1228,1228,5.64],[1229,1229,9.44],[1230,1230,6.81],[1231,1231,2.78],[1232,1232,7.22],[1233,1233,5],[1234,1234,7.22],[1235,1235,5],[1236,1236,10],[1237,1237,7.22],[1238,1238,6.67],[1239,1239,4.44],[1240,1240,8.05],[1241,1241,6.64],[1242,1242,7.39],[1243,1243,4.44],[1244,1244,9.89],[1245,1245,7.25],[1246,1246,5.28],[1247,1247,4.02],[1248,1248,5.28],[1249,1249,4.58],[1250,1250,7.78],[1251,1251,5.76],[1252,1252,7.78],[1253,1253,5.76],[1254,1254,7.78],[1255,1255,5],[1256,1256,8.5],[1257,1257,6.87],[1258,1258,7.78],[1259,1259,5],[1260,1260,6.78],[1261,1261,4.32],[1262,1262,7.34],[1263,1263,5],[1264,1264,7.34],[1265,1265,5],[1266,1266,7.34],[1267,1267,5],[1268,1268,7.34],[1269,1269,5.64],[1270,1270,6.36],[1271,1271,4.54],[1272,1272,9.82],[1273,1273,7.81],[1274,1274,6.36],[1275,1275,4.54],[1276,1276,7.22],[1277,1277,5],[1278,1278,7.22],[1280,1280,6.61],[1281,1281,5.56],[1282,1282,8.52],[1283,1283,7.81],[1284,1284,7.97],[1285,1285,6.78],[1286,1286,5.95],[1287,1287,4.6],[1288,1288,9.36],[1289,1289,7.79],[1290,1290,9.7],[1291,1291,7.93],[1292,1292,7.78],[1293,1293,5.91],[1294,1294,7.16],[1295,1295,6.18],[1296,1296,5.28],[1297,1297,4.02],[1298,1298,7.45],[1299,1299,5.61],[1300,1300,7.62],[1301,1301,6.93],[1302,1302,8.3],[1303,1303,6.81],[1304,1304,10.31],[1305,1305,7.37],[1306,1306,8.5],[1307,1307,6.99],[1308,1308,11.28],[1309,1309,9.79],[1310,1310,6.85],[1311,1311,6.31],[1312,1312,9.81],[1313,1313,7.96],[1314,1314,11.11],[1315,1315,9.08],[1316,1316,7.08],[1317,1317,6.18],[1318,1318,6.89],[1319,1319,6.31],[1320,1320,4.44],[1321,1321,4.03],[1322,1322,8.91],[1323,1323,8.13],[1324,1324,5.62],[1325,1325,5.24],[1326,1326,6.83],[7424,7424,5.19],[7425,7425,7.03],[7426,7426,7.22],[7427,7427,5.4],[7428,7428,5.23],[7429,7430,5.77],[7431,7431,4.79],[7432,7432,4.02],[7433,7433,2.78],[7434,7434,3.98],[7435,7435,6.13],[7436,7436,4.84],[7437,7437,6.81],[7438,7438,5.76],[7439,7439,5],[7440,7440,5.23],[7441,7443,5.56],[7444,7444,7.22],[7445,7445,5.01],[7446,7447,5],[7448,7448,5.29],[7449,7450,5.41],[7451,7451,4.91],[7452,7452,5.46],[7453,7453,5.39],[7454,7454,7.13],[7455,7455,5.39],[7456,7456,5],[7457,7457,7.22],[7458,7458,4.44],[7459,7459,4.2],[7460,7460,4.63],[7461,7461,5.44],[7462,7462,4.54],[7463,7463,4.87],[7464,7464,5.76],[7465,7465,5.29],[7466,7466,5.99],[7467,7467,5.61],[7468,7468,4.27],[7469,7469,5.97],[7470,7471,3.96],[7472,7472,4.3],[7473,7474,3.9],[7475,7475,4.65],[7476,7476,4.72],[7477,7477,2.37],[7478,7478,3.19],[7479,7479,4.77],[7480,7480,3.97],[7481,7481,5.73],[7482,7482,4.4],[7483,7483,4.79],[7484,7484,4.51],[7485,7485,3.93],[7486,7486,3.63],[7487,7487,4.44],[7488,7488,3.85],[7489,7489,4.38],[7490,7490,5.95],[7491,7492,2.92],[7493,7493,3.37],[7494,7494,4.19],[7495,7495,3.24],[7496,7496,3.26],[7497,7498,2.59],[7499,7500,2.52],[7501,7501,2.96],[7502,7502,1.77],[7503,7503,3.36],[7504,7504,4.92],[7505,7505,3.07],[7506,7506,2.87],[7507,7507,2.59],[7508,7509,2.86],[7510,7510,3.26],[7511,7511,2.12],[7512,7512,3.25],[7513,7513,3.11],[7514,7514,4.92],[7515,7515,2.99],[7516,7516,3.22],[7517,7517,2.92],[7518,7518,2.81],[7519,7519,2.94],[7520,7520,3.57],[7521,7521,2.84],[7522,7522,1.77],[7523,7523,2.54],[7524,7524,3.25],[7525,7525,2.99],[7526,7526,2.92],[7527,7527,2.81],[7528,7528,2.87],[7529,7529,3.57],[7530,7530,2.84],[7531,7531,7.51],[7532,7533,5.56],[7534,7534,3.33],[7535,7535,8.33],[7536,7537,5.56],[7538,7538,4.44],[7539,7539,4.01],[7540,7540,3.89],[7541,7541,3.33],[7542,7542,4.44],[7543,7543,5],[7544,7544,3.33],[7545,7545,5.19],[7546,7546,8.45],[7547,7547,2.88],[7548,7548,3.1],[7549,7549,5.56],[7550,7550,5.46],[7680,7680,7.22],[7681,7681,5],[7682,7682,6.67],[7683,7683,5.56],[7684,7684,7.62],[7685,7685,6.99],[7686,7686,6.67],[7687,7687,5.56],[7688,7688,7.24],[7689,7689,5.88],[7690,7690,7.22],[7691,7691,5.56],[7692,7692,8.3],[7693,7693,6.99],[7694,7694,7.22],[7695,7695,5.56],[7696,7696,7.22],[7697,7697,5.56],[7698,7698,7.22],[7699,7699,5.56],[7700,7700,6.83],[7701,7701,6.64],[7702,7702,6.83],[7703,7703,6.64],[7704,7704,6.67],[7705,7705,4.44],[7706,7706,6.67],[7707,7707,4.44],[7708,7708,6.67],[7709,7709,4.44],[7710,7710,6.11],[7711,7711,3.33],[7712,7712,7.78],[7713,7713,5],[7714,7714,7.78],[7715,7715,5.56],[7716,7716,8.37],[7717,7717,7.12],[7718,7718,7.78],[7719,7719,5.56],[7720,7720,7.78],[7721,7721,5.56],[7722,7722,7.78],[7723,7723,5.56],[7724,7724,3.89],[7725,7725,2.78],[7726,7726,5.46],[7727,7727,3.42],[7728,7728,7.71],[7729,7729,6.71],[7730,7730,7.71],[7731,7731,6.71],[7732,7732,7.78],[7733,7733,5.56],[7734,7734,6.37],[7735,7735,3.42],[7736,7736,6.67],[7737,7737,2.78],[7738,7738,6.67],[7739,7739,2.78],[7740,7740,6.67],[7741,7741,2.78],[7742,7742,9.48],[7743,7743,10.58],[7744,7744,9.44],[7745,7745,8.33],[7746,7746,9.48],[7747,7747,10.58],[7748,7748,7.22],[7749,7749,5.56],[7750,7750,8.47],[7751,7751,7.12],[7752,7752,7.22],[7753,7753,5.56],[7754,7754,7.22],[7755,7755,5.56],[7756,7756,8.5],[7757,7757,6.87],[7758,7758,7.78],[7759,7759,5],[7760,7760,8.5],[7761,7761,6.87],[7762,7762,8.5],[7763,7763,6.87],[7764,7764,7.33],[7765,7765,6.99],[7766,7766,6.11],[7767,7767,5.56],[7768,7768,7.22],[7769,7769,4.44],[7770,7770,7.82],[7771,7771,4.97],[7772,7772,7.22],[7773,7773,4.44],[7774,7774,7.22],[7775,7775,4.44],[7776,7776,5.56],[7777,7777,3.89],[7778,7778,7.1],[7779,7779,5.93],[7780,7780,5.56],[7781,7781,3.89],[7782,7782,5.56],[7783,7783,3.89],[7784,7784,5.56],[7785,7785,3.89],[7786,7786,6.67],[7787,7787,3.33],[7788,7788,6.82],[7789,7789,4.56],[7790,7790,6.67],[7791,7791,3.33],[7792,7792,6.67],[7793,7793,3.33],[7794,7794,7.22],[7795,7795,5.56],[7796,7796,7.22],[7797,7797,5.56],[7798,7798,7.22],[7799,7799,5.56],[7800,7800,8.12],[7801,7801,7.12],[7802,7802,7.22],[7803,7803,5.56],[7804,7804,7.64],[7805,7805,6.5],[7806,7806,7.64],[7807,7807,6.5],[7808,7808,11.28],[7809,7809,9.79],[7810,7810,11.28],[7811,7811,9.79],[7812,7812,11.28],[7813,7813,9.79],[7814,7814,10],[7815,7815,7.22],[7816,7816,11.28],[7817,7817,9.79],[7818,7818,7.22],[7819,7819,5],[7820,7820,7.22],[7821,7821,5],[7822,7822,7.22],[7823,7823,5],[7824,7824,6.67],[7825,7825,4.44],[7826,7826,6.92],[7827,7827,5.97],[7828,7828,6.67],[7829,7829,4.44],[7830,7830,5.56],[7831,7831,3.33],[7832,7832,7.22],[7833,7834,5],[7835,7835,2.78],[7836,7836,4.23],[7837,7837,4.22],[7838,7838,7.48],[7839,7839,6.02],[7840,7840,7.76],[7841,7841,6.68],[7842,7842,7.76],[7843,7843,6.68],[7844,7844,7.76],[7845,7845,6.68],[7846,7846,7.76],[7847,7847,6.68],[7848,7848,7.76],[7849,7849,6.68],[7850,7850,7.76],[7851,7851,6.68],[7852,7852,7.76],[7853,7853,6.68],[7854,7854,7.76],[7855,7855,6.68],[7856,7856,7.76],[7857,7857,6.68],[7858,7858,7.76],[7859,7859,6.68],[7860,7860,7.76],[7861,7861,6.68],[7862,7862,7.76],[7863,7863,6.68],[7864,7864,6.83],[7865,7865,6.64],[7866,7866,6.83],[7867,7867,6.64],[7868,7868,6.83],[7869,7869,6.64],[7870,7870,6.83],[7871,7871,6.64],[7872,7872,6.83],[7873,7873,6.64],[7874,7874,6.83],[7875,7875,6.64],[7876,7876,6.83],[7877,7877,6.64],[7878,7878,6.83],[7879,7879,6.64],[7880,7880,5.46],[7881,7881,3.42],[7882,7882,5.46],[7883,7883,3.42],[7884,7884,8.5],[7885,7885,6.87],[7886,7886,8.5],[7887,7887,6.87],[7888,7888,8.5],[7889,7889,6.87],[7890,7890,8.5],[7891,7891,6.87],[7892,7892,8.5],[7893,7893,6.87],[7894,7894,8.5],[7895,7895,6.87],[7896,7896,8.5],[7897,7897,6.87],[7898,7898,9.14],[7899,7899,6.87],[7900,7900,9.14],[7901,7901,6.87],[7902,7902,9.14],[7903,7903,6.87],[7904,7904,9.14],[7905,7905,6.87],[7906,7906,9.14],[7907,7907,6.87],[7908,7908,8.12],[7909,7909,7.12],[7910,7910,8.12],[7911,7911,7.12],[7912,7912,8.46],[7913,7913,7.42],[7914,7914,8.46],[7915,7915,7.42],[7916,7916,8.46],[7917,7917,7.42],[7918,7918,8.46],[7919,7919,7.42],[7920,7920,8.46],[7921,7921,7.42],[7922,7922,7.37],[7923,7923,6.51],[7924,7924,7.37],[7925,7925,6.51],[7926,7926,7.37],[7927,7927,6.51],[7928,7928,7.37],[7929,7929,6.51],[7930,7930,9.36],[7931,7931,5.89],[7932,7932,5.06],[7933,7933,4.45],[7934,7934,4.58],[7936,7943,5.58],[7944,7945,7.22],[7946,7947,8],[7948,7949,7.47],[7950,7951,7.22],[7952,7957,4.27],[7958,7959,10],[7960,7961,8.01],[7962,7965,9.89],[7966,7967,10],[7968,7975,5.68],[7976,7977,9.12],[7978,7983,11],[7984,7991,3.1],[7992,7993,5.23],[7994,7999,7.11],[8000,8005,5],[8006,8007,10],[8008,8009,8.75],[8010,8011,10.61],[8012,8013,9.88],[8014,8015,10],[8016,8023,5.19],[8024,8024,10],[8025,8025,8.66],[8026,8026,10],[8027,8027,10.44],[8028,8028,10],[8029,8029,10.44],[8030,8030,10],[8031,8031,10.44],[8032,8039,7.31],[8040,8041,8.86],[8042,8043,10.74],[8044,8047,10.11],[8048,8049,6.99],[8050,8051,5.85],[8052,8053,7.12],[8054,8055,3.42],[8056,8057,6.87],[8058,8059,7.06],[8060,8061,8.94],[8062,8063,10],[8064,8071,5.58],[8072,8073,7.22],[8074,8075,8],[8076,8077,7.47],[8078,8079,7.22],[8080,8087,5.68],[8088,8089,9.12],[8090,8095,11],[8096,8103,7.31],[8104,8105,8.86],[8106,8107,10.74],[8108,8111,10.11],[8112,8116,5.58],[8117,8117,10],[8118,8119,5.58],[8120,8121,7.22],[8122,8122,7.76],[8123,8123,7.97],[8124,8124,7.22],[8125,8125,3.33],[8126,8126,3.42],[8127,8129,3.33],[8130,8132,5.68],[8133,8133,10],[8134,8135,5.68],[8136,8136,6.83],[8137,8137,8.48],[8138,8138,8.37],[8139,8139,10.01],[8140,8140,7.78],[8141,8143,3.33],[8144,8145,3.1],[8146,8147,3.42],[8148,8149,10],[8150,8151,3.1],[8152,8153,3.89],[8154,8154,5.46],[8155,8155,7.05],[8156,8156,10],[8157,8159,3.33],[8160,8161,5.19],[8162,8163,7.06],[8164,8165,5.35],[8166,8167,5.19],[8168,8169,7.22],[8170,8170,7.37],[8171,8171,9.39],[8172,8172,7.45],[8173,8175,7.11],[8176,8177,10],[8178,8180,7.31],[8181,8181,10],[8182,8183,7.31],[8184,8184,8.5],[8185,8185,9.68],[8186,8186,8.44],[8187,8187,9.7],[8188,8188,8.01],[8189,8189,7.11],[8190,8190,3.33],[8192,8192,5],[8193,8193,10],[8194,8194,5],[8195,8195,10],[8196,8196,3.33],[8197,8197,2.5],[8198,8198,1.67],[8199,8199,7.11],[8200,8200,3.61],[8201,8201,2],[8202,8202,0.63],[8203,8207,0],[8208,8209,6.39],[8210,8211,7.11],[8212,8213,10],[8214,8214,3.24],[8215,8215,7.11],[8216,8219,3.32],[8220,8223,5.87],[8224,8226,7.11],[8227,8227,5.3],[8228,8228,3.33],[8229,8229,6.67],[8230,8230,10.49],[8231,8231,2.47],[8232,8238,0],[8239,8239,1.71],[8240,8240,17.77],[8241,8241,15.42],[8242,8242,3.53],[8243,8244,6.16],[8245,8245,3.5],[8246,8246,5.66],[8247,8247,7.83],[8248,8248,3.53],[8249,8250,5.43],[8251,8251,7.23],[8252,8252,7.03],[8253,8253,4.97],[8254,8254,7.11],[8255,8257,5],[8258,8258,8.95],[8259,8259,3.33],[8260,8260,4.39],[8261,8262,3.74],[8263,8263,9.57],[8264,8264,7.89],[8265,8265,7.86],[8266,8269,6.6],[8270,8270,4.66],[8271,8271,2.47],[8272,8272,5],[8273,8273,4.66],[8274,8274,5.75],[8275,8275,10],[8276,8276,5],[8277,8277,6.97],[8278,8278,5.93],[8279,8279,10],[8280,8281,5.93],[8282,8282,10],[8283,8283,5.93],[8284,8284,6.98],[8285,8285,10],[8286,8286,3.33],[8287,8287,2.22],[8288,8302,0],[8304,8304,4.82],[8305,8305,3.01],[8306,8307,10],[8308,8309,5.98],[8310,8310,4.82],[8311,8312,5.98],[8313,8316,4.82],[8317,8318,2.41],[8319,8319,5.98],[8320,8332,4.82],[8333,8334,2.41],[8335,8335,10],[8336,8336,2.92],[8337,8337,2.59],[8338,8338,2.87],[8339,8339,2.86],[8340,8340,2.59],[8341,8350,10],[8352,8352,7.11],[8353,8354,7.24],[8355,8356,7.11],[8357,8357,10.58],[8358,8358,8.47],[8359,8359,13.43],[8360,8360,13.4],[8361,8361,11.28],[8362,8362,9.15],[8363,8363,6.99],[8364,8364,7.11],[8365,8365,7.71],[8366,8366,6.82],[8367,8367,11.25],[8368,8368,6.71],[8369,8369,7.33],[8370,8370,8.11],[8371,8371,7.76],[8372,8372,7.1],[8373,8373,7.24],[8374,8374,6.77],[8375,8375,9.39],[8376,8376,5.65],[8377,8377,6],[8378,8378,5.56],[8379,8379,9.84],[8380,8381,5.65],[8382,8382,7.53],[8383,8383,6.59],[8384,8398,10],[8400,8402,0],[8403,8403,6],[8404,8405,7],[8406,8408,0],[8409,8410,6],[8411,8413,0],[8414,8414,10],[8415,8415,8.65],[8416,8416,9],[8417,8417,0],[8418,8418,10],[8419,8432,0],[8433,8446,10],[8448,8449,8.25],[8450,8450,6.02],[8451,8451,10.03],[8452,8452,6.4],[8453,8453,12.72],[8454,8454,8.25],[8455,8455,6.99],[8456,8456,6.35],[8457,8457,8.81],[8458,8458,10],[8459,8459,9.06],[8460,8460,8.43],[8461,8461,6.02],[8462,8462,5.76],[8463,8463,6.46],[8464,8464,6.88],[8465,8465,7.9],[8466,8466,7.08],[8467,8467,4.14],[8468,8468,7.78],[8469,8469,6.02],[8470,8470,12.94],[8471,8471,8.4],[8472,8472,8.5],[8473,8474,6.02],[8475,8475,9.27],[8476,8476,8.84],[8477,8477,6.02],[8478,8478,6.83],[8479,8479,6.67],[8480,8480,13.4],[8481,8481,14.57],[8482,8482,9.64],[8483,8483,7.22],[8484,8484,6.02],[8485,8485,5.42],[8486,8486,8.44],[8487,8487,8.43],[8488,8488,7.55],[8489,8489,3.92],[8490,8490,7.71],[8491,8491,7.76],[8492,8492,9.27],[8493,8493,7.73],[8494,8494,7.48],[8495,8495,3.85],[8496,8496,6.15],[8497,8497,6.88],[8498,8498,5.74],[8499,8499,11.15],[8500,8500,4.06],[8501,8501,6.55],[8502,8502,6.04],[8503,8503,4.65],[8504,8504,5.62],[8505,8505,6.6],[8506,8506,9.21],[8507,8507,17.49],[8508,8508,8.04],[8509,8509,6.46],[8510,8510,4.97],[8511,8511,7.68],[8512,8512,9.76],[8513,8513,7.46],[8514,8515,5.81],[8516,8516,6.87],[8517,8517,8.08],[8518,8518,6.94],[8519,8519,6.12],[8520,8520,4.11],[8521,8521,4.23],[8522,8522,6.76],[8523,8523,7.45],[8524,8524,8.1],[8525,8525,9.18],[8526,8526,4.79],[8528,8530,10],[8531,8532,7.5],[8533,8538,9.5],[8539,8542,11.82],[8543,8543,9.5],[8544,8544,3.32],[8545,8545,6.26],[8546,8546,9.22],[8547,8547,9.75],[8548,8548,6.99],[8549,8549,9.78],[8550,8550,12.73],[8551,8551,15.68],[8552,8552,9.32],[8553,8553,6.67],[8554,8554,9.35],[8555,8555,12.29],[8556,8556,5.81],[8557,8557,7.12],[8558,8558,7.93],[8559,8559,9.08],[8560,8560,3.25],[8561,8561,6.14],[8562,8562,9.04],[8563,8563,8.58],[8564,8564,5.93],[8565,8565,8.57],[8566,8566,11.46],[8567,8567,14.36],[8568,8568,8.4],[8569,8569,5.91],[8570,8570,8.44],[8571,8571,11.33],[8572,8572,3.25],[8573,8573,5.32],[8574,8574,6.63],[8575,8575,9.7],[8576,8576,10.82],[8577,8577,7.93],[8578,8578,12.61],[8579,8579,7.12],[8580,8580,4.44],[8581,8581,6.51],[8582,8582,5.64],[8583,8590,10],[8592,8592,10],[8593,8593,5],[8594,8594,10],[8595,8595,5],[8596,8596,10],[8597,8597,5],[8598,8598,9.16],[8599,8599,10],[8600,8600,9.16],[8601,8603,10],[8604,8615,6.02],[8616,8616,5],[8617,8618,10],[8619,8621,6.02],[8622,8622,10],[8623,8623,6.02],[8624,8626,8.65],[8627,8627,10],[8628,8628,8.65],[8629,8629,10],[8630,8631,8.65],[8632,8633,10],[8634,8635,6.02],[8636,8636,8.65],[8637,8639,6.02],[8640,8640,8.65],[8641,8643,6.02],[8644,8646,10],[8647,8650,6.02],[8651,8652,10],[8653,8653,8.8],[8654,8654,6.02],[8655,8655,8.69],[8656,8656,10],[8657,8657,8.65],[8658,8658,10],[8659,8659,8.65],[8660,8660,10],[8661,8669,6.02],[8670,8671,7.23],[8672,8672,10],[8673,8673,7.23],[8674,8674,10],[8675,8675,7.23],[8676,8678,10],[8679,8679,11.81],[8680,8681,10],[8682,8682,11.81],[8683,8687,6.02],[8688,8688,8.65],[8689,8692,6.02],[8693,8693,10],[8694,8702,6.02],[8704,8704,6.3],[8705,8705,4.69],[8706,8706,7.11],[8707,8707,5.26],[8708,8708,5.35],[8709,8709,7.17],[8710,8710,8.06],[8711,8711,7.33],[8712,8712,5.76],[8713,8713,6.12],[8714,8714,5.09],[8715,8715,5.76],[8716,8716,5.89],[8717,8717,5.09],[8718,8718,5.22],[8719,8719,8.69],[8720,8720,7.95],[8721,8721,6.98],[8722,8722,8.67],[8723,8723,7.95],[8724,8724,5.99],[8725,8725,4.39],[8726,8726,8.04],[8727,8727,5.23],[8728,8728,3.55],[8729,8729,3.61],[8730,8730,8.67],[8731,8731,7.49],[8732,8732,7.24],[8733,8733,5.19],[8734,8734,10.59],[8735,8735,9.79],[8736,8736,5.98],[8737,8737,6.01],[8738,8738,6.05],[8739,8739,2.5],[8740,8740,4.73],[8741,8741,3.46],[8742,8742,5.25],[8743,8744,5.94],[8745,8745,7.19],[8746,8746,5.31],[8747,8747,5.38],[8748,8748,9.15],[8749,8749,11.24],[8750,8750,6.78],[8751,8751,9.24],[8752,8752,11.66],[8753,8753,5.98],[8754,8754,6.28],[8755,8755,5.97],[8756,8756,6.04],[8757,8757,5.97],[8758,8758,3.36],[8759,8759,5.76],[8760,8760,5.63],[8761,8761,5.76],[8762,8762,5.8],[8763,8763,5.6],[8764,8765,5.5],[8766,8766,5.43],[8767,8767,5.83],[8768,8768,3.9],[8769,8769,5.74],[8770,8770,5.8],[8771,8771,5.84],[8772,8772,6.71],[8773,8773,6.96],[8774,8774,6.29],[8775,8775,6.11],[8776,8776,8.67],[8777,8777,5.49],[8778,8778,6.04],[8779,8779,6.71],[8780,8780,5.43],[8781,8781,6.03],[8782,8782,5.97],[8783,8783,5.93],[8784,8784,5.6],[8785,8785,6.38],[8786,8787,6.32],[8788,8789,7.64],[8790,8790,5.79],[8791,8791,5.96],[8792,8792,5.89],[8793,8793,6.08],[8794,8794,6.19],[8795,8795,6.46],[8796,8796,6.36],[8797,8797,5.63],[8798,8798,5.75],[8799,8799,5.9],[8800,8801,8.67],[8802,8802,5.7],[8803,8803,5.93],[8804,8805,8.67],[8806,8806,5.75],[8807,8807,5.64],[8808,8808,6.22],[8809,8809,5.89],[8810,8810,7.33],[8811,8811,7.01],[8812,8812,3.58],[8813,8813,5.53],[8814,8815,5.7],[8816,8817,5.49],[8818,8818,5.64],[8819,8819,5.67],[8820,8820,5.83],[8821,8821,5.81],[8822,8823,6.05],[8824,8824,5.61],[8825,8825,5.77],[8826,8826,5.67],[8827,8827,5.78],[8828,8828,5.96],[8829,8829,5.78],[8830,8830,5.85],[8831,8831,5.82],[8832,8832,6.07],[8833,8833,5.79],[8834,8835,6.32],[8836,8836,6.44],[8837,8837,6.31],[8838,8839,6.63],[8840,8840,6.67],[8841,8841,6.49],[8842,8843,5.62],[8844,8845,5.82],[8846,8846,6.09],[8847,8848,6.54],[8849,8850,6.51],[8851,8852,6.11],[8853,8853,7.24],[8854,8854,7.45],[8855,8855,7.11],[8856,8856,7.22],[8857,8857,7.56],[8858,8858,7.35],[8859,8859,7.18],[8860,8860,7.61],[8861,8861,7.56],[8862,8862,7.84],[8863,8863,7.6],[8864,8864,7.33],[8865,8865,7.16],[8866,8869,7.5],[8870,8870,3.3],[8871,8871,3.33],[8872,8872,6.24],[8873,8873,7.29],[8874,8874,6.23],[8875,8875,7.55],[8876,8876,7.76],[8877,8877,7.78],[8878,8878,8.74],[8879,8879,8.36],[8880,8881,6.32],[8882,8883,7.41],[8884,8885,7.03],[8886,8887,7.35],[8888,8888,5.96],[8889,8889,6.83],[8890,8890,4.8],[8891,8892,6.96],[8893,8893,6.74],[8894,8894,7.42],[8895,8895,6.31],[8896,8897,6.71],[8898,8899,6.41],[8900,8900,3.81],[8901,8901,4.41],[8902,8902,4.48],[8903,8903,6.31],[8904,8904,7.72],[8905,8906,7.4],[8907,8908,7.24],[8909,8909,5.84],[8910,8911,6.35],[8912,8913,6.48],[8914,8915,5.69],[8916,8916,5.49],[8917,8917,6.14],[8918,8919,6.03],[8920,8921,9.68],[8922,8923,6.51],[8924,8925,6.46],[8926,8927,6.69],[8928,8928,6.66],[8929,8929,6.56],[8930,8930,6.86],[8931,8931,6.64],[8932,8932,6.71],[8933,8933,6.73],[8934,8934,6.76],[8935,8935,6.86],[8936,8936,7.19],[8937,8937,6.88],[8938,8938,7.49],[8939,8939,7.66],[8940,8940,7.71],[8941,8941,7.76],[8942,8942,4.11],[8943,8943,10],[8944,8944,9.2],[8945,8945,9.39],[8946,8946,6.5],[8947,8947,5.76],[8948,8948,5.09],[8949,8950,5.76],[8951,8951,5.09],[8952,8952,5.76],[8953,8953,6.32],[8954,8954,6.5],[8955,8955,5.76],[8956,8956,5.09],[8957,8957,5.76],[8958,8958,5.09],[8960,8961,6.02],[8962,8962,6],[8963,8963,9.28],[8964,8964,6.02],[8965,8965,7.95],[8966,8966,6.85],[8967,8967,10],[8968,8975,6.02],[8976,8976,5.7],[8977,8977,6.02],[8978,8978,10],[8979,8979,6.02],[8980,8980,8.65],[8981,8981,6.02],[8982,8982,5.49],[8983,8983,6.5],[8984,8984,9.28],[8985,8985,6.02],[8986,8987,10],[8988,8991,6.02],[8992,8993,6.04],[8994,8995,8.65],[8996,8996,7.95],[8997,8997,10],[8998,8998,13.07],[8999,8999,10],[9000,9000,6.02],[9001,9002,10],[9003,9003,13.07],[9004,9012,5.49],[9013,9013,6.02],[9014,9014,9.26],[9015,9020,6.02],[9021,9021,10],[9022,9022,6.02],[9023,9023,7.28],[9024,9024,6],[9025,9028,6.02],[9029,9030,6],[9031,9033,6.02],[9034,9034,6],[9035,9037,6.02],[9038,9039,6],[9040,9040,6.02],[9041,9041,6],[9042,9044,6.02],[9045,9046,6],[9047,9052,6.02],[9053,9053,6],[9054,9056,6.02],[9057,9058,6],[9059,9061,6.02],[9062,9063,6],[9064,9065,6.02],[9066,9066,6],[9067,9072,6.02],[9073,9074,6],[9075,9082,6.02],[9083,9083,6.69],[9084,9084,9.37],[9085,9085,3.19],[9086,9086,9.39],[9087,9087,3.71],[9088,9091,6.02],[9092,9092,7.85],[9093,9093,6.84],[9094,9094,6.75],[9095,9096,10],[9097,9098,6.02],[9099,9099,8.92],[9100,9100,8.08],[9101,9101,7.86],[9102,9102,7.47],[9103,9107,6.58],[9108,9108,7.43],[9109,9109,6.02],[9110,9110,4.72],[9111,9112,7.89],[9113,9114,8.15],[9115,9133,10],[9134,9134,6.02],[9135,9135,3.15],[9136,9137,10],[9138,9139,14.88],[9140,9141,6.16],[9142,9142,7.24],[9143,9143,6.43],[9144,9149,5.03],[9150,9164,10],[9165,9165,9.98],[9166,9166,10],[9167,9167,8.57],[9168,9168,5.11],[9169,9171,5.42],[9172,9173,10.31],[9174,9174,9.58],[9175,9177,9.76],[9178,9179,10],[9180,9183,6.17],[9184,9184,6.16],[9185,9185,10],[9186,9186,11.44],[9187,9187,9.1],[9188,9188,10.94],[9189,9189,10.18],[9190,9190,9.26],[9191,9191,7.98],[9192,9214,10],[9216,9247,10],[9248,9248,6],[9249,9249,10],[9250,9250,6],[9251,9251,5.9],[9252,9252,6],[9253,9253,7.92],[9254,9254,4.03],[9255,9278,10],[9280,9285,6.04],[9286,9289,7.5],[9290,9290,6.04],[9291,9310,10],[9312,9412,10],[9413,9413,8.4],[9414,9470,10],[9472,9472,7.08],[9473,9473,10],[9474,9474,7.08],[9475,9483,10],[9484,9484,7.08],[9485,9487,10],[9488,9488,7.08],[9489,9491,10],[9492,9492,7.08],[9493,9495,10],[9496,9496,7.08],[9497,9499,10],[9500,9500,7.08],[9501,9507,10],[9508,9508,7.08],[9509,9515,10],[9516,9516,7.08],[9517,9523,10],[9524,9524,7.08],[9525,9531,10],[9532,9532,7.08],[9533,9547,10],[9548,9551,6.18],[9552,9580,7.08],[9581,9588,10],[9589,9598,6.18],[9600,9600,7.08],[9601,9603,10],[9604,9604,7.08],[9605,9607,10],[9608,9608,7.08],[9609,9611,10],[9612,9612,7.08],[9613,9615,10],[9616,9618,7.08],[9619,9619,7.29],[9620,9621,10],[9622,9630,6.02],[9632,9633,6.04],[9634,9634,10],[9635,9641,8.65],[9642,9643,3.54],[9644,9644,10],[9645,9645,8.65],[9646,9648,6.02],[9649,9649,10],[9650,9650,9.9],[9651,9651,10],[9652,9652,6.32],[9653,9653,8.65],[9654,9654,8.8],[9655,9655,10],[9656,9657,5.3],[9658,9658,9.9],[9659,9659,6.02],[9660,9660,9.9],[9661,9661,10],[9662,9663,6.39],[9664,9664,10],[9665,9665,7.95],[9666,9666,6.02],[9667,9667,8.65],[9668,9668,9.9],[9669,9669,6.02],[9670,9670,7.23],[9671,9671,6.15],[9672,9672,8.65],[9673,9673,10],[9674,9674,8.67],[9675,9675,6.04],[9676,9676,5.94],[9677,9677,6.02],[9678,9678,10],[9679,9679,6.04],[9680,9683,10],[9684,9687,6.02],[9688,9689,6.04],[9690,9697,6.02],[9698,9701,10],[9702,9702,3.54],[9703,9710,6.02],[9711,9711,10],[9712,9722,6.02],[9723,9726,10],[9728,9731,10],[9732,9732,6.02],[9733,9734,10],[9735,9736,6.02],[9737,9737,10],[9738,9741,6.02],[9742,9742,10],[9743,9743,8.65],[9744,9746,8.3],[9747,9747,6.02],[9748,9751,10],[9752,9755,6.02],[9756,9759,10],[9760,9774,6.02],[9775,9775,8.65],[9776,9783,9],[9784,9785,6.02],[9786,9786,10.21],[9787,9787,10.52],[9788,9788,9.17],[9789,9791,6.02],[9792,9792,7.5],[9793,9793,6.02],[9794,9794,7.5],[9795,9799,6.02],[9800,9811,10],[9812,9823,6.02],[9824,9824,5.31],[9825,9826,10],[9827,9827,6.56],[9828,9828,10],[9829,9829,5.94],[9830,9830,5.1],[9831,9833,10],[9834,9834,5],[9835,9835,7.5],[9836,9838,10],[9839,9839,5],[9840,9841,6.02],[9842,9853,10],[9854,9854,6.02],[9855,9855,10],[9856,9867,6.02],[9868,9868,8.79],[9869,9869,8.63],[9870,9870,8.59],[9871,9871,8.96],[9872,9874,6.02],[9875,9875,10],[9876,9884,6.02],[9885,9889,10],[9890,9890,8.92],[9891,9891,8.97],[9892,9892,8.83],[9893,9893,6.6],[9894,9894,7.41],[9895,9895,9.23],[9896,9896,5.33],[9897,9897,9.2],[9898,9899,10],[9900,9900,6.47],[9901,9901,7.76],[9902,9902,10.55],[9903,9903,11.18],[9904,9905,6.02],[9906,9906,6.03],[9907,9953,10],[9954,9954,7],[9955,9982,10],[9984,9984,10],[9985,9985,9.74],[9986,9986,9.61],[9987,9987,9.74],[9988,9988,9.8],[9989,9989,10],[9990,9990,7.89],[9991,9991,7.9],[9992,9992,7.91],[9993,9993,6.9],[9994,9997,10],[9998,9998,7.93],[9999,9999,9.33],[10000,10000,9.11],[10001,10001,9.45],[10002,10002,9.74],[10003,10003,7.64],[10004,10004,8.46],[10005,10005,7.62],[10006,10006,7.61],[10007,10007,5.71],[10008,10008,6.77],[10009,10009,7.63],[10010,10010,7.6],[10011,10011,7.59],[10012,10012,7.54],[10013,10013,4.94],[10014,10014,5.52],[10015,10015,5.37],[10016,10016,5.77],[10017,10017,6.92],[10018,10018,7.86],[10019,10020,7.88],[10021,10021,7.9],[10022,10022,7.93],[10023,10023,7.94],[10024,10024,10],[10025,10025,8.23],[10026,10026,7.89],[10027,10027,8.41],[10028,10028,8.23],[10029,10029,8.33],[10030,10030,8.16],[10031,10031,8.31],[10032,10032,9.23],[10033,10033,7.44],[10034,10034,7.23],[10035,10035,7.49],[10036,10036,7.9],[10037,10037,7.92],[10038,10038,6.95],[10039,10039,7.76],[10040,10040,7.68],[10041,10041,7.92],[10042,10042,7.59],[10043,10043,7.07],[10044,10044,7.08],[10045,10045,6.82],[10046,10046,7.01],[10047,10047,8.26],[10048,10048,8.15],[10049,10050,7.89],[10051,10051,7.07],[10052,10052,6.87],[10053,10053,6.96],[10054,10054,6.89],[10055,10055,7.86],[10056,10056,7.87],[10057,10057,7.13],[10058,10058,7.91],[10059,10059,7.85],[10060,10060,10],[10061,10061,8.73],[10062,10062,10],[10063,10064,7.62],[10065,10066,7.59],[10067,10069,10],[10070,10070,7.84],[10071,10071,10],[10072,10072,3.01],[10073,10073,2.77],[10074,10074,4.15],[10075,10076,3.92],[10077,10078,6.68],[10079,10080,10],[10081,10081,7.32],[10082,10083,5.44],[10084,10084,9.1],[10085,10085,6.67],[10086,10087,7.6],[10088,10089,3.9],[10090,10091,3.17],[10092,10093,2.76],[10094,10095,5.09],[10096,10097,4.1],[10098,10099,2.34],[10100,10101,3.34],[10102,10131,7.88],[10132,10132,8.94],[10133,10135,10],[10136,10136,7.48],[10137,10137,9.24],[10138,10138,7.48],[10139,10139,9.18],[10140,10140,9.27],[10141,10142,9.28],[10143,10143,8.34],[10144,10144,8.73],[10145,10145,8.28],[10146,10147,9.24],[10148,10148,9.17],[10149,10149,9.3],[10150,10150,9.31],[10151,10151,4.63],[10152,10152,8.83],[10153,10154,8.36],[10155,10156,8.67],[10157,10158,6.96],[10159,10159,8.74],[10160,10160,10],[10161,10161,8.74],[10162,10162,7.6],[10163,10163,9.46],[10164,10164,7.71],[10165,10165,8.65],[10166,10166,7.71],[10167,10167,8.88],[10168,10168,9.67],[10169,10169,8.88],[10170,10170,8.31],[10171,10171,8.73],[10172,10172,9.27],[10173,10173,9.7],[10174,10174,9.18],[10176,10176,5.48],[10177,10177,9.48],[10178,10178,6.89],[10179,10180,5.64],[10181,10182,6.02],[10183,10183,6.2],[10184,10185,9.18],[10186,10186,3.4],[10187,10187,8.38],[10188,10188,3.25],[10189,10189,8.38],[10190,10191,10],[10192,10192,7.46],[10193,10193,6.2],[10194,10194,5.97],[10195,10196,5.42],[10197,10198,9.02],[10199,10199,11.15],[10200,10201,6.89],[10202,10202,8.7],[10203,10203,8.56],[10204,10204,10.55],[10205,10206,8.49],[10207,10207,3.96],[10208,10208,5.51],[10209,10209,7],[10210,10211,8.76],[10212,10213,9.46],[10214,10215,4.22],[10216,10217,3.66],[10218,10219,4.63],[10220,10221,4.88],[10222,10222,2.33],[10224,10225,9.82],[10226,10227,9.53],[10228,10228,12.46],[10229,10238,11.79],[10240,10494,6.84],[10496,10497,9.36],[10498,10499,8.66],[10500,10500,10.35],[10501,10501,9.36],[10502,10503,8.66],[10504,10505,4.78],[10506,10507,7.17],[10508,10511,8.82],[10512,10512,10.43],[10513,10513,8.38],[10514,10515,7.59],[10516,10517,8.65],[10518,10520,10.43],[10521,10524,8.65],[10525,10528,8.82],[10529,10530,7.46],[10531,10534,6.5],[10535,10535,7.79],[10536,10536,7.39],[10537,10537,7.79],[10538,10538,7.39],[10539,10540,6.98],[10541,10544,7.39],[10545,10546,7.79],[10547,10547,8.47],[10548,10549,10],[10550,10551,8.65],[10552,10552,4.08],[10553,10553,8.65],[10554,10557,8.08],[10558,10559,6.55],[10560,10561,7.63],[10562,10567,8.38],[10568,10568,9.21],[10569,10569,4.87],[10570,10571,8.38],[10572,10573,4.94],[10574,10574,8.38],[10575,10575,4.33],[10576,10576,8.38],[10577,10577,4.33],[10578,10579,8.62],[10580,10581,4.33],[10582,10583,8.62],[10584,10585,4.33],[10586,10587,8.72],[10588,10589,4.33],[10590,10591,8.72],[10592,10593,4.33],[10594,10597,8.65],[10598,10605,8.38],[10606,10607,7.14],[10608,10613,8.38],[10614,10614,7.23],[10615,10615,10.43],[10616,10616,7.23],[10617,10617,7.65],[10618,10618,9.21],[10619,10619,7.65],[10620,10621,5.56],[10622,10622,5.98],[10624,10624,3.65],[10625,10625,3.8],[10626,10626,3.13],[10627,10628,3.74],[10629,10630,4.47],[10631,10632,3.35],[10633,10634,3.95],[10635,10636,3.01],[10637,10640,3],[10641,10641,3.66],[10642,10642,3.68],[10643,10644,6.59],[10645,10646,6.95],[10647,10648,6.48],[10649,10649,2.26],[10650,10650,2.77],[10651,10651,5.94],[10652,10653,5.92],[10654,10654,6.61],[10655,10655,5.48],[10656,10657,5.94],[10658,10661,5.48],[10662,10663,7.53],[10664,10671,5.94],[10672,10676,7.03],[10677,10677,8.69],[10678,10678,7],[10679,10679,7.02],[10680,10680,7.22],[10681,10681,7.02],[10682,10682,7.03],[10683,10683,7.04],[10684,10689,7.02],[10690,10690,8.55],[10691,10691,8.74],[10692,10696,7.47],[10697,10697,7.96],[10698,10700,7.49],[10701,10701,9.44],[10702,10702,6.5],[10703,10704,7.58],[10705,10707,6.87],[10708,10709,6.51],[10710,10711,7.67],[10712,10713,2.77],[10714,10715,4.23],[10716,10716,6.37],[10717,10717,6.47],[10718,10718,6.37],[10719,10719,6.74],[10720,10720,7.47],[10721,10721,6.53],[10722,10722,6.83],[10723,10725,6.64],[10726,10726,7.1],[10727,10727,6.35],[10728,10729,7.49],[10730,10730,7.17],[10731,10731,4.73],[10732,10733,8.99],[10734,10735,5.98],[10736,10737,7.08],[10738,10739,7.02],[10740,10740,8.18],[10741,10741,6.1],[10742,10742,5.76],[10743,10745,5.08],[10746,10747,6.76],[10748,10749,5.37],[10750,10750,4.73],[10752,10753,8.99],[10754,10754,9.01],[10755,10756,5.44],[10757,10758,5.95],[10759,10760,7.66],[10761,10761,6.66],[10762,10762,8.55],[10763,10763,6.52],[10764,10764,15.05],[10765,10767,6.11],[10768,10768,5.93],[10769,10769,7.28],[10770,10770,6.13],[10771,10771,5.93],[10772,10772,6.75],[10773,10773,5.93],[10774,10774,6.11],[10775,10775,6.76],[10776,10778,6.11],[10779,10779,6.38],[10780,10780,6.17],[10781,10781,6.87],[10782,10782,3.95],[10783,10783,3.34],[10784,10784,8.11],[10785,10785,3.26],[10786,10787,5.41],[10788,10788,5.44],[10789,10789,5.41],[10790,10790,5.44],[10791,10791,6.47],[10792,10792,6.38],[10793,10794,5.45],[10795,10796,5.43],[10797,10798,7.61],[10799,10799,4.58],[10800,10800,5.29],[10801,10801,5.42],[10802,10802,5.21],[10803,10803,8.05],[10804,10805,7.14],[10806,10808,8.99],[10809,10811,7.49],[10812,10813,5.12],[10814,10814,3.34],[10815,10815,6.15],[10816,10821,5.44],[10822,10823,3.88],[10824,10825,5.42],[10826,10827,5.11],[10828,10829,7.39],[10830,10831,5.95],[10832,10832,7.39],[10833,10834,6.1],[10835,10836,6.52],[10837,10838,7.53],[10839,10840,6.52],[10841,10841,6.06],[10842,10843,6.52],[10844,10845,7.38],[10846,10848,6.1],[10849,10849,5.43],[10850,10851,6.1],[10852,10853,6.67],[10854,10857,5.42],[10858,10861,5.43],[10862,10862,4.85],[10863,10866,5.43],[10867,10867,5.44],[10868,10868,8.48],[10869,10869,9.84],[10870,10870,14.57],[10871,10871,5.45],[10872,10872,5.95],[10873,10874,6.59],[10875,10876,5.12],[10877,10879,5.43],[10880,10880,5.44],[10881,10886,5.43],[10887,10887,5.51],[10888,10888,5.7],[10889,10892,5.43],[10893,10893,5.51],[10894,10894,5.48],[10895,10896,5.45],[10897,10903,5.43],[10904,10906,5.44],[10907,10910,5.43],[10911,10911,5.52],[10912,10912,5.46],[10913,10914,6.83],[10915,10915,8.07],[10916,10916,5.44],[10917,10917,9.35],[10918,10921,6.13],[10922,10922,5.12],[10923,10923,5.24],[10924,10924,5.51],[10925,10925,5.56],[10926,10926,5.42],[10927,10929,5.53],[10930,10930,5.51],[10931,10934,5.53],[10935,10935,5.47],[10936,10936,5.48],[10937,10937,5.47],[10938,10938,5.48],[10939,10940,8.88],[10941,10942,5.64],[10943,10950,4.59],[10951,10954,5.46],[10955,10956,4.59],[10957,10958,9.53],[10959,10960,5.64],[10961,10962,5.63],[10963,10966,4.59],[10967,10968,8.5],[10969,10971,5.97],[10972,10972,6.1],[10973,10973,5.97],[10974,10974,3.93],[10975,10977,6.89],[10978,10978,6.86],[10979,10979,6.84],[10980,10980,6.86],[10981,10981,8.37],[10982,10982,6.86],[10983,10985,6.89],[10986,10987,6.93],[10988,10989,5.12],[10990,10990,3.13],[10991,10992,2.84],[10993,10993,2.99],[10994,10994,3.9],[10995,10995,5.43],[10996,10996,3.49],[10997,10997,4.78],[10998,10998,2.26],[10999,11000,9.71],[11001,11002,5.43],[11003,11003,4.99],[11004,11004,3.55],[11005,11005,4.11],[11006,11006,2.94],[11904,12030,10],[12272,12286,10],[12288,12333,10],[12334,12335,16],[12336,12350,10],[12800,12827,8.65],[12828,12828,8.69],[12829,12895,10],[12896,12923,8.65],[12924,12926,10],[12927,12927,8.65],[12928,13054,10],[13056,13183,10],[13184,13188,8.65],[13189,13193,10],[13194,13196,8.65],[13197,13200,10],[13201,13205,8.65],[13206,13208,10],[13209,13210,8.65],[13211,13222,10],[13223,13231,8.65],[13232,13235,10],[13236,13249,8.65],[13250,13250,10],[13251,13251,8.65],[13252,13252,10],[13253,13255,8.65],[13256,13256,10],[13257,13258,8.65],[13259,13262,10],[13263,13264,8.65],[13265,13266,10],[13267,13267,8.65],[13268,13269,10],[13270,13270,8.65],[13271,13274,10],[13275,13277,8.65],[13278,13310,10],[13312,19902,10],[19968,40958,10],[63744,64254,10],[65072,65102,10],[65136,65136,3.12],[65137,65137,2.03],[65138,65138,3.12],[65139,65139,3],[65140,65140,3.12],[65141,65141,10],[65142,65142,3.12],[65143,65143,2.03],[65144,65144,3.12],[65145,65145,2.03],[65146,65146,3.12],[65147,65147,2.03],[65148,65148,3.12],[65149,65149,2.03],[65150,65150,3.12],[65151,65151,2.03],[65152,65152,4.69],[65153,65153,2.38],[65154,65154,2.53],[65155,65155,2.17],[65156,65156,2.34],[65157,65158,4.51],[65159,65159,2.17],[65160,65160,2.34],[65161,65161,6.45],[65162,65162,5.77],[65163,65164,2.71],[65165,65165,2.17],[65166,65166,2.34],[65167,65168,6.49],[65169,65170,2.71],[65171,65171,3.43],[65172,65172,4.15],[65173,65174,6.49],[65175,65176,2.71],[65177,65178,6.49],[65179,65180,2.71],[65181,65181,5.77],[65182,65182,5.59],[65183,65184,5.23],[65185,65185,5.77],[65186,65186,5.59],[65187,65188,5.23],[65189,65189,5.77],[65190,65190,5.59],[65191,65192,5.23],[65193,65196,3.43],[65197,65200,4.33],[65201,65202,8.99],[65203,65204,6.08],[65205,65206,8.99],[65207,65208,6.08],[65209,65210,10.63],[65211,65212,7.71],[65213,65214,10.63],[65215,65216,7.71],[65217,65224,5.23],[65225,65225,5.41],[65226,65226,4.69],[65227,65227,5.41],[65228,65228,3.6],[65229,65229,5.41],[65230,65230,4.69],[65231,65231,5.41],[65232,65232,3.6],[65233,65234,7.58],[65235,65235,3.05],[65236,65236,3.24],[65237,65238,6.12],[65239,65239,3.05],[65240,65240,3.24],[65241,65242,5.41],[65243,65244,3.6],[65245,65246,4.51],[65247,65248,2.34],[65249,65250,3.6],[65251,65252,4.15],[65253,65254,5.41],[65255,65256,2.71],[65257,65257,3.43],[65258,65258,4.15],[65259,65259,4.69],[65260,65262,4.51],[65263,65263,6.45],[65264,65264,5.54],[65265,65265,6.45],[65266,65266,5.77],[65267,65268,2.71],[65269,65269,5.41],[65270,65270,5.96],[65271,65271,4.86],[65272,65272,5.41],[65273,65273,4.86],[65274,65274,5.41],[65275,65275,4.86],[65276,65276,5.41],[65277,65278,10],[65280,65376,10],[65377,65440,5],[65441,65441,4.83],[65442,65443,5],[65444,65444,4.83],[65445,65446,5],[65447,65447,4.83],[65448,65470,5],[65471,65473,10],[65474,65479,5],[65480,65481,10],[65482,65487,5],[65488,65489,10],[65490,65495,5],[65496,65497,10],[65498,65500,5],[65501,65508,10],[65509,65509,7.11],[65510,65510,11.28],[65511,65512,10],[65513,65518,5],[65792,65792,7.76],[65793,65793,6.68],[65794,65794,7.76],[65795,65795,6.68],[65796,65796,7.76],[65797,65797,6.68],[65798,65798,7.24],[65799,65799,5.88],[65800,65800,7.24],[65801,65801,5.88],[65802,65802,7.24],[65803,65803,5.88],[65804,65804,7.24],[65805,65805,5.88],[65806,65806,8.3],[65807,65807,8.8],[65808,65808,8.3],[65809,65809,6.99],[65810,65810,6.83],[65811,65811,6.64],[65812,65812,6.83],[65813,65813,6.64],[65814,65814,6.83],[65815,65815,6.64],[65816,65816,6.83],[65817,65817,6.64],[65818,65818,6.83],[65819,65819,6.64],[65820,65820,8.11],[65821,65821,6.99],[65822,65822,8.11],[65823,65823,6.99],[65824,65824,8.11],[65825,65825,6.99],[65826,65826,8.11],[65827,65827,6.99],[65828,65828,8.37],[65829,65829,7.12],[65830,65830,8.37],[65831,65831,7.12],[65832,65832,5.46],[65833,65833,3.42],[65834,65834,5.46],[65835,65835,3.42],[65836,65836,5.46],[65837,65837,3.42],[65838,65838,5.46],[65839,65839,3.42],[65840,65840,5.46],[65841,65841,3.42],[65842,65842,10.07],[65843,65843,7.28],[65844,65844,5.55],[65845,65845,4.03],[65846,65846,7.71],[65847,65848,6.71],[65849,65849,6.37],[65850,65850,3.42],[65851,65851,6.37],[65852,65852,3.42],[65853,65853,6.37],[65854,65854,5.22],[66304,66350,0],[66352,66382,0],[66560,66561,6.83],[66562,66562,9.11],[66563,66563,6.37],[66564,66564,7.42],[66565,66565,7.1],[66566,66567,5.46],[66568,66568,5.55],[66569,66569,12.22],[66570,66570,12.14],[66571,66571,9.36],[66572,66572,7.71],[66573,66573,8.46],[66574,66574,7.37],[66575,66575,8.37],[66576,66576,7.76],[66577,66577,7.58],[66578,66578,7.62],[66579,66579,6.37],[66580,66580,8.41],[66581,66581,6.83],[66582,66582,11.15],[66583,66583,7.07],[66584,66585,8.46],[66586,66586,7.71],[66587,66587,8.45],[66588,66588,9.48],[66589,66589,8.37],[66590,66590,8.5],[66591,66591,8.37],[66592,66592,7.33],[66593,66593,7.24],[66594,66594,6.82],[66595,66595,7.37],[66596,66596,9.52],[66597,66597,7.64],[66598,66598,8.5],[66599,66599,7.87],[66600,66600,11.64],[66601,66601,11.77],[66602,66602,9.07],[66603,66603,10.63],[66604,66604,7.58],[66605,66605,7.42],[66606,66606,11.95],[66607,66607,7.95],[66608,66608,6.68],[66609,66609,6.97],[66610,66610,6.77],[66611,66611,5.31],[66612,66612,6.91],[66613,66613,6.64],[66614,66614,9.99],[66615,66615,5.88],[66616,66617,7.2],[66618,66618,6.71],[66619,66619,7.09],[66620,66620,8.3],[66621,66621,7.2],[66622,66622,6.87],[66623,66623,7.2],[66624,66624,6.99],[66625,66625,5.98],[66626,66626,5.35],[66627,66627,6.51],[66628,66628,9.66],[66629,66629,6.69],[66630,66630,7.29],[66631,66631,6.84],[66632,66632,10.02],[66633,66633,10.13],[66634,66634,7.43],[66635,66635,9.37],[66636,66636,6.49],[66637,66637,6.06],[66638,66638,9.94],[119040,119294,8.65],[119808,120739,8.65],[120740,120830,10],[131072,131072,0],[131073,131079,3.33],[131080,131080,0],[131081,131085,3.42],[131086,131100,3.33],[131101,131101,0],[131102,131103,3.33],[131104,131104,3.42],[131105,131105,4.02],[131106,131106,5.87],[131107,131107,8.67],[131108,131108,7.11],[131109,131109,12.72],[131110,131110,8.62],[131111,131111,3.32],[131112,131113,5.43],[131114,131114,7.11],[131115,131115,8.67],[131116,131116,3.61],[131117,131117,4.8],[131118,131118,3.61],[131119,131119,6.89],[131120,131129,7.11],[131130,131131,4.02],[131132,131134,8.67],[131135,131135,6.17],[131136,131136,9.64],[131137,131137,7.76],[131138,131138,7.62],[131139,131139,7.24],[131140,131140,8.3],[131141,131141,6.83],[131142,131142,6.5],[131143,131143,8.11],[131144,131144,8.37],[131145,131145,5.46],[131146,131146,5.55],[131147,131147,7.71],[131148,131148,6.37],[131149,131149,9.48],[131150,131150,8.47],[131151,131151,8.5],[131152,131152,7.33],[131153,131153,8.5],[131154,131154,7.82],[131155,131155,7.1],[131156,131156,6.82],[131157,131157,8.12],[131158,131158,7.64],[131159,131159,11.28],[131160,131160,7.64],[131161,131161,7.37],[131162,131162,6.92],[131163,131163,5.43],[131164,131164,6.89],[131165,131165,5.43],[131166,131166,8.67],[131167,131168,7.11],[131169,131169,6.68],[131170,131170,6.99],[131171,131171,5.88],[131172,131172,6.99],[131173,131173,6.64],[131174,131174,4.22],[131175,131175,6.99],[131176,131176,7.12],[131177,131177,3.42],[131178,131178,4.03],[131179,131179,6.71],[131180,131180,3.42],[131181,131181,10.58],[131182,131182,7.12],[131183,131183,6.87],[131184,131185,6.99],[131186,131186,4.97],[131187,131187,5.93],[131188,131188,4.56],[131189,131189,7.12],[131190,131190,6.5],[131191,131191,9.79],[131192,131192,6.69],[131193,131193,6.51],[131194,131194,5.97],[131195,131195,7.11],[131196,131196,5.43],[131197,131197,7.11],[131198,131198,8.67],[131199,131199,0],[131200,131200,5.81],[131201,131231,5],[131232,131232,3.42],[131233,131233,4.02],[131234,131237,7.11],[131238,131238,5.43],[131239,131240,7.11],[131241,131241,9.64],[131242,131242,5.98],[131243,131243,8.5],[131244,131244,8.67],[131245,131245,0],[131246,131246,9.64],[131247,131247,7.11],[131248,131248,5.87],[131249,131249,8.67],[131250,131251,5.98],[131252,131252,7.11],[131253,131253,7.21],[131254,131254,7.11],[131255,131255,3.61],[131256,131256,7.11],[131257,131258,5.98],[131259,131259,8.5],[131260,131262,11.82],[131263,131263,6.17],[131264,131269,7.76],[131270,131270,10.94],[131271,131271,7.24],[131272,131275,6.83],[131276,131279,5.46],[131280,131280,8.3],[131281,131281,8.47],[131282,131286,8.5],[131287,131287,8.67],[131288,131288,8.5],[131289,131292,8.12],[131293,131293,7.37],[131294,131294,7.35],[131295,131295,7.13],[131296,131301,6.68],[131302,131302,10.18],[131303,131303,5.88],[131304,131307,6.64],[131308,131311,3.42],[131312,131312,6.79],[131313,131313,7.12],[131314,131318,6.87],[131319,131319,8.67],[131320,131320,6.87],[131321,131324,7.12],[131325,131325,6.51],[131326,131326,6.99],[131327,131327,6.51],[131328,131328,7.76],[131329,131329,6.68],[131330,131330,7.76],[131331,131331,6.68],[131332,131332,7.76],[131333,131333,6.68],[131334,131334,7.24],[131335,131335,5.88],[131336,131336,7.24],[131337,131337,5.88],[131338,131338,7.24],[131339,131339,5.88],[131340,131340,7.24],[131341,131341,5.88],[131342,131342,8.3],[131343,131343,8.8],[131344,131344,8.3],[131345,131345,6.99],[131346,131346,6.83],[131347,131347,6.64],[131348,131348,6.83],[131349,131349,6.64],[131350,131350,6.83],[131351,131351,6.64],[131352,131352,6.83],[131353,131353,6.64],[131354,131354,6.83],[131355,131355,6.64],[131356,131356,8.11],[131357,131357,6.99],[131358,131358,8.11],[131359,131359,6.99],[131360,131360,8.11],[131361,131361,6.99],[131362,131362,8.11],[131363,131363,6.99],[131364,131364,8.37],[131365,131365,7.12],[131366,131366,8.37],[131367,131367,7.12],[131368,131368,5.46],[131369,131369,3.42],[131370,131370,5.46],[131371,131371,3.42],[131372,131372,5.46],[131373,131373,3.42],[131374,131374,5.46],[131375,131375,3.42],[131376,131376,5.46],[131377,131377,3.42],[131378,131378,10.07],[131379,131379,7.28],[131380,131380,5.55],[131381,131381,4.03],[131382,131382,7.71],[131383,131384,6.71],[131385,131385,6.37],[131386,131386,3.42],[131387,131387,6.37],[131388,131388,3.42],[131389,131389,6.37],[131390,131390,5.22],[131391,131391,6.37],[131392,131392,5.57],[131393,131393,6.42],[131394,131394,3.52],[131395,131395,8.47],[131396,131396,7.12],[131397,131397,8.47],[131398,131398,7.12],[131399,131399,8.47],[131400,131400,7.12],[131401,131401,8.25],[131402,131402,8.47],[131403,131403,7.12],[131404,131404,8.5],[131405,131405,6.87],[131406,131406,8.5],[131407,131407,6.87],[131408,131408,8.5],[131409,131409,6.87],[131410,131410,11.35],[131411,131411,10.68],[131412,131412,7.82],[131413,131413,4.97],[131414,131414,7.82],[131415,131415,4.97],[131416,131416,7.82],[131417,131417,4.97],[131418,131418,7.1],[131419,131419,5.93],[131420,131420,7.1],[131421,131421,5.93],[131422,131422,7.1],[131423,131423,5.93],[131424,131424,7.1],[131425,131425,5.93],[131426,131426,6.82],[131427,131427,4.56],[131428,131428,6.82],[131429,131429,4.65],[131430,131430,6.82],[131431,131431,4.56],[131432,131432,8.12],[131433,131433,7.12],[131434,131434,8.12],[131435,131435,7.12],[131436,131436,8.12],[131437,131437,7.12],[131438,131438,8.12],[131439,131439,7.12],[131440,131440,8.12],[131441,131441,7.12],[131442,131442,8.12],[131443,131443,7.12],[131444,131444,11.28],[131445,131445,9.79],[131446,131446,7.37],[131447,131447,6.51],[131448,131448,7.37],[131449,131449,6.92],[131450,131450,5.97],[131451,131451,6.92],[131452,131452,5.97],[131453,131453,6.92],[131454,131454,5.97],[131455,131455,3.45],[131456,131456,5.56],[131457,131457,7.55],[131458,131458,6.61],[131459,131459,5.56],[131460,131460,6.61],[131461,131461,5.56],[131462,131463,7.22],[131464,131464,4.44],[131465,131465,7.22],[131466,131466,8.16],[131467,131467,6.61],[131468,131468,5.56],[131469,131469,5.19],[131470,131470,6.67],[131471,131471,8.05],[131472,131472,5.28],[131473,131473,6.11],[131474,131474,7.11],[131475,131475,7.78],[131476,131476,7.22],[131477,131477,7.82],[131478,131478,3.07],[131479,131479,3.89],[131480,131480,7.78],[131481,131481,5.56],[131482,131482,2.78],[131483,131483,4.91],[131484,131484,9.4],[131485,131485,7.22],[131486,131486,5.56],[131487,131487,7.78],[131488,131488,9.14],[131489,131489,6.87],[131490,131490,10.56],[131491,131491,7.71],[131492,131492,6.94],[131493,131493,5.56],[131494,131494,6.11],[131495,131495,5.56],[131496,131496,3.89],[131497,131497,6.54],[131498,131498,5.13],[131499,131499,3.33],[131500,131500,6.67],[131501,131501,3.33],[131502,131502,6.67],[131503,131503,8.46],[131504,131504,7.42],[131505,131505,8.01],[131506,131506,6.52],[131507,131507,7.91],[131508,131508,5],[131509,131509,6.67],[131510,131510,4.44],[131511,131512,5.82],[131513,131513,4.58],[131514,131514,4.53],[131515,131515,5],[131516,131516,5.04],[131517,131517,3.85],[131518,131518,3.33],[131519,131519,5.96],[131520,131520,2.2],[131521,131521,3.24],[131522,131522,2.79],[131523,131523,3.33],[131524,131524,13.89],[131525,131525,11.66],[131526,131526,10],[131527,131527,11.67],[131528,131528,10],[131529,131529,6.11],[131530,131530,12.22],[131531,131531,10.55],[131532,131532,8.89],[131533,131533,7.22],[131534,131534,5],[131535,131535,3.89],[131536,131536,2.78],[131537,131537,7.78],[131538,131538,5],[131539,131539,7.22],[131540,131540,5.56],[131541,131541,7.22],[131542,131542,5.56],[131543,131543,8.12],[131544,131544,7.12],[131545,131545,7.22],[131546,131546,5.56],[131547,131547,8.12],[131548,131548,7.12],[131549,131549,4.44],[131550,131550,7.22],[131551,131551,5],[131552,131552,7.22],[131553,131553,5],[131554,131554,10],[131555,131555,7.22],[131556,131556,7.78],[131557,131557,5],[131558,131558,7.78],[131559,131559,5],[131560,131560,7.78],[131561,131561,5.56],[131562,131562,7.78],[131563,131563,5],[131564,131564,7.78],[131565,131565,5],[131566,131566,5.82],[131567,131567,4.58],[131568,131568,3.33],[131569,131569,13.89],[131570,131570,11.66],[131571,131571,10],[131572,131572,8.11],[131573,131573,6.99],[131574,131574,9.7],[131575,131575,6.46],[131576,131576,8.47],[131577,131577,7.12],[131578,131578,7.76],[131579,131579,6.68],[131580,131580,10.94],[131581,131581,10.18],[131582,131582,8.5],[131583,131583,6.87],[131584,131584,7.22],[131585,131585,5],[131586,131586,7.22],[131587,131587,5],[131588,131588,6.67],[131589,131589,4.44],[131590,131590,6.67],[131591,131591,4.44],[131592,131592,3.89],[131593,131593,2.78],[131594,131594,3.89],[131595,131595,2.78],[131596,131596,7.78],[131597,131597,5],[131598,131598,7.78],[131599,131599,5],[131600,131600,7.22],[131601,131601,4.44],[131602,131602,7.22],[131603,131603,4.44],[131604,131604,7.22],[131605,131605,5.56],[131606,131606,7.22],[131607,131607,5.56],[131608,131608,7.1],[131609,131609,5.93],[131610,131610,6.82],[131611,131611,4.56],[131612,131612,5.54],[131613,131613,3.74],[131614,131614,7.78],[131615,131615,5.56],[131616,131616,7.34],[131617,131617,5.56],[131618,131618,6.76],[131619,131619,5.01],[131620,131620,6.67],[131621,131621,4.44],[131622,131622,7.22],[131623,131623,5],[131624,131624,6.67],[131625,131625,4.44],[131626,131626,7.78],[131627,131627,5],[131628,131628,7.78],[131629,131629,5],[131630,131630,7.78],[131631,131631,5],[131632,131632,7.78],[131633,131633,5],[131634,131634,7.22],[131635,131635,5],[131636,131636,2.78],[131637,131637,5.56],[131638,131638,3.61],[131639,131639,3.33],[131640,131641,8.23],[131642,131643,7.22],[131644,131644,5],[131645,131646,6.67],[131647,131647,3.89],[131648,131648,4.44],[131649,131649,5.32],[131650,131650,4.66],[131651,131651,6.67],[131652,131652,7.22],[131653,131653,7.17],[131654,131654,6.67],[131655,131655,4.44],[131656,131656,5],[131657,131657,3.33],[131658,131658,8.25],[131659,131659,5.56],[131660,131660,7.22],[131661,131661,4.44],[131662,131662,7.22],[131663,131664,5],[131665,131666,5.75],[131667,131667,5.56],[131668,131669,4.44],[131670,131671,5.56],[131672,131672,4.44],[131673,131673,6.64],[131674,131674,6.27],[131675,131676,4.27],[131677,131677,5.93],[131678,131678,4.57],[131679,131679,3.33],[131680,131681,5.51],[131682,131682,5.91],[131683,131683,5],[131684,131684,5.18],[131685,131687,5.56],[131688,131688,2.78],[131689,131689,3.1],[131690,131690,2.88],[131691,131693,2.78],[131694,131694,6.07],[131695,131697,8.33],[131698,131699,5.56],[131700,131700,5.23],[131701,131701,5],[131702,131702,7.59],[131703,131703,7.31],[131704,131704,7.22],[131705,131709,4.44],[131710,131711,4.01],[131712,131713,5.75],[131714,131714,3.89],[131715,131715,3.02],[131716,131716,3.33],[131717,131717,3.51],[131718,131718,3.19],[131719,131720,3.33],[131721,131721,5.56],[131722,131722,6.17],[131723,131723,5.23],[131724,131724,5],[131725,131725,7.22],[131726,131726,5],[131727,131727,5.33],[131728,131728,4.44],[131729,131729,5.13],[131730,131731,4.58],[131732,131734,4.44],[131735,131735,4.98],[131736,131736,7.78],[131737,131737,5.4],[131738,131738,4.57],[131739,131739,5.91],[131740,131740,5.76],[131741,131741,3.33],[131742,131742,5.56],[131743,131743,5.07],[131744,131744,5.56],[131745,131746,4.44],[131747,131747,8.61],[131748,131748,8.72],[131749,131749,9.3],[131750,131750,6.48],[131751,131751,5.37],[131752,131752,7.08],[131753,131753,8.49],[131754,131754,6.22],[131755,131755,5.96],[131756,131756,5.12],[131757,131757,4.81],[131758,131759,6.67],[131760,131761,3.25],[131762,131762,1.81],[131763,131764,2.54],[131765,131765,2.66],[131766,131766,3.48],[131767,131767,4.32],[131768,131768,2.99],[131769,131769,2.81],[131770,131770,4.96],[131771,131775,3.33],[131776,131777,2.51],[131778,131781,5.7],[131782,131783,7.11],[131784,131784,3.33],[131785,131785,7.11],[131786,131791,3.33],[131792,131793,2.78],[131794,131799,3.33],[131800,131805,7.11],[131806,131806,0],[131807,131807,3.82],[131808,131808,2.99],[131809,131809,1.77],[131810,131810,2.17],[131811,131811,2.86],[131812,131812,2.51],[131813,131817,3.83],[131818,131821,3.33],[131822,131822,5],[131823,131836,3.33],[131837,131838,3.97],[131839,131839,3.33],[131840,131951,0],[131952,131952,4.25],[131953,131953,3.35],[131954,131954,6.3],[131955,131955,5.3],[131956,131957,3.33],[131958,131958,7.3],[131959,131959,5.93],[131960,131961,10],[131962,131962,3.33],[131963,131965,4.44],[131966,131966,4.02],[131967,131967,3.33],[131968,131971,10],[131972,131973,7.11],[131974,131974,7.97],[131975,131975,4.02],[131976,131976,8.48],[131977,131977,10.01],[131978,131978,7.05],[131979,131979,10],[131980,131980,9.68],[131981,131981,10],[131982,131982,9.39],[131983,131983,9.7],[131984,131984,3.42],[131985,131985,7.76],[131986,131986,7.62],[131987,131987,6.37],[131988,131988,8.06],[131989,131989,6.83],[131990,131990,6.92],[131991,131991,8.37],[131992,131992,8.5],[131993,131993,5.46],[131994,131994,7.71],[131995,131995,7.76],[131996,131996,9.48],[131997,131997,8.47],[131998,131998,7.15],[131999,131999,8.5],[132000,132000,8.37],[132001,132001,7.33],[132002,132002,10],[132003,132003,6.84],[132004,132004,6.82],[132005,132005,7.37],[132006,132006,9.52],[132007,132007,7.64],[132008,132008,9.76],[132009,132009,8.44],[132010,132010,5.46],[132011,132011,7.37],[132012,132012,6.99],[132013,132013,5.85],[132014,132014,7.12],[132015,132015,3.42],[132016,132016,7.06],[132017,132017,6.99],[132018,132018,7.16],[132019,132019,6.51],[132020,132020,6.87],[132021,132021,5.85],[132022,132022,5.49],[132023,132023,7.12],[132024,132024,7],[132025,132025,3.42],[132026,132026,6.71],[132027,132027,6.51],[132028,132028,7.21],[132029,132029,6.5],[132030,132030,5.81],[132031,132031,6.87],[132032,132032,7.2],[132033,132033,6.99],[132034,132034,5.62],[132035,132035,7.26],[132036,132036,5.35],[132037,132037,7.06],[132038,132038,9.15],[132039,132039,6.35],[132040,132040,9.41],[132041,132041,8.94],[132042,132042,3.42],[132043,132043,7.06],[132044,132044,6.87],[132045,132045,7.06],[132046,132046,8.94],[132047,132047,5.58],[132048,132048,5.27],[132049,132049,5.99],[132050,132050,7.22],[132051,132051,9.23],[132052,132052,7.22],[132053,132053,6.24],[132054,132054,7.31],[132055,132055,5.8],[132056,132056,7.78],[132057,132057,5],[132058,132058,7.22],[132059,132059,4.22],[132060,132060,6.11],[132061,132061,5.46],[132062,132062,5.95],[132063,132063,4.61],[132064,132064,7.51],[132065,132065,5.54],[132066,132066,8.7],[132067,132067,8.33],[132068,132068,7.25],[132069,132069,5.86],[132070,132070,7.4],[132071,132071,4.44],[132072,132072,6.25],[132073,132073,5.86],[132074,132074,6.82],[132075,132075,6.05],[132076,132076,7.25],[132077,132077,5.16],[132078,132078,5.4],[132079,132079,4.5],[132080,132080,5.8],[132081,132081,5],[132082,132082,4.44],[132083,132083,3.33],[132084,132084,7.78],[132085,132086,4.21],[132087,132087,6.11],[132088,132088,5.56],[132089,132089,7.22],[132090,132090,9.44],[132091,132091,6.81],[132092,132092,5.35],[132093,132095,7.22],[132096,132097,6.83],[132098,132098,9.11],[132099,132099,6.37],[132100,132100,7.42],[132101,132101,7.1],[132102,132103,5.46],[132104,132104,5.55],[132105,132105,12.22],[132106,132106,12.14],[132107,132107,9.36],[132108,132108,7.71],[132109,132109,8.46],[132110,132110,7.37],[132111,132111,8.37],[132112,132112,7.76],[132113,132113,7.58],[132114,132114,7.62],[132115,132115,6.37],[132116,132116,8.41],[132117,132117,6.83],[132118,132118,11.15],[132119,132119,7.07],[132120,132121,8.46],[132122,132122,7.71],[132123,132123,8.45],[132124,132124,9.48],[132125,132125,8.37],[132126,132126,8.5],[132127,132127,8.37],[132128,132128,7.33],[132129,132129,7.24],[132130,132130,6.82],[132131,132131,7.37],[132132,132132,9.52],[132133,132133,7.64],[132134,132134,8.5],[132135,132135,7.87],[132136,132136,11.64],[132137,132137,11.77],[132138,132138,9.07],[132139,132139,10.63],[132140,132140,7.58],[132141,132141,7.42],[132142,132142,11.95],[132143,132143,7.95],[132144,132144,6.68],[132145,132145,6.97],[132146,132146,6.77],[132147,132147,5.31],[132148,132148,6.91],[132149,132149,6.64],[132150,132150,9.99],[132151,132151,5.88],[132152,132153,7.2],[132154,132154,6.71],[132155,132155,7.09],[132156,132156,8.3],[132157,132157,7.2],[132158,132158,6.87],[132159,132159,7.2],[132160,132160,6.99],[132161,132161,5.98],[132162,132162,5.35],[132163,132163,6.51],[132164,132164,9.66],[132165,132165,6.69],[132166,132166,7.29],[132167,132167,6.84],[132168,132168,10.02],[132169,132169,10.13],[132170,132170,7.43],[132171,132171,9.37],[132172,132172,6.49],[132173,132173,6.06],[132174,132174,9.94],[132175,132175,6.82],[132176,132177,6.64],[132178,132178,7.12],[132179,132179,5.31],[132180,132180,6.05],[132181,132181,5.93],[132182,132183,3.42],[132184,132184,4.03],[132185,132185,10.12],[132186,132186,10.2],[132187,132187,7.12],[132188,132188,6.71],[132189,132189,7.2],[132190,132190,6.51],[132191,132191,7.2],[132192,132192,12.5],[132193,132193,6.19],[132194,132194,7.64],[132195,132195,6],[132196,132196,10.07],[132197,132197,6.64],[132198,132198,7.22],[132199,132199,5],[132200,132200,10.98],[132201,132201,7.73],[132202,132202,9.89],[132203,132203,7.25],[132204,132204,13.6],[132205,132205,9.99],[132206,132206,5.28],[132207,132207,4.02],[132208,132208,7.8],[132209,132209,6.88],[132210,132210,7.78],[132211,132211,5],[132212,132212,8.15],[132213,132213,6.05],[132214,132214,8.15],[132215,132215,6.05],[132216,132216,13.52],[132217,132217,12.28],[132218,132218,8.24],[132219,132219,5.85],[132220,132220,10.46],[132221,132221,8.98],[132222,132222,12.5],[132223,132223,6.19],[132224,132224,7.22],[132225,132225,4.44],[132226,132226,3.38],[132227,132230,0],[132231,132231,6.36],[132232,132233,0],[132234,132234,7.78],[132235,132235,5.76],[132236,132236,6.61],[132237,132237,5.29],[132238,132238,6.11],[132239,132239,5.56],[132240,132240,6.37],[132241,132241,5.31],[132242,132242,6.37],[132243,132243,5.31],[132244,132244,7.22],[132245,132245,5.77],[132246,132246,11.15],[132247,132247,9.99],[132248,132248,5.28],[132249,132249,4.02],[132250,132250,7.71],[132251,132251,6.71],[132252,132252,7.71],[132253,132253,6.71],[132254,132254,7.25],[132255,132255,5.76],[132256,132256,8.29],[132257,132257,6.3],[132258,132258,8.37],[132259,132259,7.2],[132260,132260,9.21],[132261,132261,6.67],[132262,132262,11.15],[132263,132263,8.44],[132264,132264,8.71],[132265,132265,6.87],[132266,132266,7.22],[132267,132267,4.44],[132268,132268,6.67],[132269,132269,4.91],[132270,132270,7.37],[132271,132271,6.51],[132272,132272,7.37],[132273,132273,6.51],[132274,132274,7.64],[132275,132275,6.69],[132276,132276,8.67],[132277,132277,6.09],[132278,132278,7.34],[132279,132279,5.64],[132280,132280,7.87],[132281,132281,6.84],[132282,132282,7.87],[132283,132283,7.12],[132284,132284,10.15],[132285,132285,7.88],[132286,132286,10.15],[132287,132287,7.88],[132288,132288,3.89],[132289,132289,9.89],[132290,132290,7.25],[132291,132291,7.37],[132292,132292,5.93],[132293,132293,7.45],[132294,132294,5.61],[132295,132295,7.78],[132296,132296,5.76],[132297,132297,7.78],[132298,132298,5.76],[132299,132299,7.34],[132300,132300,5.64],[132301,132301,9.44],[132302,132302,6.81],[132303,132303,2.78],[132304,132304,7.22],[132305,132305,5],[132306,132306,7.22],[132307,132307,5],[132308,132308,10],[132309,132309,7.22],[132310,132310,6.67],[132311,132311,4.44],[132312,132312,8.05],[132313,132313,6.64],[132314,132314,7.39],[132315,132315,4.44],[132316,132316,9.89],[132317,132317,7.25],[132318,132318,5.28],[132319,132319,4.02],[132320,132320,5.28],[132321,132321,4.58],[132322,132322,7.78],[132323,132323,5.76],[132324,132324,7.78],[132325,132325,5.76],[132326,132326,7.78],[132327,132327,5],[132328,132328,8.5],[132329,132329,6.87],[132330,132330,7.78],[132331,132331,5],[132332,132332,6.78],[132333,132333,4.32],[132334,132334,7.34],[132335,132335,5],[132336,132336,7.34],[132337,132337,5],[132338,132338,7.34],[132339,132339,5],[132340,132340,7.34],[132341,132341,5.64],[132342,132342,6.36],[132343,132343,4.54],[132344,132344,9.82],[132345,132345,7.81],[132346,132346,6.36],[132347,132347,4.54],[132348,132348,7.22],[132349,132349,5],[132350,132350,7.22],[132351,132351,5],[132352,132352,6.61],[132353,132353,5.56],[132354,132354,8.52],[132355,132355,7.81],[132356,132356,7.97],[132357,132357,6.78],[132358,132358,5.95],[132359,132359,4.6],[132360,132360,9.36],[132361,132361,7.79],[132362,132362,9.7],[132363,132363,7.93],[132364,132364,7.78],[132365,132365,5.91],[132366,132366,7.16],[132367,132367,6.18],[132368,132368,5.28],[132369,132369,4.02],[132370,132370,7.45],[132371,132371,5.61],[132372,132372,7.62],[132373,132373,6.93],[132374,132374,8.3],[132375,132375,6.81],[132376,132376,10.31],[132377,132377,7.37],[132378,132378,8.5],[132379,132379,6.99],[132380,132380,11.28],[132381,132381,9.79],[132382,132382,6.85],[132383,132383,6.31],[132384,132384,9.81],[132385,132385,7.96],[132386,132386,11.11],[132387,132387,9.08],[132388,132388,7.08],[132389,132389,6.18],[132390,132390,6.89],[132391,132391,6.31],[132392,132392,4.44],[132393,132393,4.03],[132394,132394,8.91],[132395,132395,8.13],[132396,132396,5.62],[132397,132397,5.24],[132398,132398,6.83],[132399,132399,6.07],[132400,132400,10],[132401,132401,8.51],[132402,132402,7.17],[132403,132403,7.73],[132404,132404,7.8],[132405,132405,7.17],[132406,132406,6.93],[132407,132407,6.32],[132408,132408,7.17],[132409,132409,9.24],[132410,132410,7.72],[132411,132411,7.27],[132412,132412,4.46],[132413,132413,9.1],[132414,132414,7.36],[132415,132415,7.41],[132416,132416,6.33],[132417,132417,6.69],[132418,132418,7.8],[132419,132419,7.22],[132420,132420,8.13],[132421,132421,6.35],[132422,132422,6.72],[132423,132423,6.82],[132424,132424,7.34],[132425,132425,6.47],[132426,132426,8.57],[132427,132427,6.7],[132428,132428,8.18],[132429,132429,7.34],[132430,132430,8.16],[132431,132431,5.93],[132432,132432,6.75],[132433,132433,6.53],[132434,132434,6.32],[132435,132435,8.5],[132436,132436,6.53],[132437,132437,7.93],[132438,132438,7.76],[132439,132440,10],[132441,132442,2.34],[132443,132443,2.79],[132444,132444,3.02],[132445,132445,2.79],[132446,132446,4.41],[132447,132447,4.02],[132448,132448,10],[132449,132449,9.73],[132450,132450,6.41],[132451,132451,7.09],[132452,132452,7.12],[132453,132453,6.41],[132454,132454,6.44],[132455,132455,5.14],[132456,132456,6.41],[132457,132457,7.5],[132458,132458,6.71],[132459,132459,6.41],[132460,132460,3.19],[132461,132461,9.76],[132462,132462,6.33],[132463,132463,6.41],[132464,132464,6.02],[132465,132465,6.66],[132466,132466,6.54],[132467,132467,6.19],[132468,132468,6.5],[132469,132469,3.13],[132470,132470,6.37],[132471,132471,4.41],[132472,132472,6.41],[132473,132473,3.81],[132474,132474,9.73],[132475,132475,5.32],[132476,132476,6.73],[132477,132477,6.41],[132478,132478,6.5],[132479,132479,9.71],[132480,132480,7.12],[132481,132481,6.35],[132482,132482,3.96],[132483,132483,9.71],[132484,132484,6.35],[132485,132485,6.14],[132486,132486,7.47],[132487,132487,6.97],[132488,132488,10],[132489,132489,2.8],[132490,132490,4.31],[132491,132492,10],[132493,132493,8.17],[132494,132494,8.18],[132495,132495,7.56],[132496,132496,10],[132497,132541,0],[132542,132542,3.63],[132543,132543,0],[132544,132544,3.33],[132545,132546,0],[132547,132547,3.33],[132548,132549,0],[132550,132550,3.16],[132551,132551,0],[132552,132559,10],[132560,132560,5.27],[132561,132561,4.59],[132562,132562,3.67],[132563,132563,4.64],[132564,132564,5.12],[132565,132565,2.98],[132566,132566,3.17],[132567,132567,5.04],[132568,132568,5.29],[132569,132569,3.11],[132570,132570,4.58],[132571,132571,4.46],[132572,132572,4.35],[132573,132573,5.11],[132574,132574,5.33],[132575,132575,3.26],[132576,132576,3.16],[132577,132577,4.78],[132578,132578,5.07],[132579,132579,4.93],[132580,132580,4.57],[132581,132581,5.64],[132582,132582,5.15],[132583,132583,4.83],[132584,132584,4.64],[132585,132585,6.88],[132586,132586,5.18],[132587,132591,10],[132592,132592,5.97],[132593,132593,6.09],[132594,132594,6.21],[132595,132595,2.55],[132596,132596,4.6],[132597,132607,10],[132608,132608,7.41],[132609,132609,13.24],[132610,132610,7.59],[132611,132611,9.19],[132612,132612,27.92],[132613,132613,10.94],[132614,132615,6.44],[132616,132616,7.78],[132617,132618,5.25],[132619,132619,3.24],[132620,132620,3.19],[132621,132621,2.39],[132622,132622,6.57],[132623,132623,5.41],[132624,132634,0],[132635,132635,3.19],[132636,132636,0],[132637,132637,10],[132638,132638,4.05],[132639,132639,3.56],[132640,132640,8.78],[132641,132641,4.69],[132642,132642,2.38],[132643,132643,2.17],[132644,132644,4.51],[132645,132645,2.17],[132646,132646,6.45],[132647,132647,2.17],[132648,132648,6.49],[132649,132649,3.43],[132650,132651,6.49],[132652,132654,5.77],[132655,132656,3.43],[132657,132658,4.33],[132659,132660,8.99],[132661,132662,10.63],[132663,132664,5.23],[132665,132666,5.41],[132667,132668,7.11],[132669,132671,7.33],[132672,132672,1.98],[132673,132673,7.58],[132674,132674,6.12],[132675,132675,5.41],[132676,132676,4.51],[132677,132677,3.6],[132678,132678,5.41],[132679,132679,3.43],[132680,132680,4.51],[132681,132682,6.45],[132683,132703,0],[132704,132713,5.62],[132714,132714,5.26],[132715,132716,3.19],[132717,132717,5.26],[132718,132718,6.49],[132719,132719,6.12],[132720,132720,0],[132721,132723,2.17],[132724,132724,0],[132725,132725,2.17],[132726,132727,4.51],[132728,132728,6.45],[132729,132736,6.49],[132737,132743,5.77],[132744,132752,3.43],[132753,132761,4.33],[132762,132764,8.99],[132765,132766,10.63],[132767,132767,5.23],[132768,132768,5.41],[132769,132774,7.58],[132775,132776,6.12],[132777,132777,7.57],[132778,132778,11.55],[132779,132779,7.57],[132780,132782,5.41],[132783,132788,7.57],[132789,132792,4.51],[132793,132797,5.41],[132798,132798,4.69],[132799,132799,5.77],[132800,132803,3.43],[132804,132811,4.51],[132812,132814,6.45],[132815,132815,4.51],[132816,132817,6.45],[132818,132819,8.12],[132820,132820,2.07],[132821,132821,3.43],[132822,132828,0],[132829,132829,11.23],[132830,132830,10.84],[132831,132840,0],[132841,132841,6],[132842,132845,0],[132846,132846,3.43],[132847,132847,4.33],[132848,132857,5.62],[132858,132858,8.99],[132859,132859,10.63],[132860,132860,5.41],[132861,132861,4.69],[132862,132862,3.6],[132863,132863,4.69],[132864,132864,5.91],[132865,132865,2.97],[132866,132868,2.57],[132869,132869,5.35],[132870,132871,3.86],[132872,132873,3.76],[132874,132874,5.79],[132875,132875,9.23],[132876,132876,6.94],[132877,132877,7.58],[132878,132878,10],[132879,132879,0],[132880,132880,9.3],[132881,132881,0],[132882,132882,9.58],[132883,132884,10.91],[132885,132886,5.39],[132887,132887,9.3],[132888,132888,6.1],[132889,132889,2.75],[132890,132890,7.01],[132891,132892,9.99],[132893,132893,2.43],[132894,132894,12.2],[132895,132895,8.89],[132896,132896,6.56],[132897,132897,8.85],[132898,132898,6.78],[132899,132900,8.86],[132901,132901,9.53],[132902,132902,8.43],[132903,132903,7.97],[132904,132904,6.26],[132905,132905,8.34],[132906,132906,5.39],[132907,132907,9.45],[132908,132908,7.43],[132909,132909,9.58],[132910,132910,10.91],[132911,132911,5.95],[132912,132938,0],[132939,132940,10],[132941,132941,5.83],[132942,132942,8.43],[132943,132943,6.56],[132944,132950,6.49],[132951,132952,5.77],[132953,132954,3.43],[132955,132955,4.33],[132956,132956,8.99],[132957,132959,5.41],[132960,132961,7.58],[132962,132964,7.57],[132965,132966,3.6],[132967,132969,5.41],[132970,132970,4.51],[132971,132972,4.33],[132973,132973,8.99],[132974,132975,6.86],[132976,132976,10.55],[132977,132977,4.32],[132978,132978,6.86],[132979,132980,2.92],[132981,132983,7.33],[132984,132985,5.43],[132986,132987,5.84],[132988,132988,6.86],[132989,132990,10.55],[132991,132991,6.08],[132992,132992,5.29],[132993,132993,6.78],[132994,132994,8.09],[132995,132995,6.49],[132996,132996,7.12],[132997,132997,5.45],[132998,132998,5.5],[132999,132999,5.33],[133000,133000,5.38],[133001,133001,5.18],[133002,133002,4.49],[133003,133003,6.34],[133004,133004,6.49],[133005,133005,5.76],[133006,133006,5],[133007,133007,7.22],[133008,133008,10.19],[133009,133009,3.9],[133010,133010,5.7],[133011,133011,6.71],[133012,133012,7.28],[133013,133013,4.49],[133014,133014,5.83],[133015,133015,6.46],[133016,133016,6.18],[133017,133018,5.29],[133019,133019,6.34],[133020,133020,6.49],[133021,133023,10.19],[133024,133025,6.49],[133026,133027,5.38],[133028,133028,5],[133029,133029,5.06],[133030,133040,0],[133041,133041,4.73],[133042,133055,10],[133056,133056,5.4],[133057,133057,5.42],[133058,133058,5.45],[133059,133059,5.14],[133060,133061,5.39],[133062,133062,5.25],[133063,133064,5.42],[133065,133065,5.54],[133066,133066,2.65],[133067,133067,6.6],[133068,133068,4.37],[133069,133069,6.19],[133070,133070,5.93],[133071,133071,5.51],[133072,133072,6.45],[133073,133073,5.22],[133074,133074,6.85],[133075,133076,4.19],[133077,133077,5.64],[133078,133078,4.87],[133079,133079,3.77],[133080,133080,7.92],[133081,133081,3.91],[133082,133082,6.5],[133083,133083,7.08],[133084,133084,5.76],[133085,133085,7.33],[133086,133086,5.44],[133087,133087,5.78],[133088,133088,5.21],[133089,133089,5.76],[133090,133090,5.41],[133091,133092,5.44],[133093,133093,5.25],[133094,133094,5.21],[133095,133095,5.29],[133096,133097,4.53],[133098,133098,3.91],[133099,133107,0],[133108,133109,3.38],[133110,133110,5.54],[133111,133111,9.5],[133112,133113,4.81],[133114,133114,4.17],[133115,133119,10],[133120,133120,9.27],[133121,133121,7.76],[133122,133122,7.91],[133123,133123,6.58],[133124,133124,8.58],[133125,133125,9.26],[133126,133126,8.78],[133127,133127,9.45],[133128,133128,9.53],[133129,133129,10.94],[133130,133130,7.36],[133131,133131,6.07],[133132,133132,9.12],[133133,133133,7.27],[133134,133134,7.71],[133135,133135,8.98],[133136,133136,7.54],[133137,133137,10.72],[133138,133138,7.28],[133139,133139,7.13],[133140,133140,8.41],[133141,133141,9.37],[133142,133145,0],[133146,133146,4.05],[133147,133155,0],[133156,133156,2.29],[133157,133159,0],[133160,133160,2.47],[133161,133165,0],[133166,133167,10],[133168,133169,3.59],[133170,133170,5.91],[133171,133172,8.75],[133173,133173,5.79],[133174,133174,6.7],[133175,133175,13.09],[133176,133176,10.75],[133177,133178,10.64],[133179,133179,5.02],[133180,133180,6.16],[133181,133181,8.06],[133182,133182,4.25],[133183,133183,10],[133184,133184,5.34],[133185,133185,8.94],[133186,133186,4.77],[133187,133187,6.62],[133188,133188,9.01],[133189,133189,4.12],[133190,133190,2.49],[133191,133191,7.8],[133192,133192,6.76],[133193,133193,4.42],[133194,133194,6.71],[133195,133195,4.6],[133196,133196,9.91],[133197,133197,5.87],[133198,133198,9.93],[133199,133199,8.54],[133200,133200,7.2],[133201,133201,10.23],[133202,133202,8.62],[133203,133203,8.31],[133204,133204,9.13],[133205,133205,6.42],[133206,133206,7.63],[133207,133207,11.33],[133208,133208,4.76],[133209,133211,0],[133212,133213,10],[133214,133214,5.57],[133215,133279,10],[133280,133281,8.75],[133282,133282,6.76],[133283,133283,7.65],[133284,133284,9.22],[133285,133285,6.76],[133286,133286,6.33],[133287,133287,4.85],[133288,133289,7.58],[133290,133290,5.48],[133291,133291,4.29],[133292,133292,5.81],[133293,133293,2.39],[133294,133294,4.77],[133295,133295,11.27],[133296,133296,8.39],[133297,133297,4.69],[133298,133298,3.37],[133299,133299,6.16],[133300,133300,7.96],[133301,133301,10],[133302,133304,8.75],[133305,133305,3.42],[133306,133306,7.58],[133307,133307,9.26],[133308,133308,6.76],[133309,133309,5.99],[133310,133332,10],[133333,133333,5.25],[133334,133334,3.6],[133335,133335,3.7],[133336,133336,3.1],[133337,133337,2.97],[133338,133343,10],[133344,133344,5.13],[133345,133345,5.63],[133346,133346,10],[133347,133369,0],[133370,133370,10],[133371,133375,0],[133376,133378,6.6],[133379,133379,9.75],[133380,133381,7.64],[133382,133382,10.55],[133383,133384,5.51],[133385,133385,5.09],[133386,133386,7.4],[133387,133387,9.08],[133388,133388,7.37],[133389,133392,5.77],[133393,133395,10.55],[133396,133396,10.54],[133397,133397,7.98],[133398,133398,8.39],[133399,133399,5.96],[133400,133400,6.67],[133401,133401,6.54],[133402,133402,6.81],[133403,133403,6.99],[133404,133404,7.69],[133405,133405,7.99],[133406,133406,7.6],[133407,133407,5.39],[133408,133408,6.11],[133409,133409,5.72],[133410,133410,5.68],[133411,133411,7.94],[133412,133412,5.9],[133413,133413,7.07],[133414,133414,5.59],[133415,133415,6.52],[133416,133417,5.54],[133418,133418,5.92],[133419,133419,8.3],[133420,133420,5.91],[133421,133421,6.3],[133422,133422,6.08],[133423,133423,6.26],[133424,133424,4.41],[133425,133425,4.67],[133426,133426,7.37],[133427,133428,7.31],[133429,133429,5.74],[133430,133430,7.75],[133431,133431,5.99],[133432,133432,7.19],[133433,133433,5.35],[133434,133434,6.6],[133435,133435,9.51],[133436,133436,6.6],[133437,133437,5.4],[133438,133440,9.51],[133441,133448,6.6],[133449,133452,9.51],[133453,133453,6.6],[133454,133455,9.51],[133456,133456,12.22],[133457,133460,0],[133461,133463,6.6],[133464,133464,7.98],[133465,133465,8.39],[133466,133466,5.96],[133467,133467,7.69],[133468,133468,5.72],[133469,133469,5.68],[133470,133470,8.3],[133471,133471,6.26],[133472,133472,9.08],[133473,133473,7.37],[133474,133475,6.6],[133476,133476,5.42],[133477,133477,7.91],[133478,133478,4.99],[133479,133479,4.59],[133480,133480,4.99],[133481,133481,5.1],[133482,133482,5.3],[133483,133483,5.5],[133484,133484,5.2],[133485,133485,6.71],[133486,133486,5.17],[133487,133487,4.96],[133488,133488,5.33],[133489,133489,3.33],[133490,133491,7.64],[133492,133493,10.55],[133494,133495,7.64],[133496,133496,5.51],[133497,133497,7.69],[133498,133498,6.26],[133499,133499,5.96],[133500,133500,7.47],[133501,133501,4.97],[133502,133502,5.88],[133503,133503,5.91],[133504,133504,5.99],[133505,133505,6.6],[133506,133506,11.52],[133507,133507,11.32],[133508,133508,10],[133509,133509,9.48],[133510,133510,12.48],[133511,133511,5.16],[133512,133512,6.98],[133513,133513,7.26],[133514,133514,7.42],[133515,133515,7.95],[133516,133516,6.56],[133517,133518,10],[133519,133519,7.54],[133520,133520,8.54],[133521,133522,10],[133523,133523,6.37],[133524,133524,7.99],[133525,133525,7.37],[133526,133526,7.27],[133527,133527,6.87],[133528,133528,6.48],[133529,133529,7.25],[133530,133530,5.43],[133531,133531,6.22],[133532,133532,8.91],[133533,133533,8.2],[133534,133534,10.23],[133535,133535,5.59],[133536,133536,5.98],[133537,133537,7.26],[133538,133538,5.69],[133539,133539,6.65],[133540,133540,7.21],[133541,133541,7.12],[133542,133542,5.84],[133543,133543,6.21],[133544,133544,6.76],[133545,133545,10],[133546,133546,6.97],[133547,133547,8.09],[133548,133548,5.69],[133549,133549,7.91],[133550,133550,6.24],[133551,133551,5.94],[133552,133552,5.69],[133553,133553,10],[133554,133554,7.83],[133555,133557,10],[133558,133558,7.19],[133559,133559,6.22],[133560,133560,6.98],[133561,133561,5.06],[133562,133563,10],[133564,133564,6.6],[133565,133565,4.98],[133566,133566,9.6],[133567,133567,9.59],[133568,133568,9.6],[133569,133572,6.6],[133573,133574,10],[133575,133576,9.68],[133577,133578,10],[133579,133580,12.68],[133581,133581,6.6],[133582,133582,5.57],[133583,133590,10],[133591,133591,9.6],[133592,133595,10],[133596,133596,7.26],[133597,133597,5.69],[133598,133598,10],[133599,133599,5.94],[133600,133600,7.95],[133601,133601,6.56],[133602,133603,6.6],[133604,133605,10],[133606,133606,6.49],[133607,133607,5.4],[133608,133608,4.9],[133609,133609,7.61],[133610,133610,5.26],[133611,133611,6.48],[133612,133612,6.97],[133613,133613,5.99],[133614,133614,7.68],[133615,133615,6.47],[133616,133616,5.87],[133617,133617,5.69],[133618,133618,4.3],[133619,133619,6.98],[133620,133620,4.21],[133621,133621,6.86],[133622,133622,6.6],[133623,133623,3],[133624,133624,6.13],[133625,133625,6.05],[133626,133626,6.73],[133627,133627,3.06],[133628,133632,10],[133633,133634,6.77],[133635,133635,9.17],[133636,133636,10],[133637,133637,7.85],[133638,133638,10.36],[133639,133640,8.39],[133641,133642,6.2],[133643,133646,10],[133647,133647,5.79],[133648,133648,7.85],[133649,133650,10],[133651,133651,6.12],[133652,133652,7.85],[133653,133653,6.01],[133654,133654,6.05],[133655,133655,7.77],[133656,133656,7.66],[133657,133657,5.66],[133658,133658,6.25],[133659,133659,5.97],[133660,133660,6.17],[133661,133661,5.65],[133662,133662,5.75],[133663,133663,5.45],[133664,133664,6.06],[133665,133665,5.62],[133666,133666,6.13],[133667,133667,5.81],[133668,133668,5.29],[133669,133669,6.08],[133670,133670,5.96],[133671,133671,5.93],[133672,133672,6.09],[133673,133673,10],[133674,133674,5.91],[133675,133675,5.65],[133676,133676,6.14],[133677,133677,5.7],[133678,133678,5.91],[133679,133679,7.43],[133680,133680,5.62],[133681,133681,10],[133682,133682,7],[133683,133683,7.02],[133684,133684,10],[133685,133685,5.61],[133686,133686,5.99],[133687,133687,10],[133688,133688,5.91],[133689,133689,5.62],[133690,133691,10],[133692,133692,6.77],[133693,133693,10],[133694,133694,9.28],[133695,133696,9.36],[133697,133698,6.77],[133699,133702,10],[133703,133704,6.77],[133705,133706,10],[133707,133709,6.77],[133710,133712,10],[133713,133713,6.77],[133714,133720,10],[133721,133721,6.05],[133722,133722,7.77],[133723,133723,6.13],[133724,133724,5.63],[133725,133725,10],[133726,133726,5.65],[133727,133733,10],[133734,133734,5.55],[133735,133735,4.99],[133736,133736,5.22],[133737,133737,5.31],[133738,133738,5.82],[133739,133739,5.97],[133740,133740,5.19],[133741,133741,5.41],[133742,133742,5.99],[133743,133743,6.05],[133744,133745,6.77],[133746,133746,5.79],[133747,133747,6.2],[133748,133748,11.06],[133749,133749,6.77],[133750,133760,10],[133761,133762,6.51],[133763,133763,9.26],[133764,133764,10],[133765,133765,9.34],[133766,133766,12.29],[133767,133767,6.42],[133768,133768,6.47],[133769,133769,6.69],[133770,133770,9.19],[133771,133771,9.43],[133772,133772,7.42],[133773,133773,9.34],[133774,133774,10],[133775,133776,9.34],[133777,133777,12.29],[133778,133778,10],[133779,133780,12.29],[133781,133781,6.05],[133782,133782,8.09],[133783,133783,7.67],[133784,133784,6.85],[133785,133785,6.13],[133786,133786,7.38],[133787,133787,7.5],[133788,133788,6.78],[133789,133789,8.19],[133790,133790,7.63],[133791,133791,5.36],[133792,133792,6.37],[133793,133793,5.41],[133794,133794,6.05],[133795,133795,8.7],[133796,133796,6.3],[133797,133797,7.03],[133798,133798,5.13],[133799,133799,6.88],[133800,133800,5.9],[133801,133801,10],[133802,133802,6.02],[133803,133803,6.05],[133804,133804,8.2],[133805,133805,8.24],[133806,133806,6.34],[133807,133807,6.82],[133808,133808,5.1],[133809,133809,10],[133810,133810,7.16],[133811,133811,8.21],[133812,133812,10],[133813,133813,6.42],[133814,133814,7.79],[133815,133815,6.18],[133816,133816,7.89],[133817,133817,6.05],[133818,133819,10],[133820,133820,6.51],[133821,133821,5.4],[133822,133824,9.46],[133825,133829,6.51],[133830,133830,10],[133831,133832,6.51],[133833,133833,9.46],[133834,133834,10],[133835,133836,9.46],[133837,133837,6.51],[133838,133839,10],[133840,133840,11.18],[133841,133855,10],[133856,133856,9.97],[133857,133857,7.42],[133858,133859,6.51],[133860,133861,10],[133862,133862,5.38],[133863,133863,5.55],[133864,133864,5.07],[133865,133865,4.96],[133866,133866,5.46],[133867,133867,5.94],[133868,133868,5.26],[133869,133869,7],[133870,133870,5],[133871,133871,5.2],[133872,133872,4.18],[133873,133873,9.41],[133874,133880,10],[133881,133881,7.7],[133882,133888,10],[133889,133889,5.1],[133890,133890,8.66],[133891,133891,9.75],[133892,133892,10],[133893,133893,7.1],[133894,133894,9.42],[133895,133895,7.48],[133896,133896,7.57],[133897,133897,7.42],[133898,133898,7.56],[133899,133899,7.38],[133900,133900,5.67],[133901,133902,10],[133903,133903,6.96],[133904,133904,9.24],[133905,133906,10],[133907,133907,6.87],[133908,133908,9.13],[133909,133909,7.2],[133910,133910,7.26],[133911,133911,7.15],[133912,133912,7.07],[133913,133913,7.73],[133914,133914,6.67],[133915,133915,6.79],[133916,133916,7.2],[133917,133917,6.96],[133918,133918,7.32],[133919,133919,6.98],[133920,133920,7.42],[133921,133921,6.95],[133922,133922,6.89],[133923,133923,7.02],[133924,133924,6.89],[133925,133925,6.93],[133926,133926,6.89],[133927,133927,6.3],[133928,133928,6.89],[133929,133929,10],[133930,133930,7.07],[133931,133931,8.65],[133932,133932,6.81],[133933,133933,7.59],[133934,133934,7.07],[133935,133935,7.5],[133936,133936,7.2],[133937,133937,10],[133938,133938,7.89],[133939,133939,7.2],[133940,133940,10],[133941,133941,6.81],[133942,133942,7.22],[133943,133943,7.21],[133944,133944,7.02],[133945,133945,6.71],[133946,133947,10],[133948,133948,5.1],[133949,133949,3.91],[133950,133950,7.42],[133951,133951,5.1],[133952,133952,8.57],[133953,133956,5.1],[133957,133958,10],[133959,133960,9.96],[133961,133962,10],[133963,133964,12.28],[133965,133965,5.1],[133966,133973,10],[133974,133974,5.1],[133975,133975,7.42],[133976,133979,10],[133980,133980,6.95],[133981,133981,6.89],[133982,133982,10],[133983,133983,7.92],[133984,133984,7.41],[133985,133985,5.67],[133986,133987,5.1],[133988,133989,10],[133990,133999,5.72],[134000,134000,6.21],[134001,134001,6.34],[134002,134002,2.6],[134003,134003,4.34],[134004,134004,5.86],[134005,134005,4.94],[134006,134006,5.92],[134007,134007,6.62],[134008,134017,10],[134018,134018,5.58],[134019,134019,6.95],[134020,134020,10],[134021,134021,8.86],[134022,134022,10.48],[134023,134023,9.21],[134024,134024,6.39],[134025,134025,9.29],[134026,134026,11.68],[134027,134029,10],[134030,134031,7.12],[134032,134032,7.8],[134033,134033,10],[134034,134035,7.5],[134036,134036,15.33],[134037,134037,7.12],[134038,134040,10],[134041,134041,8.32],[134042,134042,6.54],[134043,134043,10],[134044,134044,7.52],[134045,134045,10],[134046,134046,9.54],[134047,134047,7.61],[134048,134050,10],[134051,134051,12.29],[134052,134052,6.94],[134053,134055,10],[134056,134056,6.72],[134057,134057,9.16],[134058,134058,5.98],[134059,134061,10],[134062,134062,6.73],[134063,134063,6.84],[134064,134064,5.5],[134065,134065,6.42],[134066,134066,7.91],[134067,134067,8.41],[134068,134068,6.73],[134069,134069,7.31],[134070,134070,9.01],[134071,134071,9.24],[134072,134072,9.83],[134073,134073,11.62],[134074,134077,10],[134078,134078,10.83],[134079,134079,7.64],[134080,134080,6.02],[134081,134081,9.73],[134082,134082,11.15],[134083,134085,10],[134086,134086,12.59],[134087,134087,11.62],[134088,134088,14.79],[134089,134089,10],[134090,134090,17.21],[134091,134091,16.1],[134092,134092,20.12],[134093,134093,5.58],[134094,134095,10],[134096,134096,8.3],[134097,134102,10],[134103,134103,13.69],[134104,134115,10],[134116,134116,2.61],[134117,134117,4.32],[134118,134118,5.48],[134119,134119,6.35],[134120,134120,6.36],[134121,134121,6.06],[134122,134122,6.12],[134123,134123,7.38],[134124,134124,8.22],[134125,134125,6.43],[134126,134126,8.5],[134127,134127,8.34],[134128,134128,7.09],[134129,134129,6.93],[134130,134130,7.74],[134131,134131,8.17],[134132,134132,7.12],[134133,134133,14.24],[134134,134134,7.33],[134135,134135,11.35],[134136,134136,12.52],[134137,134137,7.3],[134138,134138,10.05],[134139,134143,10],[134144,134144,6.6],[134145,134145,10.12],[134146,134146,13.03],[134147,134147,10.54],[134148,134148,10],[134149,134149,8.81],[134150,134150,8.68],[134151,134151,7.8],[134152,134152,10.76],[134153,134153,9.3],[134154,134154,12.83],[134155,134155,15.89],[134156,134156,10.91],[134157,134157,10],[134158,134159,8.15],[134160,134160,8.39],[134161,134161,10],[134162,134163,8.11],[134164,134164,8.35],[134165,134165,5.53],[134166,134166,9.25],[134167,134167,6.36],[134168,134168,11.48],[134169,134169,8.21],[134170,134171,8.53],[134172,134172,8.16],[134173,134173,13.56],[134174,134174,10.46],[134175,134175,8.5],[134176,134176,6.43],[134177,134178,8.57],[134179,134179,8.86],[134180,134180,8.15],[134181,134183,8.32],[134184,134184,7.95],[134185,134185,10],[134186,134187,8.07],[134188,134189,8.71],[134190,134190,11.54],[134191,134191,13.56],[134192,134192,6.43],[134193,134193,9.3],[134194,134194,7.98],[134195,134195,6.69],[134196,134196,9.3],[134197,134197,7.98],[134198,134198,5.7],[134199,134199,7.98],[134200,134200,8.02],[134201,134201,11.66],[134202,134204,10],[134205,134205,6.88],[134206,134206,9.94],[134207,134208,6.6],[134209,134209,10.15],[134210,134210,12.97],[134211,134211,11.22],[134212,134212,14.3],[134213,134213,10],[134214,134216,6.6],[134217,134217,10],[134218,134219,6.6],[134220,134220,9.93],[134221,134221,6.6],[134222,134228,10],[134229,134230,6.6],[134231,134231,10],[134232,134232,8.53],[134233,134233,8.16],[134234,134234,8.32],[134235,134239,10],[134240,134240,19.65],[134241,134241,14.73],[134242,134243,6.6],[134244,134245,10],[134246,134246,6.04],[134247,134247,6.16],[134248,134248,7.75],[134249,134249,5.36],[134250,134250,6.22],[134251,134251,7.02],[134252,134252,5.14],[134253,134253,5.38],[134254,134254,6.08],[134255,134255,5.14],[134256,134263,10],[134264,134264,5.47],[134265,134265,2.61],[134266,134266,4.97],[134267,134267,7.78],[134268,134268,7.05],[134269,134269,6.97],[134270,134270,6.92],[134271,134271,8.2],[134272,134272,6.12],[134273,134273,5.61],[134274,134274,11.69],[134275,134275,9.03],[134276,134276,10],[134277,134277,9.57],[134278,134278,9.39],[134279,134279,8.1],[134280,134280,10.87],[134281,134281,13.35],[134282,134282,17.5],[134283,134283,12.72],[134284,134284,9.44],[134285,134285,10],[134286,134287,8.54],[134288,134288,8.76],[134289,134289,10],[134290,134291,8.66],[134292,134292,8.67],[134293,134293,6.37],[134294,134294,9.22],[134295,134295,7.01],[134296,134296,10.77],[134297,134297,8.66],[134298,134298,8.94],[134299,134299,9.24],[134300,134300,8.66],[134301,134301,14.16],[134302,134302,10.91],[134303,134303,9.07],[134304,134304,7],[134305,134306,8.37],[134307,134307,9.69],[134308,134308,6.86],[134309,134311,8.2],[134312,134312,7.7],[134313,134313,10],[134314,134315,8.61],[134316,134316,8.88],[134317,134317,8.96],[134318,134318,12.25],[134319,134319,13.84],[134320,134320,6.92],[134321,134321,9.82],[134322,134322,8.16],[134323,134323,7.7],[134324,134324,10],[134325,134325,8.63],[134326,134326,6.98],[134327,134327,8.8],[134328,134328,7.68],[134329,134329,8.61],[134330,134331,10],[134332,134332,5.61],[134333,134333,5.05],[134334,134334,10.67],[134335,134335,9.4],[134336,134336,14.19],[134337,134337,9.23],[134338,134338,13.87],[134339,134339,7.02],[134340,134340,10.75],[134341,134341,10],[134342,134342,5.61],[134343,134343,10.4],[134344,134344,7.48],[134345,134345,10],[134346,134346,13.87],[134347,134347,18.66],[134348,134348,10.58],[134349,134349,9.25],[134350,134356,10],[134357,134357,10.4],[134358,134358,7.48],[134359,134365,10],[134366,134366,9.58],[134367,134367,10],[134368,134368,17.33],[134369,134369,14.39],[134370,134371,6.34],[134372,134373,10],[134374,134383,6.88],[134384,134384,10],[134385,134385,5.78],[134386,134386,8.92],[134387,134400,10],[134401,134401,0],[134402,134402,3.85],[134403,134403,2.83],[134404,134404,10],[134405,134405,12.39],[134406,134406,13.72],[134407,134407,8.99],[134408,134408,16.3],[134409,134409,6.36],[134410,134410,13.61],[134411,134411,8.03],[134412,134412,9.98],[134413,134413,10],[134414,134415,11.13],[134416,134416,16.73],[134417,134417,10],[134418,134418,6.65],[134419,134419,11.08],[134420,134420,14.11],[134421,134421,8.85],[134422,134422,7.99],[134423,134423,7.52],[134424,134424,11.91],[134425,134425,9.69],[134426,134426,8.29],[134427,134427,11.58],[134428,134428,7.97],[134429,134429,14.45],[134430,134430,12.57],[134431,134431,5.18],[134432,134432,5.8],[134433,134433,10.94],[134434,134434,11.26],[134435,134435,12.42],[134436,134436,8.72],[134437,134437,7.36],[134438,134438,5.56],[134439,134440,8.4],[134441,134441,9.14],[134442,134442,7.16],[134443,134443,10.26],[134444,134444,11.31],[134445,134445,5.79],[134446,134446,5.8],[134447,134447,8.82],[134448,134448,6.11],[134449,134449,5.71],[134450,134450,7.69],[134451,134451,6.5],[134452,134452,5.75],[134453,134453,7.99],[134454,134454,8.59],[134455,134455,10.03],[134456,134456,10.94],[134457,134457,11.02],[134458,134458,7.36],[134459,134460,10],[134461,134461,3.81],[134462,134462,10.2],[134463,134463,8.1],[134464,134464,8.02],[134465,134465,8.69],[134466,134466,8.75],[134467,134467,9.25],[134468,134468,9.29],[134469,134469,10],[134470,134470,11.43],[134471,134471,10.61],[134472,134472,16.83],[134473,134473,10],[134474,134474,15.59],[134475,134475,18.36],[134476,134476,13.3],[134477,134477,5.99],[134478,134478,1.73],[134479,134486,10],[134487,134487,13.3],[134488,134494,10],[134495,134495,13.73],[134496,134496,7.99],[134497,134497,11.01],[134498,134498,6.03],[134499,134499,6.71],[134500,134501,10],[134502,134502,5.8],[134503,134503,7.82],[134504,134504,7.99],[134505,134505,9.86],[134506,134506,6.18],[134507,134507,8.82],[134508,134508,12.05],[134509,134509,4.4],[134510,134510,7.99],[134511,134511,9.22],[134512,134512,8.4],[134513,134513,8.76],[134514,134514,11.95],[134515,134515,6.87],[134516,134516,7.49],[134517,134517,10.09],[134518,134520,10],[134521,134521,10.55],[134522,134522,13.41],[134523,134523,9.22],[134524,134524,6.18],[134525,134525,9.86],[134526,134526,8.51],[134527,134527,9.82],[134528,134529,10],[134530,134530,4.16],[134531,134531,2.83],[134532,134532,10],[134533,134533,6.03],[134534,134534,8.74],[134535,134535,9.21],[134536,134536,9.17],[134537,134537,5.93],[134538,134538,5.68],[134539,134539,5.88],[134540,134540,10.38],[134541,134541,10.2],[134542,134542,13.85],[134543,134543,7.86],[134544,134544,13.12],[134545,134545,6.69],[134546,134546,6.85],[134547,134547,11.14],[134548,134549,6.66],[134550,134550,11.35],[134551,134553,10],[134554,134554,7.8],[134555,134555,7.31],[134556,134556,6.65],[134557,134557,5.94],[134558,134558,6.49],[134559,134559,8.22],[134560,134560,6.14],[134561,134561,5.46],[134562,134562,5.33],[134563,134563,11.99],[134564,134564,11.12],[134565,134565,10.23],[134566,134566,6.6],[134567,134567,5.88],[134568,134568,6.18],[134569,134569,6.62],[134570,134570,6.31],[134571,134571,8.53],[134572,134572,8.22],[134573,134573,7.12],[134574,134574,5.92],[134575,134575,5.04],[134576,134576,6.49],[134577,134577,6.84],[134578,134578,10],[134579,134579,6.45],[134580,134580,5.33],[134581,134581,6.29],[134582,134582,6.8],[134583,134583,7.86],[134584,134584,6.61],[134585,134585,6.58],[134586,134586,6.05],[134587,134587,5.42],[134588,134588,10],[134589,134589,6.26],[134590,134591,10],[134592,134592,6.04],[134593,134593,6.97],[134594,134594,5.53],[134595,134595,6.31],[134596,134596,7.29],[134597,134597,6.77],[134598,134598,6.27],[134599,134601,10],[134602,134602,6.2],[134603,134606,10],[134607,134607,8.12],[134608,134608,8.41],[134609,134609,8.4],[134610,134611,5.61],[134612,134612,5.56],[134613,134613,10],[134614,134614,5.56],[134615,134615,10],[134616,134616,9.18],[134617,134617,10.42],[134618,134618,11.16],[134619,134619,15.1],[134620,134621,12.95],[134622,134622,14.91],[134623,134623,10.05],[134624,134641,10],[134642,134642,12.94],[134643,134643,4.65],[134644,134644,10.67],[134645,134655,10],[134656,134656,1.95],[134657,134657,6],[134658,134658,5.72],[134659,134659,5.69],[134660,134660,6.39],[134661,134661,6.29],[134662,134662,6.35],[134663,134663,4.77],[134664,134664,5.28],[134665,134665,6.1],[134666,134666,5.86],[134667,134667,5.91],[134668,134668,8.18],[134669,134669,8.15],[134670,134671,6.61],[134672,134672,5.32],[134673,134673,6.92],[134674,134674,8.52],[134675,134675,8.18],[134676,134676,6.3],[134677,134677,6.29],[134678,134678,6],[134679,134679,6.3],[134680,134680,5.52],[134681,134681,6.19],[134682,134683,6.51],[134684,134685,5.95],[134686,134686,6.71],[134687,134687,6.76],[134688,134688,6.64],[134689,134689,6.3],[134690,134690,6.11],[134691,134691,4.78],[134692,134692,5.98],[134693,134693,5.82],[134694,134694,6.64],[134695,134695,5.11],[134696,134696,6.25],[134697,134697,6.48],[134698,134698,5.96],[134699,134699,6.32],[134700,134700,6.71],[134701,134701,5.78],[134702,134702,5.76],[134703,134703,6.14],[134704,134704,4.36],[134705,134705,5.08],[134706,134706,5.06],[134707,134707,10.23],[134708,134714,5.08],[134715,134718,10],[134719,134719,7.62],[134720,134720,3.16],[134721,134721,5.8],[134722,134722,5.02],[134723,134723,5.45],[134724,134724,4.22],[134725,134725,5.16],[134726,134726,6.05],[134727,134734,5.08],[134735,134735,7.32],[134736,134736,5.85],[134737,134737,6.14],[134738,134738,6.55],[134739,134739,6.78],[134740,134740,6.15],[134741,134741,6.03],[134742,134742,5.79],[134743,134743,7.63],[134744,134744,6.2],[134745,134745,6.68],[134746,134746,7.75],[134747,134747,12.73],[134748,134784,10],[134785,134785,6.18],[134786,134786,5.41],[134787,134787,10],[134788,134788,5.67],[134789,134790,10],[134791,134791,5.11],[134792,134792,5.56],[134793,134793,10],[134794,134794,5.49],[134795,134796,10],[134797,134797,5.67],[134798,134803,10],[134804,134804,5.83],[134805,134805,6.02],[134806,134806,6.23],[134807,134807,6.41],[134808,134808,10],[134809,134809,6.14],[134810,134810,5.27],[134811,134811,5.31],[134812,134812,6.75],[134813,134813,6.67],[134814,134814,6.65],[134815,134815,6.69],[134816,134816,10],[134817,134817,6.18],[134818,134818,5.59],[134819,134819,5.41],[134820,134820,10],[134821,134821,5.55],[134822,134822,10],[134823,134823,5.35],[134824,134825,10],[134826,134826,5.55],[134827,134827,7.68],[134828,134828,10],[134829,134829,5.55],[134830,134830,5.51],[134831,134831,5.28],[134832,134832,5.13],[134833,134833,0],[134834,134834,4.3],[134835,134841,0],[134842,134842,10],[134843,134844,0],[134845,134845,4.54],[134846,134847,10],[134848,134848,3.41],[134849,134849,5.91],[134850,134850,3.37],[134851,134851,3.4],[134852,134852,3.33],[134853,134853,10],[134854,134854,5.87],[134855,134855,10],[134856,134859,0],[134860,134860,3.25],[134861,134861,0],[134862,134863,10],[134864,134864,5.58],[134865,134865,5.08],[134866,134866,4.98],[134867,134867,5.75],[134868,134868,5.11],[134869,134869,5.27],[134870,134870,6.23],[134871,134871,6.28],[134872,134872,6.65],[134873,134873,6.27],[134874,134875,10],[134876,134877,10.01],[134878,134911,10],[134912,134912,6.23],[134913,134913,4.94],[134914,134915,7.69],[134916,134916,11.57],[134917,134917,5.97],[134918,134918,11.57],[134919,134919,14.99],[134920,134920,3.85],[134921,134921,5.77],[134922,134922,6.44],[134923,134924,1.6],[134925,134925,2.45],[134926,134926,4.58],[134927,134928,2.45],[134929,134929,2.62],[134930,134930,10.52],[134931,134931,5.95],[134932,134932,3.59],[134933,134933,6.48],[134934,134934,4.72],[134935,134935,7.52],[134936,134937,0],[134938,134938,2.93],[134939,134940,5.03],[134941,134941,3.05],[134942,134942,4.98],[134943,134943,5.31],[134944,134945,3.41],[134946,134946,5.43],[134947,134947,5.17],[134948,134948,6.92],[134949,134949,4.98],[134950,134951,5.69],[134952,134952,4.73],[134953,134953,5.07],[134954,134954,5.09],[134955,134955,5.43],[134956,134956,5.17],[134957,134957,6.92],[134958,134958,4.98],[134959,134960,5.69],[134961,134961,5.05],[134962,134962,5.07],[134963,134963,4.97],[134964,134964,5.25],[134965,134965,0],[134966,134966,4.97],[134967,134967,0],[134968,134968,5.47],[134969,134969,0],[134970,134970,13.6],[134971,134971,13.3],[134972,134972,4.88],[134973,134973,4.92],[134974,134974,2.86],[134975,134975,4.28],[134976,134978,5.17],[134979,134979,5.07],[134980,134980,4.73],[134981,134981,5.34],[134982,134982,5.17],[134983,134983,4.73],[134984,134984,10],[134985,134985,4.64],[134986,134988,4.73],[134989,134989,5.07],[134990,134993,4.73],[134994,134994,5.07],[134995,134995,4.73],[134996,134998,5.17],[134999,134999,5.07],[135000,135000,5.17],[135001,135001,5.34],[135002,135002,5.17],[135003,135003,4.73],[135004,135004,5.07],[135005,135006,4.73],[135007,135007,4.9],[135008,135008,4.73],[135009,135009,5.6],[135010,135010,4.9],[135011,135011,5.34],[135012,135014,5.17],[135015,135015,4.73],[135016,135016,6.04],[135017,135017,5.07],[135018,135018,4.9],[135019,135019,5.24],[135020,135020,5.3],[135021,135024,10],[135025,135025,5.44],[135026,135026,0],[135027,135027,5.44],[135028,135028,5.52],[135029,135029,10.96],[135030,135030,5.07],[135031,135031,10.51],[135032,135032,5.07],[135033,135033,10.51],[135034,135038,0],[135039,135039,4.62],[135040,135040,0],[135041,135041,5.44],[135042,135044,0],[135045,135045,5.16],[135046,135048,0],[135049,135049,5.25],[135050,135050,4.77],[135051,135051,5.23],[135052,135055,10],[135056,135063,5.07],[135064,135064,10],[135065,135100,5.07],[135101,135101,10],[135102,135102,5.11],[135103,135103,5.13],[135104,135104,5.8],[135105,135105,3.92],[135106,135106,4.97],[135107,135107,5.85],[135108,135108,4.13],[135109,135109,3.28],[135110,135110,0],[135111,135111,6.45],[135112,135112,3.55],[135113,135113,5.53],[135114,135114,5.97],[135115,135115,5.79],[135116,135116,6.16],[135117,135117,10],[135118,135118,5.49],[135119,135119,4.98],[135120,135120,20.63],[135121,135121,4.75],[135122,135122,2.1],[135123,135123,11.52],[135124,135124,4.86],[135125,135125,6.38],[135126,135126,6.57],[135127,135127,6.09],[135128,135128,6.35],[135129,135167,10],[135168,135168,11.1],[135169,135169,6.99],[135170,135170,6.89],[135171,135171,11.11],[135172,135172,6.61],[135173,135173,6.98],[135174,135174,11.12],[135175,135175,6.98],[135176,135176,9.15],[135177,135177,6.6],[135178,135178,10.87],[135179,135179,6.79],[135180,135180,6.6],[135181,135181,6.79],[135182,135182,7.12],[135183,135183,13.54],[135184,135184,11.09],[135185,135185,11.1],[135186,135186,6.65],[135187,135187,6.98],[135188,135188,5.61],[135189,135189,6.98],[135190,135190,6.97],[135191,135191,7.01],[135192,135192,11.11],[135193,135193,6.97],[135194,135194,11.1],[135195,135195,6.98],[135196,135196,11.1],[135197,135197,6.98],[135198,135198,11.14],[135199,135199,11.09],[135200,135200,6.79],[135201,135201,10.14],[135202,135202,11.04],[135203,135203,10.88],[135204,135204,13.93],[135205,135206,6.63],[135207,135207,6.3],[135208,135208,7.63],[135209,135209,14.18],[135210,135210,24.91],[135211,135211,9.11],[135212,135212,10.02],[135213,135216,5.94],[135217,135217,12.26],[135218,135223,5.94],[135224,135224,9.77],[135225,135226,5.94],[135227,135227,9.04],[135228,135228,9.25],[135229,135230,5.94],[135231,135231,15.25],[135232,135232,6.65],[135233,135233,6.25],[135234,135234,7.28],[135235,135236,6.25],[135237,135238,7.63],[135239,135239,6.49],[135240,135240,6.65],[135241,135241,7.63],[135242,135242,3.05],[135243,135243,5.26],[135244,135244,6.79],[135245,135245,10.14],[135246,135246,6.6],[135247,135247,12.91],[135248,135248,6.89],[135249,135249,6.97],[135250,135250,6.96],[135251,135251,6.81],[135252,135252,6.32],[135253,135253,6.64],[135254,135254,9.7],[135255,135255,9.9],[135256,135257,5.94],[135258,135258,6.25],[135259,135259,9.15],[135260,135260,6.85],[135261,135261,6.65],[135262,135264,5.94],[135265,135265,7.38],[135266,135266,9.33],[135267,135267,12.54],[135268,135268,10.18],[135269,135269,6.98],[135270,135270,6.65],[135271,135271,10.39],[135272,135272,9.95],[135273,135273,10.52],[135274,135276,10.48],[135277,135277,10.52],[135278,135278,13.52],[135279,135279,10.92],[135280,135280,10.77],[135281,135284,5.94],[135285,135285,7.03],[135286,135286,7],[135287,135287,6.99],[135288,135289,11.11],[135290,135290,10.72],[135291,135291,11.12],[135292,135292,11.02],[135293,135293,10.99],[135294,135294,10.4],[135295,135295,6.98],[135296,135296,11.07],[135297,135297,6.65],[135298,135298,5.94],[135299,135299,9.33],[135300,135300,11.98],[135301,135302,5.94],[135303,135303,9.99],[135304,135305,9.79],[135306,135306,10.49],[135307,135307,9.79],[135308,135308,13.22],[135309,135309,5.94],[135310,135310,6.98],[135311,135311,9.79],[135312,135312,7.63],[135313,135313,6.46],[135314,135314,6.92],[135315,135315,7.34],[135316,135316,7.49],[135317,135317,7.45],[135318,135318,7.32],[135319,135319,5.55],[135320,135321,6.65],[135322,135322,9.79],[135323,135323,9.99],[135324,135324,10.49],[135325,135325,5.94],[135326,135326,4.01],[135327,135327,10.13],[135328,135328,6.62],[135329,135329,6.77],[135330,135330,7.08],[135331,135331,6.96],[135332,135332,6.09],[135333,135333,7.9],[135334,135334,6.64],[135335,135335,7.85],[135336,135336,5.6],[135337,135337,6.34],[135338,135338,7.82],[135339,135339,7.01],[135340,135340,6.29],[135341,135341,6.82],[135342,135342,7.05],[135343,135343,6.92],[135344,135344,7.34],[135345,135345,6.15],[135346,135346,5.92],[135347,135347,6.8],[135348,135348,6.79],[135349,135349,7.05],[135350,135350,6.43],[135351,135352,6.23],[135353,135353,6.29],[135354,135354,6.33],[135355,135355,7.7],[135356,135356,5.92],[135357,135357,6.62],[135358,135358,6.29],[135359,135359,6.72],[135360,135360,7.35],[135361,135361,5.76],[135362,135362,6.06],[135363,135363,6.05],[135364,135364,6.76],[135365,135365,7.92],[135366,135375,10],[135376,135376,5.18],[135377,135377,5.69],[135378,135378,5.27],[135379,135379,8.31],[135380,135380,5.39],[135381,135381,5.34],[135382,135382,6.21],[135383,135383,8.47],[135384,135384,5.38],[135385,135385,5.22],[135386,135386,9.72],[135387,135387,5.76],[135388,135388,5.77],[135389,135389,7.36],[135390,135390,5.34],[135391,135391,5.57],[135392,135392,7.39],[135393,135393,5.52],[135394,135394,6.63],[135395,135395,5.57],[135396,135396,8],[135397,135397,5.35],[135398,135398,7.36],[135399,135399,5.51],[135400,135400,5.8],[135401,135401,5.66],[135402,135402,5.88],[135403,135403,5.75],[135404,135404,5.8],[135405,135405,6.02],[135406,135406,5.75],[135407,135407,5.18],[135408,135408,5.3],[135409,135409,5.93],[135410,135410,5.3],[135411,135412,5.43],[135413,135413,5.91],[135414,135414,7.34],[135415,135415,5.18],[135416,135416,5.56],[135417,135417,5.27],[135418,135418,5.18],[135419,135419,5.37],[135420,135420,3.7],[135421,135421,5.77],[135422,135422,5.38],[135423,135423,5.69],[135424,135442,8.65],[135443,135518,10],[135519,135520,0],[135521,135541,8.65],[135542,135581,10],[135582,135582,8.65],[135583,135585,10],[135586,135586,8.65],[135587,135591,10],[135592,135618,8.65],[135619,135679,10],[135680,135680,7.36],[135681,135681,9.67],[135682,135682,6.84],[135683,135683,7.02],[135684,135684,6.94],[135685,135685,7.81],[135686,135686,9.57],[135687,135687,11.67],[135688,135688,6.91],[135689,135689,9.05],[135690,135690,8.87],[135691,135691,6.91],[135692,135692,9.12],[135693,135693,8.24],[135694,135694,11.43],[135695,135695,9.24],[135696,135696,10.9],[135697,135697,13.06],[135698,135698,13.04],[135699,135699,10.9],[135700,135700,12.92],[135701,135701,10.9],[135702,135702,10.95],[135703,135703,13.13],[135704,135704,11.43],[135705,135705,14.27],[135706,135706,12.03],[135707,135707,11.43],[135708,135708,12.04],[135709,135710,11.43],[135711,135711,12.15],[135712,135712,10.31],[135713,135713,12.91],[135714,135714,10.57],[135715,135715,10.31],[135716,135716,10.62],[135717,135717,11.56],[135718,135718,10.04],[135719,135719,10.69],[135720,135720,6.51],[135721,135721,7.7],[135722,135722,7.29],[135723,135723,9.65],[135724,135724,8.68],[135725,135725,6.61],[135726,135726,8.81],[135727,135727,9.65],[135728,135728,7.14],[135729,135729,9.39],[135730,135730,9.33],[135731,135731,7.14],[135732,135732,9.2],[135733,135734,7.14],[135735,135735,9.42],[135736,135736,8.4],[135737,135737,9.96],[135738,135738,9.89],[135739,135739,8.4],[135740,135740,9.77],[135741,135741,8.96],[135742,135742,8.4],[135743,135743,9.99],[135744,135751,9.05],[135752,135752,10.6],[135753,135753,10],[135754,135754,13.5],[135755,135756,9.05],[135757,135757,13.5],[135758,135759,10],[135760,135764,9.35],[135765,135765,10.67],[135766,135766,9.35],[135767,135767,10],[135768,135768,10.75],[135769,135769,10],[135770,135770,13.65],[135771,135772,9.35],[135773,135773,11.9],[135774,135775,10],[135776,135776,7.53],[135777,135777,9.59],[135778,135778,9.53],[135779,135779,7.53],[135780,135780,9.4],[135781,135781,9.88],[135782,135782,7.53],[135783,135783,9.62],[135784,135784,8.4],[135785,135785,9.96],[135786,135786,9.89],[135787,135787,8.4],[135788,135788,9.77],[135789,135789,10.28],[135790,135790,8.4],[135791,135791,9.99],[135792,135794,8.37],[135795,135795,8.38],[135796,135796,8.47],[135797,135800,8.37],[135801,135801,8.4],[135802,135802,8.37],[135803,135803,8.38],[135804,135804,8.37],[135805,135805,10.05],[135806,135806,8.44],[135807,135807,8.37],[135808,135808,7.56],[135809,135809,9.52],[135810,135810,8.99],[135811,135811,7.56],[135812,135812,8.75],[135813,135813,7.36],[135814,135815,11.01],[135816,135816,11.45],[135817,135817,10],[135818,135818,11.13],[135819,135819,8.31],[135820,135820,8.75],[135821,135821,11.12],[135822,135823,10],[135824,135824,5.8],[135825,135825,7.76],[135826,135826,7.23],[135827,135827,6.83],[135828,135828,6.99],[135829,135829,7.46],[135830,135830,8.5],[135831,135831,7.97],[135832,135832,8.35],[135833,135833,9.68],[135834,135834,9.16],[135835,135835,8.35],[135836,135836,8.92],[135837,135837,8.35],[135838,135838,10.35],[135839,135839,8.67],[135840,135840,6.67],[135841,135841,9.12],[135842,135842,9.1],[135843,135843,6.67],[135844,135844,8.97],[135845,135845,6.98],[135846,135846,6.67],[135847,135847,8.59],[135848,135848,7.65],[135849,135849,9.9],[135850,135850,9.83],[135851,135851,7.65],[135852,135852,9.71],[135853,135854,7.65],[135855,135855,9.56],[135856,135856,12.11],[135857,135857,10],[135858,135858,11.5],[135859,135859,9.26],[135860,135860,9.71],[135861,135861,11.5],[135862,135863,10],[135864,135864,9.62],[135865,135865,11.88],[135866,135866,11.81],[135867,135867,9.62],[135868,135868,11.68],[135869,135870,9.62],[135871,135871,10],[135872,135872,14.09],[135873,135873,10],[135874,135874,13.48],[135875,135875,11.9],[135876,135876,11.68],[135877,135877,13.48],[135878,135879,10],[135880,135880,9.74],[135881,135881,12],[135882,135884,9.74],[135885,135885,12.39],[135886,135886,9.74],[135887,135887,12.55],[135888,135888,7.11],[135889,135889,9.56],[135890,135890,9.29],[135891,135891,6.92],[135892,135892,9.23],[135893,135893,6.91],[135894,135894,7.31],[135895,135895,10],[135896,135896,7.89],[135897,135898,9.8],[135899,135899,7.89],[135900,135900,9.69],[135901,135901,9.6],[135902,135902,7.89],[135903,135903,9.92],[135904,135908,12],[135909,135909,13.53],[135910,135911,12],[135912,135912,6.25],[135913,135913,7.87],[135914,135914,9.29],[135915,135915,6.45],[135916,135916,10.24],[135917,135917,7.45],[135918,135918,8.85],[135919,135919,11.13],[135920,135920,8.24],[135921,135921,11.11],[135922,135922,10.4],[135923,135923,8.04],[135924,135924,10.05],[135925,135925,9.09],[135926,135926,8.95],[135927,135927,10.38],[135928,135928,8.19],[135929,135929,10.81],[135930,135930,10.1],[135931,135931,7.74],[135932,135932,10],[135933,135933,9.68],[135934,135934,8.95],[135935,135935,10.08],[135936,135936,8.49],[135937,135937,11.36],[135938,135938,10.65],[135939,135939,8.29],[135940,135940,10.56],[135941,135941,9.98],[135942,135942,9.02],[135943,135943,10.63],[135944,135944,6.29],[135945,135945,9.02],[135946,135946,6.67],[135947,135947,6.83],[135948,135948,6.55],[135949,135949,8.68],[135950,135950,6.29],[135951,135951,7.66],[135952,135952,11.25],[135953,135953,10],[135954,135954,10.64],[135955,135955,6.72],[135956,135956,7.92],[135957,135957,10.64],[135958,135959,10],[135960,135960,8.15],[135961,135961,9.91],[135962,135964,8.15],[135965,135965,9.49],[135966,135966,8.44],[135967,135967,8.15],[135968,135968,12],[135969,135969,14.11],[135970,135970,14.09],[135971,135971,11.95],[135972,135972,13.96],[135973,135973,11.58],[135974,135974,12],[135975,135975,14.13],[135976,135976,14.7],[135977,135977,15.07],[135978,135978,15],[135979,135979,14.7],[135980,135980,18.12],[135981,135981,14.3],[135982,135982,14.5],[135983,135983,15.1],[135984,135984,7.22],[135985,135985,9.61],[135986,135986,9.4],[135987,135987,7.1],[135988,135988,9.28],[135989,135989,9.23],[135990,135990,7.27],[135991,135991,9.38],[135992,135992,7.47],[135993,135993,9.76],[135994,135994,9.55],[135995,135995,7.25],[135996,135996,9.42],[135997,135997,9.41],[135998,135998,7.51],[135999,135999,9.43],[136000,136000,7.11],[136001,136001,9.56],[136002,136002,7.23],[136003,136003,6.39],[136004,136004,7.29],[136005,136005,6.91],[136006,136006,7.3],[136007,136007,8.92],[136008,136008,9.3],[136009,136009,9.48],[136010,136010,9.89],[136011,136011,9.48],[136012,136012,10.97],[136013,136013,9.18],[136014,136014,9.33],[136015,136015,9.18],[136016,136016,8.37],[136017,136017,8.4],[136018,136018,8.37],[136019,136019,8.38],[136020,136021,8.37],[136022,136022,8.46],[136023,136023,8.37],[136024,136024,8.84],[136025,136025,12.07],[136026,136026,10.14],[136027,136030,10],[136031,136031,7.95],[136032,136032,9.61],[136033,136033,3.3],[136034,136034,6.68],[136035,136037,3.97],[136038,136038,5.78],[136039,136039,3.3],[136040,136040,10.06],[136041,136041,5.89],[136042,136042,5.36],[136043,136043,5.88],[136044,136044,5.84],[136045,136045,7.08],[136046,136046,6.63],[136047,136047,6.8],[136048,136048,7.19],[136049,136049,6.09],[136050,136050,4.56],[136051,136051,8],[136052,136052,7.95],[136053,136053,9.22],[136054,136054,5.84],[136055,136055,7.19],[136056,136056,8.54],[136057,136057,9.49],[136058,136058,6.02],[136059,136059,6.19],[136060,136060,11.56],[136061,136063,10],[136064,136064,16.38],[136065,136065,15.47],[136066,136066,12.04],[136067,136067,16.14],[136068,136068,11.72],[136069,136069,11.27],[136070,136070,9.4],[136071,136071,14.08],[136072,136073,10.68],[136074,136074,11.68],[136075,136075,13.67],[136076,136076,10.54],[136077,136077,10.06],[136078,136078,8.47],[136079,136079,11.85],[136080,136080,3.28],[136081,136081,5.93],[136082,136083,3.28],[136084,136084,5.93],[136085,136085,7.24],[136086,136086,4.82],[136087,136087,9.34],[136088,136088,10.98],[136089,136089,5.7],[136090,136095,10],[136096,136096,7.47],[136097,136097,6.94],[136098,136098,6.6],[136099,136099,9.39],[136100,136100,10.51],[136101,136101,4.68],[136102,136102,7.2],[136103,136103,8.81],[136104,136104,6.48],[136105,136105,6.19],[136106,136106,7.32],[136107,136107,6.01],[136108,136108,6.22],[136109,136109,9.64],[136110,136110,6.23],[136111,136111,8.54],[136112,136112,5.64],[136113,136113,5.92],[136114,136114,10.74],[136115,136115,10.09],[136116,136116,6.39],[136117,136117,6.13],[136118,136118,7.45],[136119,136119,9.17],[136120,136120,6.1],[136121,136121,9.91],[136122,136122,10.55],[136123,136123,7.83],[136124,136124,6.3],[136125,136125,8.29],[136126,136126,7.86],[136127,136127,7.57],[136128,136128,7.59],[136129,136129,8.83],[136130,136130,6.18],[136131,136131,6.31],[136132,136132,6.1],[136133,136133,11.38],[136134,136134,6.35],[136135,136135,9.22],[136136,136136,8.88],[136137,136137,12.22],[136138,136138,9.22],[136139,136139,6.62],[136140,136140,7.61],[136141,136141,10.82],[136142,136142,6.82],[136143,136143,6.56],[136144,136144,6.05],[136145,136145,7.88],[136146,136146,6.94],[136147,136147,5.26],[136148,136148,10.11],[136149,136149,6.98],[136150,136150,8.64],[136151,136152,6.93],[136153,136153,7.21],[136154,136154,6.75],[136155,136155,9.06],[136156,136156,8.96],[136157,136157,6.2],[136158,136158,5.95],[136159,136159,7.21],[136160,136160,9.13],[136161,136161,10.85],[136162,136162,6.56],[136163,136163,8.19],[136164,136164,8.15],[136165,136165,8.25],[136166,136166,7.27],[136167,136167,6.49],[136168,136168,9.42],[136169,136169,8.21],[136170,136170,10.43],[136171,136171,7.86],[136172,136172,9.21],[136173,136173,7.27],[136174,136174,6.69],[136175,136175,9.22],[136176,136176,7.44],[136177,136177,9.22],[136178,136178,6.52],[136179,136179,9.46],[136180,136180,6.94],[136181,136181,7.54],[136182,136183,9.22],[136184,136184,5.81],[136185,136185,7.19],[136186,136186,5.08],[136187,136187,7.38],[136188,136188,5.41],[136189,136189,5.88],[136190,136190,8.21],[136191,136191,9.22],[136192,136192,10],[136193,136196,8.73],[136197,136198,7.91],[136199,136199,7.9],[136200,136201,7.94],[136202,136203,7.91],[136204,136209,9.02],[136210,136210,9.52],[136211,136211,9.63],[136212,136212,9.46],[136213,136213,9.63],[136214,136214,7.94],[136215,136215,9.65],[136216,136216,9.12],[136217,136217,9.64],[136218,136218,9.15],[136219,136219,7.9],[136220,136220,7.84],[136221,136221,6.3],[136222,136222,5.61],[136223,136223,3.65],[136224,136224,3.67],[136225,136226,5.39],[136227,136227,3.95],[136228,136228,4.81],[136229,136229,5.72],[136230,136230,4.2],[136231,136231,2.15],[136232,136232,4],[136233,136233,4.72],[136234,136234,4.18],[136235,136235,12.22],[136236,136236,9.61],[136237,136237,10.29],[136238,136238,11.2],[136239,136239,8.75],[136240,136242,8.58],[136243,136247,7.89],[136248,136249,7.88],[136250,136250,8.91],[136251,136251,8.88],[136252,136252,8.9],[136253,136253,9.05],[136254,136254,8.9],[136255,136255,8.93],[136256,136256,8.97],[136257,136257,9.56],[136258,136258,8.97],[136259,136259,9.56],[136260,136260,9.37],[136261,136261,8.71],[136262,136262,9.62],[136263,136263,8.74],[136264,136264,7.6],[136265,136265,4.33],[136266,136266,1.99],[136267,136267,4.97],[136268,136271,8.88],[136272,136278,7.24],[136279,136279,10.7],[136280,136280,10.58],[136281,136281,10.56],[136282,136282,10.57],[136283,136283,10.56],[136284,136284,10.57],[136285,136285,8.31],[136286,136286,9.01],[136287,136287,8.31],[136288,136288,9.01],[136289,136289,8.63],[136290,136290,8.35],[136291,136291,8.62],[136292,136292,8.35],[136293,136293,8.63],[136294,136294,3.95],[136295,136296,11.13],[136297,136298,9.52],[136299,136307,6.51],[136308,136308,8.1],[136309,136309,7.94],[136310,136310,7.84],[136311,136311,8.19],[136312,136312,7.84],[136313,136313,8.19],[136314,136314,8.12],[136315,136315,7.92],[136316,136316,8.12],[136317,136317,7.92],[136318,136318,8.12],[136319,136319,7.92],[136320,136320,8.12],[136321,136321,7.92],[136322,136322,7.78],[136323,136324,4.8],[136325,136325,8.52],[136326,136326,8.63],[136327,136328,7.87],[136329,136337,7.09],[136338,136345,8.68],[136346,136346,8.56],[136347,136350,8.68],[136351,136351,8.56],[136352,136352,8.68],[136353,136354,4.53],[136355,136355,6.43],[136356,136363,6.22],[136364,136364,7.31],[136365,136365,8.02],[136366,136366,7.76],[136367,136367,7.15],[136368,136368,7.76],[136369,136369,7.15],[136370,136370,7.1],[136371,136371,7.81],[136372,136372,7.1],[136373,136374,7.81],[136375,136375,7.15],[136376,136376,7.8],[136377,136377,7.15],[136378,136378,7.69],[136379,136379,3.87],[136380,136380,3.71],[136381,136381,3.87],[136382,136382,4.5],[136383,136383,6.05],[136384,136391,9.17],[136392,136392,8.99],[136393,136393,10.74],[136394,136394,10.76],[136395,136395,10.79],[136396,136396,9.06],[136397,136397,10.79],[136398,136398,9.06],[136399,136399,9.17],[136400,136400,5.96],[136401,136401,5.58],[136402,136402,6.11],[136403,136411,8.73],[136412,136413,10.32],[136414,136414,10.46],[136415,136415,10.32],[136416,136416,10.46],[136417,136417,10.31],[136418,136418,8.73],[136419,136419,10.32],[136420,136420,8.73],[136421,136421,10.32],[136422,136422,10.42],[136423,136423,8.61],[136424,136424,10.49],[136425,136425,8.61],[136426,136426,5.54],[136427,136427,4.46],[136428,136428,6.68],[136429,136437,6.12],[136438,136438,7.46],[136439,136439,7.7],[136440,136440,7.4],[136441,136441,7.2],[136442,136442,7.55],[136443,136443,7.2],[136444,136444,6.35],[136445,136445,8.14],[136446,136446,6.34],[136447,136447,8.14],[136448,136448,7.83],[136449,136449,7.6],[136450,136450,7.92],[136451,136451,7.6],[136452,136452,7.85],[136453,136453,4.16],[136454,136454,4.09],[136455,136455,4.16],[136456,136456,4.98],[136457,136458,4.17],[136459,136459,4.16],[136460,136460,12],[136461,136461,11.44],[136462,136462,10.57],[136463,136463,11.15],[136464,136466,9.75],[136467,136470,6.88],[136471,136476,11.56],[136477,136484,8.36],[136485,136485,6.3],[136486,136494,6.12],[136495,136495,7.37],[136496,136496,6.12],[136497,136497,7.71],[136498,136498,7.42],[136499,136499,7.71],[136500,136500,7.42],[136501,136501,7.66],[136502,136502,7.71],[136503,136503,7.66],[136504,136505,7.71],[136506,136506,7.86],[136507,136507,7.37],[136508,136509,7.71],[136510,136510,3.71],[136511,136511,4.96],[136512,136512,4.06],[136513,136513,4.36],[136514,136519,9.41],[136520,136525,6.54],[136526,136526,8.13],[136527,136527,8.01],[136528,136528,4.03],[136529,136529,4.46],[136530,136530,6.68],[136531,136534,9.08],[136535,136538,9.22],[136539,136539,10.62],[136540,136540,10.56],[136541,136541,5.95],[136542,136547,9.51],[136548,136551,8.34],[136552,136552,9.93],[136553,136553,9.79],[136554,136554,5.27],[136555,136556,8.88],[136557,136558,7.24],[136559,136559,6.01],[136560,136561,8.88],[136562,136563,7.24],[136564,136564,8.39],[136565,136566,8.41],[136567,136570,7.92],[136571,136571,6.25],[136572,136572,7.32],[136573,136573,4.31],[136574,136580,10.54],[136581,136581,8.76],[136582,136585,6.68],[136586,136589,8.98],[136590,136592,13.75],[136593,136594,10.55],[136595,136596,13.74],[136597,136597,6.69],[136598,136598,10.38],[136599,136602,7.54],[136603,136606,9.17],[136607,136607,5.96],[136608,136613,8.73],[136614,136614,5.54],[136615,136621,6.12],[136622,136622,3.71],[136623,136623,5.69],[136624,136627,6.28],[136628,136631,5.76],[136632,136635,8.38],[136636,136639,7.98],[136640,136643,8.38],[136644,136645,8.67],[136646,136649,7.88],[136650,136651,8.67],[136652,136655,7.88],[136656,136657,8.52],[136658,136659,7.92],[136660,136660,7.59],[136661,136661,7.92],[136662,136663,8.31],[136664,136665,7.92],[136666,136666,8.06],[136667,136667,7.92],[136668,136669,8.02],[136670,136670,6.99],[136671,136672,6.84],[136673,136673,6.99],[136674,136675,8.02],[136676,136677,6.7],[136678,136678,6.63],[136679,136679,6.7],[136680,136681,9.35],[136682,136685,7.3],[136686,136686,4.58],[136687,136688,10.56],[136689,136692,5.82],[136693,136694,10.55],[136695,136698,6.69],[136699,136700,10.48],[136701,136704,6.69],[136705,136705,4.98],[136706,136707,7.08],[136708,136711,9.05],[136712,136713,10.56],[136714,136717,5.82],[136718,136719,8.37],[136720,136723,7.05],[136724,136726,6.38],[136727,136731,9.42],[136732,136733,7.82],[136734,136737,9.32],[136738,136739,9.42],[136740,136743,6.41],[136744,136745,9.8],[136746,136749,6.47],[136750,136751,8.7],[136752,136752,6.25],[136753,136754,6.22],[136755,136755,6.25],[136756,136757,10.05],[136758,136761,6.32],[136762,136763,12.24],[136764,136767,6.04],[136768,136769,7.62],[136770,136773,6.94],[136774,136775,4.07],[136776,136777,7.62],[136778,136778,6.94],[136779,136779,6.88],[136780,136781,6.94],[136782,136783,10.76],[136784,136787,5.91],[136788,136789,10.76],[136790,136793,7.02],[136794,136794,3.76],[136795,136796,10.76],[136797,136800,7.45],[136801,136802,10.76],[136803,136804,5.91],[136805,136805,6.13],[136806,136806,5.91],[136807,136808,10.76],[136809,136809,7.45],[136810,136811,7.15],[136812,136812,7.45],[136813,136813,7.19],[136814,136814,5.48],[136815,136815,10.54],[136816,136817,17.49],[136818,136818,17.83],[136819,136820,14.31],[136821,136822,17.47],[136823,136831,10],[136832,136832,4.45],[136833,136833,3.01],[136834,136834,4.45],[136835,136835,5.89],[136836,136836,7.33],[136837,136837,8.77],[136838,136838,3.01],[136839,136839,4.45],[136840,136840,5.89],[136841,136841,7.33],[136842,136842,8.77],[136843,136843,3.01],[136844,136844,4.45],[136845,136845,5.89],[136846,136846,7.33],[136847,136847,8.77],[136848,136848,3.01],[136849,136849,4.45],[136850,136850,5.89],[136851,136851,7.33],[136852,136852,8.77],[136853,136853,3.01],[136854,136854,4.45],[136855,136856,5.89],[136857,136857,7.33],[136858,136858,5.89],[136859,136860,4.55],[136861,136863,10],[136864,136864,6.81],[136865,136865,7.06],[136866,136866,6.84],[136867,136867,5.99],[136868,136869,6.84],[136870,136871,5.25],[136872,136872,3.96],[136873,136874,5.89],[136875,136875,5.56],[136876,136876,5.05],[136877,136877,3.96],[136878,136878,4.02],[136879,136879,5.17],[136880,136880,5.19],[136881,136881,5.01],[136882,136882,3.34],[136883,136883,4.45],[136884,136885,5.69],[136886,136886,5.89],[136887,136887,5.86],[136888,136888,6.44],[136889,136889,4.39],[136890,136891,7.31],[136892,136892,5.13],[136893,136893,3.27],[136894,136894,5.08],[136895,136895,3.96],[136896,136896,5.08],[136897,136897,2.85],[136898,136898,3.27],[136899,136899,5.12],[136900,136900,4.87],[136901,136901,5.19],[136902,136902,4.02],[136903,136903,5.08],[136904,136904,4.59],[136905,136905,6.07],[136906,136906,3.81],[136907,136907,6.53],[136908,136908,2.85],[136909,136909,3.27],[136910,136910,5.19],[136911,136911,5.13],[136912,136912,4.03],[136913,136913,4.24],[136914,136914,5.09],[136915,136915,4.02],[136916,136916,5.5],[136917,136917,5.17],[136918,136918,7.36],[136919,136919,7.54],[136920,136920,6.62],[136921,136921,3.52],[136922,136922,3.97],[136923,136923,4.29],[136924,136924,5.31],[136925,136925,5.88],[136926,136926,7.31],[136927,136927,5.82],[136928,136928,6.33],[136929,136929,5.13],[136930,136930,6.33],[136931,136931,6.07],[136932,136932,6.86],[136933,136933,7.31],[136934,136934,6.62],[136935,136935,2.85],[136936,136936,5.19],[136937,136937,4.39],[136938,136938,7.65],[136939,136939,3.66],[136940,136940,2.77],[136941,136941,4.63],[136942,136942,5.13],[136943,136943,6.62],[136944,136944,6.02],[136945,136945,5.16],[136946,136946,5.52],[136947,136947,4.56],[136948,136948,5.53],[136949,136949,3.72],[136950,136950,4.74],[136951,136951,5.04],[136952,136952,5.66],[136953,136959,10],[136960,136960,10.14],[136961,136961,10.11],[136962,136962,5.35],[136963,136963,9.84],[136964,136964,8.37],[136965,136965,10.11],[136966,136966,9.75],[136967,136967,10.48],[136968,136968,8.5],[136969,136969,10.7],[136970,136970,8.51],[136971,136971,10.3],[136972,136972,10.29],[136973,136973,10],[136974,136974,9.13],[136975,136975,7.61],[136976,136976,9.22],[136977,136977,10.49],[136978,136980,5.94],[136981,136991,10],[136992,136992,8.8],[136993,136993,8.76],[136994,136994,5.21],[136995,136995,6.27],[136996,136996,7.84],[136997,136997,8.05],[136998,136998,9.6],[136999,136999,8.7],[137000,137000,9.66],[137001,137001,8.73],[137002,137002,5.19],[137003,137003,8.72],[137004,137004,8.75],[137005,137005,6.13],[137006,137006,8.92],[137007,137007,10.17],[137008,137008,9.58],[137009,137009,8.05],[137010,137012,5.94],[137013,137013,3.29],[137014,137014,4.88],[137015,137023,10],[137024,137025,8.28],[137026,137026,6.25],[137027,137027,6.19],[137028,137028,5.99],[137029,137029,8.05],[137030,137030,10.25],[137031,137031,8.17],[137032,137032,4.38],[137033,137033,8.28],[137034,137034,6.19],[137035,137035,7.34],[137036,137036,8.81],[137037,137037,6.13],[137038,137038,8.67],[137039,137039,8.17],[137040,137040,7.58],[137041,137041,5.74],[137042,137043,5.94],[137044,137055,10],[137056,137056,8.05],[137057,137057,9.18],[137058,137058,3.92],[137059,137059,6.29],[137060,137060,7.97],[137061,137061,9.45],[137062,137062,10.15],[137063,137063,8.05],[137064,137064,7.97],[137065,137065,9.18],[137066,137066,8.53],[137067,137067,9.18],[137068,137068,9.41],[137069,137069,10],[137070,137070,9.38],[137071,137071,8.34],[137072,137072,10.53],[137073,137073,10],[137074,137075,5.94],[137076,137087,10],[137088,137090,6],[137091,137091,9.5],[137092,137095,6],[137096,137096,13],[137097,137097,9.5],[137098,137100,6],[137101,137101,9.5],[137102,137102,13],[137103,137104,6],[137105,137105,6.22],[137106,137112,6],[137113,137113,9.5],[137114,137114,3.5],[137115,137115,9.5],[137116,137116,3.5],[137117,137118,6],[137119,137120,9.5],[137121,137121,9.72],[137122,137122,5.8],[137123,137123,6],[137124,137124,9.5],[137125,137125,6],[137126,137126,9.5],[137127,137128,6],[137129,137129,7.1],[137130,137130,6.2],[137131,137139,6],[137140,137141,0],[137142,137142,8.58],[137143,137143,5.57],[137144,137146,5.56],[137147,137149,4.77],[137150,137150,9.01],[137151,137152,10.21],[137153,137154,8.31],[137155,137155,8.51],[137156,137156,12.09],[137157,137157,12.44],[137158,137158,4.77],[137159,137159,7.95],[137160,137160,7.14],[137161,137161,4.77],[137162,137162,5.97],[137163,137164,4.77],[137165,137165,4.81],[137166,137171,4.77],[137172,137172,4.65],[137173,137173,6.2],[137174,137174,3.43],[137175,137175,5.3],[137176,137176,18.25],[137177,137177,6.47],[137178,137178,11.76],[137179,137179,3.8],[137180,137180,5.3],[137181,137181,4.77],[137182,137183,10],[137184,137185,5.3],[137186,137186,6.61],[137187,137187,8.8],[137188,137190,5.94],[137191,137191,6.97],[137192,137192,5.94],[137193,137193,5.65],[137194,137199,10],[137200,137200,3.76],[137201,137201,4.12],[137202,137202,1.6],[137203,137203,6.59],[137204,137204,4.12],[137205,137205,3.98],[137206,137206,2.84],[137207,137207,5.34],[137208,137208,2.84],[137209,137209,4.44],[137210,137215,10],[137216,137216,5.34],[137217,137217,10.3],[137218,137218,3.84],[137219,137219,6.38],[137220,137220,3.84],[137221,137221,5.82],[137222,137222,4],[137223,137223,5.34],[137224,137224,4.22],[137225,137225,6.42],[137226,137226,1.68],[137227,137230,0],[137231,137231,10],[137232,137233,5.72],[137234,137234,6.05],[137235,137235,8.75],[137236,137236,5.34],[137237,137237,7.12],[137238,137239,6.3],[137240,137240,5.64],[137241,137241,5.34],[137242,137247,10],[137248,137248,9.29],[137249,137249,8.24],[137250,137250,9.93],[137251,137252,9.32],[137253,137254,12.35],[137255,137255,12],[137256,137256,5.67],[137257,137257,7.38],[137258,137258,6.8],[137259,137259,6.75],[137260,137261,8.63],[137262,137263,5.67],[137264,137265,7.56],[137266,137266,7.45],[137267,137267,7.48],[137268,137268,7.67],[137269,137270,4.96],[137271,137271,6.93],[137272,137272,5.95],[137273,137273,6.8],[137274,137274,5.51],[137275,137275,5.5],[137276,137276,8.92],[137277,137277,8.15],[137278,137278,10.88],[137279,137279,9.08],[137280,137280,10.88],[137281,137281,6.41],[137282,137282,11.77],[137283,137283,2.01],[137284,137284,8.99],[137285,137285,9.06],[137286,137286,9.15],[137287,137287,11.26],[137288,137288,9.15],[137289,137289,11.26],[137290,137290,10.69],[137291,137291,9.25],[137292,137292,7.16],[137293,137294,8.61],[137295,137295,5.26],[137296,137296,7.23],[137297,137297,5.51],[137298,137298,7.85],[137299,137299,7.67],[137300,137300,6.5],[137301,137301,4.51],[137302,137302,7.49],[137303,137303,5.68],[137304,137304,5.48],[137305,137305,11],[137306,137306,7.39],[137307,137307,5.18],[137308,137308,7.27],[137309,137309,8.24],[137310,137310,9.93],[137311,137311,2.84],[137312,137312,9.32],[137313,137313,12.35],[137314,137314,9.2],[137315,137315,4.28],[137316,137316,6.93],[137317,137317,7.92],[137318,137318,7.18],[137319,137319,6.81],[137320,137320,8.32],[137321,137321,7.45],[137322,137322,5.12],[137323,137323,5.95],[137324,137325,5.51],[137326,137327,7.56],[137328,137328,3.73],[137329,137329,7.67],[137330,137330,5.12],[137331,137331,9.93],[137332,137332,5.47],[137333,137333,8.68],[137334,137334,5.6],[137335,137335,4.96],[137336,137343,10],[137344,137344,5.83],[137345,137345,7.9],[137346,137346,6.73],[137347,137348,4.83],[137349,137349,10.57],[137350,137350,9.87],[137351,137351,10.21],[137352,137352,9.93],[137353,137353,7.06],[137354,137354,9.1],[137355,137355,6.27],[137356,137356,5.1],[137357,137357,7.92],[137358,137358,6.15],[137359,137359,5.25],[137360,137360,5.44],[137361,137361,5.51],[137362,137362,6.8],[137363,137363,6.75],[137364,137364,6.55],[137365,137365,8.33],[137366,137366,7.27],[137367,137367,5.5],[137368,137368,6.25],[137369,137369,8.6],[137370,137370,11.68],[137371,137371,8.49],[137372,137372,7.56],[137373,137373,9.23],[137374,137374,5.2],[137375,137375,6.97],[137376,137376,5.51],[137377,137377,10.48],[137378,137378,7.56],[137379,137379,5.2],[137380,137381,7.56],[137382,137382,5.05],[137383,137383,5.57],[137384,137384,9.98],[137385,137385,0],[137386,137386,7.18],[137387,137471,10],[137472,137472,6.74],[137473,137473,6.05],[137474,137474,7.01],[137475,137475,5.95],[137476,137476,6.02],[137477,137477,9.27],[137478,137478,6.27],[137479,137479,6.32],[137480,137480,6.75],[137481,137481,5.83],[137482,137482,7.77],[137483,137483,5.53],[137484,137484,6.91],[137485,137485,6.25],[137486,137486,6.8],[137487,137487,6.05],[137488,137488,7.47],[137489,137489,8.11],[137490,137490,6.15],[137491,137491,7],[137492,137492,6.47],[137493,137493,6.04],[137494,137494,6.25],[137495,137495,6.56],[137496,137496,6.61],[137497,137497,6.36],[137498,137498,5.21],[137499,137499,6.31],[137500,137500,6.59],[137501,137501,6.15],[137502,137502,6.01],[137503,137503,10],[137504,137506,7.21],[137507,137507,10.07],[137508,137508,12.82],[137509,137509,10.07],[137510,137510,12.82],[137511,137512,7.21],[137513,137513,10.79],[137514,137514,7.21],[137515,137515,11.31],[137516,137519,10],[137520,137520,12.68],[137521,137521,9.85],[137522,137522,7.21],[137523,137523,9.91],[137524,137524,11.98],[137525,137525,12.35],[137526,137526,12.24],[137527,137527,8.32],[137528,137528,10.45],[137529,137531,7.21],[137532,137535,10],[137536,137536,5.5],[137537,137539,10],[137540,137540,4.4],[137541,137541,4.8],[137542,137542,5.49],[137543,137543,4.99],[137544,137544,4.97],[137545,137545,4.61],[137546,137546,5],[137547,137547,4.87],[137548,137549,4.92],[137550,137550,4.97],[137551,137551,4.92],[137552,137552,5.13],[137553,137553,6.64],[137554,137554,5.36],[137555,137555,7.27],[137556,137556,6.58],[137557,137557,6.08],[137558,137558,9.02],[137559,137559,9.67],[137560,137560,5.69],[137561,137561,5.2],[137562,137562,8.31],[137563,137563,5.09],[137564,137564,8.31],[137565,137565,5.77],[137566,137566,8.49],[137567,137567,6.8],[137568,137568,5.08],[137569,137569,6.55],[137570,137570,5.36],[137571,137571,2.39],[137572,137572,5.49],[137573,137573,5.14],[137574,137574,5.49],[137575,137575,2.9],[137576,137576,2.47],[137577,137577,5.02],[137578,137578,5.49],[137579,137579,5.14],[137580,137580,2.09],[137581,137581,6.29],[137582,137583,10],[137584,137584,5.54],[137585,137585,5.23],[137586,137586,6.03],[137587,137587,5.46],[137588,137588,5.23],[137589,137599,10],[137600,137601,9.29],[137602,137602,9.08],[137603,137603,5.3],[137604,137604,9.14],[137605,137605,6.11],[137606,137606,5.98],[137607,137607,6.46],[137608,137608,5.78],[137609,137609,9.29],[137610,137610,6.21],[137611,137611,6.11],[137612,137612,5.98],[137613,137614,9.08],[137615,137615,6.29],[137616,137616,9.14],[137617,137617,6.42],[137618,137618,7.49],[137619,137619,5.76],[137620,137620,6.35],[137621,137621,8.33],[137622,137622,9.14],[137623,137623,9.08],[137624,137624,9.29],[137625,137625,6.11],[137626,137626,6.42],[137627,137628,9.14],[137629,137629,9.08],[137630,137630,5.54],[137631,137632,9.14],[137633,137633,5.43],[137634,137634,6.11],[137635,137635,6.78],[137636,137636,5.43],[137637,137637,6.11],[137638,137638,9.08],[137639,137639,5.41],[137640,137640,6.11],[137641,137641,5.98],[137642,137642,9.29],[137643,137643,5.98],[137644,137647,10],[137648,137648,6.66],[137649,137649,5.43],[137650,137650,6.04],[137651,137651,5.43],[137652,137652,5.97],[137653,137653,7.03],[137654,137654,13],[137655,137655,5.28],[137656,137656,5.19],[137657,137657,6.04],[137658,137658,5.63],[137659,137659,8.07],[137660,137660,8.2],[137661,137661,8.18],[137662,137662,7.24],[137663,137664,8.68],[137665,137665,5.54],[137666,137666,6.47],[137667,137667,5.84],[137668,137668,6.11],[137669,137669,9.08],[137670,137670,5.43],[137671,137671,6.11],[137672,137672,5.12],[137673,137673,5.22],[137674,137679,10],[137680,137680,5.54],[137681,137681,5.43],[137682,137682,3.59],[137683,137684,5.38],[137685,137685,7.76],[137686,137686,6.28],[137687,137687,7.76],[137688,137688,5.61],[137689,137689,5.98],[137690,137690,6.17],[137691,137693,10],[137694,137695,8.36],[137696,137696,6.44],[137697,137697,5.3],[137698,137698,6.61],[137699,137699,8.8],[137700,137702,5.94],[137703,137703,6.97],[137704,137704,5.94],[137705,137705,5.65],[137706,137707,12.7],[137708,137708,13.18],[137709,137709,14.4],[137710,137711,12.7],[137712,137712,6.35],[137713,137713,5.3],[137714,137714,6.61],[137715,137715,8.8],[137716,137718,5.94],[137719,137719,6.97],[137720,137720,5.94],[137721,137721,5.65],[137722,137723,12.7],[137724,137724,13.18],[137725,137725,14.4],[137726,137727,12.7],[137728,137728,6.77],[137729,137729,10.46],[137730,137730,6.05],[137731,137731,7.55],[137732,137732,10.46],[137733,137733,6.77],[137734,137734,9.45],[137735,137735,8.78],[137736,137738,9.45],[137739,137740,10.46],[137741,137741,7.84],[137742,137742,12.21],[137743,137743,13.25],[137744,137744,12.19],[137745,137745,6.89],[137746,137746,12.48],[137747,137747,12.19],[137748,137748,5.76],[137749,137749,12.16],[137750,137750,10.34],[137751,137752,5.94],[137753,137753,9.51],[137754,137754,11.34],[137755,137755,5.94],[137756,137757,10],[137758,137758,5.04],[137759,137759,5.38],[137760,137760,9.26],[137761,137761,5.28],[137762,137762,5.23],[137763,137763,5.94],[137764,137764,5.84],[137765,137765,10.42],[137766,137766,6.31],[137767,137767,5.96],[137768,137768,9.09],[137769,137770,5.56],[137771,137771,9.8],[137772,137772,9.1],[137773,137774,6.76],[137775,137775,5.24],[137776,137776,6.54],[137777,137777,10.92],[137778,137778,8.93],[137779,137779,7.02],[137780,137780,6.47],[137781,137781,6.37],[137782,137782,5.52],[137783,137783,5.94],[137784,137784,6.27],[137785,137785,7],[137786,137786,6.88],[137787,137788,6.58],[137789,137789,8.78],[137790,137790,5.94],[137791,137791,9.76],[137792,137792,6.12],[137793,137793,6.46],[137794,137794,6.59],[137795,137795,8.98],[137796,137796,5.24],[137797,137797,5.39],[137798,137798,5.94],[137799,137800,9.1],[137801,137801,8.98],[137802,137802,6.31],[137803,137803,8.85],[137804,137804,8.98],[137805,137805,6.58],[137806,137806,8.11],[137807,137808,5.24],[137809,137809,5.96],[137810,137810,10.8],[137811,137811,9.18],[137812,137812,12.96],[137813,137814,0],[137815,137815,2.83],[137816,137822,0],[137823,137823,10],[137824,137824,0],[137825,137825,4.48],[137826,137826,0],[137827,137827,4.91],[137828,137828,2.47],[137829,137836,0],[137837,137837,2.12],[137838,137838,5.39],[137839,137839,10.1],[137840,137841,5.39],[137842,137842,5.47],[137843,137852,0],[137853,137854,10],[137855,137855,0],[137856,137856,5.39],[137857,137857,5.35],[137858,137858,3.39],[137859,137860,5.3],[137861,137861,5.29],[137862,137862,5.34],[137863,137863,5.29],[137864,137864,5.58],[137865,137865,5.34],[137866,137871,10],[137872,137872,5.39],[137873,137873,6.62],[137874,137874,4.06],[137875,137875,9],[137876,137876,6.57],[137877,137877,6.47],[137878,137878,6.77],[137879,137879,6.76],[137880,137880,6.58],[137881,137881,8.98],[137882,137887,10],[137888,137888,7.14],[137889,137889,7.17],[137890,137890,9.8],[137891,137891,8.24],[137892,137892,7.14],[137893,137893,7.32],[137894,137894,6.53],[137895,137895,6.67],[137896,137896,2.98],[137897,137897,4.59],[137898,137898,5.99],[137899,137899,7.46],[137900,137900,12.32],[137901,137901,5.52],[137902,137983,10],[137984,137987,5.94],[137988,137988,10.06],[137989,137989,11.03],[137990,137990,15.5],[137991,137991,9.33],[137992,137992,13.8],[137993,137993,7.49],[137994,137994,11.96],[137995,137995,8.07],[137996,137996,12.54],[137997,137997,9.47],[137998,137998,13.94],[137999,137999,7.18],[138000,138000,11.44],[138001,138001,9.83],[138002,138002,14.3],[138003,138003,11.11],[138004,138004,11.31],[138005,138005,10.92],[138006,138006,11.68],[138007,138007,9.33],[138008,138008,7.94],[138009,138009,10.52],[138010,138010,8.79],[138011,138011,12.08],[138012,138012,15.09],[138013,138013,10.5],[138014,138014,10.11],[138015,138015,9.34],[138016,138016,8.1],[138017,138017,12.21],[138018,138018,12.04],[138019,138019,7.93],[138020,138020,10.72],[138021,138021,9.2],[138022,138022,8.54],[138023,138023,8.07],[138024,138024,7.65],[138025,138025,11.8],[138026,138026,9.25],[138027,138027,8.54],[138028,138028,9.59],[138029,138029,8.45],[138030,138030,12.23],[138031,138031,7.93],[138032,138032,10.92],[138033,138033,8.07],[138034,138034,8.08],[138035,138035,12.23],[138036,138036,5.94],[138037,138037,10.41],[138038,138042,5.94],[138043,138043,10.41],[138044,138044,5.94],[138045,138045,10.41],[138046,138047,10.77],[138048,138049,15.24],[138050,138050,5.94],[138051,138051,10.41],[138052,138052,3.48],[138053,138053,12.13],[138054,138054,18.09],[138055,138055,12.04],[138056,138056,8.07],[138057,138057,7.93],[138058,138058,8.08],[138059,138059,14.62],[138060,138063,10],[138064,138064,4.72],[138065,138065,11.82],[138066,138066,9.47],[138067,138067,9.83],[138068,138068,5.08],[138069,138069,6.54],[138070,138070,7.18],[138071,138071,10.93],[138072,138072,7.65],[138073,138073,9.02],[138074,138074,11.7],[138075,138075,12.92],[138076,138076,3.7],[138077,138077,4.58],[138078,138078,3.93],[138079,138079,6.42],[138080,138080,4.31],[138081,138081,5.56],[138082,138082,4.83],[138083,138083,4.2],[138084,138084,4.79],[138085,138085,6.08],[138086,138086,6.64],[138087,138087,9.4],[138088,138088,3.87],[138089,138089,13.03],[138090,138090,4.12],[138091,138099,5.94],[138100,138100,6.01],[138101,138101,5.71],[138102,138102,6.01],[138103,138103,5.71],[138104,138104,5.9],[138105,138105,6.24],[138106,138106,5.9],[138107,138107,6.33],[138108,138108,4.02],[138109,138111,10],[138112,138113,5.94],[138114,138114,9.81],[138115,138115,8.71],[138116,138116,5.61],[138117,138117,7.65],[138118,138118,9.11],[138119,138119,8.04],[138120,138120,7.95],[138121,138121,8.71],[138122,138122,7.93],[138123,138123,8],[138124,138124,8.01],[138125,138125,7.28],[138126,138126,7.5],[138127,138127,8.15],[138128,138128,8.29],[138129,138129,10.77],[138130,138130,8.61],[138131,138131,7.12],[138132,138132,7.21],[138133,138134,7.93],[138135,138135,6.76],[138136,138136,9.7],[138137,138137,6.91],[138138,138138,8.69],[138139,138139,5.35],[138140,138140,7.88],[138141,138141,6.84],[138142,138143,7.97],[138144,138144,7.7],[138145,138149,5.94],[138150,138151,9.69],[138152,138153,5.94],[138154,138154,8.58],[138155,138155,0],[138156,138157,5.94],[138158,138158,13.82],[138159,138159,16.47],[138160,138160,8.28],[138161,138161,7.99],[138162,138162,7.01],[138163,138163,7.65],[138164,138164,5.35],[138165,138165,8.66],[138166,138166,6.63],[138167,138167,7.42],[138168,138168,7.97],[138169,138169,7.45],[138170,138170,3.64],[138171,138171,7.12],[138172,138172,11.8],[138173,138173,13.36],[138174,138174,10.75],[138175,138175,7.27],[138176,138176,11.26],[138177,138177,11.44],[138178,138178,10.4],[138179,138179,10.56],[138180,138180,10.58],[138181,138181,10.7],[138182,138182,9.9],[138183,138183,8.4],[138184,138184,9.43],[138185,138185,9.9],[138186,138186,9.56],[138187,138187,10],[138188,138188,10.56],[138189,138189,7.88],[138190,138190,9.41],[138191,138191,10.56],[138192,138192,10.23],[138193,138193,8.11],[138194,138194,9.53],[138195,138195,9.86],[138196,138196,10.54],[138197,138197,10.88],[138198,138198,7.98],[138199,138199,10.73],[138200,138200,9.6],[138201,138202,10.56],[138203,138204,10.7],[138205,138205,7.56],[138206,138206,9.31],[138207,138207,10.56],[138208,138208,9.17],[138209,138209,10.17],[138210,138210,8.75],[138211,138211,9.9],[138212,138213,9.13],[138214,138214,5.94],[138215,138215,9.12],[138216,138217,5.94],[138218,138218,10.77],[138219,138219,9.41],[138220,138220,11.27],[138221,138225,5.94],[138226,138226,11.43],[138227,138227,10.38],[138228,138235,10],[138236,138236,10.7],[138237,138237,11.07],[138238,138238,8.51],[138239,138239,6.88],[138240,138240,6.02],[138241,138241,5.41],[138242,138242,6.48],[138243,138244,9.33],[138245,138245,4.29],[138246,138246,6.77],[138247,138247,6.95],[138248,138248,7.13],[138249,138249,6.1],[138250,138250,6.39],[138251,138251,6.66],[138252,138252,6.07],[138253,138253,7.3],[138254,138256,6.01],[138257,138257,6.3],[138258,138258,9.75],[138259,138259,6.54],[138260,138260,9.33],[138261,138262,7.41],[138263,138263,6.4],[138264,138264,10.3],[138265,138265,5.92],[138266,138266,5.26],[138267,138267,5.09],[138268,138268,9.75],[138269,138269,7.1],[138270,138270,5.9],[138271,138271,6.54],[138272,138272,10.1],[138273,138273,6.75],[138274,138274,10.71],[138275,138275,6.09],[138276,138276,8.56],[138277,138277,7.4],[138278,138278,8.64],[138279,138279,8.63],[138280,138280,7.61],[138281,138281,7.1],[138282,138282,7.89],[138283,138283,8.79],[138284,138291,5.1],[138292,138292,8.95],[138293,138293,6.9],[138294,138295,5.1],[138296,138298,10],[138299,138299,2.5],[138300,138300,4.3],[138301,138301,5.24],[138302,138302,5.64],[138303,138303,5.88],[138304,138305,4.9],[138306,138306,5.61],[138307,138307,5.76],[138308,138308,6.78],[138309,138309,6.75],[138310,138310,5.91],[138311,138311,4.71],[138312,138312,5.45],[138313,138313,5.04],[138314,138316,10],[138317,138318,5.64],[138319,138319,6.63],[138320,138320,5.72],[138321,138321,5.15],[138322,138322,5.13],[138323,138323,5.21],[138324,138324,4.83],[138325,138325,5.51],[138326,138326,5.06],[138327,138327,5.14],[138328,138328,6.68],[138329,138329,6.32],[138330,138330,6.49],[138331,138331,7.81],[138332,138332,6.76],[138333,138333,6.72],[138334,138334,5.84],[138335,138335,6.92],[138336,138336,5.79],[138337,138338,6.29],[138339,138339,6.55],[138340,138340,5.61],[138341,138341,5.87],[138342,138342,7.62],[138343,138343,5.84],[138344,138344,5.42],[138345,138345,5.45],[138346,138346,6.54],[138347,138347,6.78],[138348,138348,7.62],[138349,138349,6.55],[138350,138350,5.74],[138351,138351,7.28],[138352,138352,7.18],[138353,138354,5.68],[138355,138355,6.69],[138356,138356,6.29],[138357,138357,7.18],[138358,138358,6.55],[138359,138359,7.18],[138360,138362,2.68],[138363,138363,5],[138364,138364,3.26],[138365,138365,5.32],[138366,138366,2.68],[138367,138367,5.01],[138368,138383,10],[138384,138384,5.68],[138385,138386,5.9],[138387,138387,8.96],[138388,138388,5.79],[138389,138389,5.7],[138390,138390,6.07],[138391,138391,9.12],[138392,138392,5.94],[138393,138393,5.61],[138394,138394,10.45],[138395,138396,6.08],[138397,138397,8.29],[138398,138398,5.54],[138399,138399,5.88],[138400,138400,7.62],[138401,138401,5.91],[138402,138402,7.29],[138403,138403,6.16],[138404,138404,8.18],[138405,138405,5.82],[138406,138406,7.81],[138407,138407,6],[138408,138408,6.08],[138409,138409,5.95],[138410,138410,6.54],[138411,138412,6.13],[138413,138413,6.39],[138414,138414,6.13],[138415,138415,5.73],[138416,138416,5.72],[138417,138417,6.41],[138418,138418,5.96],[138419,138419,5.72],[138420,138420,5.71],[138421,138421,6.13],[138422,138422,7.53],[138423,138423,5.76],[138424,138424,5.95],[138425,138425,5.76],[138426,138426,5.85],[138427,138428,10],[138429,138429,6.44],[138430,138430,5.96],[138431,138431,7.1],[138432,138432,10.18],[138433,138435,6.74],[138436,138436,16.8],[138437,138437,7.44],[138438,138438,11.35],[138439,138439,16.45],[138440,138457,10],[138458,138458,0],[138459,138484,10],[138485,138485,5.52],[138486,138495,10],[138496,138496,5.19],[138497,138497,7.03],[138498,138498,7.22],[138499,138499,5.4],[138500,138500,5.23],[138501,138502,5.77],[138503,138503,4.79],[138504,138504,4.02],[138505,138505,2.78],[138506,138506,3.98],[138507,138507,6.13],[138508,138508,4.84],[138509,138509,6.81],[138510,138510,5.76],[138511,138511,5],[138512,138512,5.23],[138513,138515,5.56],[138516,138516,7.22],[138517,138517,5.01],[138518,138519,5],[138520,138520,5.29],[138521,138522,5.41],[138523,138523,4.91],[138524,138524,5.46],[138525,138525,5.39],[138526,138526,7.13],[138527,138527,5.39],[138528,138528,5],[138529,138529,7.22],[138530,138530,4.44],[138531,138531,4.2],[138532,138532,4.63],[138533,138533,5.44],[138534,138534,4.54],[138535,138535,4.87],[138536,138536,5.76],[138537,138537,5.29],[138538,138538,5.99],[138539,138539,5.61],[138540,138540,4.27],[138541,138541,5.97],[138542,138543,3.96],[138544,138544,4.3],[138545,138546,3.9],[138547,138547,4.65],[138548,138548,4.72],[138549,138549,2.37],[138550,138550,3.19],[138551,138551,4.77],[138552,138552,3.97],[138553,138553,5.73],[138554,138554,4.4],[138555,138555,4.79],[138556,138556,4.51],[138557,138557,3.93],[138558,138558,3.63],[138559,138559,4.44],[138560,138560,3.85],[138561,138561,4.38],[138562,138562,5.95],[138563,138564,2.92],[138565,138565,3.37],[138566,138566,4.19],[138567,138567,3.24],[138568,138568,3.26],[138569,138570,2.59],[138571,138572,2.52],[138573,138573,2.96],[138574,138574,1.77],[138575,138575,3.36],[138576,138576,4.92],[138577,138577,3.07],[138578,138578,2.87],[138579,138579,2.59],[138580,138581,2.86],[138582,138582,3.26],[138583,138583,2.12],[138584,138584,3.25],[138585,138585,3.11],[138586,138586,4.92],[138587,138587,2.99],[138588,138588,3.22],[138589,138589,2.92],[138590,138590,2.81],[138591,138591,2.94],[138592,138592,3.57],[138593,138593,2.84],[138594,138594,1.77],[138595,138595,2.54],[138596,138596,3.25],[138597,138597,2.99],[138598,138598,2.92],[138599,138599,2.81],[138600,138600,2.87],[138601,138601,3.57],[138602,138602,2.84],[138603,138603,7.51],[138604,138605,5.56],[138606,138606,3.33],[138607,138607,8.33],[138608,138609,5.56],[138610,138610,4.44],[138611,138611,4.01],[138612,138612,3.89],[138613,138613,3.33],[138614,138614,4.44],[138615,138615,5],[138616,138616,3.33],[138617,138617,5.19],[138618,138618,8.45],[138619,138619,2.88],[138620,138620,3.1],[138621,138621,5.56],[138622,138622,5.46],[138623,138623,6.17],[138624,138625,5.56],[138626,138626,3.33],[138627,138627,6.09],[138628,138628,5.56],[138629,138629,2.78],[138630,138630,8.33],[138631,138632,5.56],[138633,138633,4.44],[138634,138634,3.89],[138635,138635,4.58],[138636,138637,5],[138638,138638,4.44],[138639,138639,5],[138640,138640,5.75],[138641,138641,5.56],[138642,138642,4.44],[138643,138644,4.27],[138645,138645,4.44],[138646,138646,2.78],[138647,138647,4.44],[138648,138648,3.62],[138649,138649,5.56],[138650,138650,4.58],[138651,138651,3.37],[138652,138653,2.59],[138654,138654,2.87],[138655,138655,2.52],[138656,138657,1.95],[138658,138658,2.82],[138659,138659,3.25],[138660,138660,1.77],[138661,138661,2.01],[138662,138663,1.77],[138664,138664,2.29],[138665,138666,1.77],[138667,138667,3.01],[138668,138669,4.92],[138670,138671,3.25],[138672,138672,3.23],[138673,138673,2.87],[138674,138674,4.19],[138675,138675,2.17],[138676,138676,1.77],[138677,138677,2.12],[138678,138678,3.25],[138679,138679,3.56],[138680,138680,3.25],[138681,138681,3.09],[138682,138682,2.99],[138683,138684,2.8],[138685,138685,3.18],[138686,138686,2.8],[138687,138687,2.94],[138688,138703,0],[138704,138706,10],[138707,138713,0],[138714,138714,10],[138715,138726,0],[138727,138749,10],[138750,138751,0],[138752,138752,7.22],[138753,138753,5],[138754,138754,6.67],[138755,138755,5.56],[138756,138756,7.62],[138757,138757,6.99],[138758,138758,6.67],[138759,138759,5.56],[138760,138760,7.24],[138761,138761,5.88],[138762,138762,7.22],[138763,138763,5.56],[138764,138764,8.3],[138765,138765,6.99],[138766,138766,7.22],[138767,138767,5.56],[138768,138768,7.22],[138769,138769,5.56],[138770,138770,7.22],[138771,138771,5.56],[138772,138772,6.83],[138773,138773,6.64],[138774,138774,6.83],[138775,138775,6.64],[138776,138776,6.67],[138777,138777,4.44],[138778,138778,6.67],[138779,138779,4.44],[138780,138780,6.67],[138781,138781,4.44],[138782,138782,6.11],[138783,138783,3.33],[138784,138784,7.78],[138785,138785,5],[138786,138786,7.78],[138787,138787,5.56],[138788,138788,8.37],[138789,138789,7.12],[138790,138790,7.78],[138791,138791,5.56],[138792,138792,7.78],[138793,138793,5.56],[138794,138794,7.78],[138795,138795,5.56],[138796,138796,3.89],[138797,138797,2.78],[138798,138798,5.46],[138799,138799,3.42],[138800,138800,7.71],[138801,138801,6.71],[138802,138802,7.71],[138803,138803,6.71],[138804,138804,7.78],[138805,138805,5.56],[138806,138806,6.37],[138807,138807,3.42],[138808,138808,6.67],[138809,138809,2.78],[138810,138810,6.67],[138811,138811,2.78],[138812,138812,6.67],[138813,138813,2.78],[138814,138814,9.48],[138815,138815,10.58],[138816,138816,9.44],[138817,138817,8.33],[138818,138818,9.48],[138819,138819,10.58],[138820,138820,7.22],[138821,138821,5.56],[138822,138822,8.47],[138823,138823,7.12],[138824,138824,7.22],[138825,138825,5.56],[138826,138826,7.22],[138827,138827,5.56],[138828,138828,8.5],[138829,138829,6.87],[138830,138830,7.78],[138831,138831,5],[138832,138832,8.5],[138833,138833,6.87],[138834,138834,8.5],[138835,138835,6.87],[138836,138836,7.33],[138837,138837,6.99],[138838,138838,6.11],[138839,138839,5.56],[138840,138840,7.22],[138841,138841,4.44],[138842,138842,7.82],[138843,138843,4.97],[138844,138844,7.22],[138845,138845,4.44],[138846,138846,7.22],[138847,138847,4.44],[138848,138848,5.56],[138849,138849,3.89],[138850,138850,7.1],[138851,138851,5.93],[138852,138852,5.56],[138853,138853,3.89],[138854,138854,5.56],[138855,138855,3.89],[138856,138856,5.56],[138857,138857,3.89],[138858,138858,6.67],[138859,138859,3.33],[138860,138860,6.82],[138861,138861,4.56],[138862,138862,6.67],[138863,138863,3.33],[138864,138864,6.67],[138865,138865,3.33],[138866,138866,7.22],[138867,138867,5.56],[138868,138868,7.22],[138869,138869,5.56],[138870,138870,7.22],[138871,138871,5.56],[138872,138872,8.12],[138873,138873,7.12],[138874,138874,7.22],[138875,138875,5.56],[138876,138876,7.64],[138877,138877,6.5],[138878,138878,7.64],[138879,138879,6.5],[138880,138880,11.28],[138881,138881,9.79],[138882,138882,11.28],[138883,138883,9.79],[138884,138884,11.28],[138885,138885,9.79],[138886,138886,10],[138887,138887,7.22],[138888,138888,11.28],[138889,138889,9.79],[138890,138890,7.22],[138891,138891,5],[138892,138892,7.22],[138893,138893,5],[138894,138894,7.22],[138895,138895,5],[138896,138896,6.67],[138897,138897,4.44],[138898,138898,6.92],[138899,138899,5.97],[138900,138900,6.67],[138901,138901,4.44],[138902,138902,5.56],[138903,138903,3.33],[138904,138904,7.22],[138905,138906,5],[138907,138907,2.78],[138908,138908,4.23],[138909,138909,4.22],[138910,138910,7.48],[138911,138911,6.02],[138912,138912,7.76],[138913,138913,6.68],[138914,138914,7.76],[138915,138915,6.68],[138916,138916,7.76],[138917,138917,6.68],[138918,138918,7.76],[138919,138919,6.68],[138920,138920,7.76],[138921,138921,6.68],[138922,138922,7.76],[138923,138923,6.68],[138924,138924,7.76],[138925,138925,6.68],[138926,138926,7.76],[138927,138927,6.68],[138928,138928,7.76],[138929,138929,6.68],[138930,138930,7.76],[138931,138931,6.68],[138932,138932,7.76],[138933,138933,6.68],[138934,138934,7.76],[138935,138935,6.68],[138936,138936,6.83],[138937,138937,6.64],[138938,138938,6.83],[138939,138939,6.64],[138940,138940,6.83],[138941,138941,6.64],[138942,138942,6.83],[138943,138943,6.64],[138944,138944,6.83],[138945,138945,6.64],[138946,138946,6.83],[138947,138947,6.64],[138948,138948,6.83],[138949,138949,6.64],[138950,138950,6.83],[138951,138951,6.64],[138952,138952,5.46],[138953,138953,3.42],[138954,138954,5.46],[138955,138955,3.42],[138956,138956,8.5],[138957,138957,6.87],[138958,138958,8.5],[138959,138959,6.87],[138960,138960,8.5],[138961,138961,6.87],[138962,138962,8.5],[138963,138963,6.87],[138964,138964,8.5],[138965,138965,6.87],[138966,138966,8.5],[138967,138967,6.87],[138968,138968,8.5],[138969,138969,6.87],[138970,138970,9.14],[138971,138971,6.87],[138972,138972,9.14],[138973,138973,6.87],[138974,138974,9.14],[138975,138975,6.87],[138976,138976,9.14],[138977,138977,6.87],[138978,138978,9.14],[138979,138979,6.87],[138980,138980,8.12],[138981,138981,7.12],[138982,138982,8.12],[138983,138983,7.12],[138984,138984,8.46],[138985,138985,7.42],[138986,138986,8.46],[138987,138987,7.42],[138988,138988,8.46],[138989,138989,7.42],[138990,138990,8.46],[138991,138991,7.42],[138992,138992,8.46],[138993,138993,7.42],[138994,138994,7.37],[138995,138995,6.51],[138996,138996,7.37],[138997,138997,6.51],[138998,138998,7.37],[138999,138999,6.51],[139000,139000,7.37],[139001,139001,6.51],[139002,139002,9.36],[139003,139003,5.89],[139004,139004,5.06],[139005,139005,4.45],[139006,139007,4.58],[139008,139015,5.58],[139016,139017,7.22],[139018,139019,8],[139020,139021,7.47],[139022,139023,7.22],[139024,139029,4.27],[139030,139031,10],[139032,139033,8.01],[139034,139037,9.89],[139038,139039,10],[139040,139047,5.68],[139048,139049,9.12],[139050,139055,11],[139056,139063,3.1],[139064,139065,5.23],[139066,139071,7.11],[139072,139077,5],[139078,139079,10],[139080,139081,8.75],[139082,139083,10.61],[139084,139085,9.88],[139086,139087,10],[139088,139095,5.19],[139096,139096,10],[139097,139097,8.66],[139098,139098,10],[139099,139099,10.44],[139100,139100,10],[139101,139101,10.44],[139102,139102,10],[139103,139103,10.44],[139104,139111,7.31],[139112,139113,8.86],[139114,139115,10.74],[139116,139119,10.11],[139120,139121,6.99],[139122,139123,5.85],[139124,139125,7.12],[139126,139127,3.42],[139128,139129,6.87],[139130,139131,7.06],[139132,139133,8.94],[139134,139135,10],[139136,139143,5.58],[139144,139145,7.22],[139146,139147,8],[139148,139149,7.47],[139150,139151,7.22],[139152,139159,5.68],[139160,139161,9.12],[139162,139167,11],[139168,139175,7.31],[139176,139177,8.86],[139178,139179,10.74],[139180,139183,10.11],[139184,139188,5.58],[139189,139189,10],[139190,139191,5.58],[139192,139193,7.22],[139194,139194,7.76],[139195,139195,7.97],[139196,139196,7.22],[139197,139197,3.33],[139198,139198,3.42],[139199,139201,3.33],[139202,139204,5.68],[139205,139205,10],[139206,139207,5.68],[139208,139208,6.83],[139209,139209,8.48],[139210,139210,8.37],[139211,139211,10.01],[139212,139212,7.78],[139213,139215,3.33],[139216,139217,3.1],[139218,139219,3.42],[139220,139221,10],[139222,139223,3.1],[139224,139225,3.89],[139226,139226,5.46],[139227,139227,7.05],[139228,139228,10],[139229,139231,3.33],[139232,139233,5.19],[139234,139235,7.06],[139236,139237,5.35],[139238,139239,5.19],[139240,139241,7.22],[139242,139242,7.37],[139243,139243,9.39],[139244,139244,7.45],[139245,139247,7.11],[139248,139249,10],[139250,139252,7.31],[139253,139253,10],[139254,139255,7.31],[139256,139256,8.5],[139257,139257,9.68],[139258,139258,8.44],[139259,139259,9.7],[139260,139260,8.01],[139261,139261,7.11],[139262,139262,3.33],[139263,139263,10],[139264,139264,5],[139265,139265,10],[139266,139266,5],[139267,139267,10],[139268,139268,3.33],[139269,139269,2.5],[139270,139270,1.67],[139271,139271,7.11],[139272,139272,3.61],[139273,139273,2],[139274,139274,0.63],[139275,139279,0],[139280,139281,6.39],[139282,139283,7.11],[139284,139285,10],[139286,139286,3.24],[139287,139287,7.11],[139288,139291,3.32],[139292,139295,5.87],[139296,139298,7.11],[139299,139299,5.3],[139300,139300,3.33],[139301,139301,6.67],[139302,139302,10.49],[139303,139303,2.47],[139304,139310,0],[139311,139311,1.71],[139312,139312,17.77],[139313,139313,15.42],[139314,139314,3.53],[139315,139316,6.16],[139317,139317,3.5],[139318,139318,5.66],[139319,139319,7.83],[139320,139320,3.53],[139321,139322,5.43],[139323,139323,7.23],[139324,139324,7.03],[139325,139325,4.97],[139326,139326,7.11],[139327,139329,5],[139330,139330,8.95],[139331,139331,3.33],[139332,139332,4.39],[139333,139334,3.74],[139335,139335,9.57],[139336,139336,7.89],[139337,139337,7.86],[139338,139341,6.6],[139342,139342,4.66],[139343,139343,2.47],[139344,139344,5],[139345,139345,4.66],[139346,139346,5.75],[139347,139347,10],[139348,139348,5],[139349,139349,6.97],[139350,139350,5.93],[139351,139351,10],[139352,139353,5.93],[139354,139354,10],[139355,139355,5.93],[139356,139356,6.98],[139357,139357,10],[139358,139358,3.33],[139359,139359,2.22],[139360,139375,0],[139376,139376,4.82],[139377,139377,3.01],[139378,139379,10],[139380,139381,5.98],[139382,139382,4.82],[139383,139384,5.98],[139385,139388,4.82],[139389,139390,2.41],[139391,139391,5.98],[139392,139404,4.82],[139405,139406,2.41],[139407,139407,10],[139408,139408,2.92],[139409,139409,2.59],[139410,139410,2.87],[139411,139411,2.86],[139412,139412,2.59],[139413,139423,10],[139424,139424,7.11],[139425,139426,7.24],[139427,139428,7.11],[139429,139429,10.58],[139430,139430,8.47],[139431,139431,13.43],[139432,139432,13.4],[139433,139433,11.28],[139434,139434,9.15],[139435,139435,6.99],[139436,139436,7.11],[139437,139437,7.71],[139438,139438,6.82],[139439,139439,11.25],[139440,139440,6.71],[139441,139441,7.33],[139442,139442,8.11],[139443,139443,7.76],[139444,139444,7.1],[139445,139445,7.24],[139446,139446,6.77],[139447,139447,9.39],[139448,139448,5.65],[139449,139449,6],[139450,139450,5.56],[139451,139451,9.84],[139452,139453,5.65],[139454,139454,7.53],[139455,139455,6.59],[139456,139471,10],[139472,139474,0],[139475,139475,6],[139476,139477,7],[139478,139480,0],[139481,139482,6],[139483,139485,0],[139486,139486,10],[139487,139487,8.65],[139488,139488,9],[139489,139489,0],[139490,139490,10],[139491,139504,0],[139505,139519,10],[139520,139521,8.25],[139522,139522,6.02],[139523,139523,10.03],[139524,139524,6.4],[139525,139525,12.72],[139526,139526,8.25],[139527,139527,6.99],[139528,139528,6.35],[139529,139529,8.81],[139530,139530,10],[139531,139531,9.06],[139532,139532,8.43],[139533,139533,6.02],[139534,139534,5.76],[139535,139535,6.46],[139536,139536,6.88],[139537,139537,7.9],[139538,139538,7.08],[139539,139539,4.14],[139540,139540,7.78],[139541,139541,6.02],[139542,139542,12.94],[139543,139543,8.4],[139544,139544,8.5],[139545,139546,6.02],[139547,139547,9.27],[139548,139548,8.84],[139549,139549,6.02],[139550,139550,6.83],[139551,139551,6.67],[139552,139552,13.4],[139553,139553,14.57],[139554,139554,9.64],[139555,139555,7.22],[139556,139556,6.02],[139557,139557,5.42],[139558,139558,8.44],[139559,139559,8.43],[139560,139560,7.55],[139561,139561,3.92],[139562,139562,7.71],[139563,139563,7.76],[139564,139564,9.27],[139565,139565,7.73],[139566,139566,7.48],[139567,139567,3.85],[139568,139568,6.15],[139569,139569,6.88],[139570,139570,5.74],[139571,139571,11.15],[139572,139572,4.06],[139573,139573,6.55],[139574,139574,6.04],[139575,139575,4.65],[139576,139576,5.62],[139577,139577,6.6],[139578,139578,9.21],[139579,139579,17.49],[139580,139580,8.04],[139581,139581,6.46],[139582,139582,4.97],[139583,139583,7.68],[139584,139584,9.76],[139585,139585,7.46],[139586,139587,5.81],[139588,139588,6.87],[139589,139589,8.08],[139590,139590,6.94],[139591,139591,6.12],[139592,139592,4.11],[139593,139593,4.23],[139594,139594,6.76],[139595,139595,7.45],[139596,139596,8.1],[139597,139597,9.18],[139598,139598,4.79],[139599,139602,10],[139603,139604,7.5],[139605,139610,9.5],[139611,139614,11.82],[139615,139615,9.5],[139616,139616,3.32],[139617,139617,6.26],[139618,139618,9.22],[139619,139619,9.75],[139620,139620,6.99],[139621,139621,9.78],[139622,139622,12.73],[139623,139623,15.68],[139624,139624,9.32],[139625,139625,6.67],[139626,139626,9.35],[139627,139627,12.29],[139628,139628,5.81],[139629,139629,7.12],[139630,139630,7.93],[139631,139631,9.08],[139632,139632,3.25],[139633,139633,6.14],[139634,139634,9.04],[139635,139635,8.58],[139636,139636,5.93],[139637,139637,8.57],[139638,139638,11.46],[139639,139639,14.36],[139640,139640,8.4],[139641,139641,5.91],[139642,139642,8.44],[139643,139643,11.33],[139644,139644,3.25],[139645,139645,5.32],[139646,139646,6.63],[139647,139647,9.7],[139648,139648,10.82],[139649,139649,7.93],[139650,139650,12.61],[139651,139651,7.12],[139652,139652,4.44],[139653,139653,6.51],[139654,139654,5.64],[139655,139664,10],[139665,139665,5],[139666,139666,10],[139667,139667,5],[139668,139668,10],[139669,139669,5],[139670,139670,9.16],[139671,139671,10],[139672,139672,9.16],[139673,139675,10],[139676,139687,6.02],[139688,139688,5],[139689,139690,10],[139691,139693,6.02],[139694,139694,10],[139695,139695,6.02],[139696,139698,8.65],[139699,139699,10],[139700,139700,8.65],[139701,139701,10],[139702,139703,8.65],[139704,139705,10],[139706,139707,6.02],[139708,139708,8.65],[139709,139711,6.02],[139712,139712,8.65],[139713,139715,6.02],[139716,139718,10],[139719,139722,6.02],[139723,139724,10],[139725,139725,8.8],[139726,139726,6.02],[139727,139727,8.69],[139728,139728,10],[139729,139729,8.65],[139730,139730,10],[139731,139731,8.65],[139732,139732,10],[139733,139741,6.02],[139742,139743,7.23],[139744,139744,10],[139745,139745,7.23],[139746,139746,10],[139747,139747,7.23],[139748,139750,10],[139751,139751,11.81],[139752,139753,10],[139754,139754,11.81],[139755,139759,6.02],[139760,139760,8.65],[139761,139764,6.02],[139765,139765,10],[139766,139775,6.02],[139776,139776,6.3],[139777,139777,4.69],[139778,139778,7.11],[139779,139779,5.26],[139780,139780,5.35],[139781,139781,7.17],[139782,139782,8.06],[139783,139783,7.33],[139784,139784,5.76],[139785,139785,6.12],[139786,139786,5.09],[139787,139787,5.76],[139788,139788,5.89],[139789,139789,5.09],[139790,139790,5.22],[139791,139791,8.69],[139792,139792,7.95],[139793,139793,6.98],[139794,139794,8.67],[139795,139795,7.95],[139796,139796,5.99],[139797,139797,4.39],[139798,139798,8.04],[139799,139799,5.23],[139800,139800,3.55],[139801,139801,3.61],[139802,139802,8.67],[139803,139803,7.49],[139804,139804,7.24],[139805,139805,5.19],[139806,139806,10.59],[139807,139807,9.79],[139808,139808,5.98],[139809,139809,6.01],[139810,139810,6.05],[139811,139811,2.5],[139812,139812,4.73],[139813,139813,3.46],[139814,139814,5.25],[139815,139816,5.94],[139817,139817,7.19],[139818,139818,5.31],[139819,139819,5.38],[139820,139820,9.15],[139821,139821,11.24],[139822,139822,6.78],[139823,139823,9.24],[139824,139824,11.66],[139825,139825,5.98],[139826,139826,6.28],[139827,139827,5.97],[139828,139828,6.04],[139829,139829,5.97],[139830,139830,3.36],[139831,139831,5.76],[139832,139832,5.63],[139833,139833,5.76],[139834,139834,5.8],[139835,139835,5.6],[139836,139837,5.5],[139838,139838,5.43],[139839,139839,5.83],[139840,139840,3.9],[139841,139841,5.74],[139842,139842,5.8],[139843,139843,5.84],[139844,139844,6.71],[139845,139845,6.96],[139846,139846,6.29],[139847,139847,6.11],[139848,139848,8.67],[139849,139849,5.49],[139850,139850,6.04],[139851,139851,6.71],[139852,139852,5.43],[139853,139853,6.03],[139854,139854,5.97],[139855,139855,5.93],[139856,139856,5.6],[139857,139857,6.38],[139858,139859,6.32],[139860,139861,7.64],[139862,139862,5.79],[139863,139863,5.96],[139864,139864,5.89],[139865,139865,6.08],[139866,139866,6.19],[139867,139867,6.46],[139868,139868,6.36],[139869,139869,5.63],[139870,139870,5.75],[139871,139871,5.9],[139872,139873,8.67],[139874,139874,5.7],[139875,139875,5.93],[139876,139877,8.67],[139878,139878,5.75],[139879,139879,5.64],[139880,139880,6.22],[139881,139881,5.89],[139882,139882,7.33],[139883,139883,7.01],[139884,139884,3.58],[139885,139885,5.53],[139886,139887,5.7],[139888,139889,5.49],[139890,139890,5.64],[139891,139891,5.67],[139892,139892,5.83],[139893,139893,5.81],[139894,139895,6.05],[139896,139896,5.61],[139897,139897,5.77],[139898,139898,5.67],[139899,139899,5.78],[139900,139900,5.96],[139901,139901,5.78],[139902,139902,5.85],[139903,139903,5.82],[139904,139904,6.07],[139905,139905,5.79],[139906,139907,6.32],[139908,139908,6.44],[139909,139909,6.31],[139910,139911,6.63],[139912,139912,6.67],[139913,139913,6.49],[139914,139915,5.62],[139916,139917,5.82],[139918,139918,6.09],[139919,139920,6.54],[139921,139922,6.51],[139923,139924,6.11],[139925,139925,7.24],[139926,139926,7.45],[139927,139927,7.11],[139928,139928,7.22],[139929,139929,7.56],[139930,139930,7.35],[139931,139931,7.18],[139932,139932,7.61],[139933,139933,7.56],[139934,139934,7.84],[139935,139935,7.6],[139936,139936,7.33],[139937,139937,7.16],[139938,139941,7.5],[139942,139942,3.3],[139943,139943,3.33],[139944,139944,6.24],[139945,139945,7.29],[139946,139946,6.23],[139947,139947,7.55],[139948,139948,7.76],[139949,139949,7.78],[139950,139950,8.74],[139951,139951,8.36],[139952,139953,6.32],[139954,139955,7.41],[139956,139957,7.03],[139958,139959,7.35],[139960,139960,5.96],[139961,139961,6.83],[139962,139962,4.8],[139963,139964,6.96],[139965,139965,6.74],[139966,139966,7.42],[139967,139967,6.31],[139968,139969,6.71],[139970,139971,6.41],[139972,139972,3.81],[139973,139973,4.41],[139974,139974,4.48],[139975,139975,6.31],[139976,139976,7.72],[139977,139978,7.4],[139979,139980,7.24],[139981,139981,5.84],[139982,139983,6.35],[139984,139985,6.48],[139986,139987,5.69],[139988,139988,5.49],[139989,139989,6.14],[139990,139991,6.03],[139992,139993,9.68],[139994,139995,6.51],[139996,139997,6.46],[139998,139999,6.69],[140000,140000,6.66],[140001,140001,6.56],[140002,140002,6.86],[140003,140003,6.64],[140004,140004,6.71],[140005,140005,6.73],[140006,140006,6.76],[140007,140007,6.86],[140008,140008,7.19],[140009,140009,6.88],[140010,140010,7.49],[140011,140011,7.66],[140012,140012,7.71],[140013,140013,7.76],[140014,140014,4.11],[140015,140015,10],[140016,140016,9.2],[140017,140017,9.39],[140018,140018,6.5],[140019,140019,5.76],[140020,140020,5.09],[140021,140022,5.76],[140023,140023,5.09],[140024,140024,5.76],[140025,140025,6.32],[140026,140026,6.5],[140027,140027,5.76],[140028,140028,5.09],[140029,140029,5.76],[140030,140030,5.09],[140031,140031,5.26],[140032,140033,6.02],[140034,140034,6],[140035,140035,9.28],[140036,140036,6.02],[140037,140037,7.95],[140038,140038,6.85],[140039,140039,10],[140040,140047,6.02],[140048,140048,5.7],[140049,140049,6.02],[140050,140050,10],[140051,140051,6.02],[140052,140052,8.65],[140053,140053,6.02],[140054,140054,5.49],[140055,140055,6.5],[140056,140056,9.28],[140057,140057,6.02],[140058,140059,10],[140060,140063,6.02],[140064,140065,6.04],[140066,140067,8.65],[140068,140068,7.95],[140069,140069,10],[140070,140070,13.07],[140071,140071,10],[140072,140072,6.02],[140073,140074,10],[140075,140075,13.07],[140076,140084,5.49],[140085,140085,6.02],[140086,140086,9.26],[140087,140092,6.02],[140093,140093,10],[140094,140094,6.02],[140095,140095,7.28],[140096,140096,6],[140097,140100,6.02],[140101,140102,6],[140103,140105,6.02],[140106,140106,6],[140107,140109,6.02],[140110,140111,6],[140112,140112,6.02],[140113,140113,6],[140114,140116,6.02],[140117,140118,6],[140119,140124,6.02],[140125,140125,6],[140126,140128,6.02],[140129,140130,6],[140131,140133,6.02],[140134,140135,6],[140136,140137,6.02],[140138,140138,6],[140139,140144,6.02],[140145,140146,6],[140147,140154,6.02],[140155,140155,6.69],[140156,140156,9.37],[140157,140157,3.19],[140158,140158,9.39],[140159,140159,3.71],[140160,140163,6.02],[140164,140164,7.85],[140165,140165,6.84],[140166,140166,6.75],[140167,140168,10],[140169,140170,6.02],[140171,140171,8.92],[140172,140172,8.08],[140173,140173,7.86],[140174,140174,7.47],[140175,140179,6.58],[140180,140180,7.43],[140181,140181,6.02],[140182,140182,4.72],[140183,140184,7.89],[140185,140186,8.15],[140187,140205,10],[140206,140206,6.02],[140207,140207,3.15],[140208,140209,10],[140210,140211,14.88],[140212,140213,6.16],[140214,140214,7.24],[140215,140215,6.43],[140216,140221,5.03],[140222,140236,10],[140237,140237,9.98],[140238,140238,10],[140239,140239,8.57],[140240,140240,5.11],[140241,140243,5.42],[140244,140245,10.31],[140246,140246,9.58],[140247,140249,9.76],[140250,140251,10],[140252,140255,6.17],[140256,140256,6.16],[140257,140257,10],[140258,140258,11.44],[140259,140259,9.1],[140260,140260,10.94],[140261,140261,10.18],[140262,140262,9.26],[140263,140263,7.98],[140264,140319,10],[140320,140320,6],[140321,140321,10],[140322,140322,6],[140323,140323,5.9],[140324,140324,6],[140325,140325,7.92],[140326,140326,4.03],[140327,140351,10],[140352,140357,6.04],[140358,140361,7.5],[140362,140362,6.04],[140363,140484,10],[140485,140485,8.4],[140486,140543,10],[140544,140544,7.08],[140545,140545,10],[140546,140546,7.08],[140547,140555,10],[140556,140556,7.08],[140557,140559,10],[140560,140560,7.08],[140561,140563,10],[140564,140564,7.08],[140565,140567,10],[140568,140568,7.08],[140569,140571,10],[140572,140572,7.08],[140573,140579,10],[140580,140580,7.08],[140581,140587,10],[140588,140588,7.08],[140589,140595,10],[140596,140596,7.08],[140597,140603,10],[140604,140604,7.08],[140605,140619,10],[140620,140623,6.18],[140624,140652,7.08],[140653,140660,10],[140661,140671,6.18],[140672,140672,7.08],[140673,140675,10],[140676,140676,7.08],[140677,140679,10],[140680,140680,7.08],[140681,140683,10],[140684,140684,7.08],[140685,140687,10],[140688,140690,7.08],[140691,140691,7.29],[140692,140693,10],[140694,140703,6.02],[140704,140705,6.04],[140706,140706,10],[140707,140713,8.65],[140714,140715,3.54],[140716,140716,10],[140717,140717,8.65],[140718,140720,6.02],[140721,140721,10],[140722,140722,9.9],[140723,140723,10],[140724,140724,6.32],[140725,140725,8.65],[140726,140726,8.8],[140727,140727,10],[140728,140729,5.3],[140730,140730,9.9],[140731,140731,6.02],[140732,140732,9.9],[140733,140733,10],[140734,140735,6.39],[140736,140736,10],[140737,140737,7.95],[140738,140738,6.02],[140739,140739,8.65],[140740,140740,9.9],[140741,140741,6.02],[140742,140742,7.23],[140743,140743,6.15],[140744,140744,8.65],[140745,140745,10],[140746,140746,8.67],[140747,140747,6.04],[140748,140748,5.94],[140749,140749,6.02],[140750,140750,10],[140751,140751,6.04],[140752,140755,10],[140756,140759,6.02],[140760,140761,6.04],[140762,140769,6.02],[140770,140773,10],[140774,140774,3.54],[140775,140782,6.02],[140783,140783,10],[140784,140794,6.02],[140795,140798,10],[140799,140799,6.02],[140800,140803,10],[140804,140804,6.02],[140805,140806,10],[140807,140808,6.02],[140809,140809,10],[140810,140813,6.02],[140814,140814,10],[140815,140815,8.65],[140816,140818,8.3],[140819,140819,6.02],[140820,140823,10],[140824,140827,6.02],[140828,140831,10],[140832,140846,6.02],[140847,140847,8.65],[140848,140855,9],[140856,140857,6.02],[140858,140858,10.21],[140859,140859,10.52],[140860,140860,9.17],[140861,140863,6.02],[140864,140864,7.5],[140865,140865,6.02],[140866,140866,7.5],[140867,140871,6.02],[140872,140883,10],[140884,140895,6.02],[140896,140896,5.31],[140897,140898,10],[140899,140899,6.56],[140900,140900,10],[140901,140901,5.94],[140902,140902,5.1],[140903,140905,10],[140906,140906,5],[140907,140907,7.5],[140908,140910,10],[140911,140911,5],[140912,140913,6.02],[140914,140925,10],[140926,140926,6.02],[140927,140927,10],[140928,140939,6.02],[140940,140940,8.79],[140941,140941,8.63],[140942,140942,8.59],[140943,140943,8.96],[140944,140946,6.02],[140947,140947,10],[140948,140956,6.02],[140957,140961,10],[140962,140962,8.92],[140963,140963,8.97],[140964,140964,8.83],[140965,140965,6.6],[140966,140966,7.41],[140967,140967,9.23],[140968,140968,5.33],[140969,140969,9.2],[140970,140971,10],[140972,140972,6.47],[140973,140973,7.76],[140974,140974,10.55],[140975,140975,11.18],[140976,140977,6.02],[140978,140978,6.03],[140979,141025,10],[141026,141026,7],[141027,141056,10],[141057,141057,9.74],[141058,141058,9.61],[141059,141059,9.74],[141060,141060,9.8],[141061,141061,10],[141062,141062,7.89],[141063,141063,7.9],[141064,141064,7.91],[141065,141065,6.9],[141066,141069,10],[141070,141070,7.93],[141071,141071,9.33],[141072,141072,9.11],[141073,141073,9.45],[141074,141074,9.74],[141075,141075,7.64],[141076,141076,8.46],[141077,141077,7.62],[141078,141078,7.61],[141079,141079,5.71],[141080,141080,6.77],[141081,141081,7.63],[141082,141082,7.6],[141083,141083,7.59],[141084,141084,7.54],[141085,141085,4.94],[141086,141086,5.52],[141087,141087,5.37],[141088,141088,5.77],[141089,141089,6.92],[141090,141090,7.86],[141091,141092,7.88],[141093,141093,7.9],[141094,141094,7.93],[141095,141095,7.94],[141096,141096,10],[141097,141097,8.23],[141098,141098,7.89],[141099,141099,8.41],[141100,141100,8.23],[141101,141101,8.33],[141102,141102,8.16],[141103,141103,8.31],[141104,141104,9.23],[141105,141105,7.44],[141106,141106,7.23],[141107,141107,7.49],[141108,141108,7.9],[141109,141109,7.92],[141110,141110,6.95],[141111,141111,7.76],[141112,141112,7.68],[141113,141113,7.92],[141114,141114,7.59],[141115,141115,7.07],[141116,141116,7.08],[141117,141117,6.82],[141118,141118,7.01],[141119,141119,8.26],[141120,141120,8.15],[141121,141122,7.89],[141123,141123,7.07],[141124,141124,6.87],[141125,141125,6.96],[141126,141126,6.89],[141127,141127,7.86],[141128,141128,7.87],[141129,141129,7.13],[141130,141130,7.91],[141131,141131,7.85],[141132,141132,10],[141133,141133,8.73],[141134,141134,10],[141135,141136,7.62],[141137,141138,7.59],[141139,141141,10],[141142,141142,7.84],[141143,141143,10],[141144,141144,3.01],[141145,141145,2.77],[141146,141146,4.15],[141147,141148,3.92],[141149,141150,6.68],[141151,141152,10],[141153,141153,7.32],[141154,141155,5.44],[141156,141156,9.1],[141157,141157,6.67],[141158,141159,7.6],[141160,141161,3.9],[141162,141163,3.17],[141164,141165,2.76],[141166,141167,5.09],[141168,141169,4.1],[141170,141171,2.34],[141172,141173,3.34],[141174,141203,7.88],[141204,141204,8.94],[141205,141207,10],[141208,141208,7.48],[141209,141209,9.24],[141210,141210,7.48],[141211,141211,9.18],[141212,141212,9.27],[141213,141214,9.28],[141215,141215,8.34],[141216,141216,8.73],[141217,141217,8.28],[141218,141219,9.24],[141220,141220,9.17],[141221,141221,9.3],[141222,141222,9.31],[141223,141223,4.63],[141224,141224,8.83],[141225,141226,8.36],[141227,141228,8.67],[141229,141230,6.96],[141231,141231,8.74],[141232,141232,10],[141233,141233,8.74],[141234,141234,7.6],[141235,141235,9.46],[141236,141236,7.71],[141237,141237,8.65],[141238,141238,7.71],[141239,141239,8.88],[141240,141240,9.67],[141241,141241,8.88],[141242,141242,8.31],[141243,141243,8.73],[141244,141244,9.27],[141245,141245,9.7],[141246,141246,9.18],[141247,141247,10],[141248,141248,5.48],[141249,141249,9.48],[141250,141250,6.89],[141251,141252,5.64],[141253,141254,6.02],[141255,141255,6.2],[141256,141257,9.18],[141258,141258,3.4],[141259,141259,8.38],[141260,141260,3.25],[141261,141261,8.38],[141262,141263,10],[141264,141264,7.46],[141265,141265,6.2],[141266,141266,5.97],[141267,141268,5.42],[141269,141270,9.02],[141271,141271,11.15],[141272,141273,6.89],[141274,141274,8.7],[141275,141275,8.56],[141276,141276,10.55],[141277,141278,8.49],[141279,141279,3.96],[141280,141280,5.51],[141281,141281,7],[141282,141283,8.76],[141284,141285,9.46],[141286,141287,4.22],[141288,141289,3.66],[141290,141291,4.63],[141292,141293,4.88],[141294,141295,2.33],[141296,141297,9.82],[141298,141299,9.53],[141300,141300,12.46],[141301,141311,11.79],[141312,141567,6.84],[141568,141569,9.36],[141570,141571,8.66],[141572,141572,10.35],[141573,141573,9.36],[141574,141575,8.66],[141576,141577,4.78],[141578,141579,7.17],[141580,141583,8.82],[141584,141584,10.43],[141585,141585,8.38],[141586,141587,7.59],[141588,141589,8.65],[141590,141592,10.43],[141593,141596,8.65],[141597,141600,8.82],[141601,141602,7.46],[141603,141606,6.5],[141607,141607,7.79],[141608,141608,7.39],[141609,141609,7.79],[141610,141610,7.39],[141611,141612,6.98],[141613,141616,7.39],[141617,141618,7.79],[141619,141619,8.47],[141620,141621,10],[141622,141623,8.65],[141624,141624,4.08],[141625,141625,8.65],[141626,141629,8.08],[141630,141631,6.55],[141632,141633,7.63],[141634,141639,8.38],[141640,141640,9.21],[141641,141641,4.87],[141642,141643,8.38],[141644,141645,4.94],[141646,141646,8.38],[141647,141647,4.33],[141648,141648,8.38],[141649,141649,4.33],[141650,141651,8.62],[141652,141653,4.33],[141654,141655,8.62],[141656,141657,4.33],[141658,141659,8.72],[141660,141661,4.33],[141662,141663,8.72],[141664,141665,4.33],[141666,141669,8.65],[141670,141677,8.38],[141678,141679,7.14],[141680,141685,8.38],[141686,141686,7.23],[141687,141687,10.43],[141688,141688,7.23],[141689,141689,7.65],[141690,141690,9.21],[141691,141691,7.65],[141692,141693,5.56],[141694,141695,5.98],[141696,141696,3.65],[141697,141697,3.8],[141698,141698,3.13],[141699,141700,3.74],[141701,141702,4.47],[141703,141704,3.35],[141705,141706,3.95],[141707,141708,3.01],[141709,141712,3],[141713,141713,3.66],[141714,141714,3.68],[141715,141716,6.59],[141717,141718,6.95],[141719,141720,6.48],[141721,141721,2.26],[141722,141722,2.77],[141723,141723,5.94],[141724,141725,5.92],[141726,141726,6.61],[141727,141727,5.48],[141728,141729,5.94],[141730,141733,5.48],[141734,141735,7.53],[141736,141743,5.94],[141744,141748,7.03],[141749,141749,8.69],[141750,141750,7],[141751,141751,7.02],[141752,141752,7.22],[141753,141753,7.02],[141754,141754,7.03],[141755,141755,7.04],[141756,141761,7.02],[141762,141762,8.55],[141763,141763,8.74],[141764,141768,7.47],[141769,141769,7.96],[141770,141772,7.49],[141773,141773,9.44],[141774,141774,6.5],[141775,141776,7.58],[141777,141779,6.87],[141780,141781,6.51],[141782,141783,7.67],[141784,141785,2.77],[141786,141787,4.23],[141788,141788,6.37],[141789,141789,6.47],[141790,141790,6.37],[141791,141791,6.74],[141792,141792,7.47],[141793,141793,6.53],[141794,141794,6.83],[141795,141797,6.64],[141798,141798,7.1],[141799,141799,6.35],[141800,141801,7.49],[141802,141802,7.17],[141803,141803,4.73],[141804,141805,8.99],[141806,141807,5.98],[141808,141809,7.08],[141810,141811,7.02],[141812,141812,8.18],[141813,141813,6.1],[141814,141814,5.76],[141815,141817,5.08],[141818,141819,6.76],[141820,141821,5.37],[141822,141823,4.73],[141824,141825,8.99],[141826,141826,9.01],[141827,141828,5.44],[141829,141830,5.95],[141831,141832,7.66],[141833,141833,6.66],[141834,141834,8.55],[141835,141835,6.52],[141836,141836,15.05],[141837,141839,6.11],[141840,141840,5.93],[141841,141841,7.28],[141842,141842,6.13],[141843,141843,5.93],[141844,141844,6.75],[141845,141845,5.93],[141846,141846,6.11],[141847,141847,6.76],[141848,141850,6.11],[141851,141851,6.38],[141852,141852,6.17],[141853,141853,6.87],[141854,141854,3.95],[141855,141855,3.34],[141856,141856,8.11],[141857,141857,3.26],[141858,141859,5.41],[141860,141860,5.44],[141861,141861,5.41],[141862,141862,5.44],[141863,141863,6.47],[141864,141864,6.38],[141865,141866,5.45],[141867,141868,5.43],[141869,141870,7.61],[141871,141871,4.58],[141872,141872,5.29],[141873,141873,5.42],[141874,141874,5.21],[141875,141875,8.05],[141876,141877,7.14],[141878,141880,8.99],[141881,141883,7.49],[141884,141885,5.12],[141886,141886,3.34],[141887,141887,6.15],[141888,141893,5.44],[141894,141895,3.88],[141896,141897,5.42],[141898,141899,5.11],[141900,141901,7.39],[141902,141903,5.95],[141904,141904,7.39],[141905,141906,6.1],[141907,141908,6.52],[141909,141910,7.53],[141911,141912,6.52],[141913,141913,6.06],[141914,141915,6.52],[141916,141917,7.38],[141918,141920,6.1],[141921,141921,5.43],[141922,141923,6.1],[141924,141925,6.67],[141926,141929,5.42],[141930,141933,5.43],[141934,141934,4.85],[141935,141938,5.43],[141939,141939,5.44],[141940,141940,8.48],[141941,141941,9.84],[141942,141942,14.57],[141943,141943,5.45],[141944,141944,5.95],[141945,141946,6.59],[141947,141948,5.12],[141949,141951,5.43],[141952,141952,5.44],[141953,141958,5.43],[141959,141959,5.51],[141960,141960,5.7],[141961,141964,5.43],[141965,141965,5.51],[141966,141966,5.48],[141967,141968,5.45],[141969,141975,5.43],[141976,141978,5.44],[141979,141982,5.43],[141983,141983,5.52],[141984,141984,5.46],[141985,141986,6.83],[141987,141987,8.07],[141988,141988,5.44],[141989,141989,9.35],[141990,141993,6.13],[141994,141994,5.12],[141995,141995,5.24],[141996,141996,5.51],[141997,141997,5.56],[141998,141998,5.42],[141999,142001,5.53],[142002,142002,5.51],[142003,142006,5.53],[142007,142007,5.47],[142008,142008,5.48],[142009,142009,5.47],[142010,142010,5.48],[142011,142012,8.88],[142013,142014,5.64],[142015,142022,4.59],[142023,142026,5.46],[142027,142028,4.59],[142029,142030,9.53],[142031,142032,5.64],[142033,142034,5.63],[142035,142038,4.59],[142039,142040,8.5],[142041,142043,5.97],[142044,142044,6.1],[142045,142045,5.97],[142046,142046,3.93],[142047,142049,6.89],[142050,142050,6.86],[142051,142051,6.84],[142052,142052,6.86],[142053,142053,8.37],[142054,142054,6.86],[142055,142057,6.89],[142058,142059,6.93],[142060,142061,5.12],[142062,142062,3.13],[142063,142064,2.84],[142065,142065,2.99],[142066,142066,3.9],[142067,142067,5.43],[142068,142068,3.49],[142069,142069,4.78],[142070,142070,2.26],[142071,142072,9.71],[142073,142074,5.43],[142075,142075,4.99],[142076,142076,3.55],[142077,142077,4.11],[142078,142079,2.94],[142080,142083,6.02],[142084,142084,10.98],[142085,142087,10],[142088,142091,6.02],[142092,142092,10.98],[142093,142093,5.86],[142094,142097,6],[142098,142105,6.02],[142106,142108,10],[142109,142110,2.4],[142111,142114,9.1],[142115,142115,9.26],[142116,142116,12.07],[142117,142118,10],[142119,142120,5.44],[142121,142121,10],[142122,142123,3.57],[142124,142125,8.42],[142126,142127,5.96],[142128,142129,9.26],[142130,142130,12],[142131,142131,15.74],[142132,142134,9.26],[142135,142135,14.12],[142136,142148,9.26],[142149,142150,9.28],[142151,142156,9.26],[142157,142160,10],[142161,142161,7.94],[142162,142162,7],[142163,142164,8.65],[142165,142223,10],[142224,142225,12.34],[142226,142335,10],[142336,142336,8.17],[142337,142337,8.47],[142338,142338,10.63],[142339,142339,9.58],[142340,142340,10.71],[142341,142341,6.58],[142342,142342,10.63],[142343,142343,8.54],[142344,142344,10.19],[142345,142346,10.72],[142347,142347,5.21],[142348,142348,10.96],[142349,142349,4.45],[142350,142350,10.38],[142351,142351,8.36],[142352,142353,5.69],[142354,142354,7.69],[142355,142355,5.69],[142356,142356,8.04],[142357,142357,10.63],[142358,142358,8.54],[142359,142359,7.96],[142360,142360,8.55],[142361,142361,7.96],[142362,142362,8.65],[142363,142363,8.18],[142364,142364,8.4],[142365,142365,9.09],[142366,142366,8.57],[142367,142367,7.42],[142368,142368,6.99],[142369,142369,9.36],[142370,142370,7.78],[142371,142371,8.57],[142372,142372,7.27],[142373,142373,8.5],[142374,142374,8.6],[142375,142375,10.3],[142376,142376,10.4],[142377,142377,13.04],[142378,142378,9.27],[142379,142379,6.01],[142380,142380,3.88],[142381,142381,7.92],[142382,142382,9.89],[142383,142383,10],[142384,142384,7.07],[142385,142385,7.27],[142386,142386,9.2],[142387,142387,7.98],[142388,142388,8.96],[142389,142389,5.08],[142390,142390,9.2],[142391,142391,6.88],[142392,142392,8.34],[142393,142394,9.14],[142395,142395,4.73],[142396,142396,9.19],[142397,142397,3.97],[142398,142398,8.71],[142399,142399,7.23],[142400,142400,4.93],[142401,142401,5.06],[142402,142402,6.63],[142403,142403,4.86],[142404,142404,6.42],[142405,142405,9.2],[142406,142406,7.38],[142407,142407,7.43],[142408,142408,6.99],[142409,142409,6.23],[142410,142410,7.02],[142411,142411,7.07],[142412,142412,6.69],[142413,142413,6.98],[142414,142414,7.46],[142415,142415,6.39],[142416,142416,6.13],[142417,142417,7.22],[142418,142418,6.04],[142419,142419,7.46],[142420,142420,5.64],[142421,142421,6.64],[142422,142422,7.22],[142423,142423,7.84],[142424,142424,8.53],[142425,142425,10.38],[142426,142426,7.97],[142427,142427,4.83],[142428,142428,3.12],[142429,142429,6.44],[142430,142430,7.71],[142431,142431,10],[142432,142432,6.67],[142433,142433,2.78],[142434,142434,6.67],[142435,142435,6.11],[142436,142436,7.22],[142437,142437,5],[142438,142438,3.33],[142439,142439,7.78],[142440,142440,5.56],[142441,142441,7.78],[142442,142442,5.56],[142443,142443,6.67],[142444,142444,4.44],[142445,142445,8.32],[142446,142447,6.02],[142448,142448,8.98],[142449,142449,7.4],[142450,142450,12.22],[142451,142451,10.6],[142452,142452,4.92],[142453,142453,6.47],[142454,142454,4.83],[142455,142455,6.24],[142456,142456,6.89],[142457,142458,6.02],[142459,142459,4.07],[142460,142461,6.02],[142462,142462,5.86],[142463,142463,6],[142464,142464,6.33],[142465,142465,5.74],[142466,142466,6.5],[142467,142467,5.76],[142468,142468,5.24],[142469,142469,4.33],[142470,142470,8.14],[142471,142471,6.58],[142472,142472,6.43],[142473,142473,4.95],[142474,142474,5.56],[142475,142475,4.79],[142476,142476,5.72],[142477,142477,4.54],[142478,142478,7.41],[142479,142479,6.37],[142480,142480,7.82],[142481,142481,6.05],[142482,142482,2.84],[142483,142483,2.58],[142484,142484,6.19],[142485,142485,5.34],[142486,142486,5.81],[142487,142487,4.67],[142488,142488,8],[142489,142489,7.46],[142490,142490,7.6],[142491,142491,6.32],[142492,142492,5.72],[142493,142493,4.7],[142494,142494,7.81],[142495,142495,6.05],[142496,142496,7.31],[142497,142497,6.24],[142498,142498,6.05],[142499,142499,5.3],[142500,142500,6.32],[142501,142501,4.8],[142502,142502,6.1],[142503,142503,5.67],[142504,142504,5.66],[142505,142505,5.08],[142506,142506,8.04],[142507,142507,7.25],[142508,142508,5.86],[142509,142509,5.29],[142510,142510,8.34],[142511,142511,7],[142512,142512,10.32],[142513,142513,8.16],[142514,142514,6.47],[142515,142515,5.06],[142516,142516,5.54],[142517,142517,5.72],[142518,142518,6.3],[142519,142519,5.52],[142520,142520,5.72],[142521,142521,4.7],[142522,142522,6.47],[142523,142523,5.06],[142524,142524,7.88],[142525,142525,7.06],[142526,142526,8.16],[142527,142527,7.45],[142528,142528,6.49],[142529,142529,5.38],[142530,142530,10.32],[142531,142531,8.16],[142532,142532,5.84],[142533,142533,4.98],[142534,142534,4.41],[142535,142535,3.8],[142536,142536,5.49],[142537,142537,5.25],[142538,142539,5.72],[142540,142540,5.88],[142541,142541,5.1],[142542,142542,6.17],[142543,142543,5.5],[142544,142544,5.24],[142545,142545,4.35],[142546,142547,5.72],[142548,142548,3.57],[142549,142549,3.69],[142550,142550,5.99],[142551,142551,5.17],[142552,142552,7.31],[142553,142553,6.24],[142554,142554,8.14],[142555,142555,6.58],[142556,142557,6.04],[142558,142558,5.56],[142559,142559,4.7],[142560,142560,8.24],[142561,142561,7.28],[142562,142562,6.58],[142563,142563,5.85],[142564,142564,5.34],[142565,142565,7.49],[142566,142566,7.28],[142567,142567,8.71],[142568,142569,6.93],[142570,142570,10.45],[142571,142571,8.18],[142572,142572,5.92],[142573,142573,7.6],[142574,142574,6.61],[142575,142577,0],[142578,142578,7.3],[142579,142579,6.15],[142580,142584,10],[142585,142585,8.36],[142586,142587,5.54],[142588,142588,8.36],[142589,142589,3.46],[142590,142590,4.26],[142591,142591,3],[142592,142639,10],[142640,142640,4.14],[142641,142641,8.56],[142642,142642,8.57],[142643,142644,6.79],[142645,142645,6.39],[142646,142646,6.05],[142647,142648,6.31],[142649,142650,6.47],[142651,142651,7],[142652,142652,7.94],[142653,142653,7.24],[142654,142654,4.98],[142655,142655,7.24],[142656,142657,8.57],[142658,142658,2.85],[142659,142659,6.39],[142660,142660,7.25],[142661,142661,6.39],[142662,142662,6.99],[142663,142663,7.28],[142664,142664,7.42],[142665,142665,4.77],[142666,142666,5.11],[142667,142667,6.27],[142668,142668,7.84],[142669,142669,5.36],[142670,142670,6.47],[142671,142671,2.83],[142672,142672,7.65],[142673,142673,2.73],[142674,142674,5.51],[142675,142675,4.14],[142676,142677,8.57],[142678,142678,7.25],[142679,142679,2.92],[142680,142680,7.1],[142681,142682,8.57],[142683,142683,7.56],[142684,142684,5.19],[142685,142685,6.39],[142686,142686,7.56],[142687,142687,6.47],[142688,142688,6.71],[142689,142689,7.05],[142690,142690,4.77],[142691,142691,8.36],[142692,142692,4.54],[142693,142693,8.36],[142694,142694,6.51],[142695,142695,7.71],[142696,142702,10],[142703,142703,3.08],[142704,142704,7.69],[142705,142718,10],[142719,142719,0],[142720,142720,13.8],[142721,142721,11.43],[142722,142722,11.67],[142723,142723,9.54],[142724,142724,10.23],[142725,142725,9.83],[142726,142726,8.37],[142727,142727,8.44],[142728,142728,8.5],[142729,142729,10.35],[142730,142730,8.8],[142731,142731,10.02],[142732,142732,11],[142733,142733,10.68],[142734,142734,10.71],[142735,142735,15.02],[142736,142736,17.51],[142737,142737,9.16],[142738,142738,9.85],[142739,142739,11.58],[142740,142740,11.43],[142741,142741,8.15],[142742,142742,11.43],[142743,142751,10],[142752,142752,10.23],[142753,142753,11.88],[142754,142754,11.72],[142755,142755,10.23],[142756,142756,11.6],[142757,142758,10.23],[142759,142759,10],[142760,142762,8.37],[142763,142763,8.38],[142764,142764,8.37],[142765,142765,10.05],[142766,142766,8.44],[142767,142767,10],[142768,142772,12.19],[142773,142773,13.53],[142774,142774,12.19],[142775,142775,10],[142776,142776,16.94],[142777,142777,17.31],[142778,142778,17.25],[142779,142779,17.03],[142780,142780,20.36],[142781,142781,16.64],[142782,142782,16.83],[142783,142783,10],[142784,142790,9.05],[142791,142791,10],[142792,142792,7.65],[142793,142793,9.9],[142794,142794,9.83],[142795,142795,7.65],[142796,142796,9.71],[142797,142798,7.65],[142799,142799,10],[142800,142800,9.62],[142801,142801,11.88],[142802,142802,11.81],[142803,142803,9.62],[142804,142804,11.68],[142805,142806,9.62],[142807,142807,10],[142808,142808,6.29],[142809,142809,9.02],[142810,142810,6.67],[142811,142811,6.83],[142812,142812,6.55],[142813,142813,8.68],[142814,142814,6.29],[142815,142815,10],[142816,142847,0],[142848,142848,2.38],[142849,142849,2.43],[142850,142851,1.73],[142852,142852,2.03],[142853,142853,2.02],[142854,142854,3.79],[142855,142855,3.83],[142856,142856,3.05],[142857,142858,2.97],[142859,142859,3.54],[142860,142861,2.34],[142862,142862,10.05],[142863,142863,12.05],[142864,142865,11.68],[142866,142866,1.57],[142867,142867,5.51],[142868,142869,7.03],[142870,142870,6.03],[142871,142871,3.33],[142872,142872,6.02],[142873,142873,10],[142874,142874,3.79],[142875,142875,6.67],[142876,142877,2.34],[142878,142879,6.67],[142880,142881,4.28],[142882,142885,4.47],[142886,142887,6.73],[142888,142889,6.31],[142890,142892,6.91],[142893,142893,6.67],[142894,142894,6.02],[142895,142895,2.35],[142896,142896,3.41],[142897,142897,2.82],[142898,142911,10],[142912,142912,5],[142913,143405,10],[143406,143407,16],[143408,143422,10],[143423,143423,5],[143424,143512,10],[143513,143514,0],[143515,143664,10],[143665,143758,8.65],[143759,143871,10],[143872,143899,8.65],[143900,143900,8.69],[143901,143967,10],[143968,143995,8.65],[143996,143998,10],[143999,143999,8.65],[144000,144255,10],[144256,144260,8.65],[144261,144265,10],[144266,144268,8.65],[144269,144272,10],[144273,144277,8.65],[144278,144280,10],[144281,144282,8.65],[144283,144294,10],[144295,144303,8.65],[144304,144307,10],[144308,144321,8.65],[144322,144322,10],[144323,144323,8.65],[144324,144324,10],[144325,144327,8.65],[144328,144328,10],[144329,144330,8.65],[144331,144334,10],[144335,144336,8.65],[144337,144338,10],[144339,144339,8.65],[144340,144341,10],[144342,144342,8.65],[144343,144346,10],[144347,144349,8.65],[144350,150975,10],[150976,151039,8.79],[151040,172031,10],[172032,172034,6.17],[172035,172035,6.41],[172036,172036,6.15],[172037,172038,5.68],[172039,172039,6.3],[172040,172040,5.25],[172041,172042,5.43],[172043,172043,5.62],[172044,172045,5.93],[172046,172046,5.73],[172047,172047,5.82],[172048,172050,6.85],[172051,172051,5.89],[172052,172052,5.78],[172053,172053,6.37],[172054,172054,6.26],[172055,172057,5.32],[172058,172058,6.75],[172059,172060,5.84],[172061,172061,6.27],[172062,172062,5.14],[172063,172064,6.37],[172065,172065,6.05],[172066,172067,5.83],[172068,172068,4.49],[172069,172069,6.01],[172070,172071,5.2],[172072,172072,5.18],[172073,172074,6.12],[172075,172075,4.49],[172076,172076,5.72],[172077,172078,5.24],[172079,172079,4.95],[172080,172081,6.06],[172082,172082,5.47],[172083,172084,5.39],[172085,172085,6.02],[172086,172087,7.05],[172088,172088,6.07],[172089,172090,6.22],[172091,172091,5.72],[172092,172093,6.67],[172094,172094,6.12],[172095,172095,5.93],[172096,172097,6.13],[172098,172098,6.23],[172099,172100,5.73],[172101,172101,5.89],[172102,172102,6.2],[172103,172104,6.39],[172105,172105,5.63],[172106,172106,5.01],[172107,172108,5.8],[172109,172109,5.97],[172110,172111,6.23],[172112,172112,6.07],[172113,172114,6.43],[172115,172115,6.11],[172116,172117,6.17],[172118,172118,6.12],[172119,172120,5.82],[172121,172121,5.92],[172122,172122,6.27],[172123,172124,5.71],[172125,172125,6.14],[172126,172126,6.29],[172127,172128,8.01],[172129,172129,6.37],[172130,172131,5.74],[172132,172132,6.07],[172133,172133,6.09],[172134,172135,5.03],[172136,172136,6.12],[172137,172138,5.76],[172139,172139,6.08],[172140,172140,6.16],[172141,172142,5.91],[172143,172143,5.54],[172144,172145,5.76],[172146,172146,5.58],[172147,172148,5.3],[172149,172149,5.1],[172150,172150,5.85],[172151,172152,5.68],[172153,172153,5.53],[172154,172155,5.89],[172156,172156,5.27],[172157,172157,6.63],[172158,172159,5.45],[172160,172160,6.71],[172161,172161,6.03],[172162,172164,6.37],[172165,172165,5.61],[172166,172167,6.07],[172168,172168,5.63],[172169,172170,7.09],[172171,172171,5.86],[172172,172173,6.13],[172174,172174,5.7],[172175,172176,5.64],[172177,172177,5.1],[172178,172179,5.6],[172180,172180,5.92],[172181,172181,6.39],[172182,172182,6.19],[172183,172183,5.06],[172184,172184,6.03],[172185,172186,5.95],[172187,172187,5.76],[172188,172189,5.87],[172190,172190,5.34],[172191,172191,6.07],[172192,172193,5.84],[172194,172194,5.56],[172195,172195,5.49],[172196,172197,5.42],[172198,172198,5.92],[172199,172200,6.39],[172201,172202,5.2],[172203,172203,5.34],[172204,172205,6.12],[172206,172206,5.92],[172207,172208,5.41],[172209,172209,5.18],[172210,172211,5.92],[172212,172212,5.45],[172213,172213,6.33],[172214,172215,5.98],[172216,172216,6.37],[172217,172217,5.59],[172218,172219,5.69],[172220,172220,6.85],[172221,172221,6.07],[172222,172223,5.6],[172224,172224,5.83],[172225,172226,6],[172227,172227,5.77],[172228,172229,6.54],[172230,172230,5.82],[172231,172232,5.27],[172233,172233,5.32],[172234,172235,6.39],[172236,172236,5.27],[172237,172237,5.54],[172238,172239,5.56],[172240,172240,5.24],[172241,172241,6.58],[172242,172244,5.61],[172245,172246,5.28],[172247,172247,5.36],[172248,172248,4.82],[172249,172250,6.22],[172251,172251,6.08],[172252,172253,5.47],[172254,172254,5.6],[172255,172258,6.08],[172259,172260,5.4],[172261,172261,5.47],[172262,172262,5.39],[172263,172264,5.03],[172265,172265,5.15],[172266,172268,5.92],[172269,172269,5.15],[172270,172270,5.66],[172271,172272,5.57],[172273,172273,6.35],[172274,172275,5.42],[172276,172276,5.77],[172277,172278,5.18],[172279,172279,5.4],[172280,172281,5.56],[172282,172282,5.6],[172283,172284,6.39],[172285,172285,5.6],[172286,172287,6.24],[172288,172288,6.74],[172289,172290,5.54],[172291,172291,6.17],[172292,172293,5.71],[172294,172294,5.66],[172295,172295,6.26],[172296,172297,5.21],[172298,172298,6.12],[172299,172300,5.36],[172301,172301,5.68],[172302,172303,5.65],[172304,172304,5.1],[172305,172306,4.98],[172307,172307,5.37],[172308,172308,4.9],[172309,172310,5.08],[172311,172311,5.53],[172312,172313,5.03],[172314,172314,5.1],[172315,172316,4.93],[172317,172317,5.08],[172318,172319,5.72],[172320,172320,5.69],[172321,172321,4.98],[172322,172323,5.37],[172324,172324,4.98],[172325,172325,5.59],[172326,172327,4.82],[172328,172328,5.95],[172329,172329,5.1],[172330,172331,5.34],[172332,172332,5.38],[172333,172334,5.63],[172335,172335,5.37],[172336,172336,5.9],[172337,172338,5.92],[172339,172339,5.87],[172340,172341,6.15],[172342,172342,5.37],[172343,172344,5.21],[172345,172348,5.37],[172349,172349,5.63],[172350,172352,5.37],[172353,172354,5.59],[172355,172355,5.51],[172356,172356,5.2],[172357,172358,5.07],[172359,172359,5.3],[172360,172361,5.18],[172362,172362,6.07],[172363,172363,5.75],[172364,172365,6.39],[172366,172366,5.87],[172367,172368,6.13],[172369,172369,5.37],[172370,172371,4.86],[172372,172372,5.54],[172373,172374,5.73],[172375,172375,5.63],[172376,172377,5.6],[172378,172378,6.46],[172379,172379,5.53],[172380,172382,5.6],[172383,172384,6.07],[172385,172385,5.97],[172386,172386,5.1],[172387,172388,5.31],[172389,172389,5.82],[172390,172391,5.53],[172392,172392,4.94],[172393,172394,4.84],[172395,172395,5.6],[172396,172396,5.41],[172397,172398,6.08],[172399,172399,5.64],[172400,172400,5.02],[172401,172402,5.86],[172403,172403,5.34],[172404,172405,6.66],[172406,172406,5.76],[172407,172408,5.22],[172409,172410,5.37],[172411,172411,5.71],[172412,172412,5.81],[172413,172413,5.92],[172414,172415,6.13],[172416,172416,6.07],[172417,172418,5.94],[172419,172419,5.5],[172420,172421,5.59],[172422,172422,5.49],[172423,172424,5.38],[172425,172425,5.73],[172426,172426,5.64],[172427,172428,5.69],[172429,172429,5.64],[172430,172431,5.24],[172432,172432,5.2],[172433,172433,5.47],[172434,172436,5.76],[172437,172438,5.42],[172439,172441,5.6],[172442,172442,5.39],[172443,172444,5.6],[172445,172445,5.82],[172446,172446,6.22],[172447,172448,6.09],[172449,172449,5.72],[172450,172451,5.55],[172452,172452,5.71],[172453,172454,5.36],[172455,172455,5.71],[172456,172458,5.2],[172459,172459,5.65],[172460,172461,5],[172462,172462,5.42],[172463,172464,5.47],[172465,172465,5.94],[172466,172467,6],[172468,172468,5.8],[172469,172470,5.76],[172471,172471,5.37],[172472,172473,4.63],[172474,172474,5.92],[172475,172475,4.9],[172476,172477,4.88],[172478,172478,4.87],[172479,172479,6.25],[172480,172481,5.13],[172482,172482,5.59],[172483,172485,5.31],[172486,172486,6],[172487,172487,5.99],[172488,172489,5.68],[172490,172490,5.54],[172491,172492,5.01],[172493,172493,6.37],[172494,172494,5.92],[172495,172496,6.37],[172497,172497,5.6],[172498,172499,5.11],[172500,172500,6],[172501,172502,5.61],[172503,172503,5.37],[172504,172505,4.99],[172506,172506,5.96],[172507,172508,5.83],[172509,172510,5.2],[172511,172512,5.99],[172513,172513,5.2],[172514,172514,5.62],[172515,172516,5.46],[172517,172517,5.92],[172518,172518,6.25],[172519,172520,6.43],[172521,172521,5.92],[172522,172522,6.54],[172523,172524,5.57],[172525,172525,5.27],[172526,172526,5.32],[172527,172528,5.1],[172529,172529,4.94],[172530,172530,6.26],[172531,172532,6.13],[172533,172533,5.92],[172534,172535,5.59],[172536,172536,5.7],[172537,172538,5.54],[172539,172539,4.96],[172540,172541,5.37],[172542,172542,5.64],[172543,172543,5.81],[172544,172545,5.31],[172546,172546,5.32],[172547,172548,5.42],[172549,172549,5.78],[172550,172550,5.27],[172551,172552,5.03],[172553,172553,5.46],[172554,172554,6.16],[172555,172556,4.54],[172557,172557,6.39],[172558,172558,6],[172559,172560,5.74],[172561,172561,5.38],[172562,172563,5.07],[172564,172564,5.92],[172565,172566,5.37],[172567,172568,5.97],[172569,172569,5.66],[172570,172570,5.71],[172571,172572,5.52],[172573,172573,5.25],[172574,172574,5.47],[172575,172576,6.26],[172577,172577,5.82],[172578,172578,5.29],[172579,172580,4.67],[172581,172581,4.58],[172582,172582,5.42],[172583,172584,5.93],[172585,172585,6.73],[172586,172586,6.03],[172587,172589,5.29],[172590,172591,5.53],[172592,172593,5.98],[172594,172594,5.39],[172595,172596,6.09],[172597,172597,5.39],[172598,172599,5.53],[172600,172601,5.41],[172602,172603,5.85],[172604,172604,5.76],[172605,172606,5.16],[172607,172607,5.47],[172608,172608,6.29],[172609,172610,4.77],[172611,172611,5.73],[172612,172613,6.13],[172614,172614,5.59],[172615,172616,5.64],[172617,172617,5.49],[172618,172618,5.07],[172619,172620,5.58],[172621,172621,6.08],[172622,172622,5.87],[172623,172624,5.33],[172625,172625,5.62],[172626,172626,6.05],[172627,172628,5.7],[172629,172629,6.05],[172630,172630,4.98],[172631,172632,5.24],[172633,172633,5.64],[172634,172635,5.53],[172636,172636,5.54],[172637,172638,5.59],[172639,172639,5.24],[172640,172640,6.09],[172641,172642,5.37],[172643,172643,5.88],[172644,172644,5.92],[172645,172646,5.22],[172647,172647,4.78],[172648,172649,5.63],[172650,172650,6.46],[172651,172652,5.18],[172653,172653,6.11],[172654,172656,5.25],[172657,172657,6.04],[172658,172660,6.16],[172661,172661,5.43],[172662,172663,5.53],[172664,172664,5.8],[172665,172665,5.26],[172666,172667,5.92],[172668,172668,5.67],[172669,172670,5.89],[172671,172671,6.12],[172672,172672,6.2],[172673,172675,5.57],[172676,172677,5.5],[172678,172678,5.8],[172679,172680,5.17],[172681,172681,4.88],[172682,172683,5.48],[172684,172684,5.76],[172685,172685,5.7],[172686,172687,6.17],[172688,172688,5.61],[172689,172690,5.69],[172691,172691,5.55],[172692,172694,5.46],[172695,172695,6.17],[172696,172697,5.63],[172698,172698,6.04],[172699,172699,5.78],[172700,172701,5.98],[172702,172702,5.63],[172703,172704,5.71],[172705,172705,5.25],[172706,172706,5.53],[172707,172708,4.78],[172709,172709,5.46],[172710,172711,6.5],[172712,172712,5.17],[172713,172714,5.41],[172715,172715,4.79],[172716,172717,5.49],[172718,172718,5.18],[172719,172720,4.84],[172721,172721,4.96],[172722,172722,5.95],[172723,172724,5.53],[172725,172725,5.54],[172726,172728,5.92],[172729,172729,6.75],[172730,172731,5.1],[172732,172732,5.69],[172733,172733,6.35],[172734,172735,6.3],[172736,172736,5.67],[172737,172738,5.92],[172739,172739,6.37],[172740,172740,5.96],[172741,172742,6.33],[172743,172743,5.65],[172744,172745,5.88],[172746,172746,4.89],[172747,172748,5.83],[172749,172749,5.1],[172750,172751,5.13],[172752,172752,5.71],[172753,172754,6.07],[172755,172755,5.32],[172756,172756,5.18],[172757,172758,5.53],[172759,172759,5.57],[172760,172760,5.88],[172761,172762,5.77],[172763,172763,5.88],[172764,172765,5.82],[172766,172766,5.41],[172767,172768,5.83],[172769,172769,5.75],[172770,172771,5.53],[172772,172772,5.49],[172773,172774,5.09],[172775,172775,6.04],[172776,172777,5.15],[172778,172778,5.37],[172779,172780,5.99],[172781,172781,5.66],[172782,172783,5.42],[172784,172784,5.29],[172785,172787,6.45],[172788,172790,5.42],[172791,172791,5.31],[172792,172793,5.97],[172794,172795,5.63],[172796,172797,4.59],[172798,172799,5.97],[172800,172800,5.74],[172801,172802,6.13],[172803,172803,5.66],[172804,172805,4.77],[172806,172806,5.92],[172807,172808,6.13],[172809,172809,5.99],[172810,172811,5.97],[172812,172812,5.25],[172813,172814,6.33],[172815,172815,6.08],[172816,172816,5.2],[172817,172818,5.06],[172819,172819,5.51],[172820,172822,4.77],[172823,172823,5.46],[172824,172825,5.13],[172826,172826,5.46],[172827,172828,5.71],[172829,172829,5.22],[172830,172830,5.98],[172831,172832,5.14],[172833,172833,5.63],[172834,172835,5.52],[172836,172838,5.73],[172839,172839,5.42],[172840,172841,5.73],[172842,172842,4.99],[172843,172844,5.01],[172845,172845,5.23],[172846,172847,5.6],[172848,172848,5.37],[172849,172849,6.37],[172850,172852,5.53],[172853,172853,5.44],[172854,172855,5.92],[172856,172856,6.55],[172857,172858,5.1],[172859,172859,5.92],[172860,172860,5.42],[172861,172862,5.49],[172863,172863,6.28],[172864,172864,6.49],[172865,172866,5.5],[172867,172867,5.58],[172868,172869,6.12],[172870,172870,5.83],[172871,172872,5.76],[172873,172873,5.08],[172874,172875,5.42],[172876,172876,5.32],[172877,172877,6.67],[172878,172879,6.33],[172880,172880,5.71],[172881,172883,5.2],[172884,172884,6.13],[172885,172885,6.61],[172886,172887,6.41],[172888,172888,6.06],[172889,172890,5.77],[172891,172891,5.52],[172892,172893,5.6],[172894,172894,5.18],[172895,172896,5.59],[172897,172897,5.34],[172898,172899,5.96],[172900,172900,5.6],[172901,172901,5.76],[172902,172903,5.38],[172904,172904,5.94],[172905,172905,5.64],[172906,172907,5.03],[172908,172908,5.25],[172909,172911,5.68],[172912,172912,5.37],[172913,172914,7.05],[172915,172915,5.83],[172916,172917,5.74],[172918,172918,5.58],[172919,172920,5.72],[172921,172921,5.34],[172922,172923,5.58],[172924,172925,5.63],[172926,172927,5.32],[172928,172928,5.87],[172929,172930,5.54],[172931,172931,5.83],[172932,172932,5.22],[172933,172934,5.08],[172935,172935,5.6],[172936,172936,5.31],[172937,172938,5.83],[172939,172939,6.33],[172940,172941,5.3],[172942,172942,5.66],[172943,172944,5.3],[172945,172945,5.14],[172946,172947,5.53],[172948,172948,5.92],[172949,172950,5.84],[172951,172951,5.18],[172952,172954,5.83],[172955,172955,5.08],[172956,172957,5.68],[172958,172958,6.07],[172959,172959,5.6],[172960,172961,5.63],[172962,172962,6.08],[172963,172964,5.72],[172965,172965,5.35],[172966,172967,5.66],[172968,172968,5.37],[172969,172970,5.97],[172971,172971,5.31],[172972,172973,5.68],[172974,172974,6.23],[172975,172976,5.03],[172977,172977,5],[172978,172978,5.81],[172979,172980,5.97],[172981,172981,6.1],[172982,172982,6],[172983,172985,5.22],[172986,172986,5.19],[172987,172988,5.78],[172989,172989,5.53],[172990,172991,5.42],[172992,172992,5.37],[172993,172994,4.79],[172995,172995,6.08],[172996,172997,5.03],[172998,172998,5.92],[172999,173000,6.51],[173001,173001,5.47],[173002,173003,5.84],[173004,173004,5.05],[173005,173005,5.75],[173006,173006,5.63],[173007,173007,5.75],[173008,173008,6.09],[173009,173010,5.58],[173011,173011,6.14],[173012,173012,5.03],[173013,173014,5.37],[173015,173015,5.34],[173016,173017,5.03],[173018,173018,7.01],[173019,173020,5.32],[173021,173021,5.77],[173022,173023,5.08],[173024,173024,5.61],[173025,173026,5.37],[173027,173027,5.66],[173028,173028,5.49],[173029,173030,6.07],[173031,173031,5.55],[173032,173032,5.41],[173033,173035,5.97],[173036,173038,6.37],[173039,173039,5.97],[173040,173040,5.92],[173041,173042,4.92],[173043,173043,5.61],[173044,173045,6.13],[173046,173046,5.77],[173047,173048,5.71],[173049,173049,4.98],[173050,173051,5.64],[173052,173052,5.98],[173053,173054,5.7],[173055,173055,5.92],[173056,173056,7.74],[173057,173058,6.07],[173059,173059,6.32],[173060,173060,5.32],[173061,173063,5.59],[173064,173064,5.27],[173065,173066,6.75],[173067,173067,5.92],[173068,173068,5.66],[173069,173070,5.92],[173071,173071,5.18],[173072,173073,5.92],[173074,173074,5.48],[173075,173077,6.08],[173078,173079,5.54],[173080,173080,5.6],[173081,173082,5.13],[173083,173083,5.59],[173084,173084,5.73],[173085,173086,5.64],[173087,173087,6.17],[173088,173089,5.46],[173090,173090,6.54],[173091,173091,5.86],[173092,173093,5.6],[173094,173094,5.46],[173095,173095,5.82],[173096,173097,6.6],[173098,173098,5.72],[173099,173100,5.61],[173101,173101,5.37],[173102,173103,6.19],[173104,173104,5.41],[173105,173105,5.3],[173106,173107,5.73],[173108,173108,6],[173109,173109,6.37],[173110,173111,6.2],[173112,173112,5.53],[173113,173114,6.37],[173115,173115,6.01],[173116,173117,6.59],[173118,173118,5.63],[173119,173120,5.04],[173121,173121,5],[173122,173123,5.77],[173124,173124,5.41],[173125,173126,5.17],[173127,173127,5.1],[173128,173129,5.58],[173130,173130,5.71],[173131,173132,4.84],[173133,173133,4.77],[173134,173134,5.84],[173135,173136,6.04],[173137,173137,5],[173138,173139,5.53],[173140,173140,5.89],[173141,173141,5.58],[173142,173143,5.76],[173144,173144,5.68],[173145,173145,5.92],[173146,173147,5.31],[173148,173148,5.42],[173149,173149,6.37],[173150,173151,6.14],[173152,173152,5.41],[173153,173155,6.37],[173156,173156,6.73],[173157,173158,5.6],[173159,173159,6.37],[173160,173161,5.81],[173162,173162,5.96],[173163,173163,5.41],[173164,173168,5.37],[173169,173169,6.17],[173170,173171,5.81],[173172,173172,5.1],[173173,173173,6.17],[173174,173175,5.41],[173176,173176,5.72],[173177,173177,5.61],[173178,173179,5.32],[173180,173180,5.42],[173181,173181,5.59],[173182,173183,5.61],[173184,173184,5.73],[173185,173185,5.34],[173186,173187,6.17],[173188,173188,5.31],[173189,173190,5.42],[173191,173191,5.41],[173192,173193,5.33],[173194,173194,5.49],[173195,173196,5.56],[173197,173199,10],[173200,173200,2.64],[173201,173202,4.08],[173203,173203,3.75],[173204,173204,5.1],[173205,173206,5.36],[173207,173207,4.79],[173208,173208,5],[173209,173209,5.59],[173210,173210,5.46],[173211,173211,3.39],[173212,173212,5.83],[173213,173213,5.61],[173214,173214,4.82],[173215,173215,4.51],[173216,173216,4.98],[173217,173218,6.39],[173219,173219,4.89],[173220,173220,6.13],[173221,173221,5.39],[173222,173222,5.67],[173223,173223,5.68],[173224,173224,5.92],[173225,173225,5],[173226,173226,5.72],[173227,173227,5.39],[173228,173228,6.07],[173229,173229,5.84],[173230,173230,6.17],[173231,173231,5.03],[173232,173233,3.87],[173234,173234,3.52],[173235,173235,6.37],[173236,173236,8.14],[173237,173237,6.19],[173238,173238,7.35],[173239,173239,5.64],[173240,173240,4.71],[173241,173241,5.08],[173242,173242,5.42],[173243,173243,4.88],[173244,173244,5.11],[173245,173245,5.69],[173246,173246,4.96],[173247,173247,5.89],[173248,173248,5.31],[173249,173249,5.51],[173250,173250,6.1],[173251,173251,4.97],[173252,173252,4.88],[173253,173253,5.53],[173254,173254,4.2],[173255,173263,10],[173264,173264,6.5],[173265,173266,6.05],[173267,173267,7.3],[173268,173269,5.56],[173270,173270,7.28],[173271,173272,6.19],[173273,173273,3.71],[173274,173275,6.32],[173276,173276,5.72],[173277,173278,5.19],[173279,173279,9.07],[173280,173280,7.6],[173281,173281,5.24],[173282,173282,5.49],[173283,173284,6.22],[173285,173286,6],[173287,173287,7.41],[173288,173288,7.28],[173289,173289,3.71],[173290,173290,9.3],[173291,173291,5.86],[173292,173292,5.66],[173293,173293,6.5],[173294,173295,6.39],[173296,173297,5.56],[173298,173298,2.85],[173299,173299,7.81],[173300,173301,7.31],[173302,173302,5.24],[173303,173303,7.3],[173304,173304,3],[173305,173305,3.03],[173306,173306,4.9],[173307,173307,4.93],[173308,173308,3.03],[173309,173309,3],[173310,173310,6.33],[173311,173311,5.46],[173312,173312,6.5],[173313,173313,6.94],[173314,173314,7.79],[173315,173316,8.57],[173317,173317,8.82],[173318,173318,10.82],[173319,173320,7.35],[173321,173323,6.68],[173324,173325,5.44],[173326,173326,9.13],[173327,173327,9.24],[173328,173329,11.96],[173330,173331,8.51],[173332,173332,7.09],[173333,173333,6.95],[173334,173334,7],[173335,173335,7.01],[173336,173337,7],[173338,173339,10.66],[173340,173341,7.79],[173342,173342,13.9],[173343,173343,10.4],[173344,173344,7.9],[173345,173345,7.24],[173346,173346,7.72],[173347,173347,10.66],[173348,173348,8.51],[173349,173349,9.41],[173350,173350,9.31],[173351,173351,4.5],[173352,173352,8.42],[173353,173353,8.92],[173354,173354,6.07],[173355,173355,8.72],[173356,173356,6.64],[173357,173357,7.04],[173358,173358,6.17],[173359,173359,6.46],[173360,173360,7.7],[173361,173361,7.95],[173362,173362,7.28],[173363,173363,8.01],[173364,173364,8.44],[173365,173366,6.61],[173367,173368,4.34],[173369,173369,6.16],[173370,173370,9.05],[173371,173371,7.63],[173372,173372,8.33],[173373,173373,6.82],[173374,173374,7.73],[173375,173375,6.06],[173376,173378,9.06],[173379,173380,5.28],[173381,173381,9.5],[173382,173382,7.78],[173383,173383,6.26],[173384,173384,6.95],[173385,173385,5.46],[173386,173386,7.18],[173387,173387,7.4],[173388,173389,9.28],[173390,173390,8.01],[173391,173391,9.32],[173392,173392,8.69],[173393,173393,8.35],[173394,173394,9.46],[173395,173395,8.94],[173396,173396,6.82],[173397,173397,6.47],[173398,173398,7.48],[173399,173399,6.07],[173400,173400,5.48],[173401,173401,7.34],[173402,173403,7.06],[173404,173404,7.63],[173405,173405,9.62],[173406,173407,7.02],[173408,173409,8.78],[173410,173411,9.17],[173412,173412,8.74],[173413,173413,9.06],[173414,173414,7.23],[173415,173415,7.68],[173416,173416,6.79],[173417,173417,8.1],[173418,173418,6.72],[173419,173419,8.17],[173420,173420,7.43],[173421,173421,9.48],[173422,173422,7.32],[173423,173423,6.14],[173424,173424,9.14],[173425,173425,6.79],[173426,173426,7.09],[173427,173427,6.79],[173428,173428,7.11],[173429,173429,7.41],[173430,173431,5.66],[173432,173432,7.36],[173433,173433,8.87],[173434,173434,5.99],[173435,173435,7.93],[173436,173436,5.93],[173437,173438,7.26],[173439,173440,6.88],[173441,173442,9.28],[173443,173444,8.57],[173445,173445,8.68],[173446,173446,9.38],[173447,173447,7.8],[173448,173448,8.01],[173449,173449,4.99],[173450,173450,7.14],[173451,173452,6.4],[173453,173453,8.21],[173454,173454,5.02],[173455,173455,7.32],[173456,173456,8.19],[173457,173457,6.72],[173458,173458,8.87],[173459,173459,9.92],[173460,173460,7],[173461,173461,7.82],[173462,173462,8.04],[173463,173463,7.68],[173464,173464,7.16],[173465,173465,7.06],[173466,173466,7.79],[173467,173467,7.9],[173468,173468,8.82],[173469,173469,7.5],[173470,173470,7.8],[173471,173473,7.26],[173474,173474,8.53],[173475,173475,9.72],[173476,173476,5.31],[173477,173477,5.95],[173478,173478,8.1],[173479,173479,9.72],[173480,173483,6.71],[173484,173487,7.09],[173488,173491,7.71],[173492,173492,6.17],[173493,173494,5.44],[173495,173495,6.72],[173496,173496,7.6],[173497,173497,6.12],[173498,173498,7.95],[173499,173500,8.38],[173501,173501,8.47],[173502,173502,8.37],[173503,173503,7.72],[173504,173504,8.47],[173505,173506,9.72],[173507,173508,7.02],[173509,173510,8.25],[173511,173512,8.16],[173513,173514,5.88],[173515,173515,6.75],[173516,173516,8.21],[173517,173517,6.75],[173518,173518,8.39],[173519,173520,5.37],[173521,173522,7.38],[173523,173523,7.27],[173524,173524,8.12],[173525,173525,7.27],[173526,173526,8.12],[173527,173527,5.45],[173528,173529,6.84],[173530,173530,5.59],[173531,173531,7.36],[173532,173532,10.49],[173533,173533,7.86],[173534,173534,6.13],[173535,173535,5.66],[173536,173536,9.56],[173537,173537,7.07],[173538,173538,12.56],[173539,173539,7.53],[173540,173540,7.61],[173541,173541,9.68],[173542,173542,7.38],[173543,173543,7.58],[173544,173544,5.73],[173545,173545,6.65],[173546,173546,6.37],[173547,173547,7.37],[173548,173550,8.87],[173551,173552,8.73],[173553,173554,7.36],[173555,173555,8.2],[173556,173556,9],[173557,173558,8.1],[173559,173562,6.1],[173563,173566,9.05],[173567,173567,6.96],[173568,173568,8.26],[173569,173569,8.16],[173570,173570,7.96],[173571,173575,7.06],[173576,173576,9],[173577,173577,5.68],[173578,173578,7.57],[173579,173579,8.23],[173580,173580,6.35],[173581,173581,4.71],[173582,173582,5.69],[173583,173583,7.42],[173584,173584,13.46],[173585,173585,7.72],[173586,173586,9.81],[173587,173587,4.91],[173588,173588,8.61],[173589,173589,9.28],[173590,173590,6.9],[173591,173591,7.09],[173592,173592,7.27],[173593,173593,7.42],[173594,173594,10.78],[173595,173595,9.14],[173596,173596,7.22],[173597,173597,8.26],[173598,173598,9.19],[173599,173599,6.22],[173600,173600,5.95],[173601,173601,3],[173602,173602,6.62],[173603,173603,6.66],[173604,173604,6.54],[173605,173605,6.49],[173606,173606,5.46],[173607,173607,6.55],[173608,173608,5.88],[173609,173609,6.22],[173610,173610,8.97],[173611,173611,5.43],[173612,173631,10],[173632,173632,7.48],[173633,173633,5.56],[173634,173634,7.48],[173635,173635,5.56],[173636,173636,7.43],[173637,173637,4.54],[173638,173638,3.11],[173639,173639,2.6],[173640,173640,7.1],[173641,173641,5.72],[173642,173643,5.78],[173644,173644,9.03],[173645,173645,7.09],[173646,173646,7.06],[173647,173647,5.94],[173648,173648,9.43],[173649,173649,8.18],[173650,173650,8.09],[173651,173651,6.98],[173652,173652,10.22],[173653,173653,8.06],[173654,173654,9.36],[173655,173655,7.45],[173656,173656,7.27],[173657,173657,5.62],[173658,173658,7.1],[173659,173659,6.02],[173660,173660,9.26],[173661,173661,7.92],[173662,173662,7.25],[173663,173663,6.38],[173664,173664,7.21],[173665,173665,5.92],[173666,173666,7.69],[173667,173667,6.91],[173668,173668,7.16],[173669,173669,6.45],[173670,173670,10.44],[173671,173671,9.36],[173672,173672,7.2],[173673,173673,5.73],[173674,173674,7.2],[173675,173675,5.73],[173676,173676,9.5],[173677,173677,7.07],[173678,173678,6.82],[173679,173682,0],[173683,173683,5.04],[173684,173693,0],[173694,173695,5],[173696,173696,7.69],[173697,173697,6.63],[173698,173698,4.34],[173699,173699,3.46],[173700,173700,12.6],[173701,173701,11.08],[173702,173702,9.14],[173703,173704,7.69],[173705,173705,6.63],[173706,173706,7.89],[173707,173707,6.76],[173708,173708,5.67],[173709,173709,5.37],[173710,173710,7.27],[173711,173711,6.3],[173712,173712,6.12],[173713,173713,5.37],[173714,173714,8.43],[173715,173715,7.28],[173716,173716,6.95],[173717,173717,5.83],[173718,173718,9.07],[173719,173719,7.91],[173720,173720,7.86],[173721,173721,6.68],[173722,173722,5.26],[173723,173723,4.5],[173724,173724,1.96],[173725,173725,1.69],[173726,173727,0],[173728,173728,6.6],[173729,173729,7.68],[173730,173730,5.46],[173731,173731,6.56],[173732,173732,7.07],[173733,173733,6.17],[173734,173734,5.78],[173735,173735,6.06],[173736,173736,5.5],[173737,173737,7.25],[173738,173738,6.59],[173739,173739,6],[173740,173740,6.61],[173741,173741,5.72],[173742,173742,5.49],[173743,173743,6],[173744,173744,6.37],[173745,173745,5.5],[173746,173746,5.66],[173747,173747,5.24],[173748,173748,6.91],[173749,173749,5.88],[173750,173750,7.41],[173751,173751,7.16],[173752,173752,7.82],[173753,173753,4.8],[173754,173754,6.21],[173755,173755,6.18],[173756,173756,6.39],[173757,173757,6],[173758,173758,7.41],[173759,173761,6.19],[173762,173762,5.33],[173763,173763,7.7],[173764,173764,6.97],[173765,173765,6.02],[173766,173766,5.69],[173767,173767,6.21],[173768,173768,6.7],[173769,173769,5.72],[173770,173770,7.48],[173771,173771,5.63],[173772,173772,4.83],[173773,173773,5.46],[173774,173774,6],[173775,173775,7.1],[173776,173776,4.65],[173777,173777,6.21],[173778,173778,5.2],[173779,173779,6.79],[173780,173780,7.13],[173781,173781,5.2],[173782,173782,5.79],[173783,173783,7.19],[173784,173784,7.18],[173785,173785,6],[173786,173786,5.24],[173787,173787,6.51],[173788,173788,6.19],[173789,173789,6.68],[173790,173790,5.79],[194560,194814,10],[194815,194815,7.9],[194816,195102,10],[917504,917504,0],[917505,917511,3.33],[917512,917512,0],[917513,917517,3.42],[917518,917532,3.33],[917533,917533,0],[917534,917535,3.33],[917536,917536,3.42],[917537,917537,4.02],[917538,917538,5.87],[917539,917539,8.67],[917540,917540,7.11],[917541,917541,12.72],[917542,917542,8.62],[917543,917543,3.32],[917544,917545,5.43],[917546,917546,7.11],[917547,917547,8.67],[917548,917548,3.61],[917549,917549,4.8],[917550,917550,3.61],[917551,917551,6.89],[917552,917561,7.11],[917562,917563,4.02],[917564,917566,8.67],[917567,917567,6.17],[917568,917568,9.64],[917569,917569,7.76],[917570,917570,7.62],[917571,917571,7.24],[917572,917572,8.3],[917573,917573,6.83],[917574,917574,6.5],[917575,917575,8.11],[917576,917576,8.37],[917577,917577,5.46],[917578,917578,5.55],[917579,917579,7.71],[917580,917580,6.37],[917581,917581,9.48],[917582,917582,8.47],[917583,917583,8.5],[917584,917584,7.33],[917585,917585,8.5],[917586,917586,7.82],[917587,917587,7.1],[917588,917588,6.82],[917589,917589,8.12],[917590,917590,7.64],[917591,917591,11.28],[917592,917592,7.64],[917593,917593,7.37],[917594,917594,6.92],[917595,917595,5.43],[917596,917596,6.89],[917597,917597,5.43],[917598,917598,8.67],[917599,917600,7.11],[917601,917601,6.68],[917602,917602,6.99],[917603,917603,5.88],[917604,917604,6.99],[917605,917605,6.64],[917606,917606,4.22],[917607,917607,6.99],[917608,917608,7.12],[917609,917609,3.42],[917610,917610,4.03],[917611,917611,6.71],[917612,917612,3.42],[917613,917613,10.58],[917614,917614,7.12],[917615,917615,6.87],[917616,917617,6.99],[917618,917618,4.97],[917619,917619,5.93],[917620,917620,4.56],[917621,917621,7.12],[917622,917622,6.5],[917623,917623,9.79],[917624,917624,6.69],[917625,917625,6.51],[917626,917626,5.97],[917627,917627,7.11],[917628,917628,5.43],[917629,917629,7.11],[917630,917630,8.67]]');

/***/ }),

/***/ 1604:
/***/ ((module) => {

module.exports = JSON.parse('[[32,32,3.52],[33,33,3.94],[34,34,4.59],[35,35,8.18],[36,36,6.36],[37,37,10.76],[38,38,7.27],[39,39,2.69],[40,41,4.54],[42,42,6.36],[43,43,8.18],[44,44,3.64],[45,45,4.54],[46,46,3.64],[47,47,4.54],[48,57,6.36],[58,59,4.54],[60,62,8.18],[63,63,5.45],[64,64,10],[65,65,6.84],[66,66,6.86],[67,67,6.98],[68,68,7.71],[69,69,6.32],[70,70,5.75],[71,71,7.75],[72,72,7.51],[73,73,4.21],[74,74,4.55],[75,75,6.93],[76,76,5.57],[77,77,8.43],[78,78,7.48],[79,79,7.87],[80,80,6.03],[81,81,7.87],[82,82,6.95],[83,83,6.84],[84,84,6.16],[85,85,7.32],[86,86,6.84],[87,87,9.89],[88,88,6.85],[89,89,6.15],[90,90,6.85],[91,93,4.54],[94,94,8.18],[95,96,6.36],[97,97,6.01],[98,98,6.23],[99,99,5.21],[100,100,6.23],[101,101,5.96],[102,102,3.52],[103,103,6.23],[104,104,6.33],[105,105,2.74],[106,106,3.44],[107,107,5.92],[108,108,2.74],[109,109,9.73],[110,110,6.33],[111,111,6.07],[112,113,6.23],[114,114,4.27],[115,115,5.21],[116,116,3.94],[117,117,6.33],[118,118,5.92],[119,119,8.18],[120,121,5.92],[122,122,5.25],[123,123,6.35],[124,124,4.54],[125,125,6.35],[126,126,8.18],[160,160,3.52],[161,161,3.94],[162,165,6.36],[166,166,4.54],[167,168,6.36],[169,169,10],[170,170,5.45],[171,171,6.45],[172,172,8.18],[173,173,0],[174,174,10],[175,175,6.36],[176,176,5.42],[177,177,8.18],[178,179,5.42],[180,180,6.36],[181,181,6.42],[182,182,6.36],[183,183,3.64],[184,184,6.36],[185,185,5.42],[186,186,5.45],[187,187,6.45],[188,190,10],[191,191,5.45],[192,197,6.84],[198,198,9.84],[199,199,6.98],[200,203,6.32],[204,207,4.21],[208,208,7.75],[209,209,7.48],[210,214,7.87],[215,215,8.18],[216,216,7.87],[217,220,7.32],[221,221,6.15],[222,222,6.05],[223,223,6.2],[224,229,6.01],[230,230,9.55],[231,231,5.21],[232,235,5.96],[236,239,2.74],[240,240,6.12],[241,241,6.33],[242,246,6.07],[247,247,8.18],[248,248,6.07],[249,252,6.33],[253,253,5.92],[254,254,6.23],[256,256,6.84],[257,257,6.01],[258,258,6.84],[259,259,6.01],[260,260,6.84],[261,261,6.01],[262,262,6.98],[263,263,5.21],[264,264,6.98],[265,265,5.21],[266,266,6.98],[267,267,5.21],[268,268,6.98],[269,269,5.21],[270,270,7.71],[271,271,6.47],[272,272,7.75],[273,273,6.23],[274,274,6.32],[275,275,5.96],[276,276,6.32],[277,277,5.96],[278,278,6.32],[279,279,5.96],[280,280,6.32],[281,281,5.96],[282,282,6.32],[283,283,5.96],[284,284,7.75],[285,285,6.23],[286,286,7.75],[287,287,6.23],[288,288,7.75],[289,289,6.23],[290,290,7.75],[291,291,6.23],[292,292,7.51],[293,293,6.33],[294,294,7.51],[295,295,6.33],[296,296,4.21],[297,297,2.74],[298,298,4.21],[299,299,2.74],[300,300,4.21],[301,301,2.74],[302,302,4.21],[303,303,2.74],[304,304,4.21],[305,305,2.74],[306,306,8.71],[307,307,6.14],[308,308,4.55],[309,309,3.44],[310,310,6.93],[311,312,5.92],[313,313,5.57],[314,314,2.74],[315,315,5.57],[316,316,2.74],[317,317,5.57],[318,318,2.96],[319,319,5.57],[320,320,4.58],[321,321,5.62],[322,322,2.84],[323,323,7.48],[324,324,6.33],[325,325,7.48],[326,326,6.33],[327,327,7.48],[328,328,6.33],[329,329,7.3],[330,330,7.48],[331,331,6.33],[332,332,7.87],[333,333,6.07],[334,334,7.87],[335,335,6.07],[336,336,7.87],[337,337,6.07],[338,338,10.7],[339,339,9.81],[340,340,6.95],[341,341,4.27],[342,342,6.95],[343,343,4.27],[344,344,6.95],[345,345,4.27],[346,346,6.84],[347,347,5.21],[348,348,6.84],[349,349,5.21],[350,350,6.84],[351,351,5.21],[352,352,6.84],[353,353,5.21],[354,354,6.16],[355,355,3.94],[356,356,6.16],[357,357,3.94],[358,358,6.16],[359,359,3.94],[360,360,7.32],[361,361,6.33],[362,362,7.32],[363,363,6.33],[364,364,7.32],[365,365,6.3],[366,366,7.32],[367,367,6.33],[368,368,7.32],[369,369,6.33],[370,370,7.32],[371,371,6.3],[372,372,9.89],[373,373,8.18],[374,374,6.15],[375,375,5.92],[376,376,6.15],[377,377,6.85],[378,378,5.25],[379,379,6.85],[380,380,5.25],[381,381,6.85],[382,382,5.25],[384,384,5],[385,385,7.6],[386,386,5.74],[387,387,5],[388,388,5.74],[389,389,5],[390,391,6.67],[392,392,4.44],[393,393,7.22],[394,394,8.15],[395,395,5.74],[396,396,5],[397,397,4.71],[398,398,6.11],[399,399,7.55],[400,400,5.01],[401,401,5.56],[402,402,6.36],[403,404,7.22],[405,405,7.7],[406,406,2.53],[407,407,3.33],[408,408,7.22],[409,409,5],[410,410,2.78],[411,411,4.85],[412,412,8.16],[413,413,7.22],[414,414,5],[415,415,7.22],[416,416,8.07],[417,417,6.07],[418,418,9.25],[419,419,6.91],[420,420,6.5],[421,421,5],[422,423,5.56],[424,424,3.89],[425,425,5.82],[426,426,3.44],[427,427,2.78],[428,428,6.11],[429,429,2.78],[430,430,6.11],[431,431,7.56],[432,432,6.6],[433,433,7.43],[434,434,7.22],[435,435,7.81],[436,436,5],[437,437,6.11],[438,438,4.44],[439,440,5.39],[441,442,4.44],[443,444,5],[445,445,4.43],[446,446,4.22],[447,447,5],[448,448,2],[449,449,2.81],[450,450,2.49],[451,451,3.33],[452,452,13.33],[453,453,11.66],[454,454,9.44],[455,455,10],[456,456,8.89],[457,457,5.56],[458,458,11.11],[459,459,10],[460,460,7.78],[461,461,7.22],[462,462,4.44],[463,463,3.33],[464,464,2.78],[465,465,7.22],[466,466,5],[467,467,7.22],[468,468,5],[469,469,7.22],[470,470,5],[471,471,7.32],[472,472,6.33],[473,473,7.22],[474,474,5],[475,475,7.32],[476,476,6.33],[477,477,4.44],[478,478,7.22],[479,479,4.44],[480,480,7.22],[481,481,4.44],[482,482,8.89],[483,483,6.67],[484,484,7.22],[485,485,5],[486,486,7.22],[487,487,5],[488,488,7.22],[489,489,5],[490,490,7.22],[491,491,5],[492,492,7.22],[493,493,5],[494,494,5.39],[495,495,4.44],[496,496,2.78],[497,497,13.33],[498,498,11.66],[499,499,9.44],[500,500,7.75],[501,501,6.23],[502,502,9.5],[503,503,5.6],[504,504,7.48],[505,505,6.33],[506,506,6.84],[507,507,6.01],[508,508,9.84],[509,509,9.55],[510,510,7.87],[511,511,6.07],[512,512,7.22],[513,513,4.44],[514,514,7.22],[515,515,4.44],[516,516,6.11],[517,517,4.44],[518,518,6.11],[519,519,4.44],[520,520,3.33],[521,521,2.78],[522,522,3.33],[523,523,2.78],[524,524,7.22],[525,525,5],[526,526,7.22],[527,527,5],[528,528,6.67],[529,529,3.33],[530,530,6.67],[531,531,3.33],[532,532,7.22],[533,533,5],[534,534,7.22],[535,535,5],[536,536,6.84],[537,537,5.21],[538,538,6.16],[539,539,3.94],[540,540,5.63],[541,541,3.95],[542,542,7.22],[543,543,5],[544,544,6.5],[545,545,5],[546,546,6.04],[547,547,5],[548,548,6.11],[549,549,4.44],[550,550,7.22],[551,551,4.44],[552,552,6.11],[553,553,4.44],[554,554,7.22],[555,555,5],[556,556,7.22],[557,557,5],[558,558,7.22],[559,559,5],[560,560,7.22],[561,561,5],[562,562,7.22],[563,563,5],[564,564,2.78],[565,565,5],[566,566,3.17],[567,567,2.78],[568,568,7.74],[569,569,7.72],[570,570,7.22],[571,571,6.67],[572,572,5],[573,574,6.11],[575,575,3.89],[576,576,4.44],[577,577,5.34],[578,578,3.97],[579,579,6.67],[580,580,7.22],[581,581,7.25],[582,582,6.11],[583,583,4.44],[584,584,3.89],[585,585,2.78],[586,586,7.02],[587,587,5],[588,588,6.67],[589,589,3.33],[590,590,7.22],[880,880,4.19],[881,881,3.32],[882,882,5.87],[883,883,4.67],[884,885,3.33],[886,886,7.21],[887,887,5.8],[888,889,10],[890,890,3.33],[891,893,4.44],[894,894,4.54],[895,895,3.33],[896,899,10],[900,901,6.36],[902,902,6.84],[903,903,4.54],[904,904,7.51],[905,905,8.7],[906,906,5.4],[907,907,10],[908,908,8.81],[909,909,10],[910,910,7.53],[911,911,9.08],[912,912,2.74],[913,913,6.84],[914,914,6.86],[915,915,5.66],[916,916,7.03],[917,917,6.32],[918,918,6.85],[919,919,7.51],[920,920,7.87],[921,921,4.21],[922,922,6.93],[923,923,6.86],[924,924,8.43],[925,925,7.48],[926,926,6.49],[927,927,7.87],[928,928,7.51],[929,929,6.03],[930,930,10],[931,931,6.72],[932,932,6.16],[933,933,6.15],[934,934,8.19],[935,935,6.85],[936,936,8.71],[937,937,8.18],[938,938,4.21],[939,939,6.15],[940,940,6.23],[941,941,5.13],[942,942,6.33],[943,943,2.74],[944,944,6.31],[945,945,6.23],[946,946,6.2],[947,947,5.92],[948,948,6.08],[949,949,5.13],[950,950,4.58],[951,951,6.33],[952,952,6.24],[953,953,2.74],[954,955,5.92],[956,956,6.4],[957,957,5.92],[958,958,5.03],[959,959,6.07],[960,960,6.37],[961,961,6.25],[962,962,5.08],[963,963,6.3],[964,964,4.96],[965,965,6.31],[966,966,7.9],[967,967,5.9],[968,968,8.22],[969,969,8.13],[970,970,2.74],[971,971,6.31],[972,972,6.07],[973,973,6.31],[974,974,8.13],[975,975,5.66],[976,976,5.09],[977,977,4.95],[978,978,7.22],[979,979,8.9],[980,980,7.22],[981,981,5.26],[982,982,6.58],[983,983,5.6],[984,984,7.22],[985,985,5],[986,986,6.67],[987,987,4.2],[988,988,5.56],[989,989,4.47],[990,990,5.76],[991,991,4.51],[992,992,7.31],[993,993,5.54],[994,994,8.28],[995,995,7.78],[996,996,6.16],[997,997,5.21],[998,998,6.61],[999,999,4.44],[1000,1001,5.42],[1002,1002,6.56],[1003,1003,5.81],[1004,1004,6.99],[1005,1005,5.09],[1006,1006,4.75],[1007,1007,3.86],[1008,1008,5.6],[1009,1009,5.09],[1010,1010,4.44],[1011,1011,2.78],[1012,1012,7.22],[1013,1014,4.05],[1015,1015,5.56],[1016,1016,5],[1017,1017,6.67],[1018,1018,8.89],[1019,1019,6.33],[1020,1020,4.99],[1021,1022,6.67],[1024,1025,6.32],[1026,1026,7.92],[1027,1027,5.66],[1028,1028,7.01],[1029,1029,6.84],[1030,1031,4.21],[1032,1032,4.55],[1033,1033,11.18],[1034,1034,11.03],[1035,1035,8.18],[1036,1036,6.93],[1037,1037,7.5],[1038,1038,6.15],[1039,1039,7.51],[1040,1040,6.84],[1041,1042,6.86],[1043,1043,5.66],[1044,1044,7.46],[1045,1045,6.32],[1046,1046,9.73],[1047,1047,6.16],[1048,1049,7.5],[1050,1050,6.93],[1051,1051,7.34],[1052,1052,8.43],[1053,1053,7.51],[1054,1054,7.87],[1055,1055,7.51],[1056,1056,6.03],[1057,1057,6.98],[1058,1058,6.16],[1059,1059,6.15],[1060,1060,8.19],[1061,1061,6.85],[1062,1062,7.61],[1063,1063,7.12],[1064,1064,10.3],[1065,1065,10.45],[1066,1066,7.83],[1067,1067,9.2],[1068,1068,6.81],[1069,1069,7.01],[1070,1070,10.34],[1071,1071,7.06],[1072,1072,6.01],[1073,1073,6.14],[1074,1074,5.95],[1075,1075,4.71],[1076,1076,6.22],[1077,1077,5.96],[1078,1078,7.98],[1079,1079,5.24],[1080,1081,6.4],[1082,1082,5.92],[1083,1083,6.21],[1084,1084,6.96],[1085,1085,6.37],[1086,1086,6.07],[1087,1087,6.37],[1088,1088,6.23],[1089,1089,5.34],[1090,1090,4.96],[1091,1091,5.92],[1092,1092,8.41],[1093,1093,5.92],[1094,1094,6.45],[1095,1095,6.05],[1096,1096,8.76],[1097,1097,8.88],[1098,1098,6.41],[1099,1099,7.94],[1100,1100,5.71],[1101,1101,5.47],[1102,1102,8.39],[1103,1103,6],[1104,1105,5.96],[1106,1106,6.33],[1107,1107,4.71],[1108,1108,5.47],[1109,1109,5.21],[1110,1111,2.74],[1112,1112,3.44],[1113,1114,9.14],[1115,1115,6.33],[1116,1116,5.92],[1117,1117,6.4],[1118,1118,5.92],[1119,1119,6.37],[1120,1120,11.72],[1121,1121,6.33],[1122,1122,6.71],[1123,1123,5.43],[1124,1124,9.68],[1125,1125,6.77],[1126,1126,7.22],[1127,1127,5.9],[1128,1128,10.33],[1129,1129,8.34],[1130,1130,8.96],[1131,1131,6.91],[1132,1132,12.08],[1133,1133,9.35],[1134,1134,5.01],[1135,1135,3.95],[1136,1136,7.38],[1137,1137,6.26],[1138,1138,7.22],[1139,1139,5],[1140,1140,8.13],[1141,1141,5.89],[1142,1142,8.13],[1143,1143,5.89],[1144,1144,11.88],[1145,1145,10.4],[1146,1146,7.63],[1147,1147,5.66],[1148,1148,9.83],[1149,1149,8.13],[1150,1150,11.72],[1151,1151,6.33],[1152,1152,6.67],[1153,1153,4.44],[1154,1154,3.34],[1155,1158,0],[1159,1159,6.36],[1160,1161,0],[1162,1162,7.22],[1163,1163,5.35],[1164,1164,5.74],[1165,1165,4.7],[1166,1166,5.56],[1167,1167,5],[1168,1168,5.66],[1169,1169,4.71],[1170,1170,5.66],[1171,1171,4.71],[1172,1172,6.31],[1173,1173,5.15],[1174,1174,9.73],[1175,1175,7.98],[1176,1176,5.01],[1177,1177,3.95],[1178,1178,6.93],[1179,1179,5.92],[1180,1180,6.93],[1181,1181,5.92],[1182,1182,6.67],[1183,1183,4.86],[1184,1184,7.86],[1185,1185,5.73],[1186,1186,7.51],[1187,1187,6.37],[1188,1188,8.51],[1189,1189,6.23],[1190,1190,10.32],[1191,1191,7.89],[1192,1192,7.87],[1193,1193,6.17],[1194,1194,6.67],[1195,1195,4.44],[1196,1196,6.11],[1197,1197,4.37],[1198,1198,6.15],[1199,1199,5.92],[1200,1200,6.15],[1201,1201,5.92],[1202,1202,6.85],[1203,1203,5.92],[1204,1204,7.97],[1205,1205,6.03],[1206,1206,6.5],[1207,1207,5.03],[1208,1208,7.12],[1209,1209,6.05],[1210,1210,7.12],[1211,1211,6.33],[1212,1212,8.78],[1213,1213,6.89],[1214,1214,8.78],[1215,1215,6.89],[1216,1216,3.33],[1217,1217,8.96],[1218,1218,6.91],[1219,1219,6.67],[1220,1220,5.15],[1221,1221,6.78],[1222,1222,4.99],[1223,1223,7.22],[1224,1224,5.35],[1225,1225,7.22],[1226,1226,5.35],[1227,1227,6.5],[1228,1228,5.03],[1229,1229,8.89],[1230,1230,6.33],[1231,1231,2.78],[1232,1232,7.22],[1233,1233,4.44],[1234,1234,7.22],[1235,1235,4.44],[1236,1236,8.89],[1237,1237,6.67],[1238,1238,6.11],[1239,1239,4.44],[1240,1240,7.55],[1241,1241,5.96],[1242,1242,7.22],[1243,1243,4.44],[1244,1244,8.96],[1245,1245,6.91],[1246,1246,5.01],[1247,1247,3.95],[1248,1248,5.01],[1249,1249,4.44],[1250,1250,7.22],[1251,1251,5.35],[1252,1252,7.22],[1253,1253,5.35],[1254,1254,7.22],[1255,1255,5],[1256,1256,7.87],[1257,1257,6.07],[1258,1258,7.22],[1259,1259,5],[1260,1260,6.6],[1261,1261,4.29],[1262,1262,7.08],[1263,1263,5],[1264,1264,7.08],[1265,1265,5],[1266,1266,7.08],[1267,1267,5],[1268,1268,6.5],[1269,1269,5.03],[1270,1270,5.78],[1271,1271,4.1],[1272,1272,8.72],[1273,1273,6.72],[1274,1274,5.78],[1275,1275,4.1],[1276,1276,7.22],[1277,1277,5],[1278,1278,7.22],[1280,1280,5.74],[1281,1281,5],[1282,1282,8.04],[1283,1283,7.71],[1284,1284,8.02],[1285,1285,7.06],[1286,1286,5.74],[1287,1287,4.53],[1288,1288,9.07],[1289,1289,7.52],[1290,1290,9.5],[1291,1291,7.88],[1292,1292,7.22],[1293,1293,4.53],[1294,1294,6.96],[1295,1295,6.02],[1296,1296,5.01],[1297,1297,3.95],[1298,1298,6.78],[1299,1299,4.99],[1300,1300,7.62],[1301,1301,6.93],[1302,1302,8.3],[1303,1303,6.81],[1304,1304,10.31],[1305,1305,7.37],[1306,1306,7.87],[1307,1307,6.23],[1308,1308,9.89],[1309,1309,8.18],[1310,1310,6.85],[1311,1311,6.31],[1312,1312,9.81],[1313,1313,7.96],[1314,1314,11.11],[1315,1315,9.08],[1316,1316,7.08],[1317,1317,6.18],[1318,1318,6.89],[1319,1319,6.31],[1320,1320,4.44],[1321,1321,4.03],[1322,1322,8.91],[1323,1323,8.13],[1324,1324,5.62],[1325,1325,5.24],[1326,1326,6.83],[7424,7424,5.02],[7425,7425,6.45],[7426,7426,6.67],[7427,7427,4.65],[7428,7428,4.78],[7429,7430,5.24],[7431,7431,4.44],[7432,7432,3.95],[7433,7433,2.78],[7434,7434,2.96],[7435,7435,5.4],[7436,7436,4.45],[7437,7437,6.33],[7438,7438,5.35],[7439,7439,5],[7440,7440,4.78],[7441,7441,5.42],[7442,7442,5.38],[7443,7443,5.42],[7444,7444,7.22],[7445,7445,4.37],[7446,7447,5],[7448,7448,4.56],[7449,7450,4.6],[7451,7451,4.37],[7452,7452,5.37],[7453,7453,5.05],[7454,7454,6.55],[7455,7455,5.04],[7456,7456,5],[7457,7457,7.22],[7458,7458,4.44],[7459,7459,3.95],[7460,7460,3.97],[7461,7461,5.39],[7462,7462,4.1],[7463,7463,5],[7464,7464,5.35],[7465,7465,4.56],[7466,7466,5.28],[7467,7467,4.99],[7468,7468,4.22],[7469,7469,5.38],[7470,7471,3.87],[7472,7472,4.3],[7473,7474,3.7],[7475,7475,4.33],[7476,7476,4.4],[7477,7477,2],[7478,7478,2.47],[7479,7479,4.58],[7480,7480,3.71],[7481,7481,5.4],[7482,7482,4.62],[7483,7483,4.41],[7484,7484,4.18],[7485,7485,3.36],[7486,7486,3.32],[7487,7487,4.1],[7488,7488,3.62],[7489,7489,4.53],[7490,7490,5.54],[7491,7492,2.73],[7493,7493,3.14],[7494,7494,3.9],[7495,7495,3.1],[7496,7496,3.11],[7497,7498,2.56],[7499,7500,2.42],[7501,7501,3.01],[7502,7502,1.64],[7503,7503,3.15],[7504,7504,4.89],[7505,7505,2.82],[7506,7506,2.88],[7507,7507,2.56],[7508,7509,2.88],[7510,7510,3.11],[7511,7511,1.91],[7512,7512,3.28],[7513,7513,3.06],[7514,7514,4.89],[7515,7515,2.94],[7516,7516,3.19],[7517,7517,2.82],[7518,7518,2.65],[7519,7519,2.71],[7520,7520,3.34],[7521,7521,2.82],[7522,7522,1.64],[7523,7523,2.29],[7524,7524,3.28],[7525,7525,2.94],[7526,7526,2.82],[7527,7527,2.65],[7528,7528,2.96],[7529,7529,3.34],[7530,7530,2.82],[7531,7531,7.61],[7532,7533,5],[7534,7534,3.33],[7535,7535,7.78],[7536,7537,5],[7538,7539,3.33],[7540,7540,3.89],[7541,7541,2.78],[7542,7542,4.44],[7543,7543,5],[7544,7544,3.23],[7545,7545,4.71],[7546,7546,7.66],[7547,7547,2.78],[7548,7548,2.69],[7549,7549,5],[7550,7550,5.37],[7680,7680,7.22],[7681,7681,4.44],[7682,7682,6.67],[7683,7683,5],[7684,7684,6.86],[7685,7685,6.23],[7686,7686,6.67],[7687,7687,5],[7688,7688,6.98],[7689,7689,5.21],[7690,7690,7.22],[7691,7691,5],[7692,7692,7.71],[7693,7693,6.23],[7694,7694,7.22],[7695,7695,5],[7696,7696,7.22],[7697,7697,5],[7698,7698,7.22],[7699,7699,5],[7700,7700,6.32],[7701,7701,5.96],[7702,7702,6.32],[7703,7703,5.96],[7704,7704,6.11],[7705,7705,4.44],[7706,7706,6.11],[7707,7707,4.44],[7708,7708,6.11],[7709,7709,4.44],[7710,7710,5.56],[7711,7711,3.33],[7712,7712,7.22],[7713,7713,5],[7714,7714,7.22],[7715,7715,5],[7716,7716,7.51],[7717,7717,6.33],[7718,7718,7.22],[7719,7719,5],[7720,7720,7.22],[7721,7721,5],[7722,7722,7.22],[7723,7723,5],[7724,7724,3.33],[7725,7725,2.78],[7726,7726,4.21],[7727,7727,2.74],[7728,7728,6.93],[7729,7729,5.92],[7730,7730,6.93],[7731,7731,5.92],[7732,7732,7.22],[7733,7733,5],[7734,7734,5.57],[7735,7735,2.74],[7736,7736,6.11],[7737,7737,2.78],[7738,7738,6.11],[7739,7739,2.78],[7740,7740,6.11],[7741,7741,2.78],[7742,7742,8.43],[7743,7743,9.73],[7744,7744,8.89],[7745,7745,7.78],[7746,7746,8.43],[7747,7747,9.73],[7748,7748,7.22],[7749,7749,5],[7750,7750,7.48],[7751,7751,6.33],[7752,7752,7.22],[7753,7753,5],[7754,7754,7.22],[7755,7755,5],[7756,7756,7.87],[7757,7757,6.07],[7758,7758,7.22],[7759,7759,5],[7760,7760,7.87],[7761,7761,6.07],[7762,7762,7.87],[7763,7763,6.07],[7764,7764,6.03],[7765,7765,6.23],[7766,7766,5.56],[7767,7767,5],[7768,7768,6.67],[7769,7769,3.33],[7770,7770,6.95],[7771,7771,4.27],[7772,7772,6.67],[7773,7773,3.33],[7774,7774,6.67],[7775,7775,3.33],[7776,7776,5.56],[7777,7777,3.89],[7778,7778,6.84],[7779,7779,5.21],[7780,7780,5.56],[7781,7781,3.89],[7782,7782,5.56],[7783,7783,3.89],[7784,7784,5.56],[7785,7785,3.89],[7786,7786,6.11],[7787,7787,2.78],[7788,7788,6.16],[7789,7789,3.94],[7790,7790,6.11],[7791,7791,2.78],[7792,7792,6.11],[7793,7793,2.78],[7794,7794,7.22],[7795,7795,5],[7796,7796,7.22],[7797,7797,5],[7798,7798,7.22],[7799,7799,5],[7800,7800,7.32],[7801,7801,6.33],[7802,7802,7.22],[7803,7803,5],[7804,7804,6.84],[7805,7805,5.92],[7806,7806,6.84],[7807,7807,5.92],[7808,7808,9.89],[7809,7809,8.18],[7810,7810,9.89],[7811,7811,8.18],[7812,7812,9.89],[7813,7813,8.18],[7814,7814,9.44],[7815,7815,7.22],[7816,7816,9.89],[7817,7817,8.18],[7818,7818,7.22],[7819,7819,5],[7820,7820,7.22],[7821,7821,5],[7822,7822,7.22],[7823,7823,5],[7824,7824,6.11],[7825,7825,4.44],[7826,7826,6.85],[7827,7827,5.25],[7828,7828,6.11],[7829,7829,4.44],[7830,7830,5],[7831,7831,2.78],[7832,7832,7.22],[7833,7833,5],[7834,7834,4.44],[7835,7835,2.78],[7836,7836,4.23],[7837,7837,4.22],[7838,7838,6.78],[7839,7839,6.02],[7840,7840,6.84],[7841,7841,6.01],[7842,7842,6.84],[7843,7843,6.01],[7844,7844,6.84],[7845,7845,6.01],[7846,7846,6.84],[7847,7847,6.01],[7848,7848,6.84],[7849,7849,6.01],[7850,7850,6.84],[7851,7851,6.01],[7852,7852,6.84],[7853,7853,6.01],[7854,7854,6.84],[7855,7855,6.01],[7856,7856,6.84],[7857,7857,6.01],[7858,7858,6.84],[7859,7859,6.01],[7860,7860,6.84],[7861,7861,6.01],[7862,7862,6.84],[7863,7863,6.01],[7864,7864,6.32],[7865,7865,5.96],[7866,7866,6.32],[7867,7867,5.96],[7868,7868,6.32],[7869,7869,5.96],[7870,7870,6.32],[7871,7871,5.96],[7872,7872,6.32],[7873,7873,5.96],[7874,7874,6.32],[7875,7875,5.96],[7876,7876,6.32],[7877,7877,5.96],[7878,7878,6.32],[7879,7879,5.96],[7880,7880,4.21],[7881,7881,2.74],[7882,7882,4.21],[7883,7883,2.74],[7884,7884,7.87],[7885,7885,6.07],[7886,7886,7.87],[7887,7887,6.07],[7888,7888,7.87],[7889,7889,6.07],[7890,7890,7.87],[7891,7891,6.07],[7892,7892,7.87],[7893,7893,6.07],[7894,7894,7.87],[7895,7895,6.07],[7896,7896,7.87],[7897,7897,6.07],[7898,7898,8.07],[7899,7899,6.07],[7900,7900,8.07],[7901,7901,6.07],[7902,7902,8.07],[7903,7903,6.07],[7904,7904,8.07],[7905,7905,6.07],[7906,7906,8.07],[7907,7907,6.07],[7908,7908,7.32],[7909,7909,6.33],[7910,7910,7.32],[7911,7911,6.33],[7912,7912,7.56],[7913,7913,6.6],[7914,7914,7.56],[7915,7915,6.6],[7916,7916,7.56],[7917,7917,6.6],[7918,7918,7.56],[7919,7919,6.6],[7920,7920,7.56],[7921,7921,6.6],[7922,7922,6.15],[7923,7923,5.92],[7924,7924,6.15],[7925,7925,5.92],[7926,7926,6.15],[7927,7927,5.92],[7928,7928,6.15],[7929,7929,5.92],[7930,7930,9.36],[7931,7931,5.89],[7932,7932,5.06],[7933,7933,4.45],[7934,7934,4.58],[7936,7943,5.24],[7944,7945,7.22],[7946,7951,7.91],[7952,7957,4.2],[7958,7959,10],[7960,7961,7.48],[7962,7965,9.04],[7966,7967,10],[7968,7975,5.23],[7976,7977,8.59],[7978,7983,10.16],[7984,7991,2.69],[7992,7993,4.7],[7994,7999,6.26],[8000,8005,5],[8006,8007,10],[8008,8009,7.91],[8010,8011,9.96],[8012,8013,8.98],[8014,8015,10],[8016,8023,4.95],[8024,8024,10],[8025,8025,8.59],[8026,8026,10],[8027,8027,10.21],[8028,8028,10],[8029,8029,10.21],[8030,8030,10],[8031,8031,10.21],[8032,8039,6.58],[8040,8041,8.12],[8042,8043,9.98],[8044,8047,9.29],[8048,8049,6.23],[8050,8051,5.13],[8052,8053,6.33],[8054,8055,2.74],[8056,8057,6.07],[8058,8059,6.31],[8060,8061,8.13],[8062,8063,10],[8064,8071,5.24],[8072,8073,7.22],[8074,8079,7.91],[8080,8087,5.23],[8088,8089,8.59],[8090,8095,10.16],[8096,8103,6.58],[8104,8105,8.12],[8106,8107,9.98],[8108,8111,9.29],[8112,8116,5.24],[8117,8117,10],[8118,8119,5.24],[8120,8121,7.22],[8122,8123,6.84],[8124,8124,7.22],[8125,8125,3.33],[8126,8126,2.74],[8127,8129,3.33],[8130,8132,5.23],[8133,8133,10],[8134,8135,5.23],[8136,8136,6.32],[8137,8138,7.51],[8139,8139,8.7],[8140,8140,7.22],[8141,8143,3.33],[8144,8145,2.69],[8146,8147,2.74],[8148,8149,10],[8150,8151,2.69],[8152,8153,3.33],[8154,8154,4.21],[8155,8155,5.4],[8156,8156,10],[8157,8159,3.33],[8160,8161,4.95],[8162,8163,6.31],[8164,8165,4.99],[8166,8167,4.95],[8168,8169,7.22],[8170,8170,6.15],[8171,8171,7.53],[8172,8172,6.93],[8173,8175,6.36],[8176,8177,10],[8178,8180,6.58],[8181,8181,10],[8182,8183,6.58],[8184,8184,7.87],[8185,8185,8.81],[8186,8186,8.18],[8187,8187,9.08],[8188,8188,7.43],[8189,8189,6.36],[8190,8190,3.33],[8192,8192,5],[8193,8193,10],[8194,8194,5],[8195,8195,10],[8196,8196,3.33],[8197,8197,2.5],[8198,8198,1.67],[8199,8199,6.36],[8200,8200,3.64],[8201,8201,2],[8202,8202,0.63],[8203,8207,0],[8208,8209,5.79],[8210,8211,6.36],[8212,8213,10],[8214,8214,2.81],[8215,8215,6.36],[8216,8219,2.69],[8220,8223,4.59],[8224,8225,6.36],[8226,8226,5.45],[8227,8227,4.7],[8228,8228,3.33],[8229,8229,6.67],[8230,8230,8.18],[8231,8231,3.16],[8232,8238,0],[8239,8239,1.76],[8240,8240,15.21],[8241,8241,13.55],[8242,8242,3.61],[8243,8244,5.57],[8245,8245,3.25],[8246,8246,5.42],[8247,8247,7.59],[8248,8248,3.53],[8249,8250,4.54],[8251,8251,7.23],[8252,8252,6.25],[8253,8253,4.22],[8254,8254,6.36],[8255,8256,5],[8257,8257,4.65],[8258,8258,9.11],[8259,8259,3.25],[8260,8260,3.61],[8261,8262,3.25],[8263,8263,8.07],[8264,8265,7.07],[8266,8267,6.32],[8268,8269,5.42],[8270,8270,4.82],[8271,8271,3.16],[8272,8272,5],[8273,8273,4.82],[8274,8274,5.51],[8275,8275,10],[8276,8276,5],[8277,8277,6.97],[8278,8278,5.93],[8279,8279,9.74],[8280,8281,5.93],[8282,8282,10],[8283,8283,5.93],[8284,8284,6.98],[8285,8285,10],[8286,8286,2.78],[8287,8287,2.22],[8288,8302,0],[8304,8304,4.22],[8305,8305,2.17],[8306,8307,10],[8308,8309,5.42],[8310,8310,4.22],[8311,8312,5.42],[8313,8316,4.22],[8317,8318,2.26],[8319,8319,5.45],[8320,8332,4.22],[8333,8334,2.26],[8335,8335,10],[8336,8336,2.73],[8337,8337,2.56],[8338,8338,2.88],[8339,8339,2.9],[8340,8340,2.56],[8341,8350,10],[8352,8352,6.36],[8353,8354,6.98],[8355,8356,6.36],[8357,8357,9.73],[8358,8358,7.48],[8359,8359,11.64],[8360,8360,11.67],[8361,8361,9.89],[8362,8362,8.35],[8363,8363,6.23],[8364,8364,6.36],[8365,8365,6.93],[8366,8366,6.16],[8367,8367,10],[8368,8368,5.21],[8369,8369,6.03],[8370,8370,7.75],[8371,8372,6.84],[8373,8373,6.98],[8374,8374,6.77],[8375,8375,7.3],[8376,8376,5.65],[8377,8377,6],[8378,8378,5.56],[8379,8379,8.31],[8380,8381,5.65],[8382,8382,7.53],[8383,8383,6.59],[8384,8398,10],[8400,8402,0],[8403,8403,6],[8404,8405,7],[8406,8408,0],[8409,8410,6],[8411,8413,0],[8414,8414,10],[8415,8415,8.65],[8416,8416,9],[8417,8417,0],[8418,8418,10],[8419,8432,0],[8433,8446,10],[8448,8449,7.5],[8450,8450,6.02],[8451,8451,9.89],[8452,8452,6.4],[8453,8453,10.76],[8454,8454,7.5],[8455,8455,5.98],[8456,8456,6.03],[8457,8457,8.47],[8458,8458,10],[8459,8459,9.97],[8460,8460,8.24],[8461,8461,6.02],[8462,8462,5.77],[8463,8463,6.15],[8464,8464,8.97],[8465,8465,7.62],[8466,8466,9.46],[8467,8467,3.23],[8468,8468,7.78],[8469,8469,6.02],[8470,8470,11.72],[8471,8471,8.55],[8472,8472,8.26],[8473,8474,6.02],[8475,8475,9.44],[8476,8476,8.74],[8477,8477,6.02],[8478,8478,6.32],[8479,8479,6.67],[8480,8480,11.28],[8481,8481,15.03],[8482,8482,9.77],[8483,8483,7.22],[8484,8484,6.02],[8485,8485,5.12],[8486,8486,8.18],[8487,8487,7.95],[8488,8488,7.26],[8489,8489,4],[8490,8490,6.93],[8491,8491,6.84],[8492,8492,9.5],[8493,8493,7.17],[8494,8494,7.18],[8495,8495,6.27],[8496,8496,7.5],[8497,8497,9.19],[8498,8498,6.64],[8499,8499,10.72],[8500,8500,6.97],[8501,8501,6.45],[8502,8502,5.63],[8503,8503,4.27],[8504,8504,5.01],[8505,8505,6.6],[8506,8506,9.34],[8507,8507,16.4],[8508,8508,6.73],[8509,8509,5.4],[8510,8510,4.69],[8511,8511,7.18],[8512,8512,9.23],[8513,8513,7.23],[8514,8515,5.33],[8516,8516,6.23],[8517,8517,7.13],[8518,8518,5.81],[8519,8519,5.15],[8520,8520,2.93],[8521,8521,3.41],[8522,8522,6.64],[8523,8523,6.97],[8524,8524,8.1],[8525,8525,8.82],[8526,8526,4.17],[8528,8530,10],[8531,8532,7.5],[8533,8538,8.01],[8539,8542,10],[8543,8543,3.8],[8544,8544,2.88],[8545,8545,5.9],[8546,8546,8.37],[8547,8547,9.05],[8548,8548,6.53],[8549,8549,9.18],[8550,8550,12.13],[8551,8551,14.6],[8552,8552,8.72],[8553,8553,6.26],[8554,8554,8.53],[8555,8555,11.47],[8556,8556,5.33],[8557,8557,6.92],[8558,8558,7.49],[8559,8559,8.61],[8560,8560,2.89],[8561,8561,5.78],[8562,8562,8.19],[8563,8563,7.79],[8564,8564,5.18],[8565,8565,7.82],[8566,8566,10.71],[8567,8567,13.12],[8568,8568,8.35],[8569,8569,6.13],[8570,8570,8.33],[8571,8571,11.22],[8572,8572,2.89],[8573,8573,5.12],[8574,8574,6.29],[8575,8575,9.34],[8576,8576,10.41],[8577,8577,7.49],[8578,8578,10.41],[8579,8579,6.92],[8580,8580,4.44],[8581,8581,6.51],[8582,8582,5.64],[8583,8590,10],[8592,8592,10],[8593,8593,5],[8594,8594,10],[8595,8595,5],[8596,8596,10],[8597,8597,5],[8598,8603,10],[8604,8615,6.02],[8616,8616,5],[8617,8617,10],[8618,8618,9.88],[8619,8621,6.02],[8622,8622,10],[8623,8623,6.02],[8624,8626,8.65],[8627,8627,10],[8628,8628,8.65],[8629,8629,10],[8630,8631,8.65],[8632,8633,10],[8634,8635,6.02],[8636,8636,8.65],[8637,8639,6.02],[8640,8640,8.65],[8641,8643,6.02],[8644,8646,10],[8647,8650,6.02],[8651,8652,10],[8653,8653,8.8],[8654,8654,6.02],[8655,8655,8.69],[8656,8656,10],[8657,8657,8.65],[8658,8658,9.31],[8659,8659,8.65],[8660,8660,9.31],[8661,8669,6.02],[8670,8671,6.45],[8672,8672,10],[8673,8673,6.45],[8674,8674,10],[8675,8675,6.45],[8676,8682,10],[8683,8687,6.02],[8688,8688,8.65],[8689,8692,6.02],[8693,8693,10],[8694,8702,6.02],[8704,8704,6.3],[8705,8705,4.69],[8706,8706,6.36],[8707,8707,5.26],[8708,8708,5.35],[8709,8709,7.17],[8710,8710,7.27],[8711,8711,7],[8712,8712,5.76],[8713,8713,6.12],[8714,8714,5.09],[8715,8715,5.76],[8716,8716,5.89],[8717,8717,5.09],[8718,8718,5.22],[8719,8719,8.18],[8720,8720,7.95],[8721,8721,7.27],[8722,8722,8.18],[8723,8723,7.95],[8724,8724,5.99],[8725,8725,3.61],[8726,8726,7.95],[8727,8727,5.23],[8728,8728,3.55],[8729,8729,3.64],[8730,8730,8.18],[8731,8731,7.49],[8732,8732,7.24],[8733,8733,5.19],[8734,8734,10],[8735,8735,9.79],[8736,8736,5.98],[8737,8737,6.01],[8738,8738,6.05],[8739,8739,2.5],[8740,8740,4.73],[8741,8741,3.46],[8742,8742,5.25],[8743,8744,5.94],[8745,8745,7.22],[8746,8746,5.31],[8747,8747,6.36],[8748,8748,9.15],[8749,8749,11.24],[8750,8750,6.78],[8751,8751,9.24],[8752,8752,11.66],[8753,8753,5.98],[8754,8754,6.28],[8755,8755,5.97],[8756,8756,6.04],[8757,8757,5.97],[8758,8758,3.36],[8759,8759,5.76],[8760,8760,5.63],[8761,8761,5.76],[8762,8762,5.8],[8763,8763,5.6],[8764,8765,5.5],[8766,8766,5.43],[8767,8767,5.83],[8768,8768,3.9],[8769,8769,5.74],[8770,8770,5.8],[8771,8771,5.84],[8772,8772,6.71],[8773,8773,6.96],[8774,8774,6.29],[8775,8775,6.11],[8776,8776,8.18],[8777,8777,5.49],[8778,8778,6.04],[8779,8779,6.71],[8780,8780,5.43],[8781,8781,6.03],[8782,8782,5.97],[8783,8783,5.93],[8784,8784,5.6],[8785,8785,6.38],[8786,8787,6.32],[8788,8789,7.64],[8790,8790,5.79],[8791,8791,5.96],[8792,8792,5.89],[8793,8793,6.08],[8794,8794,6.19],[8795,8795,6.46],[8796,8796,6.36],[8797,8797,5.63],[8798,8798,5.75],[8799,8799,5.9],[8800,8801,8.18],[8802,8802,5.64],[8803,8803,5.93],[8804,8805,8.18],[8806,8806,5.75],[8807,8807,5.64],[8808,8808,6.22],[8809,8809,5.89],[8810,8810,7.33],[8811,8811,7.01],[8812,8812,3.58],[8813,8813,5.53],[8814,8815,5.64],[8816,8817,5.49],[8818,8818,5.64],[8819,8819,5.67],[8820,8820,5.83],[8821,8821,5.81],[8822,8823,6.05],[8824,8824,5.61],[8825,8825,5.77],[8826,8826,5.67],[8827,8827,5.78],[8828,8828,5.96],[8829,8829,5.78],[8830,8830,5.85],[8831,8831,5.82],[8832,8832,6.07],[8833,8833,5.79],[8834,8835,6.32],[8836,8836,6.44],[8837,8837,6.31],[8838,8839,6.63],[8840,8840,6.67],[8841,8841,6.49],[8842,8843,5.62],[8844,8845,5.82],[8846,8846,6.09],[8847,8848,6.54],[8849,8850,6.51],[8851,8852,6.11],[8853,8853,7.24],[8854,8854,7.45],[8855,8855,7.11],[8856,8856,7.22],[8857,8857,7.56],[8858,8858,7.35],[8859,8859,7.18],[8860,8860,7.61],[8861,8861,7.56],[8862,8862,7.84],[8863,8863,7.6],[8864,8864,7.33],[8865,8865,7.16],[8866,8869,7.5],[8870,8870,3.3],[8871,8871,3.33],[8872,8872,6.24],[8873,8873,7.29],[8874,8874,6.23],[8875,8875,7.55],[8876,8876,7.76],[8877,8877,7.78],[8878,8878,8.74],[8879,8879,8.36],[8880,8881,6.32],[8882,8883,7.41],[8884,8885,7.03],[8886,8887,7.35],[8888,8888,5.96],[8889,8889,6.83],[8890,8890,4.8],[8891,8892,6.96],[8893,8893,6.74],[8894,8894,7.42],[8895,8895,6.31],[8896,8897,6.71],[8898,8899,6.41],[8900,8900,3.81],[8901,8901,4.41],[8902,8902,4.48],[8903,8903,6.31],[8904,8904,7.72],[8905,8906,7.4],[8907,8908,7.24],[8909,8909,5.84],[8910,8911,6.35],[8912,8913,6.48],[8914,8915,5.69],[8916,8916,5.49],[8917,8917,6.14],[8918,8919,6.03],[8920,8921,9.68],[8922,8923,6.51],[8924,8925,6.46],[8926,8927,6.69],[8928,8928,6.66],[8929,8929,6.56],[8930,8930,6.86],[8931,8931,6.64],[8932,8932,6.71],[8933,8933,6.73],[8934,8934,6.76],[8935,8935,6.86],[8936,8936,7.19],[8937,8937,6.88],[8938,8938,7.49],[8939,8939,7.66],[8940,8940,7.71],[8941,8941,7.76],[8942,8942,4.11],[8943,8943,10],[8944,8944,9.2],[8945,8945,9.39],[8946,8946,6.5],[8947,8947,5.76],[8948,8948,5.09],[8949,8950,5.76],[8951,8951,5.09],[8952,8952,5.76],[8953,8953,6.32],[8954,8954,6.5],[8955,8955,5.76],[8956,8956,5.09],[8957,8957,5.76],[8958,8958,5.09],[8960,8961,6.02],[8962,8962,6],[8963,8963,7.95],[8964,8964,6.02],[8965,8965,7.95],[8966,8966,6.64],[8967,8967,10],[8968,8975,6.02],[8976,8976,5.64],[8977,8977,6.02],[8978,8978,10],[8979,8979,6.02],[8980,8980,8.65],[8981,8981,6.02],[8982,8983,11],[8984,8984,10],[8985,8985,6.02],[8986,8987,10],[8988,8991,6.02],[8992,8993,6.04],[8994,8995,8.65],[8996,8996,7.95],[8997,8997,10],[8998,8998,12.14],[8999,8999,10],[9000,9000,6.02],[9001,9002,10],[9003,9003,12.14],[9004,9004,9.26],[9005,9005,9.86],[9006,9006,6.24],[9007,9009,5.49],[9010,9010,8.89],[9011,9012,5.49],[9013,9013,6.02],[9014,9014,9.26],[9015,9020,6.02],[9021,9021,10],[9022,9022,6.02],[9023,9024,6.83],[9025,9028,6.02],[9029,9030,6],[9031,9033,6.02],[9034,9034,6],[9035,9037,6.02],[9038,9039,6],[9040,9040,6.02],[9041,9041,6],[9042,9044,6.02],[9045,9046,6],[9047,9052,6.02],[9053,9053,6],[9054,9056,6.02],[9057,9058,6],[9059,9061,6.02],[9062,9063,6],[9064,9065,6.02],[9066,9066,6],[9067,9072,6.02],[9073,9074,6],[9075,9082,6.02],[9083,9083,6.69],[9084,9084,8.71],[9085,9085,3.16],[9086,9086,9.39],[9087,9087,3.71],[9088,9091,6.02],[9092,9092,7.85],[9093,9093,6.84],[9094,9094,6.75],[9095,9096,10],[9097,9098,6.02],[9099,9099,10],[9100,9100,8.08],[9101,9101,7.86],[9102,9102,7.47],[9103,9106,6.58],[9107,9107,9.13],[9108,9108,9.26],[9109,9109,6.02],[9110,9110,4.72],[9111,9112,7.89],[9113,9114,8.15],[9115,9133,10],[9134,9134,6.02],[9135,9135,3.15],[9136,9137,10],[9138,9139,14.88],[9140,9142,9.26],[9143,9143,6.43],[9144,9149,5.03],[9150,9164,10],[9165,9165,9.98],[9166,9166,10],[9167,9167,8.57],[9168,9168,5.11],[9169,9171,5.42],[9172,9173,10.31],[9174,9174,9.58],[9175,9177,9.76],[9178,9185,10],[9186,9186,11.44],[9187,9187,9.1],[9188,9188,10.94],[9189,9189,10.18],[9190,9190,9.26],[9191,9191,7.98],[9192,9214,10],[9216,9247,10],[9248,9248,6],[9249,9249,10],[9250,9250,6],[9251,9251,3.16],[9252,9252,6],[9253,9253,7.92],[9254,9254,4.03],[9255,9278,10],[9280,9285,6.04],[9286,9289,7.5],[9290,9290,6.04],[9291,9310,10],[9312,9412,10],[9413,9413,8.55],[9414,9470,10],[9472,9472,7.08],[9473,9473,10],[9474,9474,7.08],[9475,9483,10],[9484,9484,7.08],[9485,9487,10],[9488,9488,7.08],[9489,9491,10],[9492,9492,7.08],[9493,9495,10],[9496,9496,7.08],[9497,9499,10],[9500,9500,7.08],[9501,9507,10],[9508,9508,7.08],[9509,9515,10],[9516,9516,7.08],[9517,9523,10],[9524,9524,7.08],[9525,9531,10],[9532,9532,7.08],[9533,9547,10],[9548,9551,6.02],[9552,9580,7.08],[9581,9588,10],[9589,9598,6.02],[9600,9600,7.08],[9601,9603,10],[9604,9604,7.08],[9605,9607,10],[9608,9608,7.08],[9609,9611,10],[9612,9612,7.08],[9613,9615,10],[9616,9618,7.08],[9619,9619,7.29],[9620,9621,10],[9622,9630,6.02],[9632,9633,6.04],[9634,9634,10],[9635,9641,8.65],[9642,9643,3.54],[9644,9644,10],[9645,9645,8.65],[9646,9648,6.02],[9649,9649,10],[9650,9650,9.9],[9651,9651,10],[9652,9652,5.51],[9653,9653,8.65],[9654,9654,8.8],[9655,9655,10],[9656,9657,5.3],[9658,9658,9.9],[9659,9659,6.02],[9660,9660,9.9],[9661,9661,10],[9662,9663,6.39],[9664,9664,10],[9665,9665,7.95],[9666,9666,6.02],[9667,9667,8.65],[9668,9668,9.9],[9669,9669,6.02],[9670,9670,7.23],[9671,9671,6.15],[9672,9672,8.65],[9673,9673,10],[9674,9674,8.18],[9675,9675,6.04],[9676,9676,5.94],[9677,9677,6.02],[9678,9678,10],[9679,9679,6.04],[9680,9683,10],[9684,9687,6.02],[9688,9689,6.04],[9690,9697,6.02],[9698,9701,10],[9702,9702,3.54],[9703,9710,6.02],[9711,9711,10],[9712,9722,6.02],[9723,9726,10],[9728,9731,10],[9732,9732,6.02],[9733,9734,10],[9735,9736,6.02],[9737,9737,10],[9738,9741,6.02],[9742,9742,10],[9743,9743,8.65],[9744,9746,8.3],[9747,9747,6.02],[9748,9751,10],[9752,9755,6.02],[9756,9759,10],[9760,9774,6.02],[9775,9775,8.65],[9776,9783,9],[9784,9785,6.02],[9786,9786,10.21],[9787,9787,10.52],[9788,9788,9.17],[9789,9791,6.02],[9792,9792,7.5],[9793,9793,6.02],[9794,9794,7.5],[9795,9799,6.02],[9800,9811,10],[9812,9823,6.02],[9824,9824,5.31],[9825,9826,10],[9827,9827,6.56],[9828,9828,10],[9829,9829,5.94],[9830,9830,5.1],[9831,9833,10],[9834,9834,5],[9835,9835,7.5],[9836,9838,10],[9839,9839,5],[9840,9841,6.02],[9842,9853,10],[9854,9854,6.02],[9855,9855,10],[9856,9867,6.02],[9868,9868,8.79],[9869,9869,8.63],[9870,9870,8.59],[9871,9871,8.96],[9872,9874,6.02],[9875,9875,10],[9876,9884,6.02],[9885,9889,10],[9890,9890,8.92],[9891,9891,8.97],[9892,9892,8.83],[9893,9893,6.6],[9894,9894,7.41],[9895,9895,9.23],[9896,9896,5.33],[9897,9897,9.2],[9898,9899,10],[9900,9900,5.65],[9901,9901,7.76],[9902,9902,10.55],[9903,9903,11.18],[9904,9905,6.02],[9906,9906,6.03],[9907,9953,10],[9954,9954,7],[9955,9982,10],[9984,9984,10],[9985,9985,9.74],[9986,9986,9.61],[9987,9987,9.74],[9988,9988,9.8],[9989,9989,10],[9990,9990,7.89],[9991,9991,7.9],[9992,9992,7.91],[9993,9993,6.9],[9994,9997,10],[9998,9998,7.88],[9999,9999,9.33],[10000,10000,9.11],[10001,10001,9.45],[10002,10002,9.74],[10003,10003,7.64],[10004,10004,8.46],[10005,10005,7.62],[10006,10006,7.61],[10007,10007,5.71],[10008,10008,6.77],[10009,10009,7.63],[10010,10010,7.6],[10011,10011,7.59],[10012,10012,7.54],[10013,10013,4.94],[10014,10014,5.52],[10015,10015,5.37],[10016,10016,5.77],[10017,10017,6.92],[10018,10018,7.86],[10019,10020,7.88],[10021,10021,7.9],[10022,10022,7.93],[10023,10023,7.94],[10024,10024,10],[10025,10025,8.23],[10026,10026,7.89],[10027,10027,8.41],[10028,10028,8.23],[10029,10029,8.33],[10030,10030,8.16],[10031,10031,8.31],[10032,10032,9.23],[10033,10033,7.44],[10034,10034,7.23],[10035,10035,7.49],[10036,10036,7.9],[10037,10037,7.92],[10038,10038,6.95],[10039,10039,7.76],[10040,10040,7.68],[10041,10041,7.92],[10042,10042,7.59],[10043,10043,7.07],[10044,10044,7.08],[10045,10045,6.82],[10046,10046,7.01],[10047,10047,8.26],[10048,10048,8.15],[10049,10050,7.89],[10051,10051,7.07],[10052,10052,6.87],[10053,10053,6.96],[10054,10054,6.89],[10055,10055,7.86],[10056,10056,7.87],[10057,10057,7.13],[10058,10058,7.91],[10059,10059,7.85],[10060,10060,10],[10061,10061,8.73],[10062,10062,10],[10063,10064,7.62],[10065,10066,7.59],[10067,10069,10],[10070,10070,7.84],[10071,10071,10],[10072,10072,2.89],[10073,10073,2.77],[10074,10074,4.15],[10075,10076,3.92],[10077,10078,6.68],[10079,10080,10],[10081,10081,7.32],[10082,10083,5.44],[10084,10084,9.1],[10085,10085,6.67],[10086,10087,7.6],[10088,10089,3.9],[10090,10091,3.17],[10092,10093,2.76],[10094,10095,5.09],[10096,10097,4.1],[10098,10099,2.34],[10100,10101,3.34],[10102,10131,7.88],[10132,10132,8.94],[10133,10135,10],[10136,10136,7.48],[10137,10137,9.24],[10138,10138,7.48],[10139,10139,9.18],[10140,10140,9.27],[10141,10142,9.28],[10143,10143,8.34],[10144,10144,8.73],[10145,10145,8.28],[10146,10147,9.24],[10148,10148,9.17],[10149,10149,9.3],[10150,10150,9.31],[10151,10151,4.63],[10152,10152,8.83],[10153,10154,8.36],[10155,10156,8.67],[10157,10158,6.96],[10159,10159,8.74],[10160,10160,10],[10161,10161,8.74],[10162,10162,7.6],[10163,10163,9.46],[10164,10164,7.71],[10165,10165,8.65],[10166,10166,7.71],[10167,10167,8.88],[10168,10168,9.67],[10169,10169,8.88],[10170,10170,8.31],[10171,10171,8.73],[10172,10172,9.27],[10173,10173,9.7],[10174,10174,9.18],[10176,10176,5.48],[10177,10177,9.48],[10178,10178,6.89],[10179,10180,5.64],[10181,10182,6.02],[10183,10183,6.2],[10184,10185,9.18],[10186,10186,3.4],[10187,10187,8.38],[10188,10188,3.25],[10189,10189,8.38],[10190,10191,10],[10192,10192,7.46],[10193,10193,6.2],[10194,10194,5.97],[10195,10196,5.42],[10197,10198,9.02],[10199,10199,11.15],[10200,10201,6.89],[10202,10202,8.7],[10203,10203,8.56],[10204,10204,10.55],[10205,10206,8.49],[10207,10207,3.96],[10208,10208,5.51],[10209,10209,7],[10210,10211,8.76],[10212,10213,9.46],[10214,10215,4.22],[10216,10217,3.66],[10218,10219,4.63],[10220,10221,4.88],[10222,10222,2.33],[10224,10225,10.33],[10226,10227,9.74],[10228,10228,12],[10229,10238,15.74],[10240,10494,6.84],[10496,10503,9.26],[10504,10505,5.11],[10506,10511,9.26],[10512,10512,14.12],[10513,10513,9.26],[10514,10515,5.11],[10516,10547,9.26],[10548,10549,10],[10550,10551,8.65],[10552,10552,5.11],[10553,10553,8.65],[10554,10568,9.26],[10569,10569,5.11],[10570,10571,9.26],[10572,10573,5.11],[10574,10574,9.26],[10575,10575,5.11],[10576,10576,9.26],[10577,10577,5.11],[10578,10579,9.26],[10580,10581,5.11],[10582,10583,9.26],[10584,10585,5.11],[10586,10587,9.26],[10588,10589,5.11],[10590,10591,9.26],[10592,10593,5.11],[10594,10597,8.65],[10598,10605,9.26],[10606,10607,6.85],[10608,10613,9.26],[10614,10614,6.85],[10615,10615,9.26],[10616,10617,6.85],[10618,10618,9.26],[10619,10619,6.85],[10620,10621,9.26],[10622,10622,6.85],[10624,10624,3.65],[10625,10625,3.8],[10626,10626,3.13],[10627,10628,3.74],[10629,10630,4.47],[10631,10632,3.35],[10633,10634,3.95],[10635,10636,3.01],[10637,10640,3],[10641,10641,3.66],[10642,10642,3.68],[10643,10644,6.59],[10645,10646,6.95],[10647,10648,6.48],[10649,10649,2.26],[10650,10650,2.77],[10651,10651,5.94],[10652,10653,5.92],[10654,10654,6.61],[10655,10655,5.48],[10656,10657,5.94],[10658,10661,5.48],[10662,10663,7.53],[10664,10671,5.94],[10672,10676,7.03],[10677,10677,8.69],[10678,10678,7],[10679,10679,7.02],[10680,10680,7.22],[10681,10681,7.02],[10682,10682,7.03],[10683,10683,7.04],[10684,10689,7.02],[10690,10690,8.55],[10691,10691,8.74],[10692,10696,7.47],[10697,10697,7.96],[10698,10700,7.49],[10701,10701,9.44],[10702,10702,6.5],[10703,10704,7.58],[10705,10707,6.87],[10708,10709,6.51],[10710,10711,7.67],[10712,10713,2.77],[10714,10715,4.23],[10716,10716,6.37],[10717,10717,6.47],[10718,10718,6.37],[10719,10719,6.74],[10720,10720,7.47],[10721,10721,6.53],[10722,10722,6.83],[10723,10725,6.64],[10726,10726,7.1],[10727,10727,6.35],[10728,10729,7.49],[10730,10730,7.17],[10731,10731,4.73],[10732,10733,8.99],[10734,10735,5.98],[10736,10737,7.08],[10738,10739,7.02],[10740,10740,8.18],[10741,10741,5.99],[10742,10742,5.76],[10743,10745,5.08],[10746,10747,6.76],[10748,10749,5.37],[10750,10750,4.73],[10752,10753,8.99],[10754,10754,9.01],[10755,10756,5.44],[10757,10758,5.95],[10759,10760,7.66],[10761,10761,6.66],[10762,10762,8.55],[10763,10763,6.52],[10764,10764,15.05],[10765,10767,6.11],[10768,10768,4.99],[10769,10769,7.28],[10770,10770,5.19],[10771,10771,4.99],[10772,10772,6.28],[10773,10773,4.99],[10774,10774,6.11],[10775,10775,6.76],[10776,10778,6.11],[10779,10779,6.38],[10780,10780,6.17],[10781,10781,6.87],[10782,10782,3.95],[10783,10783,3.34],[10784,10784,8.11],[10785,10785,3.26],[10786,10787,5.41],[10788,10788,5.44],[10789,10789,5.41],[10790,10790,5.44],[10791,10791,6.47],[10792,10792,6.38],[10793,10794,5.45],[10795,10796,5.43],[10797,10798,7.61],[10799,10799,4.58],[10800,10800,5.29],[10801,10801,5.42],[10802,10802,5.21],[10803,10803,8.05],[10804,10805,7.14],[10806,10808,8.99],[10809,10811,7.49],[10812,10813,5.12],[10814,10814,3.34],[10815,10815,6.15],[10816,10821,5.44],[10822,10823,3.88],[10824,10825,5.42],[10826,10827,5.11],[10828,10829,7.39],[10830,10831,5.95],[10832,10832,7.39],[10833,10834,6.1],[10835,10836,6.52],[10837,10838,7.53],[10839,10840,6.52],[10841,10841,6.06],[10842,10843,6.52],[10844,10845,7.38],[10846,10848,6.1],[10849,10849,5.43],[10850,10851,6.1],[10852,10853,6.67],[10854,10857,5.42],[10858,10861,5.43],[10862,10862,4.85],[10863,10866,5.43],[10867,10867,5.44],[10868,10868,8.48],[10869,10869,9.84],[10870,10870,14.57],[10871,10871,5.45],[10872,10872,5.95],[10873,10874,6.59],[10875,10876,5.12],[10877,10879,5.43],[10880,10880,5.44],[10881,10886,5.43],[10887,10887,5.51],[10888,10888,5.7],[10889,10892,5.43],[10893,10893,5.51],[10894,10894,5.48],[10895,10896,5.45],[10897,10903,5.43],[10904,10906,5.44],[10907,10910,5.43],[10911,10911,5.52],[10912,10912,5.46],[10913,10914,6.83],[10915,10915,8.07],[10916,10916,5.44],[10917,10917,9.35],[10918,10921,6.13],[10922,10922,5.12],[10923,10923,5.24],[10924,10924,5.51],[10925,10925,5.56],[10926,10926,5.42],[10927,10929,5.53],[10930,10930,5.51],[10931,10934,5.53],[10935,10935,5.47],[10936,10936,5.48],[10937,10937,5.47],[10938,10938,5.48],[10939,10940,8.88],[10941,10942,5.64],[10943,10950,4.59],[10951,10954,5.46],[10955,10956,4.59],[10957,10958,9.53],[10959,10960,5.64],[10961,10962,5.63],[10963,10966,4.59],[10967,10968,8.5],[10969,10971,5.97],[10972,10972,6.1],[10973,10973,5.97],[10974,10974,3.93],[10975,10977,6.89],[10978,10978,6.86],[10979,10979,6.84],[10980,10980,6.86],[10981,10981,8.37],[10982,10982,6.86],[10983,10985,6.89],[10986,10987,6.93],[10988,10989,5.12],[10990,10990,3.13],[10991,10992,2.84],[10993,10993,2.99],[10994,10994,3.9],[10995,10995,5.43],[10996,10996,3.49],[10997,10997,4.78],[10998,10998,2.26],[10999,11000,9.71],[11001,11002,5.43],[11003,11003,4.99],[11004,11004,3.55],[11005,11005,4.11],[11006,11006,2.94],[11904,12030,10],[12272,12286,10],[12288,12333,10],[12334,12335,16],[12336,12350,10],[12800,12827,8.65],[12828,12828,8.51],[12829,12895,10],[12896,12923,8.65],[12924,12926,10],[12927,12927,8.46],[12928,13054,10],[13056,13183,10],[13184,13188,8.65],[13189,13193,10],[13194,13196,8.65],[13197,13200,10],[13201,13205,8.65],[13206,13208,10],[13209,13210,8.65],[13211,13222,10],[13223,13231,8.65],[13232,13235,10],[13236,13249,8.65],[13250,13250,10],[13251,13251,8.65],[13252,13252,10],[13253,13254,8.65],[13255,13255,8.46],[13256,13256,10],[13257,13258,8.65],[13259,13262,10],[13263,13264,8.65],[13265,13266,10],[13267,13267,8.65],[13268,13269,10],[13270,13270,8.65],[13271,13274,10],[13275,13277,8.65],[13278,13310,10],[13312,19902,10],[19968,40958,10],[63744,64254,10],[65072,65102,10],[65136,65136,3.12],[65137,65137,2.03],[65138,65138,3.12],[65139,65139,3],[65140,65140,3.12],[65141,65141,10],[65142,65142,3.12],[65143,65143,2.03],[65144,65144,3.12],[65145,65145,2.03],[65146,65146,3.12],[65147,65147,2.03],[65148,65148,3.12],[65149,65149,2.03],[65150,65150,3.12],[65151,65151,2.03],[65152,65152,4.13],[65153,65153,2.07],[65154,65154,2.29],[65155,65155,2.07],[65156,65156,2.29],[65157,65158,4.32],[65159,65159,2.07],[65160,65160,2.29],[65161,65161,6.38],[65162,65162,5.88],[65163,65164,2.44],[65165,65165,2.07],[65166,65166,2.29],[65167,65168,7.13],[65169,65170,2.44],[65171,65171,2.82],[65172,65172,3.75],[65173,65174,7.13],[65175,65176,2.44],[65177,65178,7.13],[65179,65180,2.44],[65181,65181,5.63],[65182,65182,5.26],[65183,65184,5.3],[65185,65185,5.63],[65186,65186,5.26],[65187,65188,5.3],[65189,65189,5.63],[65190,65190,5.26],[65191,65192,5.3],[65193,65196,3.37],[65197,65200,4.89],[65201,65202,8.21],[65203,65204,5.31],[65205,65206,8.21],[65207,65208,5.31],[65209,65210,10.98],[65211,65212,8.46],[65213,65214,10.98],[65215,65216,8.46],[65217,65224,5.82],[65225,65225,5.44],[65226,65226,4.5],[65227,65227,5.26],[65228,65228,3.94],[65229,65229,5.44],[65230,65230,4.5],[65231,65231,5.26],[65232,65232,3.94],[65233,65234,7.89],[65235,65235,2.68],[65236,65236,2.63],[65237,65238,5.82],[65239,65239,2.68],[65240,65240,2.63],[65241,65242,6.01],[65243,65244,3.94],[65245,65246,5.06],[65247,65248,2.07],[65249,65250,3.38],[65251,65252,3.94],[65253,65254,5.26],[65255,65256,2.44],[65257,65257,2.82],[65258,65258,3.75],[65259,65259,4.5],[65260,65260,3.94],[65261,65262,4.32],[65263,65263,6.38],[65264,65264,5.88],[65265,65265,6.38],[65266,65266,5.88],[65267,65268,2.44],[65269,65269,5.44],[65270,65270,6.01],[65271,65271,5.44],[65272,65272,6.01],[65273,65273,5.44],[65274,65274,6.01],[65275,65275,5.44],[65276,65276,6.01],[65277,65278,10],[65280,65376,10],[65377,65440,5],[65441,65441,4.83],[65442,65443,5],[65444,65444,4.83],[65445,65446,5],[65447,65447,4.83],[65448,65470,5],[65471,65473,10],[65474,65479,5],[65480,65481,10],[65482,65487,5],[65488,65489,10],[65490,65495,5],[65496,65497,10],[65498,65500,5],[65501,65508,10],[65509,65509,6.36],[65510,65510,9.89],[65511,65512,10],[65513,65518,5],[65792,65792,6.84],[65793,65793,6.01],[65794,65794,6.84],[65795,65795,6.01],[65796,65796,6.84],[65797,65797,6.01],[65798,65798,6.98],[65799,65799,5.21],[65800,65800,6.98],[65801,65801,5.21],[65802,65802,6.98],[65803,65803,5.21],[65804,65804,6.98],[65805,65805,5.21],[65806,65806,7.71],[65807,65807,6.47],[65808,65808,7.75],[65809,65809,6.23],[65810,65810,6.32],[65811,65811,5.96],[65812,65812,6.32],[65813,65813,5.96],[65814,65814,6.32],[65815,65815,5.96],[65816,65816,6.32],[65817,65817,5.96],[65818,65818,6.32],[65819,65819,5.96],[65820,65820,7.75],[65821,65821,6.23],[65822,65822,7.75],[65823,65823,6.23],[65824,65824,7.75],[65825,65825,6.23],[65826,65826,7.75],[65827,65827,6.23],[65828,65828,7.51],[65829,65829,6.33],[65830,65830,7.51],[65831,65831,6.33],[65832,65832,4.21],[65833,65833,2.74],[65834,65834,4.21],[65835,65835,2.74],[65836,65836,4.21],[65837,65837,2.74],[65838,65838,4.21],[65839,65839,2.74],[65840,65840,4.21],[65841,65841,2.74],[65842,65842,8.71],[65843,65843,6.14],[65844,65844,4.55],[65845,65845,3.44],[65846,65846,6.93],[65847,65848,5.92],[65849,65849,5.57],[65850,65850,2.74],[65851,65851,5.57],[65852,65852,2.74],[65853,65853,5.57],[65854,65854,2.96],[66304,66350,0],[66352,66382,0],[66560,66561,6.32],[66562,66562,7.92],[66563,66563,5.66],[66564,66564,7.01],[66565,66565,6.84],[66566,66567,4.21],[66568,66568,4.55],[66569,66569,11.18],[66570,66570,11.03],[66571,66571,8.18],[66572,66572,6.93],[66573,66573,7.5],[66574,66574,6.15],[66575,66575,7.51],[66576,66576,6.84],[66577,66578,6.86],[66579,66579,5.66],[66580,66580,7.46],[66581,66581,6.32],[66582,66582,9.73],[66583,66583,6.16],[66584,66585,7.5],[66586,66586,6.93],[66587,66587,7.34],[66588,66588,8.43],[66589,66589,7.51],[66590,66590,7.87],[66591,66591,7.51],[66592,66592,6.03],[66593,66593,6.98],[66594,66594,6.16],[66595,66595,6.15],[66596,66596,8.19],[66597,66597,6.85],[66598,66598,7.61],[66599,66599,7.12],[66600,66600,10.3],[66601,66601,10.45],[66602,66602,7.83],[66603,66603,9.2],[66604,66604,6.81],[66605,66605,7.01],[66606,66606,10.34],[66607,66607,7.06],[66608,66608,6.01],[66609,66609,6.14],[66610,66610,5.95],[66611,66611,4.71],[66612,66612,6.22],[66613,66613,5.96],[66614,66614,7.98],[66615,66615,5.24],[66616,66617,6.4],[66618,66618,5.92],[66619,66619,6.21],[66620,66620,6.96],[66621,66621,6.37],[66622,66622,6.07],[66623,66623,6.37],[66624,66624,6.23],[66625,66625,5.34],[66626,66626,4.96],[66627,66627,5.92],[66628,66628,8.41],[66629,66629,5.92],[66630,66630,6.45],[66631,66631,6.05],[66632,66632,8.76],[66633,66633,8.88],[66634,66634,6.41],[66635,66635,7.94],[66636,66636,5.71],[66637,66637,5.47],[66638,66638,8.39],[119040,119294,8.65],[119808,120739,8.65],[120740,120830,10],[131072,131072,0],[131073,131079,3.33],[131080,131080,0],[131081,131085,3.52],[131086,131100,3.33],[131101,131101,0],[131102,131103,3.33],[131104,131104,3.52],[131105,131105,3.94],[131106,131106,4.59],[131107,131107,8.18],[131108,131108,6.36],[131109,131109,10.76],[131110,131110,7.27],[131111,131111,2.69],[131112,131113,4.54],[131114,131114,6.36],[131115,131115,8.18],[131116,131116,3.64],[131117,131117,4.54],[131118,131118,3.64],[131119,131119,4.54],[131120,131129,6.36],[131130,131131,4.54],[131132,131134,8.18],[131135,131135,5.45],[131136,131136,10],[131137,131137,6.84],[131138,131138,6.86],[131139,131139,6.98],[131140,131140,7.71],[131141,131141,6.32],[131142,131142,5.75],[131143,131143,7.75],[131144,131144,7.51],[131145,131145,4.21],[131146,131146,4.55],[131147,131147,6.93],[131148,131148,5.57],[131149,131149,8.43],[131150,131150,7.48],[131151,131151,7.87],[131152,131152,6.03],[131153,131153,7.87],[131154,131154,6.95],[131155,131155,6.84],[131156,131156,6.16],[131157,131157,7.32],[131158,131158,6.84],[131159,131159,9.89],[131160,131160,6.85],[131161,131161,6.15],[131162,131162,6.85],[131163,131165,4.54],[131166,131166,8.18],[131167,131168,6.36],[131169,131169,6.01],[131170,131170,6.23],[131171,131171,5.21],[131172,131172,6.23],[131173,131173,5.96],[131174,131174,3.52],[131175,131175,6.23],[131176,131176,6.33],[131177,131177,2.74],[131178,131178,3.44],[131179,131179,5.92],[131180,131180,2.74],[131181,131181,9.73],[131182,131182,6.33],[131183,131183,6.07],[131184,131185,6.23],[131186,131186,4.27],[131187,131187,5.21],[131188,131188,3.94],[131189,131189,6.33],[131190,131190,5.92],[131191,131191,8.18],[131192,131193,5.92],[131194,131194,5.25],[131195,131195,6.35],[131196,131196,4.54],[131197,131197,6.35],[131198,131198,8.18],[131199,131199,0],[131200,131200,5.56],[131201,131231,5],[131232,131232,3.52],[131233,131233,3.94],[131234,131237,6.36],[131238,131238,4.54],[131239,131240,6.36],[131241,131241,10],[131242,131242,5.45],[131243,131243,6.45],[131244,131244,8.18],[131245,131245,0],[131246,131246,10],[131247,131247,6.36],[131248,131248,5.42],[131249,131249,8.18],[131250,131251,5.42],[131252,131252,6.36],[131253,131253,6.42],[131254,131254,6.36],[131255,131255,3.64],[131256,131256,6.36],[131257,131257,5.42],[131258,131258,5.45],[131259,131259,6.45],[131260,131262,10],[131263,131263,5.45],[131264,131269,6.84],[131270,131270,9.84],[131271,131271,6.98],[131272,131275,6.32],[131276,131279,4.21],[131280,131280,7.75],[131281,131281,7.48],[131282,131286,7.87],[131287,131287,8.18],[131288,131288,7.87],[131289,131292,7.32],[131293,131293,6.15],[131294,131294,6.05],[131295,131295,6.2],[131296,131301,6.01],[131302,131302,9.55],[131303,131303,5.21],[131304,131307,5.96],[131308,131311,2.74],[131312,131312,6.12],[131313,131313,6.33],[131314,131318,6.07],[131319,131319,8.18],[131320,131320,6.07],[131321,131324,6.33],[131325,131325,5.92],[131326,131326,6.23],[131327,131327,5.92],[131328,131328,6.84],[131329,131329,6.01],[131330,131330,6.84],[131331,131331,6.01],[131332,131332,6.84],[131333,131333,6.01],[131334,131334,6.98],[131335,131335,5.21],[131336,131336,6.98],[131337,131337,5.21],[131338,131338,6.98],[131339,131339,5.21],[131340,131340,6.98],[131341,131341,5.21],[131342,131342,7.71],[131343,131343,6.47],[131344,131344,7.75],[131345,131345,6.23],[131346,131346,6.32],[131347,131347,5.96],[131348,131348,6.32],[131349,131349,5.96],[131350,131350,6.32],[131351,131351,5.96],[131352,131352,6.32],[131353,131353,5.96],[131354,131354,6.32],[131355,131355,5.96],[131356,131356,7.75],[131357,131357,6.23],[131358,131358,7.75],[131359,131359,6.23],[131360,131360,7.75],[131361,131361,6.23],[131362,131362,7.75],[131363,131363,6.23],[131364,131364,7.51],[131365,131365,6.33],[131366,131366,7.51],[131367,131367,6.33],[131368,131368,4.21],[131369,131369,2.74],[131370,131370,4.21],[131371,131371,2.74],[131372,131372,4.21],[131373,131373,2.74],[131374,131374,4.21],[131375,131375,2.74],[131376,131376,4.21],[131377,131377,2.74],[131378,131378,8.71],[131379,131379,6.14],[131380,131380,4.55],[131381,131381,3.44],[131382,131382,6.93],[131383,131384,5.92],[131385,131385,5.57],[131386,131386,2.74],[131387,131387,5.57],[131388,131388,2.74],[131389,131389,5.57],[131390,131390,2.96],[131391,131391,5.57],[131392,131392,4.58],[131393,131393,5.62],[131394,131394,2.84],[131395,131395,7.48],[131396,131396,6.33],[131397,131397,7.48],[131398,131398,6.33],[131399,131399,7.48],[131400,131400,6.33],[131401,131401,7.3],[131402,131402,7.48],[131403,131403,6.33],[131404,131404,7.87],[131405,131405,6.07],[131406,131406,7.87],[131407,131407,6.07],[131408,131408,7.87],[131409,131409,6.07],[131410,131410,10.7],[131411,131411,9.81],[131412,131412,6.95],[131413,131413,4.27],[131414,131414,6.95],[131415,131415,4.27],[131416,131416,6.95],[131417,131417,4.27],[131418,131418,6.84],[131419,131419,5.21],[131420,131420,6.84],[131421,131421,5.21],[131422,131422,6.84],[131423,131423,5.21],[131424,131424,6.84],[131425,131425,5.21],[131426,131426,6.16],[131427,131427,3.94],[131428,131428,6.16],[131429,131429,3.94],[131430,131430,6.16],[131431,131431,3.94],[131432,131432,7.32],[131433,131433,6.33],[131434,131434,7.32],[131435,131435,6.33],[131436,131436,7.32],[131437,131437,6.3],[131438,131438,7.32],[131439,131439,6.33],[131440,131440,7.32],[131441,131441,6.33],[131442,131442,7.32],[131443,131443,6.3],[131444,131444,9.89],[131445,131445,8.18],[131446,131446,6.15],[131447,131447,5.92],[131448,131448,6.15],[131449,131449,6.85],[131450,131450,5.25],[131451,131451,6.85],[131452,131452,5.25],[131453,131453,6.85],[131454,131454,5.25],[131455,131455,3],[131456,131456,5],[131457,131457,7.6],[131458,131458,5.74],[131459,131459,5],[131460,131460,5.74],[131461,131461,5],[131462,131463,6.67],[131464,131464,4.44],[131465,131465,7.22],[131466,131466,8.15],[131467,131467,5.74],[131468,131468,5],[131469,131469,4.71],[131470,131470,6.11],[131471,131471,7.55],[131472,131472,5.01],[131473,131473,5.56],[131474,131474,6.36],[131475,131476,7.22],[131477,131477,7.7],[131478,131478,2.53],[131479,131479,3.33],[131480,131480,7.22],[131481,131481,5],[131482,131482,2.78],[131483,131483,4.85],[131484,131484,8.16],[131485,131485,7.22],[131486,131486,5],[131487,131487,7.22],[131488,131488,8.07],[131489,131489,6.07],[131490,131490,9.25],[131491,131491,6.91],[131492,131492,6.5],[131493,131493,5],[131494,131495,5.56],[131496,131496,3.89],[131497,131497,5.82],[131498,131498,3.44],[131499,131499,2.78],[131500,131500,6.11],[131501,131501,2.78],[131502,131502,6.11],[131503,131503,7.56],[131504,131504,6.6],[131505,131505,7.43],[131506,131506,7.22],[131507,131507,7.81],[131508,131508,5],[131509,131509,6.11],[131510,131510,4.44],[131511,131512,5.39],[131513,131514,4.44],[131515,131516,5],[131517,131517,4.43],[131518,131518,4.22],[131519,131519,5],[131520,131520,2],[131521,131521,2.81],[131522,131522,2.49],[131523,131523,3.33],[131524,131524,13.33],[131525,131525,11.66],[131526,131526,9.44],[131527,131527,10],[131528,131528,8.89],[131529,131529,5.56],[131530,131530,11.11],[131531,131531,10],[131532,131532,7.78],[131533,131533,7.22],[131534,131534,4.44],[131535,131535,3.33],[131536,131536,2.78],[131537,131537,7.22],[131538,131538,5],[131539,131539,7.22],[131540,131540,5],[131541,131541,7.22],[131542,131542,5],[131543,131543,7.32],[131544,131544,6.33],[131545,131545,7.22],[131546,131546,5],[131547,131547,7.32],[131548,131548,6.33],[131549,131549,4.44],[131550,131550,7.22],[131551,131551,4.44],[131552,131552,7.22],[131553,131553,4.44],[131554,131554,8.89],[131555,131555,6.67],[131556,131556,7.22],[131557,131557,5],[131558,131558,7.22],[131559,131559,5],[131560,131560,7.22],[131561,131561,5],[131562,131562,7.22],[131563,131563,5],[131564,131564,7.22],[131565,131565,5],[131566,131566,5.39],[131567,131567,4.44],[131568,131568,2.78],[131569,131569,13.33],[131570,131570,11.66],[131571,131571,9.44],[131572,131572,7.75],[131573,131573,6.23],[131574,131574,9.5],[131575,131575,5.6],[131576,131576,7.48],[131577,131577,6.33],[131578,131578,6.84],[131579,131579,6.01],[131580,131580,9.84],[131581,131581,9.55],[131582,131582,7.87],[131583,131583,6.07],[131584,131584,7.22],[131585,131585,4.44],[131586,131586,7.22],[131587,131587,4.44],[131588,131588,6.11],[131589,131589,4.44],[131590,131590,6.11],[131591,131591,4.44],[131592,131592,3.33],[131593,131593,2.78],[131594,131594,3.33],[131595,131595,2.78],[131596,131596,7.22],[131597,131597,5],[131598,131598,7.22],[131599,131599,5],[131600,131600,6.67],[131601,131601,3.33],[131602,131602,6.67],[131603,131603,3.33],[131604,131604,7.22],[131605,131605,5],[131606,131606,7.22],[131607,131607,5],[131608,131608,6.84],[131609,131609,5.21],[131610,131610,6.16],[131611,131611,3.94],[131612,131612,5.63],[131613,131613,3.95],[131614,131614,7.22],[131615,131615,5],[131616,131616,6.5],[131617,131617,5],[131618,131618,6.04],[131619,131619,5],[131620,131620,6.11],[131621,131621,4.44],[131622,131622,7.22],[131623,131623,4.44],[131624,131624,6.11],[131625,131625,4.44],[131626,131626,7.22],[131627,131627,5],[131628,131628,7.22],[131629,131629,5],[131630,131630,7.22],[131631,131631,5],[131632,131632,7.22],[131633,131633,5],[131634,131634,7.22],[131635,131635,5],[131636,131636,2.78],[131637,131637,5],[131638,131638,3.17],[131639,131639,2.78],[131640,131640,7.74],[131641,131641,7.72],[131642,131642,7.22],[131643,131643,6.67],[131644,131644,5],[131645,131646,6.11],[131647,131647,3.89],[131648,131648,4.44],[131649,131649,5.34],[131650,131650,3.97],[131651,131651,6.67],[131652,131652,7.22],[131653,131653,7.25],[131654,131654,6.11],[131655,131655,4.44],[131656,131656,3.89],[131657,131657,2.78],[131658,131658,7.02],[131659,131659,5],[131660,131660,6.67],[131661,131661,3.33],[131662,131662,7.22],[131663,131663,5],[131664,131664,4.44],[131665,131666,5.23],[131667,131667,5],[131668,131669,4.44],[131670,131671,5],[131672,131672,4.44],[131673,131673,5.96],[131674,131674,6.27],[131675,131676,4.2],[131677,131677,5.88],[131678,131678,4.43],[131679,131679,3.33],[131680,131681,5],[131682,131682,4.53],[131683,131683,5],[131684,131684,4.44],[131685,131687,5],[131688,131688,2.78],[131689,131689,2.69],[131690,131693,2.78],[131694,131694,5.78],[131695,131697,7.78],[131698,131699,5],[131700,131700,4.97],[131701,131701,5],[131702,131702,6.3],[131703,131703,6.58],[131704,131704,5.53],[131705,131711,3.33],[131712,131713,4.88],[131714,131714,3.89],[131715,131716,3.33],[131717,131717,4.36],[131718,131718,3.33],[131719,131720,2.78],[131721,131721,5],[131722,131722,5.49],[131723,131723,4.7],[131724,131724,5],[131725,131725,7.22],[131726,131726,5],[131727,131727,4.93],[131728,131728,4.44],[131729,131729,4.96],[131730,131735,4.44],[131736,131736,7.22],[131737,131737,4.72],[131738,131738,4.43],[131739,131739,4.53],[131740,131740,5.35],[131741,131741,2.78],[131742,131742,5],[131743,131743,4.3],[131744,131744,5],[131745,131746,4.44],[131747,131747,8.02],[131748,131748,8.45],[131749,131749,8.53],[131750,131750,5.65],[131751,131751,4.6],[131752,131752,6.49],[131753,131753,7.88],[131754,131754,5.66],[131755,131755,5.6],[131756,131756,5.14],[131757,131757,4.81],[131758,131758,6.25],[131759,131759,6.16],[131760,131761,3.21],[131762,131762,1.55],[131763,131765,2.17],[131766,131766,2.93],[131767,131767,4.28],[131768,131768,2.97],[131769,131769,2.19],[131770,131770,3.65],[131771,131775,3.33],[131776,131777,2.48],[131778,131781,5.64],[131782,131783,6.36],[131784,131784,3.33],[131785,131785,6.36],[131786,131791,3.33],[131792,131793,2.78],[131794,131799,3.33],[131800,131805,6.36],[131806,131806,0],[131807,131807,3.82],[131808,131808,2.93],[131809,131809,1.66],[131810,131810,2.12],[131811,131811,2.89],[131812,131812,2.48],[131813,131817,3.83],[131818,131821,3.33],[131822,131822,4.44],[131823,131831,3.33],[131832,131832,2.78],[131833,131836,3.33],[131837,131838,3.97],[131839,131839,3.33],[131840,131951,0],[131952,131952,4.19],[131953,131953,3.32],[131954,131954,5.87],[131955,131955,4.67],[131956,131957,3.33],[131958,131958,7.21],[131959,131959,5.8],[131960,131961,10],[131962,131962,3.33],[131963,131965,4.44],[131966,131966,4.54],[131967,131967,3.33],[131968,131971,10],[131972,131973,6.36],[131974,131974,6.84],[131975,131975,4.54],[131976,131976,7.51],[131977,131977,8.7],[131978,131978,5.4],[131979,131979,10],[131980,131980,8.81],[131981,131981,10],[131982,131982,7.53],[131983,131983,9.08],[131984,131984,2.74],[131985,131985,6.84],[131986,131986,6.86],[131987,131987,5.66],[131988,131988,7.03],[131989,131989,6.32],[131990,131990,6.85],[131991,131991,7.51],[131992,131992,7.87],[131993,131993,4.21],[131994,131994,6.93],[131995,131995,6.86],[131996,131996,8.43],[131997,131997,7.48],[131998,131998,6.49],[131999,131999,7.87],[132000,132000,7.51],[132001,132001,6.03],[132002,132002,10],[132003,132003,6.72],[132004,132004,6.16],[132005,132005,6.15],[132006,132006,8.19],[132007,132007,6.85],[132008,132008,8.71],[132009,132009,8.18],[132010,132010,4.21],[132011,132011,6.15],[132012,132012,6.23],[132013,132013,5.13],[132014,132014,6.33],[132015,132015,2.74],[132016,132016,6.31],[132017,132017,6.23],[132018,132018,6.2],[132019,132019,5.92],[132020,132020,6.08],[132021,132021,5.13],[132022,132022,4.58],[132023,132023,6.33],[132024,132024,6.24],[132025,132025,2.74],[132026,132027,5.92],[132028,132028,6.4],[132029,132029,5.92],[132030,132030,5.03],[132031,132031,6.07],[132032,132032,6.37],[132033,132033,6.25],[132034,132034,5.08],[132035,132035,6.3],[132036,132036,4.96],[132037,132037,6.31],[132038,132038,7.9],[132039,132039,5.9],[132040,132040,8.22],[132041,132041,8.13],[132042,132042,2.74],[132043,132043,6.31],[132044,132044,6.07],[132045,132045,6.31],[132046,132046,8.13],[132047,132047,5.66],[132048,132048,5.09],[132049,132049,4.95],[132050,132050,7.22],[132051,132051,8.9],[132052,132052,7.22],[132053,132053,5.26],[132054,132054,6.58],[132055,132055,5.6],[132056,132056,7.22],[132057,132057,5],[132058,132058,6.67],[132059,132059,4.2],[132060,132060,5.56],[132061,132061,4.47],[132062,132062,5.76],[132063,132063,4.51],[132064,132064,7.31],[132065,132065,5.54],[132066,132066,8.28],[132067,132067,7.78],[132068,132068,6.16],[132069,132069,5.21],[132070,132070,6.61],[132071,132071,4.44],[132072,132073,5.42],[132074,132074,6.56],[132075,132075,5.81],[132076,132076,6.99],[132077,132077,5.09],[132078,132078,4.75],[132079,132079,3.86],[132080,132080,5.6],[132081,132081,5.09],[132082,132082,4.44],[132083,132083,2.78],[132084,132084,7.22],[132085,132086,4.05],[132087,132087,5.56],[132088,132088,5],[132089,132089,6.67],[132090,132090,8.89],[132091,132091,6.33],[132092,132092,4.99],[132093,132095,6.67],[132096,132097,6.32],[132098,132098,7.92],[132099,132099,5.66],[132100,132100,7.01],[132101,132101,6.84],[132102,132103,4.21],[132104,132104,4.55],[132105,132105,11.18],[132106,132106,11.03],[132107,132107,8.18],[132108,132108,6.93],[132109,132109,7.5],[132110,132110,6.15],[132111,132111,7.51],[132112,132112,6.84],[132113,132114,6.86],[132115,132115,5.66],[132116,132116,7.46],[132117,132117,6.32],[132118,132118,9.73],[132119,132119,6.16],[132120,132121,7.5],[132122,132122,6.93],[132123,132123,7.34],[132124,132124,8.43],[132125,132125,7.51],[132126,132126,7.87],[132127,132127,7.51],[132128,132128,6.03],[132129,132129,6.98],[132130,132130,6.16],[132131,132131,6.15],[132132,132132,8.19],[132133,132133,6.85],[132134,132134,7.61],[132135,132135,7.12],[132136,132136,10.3],[132137,132137,10.45],[132138,132138,7.83],[132139,132139,9.2],[132140,132140,6.81],[132141,132141,7.01],[132142,132142,10.34],[132143,132143,7.06],[132144,132144,6.01],[132145,132145,6.14],[132146,132146,5.95],[132147,132147,4.71],[132148,132148,6.22],[132149,132149,5.96],[132150,132150,7.98],[132151,132151,5.24],[132152,132153,6.4],[132154,132154,5.92],[132155,132155,6.21],[132156,132156,6.96],[132157,132157,6.37],[132158,132158,6.07],[132159,132159,6.37],[132160,132160,6.23],[132161,132161,5.34],[132162,132162,4.96],[132163,132163,5.92],[132164,132164,8.41],[132165,132165,5.92],[132166,132166,6.45],[132167,132167,6.05],[132168,132168,8.76],[132169,132169,8.88],[132170,132170,6.41],[132171,132171,7.94],[132172,132172,5.71],[132173,132173,5.47],[132174,132174,8.39],[132175,132175,6],[132176,132177,5.96],[132178,132178,6.33],[132179,132179,4.71],[132180,132180,5.47],[132181,132181,5.21],[132182,132183,2.74],[132184,132184,3.44],[132185,132186,9.14],[132187,132187,6.33],[132188,132188,5.92],[132189,132189,6.4],[132190,132190,5.92],[132191,132191,6.37],[132192,132192,11.72],[132193,132193,6.33],[132194,132194,6.71],[132195,132195,5.43],[132196,132196,9.68],[132197,132197,6.77],[132198,132198,7.22],[132199,132199,5.9],[132200,132200,10.33],[132201,132201,8.34],[132202,132202,8.96],[132203,132203,6.91],[132204,132204,12.08],[132205,132205,9.35],[132206,132206,5.01],[132207,132207,3.95],[132208,132208,7.38],[132209,132209,6.26],[132210,132210,7.22],[132211,132211,5],[132212,132212,8.13],[132213,132213,5.89],[132214,132214,8.13],[132215,132215,5.89],[132216,132216,11.88],[132217,132217,10.4],[132218,132218,7.63],[132219,132219,5.66],[132220,132220,9.83],[132221,132221,8.13],[132222,132222,11.72],[132223,132223,6.33],[132224,132224,6.67],[132225,132225,4.44],[132226,132226,3.34],[132227,132230,0],[132231,132231,6.36],[132232,132233,0],[132234,132234,7.22],[132235,132235,5.35],[132236,132236,5.74],[132237,132237,4.7],[132238,132238,5.56],[132239,132239,5],[132240,132240,5.66],[132241,132241,4.71],[132242,132242,5.66],[132243,132243,4.71],[132244,132244,6.31],[132245,132245,5.15],[132246,132246,9.73],[132247,132247,7.98],[132248,132248,5.01],[132249,132249,3.95],[132250,132250,6.93],[132251,132251,5.92],[132252,132252,6.93],[132253,132253,5.92],[132254,132254,6.67],[132255,132255,4.86],[132256,132256,7.86],[132257,132257,5.73],[132258,132258,7.51],[132259,132259,6.37],[132260,132260,8.51],[132261,132261,6.23],[132262,132262,10.32],[132263,132263,7.89],[132264,132264,7.87],[132265,132265,6.17],[132266,132266,6.67],[132267,132267,4.44],[132268,132268,6.11],[132269,132269,4.37],[132270,132270,6.15],[132271,132271,5.92],[132272,132272,6.15],[132273,132273,5.92],[132274,132274,6.85],[132275,132275,5.92],[132276,132276,7.97],[132277,132277,6.03],[132278,132278,6.5],[132279,132279,5.03],[132280,132280,7.12],[132281,132281,6.05],[132282,132282,7.12],[132283,132283,6.33],[132284,132284,8.78],[132285,132285,6.89],[132286,132286,8.78],[132287,132287,6.89],[132288,132288,3.33],[132289,132289,8.96],[132290,132290,6.91],[132291,132291,6.67],[132292,132292,5.15],[132293,132293,6.78],[132294,132294,4.99],[132295,132295,7.22],[132296,132296,5.35],[132297,132297,7.22],[132298,132298,5.35],[132299,132299,6.5],[132300,132300,5.03],[132301,132301,8.89],[132302,132302,6.33],[132303,132303,2.78],[132304,132304,7.22],[132305,132305,4.44],[132306,132306,7.22],[132307,132307,4.44],[132308,132308,8.89],[132309,132309,6.67],[132310,132310,6.11],[132311,132311,4.44],[132312,132312,7.55],[132313,132313,5.96],[132314,132314,7.22],[132315,132315,4.44],[132316,132316,8.96],[132317,132317,6.91],[132318,132318,5.01],[132319,132319,3.95],[132320,132320,5.01],[132321,132321,4.44],[132322,132322,7.22],[132323,132323,5.35],[132324,132324,7.22],[132325,132325,5.35],[132326,132326,7.22],[132327,132327,5],[132328,132328,7.87],[132329,132329,6.07],[132330,132330,7.22],[132331,132331,5],[132332,132332,6.6],[132333,132333,4.29],[132334,132334,7.08],[132335,132335,5],[132336,132336,7.08],[132337,132337,5],[132338,132338,7.08],[132339,132339,5],[132340,132340,6.5],[132341,132341,5.03],[132342,132342,5.78],[132343,132343,4.1],[132344,132344,8.72],[132345,132345,6.72],[132346,132346,5.78],[132347,132347,4.1],[132348,132348,7.22],[132349,132349,5],[132350,132350,7.22],[132351,132351,5],[132352,132352,5.74],[132353,132353,5],[132354,132354,8.04],[132355,132355,7.71],[132356,132356,8.02],[132357,132357,7.06],[132358,132358,5.74],[132359,132359,4.53],[132360,132360,9.07],[132361,132361,7.52],[132362,132362,9.5],[132363,132363,7.88],[132364,132364,7.22],[132365,132365,4.53],[132366,132366,6.96],[132367,132367,6.02],[132368,132368,5.01],[132369,132369,3.95],[132370,132370,6.78],[132371,132371,4.99],[132372,132372,7.62],[132373,132373,6.93],[132374,132374,8.3],[132375,132375,6.81],[132376,132376,10.31],[132377,132377,7.37],[132378,132378,7.87],[132379,132379,6.23],[132380,132380,9.89],[132381,132381,8.18],[132382,132382,6.85],[132383,132383,6.31],[132384,132384,9.81],[132385,132385,7.96],[132386,132386,11.11],[132387,132387,9.08],[132388,132388,7.08],[132389,132389,6.18],[132390,132390,6.89],[132391,132391,6.31],[132392,132392,4.44],[132393,132393,4.03],[132394,132394,8.91],[132395,132395,8.13],[132396,132396,5.62],[132397,132397,5.24],[132398,132398,6.83],[132399,132399,6.07],[132400,132400,10],[132401,132401,8.31],[132402,132402,6.96],[132403,132403,7.58],[132404,132404,7.64],[132405,132405,6.96],[132406,132406,6.7],[132407,132407,6.29],[132408,132408,6.96],[132409,132409,8.11],[132410,132410,7.65],[132411,132411,7.02],[132412,132412,4.12],[132413,132413,8.19],[132414,132414,7.11],[132415,132415,7.09],[132416,132416,5.75],[132417,132417,6.49],[132418,132418,7.64],[132419,132419,6.88],[132420,132420,8.04],[132421,132421,6.27],[132422,132422,6.28],[132423,132423,6.54],[132424,132424,7.25],[132425,132425,6.34],[132426,132426,7.93],[132427,132427,6.42],[132428,132428,8.05],[132429,132429,7.25],[132430,132430,7.87],[132431,132431,5.71],[132432,132432,6.73],[132433,132433,6.68],[132434,132434,5.98],[132435,132435,8],[132436,132436,6.17],[132437,132437,7.76],[132438,132438,6.99],[132439,132440,10],[132441,132443,2.11],[132444,132444,2.91],[132445,132445,2.11],[132446,132446,4.42],[132447,132447,4.15],[132448,132448,10],[132449,132449,9.2],[132450,132450,5.97],[132451,132451,6.39],[132452,132452,6.33],[132453,132453,5.97],[132454,132454,6],[132455,132455,4.74],[132456,132456,5.97],[132457,132457,6.68],[132458,132458,6.09],[132459,132459,5.97],[132460,132460,2.65],[132461,132461,9.2],[132462,132462,5.89],[132463,132463,5.97],[132464,132464,5.62],[132465,132466,5.99],[132467,132467,5.76],[132468,132468,6.02],[132469,132469,2.65],[132470,132470,5.99],[132471,132471,4.14],[132472,132472,5.97],[132473,132473,3.44],[132474,132474,9.2],[132475,132475,5.17],[132476,132476,6.19],[132477,132477,5.97],[132478,132478,5.98],[132479,132479,9.31],[132480,132480,6.33],[132481,132481,5.99],[132482,132482,3.21],[132483,132483,9.31],[132484,132484,5.97],[132485,132485,5.84],[132486,132486,6.4],[132487,132487,6.3],[132488,132488,10],[132489,132489,2.54],[132490,132490,4.41],[132491,132492,10],[132493,132494,8.17],[132495,132495,7.32],[132496,132496,10],[132497,132541,0],[132542,132542,3.56],[132543,132543,0],[132544,132544,2.91],[132545,132546,0],[132547,132547,2.78],[132548,132549,0],[132550,132550,3.05],[132551,132551,0],[132552,132559,10],[132560,132560,4.81],[132561,132561,4.55],[132562,132562,3.35],[132563,132563,4.19],[132564,132564,4.71],[132565,132565,2.79],[132566,132566,2.86],[132567,132567,4.77],[132568,132568,4.76],[132569,132569,2.67],[132570,132570,4.52],[132571,132571,4.33],[132572,132572,4.32],[132573,132573,5.07],[132574,132574,4.85],[132575,132575,2.74],[132576,132576,3.05],[132577,132577,4.75],[132578,132579,4.54],[132580,132580,4.4],[132581,132581,4.82],[132582,132582,4.6],[132583,132583,4.74],[132584,132584,4.69],[132585,132585,6.1],[132586,132586,5],[132587,132591,10],[132592,132592,5.57],[132593,132593,5.45],[132594,132594,5.33],[132595,132595,2.09],[132596,132596,3.72],[132597,132607,10],[132608,132608,7.41],[132609,132609,13],[132610,132610,7.59],[132611,132611,9.19],[132612,132612,26.55],[132613,132613,10.94],[132614,132615,6.44],[132616,132616,7.78],[132617,132618,5.25],[132619,132619,2.63],[132620,132620,3.19],[132621,132621,2.39],[132622,132622,6.57],[132623,132623,5.44],[132624,132628,0],[132629,132629,2.69],[132630,132634,0],[132635,132635,3.19],[132636,132636,0],[132637,132637,10],[132638,132638,2.89],[132639,132639,3.56],[132640,132640,8.06],[132641,132641,4.13],[132642,132643,2.07],[132644,132644,4.32],[132645,132645,2.07],[132646,132646,6.38],[132647,132647,2.07],[132648,132648,7.13],[132649,132649,2.82],[132650,132651,7.13],[132652,132654,5.63],[132655,132656,3.37],[132657,132658,4.89],[132659,132660,8.21],[132661,132662,10.98],[132663,132664,5.82],[132665,132666,5.44],[132667,132668,7.04],[132669,132671,6.41],[132672,132672,2.07],[132673,132673,7.89],[132674,132674,5.82],[132675,132675,6.01],[132676,132676,5.06],[132677,132677,3.38],[132678,132678,5.26],[132679,132679,2.82],[132680,132680,4.32],[132681,132682,6.38],[132683,132703,0],[132704,132714,5.26],[132715,132716,3.19],[132717,132717,5.26],[132718,132718,7.13],[132719,132719,5.82],[132720,132720,0],[132721,132723,2.07],[132724,132724,0],[132725,132725,2.07],[132726,132727,4.32],[132728,132728,6.38],[132729,132736,7.13],[132737,132743,5.63],[132744,132752,3.37],[132753,132761,4.89],[132762,132764,8.21],[132765,132766,10.98],[132767,132767,5.82],[132768,132768,5.44],[132769,132774,7.89],[132775,132776,5.82],[132777,132777,8.12],[132778,132778,11.55],[132779,132779,8.12],[132780,132782,6.01],[132783,132788,8.12],[132789,132792,5.06],[132793,132797,5.26],[132798,132798,4.5],[132799,132799,5.63],[132800,132803,2.82],[132804,132811,4.32],[132812,132814,6.38],[132815,132815,4.32],[132816,132817,6.38],[132818,132819,8.12],[132820,132820,2.07],[132821,132821,2.82],[132822,132828,0],[132829,132829,11.23],[132830,132830,10.84],[132831,132840,0],[132841,132841,6],[132842,132845,0],[132846,132846,3.37],[132847,132847,4.89],[132848,132857,5.26],[132858,132858,8.21],[132859,132859,10.98],[132860,132860,5.44],[132861,132861,4.13],[132862,132862,3.38],[132863,132863,4.5],[132864,132864,5.91],[132865,132865,2.97],[132866,132868,2.57],[132869,132869,5.35],[132870,132871,3.86],[132872,132873,3.76],[132874,132874,5.79],[132875,132875,9.23],[132876,132876,6.94],[132877,132877,7.58],[132878,132878,10],[132879,132879,0],[132880,132880,9.3],[132881,132881,0],[132882,132882,9.58],[132883,132884,10.91],[132885,132886,5.39],[132887,132887,9.3],[132888,132888,6.1],[132889,132889,2.75],[132890,132890,7.01],[132891,132892,9.99],[132893,132893,2.43],[132894,132894,12.2],[132895,132895,8.89],[132896,132896,6.56],[132897,132897,8.85],[132898,132898,6.78],[132899,132900,8.86],[132901,132901,9.53],[132902,132902,8.43],[132903,132903,7.97],[132904,132904,6.26],[132905,132905,8.34],[132906,132906,5.39],[132907,132907,9.45],[132908,132908,7.43],[132909,132909,9.58],[132910,132910,10.91],[132911,132911,5.95],[132912,132938,0],[132939,132940,10],[132941,132941,5.83],[132942,132942,8.43],[132943,132943,6.56],[132944,132950,7.13],[132951,132952,5.63],[132953,132954,3.37],[132955,132955,4.89],[132956,132956,8.21],[132957,132959,5.44],[132960,132961,7.89],[132962,132964,8.12],[132965,132966,3.38],[132967,132969,5.26],[132970,132970,5.06],[132971,132972,4.89],[132973,132973,8.21],[132974,132975,5.84],[132976,132976,9.13],[132977,132977,4.08],[132978,132978,5.84],[132979,132980,2.92],[132981,132983,6.41],[132984,132985,3.92],[132986,132988,5.84],[132989,132990,9.13],[132991,132991,5.45],[132992,132992,5.29],[132993,132993,6.78],[132994,132994,8.09],[132995,132995,6.49],[132996,132996,7.12],[132997,132997,5.45],[132998,132998,5.5],[132999,132999,5.33],[133000,133000,5.38],[133001,133001,5.18],[133002,133002,4.49],[133003,133003,6.34],[133004,133004,6.49],[133005,133005,5.76],[133006,133006,5],[133007,133007,7.22],[133008,133008,10.19],[133009,133009,3.9],[133010,133010,5.7],[133011,133011,6.71],[133012,133012,7.28],[133013,133013,4.49],[133014,133014,5.83],[133015,133015,6.46],[133016,133016,6.18],[133017,133018,5.29],[133019,133019,6.34],[133020,133020,6.49],[133021,133023,10.19],[133024,133025,6.49],[133026,133027,5.38],[133028,133028,5],[133029,133029,5.06],[133030,133040,0],[133041,133041,4.73],[133042,133055,10],[133056,133056,5.4],[133057,133057,5.42],[133058,133058,5.45],[133059,133059,5.14],[133060,133061,5.39],[133062,133062,5.25],[133063,133064,5.42],[133065,133065,5.54],[133066,133066,2.65],[133067,133067,6.6],[133068,133068,4.37],[133069,133069,6.19],[133070,133070,5.93],[133071,133071,5.51],[133072,133072,6.45],[133073,133073,5.22],[133074,133074,6.85],[133075,133076,4.19],[133077,133077,5.64],[133078,133078,4.87],[133079,133079,3.77],[133080,133080,7.92],[133081,133081,3.91],[133082,133082,6.5],[133083,133083,7.08],[133084,133084,5.76],[133085,133085,7.33],[133086,133086,5.44],[133087,133087,5.78],[133088,133088,5.21],[133089,133089,5.76],[133090,133090,5.41],[133091,133092,5.44],[133093,133093,5.25],[133094,133094,5.21],[133095,133095,5.29],[133096,133097,4.53],[133098,133098,3.91],[133099,133107,0],[133108,133109,3.38],[133110,133110,5.54],[133111,133111,9.5],[133112,133113,4.81],[133114,133114,4.17],[133115,133119,10],[133120,133120,9.27],[133121,133121,7.76],[133122,133122,7.91],[133123,133123,6.58],[133124,133124,8.58],[133125,133125,9.26],[133126,133126,8.78],[133127,133127,9.45],[133128,133128,9.53],[133129,133129,10.94],[133130,133130,7.36],[133131,133131,6.07],[133132,133132,9.12],[133133,133133,7.27],[133134,133134,7.71],[133135,133135,8.98],[133136,133136,7.54],[133137,133137,10.72],[133138,133138,7.28],[133139,133139,7.13],[133140,133140,8.41],[133141,133141,9.37],[133142,133145,0],[133146,133146,4.05],[133147,133155,0],[133156,133156,2.29],[133157,133159,0],[133160,133160,2.47],[133161,133165,0],[133166,133167,10],[133168,133169,3.59],[133170,133170,5.91],[133171,133172,8.75],[133173,133173,5.79],[133174,133174,6.7],[133175,133175,13.09],[133176,133176,10.75],[133177,133178,10.64],[133179,133179,5.02],[133180,133180,6.16],[133181,133181,8.06],[133182,133182,4.25],[133183,133183,10],[133184,133184,5.34],[133185,133185,8.94],[133186,133186,4.77],[133187,133187,6.62],[133188,133188,9.01],[133189,133189,4.12],[133190,133190,2.49],[133191,133191,7.8],[133192,133192,6.76],[133193,133193,4.42],[133194,133194,6.71],[133195,133195,4.6],[133196,133196,9.91],[133197,133197,5.87],[133198,133198,9.93],[133199,133199,8.54],[133200,133200,7.2],[133201,133201,10.23],[133202,133202,8.62],[133203,133203,8.31],[133204,133204,9.13],[133205,133205,6.42],[133206,133206,7.63],[133207,133207,11.33],[133208,133208,4.76],[133209,133211,0],[133212,133213,10],[133214,133214,5.57],[133215,133279,10],[133280,133281,8.75],[133282,133282,6.76],[133283,133283,7.65],[133284,133284,9.22],[133285,133285,6.76],[133286,133286,6.33],[133287,133287,4.85],[133288,133289,7.58],[133290,133290,5.48],[133291,133291,4.29],[133292,133292,5.81],[133293,133293,2.39],[133294,133294,4.77],[133295,133295,11.27],[133296,133296,8.39],[133297,133297,4.69],[133298,133298,3.37],[133299,133299,6.16],[133300,133300,7.96],[133301,133301,10],[133302,133304,8.75],[133305,133305,3.42],[133306,133306,7.58],[133307,133307,9.26],[133308,133308,6.76],[133309,133309,5.99],[133310,133332,10],[133333,133333,5.25],[133334,133334,3.6],[133335,133335,3.7],[133336,133336,3.1],[133337,133337,2.97],[133338,133343,10],[133344,133344,5.13],[133345,133345,5.63],[133346,133346,10],[133347,133369,0],[133370,133370,10],[133371,133375,0],[133376,133378,6.6],[133379,133379,9.28],[133380,133381,7.25],[133382,133382,9.97],[133383,133384,5.31],[133385,133385,4.75],[133386,133386,6.75],[133387,133387,8.24],[133388,133388,7.16],[133389,133392,5.48],[133393,133396,9.97],[133397,133397,7.7],[133398,133398,7.92],[133399,133399,5.57],[133400,133400,6.35],[133401,133401,6.22],[133402,133402,6.44],[133403,133403,6.78],[133404,133404,7.41],[133405,133405,7.73],[133406,133406,7.01],[133407,133407,5.03],[133408,133408,5.74],[133409,133409,5.44],[133410,133410,5.26],[133411,133411,7.56],[133412,133412,5.56],[133413,133413,6.45],[133414,133414,5.23],[133415,133415,6.32],[133416,133417,5.13],[133418,133418,5.62],[133419,133419,7.94],[133420,133420,5.67],[133421,133421,5.83],[133422,133422,5.79],[133423,133423,6.09],[133424,133424,4.02],[133425,133425,4.08],[133426,133426,7.13],[133427,133428,7.33],[133429,133429,5.48],[133430,133430,7.18],[133431,133431,5.72],[133432,133432,6.8],[133433,133433,5.07],[133434,133434,6.6],[133435,133435,9.33],[133436,133436,6.6],[133437,133437,4.9],[133438,133440,9.33],[133441,133448,6.6],[133449,133452,9.33],[133453,133453,6.6],[133454,133455,9.33],[133456,133456,12.23],[133457,133460,0],[133461,133463,6.6],[133464,133464,7.7],[133465,133465,7.92],[133466,133466,5.57],[133467,133467,7.41],[133468,133468,5.44],[133469,133469,5.26],[133470,133470,7.94],[133471,133471,6.09],[133472,133472,8.24],[133473,133473,7.16],[133474,133475,6.6],[133476,133476,4.77],[133477,133477,7.43],[133478,133478,4.66],[133479,133479,4.83],[133480,133480,4.93],[133481,133481,4.87],[133482,133482,5.06],[133483,133483,5.4],[133484,133484,5.28],[133485,133485,6.51],[133486,133486,4.8],[133487,133487,4.77],[133488,133488,4.99],[133489,133489,3.13],[133490,133491,7.25],[133492,133493,9.97],[133494,133495,7.25],[133496,133496,5.15],[133497,133497,7.41],[133498,133498,6.09],[133499,133499,5.57],[133500,133500,7.24],[133501,133501,4.55],[133502,133502,5.54],[133503,133503,5.67],[133504,133504,5.65],[133505,133505,6.6],[133506,133506,10.97],[133507,133507,10.88],[133508,133508,10],[133509,133509,8.93],[133510,133510,11.67],[133511,133511,4.94],[133512,133512,6.58],[133513,133513,6.68],[133514,133514,6.83],[133515,133515,7.52],[133516,133516,6.14],[133517,133518,10],[133519,133519,7.07],[133520,133520,7.58],[133521,133522,10],[133523,133523,6.01],[133524,133524,7.11],[133525,133525,6.91],[133526,133526,6.57],[133527,133527,6.32],[133528,133528,6.24],[133529,133529,6.87],[133530,133530,5.25],[133531,133531,5.95],[133532,133532,7.96],[133533,133533,7.69],[133534,133534,9.48],[133535,133535,5.46],[133536,133536,5.43],[133537,133537,6.68],[133538,133538,5.47],[133539,133539,6.08],[133540,133540,6.81],[133541,133541,6.76],[133542,133542,5.47],[133543,133543,6.07],[133544,133544,6.29],[133545,133545,10],[133546,133546,6.54],[133547,133547,7.51],[133548,133548,5.49],[133549,133549,7.2],[133550,133550,5.85],[133551,133551,5.63],[133552,133552,5.49],[133553,133553,10],[133554,133554,7.38],[133555,133557,10],[133558,133558,6.97],[133559,133559,5.65],[133560,133560,6.59],[133561,133561,4.94],[133562,133563,10],[133564,133564,6.6],[133565,133565,4.62],[133566,133568,9.33],[133569,133572,6.6],[133573,133574,10],[133575,133576,9.31],[133577,133578,10],[133579,133580,12.04],[133581,133581,6.6],[133582,133582,5.22],[133583,133590,10],[133591,133591,9.33],[133592,133595,10],[133596,133596,6.68],[133597,133597,5.47],[133598,133598,10],[133599,133599,5.63],[133600,133600,7.52],[133601,133601,6.14],[133602,133603,6.6],[133604,133605,10],[133606,133606,5.94],[133607,133607,5.26],[133608,133608,4.78],[133609,133609,7.25],[133610,133610,5.01],[133611,133611,6.09],[133612,133612,6.36],[133613,133613,5.65],[133614,133614,6.93],[133615,133615,6.31],[133616,133616,5.53],[133617,133617,5.49],[133618,133618,4.14],[133619,133619,5.96],[133620,133620,3.98],[133621,133621,6.82],[133622,133622,6.32],[133623,133623,2.73],[133624,133624,5.66],[133625,133625,5.3],[133626,133626,6.33],[133627,133627,2.7],[133628,133632,10],[133633,133634,6.77],[133635,133635,8.87],[133636,133636,10],[133637,133637,7.06],[133638,133638,9.42],[133639,133640,8.02],[133641,133642,5.89],[133643,133646,10],[133647,133647,5.56],[133648,133648,7.06],[133649,133650,10],[133651,133651,5.87],[133652,133652,7.06],[133653,133653,5.67],[133654,133654,5.71],[133655,133655,7.26],[133656,133656,7.09],[133657,133657,5.32],[133658,133658,5.95],[133659,133659,5.76],[133660,133660,5.85],[133661,133661,5.35],[133662,133662,5.66],[133663,133663,5.29],[133664,133664,5.74],[133665,133665,5.36],[133666,133666,5.9],[133667,133667,5.6],[133668,133668,5.08],[133669,133669,5.78],[133670,133670,5.69],[133671,133671,5.57],[133672,133672,5.73],[133673,133673,10],[133674,133674,5.55],[133675,133675,5.53],[133676,133676,5.73],[133677,133677,5.36],[133678,133678,5.59],[133679,133679,6.84],[133680,133680,5.35],[133681,133681,10],[133682,133682,6.52],[133683,133683,6.54],[133684,133684,10],[133685,133685,5.49],[133686,133686,5.59],[133687,133687,10],[133688,133688,5.59],[133689,133689,5.35],[133690,133691,10],[133692,133692,6.77],[133693,133693,10],[133694,133694,9.13],[133695,133696,9.23],[133697,133698,6.77],[133699,133702,10],[133703,133704,6.77],[133705,133706,10],[133707,133709,6.77],[133710,133712,10],[133713,133713,6.77],[133714,133720,10],[133721,133721,5.71],[133722,133722,7.26],[133723,133723,5.85],[133724,133724,5.18],[133725,133725,10],[133726,133726,5.53],[133727,133733,10],[133734,133734,5.08],[133735,133735,4.64],[133736,133736,4.95],[133737,133737,4.91],[133738,133738,5.51],[133739,133739,5.65],[133740,133740,5.02],[133741,133741,5.22],[133742,133743,5.65],[133744,133745,6.77],[133746,133746,5.56],[133747,133747,5.89],[133748,133748,10.49],[133749,133749,6.77],[133750,133760,10],[133761,133762,6.51],[133763,133763,8.9],[133764,133764,10],[133765,133765,9.02],[133766,133766,11.73],[133767,133767,6.27],[133768,133768,6.28],[133769,133769,6.45],[133770,133770,8.97],[133771,133771,8.55],[133772,133772,6.8],[133773,133773,9.02],[133774,133774,10],[133775,133776,9.02],[133777,133777,11.73],[133778,133778,10],[133779,133780,11.73],[133781,133781,5.62],[133782,133782,7.69],[133783,133783,7.16],[133784,133784,6.66],[133785,133785,5.54],[133786,133786,7.02],[133787,133787,7.31],[133788,133788,6.34],[133789,133789,7.59],[133790,133790,7.15],[133791,133791,4.94],[133792,133792,6.03],[133793,133793,5.04],[133794,133794,5.72],[133795,133795,8.31],[133796,133796,5.85],[133797,133797,6.7],[133798,133798,4.88],[133799,133799,6.55],[133800,133800,5.38],[133801,133801,10],[133802,133802,5.72],[133803,133803,5.73],[133804,133804,7.74],[133805,133805,8.07],[133806,133806,5.76],[133807,133807,6.48],[133808,133808,4.74],[133809,133809,10],[133810,133810,6.69],[133811,133811,7.78],[133812,133812,10],[133813,133813,6.05],[133814,133814,7.37],[133815,133815,5.81],[133816,133816,7.33],[133817,133817,5.89],[133818,133819,10],[133820,133820,6.51],[133821,133821,5.19],[133822,133824,9.22],[133825,133829,6.51],[133830,133830,10],[133831,133832,6.51],[133833,133833,9.22],[133834,133834,10],[133835,133836,9.22],[133837,133837,6.51],[133838,133839,10],[133840,133840,11.12],[133841,133855,10],[133856,133856,8.86],[133857,133857,6.8],[133858,133859,6.51],[133860,133861,10],[133862,133862,4.87],[133863,133863,5.06],[133864,133864,4.79],[133865,133865,4.8],[133866,133866,5.29],[133867,133867,5.45],[133868,133868,4.84],[133869,133869,6.34],[133870,133870,4.72],[133871,133871,5.12],[133872,133872,4.1],[133873,133873,9.29],[133874,133880,10],[133881,133881,7.16],[133882,133888,10],[133889,133889,5.1],[133890,133890,8.12],[133891,133891,9.17],[133892,133892,10],[133893,133893,6.27],[133894,133894,8.21],[133895,133895,6.66],[133896,133896,6.73],[133897,133897,6.63],[133898,133898,6.85],[133899,133899,6.81],[133900,133900,5.08],[133901,133902,10],[133903,133903,6.42],[133904,133904,8.21],[133905,133906,10],[133907,133907,6.39],[133908,133908,8.2],[133909,133909,6.61],[133910,133910,6.58],[133911,133911,6.55],[133912,133912,6.48],[133913,133913,7.1],[133914,133914,6.35],[133915,133915,6.43],[133916,133916,6.61],[133917,133917,6.41],[133918,133918,6.51],[133919,133919,6.38],[133920,133920,7.16],[133921,133922,6.43],[133923,133923,6.45],[133924,133924,6.43],[133925,133925,6.27],[133926,133926,6.34],[133927,133927,5.81],[133928,133928,6.34],[133929,133929,10],[133930,133930,6.48],[133931,133931,7.89],[133932,133932,6.35],[133933,133933,6.75],[133934,133934,6.48],[133935,133935,6.83],[133936,133936,6.54],[133937,133937,10],[133938,133938,7.01],[133939,133939,6.61],[133940,133940,10],[133941,133941,6.35],[133942,133942,6.58],[133943,133943,6.6],[133944,133944,6.43],[133945,133945,6.2],[133946,133947,10],[133948,133948,5.1],[133949,133949,3.46],[133950,133950,6.99],[133951,133951,5.1],[133952,133952,8.06],[133953,133956,5.1],[133957,133958,10],[133959,133960,9.61],[133961,133962,10],[133963,133964,11.5],[133965,133965,5.1],[133966,133973,10],[133974,133974,5.1],[133975,133975,6.99],[133976,133979,10],[133980,133981,6.43],[133982,133982,10],[133983,133983,7.32],[133984,133984,6.86],[133985,133985,5.08],[133986,133987,5.1],[133988,133989,10],[133990,133999,5.72],[134000,134000,5.58],[134001,134001,5.73],[134002,134002,2.21],[134003,134003,3.79],[134004,134004,5.28],[134005,134005,4.74],[134006,134006,5.47],[134007,134007,6.15],[134008,134017,10],[134018,134018,5.62],[134019,134019,6.92],[134020,134020,10],[134021,134021,8.87],[134022,134022,10.63],[134023,134023,9.35],[134024,134024,6.26],[134025,134025,9.48],[134026,134026,11.23],[134027,134029,10],[134030,134031,7.1],[134032,134032,7.83],[134033,134033,10],[134034,134035,7.51],[134036,134036,15.39],[134037,134037,7.1],[134038,134040,10],[134041,134041,8.28],[134042,134042,6.48],[134043,134043,10],[134044,134044,7.53],[134045,134045,10],[134046,134046,9.5],[134047,134047,7.73],[134048,134050,10],[134051,134051,12.36],[134052,134052,6.79],[134053,134055,10],[134056,134056,6.69],[134057,134057,9.21],[134058,134058,5.85],[134059,134061,10],[134062,134062,6.68],[134063,134063,6.89],[134064,134064,5.34],[134065,134065,6.35],[134066,134066,7.96],[134067,134067,8.49],[134068,134068,6.68],[134069,134069,7.3],[134070,134070,9.06],[134071,134071,9.26],[134072,134072,10.02],[134073,134073,11.96],[134074,134077,10],[134078,134078,10.62],[134079,134079,7.27],[134080,134080,5.83],[134081,134081,9.55],[134082,134082,11.09],[134083,134085,10],[134086,134086,13],[134087,134087,11.69],[134088,134088,14.64],[134089,134089,10],[134090,134090,17.28],[134091,134091,16.2],[134092,134092,20.53],[134093,134093,5.62],[134094,134095,10],[134096,134096,8.37],[134097,134102,10],[134103,134103,13.66],[134104,134115,10],[134116,134116,3.28],[134117,134117,4.99],[134118,134118,5.33],[134119,134119,6.27],[134120,134120,6.28],[134121,134121,5.94],[134122,134122,6],[134123,134123,7.39],[134124,134124,8.29],[134125,134125,6.36],[134126,134126,8.61],[134127,134127,8.2],[134128,134128,7.07],[134129,134129,6.9],[134130,134130,7.77],[134131,134131,8.25],[134132,134132,7.23],[134133,134133,14.56],[134134,134134,7.38],[134135,134135,11.57],[134136,134136,12.46],[134137,134137,7.34],[134138,134138,10.21],[134139,134143,10],[134144,134144,6.6],[134145,134145,10.07],[134146,134146,12.81],[134147,134147,10.37],[134148,134148,10],[134149,134149,8.79],[134150,134150,8.56],[134151,134151,7.75],[134152,134152,10.1],[134153,134153,8.97],[134154,134154,12.25],[134155,134155,14.97],[134156,134156,9.98],[134157,134157,10],[134158,134159,7.65],[134160,134160,8.06],[134161,134161,10],[134162,134163,7.51],[134164,134164,7.73],[134165,134165,5.16],[134166,134166,9],[134167,134167,5.99],[134168,134168,11.05],[134169,134169,7.69],[134170,134171,8.04],[134172,134172,7.65],[134173,134173,13.13],[134174,134174,10.26],[134175,134175,8.49],[134176,134176,6.21],[134177,134178,8.2],[134179,134179,8.33],[134180,134180,8.18],[134181,134183,8.16],[134184,134184,7.6],[134185,134185,10],[134186,134187,7.64],[134188,134189,8.14],[134190,134190,11.07],[134191,134191,13.13],[134192,134192,6.21],[134193,134193,8.83],[134194,134194,7.73],[134195,134195,6.48],[134196,134196,8.83],[134197,134197,7.61],[134198,134198,5.57],[134199,134199,7.61],[134200,134200,7.63],[134201,134201,10.82],[134202,134204,10],[134205,134205,6.34],[134206,134206,9.86],[134207,134208,6.6],[134209,134209,10.08],[134210,134210,12.6],[134211,134211,10.85],[134212,134212,13.87],[134213,134213,10],[134214,134216,6.6],[134217,134217,10],[134218,134219,6.6],[134220,134220,9.93],[134221,134221,6.6],[134222,134228,10],[134229,134230,6.6],[134231,134231,10],[134232,134232,8.04],[134233,134233,7.65],[134234,134234,8.16],[134235,134239,10],[134240,134240,18.31],[134241,134241,13.46],[134242,134243,6.6],[134244,134245,10],[134246,134246,5.8],[134247,134247,5.68],[134248,134248,7],[134249,134249,5],[134250,134250,5.87],[134251,134251,6.47],[134252,134252,4.57],[134253,134253,5.16],[134254,134254,5.9],[134255,134255,4.57],[134256,134263,10],[134264,134264,5.25],[134265,134265,2.51],[134266,134266,4.76],[134267,134267,7.46],[134268,134268,6.76],[134269,134269,6.69],[134270,134270,6.64],[134271,134271,7.86],[134272,134272,5.56],[134273,134273,5.61],[134274,134274,11.11],[134275,134275,8.66],[134276,134276,10],[134277,134277,8.63],[134278,134278,8.41],[134279,134279,7.11],[134280,134280,10.1],[134281,134281,12.22],[134282,134282,15.97],[134283,134283,11.91],[134284,134284,8.46],[134285,134285,10],[134286,134287,7.87],[134288,134288,8.07],[134289,134289,10],[134290,134291,7.75],[134292,134292,7.78],[134293,134293,5.74],[134294,134294,8.49],[134295,134295,6.48],[134296,134296,9.96],[134297,134297,7.75],[134298,134298,7.97],[134299,134299,8.43],[134300,134300,7.75],[134301,134301,13.79],[134302,134302,9.66],[134303,134303,8.15],[134304,134304,6.51],[134305,134306,7.68],[134307,134307,8.64],[134308,134308,6.22],[134309,134311,7.65],[134312,134312,7.11],[134313,134313,10],[134314,134315,7.92],[134316,134316,8],[134317,134317,8.05],[134318,134318,11.56],[134319,134319,13.36],[134320,134320,6.51],[134321,134321,8.93],[134322,134322,7.59],[134323,134323,7.1],[134324,134324,10],[134325,134325,7.94],[134326,134326,6.3],[134327,134327,8.01],[134328,134328,7.09],[134329,134329,8.01],[134330,134331,10],[134332,134332,5.61],[134333,134333,4.46],[134334,134334,10.1],[134335,134335,8.88],[134336,134336,12.96],[134337,134337,9.25],[134338,134338,13.07],[134339,134339,6.84],[134340,134340,10.55],[134341,134341,10],[134342,134342,5.61],[134343,134343,9.69],[134344,134344,7.44],[134345,134345,10],[134346,134346,13.07],[134347,134347,17.15],[134348,134348,9.91],[134349,134349,8.74],[134350,134356,10],[134357,134357,9.69],[134358,134358,7.44],[134359,134365,10],[134366,134366,8.69],[134367,134367,10],[134368,134368,15.7],[134369,134369,12.86],[134370,134371,6.34],[134372,134373,10],[134374,134383,6.88],[134384,134384,10],[134385,134385,5.31],[134386,134386,7.52],[134387,134400,10],[134401,134401,0],[134402,134402,3.85],[134403,134403,2.83],[134404,134404,10],[134405,134405,12.39],[134406,134406,13.72],[134407,134407,8.99],[134408,134408,16.3],[134409,134409,6.36],[134410,134410,13.61],[134411,134411,8.03],[134412,134412,9.98],[134413,134413,10],[134414,134415,11.13],[134416,134416,16.33],[134417,134417,10],[134418,134418,6.36],[134419,134419,10.49],[134420,134420,13.52],[134421,134421,8.85],[134422,134422,7.99],[134423,134423,7.52],[134424,134424,12.05],[134425,134425,9.69],[134426,134426,8.3],[134427,134427,11.58],[134428,134428,7.97],[134429,134429,14.45],[134430,134430,12.57],[134431,134431,5.18],[134432,134432,5.8],[134433,134433,10.94],[134434,134434,11.26],[134435,134435,12.42],[134436,134436,8.72],[134437,134437,7.36],[134438,134438,5.56],[134439,134440,8.4],[134441,134441,9.08],[134442,134442,7.13],[134443,134443,10.26],[134444,134444,11.44],[134445,134445,5.79],[134446,134446,5.8],[134447,134447,8.82],[134448,134448,6.11],[134449,134449,5.71],[134450,134450,7.68],[134451,134451,6.5],[134452,134452,5.75],[134453,134453,7.99],[134454,134454,8.59],[134455,134455,10.11],[134456,134456,10.94],[134457,134457,11.02],[134458,134458,7.36],[134459,134460,10],[134461,134461,3.81],[134462,134462,9.81],[134463,134463,8.1],[134464,134464,8.02],[134465,134465,8.69],[134466,134466,8.75],[134467,134467,9.25],[134468,134468,9.29],[134469,134469,10],[134470,134470,11.43],[134471,134471,10.57],[134472,134472,16.67],[134473,134473,10],[134474,134474,15.55],[134475,134475,14.94],[134476,134476,13.3],[134477,134477,5.99],[134478,134478,1.73],[134479,134486,10],[134487,134487,13.3],[134488,134494,10],[134495,134495,11.89],[134496,134496,7.99],[134497,134497,11.01],[134498,134498,6.91],[134499,134499,7.51],[134500,134501,10],[134502,134502,5.8],[134503,134503,7.82],[134504,134504,7.99],[134505,134505,9.86],[134506,134506,6.18],[134507,134507,8.82],[134508,134508,12.05],[134509,134509,4.4],[134510,134510,7.99],[134511,134511,9.22],[134512,134512,8.4],[134513,134513,8.76],[134514,134514,11.95],[134515,134515,6.87],[134516,134516,7.49],[134517,134517,10.09],[134518,134520,10],[134521,134521,10.55],[134522,134522,13.41],[134523,134523,9.22],[134524,134524,6.18],[134525,134525,9.68],[134526,134526,8.51],[134527,134527,9.65],[134528,134529,10],[134530,134530,4.16],[134531,134531,2.78],[134532,134532,10],[134533,134533,5.69],[134534,134534,8.34],[134535,134535,8.23],[134536,134536,8.24],[134537,134537,5.74],[134538,134538,5.61],[134539,134539,5.95],[134540,134540,9.85],[134541,134541,9.69],[134542,134542,13.11],[134543,134543,7.21],[134544,134544,11.22],[134545,134545,6.44],[134546,134546,6.48],[134547,134547,10.52],[134548,134548,6.55],[134549,134549,6.53],[134550,134550,10.73],[134551,134553,10],[134554,134554,7.43],[134555,134555,7.03],[134556,134556,6.57],[134557,134557,5.88],[134558,134558,6.66],[134559,134559,7.92],[134560,134560,6.26],[134561,134561,5.61],[134562,134562,5.49],[134563,134563,11.84],[134564,134564,10.73],[134565,134565,9.83],[134566,134566,6.5],[134567,134567,5.95],[134568,134568,6.26],[134569,134569,6.77],[134570,134570,6.46],[134571,134571,8.9],[134572,134572,8.11],[134573,134573,6.93],[134574,134574,5.99],[134575,134575,5.12],[134576,134576,6.57],[134577,134577,6.81],[134578,134578,10],[134579,134579,6.53],[134580,134580,5.49],[134581,134581,6.43],[134582,134582,6.75],[134583,134583,7.74],[134584,134584,6.72],[134585,134585,6.57],[134586,134586,6.18],[134587,134587,5.46],[134588,134588,10],[134589,134589,6.18],[134590,134591,10],[134592,134592,6.13],[134593,134593,6.88],[134594,134594,5.45],[134595,134595,6.45],[134596,134596,7.42],[134597,134597,6.72],[134598,134598,6.26],[134599,134601,10],[134602,134602,6.05],[134603,134606,10],[134607,134607,8.56],[134608,134608,8.2],[134609,134609,8.29],[134610,134612,5.8],[134613,134613,10],[134614,134614,5.8],[134615,134615,10],[134616,134616,9.4],[134617,134617,10.53],[134618,134618,10.96],[134619,134619,15.66],[134620,134620,13.34],[134621,134621,13.04],[134622,134622,14.52],[134623,134623,10.03],[134624,134641,10],[134642,134642,12.92],[134643,134643,4.14],[134644,134644,10.97],[134645,134655,10],[134656,134656,1.95],[134657,134657,6],[134658,134658,5.72],[134659,134659,5.69],[134660,134660,6.39],[134661,134661,6.29],[134662,134662,6.35],[134663,134663,4.77],[134664,134664,5.28],[134665,134665,6.1],[134666,134666,5.86],[134667,134667,5.91],[134668,134668,8.18],[134669,134669,8.15],[134670,134671,6.61],[134672,134672,5.32],[134673,134673,6.92],[134674,134674,8.52],[134675,134675,8.18],[134676,134676,6.3],[134677,134677,6.29],[134678,134678,6],[134679,134679,6.3],[134680,134680,5.52],[134681,134681,6.19],[134682,134683,6.51],[134684,134685,5.95],[134686,134686,6.71],[134687,134687,6.76],[134688,134688,6.64],[134689,134689,6.3],[134690,134690,6.11],[134691,134691,4.78],[134692,134692,5.98],[134693,134693,5.82],[134694,134694,6.64],[134695,134695,5.11],[134696,134696,6.25],[134697,134697,6.48],[134698,134698,5.96],[134699,134699,6.32],[134700,134700,6.71],[134701,134701,5.78],[134702,134702,5.76],[134703,134703,6.14],[134704,134704,4.36],[134705,134705,5.08],[134706,134706,5.06],[134707,134707,10.23],[134708,134714,5.08],[134715,134718,10],[134719,134719,6.86],[134720,134720,3.16],[134721,134721,5.8],[134722,134722,5.11],[134723,134723,5.55],[134724,134724,4.22],[134725,134725,5.16],[134726,134726,6.05],[134727,134734,5.08],[134735,134735,7.32],[134736,134736,5.85],[134737,134737,6.14],[134738,134738,6.55],[134739,134739,6.78],[134740,134740,6.15],[134741,134741,6.03],[134742,134742,5.79],[134743,134743,7.63],[134744,134744,6.2],[134745,134745,6.68],[134746,134746,7.75],[134747,134747,12.73],[134748,134784,10],[134785,134785,6.18],[134786,134786,5.41],[134787,134787,10],[134788,134788,5.67],[134789,134790,10],[134791,134791,5.11],[134792,134792,5.56],[134793,134793,10],[134794,134794,5.49],[134795,134796,10],[134797,134797,5.67],[134798,134803,10],[134804,134804,5.83],[134805,134805,6.02],[134806,134806,6.23],[134807,134807,6.41],[134808,134808,10],[134809,134809,6.14],[134810,134810,5.27],[134811,134811,5.31],[134812,134812,6.75],[134813,134813,6.67],[134814,134814,6.65],[134815,134815,6.69],[134816,134816,10],[134817,134817,6.18],[134818,134818,5.59],[134819,134819,5.41],[134820,134820,10],[134821,134821,5.55],[134822,134822,10],[134823,134823,5.35],[134824,134825,10],[134826,134826,5.55],[134827,134827,7.68],[134828,134828,10],[134829,134829,5.55],[134830,134830,5.51],[134831,134831,5.28],[134832,134832,5.13],[134833,134833,0],[134834,134834,4.3],[134835,134841,0],[134842,134842,10],[134843,134844,0],[134845,134845,4.54],[134846,134847,10],[134848,134848,3.41],[134849,134849,5.91],[134850,134850,3.37],[134851,134851,3.4],[134852,134852,3.33],[134853,134853,10],[134854,134854,5.87],[134855,134855,10],[134856,134859,0],[134860,134860,3.25],[134861,134861,0],[134862,134863,10],[134864,134864,5.58],[134865,134865,5.08],[134866,134866,4.98],[134867,134867,5.75],[134868,134868,5.11],[134869,134869,5.27],[134870,134870,6.23],[134871,134871,6.28],[134872,134872,6.65],[134873,134873,6.27],[134874,134875,10],[134876,134877,10.01],[134878,134911,10],[134912,134912,6.23],[134913,134913,4.94],[134914,134915,7.69],[134916,134916,11.57],[134917,134917,5.97],[134918,134918,11.57],[134919,134919,14.87],[134920,134920,3.85],[134921,134921,5.77],[134922,134922,6.44],[134923,134924,1.6],[134925,134925,2.45],[134926,134926,4.58],[134927,134928,2.45],[134929,134929,3.13],[134930,134930,10.52],[134931,134931,5.95],[134932,134932,3.59],[134933,134933,6.48],[134934,134934,4.72],[134935,134935,7.52],[134936,134937,0],[134938,134938,2.93],[134939,134940,5.03],[134941,134941,3.05],[134942,134942,4.98],[134943,134943,5.31],[134944,134945,3.41],[134946,134946,5.43],[134947,134947,5.17],[134948,134948,6.92],[134949,134949,4.98],[134950,134951,5.69],[134952,134952,4.73],[134953,134953,5.07],[134954,134954,5.09],[134955,134955,5.43],[134956,134956,5.17],[134957,134957,6.92],[134958,134958,4.98],[134959,134960,5.69],[134961,134961,5.05],[134962,134962,5.07],[134963,134963,4.97],[134964,134964,5.25],[134965,134965,0],[134966,134966,4.97],[134967,134967,0],[134968,134968,5.47],[134969,134969,0],[134970,134970,13.58],[134971,134971,13.3],[134972,134972,4.88],[134973,134973,4.92],[134974,134974,2.86],[134975,134975,4.28],[134976,134978,5.17],[134979,134979,5.07],[134980,134980,4.73],[134981,134981,5.34],[134982,134982,5.17],[134983,134983,4.73],[134984,134984,10],[134985,134985,4.64],[134986,134988,4.73],[134989,134989,5.07],[134990,134993,4.73],[134994,134994,5.07],[134995,134995,4.73],[134996,134998,5.17],[134999,134999,5.07],[135000,135000,5.17],[135001,135001,5.34],[135002,135002,5.17],[135003,135003,4.73],[135004,135004,5.07],[135005,135006,4.73],[135007,135007,4.9],[135008,135008,4.73],[135009,135009,5.6],[135010,135010,4.9],[135011,135011,5.34],[135012,135014,5.17],[135015,135015,4.73],[135016,135016,6.04],[135017,135017,5.07],[135018,135018,4.9],[135019,135019,5.24],[135020,135020,5.3],[135021,135024,10],[135025,135025,5.44],[135026,135026,0],[135027,135027,5.44],[135028,135028,5.52],[135029,135029,10.96],[135030,135030,5.07],[135031,135031,10.51],[135032,135032,5.07],[135033,135033,10.51],[135034,135038,0],[135039,135039,4.62],[135040,135040,0],[135041,135041,5.44],[135042,135044,0],[135045,135045,5.16],[135046,135048,0],[135049,135049,5.25],[135050,135050,4.77],[135051,135051,5.23],[135052,135055,10],[135056,135063,5.07],[135064,135064,10],[135065,135100,5.07],[135101,135101,10],[135102,135102,5.11],[135103,135103,5.13],[135104,135104,5.8],[135105,135105,3.92],[135106,135106,4.9],[135107,135107,5.87],[135108,135108,4.13],[135109,135109,3.26],[135110,135110,0],[135111,135111,6.47],[135112,135112,3.55],[135113,135113,5.55],[135114,135114,5.98],[135115,135115,5.81],[135116,135116,6.16],[135117,135117,10],[135118,135118,6.32],[135119,135119,4.98],[135120,135120,20.12],[135121,135121,4.75],[135122,135122,2.1],[135123,135123,11.52],[135124,135124,4.86],[135125,135125,6.38],[135126,135126,6.57],[135127,135127,6.09],[135128,135128,6.35],[135129,135167,10],[135168,135168,11.24],[135169,135169,6.76],[135170,135170,6.68],[135171,135171,11.25],[135172,135172,6.5],[135173,135173,6.74],[135174,135174,11.27],[135175,135175,6.84],[135176,135176,8.69],[135177,135177,6.61],[135178,135178,11.09],[135179,135179,6.66],[135180,135180,6.59],[135181,135181,6.66],[135182,135182,6.77],[135183,135183,12.55],[135184,135184,11.24],[135185,135185,11.25],[135186,135186,6.4],[135187,135187,6.74],[135188,135188,5.7],[135189,135189,6.76],[135190,135190,6.75],[135191,135191,6.76],[135192,135192,11.24],[135193,135193,6.76],[135194,135194,11.26],[135195,135195,6.89],[135196,135196,11.26],[135197,135197,6.74],[135198,135198,11.27],[135199,135199,11.24],[135200,135200,6.66],[135201,135201,10.68],[135202,135202,11.23],[135203,135203,11],[135204,135204,13.43],[135205,135206,6.61],[135207,135207,6.31],[135208,135208,6.87],[135209,135209,13.69],[135210,135210,24.52],[135211,135211,8.61],[135212,135212,10.49],[135213,135216,5.94],[135217,135217,12.12],[135218,135223,5.94],[135224,135224,9.4],[135225,135226,5.94],[135227,135227,8.51],[135228,135228,8.23],[135229,135230,5.94],[135231,135231,15.84],[135232,135232,6.52],[135233,135233,6.23],[135234,135234,6.75],[135235,135236,6.18],[135237,135237,6.75],[135238,135238,7.2],[135239,135239,6.46],[135240,135240,6.52],[135241,135241,7.2],[135242,135242,2.7],[135243,135243,4.62],[135244,135244,6.66],[135245,135245,8.92],[135246,135246,6.59],[135247,135247,11.37],[135248,135248,6.68],[135249,135249,6.76],[135250,135251,6.61],[135252,135252,6.6],[135253,135253,6.51],[135254,135254,9.63],[135255,135255,9.67],[135256,135257,5.94],[135258,135258,6.18],[135259,135259,8.69],[135260,135260,6.69],[135261,135261,6.59],[135262,135264,5.94],[135265,135265,6.89],[135266,135266,9.3],[135267,135267,12.55],[135268,135268,9.95],[135269,135269,6.67],[135270,135270,6.53],[135271,135271,10.28],[135272,135272,9.3],[135273,135273,10.17],[135274,135276,10.28],[135277,135277,10.17],[135278,135278,12.53],[135279,135279,11.02],[135280,135280,11.04],[135281,135284,5.94],[135285,135285,6.67],[135286,135286,6.72],[135287,135287,6.74],[135288,135288,11.25],[135289,135289,11.26],[135290,135290,11.04],[135291,135291,11.26],[135292,135292,11.29],[135293,135293,11.28],[135294,135294,10.99],[135295,135295,6.77],[135296,135296,11.24],[135297,135297,6.53],[135298,135298,5.94],[135299,135299,9.3],[135300,135300,11.86],[135301,135302,5.94],[135303,135303,9.41],[135304,135305,9.4],[135306,135306,10.28],[135307,135307,9.4],[135308,135308,12.48],[135309,135309,5.94],[135310,135310,6.73],[135311,135311,9.4],[135312,135312,7.61],[135313,135313,6.46],[135314,135314,6.78],[135315,135315,7.2],[135316,135316,7.34],[135317,135318,7.18],[135319,135319,5.55],[135320,135321,6.53],[135322,135322,9.4],[135323,135323,9.41],[135324,135324,10.28],[135325,135325,5.94],[135326,135326,3.36],[135327,135327,9.54],[135328,135328,6.62],[135329,135329,6.77],[135330,135330,7.08],[135331,135331,6.96],[135332,135332,6.09],[135333,135333,7.9],[135334,135334,6.64],[135335,135335,7.85],[135336,135336,5.6],[135337,135337,6.34],[135338,135338,7.82],[135339,135339,7.01],[135340,135340,6.29],[135341,135341,6.82],[135342,135342,7.05],[135343,135343,6.92],[135344,135344,7.34],[135345,135345,6.15],[135346,135346,5.92],[135347,135347,6.8],[135348,135348,6.79],[135349,135349,7.05],[135350,135350,6.43],[135351,135352,6.23],[135353,135353,6.29],[135354,135354,6.33],[135355,135355,7.7],[135356,135356,5.92],[135357,135357,6.62],[135358,135358,6.29],[135359,135359,6.72],[135360,135360,7.35],[135361,135361,5.76],[135362,135362,6.06],[135363,135363,6.05],[135364,135364,6.76],[135365,135365,7.92],[135366,135375,10],[135376,135376,5.18],[135377,135377,5.69],[135378,135378,5.27],[135379,135379,8.31],[135380,135380,5.39],[135381,135381,5.34],[135382,135382,6.21],[135383,135383,8.47],[135384,135384,5.38],[135385,135385,5.22],[135386,135386,9.72],[135387,135387,5.76],[135388,135388,5.77],[135389,135389,7.36],[135390,135390,5.34],[135391,135391,5.57],[135392,135392,7.39],[135393,135393,5.52],[135394,135394,6.63],[135395,135395,5.57],[135396,135396,8],[135397,135397,5.35],[135398,135398,7.36],[135399,135399,5.51],[135400,135400,5.8],[135401,135401,5.66],[135402,135402,5.88],[135403,135403,5.75],[135404,135404,5.8],[135405,135405,6.02],[135406,135406,5.75],[135407,135407,5.18],[135408,135408,5.3],[135409,135409,5.93],[135410,135410,5.3],[135411,135412,5.43],[135413,135413,5.91],[135414,135414,7.34],[135415,135415,5.18],[135416,135416,5.56],[135417,135417,5.27],[135418,135418,5.18],[135419,135419,5.37],[135420,135420,3.7],[135421,135421,5.77],[135422,135422,5.38],[135423,135423,5.69],[135424,135442,8.65],[135443,135518,10],[135519,135520,0],[135521,135541,8.65],[135542,135581,10],[135582,135582,8.65],[135583,135585,10],[135586,135586,8.65],[135587,135591,10],[135592,135618,8.65],[135619,135679,10],[135680,135680,6.94],[135681,135681,9.01],[135682,135682,6.45],[135683,135683,6.65],[135684,135684,6.54],[135685,135685,7.29],[135686,135686,8.97],[135687,135687,10.89],[135688,135688,6.47],[135689,135689,8.31],[135690,135690,8.3],[135691,135691,6.47],[135692,135692,8.56],[135693,135693,7.33],[135694,135694,10.53],[135695,135695,8.61],[135696,135696,10.21],[135697,135697,12.18],[135698,135698,12.17],[135699,135699,10.21],[135700,135700,12.12],[135701,135701,10.21],[135702,135702,10.26],[135703,135703,12.25],[135704,135704,10.87],[135705,135705,13.48],[135706,135706,11.48],[135707,135707,10.87],[135708,135708,11.45],[135709,135710,10.87],[135711,135711,11.47],[135712,135712,9.88],[135713,135713,12.24],[135714,135714,10.09],[135715,135715,9.87],[135716,135716,10.11],[135717,135717,11.07],[135718,135718,9.74],[135719,135719,10.08],[135720,135720,6.13],[135721,135721,7.1],[135722,135722,6.91],[135723,135723,9.02],[135724,135724,8.33],[135725,135725,6.23],[135726,135726,8.18],[135727,135727,9.02],[135728,135728,6.76],[135729,135729,8.8],[135730,135730,8.77],[135731,135731,6.76],[135732,135732,8.72],[135733,135734,6.76],[135735,135735,8.85],[135736,135736,7.61],[135737,135737,9.19],[135738,135738,9.16],[135739,135739,7.61],[135740,135740,9.1],[135741,135741,8],[135742,135742,7.61],[135743,135743,9.23],[135744,135751,8.51],[135752,135752,9.7],[135753,135753,10],[135754,135754,12.24],[135755,135756,8.51],[135757,135757,12.27],[135758,135759,10],[135760,135764,8.8],[135765,135765,9.69],[135766,135766,8.8],[135767,135767,10],[135768,135768,9.87],[135769,135769,10],[135770,135770,12.41],[135771,135772,8.8],[135773,135773,10.66],[135774,135775,10],[135776,135776,7.12],[135777,135777,9],[135778,135778,8.97],[135779,135779,7.13],[135780,135780,8.92],[135781,135781,9.26],[135782,135782,7.12],[135783,135783,9.04],[135784,135784,7.61],[135785,135785,9.19],[135786,135786,9.16],[135787,135787,7.61],[135788,135788,9.1],[135789,135789,9.46],[135790,135790,7.61],[135791,135791,9.23],[135792,135794,7.76],[135795,135795,7.82],[135796,135796,7.86],[135797,135800,7.76],[135801,135801,7.77],[135802,135802,7.76],[135803,135803,7.82],[135804,135804,7.76],[135805,135805,9.13],[135806,135806,7.91],[135807,135807,7.76],[135808,135808,6.93],[135809,135809,8.66],[135810,135810,8.17],[135811,135811,6.94],[135812,135812,8.06],[135813,135813,6.69],[135814,135815,10.22],[135816,135816,10.35],[135817,135817,10],[135818,135818,9.81],[135819,135819,7.58],[135820,135820,8.06],[135821,135821,9.81],[135822,135823,10],[135824,135824,5.31],[135825,135825,7.03],[135826,135826,6.54],[135827,135827,6.33],[135828,135828,6.44],[135829,135829,6.84],[135830,135830,7.91],[135831,135831,7.37],[135832,135832,7.56],[135833,135833,8.73],[135834,135834,8.24],[135835,135835,7.56],[135836,135836,8.13],[135837,135837,7.56],[135838,135838,9.23],[135839,135839,7.82],[135840,135840,6.39],[135841,135842,8.63],[135843,135843,6.39],[135844,135844,8.57],[135845,135845,6.56],[135846,135846,6.42],[135847,135847,7.94],[135848,135848,7.2],[135849,135849,9.25],[135850,135850,9.21],[135851,135851,7.2],[135852,135852,9.16],[135853,135854,7.2],[135855,135855,8.97],[135856,135856,11.18],[135857,135857,10],[135858,135858,10.4],[135859,135859,8.68],[135860,135860,9.16],[135861,135861,10.4],[135862,135863,10],[135864,135864,8.95],[135865,135865,10.99],[135866,135866,10.96],[135867,135867,8.95],[135868,135868,10.9],[135869,135870,8.95],[135871,135871,10],[135872,135872,12.92],[135873,135873,10],[135874,135874,12.15],[135875,135875,11.04],[135876,135876,10.9],[135877,135877,12.14],[135878,135879,10],[135880,135880,9.33],[135881,135881,11.05],[135882,135884,9.33],[135885,135885,11.73],[135886,135886,9.33],[135887,135887,11.69],[135888,135888,6.74],[135889,135889,8.95],[135890,135890,8.67],[135891,135891,6.51],[135892,135892,8.66],[135893,135893,6.54],[135894,135894,7.07],[135895,135895,10],[135896,135896,7.41],[135897,135897,9.14],[135898,135898,9.15],[135899,135899,7.41],[135900,135900,9.12],[135901,135901,8.99],[135902,135902,7.41],[135903,135903,9.26],[135904,135908,11.18],[135909,135909,12.42],[135910,135911,11.18],[135912,135912,5.81],[135913,135913,7.26],[135914,135914,8.32],[135915,135915,5.95],[135916,135916,9.43],[135917,135917,7],[135918,135918,8.17],[135919,135919,10.05],[135920,135920,7.66],[135921,135921,10.24],[135922,135922,9.65],[135923,135923,7.49],[135924,135924,9.14],[135925,135925,8.41],[135926,135926,8.3],[135927,135927,9.67],[135928,135928,7.61],[135929,135929,9.87],[135930,135930,9.29],[135931,135931,7.12],[135932,135932,9.09],[135933,135933,9],[135934,135934,8.3],[135935,135935,9.31],[135936,135936,7.76],[135937,135937,10.34],[135938,135938,9.76],[135939,135939,7.59],[135940,135940,9.56],[135941,135941,9.16],[135942,135942,8.34],[135943,135943,9.78],[135944,135944,5.83],[135945,135945,8.33],[135946,135946,6.06],[135947,135947,6.37],[135948,135948,6.01],[135949,135949,8.03],[135950,135950,5.83],[135951,135951,7.18],[135952,135952,10.27],[135953,135953,10],[135954,135954,9.5],[135955,135955,6.25],[135956,135956,7.35],[135957,135957,9.5],[135958,135959,10],[135960,135960,7.37],[135961,135961,9.05],[135962,135964,7.37],[135965,135965,8.8],[135966,135966,7.91],[135967,135967,7.37],[135968,135968,11.04],[135969,135969,12.96],[135970,135970,12.95],[135971,135971,10.99],[135972,135972,12.91],[135973,135973,10.7],[135974,135974,11.04],[135975,135975,12.98],[135976,135976,13.61],[135977,135977,13.82],[135978,135978,13.76],[135979,135979,13.61],[135980,135980,16.6],[135981,135981,13.2],[135982,135982,13.39],[135983,135983,13.84],[135984,135984,6.67],[135985,135985,8.78],[135986,135986,8.68],[135987,135987,6.53],[135988,135988,8.62],[135989,135989,8.49],[135990,135990,6.71],[135991,135991,8.62],[135992,135992,6.91],[135993,135993,8.93],[135994,135994,8.82],[135995,135995,6.68],[135996,135996,8.77],[135997,135997,8.66],[135998,135998,6.96],[135999,135999,8.67],[136000,136000,6.74],[136001,136001,8.95],[136002,136002,6.91],[136003,136003,6.13],[136004,136004,6.93],[136005,136005,6.54],[136006,136006,7.02],[136007,136007,8.31],[136008,136008,8.55],[136009,136009,8.65],[136010,136010,9.27],[136011,136011,8.65],[136012,136012,10.2],[136013,136013,8.41],[136014,136014,8.57],[136015,136015,8.41],[136016,136016,7.76],[136017,136017,7.77],[136018,136018,7.76],[136019,136019,7.82],[136020,136023,7.76],[136024,136024,8.05],[136025,136025,11.46],[136026,136026,9.4],[136027,136030,10],[136031,136031,7.12],[136032,136032,9.1],[136033,136033,3],[136034,136034,6.17],[136035,136037,3.58],[136038,136038,4.98],[136039,136039,3],[136040,136040,9.35],[136041,136041,5.55],[136042,136042,5.05],[136043,136043,5.36],[136044,136044,5.5],[136045,136045,6.54],[136046,136046,6.03],[136047,136047,6.12],[136048,136048,6.49],[136049,136049,5.63],[136050,136050,4.17],[136051,136051,7.47],[136052,136052,7.41],[136053,136053,8.73],[136054,136054,5.5],[136055,136055,6.49],[136056,136056,7.88],[136057,136057,8.2],[136058,136058,5.25],[136059,136059,5.64],[136060,136060,10.38],[136061,136063,10],[136064,136064,15.46],[136065,136065,14.14],[136066,136066,11.45],[136067,136067,15.24],[136068,136068,10.99],[136069,136069,10.23],[136070,136070,8.92],[136071,136071,13.13],[136072,136073,9.86],[136074,136074,10.77],[136075,136075,12.35],[136076,136076,9.76],[136077,136077,8.81],[136078,136078,7.86],[136079,136079,10.74],[136080,136080,2.9],[136081,136081,5.5],[136082,136083,2.9],[136084,136084,5.5],[136085,136085,6.87],[136086,136086,4.59],[136087,136087,8.96],[136088,136088,10.4],[136089,136089,5.05],[136090,136095,10],[136096,136096,7.26],[136097,136097,6.87],[136098,136098,5.86],[136099,136099,7.55],[136100,136100,8.97],[136101,136101,3.14],[136102,136102,7],[136103,136103,8.33],[136104,136104,5.12],[136105,136105,6.36],[136106,136106,6.72],[136107,136107,5.29],[136108,136108,5.91],[136109,136109,7.76],[136110,136110,5.34],[136111,136111,7.52],[136112,136112,5.34],[136113,136113,5.38],[136114,136114,8.27],[136115,136115,9.12],[136116,136116,7.04],[136117,136117,5.46],[136118,136118,7.15],[136119,136119,8.61],[136120,136120,5.3],[136121,136121,8.53],[136122,136122,9.58],[136123,136123,7.5],[136124,136124,5.12],[136125,136125,7.01],[136126,136126,7.29],[136127,136127,6.34],[136128,136128,7.07],[136129,136129,7.58],[136130,136130,6.3],[136131,136131,6.05],[136132,136132,5.55],[136133,136133,9.61],[136134,136134,5.92],[136135,136135,8.18],[136136,136136,7.14],[136137,136137,10.88],[136138,136138,8.18],[136139,136139,6.28],[136140,136140,7.33],[136141,136141,9.08],[136142,136143,6.55],[136144,136144,5.13],[136145,136145,6.89],[136146,136146,6.87],[136147,136147,5.58],[136148,136148,9.43],[136149,136149,7.1],[136150,136150,6.97],[136151,136151,5.93],[136152,136152,5.88],[136153,136153,6.9],[136154,136154,6.55],[136155,136155,8.78],[136156,136156,8.1],[136157,136157,5.7],[136158,136158,5.38],[136159,136159,6.82],[136160,136160,7.02],[136161,136161,8.51],[136162,136162,6.45],[136163,136163,6.95],[136164,136164,6.9],[136165,136165,7.92],[136166,136166,6.99],[136167,136167,5.07],[136168,136168,8.82],[136169,136169,7.74],[136170,136170,9.17],[136171,136171,7.29],[136172,136172,8.52],[136173,136173,6.64],[136174,136174,6.46],[136175,136175,8.18],[136176,136176,6.51],[136177,136177,7.53],[136178,136178,6.46],[136179,136179,8.66],[136180,136180,7.02],[136181,136181,6.95],[136182,136183,9.22],[136184,136184,5.41],[136185,136185,6.25],[136186,136186,5.37],[136187,136187,7.18],[136188,136188,5.83],[136189,136189,5.77],[136190,136190,8.21],[136191,136191,9.22],[136192,136192,10],[136193,136196,7.93],[136197,136201,7.46],[136202,136203,7.48],[136204,136204,8.03],[136205,136206,8.02],[136207,136208,8.03],[136209,136209,8.02],[136210,136210,8.84],[136211,136211,9.35],[136212,136212,8.84],[136213,136213,9.35],[136214,136214,7.46],[136215,136215,9.34],[136216,136216,8.83],[136217,136217,9.35],[136218,136218,8.83],[136219,136219,7.46],[136220,136220,6.65],[136221,136221,5.91],[136222,136222,4.95],[136223,136224,3.19],[136225,136226,4.59],[136227,136227,3.41],[136228,136228,4.81],[136229,136229,5],[136230,136230,3.18],[136231,136231,2.08],[136232,136232,4],[136233,136233,4.13],[136234,136234,3.99],[136235,136235,11.1],[136236,136236,8.9],[136237,136237,9.58],[136238,136238,10.48],[136239,136239,8.31],[136240,136242,8.29],[136243,136247,7.59],[136248,136249,7.6],[136250,136252,8.39],[136253,136253,8.53],[136254,136254,8.39],[136255,136255,8.31],[136256,136256,8.61],[136257,136257,9.24],[136258,136258,8.61],[136259,136259,9.24],[136260,136260,9.3],[136261,136261,8.61],[136262,136262,9.36],[136263,136263,8.61],[136264,136264,7.6],[136265,136265,4.19],[136266,136266,1.39],[136267,136267,3.68],[136268,136271,8.16],[136272,136278,7.02],[136279,136279,9.68],[136280,136280,9.39],[136281,136281,9.38],[136282,136282,9.69],[136283,136283,9.38],[136284,136284,9.69],[136285,136285,8.23],[136286,136286,8.4],[136287,136287,8.23],[136288,136288,8.4],[136289,136289,8.41],[136290,136290,8.23],[136291,136291,8.4],[136292,136292,8.23],[136293,136293,8.41],[136294,136294,3.41],[136295,136296,9.58],[136297,136298,8.73],[136299,136307,6.25],[136308,136309,7.65],[136310,136310,7.37],[136311,136311,7.92],[136312,136312,7.36],[136313,136313,7.92],[136314,136322,7.65],[136323,136324,3.87],[136325,136325,7.75],[136326,136326,8.03],[136327,136328,7.87],[136329,136337,6.51],[136338,136352,7.9],[136353,136354,3.74],[136355,136355,6.43],[136356,136363,6.22],[136364,136364,7.24],[136365,136365,7.82],[136366,136366,7.61],[136367,136367,7.03],[136368,136368,7.61],[136369,136370,7.03],[136371,136371,7.61],[136372,136372,7.03],[136373,136374,7.61],[136375,136375,7.03],[136376,136376,7.61],[136377,136377,7.03],[136378,136378,7.5],[136379,136379,3.48],[136380,136380,3.41],[136381,136381,3.48],[136382,136382,4.31],[136383,136383,6.05],[136384,136392,9.17],[136393,136395,10.57],[136396,136396,9.17],[136397,136397,10.57],[136398,136399,9.17],[136400,136400,5.41],[136401,136401,4.59],[136402,136402,5.41],[136403,136411,8.73],[136412,136413,10.12],[136414,136414,9.9],[136415,136415,10.35],[136416,136416,9.9],[136417,136417,10.34],[136418,136418,8.73],[136419,136419,10.13],[136420,136420,8.73],[136421,136422,10.12],[136423,136423,8.84],[136424,136424,9.9],[136425,136425,8.84],[136426,136426,4.98],[136427,136427,4.46],[136428,136428,6.68],[136429,136437,5.87],[136438,136438,7.02],[136439,136439,7.27],[136440,136440,7.25],[136441,136441,7.01],[136442,136442,7.4],[136443,136443,7.01],[136444,136444,6.34],[136445,136445,7.73],[136446,136446,6.34],[136447,136447,7.73],[136448,136448,7.39],[136449,136449,7.53],[136450,136450,7.85],[136451,136451,7.11],[136452,136452,7.27],[136453,136453,3.57],[136454,136454,4.09],[136455,136455,3.57],[136456,136456,4.98],[136457,136458,3.56],[136459,136459,3.57],[136460,136460,11.17],[136461,136461,10.72],[136462,136462,9.82],[136463,136463,10.08],[136464,136466,8.61],[136467,136470,6.78],[136471,136476,10],[136477,136484,8.17],[136485,136485,5.2],[136486,136494,5.78],[136495,136500,7.17],[136501,136501,7.47],[136502,136502,7.17],[136503,136503,7.47],[136504,136509,7.17],[136510,136510,3.47],[136511,136511,4.63],[136512,136513,3.38],[136514,136519,9.41],[136520,136525,6.16],[136526,136527,7.55],[136528,136528,3.63],[136529,136529,4.46],[136530,136530,6.68],[136531,136534,8.08],[136535,136538,8.59],[136539,136539,9.98],[136540,136540,9.88],[136541,136541,4.88],[136542,136547,8.37],[136548,136551,7.5],[136552,136553,8.89],[136554,136554,4.58],[136555,136556,8.16],[136557,136558,7.02],[136559,136559,6.01],[136560,136561,8.16],[136562,136563,7.02],[136564,136566,7.81],[136567,136570,7.68],[136571,136571,4.93],[136572,136572,7.13],[136573,136573,3.33],[136574,136580,9.88],[136581,136581,7.5],[136582,136585,6.25],[136586,136589,8.07],[136590,136592,11.97],[136593,136594,9.58],[136595,136596,11.97],[136597,136597,5.46],[136598,136598,8.44],[136599,136602,6.25],[136603,136606,9.17],[136607,136607,5.41],[136608,136613,8.73],[136614,136614,4.98],[136615,136621,5.78],[136622,136622,3.47],[136623,136623,5.69],[136624,136627,5.07],[136628,136631,5.76],[136632,136643,7.24],[136644,136645,8.31],[136646,136649,7.59],[136650,136651,8.31],[136652,136655,7.59],[136656,136657,8.31],[136658,136661,7.59],[136662,136663,8.31],[136664,136667,7.59],[136668,136669,8.02],[136670,136673,6.79],[136674,136675,8.02],[136676,136679,6.49],[136680,136681,8.22],[136682,136685,6.9],[136686,136686,3.99],[136687,136688,9.9],[136689,136692,5.67],[136693,136694,9.9],[136695,136698,6.64],[136699,136700,9.9],[136701,136704,6.64],[136705,136705,4.76],[136706,136707,6.51],[136708,136711,8.9],[136712,136713,9.9],[136714,136717,5.67],[136718,136719,8.22],[136720,136723,6.84],[136724,136726,6.38],[136727,136731,9.07],[136732,136733,6.75],[136734,136737,9.08],[136738,136739,9.33],[136740,136743,6.25],[136744,136745,9.41],[136746,136749,6.46],[136750,136751,8.69],[136752,136752,6.25],[136753,136754,6.22],[136755,136755,6.25],[136756,136757,9.79],[136758,136761,6.35],[136762,136763,11.37],[136764,136767,5.79],[136768,136769,7.62],[136770,136773,6.88],[136774,136775,4.07],[136776,136777,7.62],[136778,136781,6.88],[136782,136783,10.19],[136784,136787,5.67],[136788,136789,10.19],[136790,136793,6.16],[136794,136794,3.76],[136795,136796,10.19],[136797,136798,6.37],[136799,136799,6.38],[136800,136800,6.37],[136801,136802,10.19],[136803,136806,5.67],[136807,136808,10.19],[136809,136810,6.37],[136811,136811,6.38],[136812,136812,6.37],[136813,136813,6.25],[136814,136814,4.79],[136815,136815,9.88],[136816,136817,14.94],[136818,136818,15.28],[136819,136820,12.61],[136821,136822,14.94],[136823,136831,10],[136832,136832,4.45],[136833,136833,3.01],[136834,136834,4.45],[136835,136835,5.89],[136836,136836,7.33],[136837,136837,8.77],[136838,136838,3.01],[136839,136839,4.45],[136840,136840,5.89],[136841,136841,7.33],[136842,136842,8.77],[136843,136843,3.01],[136844,136844,4.45],[136845,136845,5.89],[136846,136846,7.33],[136847,136847,8.77],[136848,136848,3.01],[136849,136849,4.45],[136850,136850,5.89],[136851,136851,7.33],[136852,136852,8.77],[136853,136853,3.01],[136854,136854,4.45],[136855,136856,5.89],[136857,136857,7.33],[136858,136858,5.89],[136859,136860,4.55],[136861,136863,10],[136864,136864,6.81],[136865,136865,7.06],[136866,136866,6.84],[136867,136867,5.99],[136868,136869,6.84],[136870,136871,5.25],[136872,136872,3.96],[136873,136874,5.89],[136875,136875,5.56],[136876,136876,5.05],[136877,136877,3.96],[136878,136878,4.02],[136879,136879,5.17],[136880,136880,5.19],[136881,136881,5.01],[136882,136882,3.34],[136883,136883,4.45],[136884,136885,5.69],[136886,136886,5.89],[136887,136887,5.86],[136888,136888,6.44],[136889,136889,4.39],[136890,136891,7.31],[136892,136892,5.13],[136893,136893,3.27],[136894,136894,5.08],[136895,136895,3.96],[136896,136896,5.08],[136897,136897,2.85],[136898,136898,3.27],[136899,136899,5.12],[136900,136900,4.87],[136901,136901,5.19],[136902,136902,4.02],[136903,136903,5.08],[136904,136904,4.59],[136905,136905,6.07],[136906,136906,3.81],[136907,136907,6.53],[136908,136908,2.85],[136909,136909,3.27],[136910,136910,5.19],[136911,136911,5.13],[136912,136912,4.03],[136913,136913,4.24],[136914,136914,5.09],[136915,136915,4.02],[136916,136916,5.5],[136917,136917,5.17],[136918,136918,7.36],[136919,136919,7.54],[136920,136920,6.62],[136921,136921,3.52],[136922,136922,3.97],[136923,136923,4.29],[136924,136924,5.31],[136925,136925,5.88],[136926,136926,7.31],[136927,136927,5.82],[136928,136928,6.33],[136929,136929,5.13],[136930,136930,6.33],[136931,136931,6.07],[136932,136932,6.86],[136933,136933,7.31],[136934,136934,6.62],[136935,136935,2.85],[136936,136936,5.19],[136937,136937,4.39],[136938,136938,7.65],[136939,136939,3.66],[136940,136940,2.77],[136941,136941,4.63],[136942,136942,5.13],[136943,136943,6.62],[136944,136944,6.02],[136945,136945,5.16],[136946,136946,5.52],[136947,136947,4.56],[136948,136948,5.53],[136949,136949,3.72],[136950,136950,4.74],[136951,136951,5.04],[136952,136952,5.66],[136953,136959,10],[136960,136960,10.14],[136961,136961,10.11],[136962,136962,5.35],[136963,136963,9.84],[136964,136964,8.37],[136965,136965,10.11],[136966,136966,9.75],[136967,136967,10.48],[136968,136968,8.5],[136969,136969,10.7],[136970,136970,8.51],[136971,136971,10.3],[136972,136972,10.29],[136973,136973,10],[136974,136974,9.13],[136975,136975,7.61],[136976,136976,9.22],[136977,136977,10.49],[136978,136980,5.94],[136981,136991,10],[136992,136992,8.8],[136993,136993,8.76],[136994,136994,5.21],[136995,136995,6.27],[136996,136996,7.84],[136997,136997,8.05],[136998,136998,9.6],[136999,136999,8.7],[137000,137000,9.66],[137001,137001,8.73],[137002,137002,5.19],[137003,137003,8.72],[137004,137004,8.75],[137005,137005,6.13],[137006,137006,8.92],[137007,137007,10.17],[137008,137008,9.58],[137009,137009,8.05],[137010,137012,5.94],[137013,137013,3.29],[137014,137014,4.88],[137015,137023,10],[137024,137025,8.28],[137026,137026,6.25],[137027,137027,6.19],[137028,137028,5.99],[137029,137029,8.05],[137030,137030,10.25],[137031,137031,8.17],[137032,137032,4.38],[137033,137033,8.28],[137034,137034,6.19],[137035,137035,7.34],[137036,137036,8.81],[137037,137037,6.13],[137038,137038,8.67],[137039,137039,8.17],[137040,137040,7.58],[137041,137041,5.74],[137042,137043,5.94],[137044,137055,10],[137056,137056,8.05],[137057,137057,9.18],[137058,137058,3.92],[137059,137059,6.29],[137060,137060,7.97],[137061,137061,9.45],[137062,137062,10.15],[137063,137063,8.05],[137064,137064,7.97],[137065,137065,9.18],[137066,137066,8.53],[137067,137067,9.18],[137068,137068,9.41],[137069,137069,10],[137070,137070,9.38],[137071,137071,8.34],[137072,137072,10.53],[137073,137073,10],[137074,137075,5.94],[137076,137087,10],[137088,137090,6],[137091,137091,9.5],[137092,137095,6],[137096,137096,13],[137097,137097,9.5],[137098,137100,6],[137101,137101,9.5],[137102,137102,13],[137103,137104,6],[137105,137105,6.22],[137106,137112,6],[137113,137113,9.5],[137114,137114,3.5],[137115,137115,9.5],[137116,137116,3.5],[137117,137118,6],[137119,137120,9.5],[137121,137121,9.72],[137122,137122,5.8],[137123,137123,6],[137124,137124,9.5],[137125,137125,6],[137126,137126,9.5],[137127,137128,6],[137129,137129,7.1],[137130,137130,6.2],[137131,137139,6],[137140,137141,0],[137142,137142,8.58],[137143,137143,5.57],[137144,137146,5.56],[137147,137149,4.77],[137150,137150,9.01],[137151,137152,10.21],[137153,137154,8.31],[137155,137155,8.51],[137156,137156,12.09],[137157,137157,12.44],[137158,137158,4.77],[137159,137159,7.95],[137160,137160,7.14],[137161,137161,4.77],[137162,137162,5.97],[137163,137164,4.77],[137165,137165,4.81],[137166,137171,4.77],[137172,137172,4.65],[137173,137173,6.2],[137174,137174,3.43],[137175,137175,5.3],[137176,137176,18.25],[137177,137177,6.47],[137178,137178,11.76],[137179,137179,3.8],[137180,137180,5.3],[137181,137181,4.77],[137182,137183,10],[137184,137185,5.3],[137186,137186,6.61],[137187,137187,8.8],[137188,137190,5.94],[137191,137191,6.97],[137192,137192,5.94],[137193,137193,5.65],[137194,137199,10],[137200,137200,3.76],[137201,137201,4.12],[137202,137202,1.6],[137203,137203,6.59],[137204,137204,4.12],[137205,137205,3.98],[137206,137206,2.84],[137207,137207,5.34],[137208,137208,2.84],[137209,137209,4.44],[137210,137215,10],[137216,137216,5.34],[137217,137217,10.3],[137218,137218,3.84],[137219,137219,6.38],[137220,137220,3.84],[137221,137221,5.82],[137222,137222,4],[137223,137223,5.34],[137224,137224,4.22],[137225,137225,6.42],[137226,137226,1.68],[137227,137230,0],[137231,137231,10],[137232,137233,5.72],[137234,137234,6.05],[137235,137235,8.75],[137236,137236,5.34],[137237,137237,7.12],[137238,137239,6.3],[137240,137240,5.64],[137241,137241,5.34],[137242,137247,10],[137248,137248,9.29],[137249,137249,8.24],[137250,137250,9.93],[137251,137252,9.32],[137253,137254,12.35],[137255,137255,12],[137256,137256,5.67],[137257,137257,7.38],[137258,137258,6.8],[137259,137259,6.75],[137260,137261,8.63],[137262,137263,5.67],[137264,137265,7.56],[137266,137266,7.45],[137267,137267,7.48],[137268,137268,7.67],[137269,137270,4.96],[137271,137271,6.93],[137272,137272,5.95],[137273,137273,6.8],[137274,137274,5.51],[137275,137275,5.5],[137276,137276,8.92],[137277,137277,8.15],[137278,137278,10.88],[137279,137279,9.08],[137280,137280,10.88],[137281,137281,6.41],[137282,137282,11.77],[137283,137283,2.01],[137284,137284,8.99],[137285,137285,9.06],[137286,137286,9.15],[137287,137287,11.26],[137288,137288,9.15],[137289,137289,11.26],[137290,137290,10.69],[137291,137291,9.25],[137292,137292,7.16],[137293,137294,8.61],[137295,137295,5.26],[137296,137296,7.23],[137297,137297,5.51],[137298,137298,7.85],[137299,137299,7.67],[137300,137300,6.5],[137301,137301,4.51],[137302,137302,7.49],[137303,137303,5.68],[137304,137304,5.48],[137305,137305,11],[137306,137306,7.39],[137307,137307,5.18],[137308,137308,7.27],[137309,137309,8.24],[137310,137310,9.93],[137311,137311,2.84],[137312,137312,9.32],[137313,137313,12.35],[137314,137314,9.2],[137315,137315,4.28],[137316,137316,6.93],[137317,137317,7.92],[137318,137318,7.18],[137319,137319,6.81],[137320,137320,8.32],[137321,137321,7.45],[137322,137322,5.12],[137323,137323,5.95],[137324,137325,5.51],[137326,137327,7.56],[137328,137328,3.73],[137329,137329,7.67],[137330,137330,5.12],[137331,137331,9.93],[137332,137332,5.47],[137333,137333,8.68],[137334,137334,5.6],[137335,137335,4.96],[137336,137343,10],[137344,137344,5.83],[137345,137345,7.9],[137346,137346,6.73],[137347,137348,4.83],[137349,137349,10.57],[137350,137350,9.87],[137351,137351,10.21],[137352,137352,9.93],[137353,137353,7.06],[137354,137354,9.1],[137355,137355,6.27],[137356,137356,5.1],[137357,137357,7.92],[137358,137358,6.15],[137359,137359,5.25],[137360,137360,5.44],[137361,137361,5.51],[137362,137362,6.8],[137363,137363,6.75],[137364,137364,6.55],[137365,137365,8.33],[137366,137366,7.27],[137367,137367,5.5],[137368,137368,6.25],[137369,137369,8.6],[137370,137370,11.68],[137371,137371,8.49],[137372,137372,7.56],[137373,137373,9.23],[137374,137374,5.2],[137375,137375,6.97],[137376,137376,5.51],[137377,137377,10.48],[137378,137378,7.56],[137379,137379,5.2],[137380,137381,7.56],[137382,137382,5.05],[137383,137383,5.57],[137384,137384,9.98],[137385,137385,0],[137386,137386,7.18],[137387,137471,10],[137472,137472,6.74],[137473,137473,6.05],[137474,137474,7.01],[137475,137475,5.95],[137476,137476,6.02],[137477,137477,9.27],[137478,137478,6.27],[137479,137479,6.32],[137480,137480,6.75],[137481,137481,5.83],[137482,137482,7.77],[137483,137483,5.53],[137484,137484,6.91],[137485,137485,6.25],[137486,137486,6.8],[137487,137487,6.05],[137488,137488,7.47],[137489,137489,8.11],[137490,137490,6.15],[137491,137491,7],[137492,137492,6.47],[137493,137493,6.04],[137494,137494,6.25],[137495,137495,6.56],[137496,137496,6.61],[137497,137497,6.36],[137498,137498,5.21],[137499,137499,6.31],[137500,137500,6.59],[137501,137501,6.15],[137502,137502,6.01],[137503,137503,10],[137504,137506,7.21],[137507,137507,10.07],[137508,137508,12.82],[137509,137509,10.07],[137510,137510,12.82],[137511,137512,7.21],[137513,137513,10.79],[137514,137514,7.21],[137515,137515,11.31],[137516,137519,10],[137520,137520,12.68],[137521,137521,9.85],[137522,137522,7.21],[137523,137523,9.91],[137524,137524,11.98],[137525,137525,12.35],[137526,137526,12.24],[137527,137527,8.32],[137528,137528,10.45],[137529,137531,7.21],[137532,137535,10],[137536,137536,5.5],[137537,137539,10],[137540,137540,4.4],[137541,137541,4.8],[137542,137542,5.49],[137543,137543,4.99],[137544,137544,4.97],[137545,137545,4.61],[137546,137546,5],[137547,137547,4.87],[137548,137549,4.92],[137550,137550,4.97],[137551,137551,4.92],[137552,137552,5.13],[137553,137553,6.64],[137554,137554,5.36],[137555,137555,7.27],[137556,137556,6.58],[137557,137557,6.08],[137558,137558,9.02],[137559,137559,9.67],[137560,137560,5.69],[137561,137561,5.2],[137562,137562,8.31],[137563,137563,5.09],[137564,137564,8.31],[137565,137565,5.77],[137566,137566,8.49],[137567,137567,6.8],[137568,137568,5.08],[137569,137569,6.55],[137570,137570,5.36],[137571,137571,2.39],[137572,137572,5.49],[137573,137573,5.14],[137574,137574,5.49],[137575,137575,2.9],[137576,137576,2.47],[137577,137577,5.02],[137578,137578,5.49],[137579,137579,5.14],[137580,137580,2.09],[137581,137581,6.29],[137582,137583,10],[137584,137584,5.54],[137585,137585,5.23],[137586,137586,6.03],[137587,137587,5.46],[137588,137588,5.23],[137589,137599,10],[137600,137601,9.29],[137602,137602,9.08],[137603,137603,5.3],[137604,137604,9.14],[137605,137605,6.11],[137606,137606,5.98],[137607,137607,6.46],[137608,137608,5.78],[137609,137609,9.29],[137610,137610,6.21],[137611,137611,6.11],[137612,137612,5.98],[137613,137614,9.08],[137615,137615,6.29],[137616,137616,9.14],[137617,137617,6.42],[137618,137618,7.49],[137619,137619,5.76],[137620,137620,6.35],[137621,137621,8.33],[137622,137622,9.14],[137623,137623,9.08],[137624,137624,9.29],[137625,137625,6.11],[137626,137626,6.42],[137627,137628,9.14],[137629,137629,9.08],[137630,137630,5.54],[137631,137632,9.14],[137633,137633,5.43],[137634,137634,6.11],[137635,137635,6.78],[137636,137636,5.43],[137637,137637,6.11],[137638,137638,9.08],[137639,137639,5.41],[137640,137640,6.11],[137641,137641,5.98],[137642,137642,9.29],[137643,137643,5.98],[137644,137647,10],[137648,137648,6.66],[137649,137649,5.43],[137650,137650,6.04],[137651,137651,5.43],[137652,137652,5.97],[137653,137653,7.03],[137654,137654,13],[137655,137655,5.28],[137656,137656,5.19],[137657,137657,6.04],[137658,137658,5.63],[137659,137659,8.07],[137660,137660,8.2],[137661,137661,8.18],[137662,137662,7.24],[137663,137664,8.68],[137665,137665,5.54],[137666,137666,6.47],[137667,137667,5.84],[137668,137668,6.11],[137669,137669,9.08],[137670,137670,5.43],[137671,137671,6.11],[137672,137672,5.12],[137673,137673,5.22],[137674,137679,10],[137680,137680,5.54],[137681,137681,5.43],[137682,137682,3.59],[137683,137684,5.38],[137685,137685,7.76],[137686,137686,6.28],[137687,137687,7.76],[137688,137688,5.61],[137689,137689,5.98],[137690,137690,6.17],[137691,137693,10],[137694,137695,8.36],[137696,137696,6.44],[137697,137697,5.3],[137698,137698,6.61],[137699,137699,8.8],[137700,137702,5.94],[137703,137703,6.97],[137704,137704,5.94],[137705,137705,5.65],[137706,137707,12.7],[137708,137708,13.18],[137709,137709,14.4],[137710,137711,12.7],[137712,137712,6.35],[137713,137713,5.3],[137714,137714,6.61],[137715,137715,8.8],[137716,137718,5.94],[137719,137719,6.97],[137720,137720,5.94],[137721,137721,5.65],[137722,137723,12.7],[137724,137724,13.18],[137725,137725,14.4],[137726,137727,12.7],[137728,137728,6.77],[137729,137729,10.46],[137730,137730,6.05],[137731,137731,7.55],[137732,137732,10.46],[137733,137733,6.77],[137734,137734,9.45],[137735,137735,8.78],[137736,137738,9.45],[137739,137740,10.46],[137741,137741,7.84],[137742,137742,12.21],[137743,137743,13.25],[137744,137744,12.19],[137745,137745,6.89],[137746,137746,12.48],[137747,137747,12.19],[137748,137748,5.76],[137749,137749,12.16],[137750,137750,10.34],[137751,137752,5.94],[137753,137753,9.51],[137754,137754,11.34],[137755,137755,5.94],[137756,137757,10],[137758,137758,5.04],[137759,137759,5.38],[137760,137760,9.26],[137761,137761,5.28],[137762,137762,5.23],[137763,137763,5.94],[137764,137764,5.84],[137765,137765,10.42],[137766,137766,6.31],[137767,137767,5.96],[137768,137768,9.09],[137769,137770,5.56],[137771,137771,9.8],[137772,137772,9.1],[137773,137774,6.76],[137775,137775,5.24],[137776,137776,6.54],[137777,137777,10.92],[137778,137778,8.93],[137779,137779,7.02],[137780,137780,6.47],[137781,137781,6.37],[137782,137782,5.52],[137783,137783,5.94],[137784,137784,6.27],[137785,137785,7],[137786,137786,6.88],[137787,137788,6.58],[137789,137789,8.78],[137790,137790,5.94],[137791,137791,9.76],[137792,137792,6.12],[137793,137793,6.46],[137794,137794,6.59],[137795,137795,8.98],[137796,137796,5.24],[137797,137797,5.39],[137798,137798,5.94],[137799,137800,9.1],[137801,137801,8.98],[137802,137802,6.31],[137803,137803,8.85],[137804,137804,8.98],[137805,137805,6.58],[137806,137806,8.11],[137807,137808,5.24],[137809,137809,5.96],[137810,137810,10.8],[137811,137811,9.18],[137812,137812,12.96],[137813,137814,0],[137815,137815,2.83],[137816,137822,0],[137823,137823,10],[137824,137824,0],[137825,137825,4.48],[137826,137826,0],[137827,137827,4.91],[137828,137828,2.47],[137829,137836,0],[137837,137837,2.12],[137838,137838,5.39],[137839,137839,10.1],[137840,137841,5.39],[137842,137842,5.47],[137843,137852,0],[137853,137854,10],[137855,137855,0],[137856,137856,5.39],[137857,137857,5.35],[137858,137858,3.39],[137859,137860,5.3],[137861,137861,5.29],[137862,137862,5.34],[137863,137863,5.29],[137864,137864,5.58],[137865,137865,5.34],[137866,137871,10],[137872,137872,5.39],[137873,137873,6.62],[137874,137874,4.06],[137875,137875,9],[137876,137876,6.57],[137877,137877,6.47],[137878,137878,6.77],[137879,137879,6.76],[137880,137880,6.58],[137881,137881,8.98],[137882,137887,10],[137888,137888,7.14],[137889,137889,7.17],[137890,137890,9.8],[137891,137891,8.24],[137892,137892,7.14],[137893,137893,7.32],[137894,137894,6.53],[137895,137895,6.67],[137896,137896,2.98],[137897,137897,4.59],[137898,137898,5.99],[137899,137899,7.46],[137900,137900,12.32],[137901,137901,5.52],[137902,137983,10],[137984,137987,5.94],[137988,137988,10.06],[137989,137989,11.03],[137990,137990,15.5],[137991,137991,9.33],[137992,137992,13.8],[137993,137993,7.49],[137994,137994,11.96],[137995,137995,8.07],[137996,137996,12.54],[137997,137997,9.47],[137998,137998,13.94],[137999,137999,7.18],[138000,138000,11.44],[138001,138001,9.83],[138002,138002,14.3],[138003,138003,11.11],[138004,138004,11.31],[138005,138005,10.92],[138006,138006,11.68],[138007,138007,9.33],[138008,138008,7.94],[138009,138009,10.52],[138010,138010,8.79],[138011,138011,12.08],[138012,138012,15.09],[138013,138013,10.5],[138014,138014,10.11],[138015,138015,9.34],[138016,138016,8.1],[138017,138017,12.21],[138018,138018,12.04],[138019,138019,7.93],[138020,138020,10.72],[138021,138021,9.2],[138022,138022,8.54],[138023,138023,8.07],[138024,138024,7.65],[138025,138025,11.8],[138026,138026,9.25],[138027,138027,8.54],[138028,138028,9.59],[138029,138029,8.45],[138030,138030,12.23],[138031,138031,7.93],[138032,138032,10.92],[138033,138033,8.07],[138034,138034,8.08],[138035,138035,12.23],[138036,138036,5.94],[138037,138037,10.41],[138038,138042,5.94],[138043,138043,10.41],[138044,138044,5.94],[138045,138045,10.41],[138046,138047,10.77],[138048,138049,15.24],[138050,138050,5.94],[138051,138051,10.41],[138052,138052,3.48],[138053,138053,12.13],[138054,138054,18.09],[138055,138055,12.04],[138056,138056,8.07],[138057,138057,7.93],[138058,138058,8.08],[138059,138059,14.62],[138060,138063,10],[138064,138064,4.72],[138065,138065,11.82],[138066,138066,9.47],[138067,138067,9.83],[138068,138068,5.08],[138069,138069,6.54],[138070,138070,7.18],[138071,138071,10.93],[138072,138072,7.65],[138073,138073,9.02],[138074,138074,11.7],[138075,138075,12.92],[138076,138076,3.7],[138077,138077,4.58],[138078,138078,3.93],[138079,138079,6.42],[138080,138080,4.31],[138081,138081,5.56],[138082,138082,4.83],[138083,138083,4.2],[138084,138084,4.79],[138085,138085,6.08],[138086,138086,6.64],[138087,138087,9.4],[138088,138088,3.87],[138089,138089,13.03],[138090,138090,4.12],[138091,138099,5.94],[138100,138100,6.01],[138101,138101,5.71],[138102,138102,6.01],[138103,138103,5.71],[138104,138104,5.9],[138105,138105,6.24],[138106,138106,5.9],[138107,138107,6.33],[138108,138108,4.02],[138109,138111,10],[138112,138113,5.94],[138114,138114,9.81],[138115,138115,8.71],[138116,138116,5.61],[138117,138117,7.65],[138118,138118,9.11],[138119,138119,8.04],[138120,138120,7.95],[138121,138121,8.71],[138122,138122,7.93],[138123,138123,8],[138124,138124,8.01],[138125,138125,7.28],[138126,138126,7.5],[138127,138127,8.15],[138128,138128,8.29],[138129,138129,10.77],[138130,138130,8.61],[138131,138131,7.12],[138132,138132,7.21],[138133,138134,7.93],[138135,138135,6.76],[138136,138136,9.7],[138137,138137,6.91],[138138,138138,8.69],[138139,138139,5.35],[138140,138140,7.88],[138141,138141,6.84],[138142,138143,7.97],[138144,138144,7.7],[138145,138149,5.94],[138150,138151,9.69],[138152,138153,5.94],[138154,138154,8.58],[138155,138155,0],[138156,138157,5.94],[138158,138158,13.82],[138159,138159,16.47],[138160,138160,8.28],[138161,138161,7.99],[138162,138162,7.01],[138163,138163,7.65],[138164,138164,5.35],[138165,138165,8.66],[138166,138166,6.63],[138167,138167,7.42],[138168,138168,7.97],[138169,138169,7.45],[138170,138170,3.64],[138171,138171,7.12],[138172,138172,11.8],[138173,138173,13.36],[138174,138174,10.75],[138175,138175,7.27],[138176,138176,11.26],[138177,138177,11.44],[138178,138178,10.4],[138179,138179,10.56],[138180,138180,10.58],[138181,138181,10.7],[138182,138182,9.9],[138183,138183,8.4],[138184,138184,9.43],[138185,138185,9.9],[138186,138186,9.56],[138187,138187,10],[138188,138188,10.56],[138189,138189,7.88],[138190,138190,9.41],[138191,138191,10.56],[138192,138192,10.23],[138193,138193,8.11],[138194,138194,9.53],[138195,138195,9.86],[138196,138196,10.54],[138197,138197,10.88],[138198,138198,7.98],[138199,138199,10.73],[138200,138200,9.6],[138201,138202,10.56],[138203,138204,10.7],[138205,138205,7.56],[138206,138206,9.31],[138207,138207,10.56],[138208,138208,9.17],[138209,138209,10.17],[138210,138210,8.75],[138211,138211,9.9],[138212,138213,9.13],[138214,138214,5.94],[138215,138215,9.12],[138216,138217,5.94],[138218,138218,10.77],[138219,138219,9.41],[138220,138220,11.27],[138221,138225,5.94],[138226,138226,11.43],[138227,138227,10.38],[138228,138235,10],[138236,138236,10.7],[138237,138237,11.07],[138238,138238,8.51],[138239,138239,6.88],[138240,138240,6.02],[138241,138241,5.41],[138242,138242,6.48],[138243,138244,9.33],[138245,138245,4.29],[138246,138246,6.77],[138247,138247,6.95],[138248,138248,7.13],[138249,138249,6.1],[138250,138250,6.39],[138251,138251,6.66],[138252,138252,6.07],[138253,138253,7.3],[138254,138256,6.01],[138257,138257,6.3],[138258,138258,9.75],[138259,138259,6.54],[138260,138260,9.33],[138261,138262,7.41],[138263,138263,6.4],[138264,138264,10.3],[138265,138265,5.92],[138266,138266,5.26],[138267,138267,5.09],[138268,138268,9.75],[138269,138269,7.1],[138270,138270,5.9],[138271,138271,6.54],[138272,138272,10.1],[138273,138273,6.75],[138274,138274,10.71],[138275,138275,6.09],[138276,138276,8.56],[138277,138277,7.4],[138278,138278,8.64],[138279,138279,8.63],[138280,138280,7.61],[138281,138281,7.1],[138282,138282,7.89],[138283,138283,8.79],[138284,138291,5.1],[138292,138292,8.95],[138293,138293,6.9],[138294,138295,5.1],[138296,138298,10],[138299,138299,2.5],[138300,138300,4.3],[138301,138301,5.24],[138302,138302,5.64],[138303,138303,5.88],[138304,138305,4.9],[138306,138306,5.61],[138307,138307,5.76],[138308,138308,6.78],[138309,138309,6.75],[138310,138310,5.91],[138311,138311,4.71],[138312,138312,5.45],[138313,138313,5.04],[138314,138316,10],[138317,138318,5.64],[138319,138319,6.63],[138320,138320,5.72],[138321,138321,5.15],[138322,138322,5.13],[138323,138323,5.21],[138324,138324,4.83],[138325,138325,5.51],[138326,138326,5.06],[138327,138327,5.14],[138328,138328,6.68],[138329,138329,6.32],[138330,138330,6.49],[138331,138331,7.81],[138332,138332,6.76],[138333,138333,6.72],[138334,138334,5.84],[138335,138335,6.92],[138336,138336,5.79],[138337,138338,6.29],[138339,138339,6.55],[138340,138340,5.61],[138341,138341,5.87],[138342,138342,7.62],[138343,138343,5.84],[138344,138344,5.42],[138345,138345,5.45],[138346,138346,6.54],[138347,138347,6.78],[138348,138348,7.62],[138349,138349,6.55],[138350,138350,5.74],[138351,138351,7.28],[138352,138352,7.18],[138353,138354,5.68],[138355,138355,6.69],[138356,138356,6.29],[138357,138357,7.18],[138358,138358,6.55],[138359,138359,7.18],[138360,138362,2.68],[138363,138363,5],[138364,138364,3.26],[138365,138365,5.32],[138366,138366,2.68],[138367,138367,5.01],[138368,138383,10],[138384,138384,5.68],[138385,138386,5.9],[138387,138387,8.96],[138388,138388,5.79],[138389,138389,5.7],[138390,138390,6.07],[138391,138391,9.12],[138392,138392,5.94],[138393,138393,5.61],[138394,138394,10.45],[138395,138396,6.08],[138397,138397,8.29],[138398,138398,5.54],[138399,138399,5.88],[138400,138400,7.62],[138401,138401,5.91],[138402,138402,7.29],[138403,138403,6.16],[138404,138404,8.18],[138405,138405,5.82],[138406,138406,7.81],[138407,138407,6],[138408,138408,6.08],[138409,138409,5.95],[138410,138410,6.54],[138411,138412,6.13],[138413,138413,6.39],[138414,138414,6.13],[138415,138415,5.73],[138416,138416,5.72],[138417,138417,6.41],[138418,138418,5.96],[138419,138419,5.72],[138420,138420,5.71],[138421,138421,6.13],[138422,138422,7.53],[138423,138423,5.76],[138424,138424,5.95],[138425,138425,5.76],[138426,138426,5.85],[138427,138428,10],[138429,138429,6.44],[138430,138430,5.96],[138431,138431,7.1],[138432,138432,10.18],[138433,138435,6.74],[138436,138436,16.8],[138437,138437,7.44],[138438,138438,11.35],[138439,138439,16.45],[138440,138457,10],[138458,138458,0],[138459,138484,10],[138485,138485,5.27],[138486,138495,10],[138496,138496,5.02],[138497,138497,6.45],[138498,138498,6.67],[138499,138499,4.65],[138500,138500,4.78],[138501,138502,5.24],[138503,138503,4.44],[138504,138504,3.95],[138505,138505,2.78],[138506,138506,2.96],[138507,138507,5.4],[138508,138508,4.45],[138509,138509,6.33],[138510,138510,5.35],[138511,138511,5],[138512,138512,4.78],[138513,138513,5.42],[138514,138514,5.38],[138515,138515,5.42],[138516,138516,7.22],[138517,138517,4.37],[138518,138519,5],[138520,138520,4.56],[138521,138522,4.6],[138523,138523,4.37],[138524,138524,5.37],[138525,138525,5.05],[138526,138526,6.55],[138527,138527,5.04],[138528,138528,5],[138529,138529,7.22],[138530,138530,4.44],[138531,138531,3.95],[138532,138532,3.97],[138533,138533,5.39],[138534,138534,4.1],[138535,138535,5],[138536,138536,5.35],[138537,138537,4.56],[138538,138538,5.28],[138539,138539,4.99],[138540,138540,4.22],[138541,138541,5.38],[138542,138543,3.87],[138544,138544,4.3],[138545,138546,3.7],[138547,138547,4.33],[138548,138548,4.4],[138549,138549,2],[138550,138550,2.47],[138551,138551,4.58],[138552,138552,3.71],[138553,138553,5.4],[138554,138554,4.62],[138555,138555,4.41],[138556,138556,4.18],[138557,138557,3.36],[138558,138558,3.32],[138559,138559,4.1],[138560,138560,3.62],[138561,138561,4.53],[138562,138562,5.54],[138563,138564,2.73],[138565,138565,3.14],[138566,138566,3.9],[138567,138567,3.1],[138568,138568,3.11],[138569,138570,2.56],[138571,138572,2.42],[138573,138573,3.01],[138574,138574,1.64],[138575,138575,3.15],[138576,138576,4.89],[138577,138577,2.82],[138578,138578,2.88],[138579,138579,2.56],[138580,138581,2.88],[138582,138582,3.11],[138583,138583,1.91],[138584,138584,3.28],[138585,138585,3.06],[138586,138586,4.89],[138587,138587,2.94],[138588,138588,3.19],[138589,138589,2.82],[138590,138590,2.65],[138591,138591,2.71],[138592,138592,3.34],[138593,138593,2.82],[138594,138594,1.64],[138595,138595,2.29],[138596,138596,3.28],[138597,138597,2.94],[138598,138598,2.82],[138599,138599,2.65],[138600,138600,2.96],[138601,138601,3.34],[138602,138602,2.82],[138603,138603,7.61],[138604,138605,5],[138606,138606,3.33],[138607,138607,7.78],[138608,138609,5],[138610,138611,3.33],[138612,138612,3.89],[138613,138613,2.78],[138614,138614,4.44],[138615,138615,5],[138616,138616,3.23],[138617,138617,4.71],[138618,138618,7.66],[138619,138619,2.78],[138620,138620,2.69],[138621,138621,5],[138622,138622,5.37],[138623,138623,5.49],[138624,138625,5],[138626,138626,3.33],[138627,138627,5.97],[138628,138628,5],[138629,138629,2.78],[138630,138630,7.78],[138631,138632,5],[138633,138633,3.33],[138634,138634,3.89],[138635,138635,4.24],[138636,138637,5],[138638,138639,4.44],[138640,138640,5.23],[138641,138641,5],[138642,138642,4.44],[138643,138644,4.2],[138645,138645,4.44],[138646,138646,2.78],[138647,138647,4.44],[138648,138648,4.39],[138649,138649,5],[138650,138650,4.44],[138651,138651,3.14],[138652,138653,2.56],[138654,138654,2.88],[138655,138655,2.42],[138656,138657,2.08],[138658,138658,2.66],[138659,138659,3.21],[138660,138660,1.64],[138661,138661,1.82],[138662,138663,1.65],[138664,138664,1.93],[138665,138666,1.64],[138667,138667,2.71],[138668,138668,4.48],[138669,138669,4.89],[138670,138671,3.28],[138672,138672,3.22],[138673,138673,2.88],[138674,138674,3.21],[138675,138675,2.12],[138676,138676,2.15],[138677,138677,1.91],[138678,138678,3.28],[138679,138679,3.17],[138680,138680,3.25],[138681,138681,2.91],[138682,138682,2.94],[138683,138684,2.74],[138685,138685,3.04],[138686,138686,2.66],[138687,138687,2.7],[138688,138703,0],[138704,138706,10],[138707,138713,0],[138714,138714,10],[138715,138726,0],[138727,138749,10],[138750,138751,0],[138752,138752,7.22],[138753,138753,4.44],[138754,138754,6.67],[138755,138755,5],[138756,138756,6.86],[138757,138757,6.23],[138758,138758,6.67],[138759,138759,5],[138760,138760,6.98],[138761,138761,5.21],[138762,138762,7.22],[138763,138763,5],[138764,138764,7.71],[138765,138765,6.23],[138766,138766,7.22],[138767,138767,5],[138768,138768,7.22],[138769,138769,5],[138770,138770,7.22],[138771,138771,5],[138772,138772,6.32],[138773,138773,5.96],[138774,138774,6.32],[138775,138775,5.96],[138776,138776,6.11],[138777,138777,4.44],[138778,138778,6.11],[138779,138779,4.44],[138780,138780,6.11],[138781,138781,4.44],[138782,138782,5.56],[138783,138783,3.33],[138784,138784,7.22],[138785,138785,5],[138786,138786,7.22],[138787,138787,5],[138788,138788,7.51],[138789,138789,6.33],[138790,138790,7.22],[138791,138791,5],[138792,138792,7.22],[138793,138793,5],[138794,138794,7.22],[138795,138795,5],[138796,138796,3.33],[138797,138797,2.78],[138798,138798,4.21],[138799,138799,2.74],[138800,138800,6.93],[138801,138801,5.92],[138802,138802,6.93],[138803,138803,5.92],[138804,138804,7.22],[138805,138805,5],[138806,138806,5.57],[138807,138807,2.74],[138808,138808,6.11],[138809,138809,2.78],[138810,138810,6.11],[138811,138811,2.78],[138812,138812,6.11],[138813,138813,2.78],[138814,138814,8.43],[138815,138815,9.73],[138816,138816,8.89],[138817,138817,7.78],[138818,138818,8.43],[138819,138819,9.73],[138820,138820,7.22],[138821,138821,5],[138822,138822,7.48],[138823,138823,6.33],[138824,138824,7.22],[138825,138825,5],[138826,138826,7.22],[138827,138827,5],[138828,138828,7.87],[138829,138829,6.07],[138830,138830,7.22],[138831,138831,5],[138832,138832,7.87],[138833,138833,6.07],[138834,138834,7.87],[138835,138835,6.07],[138836,138836,6.03],[138837,138837,6.23],[138838,138838,5.56],[138839,138839,5],[138840,138840,6.67],[138841,138841,3.33],[138842,138842,6.95],[138843,138843,4.27],[138844,138844,6.67],[138845,138845,3.33],[138846,138846,6.67],[138847,138847,3.33],[138848,138848,5.56],[138849,138849,3.89],[138850,138850,6.84],[138851,138851,5.21],[138852,138852,5.56],[138853,138853,3.89],[138854,138854,5.56],[138855,138855,3.89],[138856,138856,5.56],[138857,138857,3.89],[138858,138858,6.11],[138859,138859,2.78],[138860,138860,6.16],[138861,138861,3.94],[138862,138862,6.11],[138863,138863,2.78],[138864,138864,6.11],[138865,138865,2.78],[138866,138866,7.22],[138867,138867,5],[138868,138868,7.22],[138869,138869,5],[138870,138870,7.22],[138871,138871,5],[138872,138872,7.32],[138873,138873,6.33],[138874,138874,7.22],[138875,138875,5],[138876,138876,6.84],[138877,138877,5.92],[138878,138878,6.84],[138879,138879,5.92],[138880,138880,9.89],[138881,138881,8.18],[138882,138882,9.89],[138883,138883,8.18],[138884,138884,9.89],[138885,138885,8.18],[138886,138886,9.44],[138887,138887,7.22],[138888,138888,9.89],[138889,138889,8.18],[138890,138890,7.22],[138891,138891,5],[138892,138892,7.22],[138893,138893,5],[138894,138894,7.22],[138895,138895,5],[138896,138896,6.11],[138897,138897,4.44],[138898,138898,6.85],[138899,138899,5.25],[138900,138900,6.11],[138901,138901,4.44],[138902,138902,5],[138903,138903,2.78],[138904,138904,7.22],[138905,138905,5],[138906,138906,4.44],[138907,138907,2.78],[138908,138908,4.23],[138909,138909,4.22],[138910,138910,6.78],[138911,138911,6.02],[138912,138912,6.84],[138913,138913,6.01],[138914,138914,6.84],[138915,138915,6.01],[138916,138916,6.84],[138917,138917,6.01],[138918,138918,6.84],[138919,138919,6.01],[138920,138920,6.84],[138921,138921,6.01],[138922,138922,6.84],[138923,138923,6.01],[138924,138924,6.84],[138925,138925,6.01],[138926,138926,6.84],[138927,138927,6.01],[138928,138928,6.84],[138929,138929,6.01],[138930,138930,6.84],[138931,138931,6.01],[138932,138932,6.84],[138933,138933,6.01],[138934,138934,6.84],[138935,138935,6.01],[138936,138936,6.32],[138937,138937,5.96],[138938,138938,6.32],[138939,138939,5.96],[138940,138940,6.32],[138941,138941,5.96],[138942,138942,6.32],[138943,138943,5.96],[138944,138944,6.32],[138945,138945,5.96],[138946,138946,6.32],[138947,138947,5.96],[138948,138948,6.32],[138949,138949,5.96],[138950,138950,6.32],[138951,138951,5.96],[138952,138952,4.21],[138953,138953,2.74],[138954,138954,4.21],[138955,138955,2.74],[138956,138956,7.87],[138957,138957,6.07],[138958,138958,7.87],[138959,138959,6.07],[138960,138960,7.87],[138961,138961,6.07],[138962,138962,7.87],[138963,138963,6.07],[138964,138964,7.87],[138965,138965,6.07],[138966,138966,7.87],[138967,138967,6.07],[138968,138968,7.87],[138969,138969,6.07],[138970,138970,8.07],[138971,138971,6.07],[138972,138972,8.07],[138973,138973,6.07],[138974,138974,8.07],[138975,138975,6.07],[138976,138976,8.07],[138977,138977,6.07],[138978,138978,8.07],[138979,138979,6.07],[138980,138980,7.32],[138981,138981,6.33],[138982,138982,7.32],[138983,138983,6.33],[138984,138984,7.56],[138985,138985,6.6],[138986,138986,7.56],[138987,138987,6.6],[138988,138988,7.56],[138989,138989,6.6],[138990,138990,7.56],[138991,138991,6.6],[138992,138992,7.56],[138993,138993,6.6],[138994,138994,6.15],[138995,138995,5.92],[138996,138996,6.15],[138997,138997,5.92],[138998,138998,6.15],[138999,138999,5.92],[139000,139000,6.15],[139001,139001,5.92],[139002,139002,9.36],[139003,139003,5.89],[139004,139004,5.06],[139005,139005,4.45],[139006,139007,4.58],[139008,139015,5.24],[139016,139017,7.22],[139018,139023,7.91],[139024,139029,4.2],[139030,139031,10],[139032,139033,7.48],[139034,139037,9.04],[139038,139039,10],[139040,139047,5.23],[139048,139049,8.59],[139050,139055,10.16],[139056,139063,2.69],[139064,139065,4.7],[139066,139071,6.26],[139072,139077,5],[139078,139079,10],[139080,139081,7.91],[139082,139083,9.96],[139084,139085,8.98],[139086,139087,10],[139088,139095,4.95],[139096,139096,10],[139097,139097,8.59],[139098,139098,10],[139099,139099,10.21],[139100,139100,10],[139101,139101,10.21],[139102,139102,10],[139103,139103,10.21],[139104,139111,6.58],[139112,139113,8.12],[139114,139115,9.98],[139116,139119,9.29],[139120,139121,6.23],[139122,139123,5.13],[139124,139125,6.33],[139126,139127,2.74],[139128,139129,6.07],[139130,139131,6.31],[139132,139133,8.13],[139134,139135,10],[139136,139143,5.24],[139144,139145,7.22],[139146,139151,7.91],[139152,139159,5.23],[139160,139161,8.59],[139162,139167,10.16],[139168,139175,6.58],[139176,139177,8.12],[139178,139179,9.98],[139180,139183,9.29],[139184,139188,5.24],[139189,139189,10],[139190,139191,5.24],[139192,139193,7.22],[139194,139195,6.84],[139196,139196,7.22],[139197,139197,3.33],[139198,139198,2.74],[139199,139201,3.33],[139202,139204,5.23],[139205,139205,10],[139206,139207,5.23],[139208,139208,6.32],[139209,139210,7.51],[139211,139211,8.7],[139212,139212,7.22],[139213,139215,3.33],[139216,139217,2.69],[139218,139219,2.74],[139220,139221,10],[139222,139223,2.69],[139224,139225,3.33],[139226,139226,4.21],[139227,139227,5.4],[139228,139228,10],[139229,139231,3.33],[139232,139233,4.95],[139234,139235,6.31],[139236,139237,4.99],[139238,139239,4.95],[139240,139241,7.22],[139242,139242,6.15],[139243,139243,7.53],[139244,139244,6.93],[139245,139247,6.36],[139248,139249,10],[139250,139252,6.58],[139253,139253,10],[139254,139255,6.58],[139256,139256,7.87],[139257,139257,8.81],[139258,139258,8.18],[139259,139259,9.08],[139260,139260,7.43],[139261,139261,6.36],[139262,139262,3.33],[139263,139263,10],[139264,139264,5],[139265,139265,10],[139266,139266,5],[139267,139267,10],[139268,139268,3.33],[139269,139269,2.5],[139270,139270,1.67],[139271,139271,6.36],[139272,139272,3.64],[139273,139273,2],[139274,139274,0.63],[139275,139279,0],[139280,139281,5.79],[139282,139283,6.36],[139284,139285,10],[139286,139286,2.81],[139287,139287,6.36],[139288,139291,2.69],[139292,139295,4.59],[139296,139297,6.36],[139298,139298,5.45],[139299,139299,4.7],[139300,139300,3.33],[139301,139301,6.67],[139302,139302,8.18],[139303,139303,3.16],[139304,139310,0],[139311,139311,1.76],[139312,139312,15.21],[139313,139313,13.55],[139314,139314,3.61],[139315,139316,5.57],[139317,139317,3.25],[139318,139318,5.42],[139319,139319,7.59],[139320,139320,3.53],[139321,139322,4.54],[139323,139323,7.23],[139324,139324,6.25],[139325,139325,4.22],[139326,139326,6.36],[139327,139328,5],[139329,139329,4.65],[139330,139330,9.11],[139331,139331,3.25],[139332,139332,3.61],[139333,139334,3.25],[139335,139335,8.07],[139336,139337,7.07],[139338,139339,6.32],[139340,139341,5.42],[139342,139342,4.82],[139343,139343,3.16],[139344,139344,5],[139345,139345,4.82],[139346,139346,5.51],[139347,139347,10],[139348,139348,5],[139349,139349,6.97],[139350,139350,5.93],[139351,139351,9.74],[139352,139353,5.93],[139354,139354,10],[139355,139355,5.93],[139356,139356,6.98],[139357,139357,10],[139358,139358,2.78],[139359,139359,2.22],[139360,139375,0],[139376,139376,4.22],[139377,139377,2.17],[139378,139379,10],[139380,139381,5.42],[139382,139382,4.22],[139383,139384,5.42],[139385,139388,4.22],[139389,139390,2.26],[139391,139391,5.45],[139392,139404,4.22],[139405,139406,2.26],[139407,139407,10],[139408,139408,2.73],[139409,139409,2.56],[139410,139410,2.88],[139411,139411,2.9],[139412,139412,2.56],[139413,139423,10],[139424,139424,6.36],[139425,139426,6.98],[139427,139428,6.36],[139429,139429,9.73],[139430,139430,7.48],[139431,139431,11.64],[139432,139432,11.67],[139433,139433,9.89],[139434,139434,8.35],[139435,139435,6.23],[139436,139436,6.36],[139437,139437,6.93],[139438,139438,6.16],[139439,139439,10],[139440,139440,5.21],[139441,139441,6.03],[139442,139442,7.75],[139443,139444,6.84],[139445,139445,6.98],[139446,139446,6.77],[139447,139447,7.3],[139448,139448,5.65],[139449,139449,6],[139450,139450,5.56],[139451,139451,8.31],[139452,139453,5.65],[139454,139454,7.53],[139455,139455,6.59],[139456,139471,10],[139472,139474,0],[139475,139475,6],[139476,139477,7],[139478,139480,0],[139481,139482,6],[139483,139485,0],[139486,139486,10],[139487,139487,8.65],[139488,139488,9],[139489,139489,0],[139490,139490,10],[139491,139504,0],[139505,139519,10],[139520,139521,7.5],[139522,139522,6.02],[139523,139523,9.89],[139524,139524,6.4],[139525,139525,10.76],[139526,139526,7.5],[139527,139527,5.98],[139528,139528,6.03],[139529,139529,8.47],[139530,139530,10],[139531,139531,9.97],[139532,139532,8.24],[139533,139533,6.02],[139534,139534,5.77],[139535,139535,6.15],[139536,139536,8.97],[139537,139537,7.62],[139538,139538,9.46],[139539,139539,3.23],[139540,139540,7.78],[139541,139541,6.02],[139542,139542,11.72],[139543,139543,8.55],[139544,139544,8.26],[139545,139546,6.02],[139547,139547,9.44],[139548,139548,8.74],[139549,139549,6.02],[139550,139550,6.32],[139551,139551,6.67],[139552,139552,11.28],[139553,139553,15.03],[139554,139554,9.77],[139555,139555,7.22],[139556,139556,6.02],[139557,139557,5.12],[139558,139558,8.18],[139559,139559,7.95],[139560,139560,7.26],[139561,139561,4],[139562,139562,6.93],[139563,139563,6.84],[139564,139564,9.5],[139565,139565,7.17],[139566,139566,7.18],[139567,139567,6.27],[139568,139568,7.5],[139569,139569,9.19],[139570,139570,6.64],[139571,139571,10.72],[139572,139572,6.97],[139573,139573,6.45],[139574,139574,5.63],[139575,139575,4.27],[139576,139576,5.01],[139577,139577,6.6],[139578,139578,9.34],[139579,139579,16.4],[139580,139580,6.73],[139581,139581,5.4],[139582,139582,4.69],[139583,139583,7.18],[139584,139584,9.23],[139585,139585,7.23],[139586,139587,5.33],[139588,139588,6.23],[139589,139589,7.13],[139590,139590,5.81],[139591,139591,5.15],[139592,139592,2.93],[139593,139593,3.41],[139594,139594,6.64],[139595,139595,6.97],[139596,139596,8.1],[139597,139597,8.82],[139598,139598,4.17],[139599,139602,10],[139603,139604,7.5],[139605,139610,8.01],[139611,139614,10],[139615,139615,3.8],[139616,139616,2.88],[139617,139617,5.9],[139618,139618,8.37],[139619,139619,9.05],[139620,139620,6.53],[139621,139621,9.18],[139622,139622,12.13],[139623,139623,14.6],[139624,139624,8.72],[139625,139625,6.26],[139626,139626,8.53],[139627,139627,11.47],[139628,139628,5.33],[139629,139629,6.92],[139630,139630,7.49],[139631,139631,8.61],[139632,139632,2.89],[139633,139633,5.78],[139634,139634,8.19],[139635,139635,7.79],[139636,139636,5.18],[139637,139637,7.82],[139638,139638,10.71],[139639,139639,13.12],[139640,139640,8.35],[139641,139641,6.13],[139642,139642,8.33],[139643,139643,11.22],[139644,139644,2.89],[139645,139645,5.12],[139646,139646,6.29],[139647,139647,9.34],[139648,139648,10.41],[139649,139649,7.49],[139650,139650,10.41],[139651,139651,6.92],[139652,139652,4.44],[139653,139653,6.51],[139654,139654,5.64],[139655,139664,10],[139665,139665,5],[139666,139666,10],[139667,139667,5],[139668,139668,10],[139669,139669,5],[139670,139675,10],[139676,139687,6.02],[139688,139688,5],[139689,139689,10],[139690,139690,9.88],[139691,139693,6.02],[139694,139694,10],[139695,139695,6.02],[139696,139698,8.65],[139699,139699,10],[139700,139700,8.65],[139701,139701,10],[139702,139703,8.65],[139704,139705,10],[139706,139707,6.02],[139708,139708,8.65],[139709,139711,6.02],[139712,139712,8.65],[139713,139715,6.02],[139716,139718,10],[139719,139722,6.02],[139723,139724,10],[139725,139725,8.8],[139726,139726,6.02],[139727,139727,8.69],[139728,139728,10],[139729,139729,8.65],[139730,139730,9.31],[139731,139731,8.65],[139732,139732,9.31],[139733,139741,6.02],[139742,139743,6.45],[139744,139744,10],[139745,139745,6.45],[139746,139746,10],[139747,139747,6.45],[139748,139754,10],[139755,139759,6.02],[139760,139760,8.65],[139761,139764,6.02],[139765,139765,10],[139766,139775,6.02],[139776,139776,6.3],[139777,139777,4.69],[139778,139778,6.36],[139779,139779,5.26],[139780,139780,5.35],[139781,139781,7.17],[139782,139782,7.27],[139783,139783,7],[139784,139784,5.76],[139785,139785,6.12],[139786,139786,5.09],[139787,139787,5.76],[139788,139788,5.89],[139789,139789,5.09],[139790,139790,5.22],[139791,139791,8.18],[139792,139792,7.95],[139793,139793,7.27],[139794,139794,8.18],[139795,139795,7.95],[139796,139796,5.99],[139797,139797,3.61],[139798,139798,7.95],[139799,139799,5.23],[139800,139800,3.55],[139801,139801,3.64],[139802,139802,8.18],[139803,139803,7.49],[139804,139804,7.24],[139805,139805,5.19],[139806,139806,10],[139807,139807,9.79],[139808,139808,5.98],[139809,139809,6.01],[139810,139810,6.05],[139811,139811,2.5],[139812,139812,4.73],[139813,139813,3.46],[139814,139814,5.25],[139815,139816,5.94],[139817,139817,7.22],[139818,139818,5.31],[139819,139819,6.36],[139820,139820,9.15],[139821,139821,11.24],[139822,139822,6.78],[139823,139823,9.24],[139824,139824,11.66],[139825,139825,5.98],[139826,139826,6.28],[139827,139827,5.97],[139828,139828,6.04],[139829,139829,5.97],[139830,139830,3.36],[139831,139831,5.76],[139832,139832,5.63],[139833,139833,5.76],[139834,139834,5.8],[139835,139835,5.6],[139836,139837,5.5],[139838,139838,5.43],[139839,139839,5.83],[139840,139840,3.9],[139841,139841,5.74],[139842,139842,5.8],[139843,139843,5.84],[139844,139844,6.71],[139845,139845,6.96],[139846,139846,6.29],[139847,139847,6.11],[139848,139848,8.18],[139849,139849,5.49],[139850,139850,6.04],[139851,139851,6.71],[139852,139852,5.43],[139853,139853,6.03],[139854,139854,5.97],[139855,139855,5.93],[139856,139856,5.6],[139857,139857,6.38],[139858,139859,6.32],[139860,139861,7.64],[139862,139862,5.79],[139863,139863,5.96],[139864,139864,5.89],[139865,139865,6.08],[139866,139866,6.19],[139867,139867,6.46],[139868,139868,6.36],[139869,139869,5.63],[139870,139870,5.75],[139871,139871,5.9],[139872,139873,8.18],[139874,139874,5.64],[139875,139875,5.93],[139876,139877,8.18],[139878,139878,5.75],[139879,139879,5.64],[139880,139880,6.22],[139881,139881,5.89],[139882,139882,7.33],[139883,139883,7.01],[139884,139884,3.58],[139885,139885,5.53],[139886,139887,5.64],[139888,139889,5.49],[139890,139890,5.64],[139891,139891,5.67],[139892,139892,5.83],[139893,139893,5.81],[139894,139895,6.05],[139896,139896,5.61],[139897,139897,5.77],[139898,139898,5.67],[139899,139899,5.78],[139900,139900,5.96],[139901,139901,5.78],[139902,139902,5.85],[139903,139903,5.82],[139904,139904,6.07],[139905,139905,5.79],[139906,139907,6.32],[139908,139908,6.44],[139909,139909,6.31],[139910,139911,6.63],[139912,139912,6.67],[139913,139913,6.49],[139914,139915,5.62],[139916,139917,5.82],[139918,139918,6.09],[139919,139920,6.54],[139921,139922,6.51],[139923,139924,6.11],[139925,139925,7.24],[139926,139926,7.45],[139927,139927,7.11],[139928,139928,7.22],[139929,139929,7.56],[139930,139930,7.35],[139931,139931,7.18],[139932,139932,7.61],[139933,139933,7.56],[139934,139934,7.84],[139935,139935,7.6],[139936,139936,7.33],[139937,139937,7.16],[139938,139941,7.5],[139942,139942,3.3],[139943,139943,3.33],[139944,139944,6.24],[139945,139945,7.29],[139946,139946,6.23],[139947,139947,7.55],[139948,139948,7.76],[139949,139949,7.78],[139950,139950,8.74],[139951,139951,8.36],[139952,139953,6.32],[139954,139955,7.41],[139956,139957,7.03],[139958,139959,7.35],[139960,139960,5.96],[139961,139961,6.83],[139962,139962,4.8],[139963,139964,6.96],[139965,139965,6.74],[139966,139966,7.42],[139967,139967,6.31],[139968,139969,6.71],[139970,139971,6.41],[139972,139972,3.81],[139973,139973,4.41],[139974,139974,4.48],[139975,139975,6.31],[139976,139976,7.72],[139977,139978,7.4],[139979,139980,7.24],[139981,139981,5.84],[139982,139983,6.35],[139984,139985,6.48],[139986,139987,5.69],[139988,139988,5.49],[139989,139989,6.14],[139990,139991,6.03],[139992,139993,9.68],[139994,139995,6.51],[139996,139997,6.46],[139998,139999,6.69],[140000,140000,6.66],[140001,140001,6.56],[140002,140002,6.86],[140003,140003,6.64],[140004,140004,6.71],[140005,140005,6.73],[140006,140006,6.76],[140007,140007,6.86],[140008,140008,7.19],[140009,140009,6.88],[140010,140010,7.49],[140011,140011,7.66],[140012,140012,7.71],[140013,140013,7.76],[140014,140014,4.11],[140015,140015,10],[140016,140016,9.2],[140017,140017,9.39],[140018,140018,6.5],[140019,140019,5.76],[140020,140020,5.09],[140021,140022,5.76],[140023,140023,5.09],[140024,140024,5.76],[140025,140025,6.32],[140026,140026,6.5],[140027,140027,5.76],[140028,140028,5.09],[140029,140029,5.76],[140030,140030,5.09],[140031,140031,5.26],[140032,140033,6.02],[140034,140034,6],[140035,140035,7.95],[140036,140036,6.02],[140037,140037,7.95],[140038,140038,6.64],[140039,140039,10],[140040,140047,6.02],[140048,140048,5.64],[140049,140049,6.02],[140050,140050,10],[140051,140051,6.02],[140052,140052,8.65],[140053,140053,6.02],[140054,140055,11],[140056,140056,10],[140057,140057,6.02],[140058,140059,10],[140060,140063,6.02],[140064,140065,6.04],[140066,140067,8.65],[140068,140068,7.95],[140069,140069,10],[140070,140070,12.14],[140071,140071,10],[140072,140072,6.02],[140073,140074,10],[140075,140075,12.14],[140076,140076,9.26],[140077,140077,9.86],[140078,140078,6.24],[140079,140081,5.49],[140082,140082,8.89],[140083,140084,5.49],[140085,140085,6.02],[140086,140086,9.26],[140087,140092,6.02],[140093,140093,10],[140094,140094,6.02],[140095,140096,6.83],[140097,140100,6.02],[140101,140102,6],[140103,140105,6.02],[140106,140106,6],[140107,140109,6.02],[140110,140111,6],[140112,140112,6.02],[140113,140113,6],[140114,140116,6.02],[140117,140118,6],[140119,140124,6.02],[140125,140125,6],[140126,140128,6.02],[140129,140130,6],[140131,140133,6.02],[140134,140135,6],[140136,140137,6.02],[140138,140138,6],[140139,140144,6.02],[140145,140146,6],[140147,140154,6.02],[140155,140155,6.69],[140156,140156,8.71],[140157,140157,3.16],[140158,140158,9.39],[140159,140159,3.71],[140160,140163,6.02],[140164,140164,7.85],[140165,140165,6.84],[140166,140166,6.75],[140167,140168,10],[140169,140170,6.02],[140171,140171,10],[140172,140172,8.08],[140173,140173,7.86],[140174,140174,7.47],[140175,140178,6.58],[140179,140179,9.13],[140180,140180,9.26],[140181,140181,6.02],[140182,140182,4.72],[140183,140184,7.89],[140185,140186,8.15],[140187,140205,10],[140206,140206,6.02],[140207,140207,3.15],[140208,140209,10],[140210,140211,14.88],[140212,140214,9.26],[140215,140215,6.43],[140216,140221,5.03],[140222,140236,10],[140237,140237,9.98],[140238,140238,10],[140239,140239,8.57],[140240,140240,5.11],[140241,140243,5.42],[140244,140245,10.31],[140246,140246,9.58],[140247,140249,9.76],[140250,140257,10],[140258,140258,11.44],[140259,140259,9.1],[140260,140260,10.94],[140261,140261,10.18],[140262,140262,9.26],[140263,140263,7.98],[140264,140319,10],[140320,140320,6],[140321,140321,10],[140322,140322,6],[140323,140323,3.16],[140324,140324,6],[140325,140325,7.92],[140326,140326,4.03],[140327,140351,10],[140352,140357,6.04],[140358,140361,7.5],[140362,140362,6.04],[140363,140484,10],[140485,140485,8.55],[140486,140543,10],[140544,140544,7.08],[140545,140545,10],[140546,140546,7.08],[140547,140555,10],[140556,140556,7.08],[140557,140559,10],[140560,140560,7.08],[140561,140563,10],[140564,140564,7.08],[140565,140567,10],[140568,140568,7.08],[140569,140571,10],[140572,140572,7.08],[140573,140579,10],[140580,140580,7.08],[140581,140587,10],[140588,140588,7.08],[140589,140595,10],[140596,140596,7.08],[140597,140603,10],[140604,140604,7.08],[140605,140619,10],[140620,140623,6.02],[140624,140652,7.08],[140653,140660,10],[140661,140671,6.02],[140672,140672,7.08],[140673,140675,10],[140676,140676,7.08],[140677,140679,10],[140680,140680,7.08],[140681,140683,10],[140684,140684,7.08],[140685,140687,10],[140688,140690,7.08],[140691,140691,7.29],[140692,140693,10],[140694,140703,6.02],[140704,140705,6.04],[140706,140706,10],[140707,140713,8.65],[140714,140715,3.54],[140716,140716,10],[140717,140717,8.65],[140718,140720,6.02],[140721,140721,10],[140722,140722,9.9],[140723,140723,10],[140724,140724,5.51],[140725,140725,8.65],[140726,140726,8.8],[140727,140727,10],[140728,140729,5.3],[140730,140730,9.9],[140731,140731,6.02],[140732,140732,9.9],[140733,140733,10],[140734,140735,6.39],[140736,140736,10],[140737,140737,7.95],[140738,140738,6.02],[140739,140739,8.65],[140740,140740,9.9],[140741,140741,6.02],[140742,140742,7.23],[140743,140743,6.15],[140744,140744,8.65],[140745,140745,10],[140746,140746,8.18],[140747,140747,6.04],[140748,140748,5.94],[140749,140749,6.02],[140750,140750,10],[140751,140751,6.04],[140752,140755,10],[140756,140759,6.02],[140760,140761,6.04],[140762,140769,6.02],[140770,140773,10],[140774,140774,3.54],[140775,140782,6.02],[140783,140783,10],[140784,140794,6.02],[140795,140798,10],[140799,140799,6.02],[140800,140803,10],[140804,140804,6.02],[140805,140806,10],[140807,140808,6.02],[140809,140809,10],[140810,140813,6.02],[140814,140814,10],[140815,140815,8.65],[140816,140818,8.3],[140819,140819,6.02],[140820,140823,10],[140824,140827,6.02],[140828,140831,10],[140832,140846,6.02],[140847,140847,8.65],[140848,140855,9],[140856,140857,6.02],[140858,140858,10.21],[140859,140859,10.52],[140860,140860,9.17],[140861,140863,6.02],[140864,140864,7.5],[140865,140865,6.02],[140866,140866,7.5],[140867,140871,6.02],[140872,140883,10],[140884,140895,6.02],[140896,140896,5.31],[140897,140898,10],[140899,140899,6.56],[140900,140900,10],[140901,140901,5.94],[140902,140902,5.1],[140903,140905,10],[140906,140906,5],[140907,140907,7.5],[140908,140910,10],[140911,140911,5],[140912,140913,6.02],[140914,140925,10],[140926,140926,6.02],[140927,140927,10],[140928,140939,6.02],[140940,140940,8.79],[140941,140941,8.63],[140942,140942,8.59],[140943,140943,8.96],[140944,140946,6.02],[140947,140947,10],[140948,140956,6.02],[140957,140961,10],[140962,140962,8.92],[140963,140963,8.97],[140964,140964,8.83],[140965,140965,6.6],[140966,140966,7.41],[140967,140967,9.23],[140968,140968,5.33],[140969,140969,9.2],[140970,140971,10],[140972,140972,5.65],[140973,140973,7.76],[140974,140974,10.55],[140975,140975,11.18],[140976,140977,6.02],[140978,140978,6.03],[140979,141025,10],[141026,141026,7],[141027,141056,10],[141057,141057,9.74],[141058,141058,9.61],[141059,141059,9.74],[141060,141060,9.8],[141061,141061,10],[141062,141062,7.89],[141063,141063,7.9],[141064,141064,7.91],[141065,141065,6.9],[141066,141069,10],[141070,141070,7.88],[141071,141071,9.33],[141072,141072,9.11],[141073,141073,9.45],[141074,141074,9.74],[141075,141075,7.64],[141076,141076,8.46],[141077,141077,7.62],[141078,141078,7.61],[141079,141079,5.71],[141080,141080,6.77],[141081,141081,7.63],[141082,141082,7.6],[141083,141083,7.59],[141084,141084,7.54],[141085,141085,4.94],[141086,141086,5.52],[141087,141087,5.37],[141088,141088,5.77],[141089,141089,6.92],[141090,141090,7.86],[141091,141092,7.88],[141093,141093,7.9],[141094,141094,7.93],[141095,141095,7.94],[141096,141096,10],[141097,141097,8.23],[141098,141098,7.89],[141099,141099,8.41],[141100,141100,8.23],[141101,141101,8.33],[141102,141102,8.16],[141103,141103,8.31],[141104,141104,9.23],[141105,141105,7.44],[141106,141106,7.23],[141107,141107,7.49],[141108,141108,7.9],[141109,141109,7.92],[141110,141110,6.95],[141111,141111,7.76],[141112,141112,7.68],[141113,141113,7.92],[141114,141114,7.59],[141115,141115,7.07],[141116,141116,7.08],[141117,141117,6.82],[141118,141118,7.01],[141119,141119,8.26],[141120,141120,8.15],[141121,141122,7.89],[141123,141123,7.07],[141124,141124,6.87],[141125,141125,6.96],[141126,141126,6.89],[141127,141127,7.86],[141128,141128,7.87],[141129,141129,7.13],[141130,141130,7.91],[141131,141131,7.85],[141132,141132,10],[141133,141133,8.73],[141134,141134,10],[141135,141136,7.62],[141137,141138,7.59],[141139,141141,10],[141142,141142,7.84],[141143,141143,10],[141144,141144,2.89],[141145,141145,2.77],[141146,141146,4.15],[141147,141148,3.92],[141149,141150,6.68],[141151,141152,10],[141153,141153,7.32],[141154,141155,5.44],[141156,141156,9.1],[141157,141157,6.67],[141158,141159,7.6],[141160,141161,3.9],[141162,141163,3.17],[141164,141165,2.76],[141166,141167,5.09],[141168,141169,4.1],[141170,141171,2.34],[141172,141173,3.34],[141174,141203,7.88],[141204,141204,8.94],[141205,141207,10],[141208,141208,7.48],[141209,141209,9.24],[141210,141210,7.48],[141211,141211,9.18],[141212,141212,9.27],[141213,141214,9.28],[141215,141215,8.34],[141216,141216,8.73],[141217,141217,8.28],[141218,141219,9.24],[141220,141220,9.17],[141221,141221,9.3],[141222,141222,9.31],[141223,141223,4.63],[141224,141224,8.83],[141225,141226,8.36],[141227,141228,8.67],[141229,141230,6.96],[141231,141231,8.74],[141232,141232,10],[141233,141233,8.74],[141234,141234,7.6],[141235,141235,9.46],[141236,141236,7.71],[141237,141237,8.65],[141238,141238,7.71],[141239,141239,8.88],[141240,141240,9.67],[141241,141241,8.88],[141242,141242,8.31],[141243,141243,8.73],[141244,141244,9.27],[141245,141245,9.7],[141246,141246,9.18],[141247,141247,10],[141248,141248,5.48],[141249,141249,9.48],[141250,141250,6.89],[141251,141252,5.64],[141253,141254,6.02],[141255,141255,6.2],[141256,141257,9.18],[141258,141258,3.4],[141259,141259,8.38],[141260,141260,3.25],[141261,141261,8.38],[141262,141263,10],[141264,141264,7.46],[141265,141265,6.2],[141266,141266,5.97],[141267,141268,5.42],[141269,141270,9.02],[141271,141271,11.15],[141272,141273,6.89],[141274,141274,8.7],[141275,141275,8.56],[141276,141276,10.55],[141277,141278,8.49],[141279,141279,3.96],[141280,141280,5.51],[141281,141281,7],[141282,141283,8.76],[141284,141285,9.46],[141286,141287,4.22],[141288,141289,3.66],[141290,141291,4.63],[141292,141293,4.88],[141294,141295,2.33],[141296,141297,10.33],[141298,141299,9.74],[141300,141300,12],[141301,141311,15.74],[141312,141567,6.84],[141568,141575,9.26],[141576,141577,5.11],[141578,141583,9.26],[141584,141584,14.12],[141585,141585,9.26],[141586,141587,5.11],[141588,141619,9.26],[141620,141621,10],[141622,141623,8.65],[141624,141624,5.11],[141625,141625,8.65],[141626,141640,9.26],[141641,141641,5.11],[141642,141643,9.26],[141644,141645,5.11],[141646,141646,9.26],[141647,141647,5.11],[141648,141648,9.26],[141649,141649,5.11],[141650,141651,9.26],[141652,141653,5.11],[141654,141655,9.26],[141656,141657,5.11],[141658,141659,9.26],[141660,141661,5.11],[141662,141663,9.26],[141664,141665,5.11],[141666,141669,8.65],[141670,141677,9.26],[141678,141679,6.85],[141680,141685,9.26],[141686,141686,6.85],[141687,141687,9.26],[141688,141689,6.85],[141690,141690,9.26],[141691,141691,6.85],[141692,141693,9.26],[141694,141695,6.85],[141696,141696,3.65],[141697,141697,3.8],[141698,141698,3.13],[141699,141700,3.74],[141701,141702,4.47],[141703,141704,3.35],[141705,141706,3.95],[141707,141708,3.01],[141709,141712,3],[141713,141713,3.66],[141714,141714,3.68],[141715,141716,6.59],[141717,141718,6.95],[141719,141720,6.48],[141721,141721,2.26],[141722,141722,2.77],[141723,141723,5.94],[141724,141725,5.92],[141726,141726,6.61],[141727,141727,5.48],[141728,141729,5.94],[141730,141733,5.48],[141734,141735,7.53],[141736,141743,5.94],[141744,141748,7.03],[141749,141749,8.69],[141750,141750,7],[141751,141751,7.02],[141752,141752,7.22],[141753,141753,7.02],[141754,141754,7.03],[141755,141755,7.04],[141756,141761,7.02],[141762,141762,8.55],[141763,141763,8.74],[141764,141768,7.47],[141769,141769,7.96],[141770,141772,7.49],[141773,141773,9.44],[141774,141774,6.5],[141775,141776,7.58],[141777,141779,6.87],[141780,141781,6.51],[141782,141783,7.67],[141784,141785,2.77],[141786,141787,4.23],[141788,141788,6.37],[141789,141789,6.47],[141790,141790,6.37],[141791,141791,6.74],[141792,141792,7.47],[141793,141793,6.53],[141794,141794,6.83],[141795,141797,6.64],[141798,141798,7.1],[141799,141799,6.35],[141800,141801,7.49],[141802,141802,7.17],[141803,141803,4.73],[141804,141805,8.99],[141806,141807,5.98],[141808,141809,7.08],[141810,141811,7.02],[141812,141812,8.18],[141813,141813,5.99],[141814,141814,5.76],[141815,141817,5.08],[141818,141819,6.76],[141820,141821,5.37],[141822,141823,4.73],[141824,141825,8.99],[141826,141826,9.01],[141827,141828,5.44],[141829,141830,5.95],[141831,141832,7.66],[141833,141833,6.66],[141834,141834,8.55],[141835,141835,6.52],[141836,141836,15.05],[141837,141839,6.11],[141840,141840,4.99],[141841,141841,7.28],[141842,141842,5.19],[141843,141843,4.99],[141844,141844,6.28],[141845,141845,4.99],[141846,141846,6.11],[141847,141847,6.76],[141848,141850,6.11],[141851,141851,6.38],[141852,141852,6.17],[141853,141853,6.87],[141854,141854,3.95],[141855,141855,3.34],[141856,141856,8.11],[141857,141857,3.26],[141858,141859,5.41],[141860,141860,5.44],[141861,141861,5.41],[141862,141862,5.44],[141863,141863,6.47],[141864,141864,6.38],[141865,141866,5.45],[141867,141868,5.43],[141869,141870,7.61],[141871,141871,4.58],[141872,141872,5.29],[141873,141873,5.42],[141874,141874,5.21],[141875,141875,8.05],[141876,141877,7.14],[141878,141880,8.99],[141881,141883,7.49],[141884,141885,5.12],[141886,141886,3.34],[141887,141887,6.15],[141888,141893,5.44],[141894,141895,3.88],[141896,141897,5.42],[141898,141899,5.11],[141900,141901,7.39],[141902,141903,5.95],[141904,141904,7.39],[141905,141906,6.1],[141907,141908,6.52],[141909,141910,7.53],[141911,141912,6.52],[141913,141913,6.06],[141914,141915,6.52],[141916,141917,7.38],[141918,141920,6.1],[141921,141921,5.43],[141922,141923,6.1],[141924,141925,6.67],[141926,141929,5.42],[141930,141933,5.43],[141934,141934,4.85],[141935,141938,5.43],[141939,141939,5.44],[141940,141940,8.48],[141941,141941,9.84],[141942,141942,14.57],[141943,141943,5.45],[141944,141944,5.95],[141945,141946,6.59],[141947,141948,5.12],[141949,141951,5.43],[141952,141952,5.44],[141953,141958,5.43],[141959,141959,5.51],[141960,141960,5.7],[141961,141964,5.43],[141965,141965,5.51],[141966,141966,5.48],[141967,141968,5.45],[141969,141975,5.43],[141976,141978,5.44],[141979,141982,5.43],[141983,141983,5.52],[141984,141984,5.46],[141985,141986,6.83],[141987,141987,8.07],[141988,141988,5.44],[141989,141989,9.35],[141990,141993,6.13],[141994,141994,5.12],[141995,141995,5.24],[141996,141996,5.51],[141997,141997,5.56],[141998,141998,5.42],[141999,142001,5.53],[142002,142002,5.51],[142003,142006,5.53],[142007,142007,5.47],[142008,142008,5.48],[142009,142009,5.47],[142010,142010,5.48],[142011,142012,8.88],[142013,142014,5.64],[142015,142022,4.59],[142023,142026,5.46],[142027,142028,4.59],[142029,142030,9.53],[142031,142032,5.64],[142033,142034,5.63],[142035,142038,4.59],[142039,142040,8.5],[142041,142043,5.97],[142044,142044,6.1],[142045,142045,5.97],[142046,142046,3.93],[142047,142049,6.89],[142050,142050,6.86],[142051,142051,6.84],[142052,142052,6.86],[142053,142053,8.37],[142054,142054,6.86],[142055,142057,6.89],[142058,142059,6.93],[142060,142061,5.12],[142062,142062,3.13],[142063,142064,2.84],[142065,142065,2.99],[142066,142066,3.9],[142067,142067,5.43],[142068,142068,3.49],[142069,142069,4.78],[142070,142070,2.26],[142071,142072,9.71],[142073,142074,5.43],[142075,142075,4.99],[142076,142076,3.55],[142077,142077,4.11],[142078,142079,2.94],[142080,142083,6.02],[142084,142084,10.98],[142085,142087,10],[142088,142091,6.02],[142092,142092,10.98],[142093,142093,5.86],[142094,142097,6],[142098,142105,6.02],[142106,142108,10],[142109,142110,2.4],[142111,142114,9.1],[142115,142115,9.26],[142116,142116,12.07],[142117,142118,10],[142119,142120,5.44],[142121,142121,10],[142122,142123,3.57],[142124,142125,8.42],[142126,142127,5.96],[142128,142129,9.26],[142130,142130,12],[142131,142131,15.74],[142132,142134,9.26],[142135,142135,14.12],[142136,142148,9.26],[142149,142150,9.28],[142151,142156,9.26],[142157,142160,10],[142161,142161,7.94],[142162,142162,7],[142163,142164,8.65],[142165,142223,10],[142224,142225,12.34],[142226,142335,10],[142336,142336,8.17],[142337,142337,8.47],[142338,142338,10.63],[142339,142339,9.58],[142340,142340,10.71],[142341,142341,6.58],[142342,142342,10.63],[142343,142343,8.54],[142344,142344,10.19],[142345,142346,10.72],[142347,142347,5.21],[142348,142348,10.96],[142349,142349,4.45],[142350,142350,10.38],[142351,142351,8.36],[142352,142353,5.69],[142354,142354,7.69],[142355,142355,5.69],[142356,142356,8.04],[142357,142357,10.63],[142358,142358,8.54],[142359,142359,7.96],[142360,142360,8.55],[142361,142361,7.96],[142362,142362,8.65],[142363,142363,8.18],[142364,142364,8.4],[142365,142365,9.09],[142366,142366,8.57],[142367,142367,7.42],[142368,142368,6.99],[142369,142369,9.36],[142370,142370,7.78],[142371,142371,8.57],[142372,142372,7.27],[142373,142373,8.5],[142374,142374,8.6],[142375,142375,10.3],[142376,142376,10.4],[142377,142377,13.04],[142378,142378,9.27],[142379,142379,6.01],[142380,142380,3.88],[142381,142381,7.92],[142382,142382,9.89],[142383,142383,10],[142384,142384,7.07],[142385,142385,7.27],[142386,142386,9.2],[142387,142387,7.98],[142388,142388,8.96],[142389,142389,5.08],[142390,142390,9.2],[142391,142391,6.88],[142392,142392,8.34],[142393,142394,9.14],[142395,142395,4.73],[142396,142396,9.19],[142397,142397,3.97],[142398,142398,8.71],[142399,142399,7.23],[142400,142400,4.93],[142401,142401,5.06],[142402,142402,6.63],[142403,142403,4.86],[142404,142404,6.42],[142405,142405,9.2],[142406,142406,7.38],[142407,142407,7.43],[142408,142408,6.99],[142409,142409,6.23],[142410,142410,7.02],[142411,142411,7.07],[142412,142412,6.69],[142413,142413,6.98],[142414,142414,7.46],[142415,142415,6.39],[142416,142416,6.13],[142417,142417,7.22],[142418,142418,6.04],[142419,142419,7.46],[142420,142420,5.64],[142421,142421,6.64],[142422,142422,7.22],[142423,142423,7.84],[142424,142424,8.53],[142425,142425,10.38],[142426,142426,7.97],[142427,142427,4.83],[142428,142428,3.12],[142429,142429,6.44],[142430,142430,7.71],[142431,142431,10],[142432,142432,6.11],[142433,142433,2.78],[142434,142434,6.11],[142435,142435,5.56],[142436,142436,6.67],[142437,142437,4.44],[142438,142438,2.78],[142439,142439,7.22],[142440,142440,5],[142441,142441,7.22],[142442,142442,5],[142443,142443,6.11],[142444,142444,4.44],[142445,142445,7.68],[142446,142447,6.02],[142448,142448,8.98],[142449,142449,6.46],[142450,142450,10.56],[142451,142451,8.75],[142452,142452,4.72],[142453,142453,6.59],[142454,142454,5.04],[142455,142455,5.77],[142456,142456,6.89],[142457,142458,6.02],[142459,142459,4.07],[142460,142461,6.02],[142462,142462,5.86],[142463,142463,6],[142464,142464,6.33],[142465,142465,5.74],[142466,142466,6.5],[142467,142467,5.76],[142468,142468,5.24],[142469,142469,4.33],[142470,142470,8.14],[142471,142471,6.58],[142472,142472,6.43],[142473,142473,4.95],[142474,142474,5.56],[142475,142475,4.79],[142476,142476,5.72],[142477,142477,4.54],[142478,142478,7.41],[142479,142479,6.37],[142480,142480,7.82],[142481,142481,6.05],[142482,142482,2.84],[142483,142483,2.58],[142484,142484,6.19],[142485,142485,5.34],[142486,142486,5.81],[142487,142487,4.67],[142488,142488,8],[142489,142489,7.46],[142490,142490,7.6],[142491,142491,6.32],[142492,142492,5.72],[142493,142493,4.7],[142494,142494,7.81],[142495,142495,6.05],[142496,142496,7.31],[142497,142497,6.24],[142498,142498,6.05],[142499,142499,5.3],[142500,142500,6.32],[142501,142501,4.8],[142502,142502,6.1],[142503,142503,5.67],[142504,142504,5.66],[142505,142505,5.08],[142506,142506,8.04],[142507,142507,7.25],[142508,142508,5.86],[142509,142509,5.29],[142510,142510,8.34],[142511,142511,7],[142512,142512,10.32],[142513,142513,8.16],[142514,142514,6.47],[142515,142515,5.06],[142516,142516,5.54],[142517,142517,5.72],[142518,142518,6.3],[142519,142519,5.52],[142520,142520,5.72],[142521,142521,4.7],[142522,142522,6.47],[142523,142523,5.06],[142524,142524,7.88],[142525,142525,7.06],[142526,142526,8.16],[142527,142527,7.45],[142528,142528,6.49],[142529,142529,5.38],[142530,142530,10.32],[142531,142531,8.16],[142532,142532,5.84],[142533,142533,4.98],[142534,142534,4.41],[142535,142535,3.8],[142536,142536,5.49],[142537,142537,5.25],[142538,142539,5.72],[142540,142540,5.88],[142541,142541,5.1],[142542,142542,6.17],[142543,142543,5.5],[142544,142544,5.24],[142545,142545,4.35],[142546,142547,5.72],[142548,142548,3.57],[142549,142549,3.69],[142550,142550,5.99],[142551,142551,5.17],[142552,142552,7.31],[142553,142553,6.24],[142554,142554,8.14],[142555,142555,6.58],[142556,142557,6.04],[142558,142558,5.56],[142559,142559,4.7],[142560,142560,8.24],[142561,142561,7.28],[142562,142562,6.58],[142563,142563,5.85],[142564,142564,5.34],[142565,142565,7.49],[142566,142566,7.28],[142567,142567,8.71],[142568,142569,6.93],[142570,142570,10.45],[142571,142571,8.18],[142572,142572,5.92],[142573,142573,7.6],[142574,142574,6.61],[142575,142577,0],[142578,142578,7.3],[142579,142579,6.15],[142580,142584,10],[142585,142585,8.36],[142586,142587,5.54],[142588,142588,8.36],[142589,142589,3.46],[142590,142590,4.26],[142591,142591,3],[142592,142639,10],[142640,142640,4.14],[142641,142641,8.56],[142642,142642,8.57],[142643,142644,6.79],[142645,142645,6.39],[142646,142646,6.05],[142647,142648,6.31],[142649,142650,6.47],[142651,142651,7],[142652,142652,7.94],[142653,142653,7.24],[142654,142654,4.98],[142655,142655,7.24],[142656,142657,8.57],[142658,142658,2.85],[142659,142659,6.39],[142660,142660,7.25],[142661,142661,6.39],[142662,142662,6.99],[142663,142663,7.28],[142664,142664,7.42],[142665,142665,4.77],[142666,142666,5.11],[142667,142667,6.27],[142668,142668,7.84],[142669,142669,5.36],[142670,142670,6.47],[142671,142671,2.83],[142672,142672,7.65],[142673,142673,2.73],[142674,142674,5.51],[142675,142675,4.14],[142676,142677,8.57],[142678,142678,7.25],[142679,142679,2.92],[142680,142680,7.1],[142681,142682,8.57],[142683,142683,7.56],[142684,142684,5.19],[142685,142685,6.39],[142686,142686,7.56],[142687,142687,6.47],[142688,142688,6.71],[142689,142689,7.05],[142690,142690,4.77],[142691,142691,8.36],[142692,142692,4.54],[142693,142693,8.36],[142694,142694,6.51],[142695,142695,7.71],[142696,142702,10],[142703,142703,3.08],[142704,142704,7.69],[142705,142718,10],[142719,142719,0],[142720,142720,12.46],[142721,142721,10.87],[142722,142722,10.62],[142723,142723,8.84],[142724,142724,9.3],[142725,142725,9.11],[142726,142726,7.76],[142727,142728,7.91],[142729,142729,9.23],[142730,142730,8.1],[142731,142731,9.19],[142732,142732,10.03],[142733,142733,9.89],[142734,142734,9.9],[142735,142735,13.63],[142736,142736,15.99],[142737,142737,8.18],[142738,142738,8.71],[142739,142739,10.7],[142740,142740,10.16],[142741,142741,7.37],[142742,142742,10.16],[142743,142751,10],[142752,142752,9.3],[142753,142753,10.92],[142754,142754,10.84],[142755,142755,9.3],[142756,142756,10.79],[142757,142758,9.3],[142759,142759,10],[142760,142762,7.76],[142763,142763,7.82],[142764,142764,7.76],[142765,142765,9.13],[142766,142766,7.91],[142767,142767,10],[142768,142772,11.27],[142773,142773,12.42],[142774,142774,11.27],[142775,142775,10],[142776,142776,15.52],[142777,142777,15.72],[142778,142778,15.68],[142779,142779,15.57],[142780,142780,18.51],[142781,142781,15.15],[142782,142782,15.35],[142783,142783,10],[142784,142790,8.51],[142791,142791,10],[142792,142792,7.2],[142793,142793,9.25],[142794,142794,9.21],[142795,142795,7.2],[142796,142796,9.16],[142797,142798,7.2],[142799,142799,10],[142800,142800,8.95],[142801,142801,10.99],[142802,142802,10.96],[142803,142803,8.95],[142804,142804,10.9],[142805,142806,8.95],[142807,142807,10],[142808,142808,5.83],[142809,142809,8.33],[142810,142810,6.06],[142811,142811,6.37],[142812,142812,6.01],[142813,142813,8.03],[142814,142814,5.83],[142815,142815,10],[142816,142847,0],[142848,142848,2.38],[142849,142849,2.43],[142850,142851,1.73],[142852,142852,2.03],[142853,142853,2.02],[142854,142854,3.79],[142855,142855,3.83],[142856,142856,3.05],[142857,142858,2.97],[142859,142859,3.54],[142860,142861,2.34],[142862,142862,10.05],[142863,142863,12.05],[142864,142865,11.68],[142866,142866,1.57],[142867,142867,5.51],[142868,142869,7.03],[142870,142870,6.03],[142871,142871,3.33],[142872,142872,6.02],[142873,142873,10],[142874,142874,3.79],[142875,142875,6.67],[142876,142877,2.34],[142878,142879,6.67],[142880,142881,4.28],[142882,142885,4.47],[142886,142887,6.73],[142888,142889,6.31],[142890,142892,6.91],[142893,142893,6.67],[142894,142894,6.02],[142895,142895,2.35],[142896,142896,3.41],[142897,142897,2.82],[142898,142911,10],[142912,142912,5],[142913,143405,10],[143406,143407,16],[143408,143422,10],[143423,143423,5],[143424,143512,10],[143513,143514,0],[143515,143664,10],[143665,143715,8.65],[143716,143716,8.46],[143717,143758,8.65],[143759,143871,10],[143872,143899,8.65],[143900,143900,8.51],[143901,143967,10],[143968,143995,8.65],[143996,143998,10],[143999,143999,8.46],[144000,144255,10],[144256,144260,8.65],[144261,144265,10],[144266,144268,8.65],[144269,144272,10],[144273,144277,8.65],[144278,144280,10],[144281,144282,8.65],[144283,144294,10],[144295,144303,8.65],[144304,144307,10],[144308,144321,8.65],[144322,144322,10],[144323,144323,8.65],[144324,144324,10],[144325,144326,8.65],[144327,144327,8.46],[144328,144328,10],[144329,144330,8.65],[144331,144334,10],[144335,144336,8.65],[144337,144338,10],[144339,144339,8.65],[144340,144341,10],[144342,144342,8.65],[144343,144346,10],[144347,144349,8.65],[144350,150975,10],[150976,151039,8.79],[151040,172031,10],[172032,172034,6.17],[172035,172035,6.41],[172036,172036,6.15],[172037,172038,5.68],[172039,172039,6.3],[172040,172040,5.25],[172041,172042,5.43],[172043,172043,5.62],[172044,172045,5.93],[172046,172046,5.73],[172047,172047,5.82],[172048,172050,6.85],[172051,172051,5.89],[172052,172052,5.78],[172053,172053,6.37],[172054,172054,6.26],[172055,172057,5.32],[172058,172058,6.75],[172059,172060,5.84],[172061,172061,6.27],[172062,172062,5.14],[172063,172064,6.37],[172065,172065,6.05],[172066,172067,5.83],[172068,172068,4.49],[172069,172069,6.01],[172070,172071,5.2],[172072,172072,5.18],[172073,172074,6.12],[172075,172075,4.49],[172076,172076,5.72],[172077,172078,5.24],[172079,172079,4.95],[172080,172081,6.06],[172082,172082,5.47],[172083,172084,5.39],[172085,172085,6.02],[172086,172087,7.05],[172088,172088,6.07],[172089,172090,6.22],[172091,172091,5.72],[172092,172093,6.67],[172094,172094,6.12],[172095,172095,5.93],[172096,172097,6.13],[172098,172098,6.23],[172099,172100,5.73],[172101,172101,5.89],[172102,172102,6.2],[172103,172104,6.39],[172105,172105,5.63],[172106,172106,5.01],[172107,172108,5.8],[172109,172109,5.97],[172110,172111,6.23],[172112,172112,6.07],[172113,172114,6.43],[172115,172115,6.11],[172116,172117,6.17],[172118,172118,6.12],[172119,172120,5.82],[172121,172121,5.92],[172122,172122,6.27],[172123,172124,5.71],[172125,172125,6.14],[172126,172126,6.29],[172127,172128,8.01],[172129,172129,6.37],[172130,172131,5.74],[172132,172132,6.07],[172133,172133,6.09],[172134,172135,5.03],[172136,172136,6.12],[172137,172138,5.76],[172139,172139,6.08],[172140,172140,6.16],[172141,172142,5.91],[172143,172143,5.54],[172144,172145,5.76],[172146,172146,5.58],[172147,172148,5.3],[172149,172149,5.1],[172150,172150,5.85],[172151,172152,5.68],[172153,172153,5.53],[172154,172155,5.89],[172156,172156,5.27],[172157,172157,6.63],[172158,172159,5.45],[172160,172160,6.71],[172161,172161,6.03],[172162,172164,6.37],[172165,172165,5.61],[172166,172167,6.07],[172168,172168,5.63],[172169,172170,7.09],[172171,172171,5.86],[172172,172173,6.13],[172174,172174,5.7],[172175,172176,5.64],[172177,172177,5.1],[172178,172179,5.6],[172180,172180,5.92],[172181,172181,6.39],[172182,172182,6.19],[172183,172183,5.06],[172184,172184,6.03],[172185,172186,5.95],[172187,172187,5.76],[172188,172189,5.87],[172190,172190,5.34],[172191,172191,6.07],[172192,172193,5.84],[172194,172194,5.56],[172195,172195,5.49],[172196,172197,5.42],[172198,172198,5.92],[172199,172200,6.39],[172201,172202,5.2],[172203,172203,5.34],[172204,172205,6.12],[172206,172206,5.92],[172207,172208,5.41],[172209,172209,5.18],[172210,172211,5.92],[172212,172212,5.45],[172213,172213,6.33],[172214,172215,5.98],[172216,172216,6.37],[172217,172217,5.59],[172218,172219,5.69],[172220,172220,6.85],[172221,172221,6.07],[172222,172223,5.6],[172224,172224,5.83],[172225,172226,6],[172227,172227,5.77],[172228,172229,6.54],[172230,172230,5.82],[172231,172232,5.27],[172233,172233,5.32],[172234,172235,6.39],[172236,172236,5.27],[172237,172237,5.54],[172238,172239,5.56],[172240,172240,5.24],[172241,172241,6.58],[172242,172244,5.61],[172245,172246,5.28],[172247,172247,5.36],[172248,172248,4.82],[172249,172250,6.22],[172251,172251,6.08],[172252,172253,5.47],[172254,172254,5.6],[172255,172258,6.08],[172259,172260,5.4],[172261,172261,5.47],[172262,172262,5.39],[172263,172264,5.03],[172265,172265,5.15],[172266,172268,5.92],[172269,172269,5.15],[172270,172270,5.66],[172271,172272,5.57],[172273,172273,6.35],[172274,172275,5.42],[172276,172276,5.77],[172277,172278,5.18],[172279,172279,5.4],[172280,172281,5.56],[172282,172282,5.6],[172283,172284,6.39],[172285,172285,5.6],[172286,172287,6.24],[172288,172288,6.74],[172289,172290,5.54],[172291,172291,6.17],[172292,172293,5.71],[172294,172294,5.66],[172295,172295,6.26],[172296,172297,5.21],[172298,172298,6.12],[172299,172300,5.36],[172301,172301,5.68],[172302,172303,5.65],[172304,172304,5.1],[172305,172306,4.98],[172307,172307,5.37],[172308,172308,4.9],[172309,172310,5.08],[172311,172311,5.53],[172312,172313,5.03],[172314,172314,5.1],[172315,172316,4.93],[172317,172317,5.08],[172318,172319,5.72],[172320,172320,5.69],[172321,172321,4.98],[172322,172323,5.37],[172324,172324,4.98],[172325,172325,5.59],[172326,172327,4.82],[172328,172328,5.95],[172329,172329,5.1],[172330,172331,5.34],[172332,172332,5.38],[172333,172334,5.63],[172335,172335,5.37],[172336,172336,5.9],[172337,172338,5.92],[172339,172339,5.87],[172340,172341,6.15],[172342,172342,5.37],[172343,172344,5.21],[172345,172348,5.37],[172349,172349,5.63],[172350,172352,5.37],[172353,172354,5.59],[172355,172355,5.51],[172356,172356,5.2],[172357,172358,5.07],[172359,172359,5.3],[172360,172361,5.18],[172362,172362,6.07],[172363,172363,5.75],[172364,172365,6.39],[172366,172366,5.87],[172367,172368,6.13],[172369,172369,5.37],[172370,172371,4.86],[172372,172372,5.54],[172373,172374,5.73],[172375,172375,5.63],[172376,172377,5.6],[172378,172378,6.46],[172379,172379,5.53],[172380,172382,5.6],[172383,172384,6.07],[172385,172385,5.97],[172386,172386,5.1],[172387,172388,5.31],[172389,172389,5.82],[172390,172391,5.53],[172392,172392,4.94],[172393,172394,4.84],[172395,172395,5.6],[172396,172396,5.41],[172397,172398,6.08],[172399,172399,5.64],[172400,172400,5.02],[172401,172402,5.86],[172403,172403,5.34],[172404,172405,6.66],[172406,172406,5.76],[172407,172408,5.22],[172409,172410,5.37],[172411,172411,5.71],[172412,172412,5.81],[172413,172413,5.92],[172414,172415,6.13],[172416,172416,6.07],[172417,172418,5.94],[172419,172419,5.5],[172420,172421,5.59],[172422,172422,5.49],[172423,172424,5.38],[172425,172425,5.73],[172426,172426,5.64],[172427,172428,5.69],[172429,172429,5.64],[172430,172431,5.24],[172432,172432,5.2],[172433,172433,5.47],[172434,172436,5.76],[172437,172438,5.42],[172439,172441,5.6],[172442,172442,5.39],[172443,172444,5.6],[172445,172445,5.82],[172446,172446,6.22],[172447,172448,6.09],[172449,172449,5.72],[172450,172451,5.55],[172452,172452,5.71],[172453,172454,5.36],[172455,172455,5.71],[172456,172458,5.2],[172459,172459,5.65],[172460,172461,5],[172462,172462,5.42],[172463,172464,5.47],[172465,172465,5.94],[172466,172467,6],[172468,172468,5.8],[172469,172470,5.76],[172471,172471,5.37],[172472,172473,4.63],[172474,172474,5.92],[172475,172475,4.9],[172476,172477,4.88],[172478,172478,4.87],[172479,172479,6.25],[172480,172481,5.13],[172482,172482,5.59],[172483,172485,5.31],[172486,172486,6],[172487,172487,5.99],[172488,172489,5.68],[172490,172490,5.54],[172491,172492,5.01],[172493,172493,6.37],[172494,172494,5.92],[172495,172496,6.37],[172497,172497,5.6],[172498,172499,5.11],[172500,172500,6],[172501,172502,5.61],[172503,172503,5.37],[172504,172505,4.99],[172506,172506,5.96],[172507,172508,5.83],[172509,172510,5.2],[172511,172512,5.99],[172513,172513,5.2],[172514,172514,5.62],[172515,172516,5.46],[172517,172517,5.92],[172518,172518,6.25],[172519,172520,6.43],[172521,172521,5.92],[172522,172522,6.54],[172523,172524,5.57],[172525,172525,5.27],[172526,172526,5.32],[172527,172528,5.1],[172529,172529,4.94],[172530,172530,6.26],[172531,172532,6.13],[172533,172533,5.92],[172534,172535,5.59],[172536,172536,5.7],[172537,172538,5.54],[172539,172539,4.96],[172540,172541,5.37],[172542,172542,5.64],[172543,172543,5.81],[172544,172545,5.31],[172546,172546,5.32],[172547,172548,5.42],[172549,172549,5.78],[172550,172550,5.27],[172551,172552,5.03],[172553,172553,5.46],[172554,172554,6.16],[172555,172556,4.54],[172557,172557,6.39],[172558,172558,6],[172559,172560,5.74],[172561,172561,5.38],[172562,172563,5.07],[172564,172564,5.92],[172565,172566,5.37],[172567,172568,5.97],[172569,172569,5.66],[172570,172570,5.71],[172571,172572,5.52],[172573,172573,5.25],[172574,172574,5.47],[172575,172576,6.26],[172577,172577,5.82],[172578,172578,5.29],[172579,172580,4.67],[172581,172581,4.58],[172582,172582,5.42],[172583,172584,5.93],[172585,172585,6.73],[172586,172586,6.03],[172587,172589,5.29],[172590,172591,5.53],[172592,172593,5.98],[172594,172594,5.39],[172595,172596,6.09],[172597,172597,5.39],[172598,172599,5.53],[172600,172601,5.41],[172602,172603,5.85],[172604,172604,5.76],[172605,172606,5.16],[172607,172607,5.47],[172608,172608,6.29],[172609,172610,4.77],[172611,172611,5.73],[172612,172613,6.13],[172614,172614,5.59],[172615,172616,5.64],[172617,172617,5.49],[172618,172618,5.07],[172619,172620,5.58],[172621,172621,6.08],[172622,172622,5.87],[172623,172624,5.33],[172625,172625,5.62],[172626,172626,6.05],[172627,172628,5.7],[172629,172629,6.05],[172630,172630,4.98],[172631,172632,5.24],[172633,172633,5.64],[172634,172635,5.53],[172636,172636,5.54],[172637,172638,5.59],[172639,172639,5.24],[172640,172640,6.09],[172641,172642,5.37],[172643,172643,5.88],[172644,172644,5.92],[172645,172646,5.22],[172647,172647,4.78],[172648,172649,5.63],[172650,172650,6.46],[172651,172652,5.18],[172653,172653,6.11],[172654,172656,5.25],[172657,172657,6.04],[172658,172660,6.16],[172661,172661,5.43],[172662,172663,5.53],[172664,172664,5.8],[172665,172665,5.26],[172666,172667,5.92],[172668,172668,5.67],[172669,172670,5.89],[172671,172671,6.12],[172672,172672,6.2],[172673,172675,5.57],[172676,172677,5.5],[172678,172678,5.8],[172679,172680,5.17],[172681,172681,4.88],[172682,172683,5.48],[172684,172684,5.76],[172685,172685,5.7],[172686,172687,6.17],[172688,172688,5.61],[172689,172690,5.69],[172691,172691,5.55],[172692,172694,5.46],[172695,172695,6.17],[172696,172697,5.63],[172698,172698,6.04],[172699,172699,5.78],[172700,172701,5.98],[172702,172702,5.63],[172703,172704,5.71],[172705,172705,5.25],[172706,172706,5.53],[172707,172708,4.78],[172709,172709,5.46],[172710,172711,6.5],[172712,172712,5.17],[172713,172714,5.41],[172715,172715,4.79],[172716,172717,5.49],[172718,172718,5.18],[172719,172720,4.84],[172721,172721,4.96],[172722,172722,5.95],[172723,172724,5.53],[172725,172725,5.54],[172726,172728,5.92],[172729,172729,6.75],[172730,172731,5.1],[172732,172732,5.69],[172733,172733,6.35],[172734,172735,6.3],[172736,172736,5.67],[172737,172738,5.92],[172739,172739,6.37],[172740,172740,5.96],[172741,172742,6.33],[172743,172743,5.65],[172744,172745,5.88],[172746,172746,4.89],[172747,172748,5.83],[172749,172749,5.1],[172750,172751,5.13],[172752,172752,5.71],[172753,172754,6.07],[172755,172755,5.32],[172756,172756,5.18],[172757,172758,5.53],[172759,172759,5.57],[172760,172760,5.88],[172761,172762,5.77],[172763,172763,5.88],[172764,172765,5.82],[172766,172766,5.41],[172767,172768,5.83],[172769,172769,5.75],[172770,172771,5.53],[172772,172772,5.49],[172773,172774,5.09],[172775,172775,6.04],[172776,172777,5.15],[172778,172778,5.37],[172779,172780,5.99],[172781,172781,5.66],[172782,172783,5.42],[172784,172784,5.29],[172785,172787,6.45],[172788,172790,5.42],[172791,172791,5.31],[172792,172793,5.97],[172794,172795,5.63],[172796,172797,4.59],[172798,172799,5.97],[172800,172800,5.74],[172801,172802,6.13],[172803,172803,5.66],[172804,172805,4.77],[172806,172806,5.92],[172807,172808,6.13],[172809,172809,5.99],[172810,172811,5.97],[172812,172812,5.25],[172813,172814,6.33],[172815,172815,6.08],[172816,172816,5.2],[172817,172818,5.06],[172819,172819,5.51],[172820,172822,4.77],[172823,172823,5.46],[172824,172825,5.13],[172826,172826,5.46],[172827,172828,5.71],[172829,172829,5.22],[172830,172830,5.98],[172831,172832,5.14],[172833,172833,5.63],[172834,172835,5.52],[172836,172838,5.73],[172839,172839,5.42],[172840,172841,5.73],[172842,172842,4.99],[172843,172844,5.01],[172845,172845,5.23],[172846,172847,5.6],[172848,172848,5.37],[172849,172849,6.37],[172850,172852,5.53],[172853,172853,5.44],[172854,172855,5.92],[172856,172856,6.55],[172857,172858,5.1],[172859,172859,5.92],[172860,172860,5.42],[172861,172862,5.49],[172863,172863,6.28],[172864,172864,6.49],[172865,172866,5.5],[172867,172867,5.58],[172868,172869,6.12],[172870,172870,5.83],[172871,172872,5.76],[172873,172873,5.08],[172874,172875,5.42],[172876,172876,5.32],[172877,172877,6.67],[172878,172879,6.33],[172880,172880,5.71],[172881,172883,5.2],[172884,172884,6.13],[172885,172885,6.61],[172886,172887,6.41],[172888,172888,6.06],[172889,172890,5.77],[172891,172891,5.52],[172892,172893,5.6],[172894,172894,5.18],[172895,172896,5.59],[172897,172897,5.34],[172898,172899,5.96],[172900,172900,5.6],[172901,172901,5.76],[172902,172903,5.38],[172904,172904,5.94],[172905,172905,5.64],[172906,172907,5.03],[172908,172908,5.25],[172909,172911,5.68],[172912,172912,5.37],[172913,172914,7.05],[172915,172915,5.83],[172916,172917,5.74],[172918,172918,5.58],[172919,172920,5.72],[172921,172921,5.34],[172922,172923,5.58],[172924,172925,5.63],[172926,172927,5.32],[172928,172928,5.87],[172929,172930,5.54],[172931,172931,5.83],[172932,172932,5.22],[172933,172934,5.08],[172935,172935,5.6],[172936,172936,5.31],[172937,172938,5.83],[172939,172939,6.33],[172940,172941,5.3],[172942,172942,5.66],[172943,172944,5.3],[172945,172945,5.14],[172946,172947,5.53],[172948,172948,5.92],[172949,172950,5.84],[172951,172951,5.18],[172952,172954,5.83],[172955,172955,5.08],[172956,172957,5.68],[172958,172958,6.07],[172959,172959,5.6],[172960,172961,5.63],[172962,172962,6.08],[172963,172964,5.72],[172965,172965,5.35],[172966,172967,5.66],[172968,172968,5.37],[172969,172970,5.97],[172971,172971,5.31],[172972,172973,5.68],[172974,172974,6.23],[172975,172976,5.03],[172977,172977,5],[172978,172978,5.81],[172979,172980,5.97],[172981,172981,6.1],[172982,172982,6],[172983,172985,5.22],[172986,172986,5.19],[172987,172988,5.78],[172989,172989,5.53],[172990,172991,5.42],[172992,172992,5.37],[172993,172994,4.79],[172995,172995,6.08],[172996,172997,5.03],[172998,172998,5.92],[172999,173000,6.51],[173001,173001,5.47],[173002,173003,5.84],[173004,173004,5.05],[173005,173005,5.75],[173006,173006,5.63],[173007,173007,5.75],[173008,173008,6.09],[173009,173010,5.58],[173011,173011,6.14],[173012,173012,5.03],[173013,173014,5.37],[173015,173015,5.34],[173016,173017,5.03],[173018,173018,7.01],[173019,173020,5.32],[173021,173021,5.77],[173022,173023,5.08],[173024,173024,5.61],[173025,173026,5.37],[173027,173027,5.66],[173028,173028,5.49],[173029,173030,6.07],[173031,173031,5.55],[173032,173032,5.41],[173033,173035,5.97],[173036,173038,6.37],[173039,173039,5.97],[173040,173040,5.92],[173041,173042,4.92],[173043,173043,5.61],[173044,173045,6.13],[173046,173046,5.77],[173047,173048,5.71],[173049,173049,4.98],[173050,173051,5.64],[173052,173052,5.98],[173053,173054,5.7],[173055,173055,5.92],[173056,173056,7.74],[173057,173058,6.07],[173059,173059,6.32],[173060,173060,5.32],[173061,173063,5.59],[173064,173064,5.27],[173065,173066,6.75],[173067,173067,5.92],[173068,173068,5.66],[173069,173070,5.92],[173071,173071,5.18],[173072,173073,5.92],[173074,173074,5.48],[173075,173077,6.08],[173078,173079,5.54],[173080,173080,5.6],[173081,173082,5.13],[173083,173083,5.59],[173084,173084,5.73],[173085,173086,5.64],[173087,173087,6.17],[173088,173089,5.46],[173090,173090,6.54],[173091,173091,5.86],[173092,173093,5.6],[173094,173094,5.46],[173095,173095,5.82],[173096,173097,6.6],[173098,173098,5.72],[173099,173100,5.61],[173101,173101,5.37],[173102,173103,6.19],[173104,173104,5.41],[173105,173105,5.3],[173106,173107,5.73],[173108,173108,6],[173109,173109,6.37],[173110,173111,6.2],[173112,173112,5.53],[173113,173114,6.37],[173115,173115,6.01],[173116,173117,6.59],[173118,173118,5.63],[173119,173120,5.04],[173121,173121,5],[173122,173123,5.77],[173124,173124,5.41],[173125,173126,5.17],[173127,173127,5.1],[173128,173129,5.58],[173130,173130,5.71],[173131,173132,4.84],[173133,173133,4.77],[173134,173134,5.84],[173135,173136,6.04],[173137,173137,5],[173138,173139,5.53],[173140,173140,5.89],[173141,173141,5.58],[173142,173143,5.76],[173144,173144,5.68],[173145,173145,5.92],[173146,173147,5.31],[173148,173148,5.42],[173149,173149,6.37],[173150,173151,6.14],[173152,173152,5.41],[173153,173155,6.37],[173156,173156,6.73],[173157,173158,5.6],[173159,173159,6.37],[173160,173161,5.81],[173162,173162,5.96],[173163,173163,5.41],[173164,173168,5.37],[173169,173169,6.17],[173170,173171,5.81],[173172,173172,5.1],[173173,173173,6.17],[173174,173175,5.41],[173176,173176,5.72],[173177,173177,5.61],[173178,173179,5.32],[173180,173180,5.42],[173181,173181,5.59],[173182,173183,5.61],[173184,173184,5.73],[173185,173185,5.34],[173186,173187,6.17],[173188,173188,5.31],[173189,173190,5.42],[173191,173191,5.41],[173192,173193,5.33],[173194,173194,5.49],[173195,173196,5.56],[173197,173199,10],[173200,173200,2.64],[173201,173202,4.08],[173203,173203,3.75],[173204,173204,5.1],[173205,173206,5.36],[173207,173207,4.79],[173208,173208,5],[173209,173209,5.59],[173210,173210,5.46],[173211,173211,3.39],[173212,173212,5.83],[173213,173213,5.61],[173214,173214,4.82],[173215,173215,4.51],[173216,173216,4.98],[173217,173218,6.39],[173219,173219,4.89],[173220,173220,6.13],[173221,173221,5.39],[173222,173222,5.67],[173223,173223,5.68],[173224,173224,5.92],[173225,173225,5],[173226,173226,5.72],[173227,173227,5.39],[173228,173228,6.07],[173229,173229,5.84],[173230,173230,6.17],[173231,173231,5.03],[173232,173233,3.87],[173234,173234,3.52],[173235,173235,6.37],[173236,173236,8.14],[173237,173237,6.19],[173238,173238,7.35],[173239,173239,5.64],[173240,173240,4.71],[173241,173241,5.08],[173242,173242,5.42],[173243,173243,4.88],[173244,173244,5.11],[173245,173245,5.69],[173246,173246,4.96],[173247,173247,5.89],[173248,173248,5.31],[173249,173249,5.51],[173250,173250,6.1],[173251,173251,4.97],[173252,173252,4.88],[173253,173253,5.53],[173254,173254,4.2],[173255,173263,10],[173264,173264,6.5],[173265,173266,6.05],[173267,173267,7.3],[173268,173269,5.56],[173270,173270,7.28],[173271,173272,6.19],[173273,173273,3.71],[173274,173275,6.32],[173276,173276,5.72],[173277,173278,5.19],[173279,173279,9.07],[173280,173280,7.6],[173281,173281,5.24],[173282,173282,5.49],[173283,173284,6.22],[173285,173286,6],[173287,173287,7.41],[173288,173288,7.28],[173289,173289,3.71],[173290,173290,9.3],[173291,173291,5.86],[173292,173292,5.66],[173293,173293,6.5],[173294,173295,6.39],[173296,173297,5.56],[173298,173298,2.85],[173299,173299,7.81],[173300,173301,7.31],[173302,173302,5.24],[173303,173303,7.3],[173304,173304,3],[173305,173305,3.03],[173306,173306,4.9],[173307,173307,4.93],[173308,173308,3.03],[173309,173309,3],[173310,173310,6.33],[173311,173311,5.46],[173312,173312,6.5],[173313,173313,6.94],[173314,173314,7.79],[173315,173316,8.57],[173317,173317,8.82],[173318,173318,10.82],[173319,173320,7.35],[173321,173323,6.68],[173324,173325,5.44],[173326,173326,9.13],[173327,173327,9.24],[173328,173329,11.96],[173330,173331,8.51],[173332,173332,7.09],[173333,173333,6.95],[173334,173334,7],[173335,173335,7.01],[173336,173337,7],[173338,173339,10.66],[173340,173341,7.79],[173342,173342,13.9],[173343,173343,10.4],[173344,173344,7.9],[173345,173345,7.24],[173346,173346,7.72],[173347,173347,10.66],[173348,173348,8.51],[173349,173349,9.41],[173350,173350,9.31],[173351,173351,4.5],[173352,173352,8.42],[173353,173353,8.92],[173354,173354,6.07],[173355,173355,8.72],[173356,173356,6.64],[173357,173357,7.04],[173358,173358,6.17],[173359,173359,6.46],[173360,173360,7.7],[173361,173361,7.95],[173362,173362,7.28],[173363,173363,8.01],[173364,173364,8.44],[173365,173366,6.61],[173367,173368,4.34],[173369,173369,6.16],[173370,173370,9.05],[173371,173371,7.63],[173372,173372,8.33],[173373,173373,6.82],[173374,173374,7.73],[173375,173375,6.06],[173376,173378,9.06],[173379,173380,5.28],[173381,173381,9.5],[173382,173382,7.78],[173383,173383,6.26],[173384,173384,6.95],[173385,173385,5.46],[173386,173386,7.18],[173387,173387,7.4],[173388,173389,9.28],[173390,173390,8.01],[173391,173391,9.32],[173392,173392,8.69],[173393,173393,8.35],[173394,173394,9.46],[173395,173395,8.94],[173396,173396,6.82],[173397,173397,6.47],[173398,173398,7.48],[173399,173399,6.07],[173400,173400,5.48],[173401,173401,7.34],[173402,173403,7.06],[173404,173404,7.63],[173405,173405,9.62],[173406,173407,7.02],[173408,173409,8.78],[173410,173411,9.17],[173412,173412,8.74],[173413,173413,9.06],[173414,173414,7.23],[173415,173415,7.68],[173416,173416,6.79],[173417,173417,8.1],[173418,173418,6.72],[173419,173419,8.17],[173420,173420,7.43],[173421,173421,9.48],[173422,173422,7.32],[173423,173423,6.14],[173424,173424,9.14],[173425,173425,6.79],[173426,173426,7.09],[173427,173427,6.79],[173428,173428,7.11],[173429,173429,7.41],[173430,173431,5.66],[173432,173432,7.36],[173433,173433,8.87],[173434,173434,5.99],[173435,173435,7.93],[173436,173436,5.93],[173437,173438,7.26],[173439,173440,6.88],[173441,173442,9.28],[173443,173444,8.57],[173445,173445,8.68],[173446,173446,9.38],[173447,173447,7.8],[173448,173448,8.01],[173449,173449,4.99],[173450,173450,7.14],[173451,173452,6.4],[173453,173453,8.21],[173454,173454,5.02],[173455,173455,7.32],[173456,173456,8.19],[173457,173457,6.72],[173458,173458,8.87],[173459,173459,9.92],[173460,173460,7],[173461,173461,7.82],[173462,173462,8.04],[173463,173463,7.68],[173464,173464,7.16],[173465,173465,7.06],[173466,173466,7.79],[173467,173467,7.9],[173468,173468,8.82],[173469,173469,7.5],[173470,173470,7.8],[173471,173473,7.26],[173474,173474,8.53],[173475,173475,9.72],[173476,173476,5.31],[173477,173477,5.95],[173478,173478,8.1],[173479,173479,9.72],[173480,173483,6.71],[173484,173487,7.09],[173488,173491,7.71],[173492,173492,6.17],[173493,173494,5.44],[173495,173495,6.72],[173496,173496,7.6],[173497,173497,6.12],[173498,173498,7.95],[173499,173500,8.38],[173501,173501,8.47],[173502,173502,8.37],[173503,173503,7.72],[173504,173504,8.47],[173505,173506,9.72],[173507,173508,7.02],[173509,173510,8.25],[173511,173512,8.16],[173513,173514,5.88],[173515,173515,6.75],[173516,173516,8.21],[173517,173517,6.75],[173518,173518,8.39],[173519,173520,5.37],[173521,173522,7.38],[173523,173523,7.27],[173524,173524,8.12],[173525,173525,7.27],[173526,173526,8.12],[173527,173527,5.45],[173528,173529,6.84],[173530,173530,5.59],[173531,173531,7.36],[173532,173532,10.49],[173533,173533,7.86],[173534,173534,6.13],[173535,173535,5.66],[173536,173536,9.56],[173537,173537,7.07],[173538,173538,12.56],[173539,173539,7.53],[173540,173540,7.61],[173541,173541,9.68],[173542,173542,7.38],[173543,173543,7.58],[173544,173544,5.73],[173545,173545,6.65],[173546,173546,6.37],[173547,173547,7.37],[173548,173550,8.87],[173551,173552,8.73],[173553,173554,7.36],[173555,173555,8.2],[173556,173556,9],[173557,173558,8.1],[173559,173562,6.1],[173563,173566,9.05],[173567,173567,6.96],[173568,173568,8.26],[173569,173569,8.16],[173570,173570,7.96],[173571,173575,7.06],[173576,173576,9],[173577,173577,5.68],[173578,173578,7.57],[173579,173579,8.23],[173580,173580,6.35],[173581,173581,4.71],[173582,173582,5.69],[173583,173583,7.42],[173584,173584,13.46],[173585,173585,7.72],[173586,173586,9.81],[173587,173587,4.91],[173588,173588,8.61],[173589,173589,9.28],[173590,173590,6.9],[173591,173591,7.09],[173592,173592,7.27],[173593,173593,7.42],[173594,173594,10.78],[173595,173595,9.14],[173596,173596,7.22],[173597,173597,8.26],[173598,173598,9.19],[173599,173599,6.22],[173600,173600,5.95],[173601,173601,3],[173602,173602,6.62],[173603,173603,6.66],[173604,173604,6.54],[173605,173605,6.49],[173606,173606,5.46],[173607,173607,6.55],[173608,173608,5.88],[173609,173609,6.22],[173610,173610,8.97],[173611,173611,5.43],[173612,173631,10],[173632,173632,7.48],[173633,173633,5.56],[173634,173634,7.48],[173635,173635,5.56],[173636,173636,7.43],[173637,173637,4.54],[173638,173638,3.11],[173639,173639,2.6],[173640,173640,7.1],[173641,173641,5.72],[173642,173643,5.78],[173644,173644,9.03],[173645,173645,7.09],[173646,173646,7.06],[173647,173647,5.94],[173648,173648,9.43],[173649,173649,8.18],[173650,173650,8.09],[173651,173651,6.98],[173652,173652,10.22],[173653,173653,8.06],[173654,173654,9.36],[173655,173655,7.45],[173656,173656,7.27],[173657,173657,5.62],[173658,173658,7.1],[173659,173659,6.02],[173660,173660,9.26],[173661,173661,7.92],[173662,173662,7.25],[173663,173663,6.38],[173664,173664,7.21],[173665,173665,5.92],[173666,173666,7.69],[173667,173667,6.91],[173668,173668,7.16],[173669,173669,6.45],[173670,173670,10.44],[173671,173671,9.36],[173672,173672,7.2],[173673,173673,5.73],[173674,173674,7.2],[173675,173675,5.73],[173676,173676,9.5],[173677,173677,7.07],[173678,173678,6.82],[173679,173682,0],[173683,173683,5.04],[173684,173693,0],[173694,173695,5],[173696,173696,7.69],[173697,173697,6.63],[173698,173698,4.34],[173699,173699,3.46],[173700,173700,12.6],[173701,173701,11.08],[173702,173702,9.14],[173703,173704,7.69],[173705,173705,6.63],[173706,173706,7.89],[173707,173707,6.76],[173708,173708,5.67],[173709,173709,5.37],[173710,173710,7.27],[173711,173711,6.3],[173712,173712,6.12],[173713,173713,5.37],[173714,173714,8.43],[173715,173715,7.28],[173716,173716,6.95],[173717,173717,5.83],[173718,173718,9.07],[173719,173719,7.91],[173720,173720,7.86],[173721,173721,6.68],[173722,173722,5.26],[173723,173723,4.5],[173724,173724,1.96],[173725,173725,1.69],[173726,173727,0],[173728,173728,6.6],[173729,173729,7.68],[173730,173730,5.46],[173731,173731,6.56],[173732,173732,7.07],[173733,173733,6.17],[173734,173734,5.78],[173735,173735,6.06],[173736,173736,5.5],[173737,173737,7.25],[173738,173738,6.59],[173739,173739,6],[173740,173740,6.61],[173741,173741,5.72],[173742,173742,5.49],[173743,173743,6],[173744,173744,6.37],[173745,173745,5.5],[173746,173746,5.66],[173747,173747,5.24],[173748,173748,6.91],[173749,173749,5.88],[173750,173750,7.41],[173751,173751,7.16],[173752,173752,7.82],[173753,173753,4.8],[173754,173754,6.21],[173755,173755,6.18],[173756,173756,6.39],[173757,173757,6],[173758,173758,7.41],[173759,173761,6.19],[173762,173762,5.33],[173763,173763,7.7],[173764,173764,6.97],[173765,173765,6.02],[173766,173766,5.69],[173767,173767,6.21],[173768,173768,6.7],[173769,173769,5.72],[173770,173770,7.48],[173771,173771,5.63],[173772,173772,4.83],[173773,173773,5.46],[173774,173774,6],[173775,173775,7.1],[173776,173776,4.65],[173777,173777,6.21],[173778,173778,5.2],[173779,173779,6.79],[173780,173780,7.13],[173781,173781,5.2],[173782,173782,5.79],[173783,173783,7.19],[173784,173784,7.18],[173785,173785,6],[173786,173786,5.24],[173787,173787,6.51],[173788,173788,6.19],[173789,173789,6.68],[173790,173790,5.79],[194560,194814,10],[194815,194815,7.9],[194816,195102,10],[917504,917504,0],[917505,917511,3.33],[917512,917512,0],[917513,917517,3.52],[917518,917532,3.33],[917533,917533,0],[917534,917535,3.33],[917536,917536,3.52],[917537,917537,3.94],[917538,917538,4.59],[917539,917539,8.18],[917540,917540,6.36],[917541,917541,10.76],[917542,917542,7.27],[917543,917543,2.69],[917544,917545,4.54],[917546,917546,6.36],[917547,917547,8.18],[917548,917548,3.64],[917549,917549,4.54],[917550,917550,3.64],[917551,917551,4.54],[917552,917561,6.36],[917562,917563,4.54],[917564,917566,8.18],[917567,917567,5.45],[917568,917568,10],[917569,917569,6.84],[917570,917570,6.86],[917571,917571,6.98],[917572,917572,7.71],[917573,917573,6.32],[917574,917574,5.75],[917575,917575,7.75],[917576,917576,7.51],[917577,917577,4.21],[917578,917578,4.55],[917579,917579,6.93],[917580,917580,5.57],[917581,917581,8.43],[917582,917582,7.48],[917583,917583,7.87],[917584,917584,6.03],[917585,917585,7.87],[917586,917586,6.95],[917587,917587,6.84],[917588,917588,6.16],[917589,917589,7.32],[917590,917590,6.84],[917591,917591,9.89],[917592,917592,6.85],[917593,917593,6.15],[917594,917594,6.85],[917595,917597,4.54],[917598,917598,8.18],[917599,917600,6.36],[917601,917601,6.01],[917602,917602,6.23],[917603,917603,5.21],[917604,917604,6.23],[917605,917605,5.96],[917606,917606,3.52],[917607,917607,6.23],[917608,917608,6.33],[917609,917609,2.74],[917610,917610,3.44],[917611,917611,5.92],[917612,917612,2.74],[917613,917613,9.73],[917614,917614,6.33],[917615,917615,6.07],[917616,917617,6.23],[917618,917618,4.27],[917619,917619,5.21],[917620,917620,3.94],[917621,917621,6.33],[917622,917622,5.92],[917623,917623,8.18],[917624,917625,5.92],[917626,917626,5.25],[917627,917627,6.35],[917628,917628,4.54],[917629,917629,6.35],[917630,917630,8.18]]');

/***/ }),

/***/ 4464:
/***/ ((module) => {

module.exports = JSON.parse('[[32,32,3.87],[33,33,4.33],[34,34,5.05],[35,35,9],[36,36,6.99],[37,37,11.84],[38,38,7.99],[39,39,2.95],[40,41,5],[42,42,6.99],[43,43,9],[44,44,4],[45,45,5],[46,46,4],[47,47,5],[48,57,6.99],[58,59,5],[60,62,9],[63,63,6],[64,64,11],[65,65,7.52],[66,66,7.54],[67,67,7.68],[68,68,8.48],[69,69,6.96],[70,70,6.32],[71,71,8.53],[72,72,8.27],[73,73,4.63],[74,74,5],[75,75,7.62],[76,76,6.12],[77,77,9.27],[78,78,8.23],[79,79,8.66],[80,80,6.63],[81,81,8.66],[82,82,7.65],[83,83,7.52],[84,84,6.78],[85,85,8.05],[86,86,7.52],[87,87,10.88],[88,88,7.54],[89,89,6.77],[90,90,7.54],[91,93,5],[94,94,9],[95,96,6.99],[97,97,6.61],[98,98,6.85],[99,99,5.73],[100,100,6.85],[101,101,6.55],[102,102,3.87],[103,103,6.85],[104,104,6.96],[105,105,3.02],[106,106,3.79],[107,107,6.51],[108,108,3.02],[109,109,10.7],[110,110,6.96],[111,111,6.68],[112,113,6.85],[114,114,4.69],[115,115,5.73],[116,116,4.33],[117,117,6.96],[118,118,6.51],[119,119,9],[120,121,6.51],[122,122,5.78],[123,123,6.98],[124,124,5],[125,125,6.98],[126,126,9],[160,160,3.87],[161,161,4.33],[162,165,6.99],[166,166,5],[167,168,6.99],[169,169,11],[170,170,6],[171,171,7.09],[172,172,9],[173,173,0],[174,174,11],[175,175,6.99],[176,176,5.96],[177,177,9],[178,179,5.96],[180,180,6.99],[181,181,7.06],[182,182,6.99],[183,183,4],[184,184,6.99],[185,185,5.96],[186,186,6],[187,187,7.09],[188,190,11],[191,191,6],[192,197,7.52],[198,198,10.83],[199,199,7.68],[200,203,6.96],[204,207,4.63],[208,208,8.53],[209,209,8.23],[210,214,8.66],[215,215,9],[216,216,8.66],[217,220,8.05],[221,221,6.77],[222,222,6.66],[223,223,6.82],[224,229,6.61],[230,230,10.51],[231,231,5.73],[232,235,6.55],[236,239,3.02],[240,240,6.73],[241,241,6.96],[242,246,6.68],[247,247,9],[248,248,6.68],[249,252,6.96],[253,253,6.51],[254,254,6.85],[256,256,7.52],[257,257,6.61],[258,258,7.52],[259,259,6.61],[260,260,7.52],[261,261,6.61],[262,262,7.68],[263,263,5.73],[264,264,7.68],[265,265,5.73],[266,266,7.68],[267,267,5.73],[268,268,7.68],[269,269,5.73],[270,270,8.48],[271,271,7.12],[272,272,8.53],[273,273,6.85],[274,274,6.96],[275,275,6.55],[276,276,6.96],[277,277,6.55],[278,278,6.96],[279,279,6.55],[280,280,6.96],[281,281,6.55],[282,282,6.96],[283,283,6.55],[284,284,8.53],[285,285,6.85],[286,286,8.53],[287,287,6.85],[288,288,8.53],[289,289,6.85],[290,290,8.53],[291,291,6.85],[292,292,8.27],[293,293,6.96],[294,294,8.27],[295,295,6.96],[296,296,4.63],[297,297,3.02],[298,298,4.63],[299,299,3.02],[300,300,4.63],[301,301,3.02],[302,302,4.63],[303,303,3.02],[304,304,4.63],[305,305,3.02],[306,306,9.58],[307,307,6.75],[308,308,5],[309,309,3.79],[310,310,7.62],[311,312,6.51],[313,313,6.12],[314,314,3.02],[315,315,6.12],[316,316,3.02],[317,317,6.12],[318,318,3.25],[319,319,6.12],[320,320,5.04],[321,321,6.18],[322,322,3.13],[323,323,8.23],[324,324,6.96],[325,325,8.23],[326,326,6.96],[327,327,8.23],[328,328,6.96],[329,329,8.04],[330,330,8.23],[331,331,6.96],[332,332,8.66],[333,333,6.68],[334,334,8.66],[335,335,6.68],[336,336,8.66],[337,337,6.68],[338,338,11.77],[339,339,10.8],[340,340,7.65],[341,341,4.69],[342,342,7.65],[343,343,4.69],[344,344,7.65],[345,345,4.69],[346,346,7.52],[347,347,5.73],[348,348,7.52],[349,349,5.73],[350,350,7.52],[351,351,5.73],[352,352,7.52],[353,353,5.73],[354,354,6.78],[355,355,4.33],[356,356,6.78],[357,357,4.33],[358,358,6.78],[359,359,4.33],[360,360,8.05],[361,361,6.96],[362,362,8.05],[363,363,6.96],[364,364,8.05],[365,365,6.93],[366,366,8.05],[367,367,6.96],[368,368,8.05],[369,369,6.96],[370,370,8.05],[371,371,6.93],[372,372,10.88],[373,373,9],[374,374,6.77],[375,375,6.51],[376,376,6.77],[377,377,7.54],[378,378,5.78],[379,379,7.54],[380,380,5.78],[381,381,7.54],[382,382,5.78],[384,384,5.5],[385,385,8.36],[386,386,6.32],[387,387,5.5],[388,388,6.32],[389,389,5.5],[390,391,7.34],[392,392,4.88],[393,393,7.94],[394,394,8.96],[395,395,6.32],[396,396,5.5],[397,397,5.18],[398,398,6.72],[399,399,8.3],[400,400,5.51],[401,401,6.12],[402,402,6.99],[403,404,7.94],[405,405,8.47],[406,406,2.79],[407,407,3.66],[408,408,7.94],[409,409,5.5],[410,410,3.06],[411,411,5.33],[412,412,8.98],[413,413,7.94],[414,414,5.5],[415,415,7.94],[416,416,8.87],[417,417,6.68],[418,418,10.17],[419,419,7.61],[420,420,7.15],[421,421,5.5],[422,423,6.12],[424,424,4.28],[425,425,6.4],[426,426,3.78],[427,427,3.06],[428,428,6.72],[429,429,3.06],[430,430,6.72],[431,431,8.32],[432,432,7.26],[433,433,8.17],[434,434,7.94],[435,435,8.59],[436,436,5.5],[437,437,6.72],[438,438,4.88],[439,440,5.93],[441,442,4.88],[443,444,5.5],[445,445,4.88],[446,446,4.64],[447,447,5.5],[448,448,2.2],[449,449,3.09],[450,450,2.74],[451,451,3.66],[452,452,14.66],[453,453,12.83],[454,454,10.38],[455,455,11],[456,456,9.78],[457,457,6.11],[458,458,12.22],[459,459,11],[460,460,8.56],[461,461,7.94],[462,462,4.88],[463,463,3.66],[464,464,3.06],[465,465,7.94],[466,466,5.5],[467,467,7.94],[468,468,5.5],[469,469,7.94],[470,470,5.5],[471,471,8.05],[472,472,6.96],[473,473,7.94],[474,474,5.5],[475,475,8.05],[476,476,6.96],[477,477,4.88],[478,478,7.94],[479,479,4.88],[480,480,7.94],[481,481,4.88],[482,482,9.78],[483,483,7.34],[484,484,7.94],[485,485,5.5],[486,486,7.94],[487,487,5.5],[488,488,7.94],[489,489,5.5],[490,490,7.94],[491,491,5.5],[492,492,7.94],[493,493,5.5],[494,494,5.93],[495,495,4.88],[496,496,3.06],[497,497,14.66],[498,498,12.83],[499,499,10.38],[500,500,8.53],[501,501,6.85],[502,502,10.45],[503,503,6.16],[504,504,8.23],[505,505,6.96],[506,506,7.52],[507,507,6.61],[508,508,10.83],[509,509,10.51],[510,510,8.66],[511,511,6.68],[512,512,7.94],[513,513,4.88],[514,514,7.94],[515,515,4.88],[516,516,6.72],[517,517,4.88],[518,518,6.72],[519,519,4.88],[520,520,3.66],[521,521,3.06],[522,522,3.66],[523,523,3.06],[524,524,7.94],[525,525,5.5],[526,526,7.94],[527,527,5.5],[528,528,7.34],[529,529,3.66],[530,530,7.34],[531,531,3.66],[532,532,7.94],[533,533,5.5],[534,534,7.94],[535,535,5.5],[536,536,7.52],[537,537,5.73],[538,538,6.78],[539,539,4.33],[540,540,6.19],[541,541,4.35],[542,542,7.94],[543,543,5.5],[544,544,7.15],[545,545,5.5],[546,546,6.64],[547,547,5.5],[548,548,6.72],[549,549,4.88],[550,550,7.94],[551,551,4.88],[552,552,6.72],[553,553,4.88],[554,554,7.94],[555,555,5.5],[556,556,7.94],[557,557,5.5],[558,558,7.94],[559,559,5.5],[560,560,7.94],[561,561,5.5],[562,562,7.94],[563,563,5.5],[564,564,3.06],[565,565,5.5],[566,566,3.49],[567,567,3.06],[568,568,8.51],[569,569,8.5],[570,570,7.94],[571,571,7.34],[572,572,5.5],[573,574,6.72],[575,575,4.28],[576,576,4.88],[577,577,5.87],[578,578,4.37],[579,579,7.34],[580,580,7.94],[581,581,7.98],[582,582,6.72],[583,583,4.88],[584,584,4.28],[585,585,3.06],[586,586,7.72],[587,587,5.5],[588,588,7.34],[589,589,3.66],[590,590,7.94],[880,880,4.61],[881,881,3.65],[882,882,6.46],[883,883,5.14],[884,885,3.66],[886,886,7.93],[887,887,6.38],[888,889,11],[890,890,3.66],[891,893,4.88],[894,894,5],[895,895,3.66],[896,899,11],[900,901,6.99],[902,902,7.52],[903,903,5],[904,904,8.26],[905,905,9.57],[906,906,5.94],[907,907,11],[908,908,9.69],[909,909,11],[910,910,8.29],[911,911,9.98],[912,912,3.02],[913,913,7.52],[914,914,7.54],[915,915,6.23],[916,916,7.73],[917,917,6.96],[918,918,7.54],[919,919,8.27],[920,920,8.66],[921,921,4.63],[922,922,7.62],[923,923,7.54],[924,924,9.27],[925,925,8.23],[926,926,7.14],[927,927,8.66],[928,928,8.27],[929,929,6.63],[930,930,11],[931,931,7.4],[932,932,6.78],[933,933,6.77],[934,934,9.01],[935,935,7.54],[936,936,9.58],[937,937,9],[938,938,4.63],[939,939,6.77],[940,940,6.85],[941,941,5.64],[942,942,6.96],[943,943,3.02],[944,944,6.94],[945,945,6.85],[946,946,6.82],[947,947,6.51],[948,948,6.69],[949,949,5.64],[950,950,5.03],[951,951,6.96],[952,952,6.86],[953,953,3.02],[954,955,6.51],[956,956,7.04],[957,957,6.51],[958,958,5.53],[959,959,6.68],[960,960,7.01],[961,961,6.88],[962,962,5.59],[963,963,6.93],[964,964,5.46],[965,965,6.94],[966,966,8.69],[967,967,6.49],[968,968,9.04],[969,969,8.95],[970,970,3.02],[971,971,6.94],[972,972,6.68],[973,973,6.94],[974,974,8.95],[975,975,6.23],[976,976,5.6],[977,977,5.45],[978,978,7.94],[979,979,9.79],[980,980,7.94],[981,981,5.79],[982,982,7.24],[983,983,6.16],[984,984,7.94],[985,985,5.5],[986,986,7.34],[987,987,4.62],[988,988,6.12],[989,989,4.91],[990,990,6.33],[991,991,4.96],[992,992,8.05],[993,993,6.09],[994,994,9.11],[995,995,8.56],[996,996,6.77],[997,997,5.73],[998,998,7.27],[999,999,4.88],[1000,1001,5.96],[1002,1002,7.22],[1003,1003,6.39],[1004,1004,7.69],[1005,1005,5.6],[1006,1006,5.23],[1007,1007,4.24],[1008,1008,6.16],[1009,1009,5.6],[1010,1010,4.88],[1011,1011,3.06],[1012,1012,7.94],[1013,1014,4.45],[1015,1015,6.12],[1016,1016,5.5],[1017,1017,7.34],[1018,1018,9.78],[1019,1019,6.96],[1020,1020,5.49],[1021,1022,7.34],[1024,1025,6.96],[1026,1026,8.72],[1027,1027,6.23],[1028,1028,7.71],[1029,1029,7.52],[1030,1031,4.63],[1032,1032,5],[1033,1033,12.3],[1034,1034,12.13],[1035,1035,9],[1036,1036,7.62],[1037,1037,8.26],[1038,1038,6.77],[1039,1039,8.27],[1040,1040,7.52],[1041,1042,7.54],[1043,1043,6.23],[1044,1044,8.2],[1045,1045,6.96],[1046,1046,10.7],[1047,1047,6.77],[1048,1049,8.26],[1050,1050,7.62],[1051,1051,8.08],[1052,1052,9.27],[1053,1053,8.27],[1054,1054,8.66],[1055,1055,8.27],[1056,1056,6.63],[1057,1057,7.68],[1058,1058,6.78],[1059,1059,6.77],[1060,1060,9.01],[1061,1061,7.54],[1062,1062,8.37],[1063,1063,7.83],[1064,1064,11.33],[1065,1065,11.49],[1066,1066,8.62],[1067,1067,10.12],[1068,1068,7.49],[1069,1069,7.71],[1070,1070,11.38],[1071,1071,7.77],[1072,1072,6.61],[1073,1073,6.76],[1074,1074,6.54],[1075,1075,5.18],[1076,1076,6.84],[1077,1077,6.55],[1078,1078,8.78],[1079,1079,5.77],[1080,1081,7.04],[1082,1082,6.51],[1083,1083,6.83],[1084,1084,7.66],[1085,1085,7.01],[1086,1086,6.68],[1087,1087,7.01],[1088,1088,6.85],[1089,1089,5.88],[1090,1090,5.46],[1091,1091,6.51],[1092,1092,9.25],[1093,1093,6.51],[1094,1094,7.09],[1095,1095,6.66],[1096,1096,9.64],[1097,1097,9.76],[1098,1098,7.05],[1099,1099,8.74],[1100,1100,6.28],[1101,1101,6.02],[1102,1102,9.23],[1103,1103,6.6],[1104,1105,6.55],[1106,1106,6.96],[1107,1107,5.18],[1108,1108,6.02],[1109,1109,5.73],[1110,1111,3.02],[1112,1112,3.79],[1113,1114,10.05],[1115,1115,6.96],[1116,1116,6.51],[1117,1117,7.04],[1118,1118,6.51],[1119,1119,7.01],[1120,1120,12.9],[1121,1121,6.97],[1122,1122,7.38],[1123,1123,5.97],[1124,1124,10.65],[1125,1125,7.45],[1126,1126,7.94],[1127,1127,6.49],[1128,1128,11.36],[1129,1129,9.17],[1130,1130,9.86],[1131,1131,7.6],[1132,1132,13.29],[1133,1133,10.29],[1134,1134,5.51],[1135,1135,4.35],[1136,1136,8.12],[1137,1137,6.89],[1138,1138,7.94],[1139,1139,5.5],[1140,1140,8.95],[1141,1141,6.48],[1142,1142,8.95],[1143,1143,6.48],[1144,1144,13.06],[1145,1145,11.44],[1146,1146,8.39],[1147,1147,6.23],[1148,1148,10.82],[1149,1149,8.95],[1150,1150,12.9],[1151,1151,6.97],[1152,1152,7.34],[1153,1153,4.88],[1154,1154,3.67],[1155,1158,0],[1159,1159,6.99],[1160,1161,0],[1162,1162,7.94],[1163,1163,5.89],[1164,1164,6.32],[1165,1165,5.17],[1166,1166,6.12],[1167,1167,5.5],[1168,1168,6.23],[1169,1169,5.18],[1170,1170,6.23],[1171,1171,5.18],[1172,1172,6.94],[1173,1173,5.67],[1174,1174,10.7],[1175,1175,8.78],[1176,1176,5.51],[1177,1177,4.35],[1178,1178,7.62],[1179,1179,6.51],[1180,1180,7.62],[1181,1181,6.51],[1182,1182,7.34],[1183,1183,5.34],[1184,1184,8.64],[1185,1185,6.31],[1186,1186,8.27],[1187,1187,7.01],[1188,1188,9.36],[1189,1189,6.85],[1190,1190,11.35],[1191,1191,8.68],[1192,1192,8.66],[1193,1193,6.78],[1194,1194,7.34],[1195,1195,4.88],[1196,1196,6.72],[1197,1197,4.81],[1198,1198,6.77],[1199,1199,6.51],[1200,1200,6.77],[1201,1201,6.51],[1202,1202,7.54],[1203,1203,6.51],[1204,1204,8.77],[1205,1205,6.63],[1206,1206,7.15],[1207,1207,5.53],[1208,1208,7.83],[1209,1209,6.66],[1210,1210,7.83],[1211,1211,6.96],[1212,1212,9.66],[1213,1213,7.58],[1214,1214,9.66],[1215,1215,7.58],[1216,1216,3.66],[1217,1217,9.86],[1218,1218,7.6],[1219,1219,7.34],[1220,1220,5.67],[1221,1221,7.46],[1222,1222,5.49],[1223,1223,7.94],[1224,1224,5.89],[1225,1225,7.94],[1226,1226,5.89],[1227,1227,7.15],[1228,1228,5.53],[1229,1229,9.78],[1230,1230,6.96],[1231,1231,3.06],[1232,1232,7.94],[1233,1233,4.88],[1234,1234,7.94],[1235,1235,4.88],[1236,1236,9.78],[1237,1237,7.34],[1238,1238,6.72],[1239,1239,4.88],[1240,1240,8.3],[1241,1241,6.55],[1242,1242,7.94],[1243,1243,4.88],[1244,1244,9.86],[1245,1245,7.6],[1246,1246,5.51],[1247,1247,4.35],[1248,1248,5.51],[1249,1249,4.88],[1250,1250,7.94],[1251,1251,5.89],[1252,1252,7.94],[1253,1253,5.89],[1254,1254,7.94],[1255,1255,5.5],[1256,1256,8.66],[1257,1257,6.68],[1258,1258,7.94],[1259,1259,5.5],[1260,1260,7.26],[1261,1261,4.72],[1262,1262,7.79],[1263,1263,5.5],[1264,1264,7.79],[1265,1265,5.5],[1266,1266,7.79],[1267,1267,5.5],[1268,1268,7.15],[1269,1269,5.53],[1270,1270,6.36],[1271,1271,4.51],[1272,1272,9.59],[1273,1273,7.39],[1274,1274,6.36],[1275,1275,4.51],[1276,1276,7.94],[1277,1277,5.5],[1278,1278,7.94],[1280,1280,6.32],[1281,1281,5.5],[1282,1282,8.84],[1283,1283,8.48],[1284,1284,8.82],[1285,1285,7.76],[1286,1286,6.31],[1287,1287,4.98],[1288,1288,9.97],[1289,1289,8.27],[1290,1290,10.45],[1291,1291,8.66],[1292,1292,7.94],[1293,1293,4.98],[1294,1294,7.65],[1295,1295,6.62],[1296,1296,5.51],[1297,1297,4.35],[1298,1298,7.46],[1299,1299,5.49],[1300,1300,8.38],[1301,1301,7.62],[1302,1302,9.13],[1303,1303,7.49],[1304,1304,11.34],[1305,1305,8.11],[1306,1306,8.66],[1307,1307,6.85],[1308,1308,10.88],[1309,1309,9],[1310,1310,7.53],[1311,1311,6.94],[1312,1312,10.79],[1313,1313,8.76],[1314,1314,12.22],[1315,1315,9.99],[1316,1316,7.77],[1317,1317,6.78],[1318,1318,7.56],[1319,1319,6.92],[1320,1320,4.88],[1321,1321,4.43],[1322,1322,9.8],[1323,1323,8.94],[1324,1324,6.18],[1325,1325,5.76],[1326,1326,7.49],[7424,7424,5.53],[7425,7425,7.1],[7426,7426,7.34],[7427,7427,5.11],[7428,7428,5.26],[7429,7430,5.77],[7431,7431,4.89],[7432,7432,4.35],[7433,7433,3.06],[7434,7434,3.26],[7435,7435,5.94],[7436,7436,4.89],[7437,7437,6.96],[7438,7438,5.89],[7439,7439,5.5],[7440,7440,5.26],[7441,7441,5.96],[7442,7442,5.91],[7443,7443,5.96],[7444,7444,7.94],[7445,7445,4.8],[7446,7447,5.5],[7448,7448,5.02],[7449,7450,5.06],[7451,7451,4.81],[7452,7452,5.91],[7453,7453,5.55],[7454,7454,7.2],[7455,7455,5.55],[7456,7456,5.5],[7457,7457,7.94],[7458,7458,4.88],[7459,7459,4.35],[7460,7460,4.37],[7461,7461,5.92],[7462,7462,4.51],[7463,7463,5.5],[7464,7464,5.89],[7465,7465,5.02],[7466,7466,5.81],[7467,7467,5.49],[7468,7468,4.64],[7469,7469,5.92],[7470,7471,4.25],[7472,7472,4.73],[7473,7474,4.07],[7475,7475,4.76],[7476,7476,4.84],[7477,7477,2.2],[7478,7478,2.71],[7479,7479,5.04],[7480,7480,4.08],[7481,7481,5.94],[7482,7482,5.09],[7483,7483,4.85],[7484,7484,4.6],[7485,7485,3.7],[7486,7486,3.65],[7487,7487,4.51],[7488,7488,3.99],[7489,7489,4.98],[7490,7490,6.09],[7491,7492,3.01],[7493,7493,3.45],[7494,7494,4.29],[7495,7495,3.41],[7496,7496,3.42],[7497,7498,2.82],[7499,7500,2.66],[7501,7501,3.31],[7502,7502,1.8],[7503,7503,3.47],[7504,7504,5.38],[7505,7505,3.1],[7506,7506,3.17],[7507,7507,2.81],[7508,7509,3.17],[7510,7510,3.42],[7511,7511,2.11],[7512,7512,3.6],[7513,7513,3.36],[7514,7514,5.38],[7515,7515,3.23],[7516,7516,3.51],[7517,7517,3.1],[7518,7518,2.92],[7519,7519,2.98],[7520,7520,3.68],[7521,7521,3.1],[7522,7522,1.8],[7523,7523,2.52],[7524,7524,3.6],[7525,7525,3.23],[7526,7526,3.1],[7527,7527,2.92],[7528,7528,3.25],[7529,7529,3.68],[7530,7530,3.1],[7531,7531,8.37],[7532,7533,5.5],[7534,7534,3.66],[7535,7535,8.56],[7536,7537,5.5],[7538,7539,3.66],[7540,7540,4.28],[7541,7541,3.06],[7542,7542,4.88],[7543,7543,5.5],[7544,7544,3.56],[7545,7545,5.18],[7546,7546,8.43],[7547,7547,3.06],[7548,7548,2.96],[7549,7549,5.5],[7550,7550,5.91],[7680,7680,7.94],[7681,7681,4.88],[7682,7682,7.34],[7683,7683,5.5],[7684,7684,7.54],[7685,7685,6.85],[7686,7686,7.34],[7687,7687,5.5],[7688,7688,7.68],[7689,7689,5.73],[7690,7690,7.94],[7691,7691,5.5],[7692,7692,8.48],[7693,7693,6.85],[7694,7694,7.94],[7695,7695,5.5],[7696,7696,7.94],[7697,7697,5.5],[7698,7698,7.94],[7699,7699,5.5],[7700,7700,6.96],[7701,7701,6.55],[7702,7702,6.96],[7703,7703,6.55],[7704,7704,6.72],[7705,7705,4.88],[7706,7706,6.72],[7707,7707,4.88],[7708,7708,6.72],[7709,7709,4.88],[7710,7710,6.12],[7711,7711,3.66],[7712,7712,7.94],[7713,7713,5.5],[7714,7714,7.94],[7715,7715,5.5],[7716,7716,8.27],[7717,7717,6.96],[7718,7718,7.94],[7719,7719,5.5],[7720,7720,7.94],[7721,7721,5.5],[7722,7722,7.94],[7723,7723,5.5],[7724,7724,3.66],[7725,7725,3.06],[7726,7726,4.63],[7727,7727,3.02],[7728,7728,7.62],[7729,7729,6.51],[7730,7730,7.62],[7731,7731,6.51],[7732,7732,7.94],[7733,7733,5.5],[7734,7734,6.12],[7735,7735,3.02],[7736,7736,6.72],[7737,7737,3.06],[7738,7738,6.72],[7739,7739,3.06],[7740,7740,6.72],[7741,7741,3.06],[7742,7742,9.27],[7743,7743,10.7],[7744,7744,9.78],[7745,7745,8.56],[7746,7746,9.27],[7747,7747,10.7],[7748,7748,7.94],[7749,7749,5.5],[7750,7750,8.23],[7751,7751,6.96],[7752,7752,7.94],[7753,7753,5.5],[7754,7754,7.94],[7755,7755,5.5],[7756,7756,8.66],[7757,7757,6.68],[7758,7758,7.94],[7759,7759,5.5],[7760,7760,8.66],[7761,7761,6.68],[7762,7762,8.66],[7763,7763,6.68],[7764,7764,6.63],[7765,7765,6.85],[7766,7766,6.12],[7767,7767,5.5],[7768,7768,7.34],[7769,7769,3.66],[7770,7770,7.65],[7771,7771,4.69],[7772,7772,7.34],[7773,7773,3.66],[7774,7774,7.34],[7775,7775,3.66],[7776,7776,6.12],[7777,7777,4.28],[7778,7778,7.52],[7779,7779,5.73],[7780,7780,6.12],[7781,7781,4.28],[7782,7782,6.12],[7783,7783,4.28],[7784,7784,6.12],[7785,7785,4.28],[7786,7786,6.72],[7787,7787,3.06],[7788,7788,6.78],[7789,7789,4.33],[7790,7790,6.72],[7791,7791,3.06],[7792,7792,6.72],[7793,7793,3.06],[7794,7794,7.94],[7795,7795,5.5],[7796,7796,7.94],[7797,7797,5.5],[7798,7798,7.94],[7799,7799,5.5],[7800,7800,8.05],[7801,7801,6.96],[7802,7802,7.94],[7803,7803,5.5],[7804,7804,7.52],[7805,7805,6.51],[7806,7806,7.52],[7807,7807,6.51],[7808,7808,10.88],[7809,7809,9],[7810,7810,10.88],[7811,7811,9],[7812,7812,10.88],[7813,7813,9],[7814,7814,10.38],[7815,7815,7.94],[7816,7816,10.88],[7817,7817,9],[7818,7818,7.94],[7819,7819,5.5],[7820,7820,7.94],[7821,7821,5.5],[7822,7822,7.94],[7823,7823,5.5],[7824,7824,6.72],[7825,7825,4.88],[7826,7826,7.54],[7827,7827,5.78],[7828,7828,6.72],[7829,7829,4.88],[7830,7830,5.5],[7831,7831,3.06],[7832,7832,7.94],[7833,7833,5.5],[7834,7834,4.88],[7835,7835,3.06],[7836,7836,4.66],[7837,7837,4.65],[7838,7838,7.46],[7839,7839,6.62],[7840,7840,7.52],[7841,7841,6.61],[7842,7842,7.52],[7843,7843,6.61],[7844,7844,7.52],[7845,7845,6.61],[7846,7846,7.52],[7847,7847,6.61],[7848,7848,7.52],[7849,7849,6.61],[7850,7850,7.52],[7851,7851,6.61],[7852,7852,7.52],[7853,7853,6.61],[7854,7854,7.52],[7855,7855,6.61],[7856,7856,7.52],[7857,7857,6.61],[7858,7858,7.52],[7859,7859,6.61],[7860,7860,7.52],[7861,7861,6.61],[7862,7862,7.52],[7863,7863,6.61],[7864,7864,6.96],[7865,7865,6.55],[7866,7866,6.96],[7867,7867,6.55],[7868,7868,6.96],[7869,7869,6.55],[7870,7870,6.96],[7871,7871,6.55],[7872,7872,6.96],[7873,7873,6.55],[7874,7874,6.96],[7875,7875,6.55],[7876,7876,6.96],[7877,7877,6.55],[7878,7878,6.96],[7879,7879,6.55],[7880,7880,4.63],[7881,7881,3.02],[7882,7882,4.63],[7883,7883,3.02],[7884,7884,8.66],[7885,7885,6.68],[7886,7886,8.66],[7887,7887,6.68],[7888,7888,8.66],[7889,7889,6.68],[7890,7890,8.66],[7891,7891,6.68],[7892,7892,8.66],[7893,7893,6.68],[7894,7894,8.66],[7895,7895,6.68],[7896,7896,8.66],[7897,7897,6.68],[7898,7898,8.87],[7899,7899,6.68],[7900,7900,8.87],[7901,7901,6.68],[7902,7902,8.87],[7903,7903,6.68],[7904,7904,8.87],[7905,7905,6.68],[7906,7906,8.87],[7907,7907,6.68],[7908,7908,8.05],[7909,7909,6.96],[7910,7910,8.05],[7911,7911,6.96],[7912,7912,8.32],[7913,7913,7.26],[7914,7914,8.32],[7915,7915,7.26],[7916,7916,8.32],[7917,7917,7.26],[7918,7918,8.32],[7919,7919,7.26],[7920,7920,8.32],[7921,7921,7.26],[7922,7922,6.77],[7923,7923,6.51],[7924,7924,6.77],[7925,7925,6.51],[7926,7926,6.77],[7927,7927,6.51],[7928,7928,6.77],[7929,7929,6.51],[7930,7930,10.3],[7931,7931,6.48],[7932,7932,5.57],[7933,7933,4.89],[7934,7934,5.04],[7936,7943,5.76],[7944,7945,7.94],[7946,7951,8.7],[7952,7957,4.62],[7958,7959,11],[7960,7961,8.23],[7962,7965,9.95],[7966,7967,11],[7968,7975,5.75],[7976,7977,9.45],[7978,7983,11.17],[7984,7991,2.96],[7992,7993,5.17],[7994,7999,6.89],[8000,8005,5.5],[8006,8007,11],[8008,8009,8.7],[8010,8011,10.96],[8012,8013,9.88],[8014,8015,11],[8016,8023,5.45],[8024,8024,11],[8025,8025,9.45],[8026,8026,11],[8027,8027,11.23],[8028,8028,11],[8029,8029,11.23],[8030,8030,11],[8031,8031,11.23],[8032,8039,7.24],[8040,8041,8.93],[8042,8043,10.97],[8044,8047,10.22],[8048,8049,6.85],[8050,8051,5.64],[8052,8053,6.96],[8054,8055,3.02],[8056,8057,6.68],[8058,8059,6.94],[8060,8061,8.95],[8062,8063,11],[8064,8071,5.76],[8072,8073,7.94],[8074,8079,8.7],[8080,8087,5.75],[8088,8089,9.45],[8090,8095,11.17],[8096,8103,7.24],[8104,8105,8.93],[8106,8107,10.97],[8108,8111,10.22],[8112,8116,5.76],[8117,8117,11],[8118,8119,5.76],[8120,8121,7.94],[8122,8123,7.52],[8124,8124,7.94],[8125,8125,3.66],[8126,8126,3.02],[8127,8129,3.66],[8130,8132,5.75],[8133,8133,11],[8134,8135,5.75],[8136,8136,6.96],[8137,8137,8.26],[8138,8138,8.27],[8139,8139,9.57],[8140,8140,7.94],[8141,8143,3.66],[8144,8145,2.96],[8146,8147,3.02],[8148,8149,11],[8150,8151,2.96],[8152,8153,3.66],[8154,8154,4.63],[8155,8155,5.94],[8156,8156,11],[8157,8159,3.66],[8160,8161,5.45],[8162,8163,6.94],[8164,8165,5.49],[8166,8167,5.45],[8168,8169,7.94],[8170,8170,6.77],[8171,8171,8.29],[8172,8172,7.63],[8173,8175,6.99],[8176,8177,11],[8178,8180,7.24],[8181,8181,11],[8182,8183,7.24],[8184,8184,8.66],[8185,8185,9.69],[8186,8186,9],[8187,8187,9.98],[8188,8188,8.17],[8189,8189,6.99],[8190,8190,3.66],[8192,8192,5.5],[8193,8193,11],[8194,8194,5.5],[8195,8195,11],[8196,8196,3.67],[8197,8197,2.75],[8198,8198,1.83],[8199,8199,6.99],[8200,8200,4],[8201,8201,2.2],[8202,8202,0.69],[8203,8207,0],[8208,8209,6.36],[8210,8211,6.99],[8212,8213,11],[8214,8214,3.09],[8215,8215,6.99],[8216,8219,2.95],[8220,8223,5.05],[8224,8225,6.99],[8226,8226,6],[8227,8227,5.17],[8228,8228,3.67],[8229,8229,7.33],[8230,8230,9],[8231,8231,3.48],[8232,8238,0],[8239,8239,1.93],[8240,8240,16.74],[8241,8241,14.91],[8242,8242,3.97],[8243,8244,6.13],[8245,8245,3.58],[8246,8246,5.96],[8247,8247,8.35],[8248,8248,3.88],[8249,8250,5],[8251,8251,7.95],[8252,8252,6.87],[8253,8253,4.64],[8254,8254,6.99],[8255,8256,5.5],[8257,8257,5.11],[8258,8258,10.02],[8259,8259,3.58],[8260,8260,3.97],[8261,8262,3.58],[8263,8263,8.88],[8264,8265,7.77],[8266,8267,6.96],[8268,8268,5.96],[8269,8269,5.97],[8270,8270,5.3],[8271,8271,3.48],[8272,8272,5.5],[8273,8273,5.3],[8274,8274,6.06],[8275,8275,11],[8276,8276,5.5],[8277,8277,7.67],[8278,8278,6.53],[8279,8279,10.72],[8280,8281,6.53],[8282,8282,11],[8283,8283,6.53],[8284,8284,7.68],[8285,8285,11],[8286,8286,3.06],[8287,8287,2.44],[8288,8302,0],[8304,8304,4.64],[8305,8305,2.38],[8306,8307,11],[8308,8309,5.96],[8310,8310,4.64],[8311,8312,5.96],[8313,8316,4.64],[8317,8318,2.48],[8319,8319,6],[8320,8332,4.64],[8333,8334,2.48],[8335,8335,11],[8336,8336,3.01],[8337,8337,2.82],[8338,8338,3.17],[8339,8339,3.19],[8340,8340,2.82],[8341,8350,11],[8352,8352,6.99],[8353,8354,7.68],[8355,8356,6.99],[8357,8357,10.7],[8358,8358,8.23],[8359,8359,12.8],[8360,8360,12.83],[8361,8361,10.88],[8362,8362,9.18],[8363,8363,6.85],[8364,8364,6.99],[8365,8365,7.62],[8366,8366,6.78],[8367,8367,11],[8368,8368,5.73],[8369,8369,6.63],[8370,8370,8.53],[8371,8372,7.52],[8373,8373,7.68],[8374,8374,7.44],[8375,8375,8.03],[8376,8376,6.22],[8377,8377,6.6],[8378,8378,6.12],[8379,8379,9.14],[8380,8381,6.22],[8382,8382,8.28],[8383,8383,7.22],[8384,8398,11],[8400,8402,0],[8403,8403,6.6],[8404,8405,7.7],[8406,8408,0],[8409,8410,6.6],[8411,8413,0],[8414,8414,11],[8415,8415,9.51],[8416,8416,9.9],[8417,8417,0],[8418,8418,11],[8419,8432,0],[8433,8446,11],[8448,8449,8.25],[8450,8450,6.62],[8451,8451,10.88],[8452,8452,7.04],[8453,8453,11.84],[8454,8454,8.25],[8455,8455,6.58],[8456,8456,6.63],[8457,8457,9.31],[8458,8458,11],[8459,8459,10.97],[8460,8460,9.06],[8461,8461,6.62],[8462,8462,6.35],[8463,8463,6.76],[8464,8464,9.87],[8465,8465,8.38],[8466,8466,10.41],[8467,8467,3.56],[8468,8468,8.56],[8469,8469,6.62],[8470,8470,12.89],[8471,8471,9.41],[8472,8472,9.09],[8473,8474,6.62],[8475,8475,10.38],[8476,8476,9.61],[8477,8477,6.62],[8478,8478,6.96],[8479,8479,7.34],[8480,8480,12.41],[8481,8481,16.53],[8482,8482,10.74],[8483,8483,7.94],[8484,8484,6.62],[8485,8485,5.63],[8486,8486,9],[8487,8487,8.75],[8488,8488,7.99],[8489,8489,4.4],[8490,8490,7.62],[8491,8491,7.52],[8492,8492,10.45],[8493,8493,7.89],[8494,8494,7.9],[8495,8495,6.9],[8496,8496,8.25],[8497,8497,10.11],[8498,8498,7.3],[8499,8499,11.79],[8500,8500,7.67],[8501,8501,7.1],[8502,8502,6.19],[8503,8503,4.7],[8504,8504,5.51],[8505,8505,7.26],[8506,8506,10.27],[8507,8507,18.04],[8508,8508,7.4],[8509,8509,5.94],[8510,8510,5.16],[8511,8511,7.9],[8512,8512,10.15],[8513,8513,7.95],[8514,8515,5.87],[8516,8516,6.85],[8517,8517,7.84],[8518,8518,6.39],[8519,8519,5.66],[8520,8520,3.22],[8521,8521,3.75],[8522,8522,7.3],[8523,8523,7.67],[8524,8524,8.91],[8525,8525,9.7],[8526,8526,4.58],[8528,8530,11],[8531,8532,8.25],[8533,8538,8.81],[8539,8542,11],[8543,8543,4.18],[8544,8544,3.17],[8545,8545,6.49],[8546,8546,9.21],[8547,8547,9.95],[8548,8548,7.19],[8549,8549,10.1],[8550,8550,13.34],[8551,8551,16.06],[8552,8552,9.59],[8553,8553,6.89],[8554,8554,9.38],[8555,8555,12.62],[8556,8556,5.87],[8557,8557,7.61],[8558,8558,8.24],[8559,8559,9.47],[8560,8560,3.18],[8561,8561,6.36],[8562,8562,9.01],[8563,8563,8.57],[8564,8564,5.69],[8565,8565,8.6],[8566,8566,11.78],[8567,8567,14.43],[8568,8568,9.18],[8569,8569,6.75],[8570,8570,9.16],[8571,8571,12.34],[8572,8572,3.18],[8573,8573,5.63],[8574,8574,6.92],[8575,8575,10.27],[8576,8576,11.45],[8577,8577,8.24],[8578,8578,11.45],[8579,8579,7.61],[8580,8580,4.88],[8581,8581,7.17],[8582,8582,6.21],[8583,8590,11],[8592,8592,11],[8593,8593,5.5],[8594,8594,11],[8595,8595,5.5],[8596,8596,11],[8597,8597,5.5],[8598,8603,11],[8604,8615,6.62],[8616,8616,5.5],[8617,8617,11],[8618,8618,10.87],[8619,8621,6.62],[8622,8622,11],[8623,8623,6.62],[8624,8626,9.51],[8627,8627,11],[8628,8628,9.51],[8629,8629,11],[8630,8631,9.51],[8632,8633,11],[8634,8635,6.62],[8636,8636,9.51],[8637,8639,6.62],[8640,8640,9.51],[8641,8643,6.62],[8644,8646,11],[8647,8650,6.62],[8651,8652,11],[8653,8653,9.68],[8654,8654,6.62],[8655,8655,9.56],[8656,8656,11],[8657,8657,9.51],[8658,8658,10.24],[8659,8659,9.51],[8660,8660,10.24],[8661,8669,6.62],[8670,8671,7.1],[8672,8672,11],[8673,8673,7.1],[8674,8674,11],[8675,8675,7.1],[8676,8682,11],[8683,8687,6.62],[8688,8688,9.51],[8689,8692,6.62],[8693,8693,11],[8694,8702,6.62],[8704,8704,6.93],[8705,8705,5.16],[8706,8706,6.99],[8707,8707,5.78],[8708,8708,5.88],[8709,8709,7.89],[8710,8710,8],[8711,8711,7.7],[8712,8712,6.34],[8713,8713,6.73],[8714,8714,5.6],[8715,8715,6.34],[8716,8716,6.48],[8717,8717,5.6],[8718,8718,5.74],[8719,8719,9],[8720,8720,8.75],[8721,8721,8],[8722,8722,9],[8723,8723,8.75],[8724,8724,6.58],[8725,8725,3.97],[8726,8726,8.75],[8727,8727,5.76],[8728,8728,3.9],[8729,8729,4],[8730,8730,9],[8731,8731,8.23],[8732,8732,7.97],[8733,8733,5.7],[8734,8734,11],[8735,8735,10.77],[8736,8736,6.57],[8737,8737,6.61],[8738,8738,6.66],[8739,8739,2.74],[8740,8740,5.2],[8741,8741,3.8],[8742,8742,5.78],[8743,8744,6.53],[8745,8745,7.94],[8746,8746,5.84],[8747,8747,6.99],[8748,8748,10.06],[8749,8749,12.36],[8750,8750,7.46],[8751,8751,10.16],[8752,8752,12.83],[8753,8753,6.58],[8754,8754,6.91],[8755,8755,6.57],[8756,8756,6.64],[8757,8757,6.57],[8758,8758,3.7],[8759,8759,6.33],[8760,8760,6.19],[8761,8761,6.33],[8762,8762,6.38],[8763,8763,6.16],[8764,8765,6.05],[8766,8766,5.97],[8767,8767,6.42],[8768,8768,4.29],[8769,8769,6.32],[8770,8770,6.38],[8771,8771,6.43],[8772,8772,7.38],[8773,8773,7.66],[8774,8774,6.92],[8775,8775,6.72],[8776,8776,9],[8777,8777,6.04],[8778,8778,6.64],[8779,8779,7.38],[8780,8780,5.97],[8781,8781,6.63],[8782,8782,6.57],[8783,8783,6.52],[8784,8784,6.16],[8785,8785,7.02],[8786,8787,6.96],[8788,8789,8.4],[8790,8790,6.36],[8791,8791,6.55],[8792,8792,6.48],[8793,8793,6.69],[8794,8794,6.81],[8795,8795,7.11],[8796,8796,7],[8797,8797,6.19],[8798,8798,6.32],[8799,8799,6.49],[8800,8801,9],[8802,8802,6.2],[8803,8803,6.52],[8804,8805,9],[8806,8806,6.32],[8807,8807,6.2],[8808,8808,6.84],[8809,8809,6.48],[8810,8810,8.07],[8811,8811,7.71],[8812,8812,3.94],[8813,8813,6.09],[8814,8815,6.2],[8816,8817,6.04],[8818,8818,6.2],[8819,8819,6.24],[8820,8820,6.41],[8821,8821,6.39],[8822,8823,6.66],[8824,8824,6.17],[8825,8825,6.34],[8826,8826,6.24],[8827,8827,6.36],[8828,8828,6.56],[8829,8829,6.36],[8830,8830,6.44],[8831,8831,6.4],[8832,8832,6.68],[8833,8833,6.36],[8834,8835,6.95],[8836,8836,7.08],[8837,8837,6.94],[8838,8839,7.29],[8840,8840,7.34],[8841,8841,7.14],[8842,8843,6.18],[8844,8845,6.4],[8846,8846,6.7],[8847,8848,7.19],[8849,8850,7.17],[8851,8852,6.72],[8853,8853,7.96],[8854,8854,8.2],[8855,8855,7.83],[8856,8856,7.94],[8857,8857,8.32],[8858,8858,8.09],[8859,8859,7.9],[8860,8860,8.37],[8861,8861,8.31],[8862,8862,8.62],[8863,8863,8.36],[8864,8864,8.06],[8865,8865,7.87],[8866,8869,8.26],[8870,8870,3.63],[8871,8871,3.67],[8872,8872,6.86],[8873,8873,8.02],[8874,8874,6.85],[8875,8875,8.31],[8876,8876,8.53],[8877,8877,8.56],[8878,8878,9.61],[8879,8879,9.2],[8880,8881,6.96],[8882,8883,8.15],[8884,8885,7.73],[8886,8887,8.08],[8888,8888,6.55],[8889,8889,7.51],[8890,8890,5.28],[8891,8892,7.66],[8893,8893,7.42],[8894,8894,8.16],[8895,8895,6.94],[8896,8897,7.38],[8898,8899,7.05],[8900,8900,4.19],[8901,8901,4.85],[8902,8902,4.93],[8903,8903,6.94],[8904,8904,8.5],[8905,8906,8.14],[8907,8908,7.96],[8909,8909,6.43],[8910,8911,6.98],[8912,8913,7.13],[8914,8915,6.26],[8916,8916,6.04],[8917,8917,6.75],[8918,8919,6.63],[8920,8921,10.65],[8922,8923,7.16],[8924,8925,7.11],[8926,8927,7.36],[8928,8928,7.33],[8929,8929,7.21],[8930,8930,7.55],[8931,8931,7.3],[8932,8932,7.38],[8933,8933,7.41],[8934,8934,7.44],[8935,8935,7.55],[8936,8936,7.91],[8937,8937,7.57],[8938,8938,8.23],[8939,8939,8.42],[8940,8940,8.49],[8941,8941,8.54],[8942,8942,4.52],[8943,8943,11],[8944,8944,10.12],[8945,8945,10.33],[8946,8946,7.15],[8947,8947,6.34],[8948,8948,5.6],[8949,8950,6.34],[8951,8951,5.6],[8952,8952,6.34],[8953,8953,6.95],[8954,8954,7.15],[8955,8955,6.34],[8956,8956,5.6],[8957,8957,6.34],[8958,8958,5.6],[8960,8961,6.62],[8962,8962,6.6],[8963,8963,8.74],[8964,8964,6.62],[8965,8965,8.74],[8966,8966,7.3],[8967,8967,11],[8968,8975,6.62],[8976,8976,6.2],[8977,8977,6.62],[8978,8978,11],[8979,8979,6.62],[8980,8980,9.51],[8981,8981,6.62],[8982,8983,12.1],[8984,8984,11],[8985,8985,6.62],[8986,8987,11],[8988,8991,6.62],[8992,8993,6.64],[8994,8995,9.51],[8996,8996,8.74],[8997,8997,11],[8998,8998,13.35],[8999,8999,11],[9000,9000,6.62],[9001,9002,11],[9003,9003,13.35],[9004,9004,10.19],[9005,9005,10.85],[9006,9006,6.86],[9007,9009,6.04],[9010,9010,9.78],[9011,9012,6.04],[9013,9013,6.62],[9014,9014,10.19],[9015,9020,6.62],[9021,9021,11],[9022,9022,6.62],[9023,9024,7.51],[9025,9028,6.62],[9029,9030,6.6],[9031,9033,6.62],[9034,9034,6.6],[9035,9037,6.62],[9038,9039,6.6],[9040,9040,6.62],[9041,9041,6.6],[9042,9044,6.62],[9045,9046,6.6],[9047,9052,6.62],[9053,9053,6.6],[9054,9056,6.62],[9057,9058,6.6],[9059,9061,6.62],[9062,9063,6.6],[9064,9065,6.62],[9066,9066,6.6],[9067,9072,6.62],[9073,9074,6.6],[9075,9082,6.62],[9083,9083,7.36],[9084,9084,9.58],[9085,9085,3.48],[9086,9086,10.33],[9087,9087,4.08],[9088,9091,6.62],[9092,9092,8.63],[9093,9093,7.52],[9094,9094,7.42],[9095,9096,11],[9097,9098,6.62],[9099,9099,11],[9100,9100,8.88],[9101,9101,8.65],[9102,9102,8.22],[9103,9106,7.24],[9107,9107,10.04],[9108,9108,10.19],[9109,9109,6.62],[9110,9110,5.19],[9111,9112,8.67],[9113,9114,8.97],[9115,9133,11],[9134,9134,6.62],[9135,9135,3.46],[9136,9137,11],[9138,9139,16.37],[9140,9142,10.19],[9143,9143,7.07],[9144,9149,5.54],[9150,9164,11],[9165,9165,10.97],[9166,9166,11],[9167,9167,9.43],[9168,9168,5.62],[9169,9169,5.96],[9170,9171,5.97],[9172,9173,11.34],[9174,9174,10.54],[9175,9177,10.73],[9178,9185,11],[9186,9186,12.58],[9187,9187,10.01],[9188,9188,12.03],[9189,9189,11.2],[9190,9190,10.19],[9191,9191,8.78],[9192,9214,11],[9216,9247,11],[9248,9248,6.6],[9249,9249,11],[9250,9250,6.6],[9251,9251,3.48],[9252,9252,6.6],[9253,9253,8.71],[9254,9254,4.44],[9255,9278,11],[9280,9285,6.64],[9286,9289,8.25],[9290,9290,6.64],[9291,9310,11],[9312,9412,11],[9413,9413,9.41],[9414,9470,11],[9472,9472,7.79],[9473,9473,11],[9474,9474,7.79],[9475,9483,11],[9484,9484,7.79],[9485,9487,11],[9488,9488,7.79],[9489,9491,11],[9492,9492,7.79],[9493,9495,11],[9496,9496,7.79],[9497,9499,11],[9500,9500,7.79],[9501,9507,11],[9508,9508,7.79],[9509,9515,11],[9516,9516,7.79],[9517,9523,11],[9524,9524,7.79],[9525,9531,11],[9532,9532,7.79],[9533,9547,11],[9548,9551,6.62],[9552,9580,7.79],[9581,9588,11],[9589,9598,6.62],[9600,9600,7.79],[9601,9603,11],[9604,9604,7.79],[9605,9607,11],[9608,9608,7.79],[9609,9611,11],[9612,9612,7.79],[9613,9615,11],[9616,9618,7.79],[9619,9619,8.02],[9620,9621,11],[9622,9630,6.62],[9632,9633,6.64],[9634,9634,11],[9635,9641,9.51],[9642,9643,3.9],[9644,9644,11],[9645,9645,9.51],[9646,9648,6.62],[9649,9649,11],[9650,9650,10.89],[9651,9651,11],[9652,9652,6.06],[9653,9653,9.51],[9654,9654,9.68],[9655,9655,11],[9656,9657,5.83],[9658,9658,10.89],[9659,9659,6.62],[9660,9660,10.89],[9661,9661,11],[9662,9663,7.03],[9664,9664,11],[9665,9665,8.74],[9666,9666,6.62],[9667,9667,9.51],[9668,9668,10.89],[9669,9669,6.62],[9670,9670,7.95],[9671,9671,6.76],[9672,9672,9.51],[9673,9673,11],[9674,9674,9],[9675,9675,6.64],[9676,9676,6.54],[9677,9677,6.62],[9678,9678,11],[9679,9679,6.64],[9680,9683,11],[9684,9687,6.62],[9688,9689,6.64],[9690,9697,6.62],[9698,9701,11],[9702,9702,3.9],[9703,9710,6.62],[9711,9711,11],[9712,9722,6.62],[9723,9726,11],[9728,9731,11],[9732,9732,6.62],[9733,9734,11],[9735,9736,6.62],[9737,9737,11],[9738,9741,6.62],[9742,9742,11],[9743,9743,9.51],[9744,9746,9.13],[9747,9747,6.62],[9748,9751,11],[9752,9755,6.62],[9756,9759,11],[9760,9774,6.62],[9775,9775,9.51],[9776,9783,9.9],[9784,9785,6.62],[9786,9786,11.23],[9787,9787,11.57],[9788,9788,10.08],[9789,9791,6.62],[9792,9792,8.25],[9793,9793,6.62],[9794,9794,8.25],[9795,9799,6.62],[9800,9811,11],[9812,9823,6.62],[9824,9824,5.84],[9825,9826,11],[9827,9827,7.22],[9828,9828,11],[9829,9829,6.53],[9830,9830,5.61],[9831,9833,11],[9834,9834,5.5],[9835,9835,8.25],[9836,9838,11],[9839,9839,5.5],[9840,9841,6.62],[9842,9853,11],[9854,9854,6.62],[9855,9855,11],[9856,9867,6.62],[9868,9868,9.67],[9869,9869,9.49],[9870,9870,9.45],[9871,9871,9.86],[9872,9874,6.62],[9875,9875,11],[9876,9884,6.62],[9885,9889,11],[9890,9890,9.81],[9891,9891,9.87],[9892,9892,9.71],[9893,9893,7.26],[9894,9894,8.15],[9895,9895,10.16],[9896,9896,5.86],[9897,9897,10.12],[9898,9899,11],[9900,9900,6.21],[9901,9901,8.54],[9902,9902,11.61],[9903,9903,12.3],[9904,9905,6.62],[9906,9906,6.63],[9907,9953,11],[9954,9954,7.7],[9955,9982,11],[9984,9984,11],[9985,9985,10.72],[9986,9986,10.57],[9987,9987,10.72],[9988,9988,10.78],[9989,9989,11],[9990,9990,8.68],[9991,9991,8.69],[9992,9992,8.7],[9993,9993,7.59],[9994,9997,11],[9998,9998,8.66],[9999,9999,10.26],[10000,10000,10.02],[10001,10001,10.39],[10002,10002,10.72],[10003,10003,8.41],[10004,10004,9.31],[10005,10005,8.38],[10006,10006,8.37],[10007,10007,6.28],[10008,10008,7.44],[10009,10009,8.4],[10010,10010,8.36],[10011,10011,8.35],[10012,10012,8.29],[10013,10013,5.44],[10014,10014,6.07],[10015,10015,5.91],[10016,10016,6.35],[10017,10017,7.61],[10018,10018,8.65],[10019,10020,8.67],[10021,10021,8.69],[10022,10022,8.72],[10023,10023,8.73],[10024,10024,11],[10025,10025,9.06],[10026,10026,8.68],[10027,10027,9.25],[10028,10028,9.06],[10029,10029,9.16],[10030,10030,8.98],[10031,10031,9.14],[10032,10032,10.15],[10033,10033,8.19],[10034,10034,7.95],[10035,10035,8.24],[10036,10036,8.69],[10037,10037,8.71],[10038,10038,7.64],[10039,10039,8.53],[10040,10040,8.45],[10041,10041,8.71],[10042,10042,8.35],[10043,10043,7.78],[10044,10044,7.79],[10045,10045,7.5],[10046,10046,7.71],[10047,10047,9.09],[10048,10048,8.96],[10049,10050,8.68],[10051,10051,7.78],[10052,10052,7.56],[10053,10053,7.65],[10054,10054,7.58],[10055,10055,8.65],[10056,10056,8.66],[10057,10057,7.84],[10058,10058,8.7],[10059,10059,8.64],[10060,10060,11],[10061,10061,9.6],[10062,10062,11],[10063,10064,8.38],[10065,10066,8.35],[10067,10069,11],[10070,10070,8.63],[10071,10071,11],[10072,10072,3.18],[10073,10073,3.05],[10074,10074,4.57],[10075,10076,4.31],[10077,10078,7.35],[10079,10080,11],[10081,10081,8.05],[10082,10083,5.98],[10084,10084,10.01],[10085,10085,7.34],[10086,10087,8.36],[10088,10089,4.29],[10090,10091,3.49],[10092,10093,3.03],[10094,10095,5.6],[10096,10097,4.51],[10098,10099,2.57],[10100,10101,3.67],[10102,10131,8.67],[10132,10132,9.83],[10133,10135,11],[10136,10136,8.23],[10137,10137,10.16],[10138,10138,8.23],[10139,10139,10.1],[10140,10140,10.19],[10141,10142,10.21],[10143,10143,9.17],[10144,10144,9.6],[10145,10145,9.11],[10146,10147,10.16],[10148,10148,10.09],[10149,10149,10.23],[10150,10150,10.24],[10151,10151,5.09],[10152,10152,9.71],[10153,10154,9.2],[10155,10156,9.54],[10157,10158,7.65],[10159,10159,9.61],[10160,10160,11],[10161,10161,9.61],[10162,10162,8.36],[10163,10163,10.4],[10164,10164,8.48],[10165,10165,9.52],[10166,10166,8.48],[10167,10167,9.77],[10168,10168,10.63],[10169,10169,9.77],[10170,10170,9.14],[10171,10171,9.6],[10172,10172,10.19],[10173,10173,10.67],[10174,10174,10.1],[10176,10176,6.03],[10177,10177,10.43],[10178,10178,7.58],[10179,10180,6.21],[10181,10182,6.62],[10183,10183,6.82],[10184,10185,10.1],[10186,10186,3.74],[10187,10187,9.22],[10188,10188,3.57],[10189,10189,9.22],[10190,10191,11],[10192,10192,8.21],[10193,10193,6.82],[10194,10194,6.57],[10195,10196,5.97],[10197,10198,9.93],[10199,10199,12.26],[10200,10201,7.58],[10202,10202,9.57],[10203,10203,9.42],[10204,10204,11.6],[10205,10206,9.33],[10207,10207,4.36],[10208,10208,6.06],[10209,10209,7.7],[10210,10211,9.64],[10212,10213,10.41],[10214,10215,4.64],[10216,10217,4.02],[10218,10219,5.1],[10220,10221,5.37],[10222,10222,2.56],[10224,10225,11.36],[10226,10227,10.71],[10228,10228,13.2],[10229,10238,17.31],[10240,10494,7.52],[10496,10503,10.19],[10504,10505,5.62],[10506,10511,10.19],[10512,10512,15.53],[10513,10513,10.19],[10514,10515,5.62],[10516,10547,10.19],[10548,10549,11],[10550,10551,9.51],[10552,10552,5.62],[10553,10553,9.51],[10554,10568,10.19],[10569,10569,5.62],[10570,10571,10.19],[10572,10573,5.62],[10574,10574,10.19],[10575,10575,5.62],[10576,10576,10.19],[10577,10577,5.62],[10578,10579,10.19],[10580,10581,5.62],[10582,10583,10.19],[10584,10585,5.62],[10586,10587,10.19],[10588,10589,5.62],[10590,10591,10.19],[10592,10593,5.62],[10594,10597,9.51],[10598,10605,10.19],[10606,10607,7.53],[10608,10613,10.19],[10614,10614,7.53],[10615,10615,10.19],[10616,10617,7.53],[10618,10618,10.19],[10619,10619,7.53],[10620,10621,10.19],[10622,10622,7.53],[10624,10624,4.01],[10625,10625,4.18],[10626,10626,3.45],[10627,10628,4.11],[10629,10630,4.92],[10631,10632,3.68],[10633,10634,4.35],[10635,10636,3.31],[10637,10640,3.3],[10641,10641,4.02],[10642,10642,4.04],[10643,10644,7.25],[10645,10646,7.65],[10647,10648,7.13],[10649,10649,2.48],[10650,10650,3.05],[10651,10651,6.53],[10652,10653,6.51],[10654,10654,7.27],[10655,10655,6.03],[10656,10657,6.53],[10658,10661,6.03],[10662,10663,8.28],[10664,10671,6.53],[10672,10676,7.73],[10677,10677,9.56],[10678,10678,7.7],[10679,10679,7.72],[10680,10680,7.94],[10681,10681,7.72],[10682,10682,7.73],[10683,10683,7.74],[10684,10689,7.72],[10690,10690,9.41],[10691,10691,9.61],[10692,10696,8.22],[10697,10697,8.75],[10698,10700,8.23],[10701,10701,10.38],[10702,10702,7.15],[10703,10704,8.34],[10705,10707,7.56],[10708,10709,7.17],[10710,10711,8.44],[10712,10713,3.05],[10714,10715,4.66],[10716,10716,7.01],[10717,10717,7.12],[10718,10718,7.01],[10719,10719,7.41],[10720,10720,8.22],[10721,10721,7.19],[10722,10722,7.51],[10723,10725,7.3],[10726,10726,7.81],[10727,10727,6.99],[10728,10729,8.23],[10730,10730,7.89],[10731,10731,5.2],[10732,10733,9.89],[10734,10735,6.57],[10736,10737,7.79],[10738,10739,7.72],[10740,10740,9],[10741,10741,6.58],[10742,10742,6.34],[10743,10745,5.59],[10746,10747,7.43],[10748,10749,5.91],[10750,10750,5.2],[10752,10753,9.89],[10754,10754,9.92],[10755,10756,5.99],[10757,10758,6.55],[10759,10760,8.43],[10761,10761,7.33],[10762,10762,9.41],[10763,10763,7.18],[10764,10764,16.56],[10765,10767,6.72],[10768,10768,5.49],[10769,10769,8.01],[10770,10770,5.71],[10771,10771,5.49],[10772,10772,6.91],[10773,10773,5.49],[10774,10774,6.72],[10775,10775,7.43],[10776,10778,6.72],[10779,10779,7.02],[10780,10780,6.79],[10781,10781,7.56],[10782,10782,4.35],[10783,10783,3.67],[10784,10784,8.92],[10785,10785,3.59],[10786,10787,5.95],[10788,10788,5.99],[10789,10789,5.95],[10790,10790,5.99],[10791,10791,7.12],[10792,10792,7.02],[10793,10794,5.99],[10795,10796,5.97],[10797,10798,8.37],[10799,10799,5.04],[10800,10800,5.82],[10801,10801,5.96],[10802,10802,5.74],[10803,10803,8.85],[10804,10805,7.86],[10806,10808,9.89],[10809,10811,8.23],[10812,10813,5.63],[10814,10814,3.67],[10815,10815,6.77],[10816,10821,5.99],[10822,10823,4.27],[10824,10825,5.96],[10826,10827,5.62],[10828,10829,8.13],[10830,10831,6.55],[10832,10832,8.13],[10833,10834,6.71],[10835,10836,7.17],[10837,10838,8.28],[10839,10840,7.17],[10841,10841,6.67],[10842,10843,7.17],[10844,10845,8.12],[10846,10848,6.71],[10849,10849,5.97],[10850,10851,6.71],[10852,10853,7.34],[10854,10857,5.96],[10858,10861,5.98],[10862,10862,5.33],[10863,10864,5.98],[10865,10866,5.97],[10867,10867,5.99],[10868,10868,9.33],[10869,10869,10.82],[10870,10870,16.03],[10871,10871,6],[10872,10872,6.55],[10873,10874,7.25],[10875,10876,5.63],[10877,10879,5.97],[10880,10880,5.98],[10881,10884,5.97],[10885,10886,5.98],[10887,10887,6.06],[10888,10888,6.27],[10889,10890,5.98],[10891,10892,5.97],[10893,10893,6.06],[10894,10894,6.03],[10895,10896,5.99],[10897,10903,5.97],[10904,10906,5.98],[10907,10908,5.97],[10909,10910,5.98],[10911,10911,6.07],[10912,10912,6],[10913,10914,7.51],[10915,10915,8.87],[10916,10916,5.99],[10917,10917,10.29],[10918,10921,6.75],[10922,10922,5.63],[10923,10923,5.76],[10924,10924,6.06],[10925,10925,6.11],[10926,10926,5.97],[10927,10929,6.08],[10930,10930,6.06],[10931,10934,6.08],[10935,10935,6.02],[10936,10936,6.03],[10937,10937,6.02],[10938,10938,6.03],[10939,10940,9.76],[10941,10942,6.21],[10943,10950,5.05],[10951,10954,6],[10955,10956,5.05],[10957,10958,10.48],[10959,10960,6.21],[10961,10962,6.2],[10963,10966,5.05],[10967,10968,9.35],[10969,10971,6.57],[10972,10972,6.71],[10973,10973,6.57],[10974,10974,4.32],[10975,10977,7.58],[10978,10978,7.55],[10979,10979,7.52],[10980,10980,7.55],[10981,10981,9.21],[10982,10982,7.54],[10983,10985,7.58],[10986,10987,7.62],[10988,10989,5.63],[10990,10990,3.44],[10991,10992,3.13],[10993,10993,3.29],[10994,10994,4.29],[10995,10995,5.98],[10996,10996,3.84],[10997,10997,5.26],[10998,10998,2.48],[10999,11000,10.68],[11001,11002,5.97],[11003,11003,5.48],[11004,11004,3.9],[11005,11005,4.52],[11006,11006,3.23],[11904,12030,11],[12272,12286,11],[12288,12333,11],[12334,12335,17.6],[12336,12350,11],[12800,12827,9.51],[12828,12828,9.36],[12829,12895,11],[12896,12923,9.51],[12924,12926,11],[12927,12927,9.31],[12928,13054,11],[13056,13183,11],[13184,13188,9.51],[13189,13193,11],[13194,13196,9.51],[13197,13200,11],[13201,13205,9.51],[13206,13208,11],[13209,13210,9.51],[13211,13222,11],[13223,13231,9.51],[13232,13235,11],[13236,13249,9.51],[13250,13250,11],[13251,13251,9.51],[13252,13252,11],[13253,13254,9.51],[13255,13255,9.31],[13256,13256,11],[13257,13258,9.51],[13259,13262,11],[13263,13264,9.51],[13265,13266,11],[13267,13267,9.51],[13268,13269,11],[13270,13270,9.51],[13271,13274,11],[13275,13277,9.51],[13278,13310,11],[13312,19902,11],[19968,40958,11],[63744,64254,11],[65072,65102,11],[65136,65136,3.43],[65137,65137,2.23],[65138,65138,3.43],[65139,65139,3.3],[65140,65140,3.43],[65141,65141,11],[65142,65142,3.43],[65143,65143,2.23],[65144,65144,3.43],[65145,65145,2.23],[65146,65146,3.43],[65147,65147,2.23],[65148,65148,3.43],[65149,65149,2.23],[65150,65150,3.43],[65151,65151,2.23],[65152,65152,4.54],[65153,65153,2.28],[65154,65154,2.52],[65155,65155,2.28],[65156,65156,2.52],[65157,65158,4.75],[65159,65159,2.28],[65160,65160,2.52],[65161,65161,7.02],[65162,65162,6.47],[65163,65164,2.69],[65165,65165,2.28],[65166,65166,2.52],[65167,65168,7.85],[65169,65170,2.69],[65171,65171,3.1],[65172,65172,4.13],[65173,65174,7.85],[65175,65176,2.69],[65177,65178,7.85],[65179,65180,2.69],[65181,65181,6.19],[65182,65182,5.78],[65183,65184,5.83],[65185,65185,6.19],[65186,65186,5.78],[65187,65188,5.83],[65189,65189,6.19],[65190,65190,5.78],[65191,65192,5.83],[65193,65196,3.71],[65197,65200,5.38],[65201,65202,9.03],[65203,65204,5.84],[65205,65206,9.03],[65207,65208,5.84],[65209,65210,12.08],[65211,65212,9.31],[65213,65214,12.08],[65215,65216,9.31],[65217,65224,6.4],[65225,65225,5.98],[65226,65226,4.95],[65227,65227,5.78],[65228,65228,4.33],[65229,65229,5.98],[65230,65230,4.95],[65231,65231,5.78],[65232,65232,4.33],[65233,65234,8.67],[65235,65235,2.94],[65236,65236,2.89],[65237,65238,6.4],[65239,65239,2.94],[65240,65240,2.89],[65241,65242,6.61],[65243,65244,4.33],[65245,65246,5.57],[65247,65248,2.28],[65249,65250,3.72],[65251,65252,4.33],[65253,65254,5.78],[65255,65256,2.69],[65257,65257,3.1],[65258,65258,4.13],[65259,65259,4.95],[65260,65260,4.33],[65261,65262,4.75],[65263,65263,7.02],[65264,65264,6.47],[65265,65265,7.02],[65266,65266,6.47],[65267,65268,2.69],[65269,65269,5.98],[65270,65270,6.61],[65271,65271,5.98],[65272,65272,6.61],[65273,65273,5.98],[65274,65274,6.61],[65275,65275,5.98],[65276,65276,6.61],[65277,65278,11],[65280,65376,11],[65377,65440,5.5],[65441,65441,5.31],[65442,65443,5.5],[65444,65444,5.31],[65445,65446,5.5],[65447,65447,5.31],[65448,65470,5.5],[65471,65473,11],[65474,65479,5.5],[65480,65481,11],[65482,65487,5.5],[65488,65489,11],[65490,65495,5.5],[65496,65497,11],[65498,65500,5.5],[65501,65508,11],[65509,65509,6.99],[65510,65510,10.88],[65511,65512,11],[65513,65518,5.5],[65792,65792,7.52],[65793,65793,6.61],[65794,65794,7.52],[65795,65795,6.61],[65796,65796,7.52],[65797,65797,6.61],[65798,65798,7.68],[65799,65799,5.73],[65800,65800,7.68],[65801,65801,5.73],[65802,65802,7.68],[65803,65803,5.73],[65804,65804,7.68],[65805,65805,5.73],[65806,65806,8.48],[65807,65807,7.12],[65808,65808,8.53],[65809,65809,6.85],[65810,65810,6.96],[65811,65811,6.55],[65812,65812,6.96],[65813,65813,6.55],[65814,65814,6.96],[65815,65815,6.55],[65816,65816,6.96],[65817,65817,6.55],[65818,65818,6.96],[65819,65819,6.55],[65820,65820,8.53],[65821,65821,6.85],[65822,65822,8.53],[65823,65823,6.85],[65824,65824,8.53],[65825,65825,6.85],[65826,65826,8.53],[65827,65827,6.85],[65828,65828,8.27],[65829,65829,6.96],[65830,65830,8.27],[65831,65831,6.96],[65832,65832,4.63],[65833,65833,3.02],[65834,65834,4.63],[65835,65835,3.02],[65836,65836,4.63],[65837,65837,3.02],[65838,65838,4.63],[65839,65839,3.02],[65840,65840,4.63],[65841,65841,3.02],[65842,65842,9.58],[65843,65843,6.75],[65844,65844,5],[65845,65845,3.79],[65846,65846,7.62],[65847,65848,6.51],[65849,65849,6.12],[65850,65850,3.02],[65851,65851,6.12],[65852,65852,3.02],[65853,65853,6.12],[65854,65854,3.25],[66304,66350,0],[66352,66382,0],[66560,66561,6.96],[66562,66562,8.72],[66563,66563,6.23],[66564,66564,7.71],[66565,66565,7.52],[66566,66567,4.63],[66568,66568,5],[66569,66569,12.3],[66570,66570,12.13],[66571,66571,9],[66572,66572,7.62],[66573,66573,8.26],[66574,66574,6.77],[66575,66575,8.27],[66576,66576,7.52],[66577,66578,7.54],[66579,66579,6.23],[66580,66580,8.2],[66581,66581,6.96],[66582,66582,10.7],[66583,66583,6.77],[66584,66585,8.26],[66586,66586,7.62],[66587,66587,8.08],[66588,66588,9.27],[66589,66589,8.27],[66590,66590,8.66],[66591,66591,8.27],[66592,66592,6.63],[66593,66593,7.68],[66594,66594,6.78],[66595,66595,6.77],[66596,66596,9.01],[66597,66597,7.54],[66598,66598,8.37],[66599,66599,7.83],[66600,66600,11.33],[66601,66601,11.49],[66602,66602,8.62],[66603,66603,10.12],[66604,66604,7.49],[66605,66605,7.71],[66606,66606,11.38],[66607,66607,7.77],[66608,66608,6.61],[66609,66609,6.76],[66610,66610,6.54],[66611,66611,5.18],[66612,66612,6.84],[66613,66613,6.55],[66614,66614,8.78],[66615,66615,5.77],[66616,66617,7.04],[66618,66618,6.51],[66619,66619,6.83],[66620,66620,7.66],[66621,66621,7.01],[66622,66622,6.68],[66623,66623,7.01],[66624,66624,6.85],[66625,66625,5.88],[66626,66626,5.46],[66627,66627,6.51],[66628,66628,9.25],[66629,66629,6.51],[66630,66630,7.09],[66631,66631,6.66],[66632,66632,9.64],[66633,66633,9.76],[66634,66634,7.05],[66635,66635,8.74],[66636,66636,6.28],[66637,66637,6.02],[66638,66638,9.23],[119040,119294,9.51],[119808,120739,9.51],[120740,120830,11],[131072,131072,0],[131073,131079,3.66],[131080,131080,0],[131081,131085,3.87],[131086,131100,3.66],[131101,131101,0],[131102,131103,3.66],[131104,131104,3.87],[131105,131105,4.33],[131106,131106,5.05],[131107,131107,9],[131108,131108,6.99],[131109,131109,11.84],[131110,131110,7.99],[131111,131111,2.95],[131112,131113,5],[131114,131114,6.99],[131115,131115,9],[131116,131116,4],[131117,131117,5],[131118,131118,4],[131119,131119,5],[131120,131129,6.99],[131130,131131,5],[131132,131134,9],[131135,131135,6],[131136,131136,11],[131137,131137,7.52],[131138,131138,7.54],[131139,131139,7.68],[131140,131140,8.48],[131141,131141,6.96],[131142,131142,6.32],[131143,131143,8.53],[131144,131144,8.27],[131145,131145,4.63],[131146,131146,5],[131147,131147,7.62],[131148,131148,6.12],[131149,131149,9.27],[131150,131150,8.23],[131151,131151,8.66],[131152,131152,6.63],[131153,131153,8.66],[131154,131154,7.65],[131155,131155,7.52],[131156,131156,6.78],[131157,131157,8.05],[131158,131158,7.52],[131159,131159,10.88],[131160,131160,7.54],[131161,131161,6.77],[131162,131162,7.54],[131163,131165,5],[131166,131166,9],[131167,131168,6.99],[131169,131169,6.61],[131170,131170,6.85],[131171,131171,5.73],[131172,131172,6.85],[131173,131173,6.55],[131174,131174,3.87],[131175,131175,6.85],[131176,131176,6.96],[131177,131177,3.02],[131178,131178,3.79],[131179,131179,6.51],[131180,131180,3.02],[131181,131181,10.7],[131182,131182,6.96],[131183,131183,6.68],[131184,131185,6.85],[131186,131186,4.69],[131187,131187,5.73],[131188,131188,4.33],[131189,131189,6.96],[131190,131190,6.51],[131191,131191,9],[131192,131193,6.51],[131194,131194,5.78],[131195,131195,6.98],[131196,131196,5],[131197,131197,6.98],[131198,131198,9],[131199,131199,0],[131200,131200,6.12],[131201,131231,5.5],[131232,131232,3.87],[131233,131233,4.33],[131234,131237,6.99],[131238,131238,5],[131239,131240,6.99],[131241,131241,11],[131242,131242,6],[131243,131243,7.09],[131244,131244,9],[131245,131245,0],[131246,131246,11],[131247,131247,6.99],[131248,131248,5.96],[131249,131249,9],[131250,131251,5.96],[131252,131252,6.99],[131253,131253,7.06],[131254,131254,6.99],[131255,131255,4],[131256,131256,6.99],[131257,131257,5.96],[131258,131258,6],[131259,131259,7.09],[131260,131262,11],[131263,131263,6],[131264,131269,7.52],[131270,131270,10.83],[131271,131271,7.68],[131272,131275,6.96],[131276,131279,4.63],[131280,131280,8.53],[131281,131281,8.23],[131282,131286,8.66],[131287,131287,9],[131288,131288,8.66],[131289,131292,8.05],[131293,131293,6.77],[131294,131294,6.66],[131295,131295,6.82],[131296,131301,6.61],[131302,131302,10.51],[131303,131303,5.73],[131304,131307,6.55],[131308,131311,3.02],[131312,131312,6.73],[131313,131313,6.96],[131314,131318,6.68],[131319,131319,9],[131320,131320,6.68],[131321,131324,6.96],[131325,131325,6.51],[131326,131326,6.85],[131327,131327,6.51],[131328,131328,7.52],[131329,131329,6.61],[131330,131330,7.52],[131331,131331,6.61],[131332,131332,7.52],[131333,131333,6.61],[131334,131334,7.68],[131335,131335,5.73],[131336,131336,7.68],[131337,131337,5.73],[131338,131338,7.68],[131339,131339,5.73],[131340,131340,7.68],[131341,131341,5.73],[131342,131342,8.48],[131343,131343,7.12],[131344,131344,8.53],[131345,131345,6.85],[131346,131346,6.96],[131347,131347,6.55],[131348,131348,6.96],[131349,131349,6.55],[131350,131350,6.96],[131351,131351,6.55],[131352,131352,6.96],[131353,131353,6.55],[131354,131354,6.96],[131355,131355,6.55],[131356,131356,8.53],[131357,131357,6.85],[131358,131358,8.53],[131359,131359,6.85],[131360,131360,8.53],[131361,131361,6.85],[131362,131362,8.53],[131363,131363,6.85],[131364,131364,8.27],[131365,131365,6.96],[131366,131366,8.27],[131367,131367,6.96],[131368,131368,4.63],[131369,131369,3.02],[131370,131370,4.63],[131371,131371,3.02],[131372,131372,4.63],[131373,131373,3.02],[131374,131374,4.63],[131375,131375,3.02],[131376,131376,4.63],[131377,131377,3.02],[131378,131378,9.58],[131379,131379,6.75],[131380,131380,5],[131381,131381,3.79],[131382,131382,7.62],[131383,131384,6.51],[131385,131385,6.12],[131386,131386,3.02],[131387,131387,6.12],[131388,131388,3.02],[131389,131389,6.12],[131390,131390,3.25],[131391,131391,6.12],[131392,131392,5.04],[131393,131393,6.18],[131394,131394,3.13],[131395,131395,8.23],[131396,131396,6.96],[131397,131397,8.23],[131398,131398,6.96],[131399,131399,8.23],[131400,131400,6.96],[131401,131401,8.04],[131402,131402,8.23],[131403,131403,6.96],[131404,131404,8.66],[131405,131405,6.68],[131406,131406,8.66],[131407,131407,6.68],[131408,131408,8.66],[131409,131409,6.68],[131410,131410,11.77],[131411,131411,10.8],[131412,131412,7.65],[131413,131413,4.69],[131414,131414,7.65],[131415,131415,4.69],[131416,131416,7.65],[131417,131417,4.69],[131418,131418,7.52],[131419,131419,5.73],[131420,131420,7.52],[131421,131421,5.73],[131422,131422,7.52],[131423,131423,5.73],[131424,131424,7.52],[131425,131425,5.73],[131426,131426,6.78],[131427,131427,4.33],[131428,131428,6.78],[131429,131429,4.33],[131430,131430,6.78],[131431,131431,4.33],[131432,131432,8.05],[131433,131433,6.96],[131434,131434,8.05],[131435,131435,6.96],[131436,131436,8.05],[131437,131437,6.93],[131438,131438,8.05],[131439,131439,6.96],[131440,131440,8.05],[131441,131441,6.96],[131442,131442,8.05],[131443,131443,6.93],[131444,131444,10.88],[131445,131445,9],[131446,131446,6.77],[131447,131447,6.51],[131448,131448,6.77],[131449,131449,7.54],[131450,131450,5.78],[131451,131451,7.54],[131452,131452,5.78],[131453,131453,7.54],[131454,131454,5.78],[131455,131455,3.3],[131456,131456,5.5],[131457,131457,8.36],[131458,131458,6.32],[131459,131459,5.5],[131460,131460,6.32],[131461,131461,5.5],[131462,131463,7.34],[131464,131464,4.88],[131465,131465,7.94],[131466,131466,8.96],[131467,131467,6.32],[131468,131468,5.5],[131469,131469,5.18],[131470,131470,6.72],[131471,131471,8.3],[131472,131472,5.51],[131473,131473,6.12],[131474,131474,6.99],[131475,131476,7.94],[131477,131477,8.47],[131478,131478,2.79],[131479,131479,3.66],[131480,131480,7.94],[131481,131481,5.5],[131482,131482,3.06],[131483,131483,5.33],[131484,131484,8.98],[131485,131485,7.94],[131486,131486,5.5],[131487,131487,7.94],[131488,131488,8.87],[131489,131489,6.68],[131490,131490,10.17],[131491,131491,7.61],[131492,131492,7.15],[131493,131493,5.5],[131494,131495,6.12],[131496,131496,4.28],[131497,131497,6.4],[131498,131498,3.78],[131499,131499,3.06],[131500,131500,6.72],[131501,131501,3.06],[131502,131502,6.72],[131503,131503,8.32],[131504,131504,7.26],[131505,131505,8.17],[131506,131506,7.94],[131507,131507,8.59],[131508,131508,5.5],[131509,131509,6.72],[131510,131510,4.88],[131511,131512,5.93],[131513,131514,4.88],[131515,131516,5.5],[131517,131517,4.88],[131518,131518,4.64],[131519,131519,5.5],[131520,131520,2.2],[131521,131521,3.09],[131522,131522,2.74],[131523,131523,3.66],[131524,131524,14.66],[131525,131525,12.83],[131526,131526,10.38],[131527,131527,11],[131528,131528,9.78],[131529,131529,6.11],[131530,131530,12.22],[131531,131531,11],[131532,131532,8.56],[131533,131533,7.94],[131534,131534,4.88],[131535,131535,3.66],[131536,131536,3.06],[131537,131537,7.94],[131538,131538,5.5],[131539,131539,7.94],[131540,131540,5.5],[131541,131541,7.94],[131542,131542,5.5],[131543,131543,8.05],[131544,131544,6.96],[131545,131545,7.94],[131546,131546,5.5],[131547,131547,8.05],[131548,131548,6.96],[131549,131549,4.88],[131550,131550,7.94],[131551,131551,4.88],[131552,131552,7.94],[131553,131553,4.88],[131554,131554,9.78],[131555,131555,7.34],[131556,131556,7.94],[131557,131557,5.5],[131558,131558,7.94],[131559,131559,5.5],[131560,131560,7.94],[131561,131561,5.5],[131562,131562,7.94],[131563,131563,5.5],[131564,131564,7.94],[131565,131565,5.5],[131566,131566,5.93],[131567,131567,4.88],[131568,131568,3.06],[131569,131569,14.66],[131570,131570,12.83],[131571,131571,10.38],[131572,131572,8.53],[131573,131573,6.85],[131574,131574,10.45],[131575,131575,6.16],[131576,131576,8.23],[131577,131577,6.96],[131578,131578,7.52],[131579,131579,6.61],[131580,131580,10.83],[131581,131581,10.51],[131582,131582,8.66],[131583,131583,6.68],[131584,131584,7.94],[131585,131585,4.88],[131586,131586,7.94],[131587,131587,4.88],[131588,131588,6.72],[131589,131589,4.88],[131590,131590,6.72],[131591,131591,4.88],[131592,131592,3.66],[131593,131593,3.06],[131594,131594,3.66],[131595,131595,3.06],[131596,131596,7.94],[131597,131597,5.5],[131598,131598,7.94],[131599,131599,5.5],[131600,131600,7.34],[131601,131601,3.66],[131602,131602,7.34],[131603,131603,3.66],[131604,131604,7.94],[131605,131605,5.5],[131606,131606,7.94],[131607,131607,5.5],[131608,131608,7.52],[131609,131609,5.73],[131610,131610,6.78],[131611,131611,4.33],[131612,131612,6.19],[131613,131613,4.35],[131614,131614,7.94],[131615,131615,5.5],[131616,131616,7.15],[131617,131617,5.5],[131618,131618,6.64],[131619,131619,5.5],[131620,131620,6.72],[131621,131621,4.88],[131622,131622,7.94],[131623,131623,4.88],[131624,131624,6.72],[131625,131625,4.88],[131626,131626,7.94],[131627,131627,5.5],[131628,131628,7.94],[131629,131629,5.5],[131630,131630,7.94],[131631,131631,5.5],[131632,131632,7.94],[131633,131633,5.5],[131634,131634,7.94],[131635,131635,5.5],[131636,131636,3.06],[131637,131637,5.5],[131638,131638,3.49],[131639,131639,3.06],[131640,131640,8.51],[131641,131641,8.5],[131642,131642,7.94],[131643,131643,7.34],[131644,131644,5.5],[131645,131646,6.72],[131647,131647,4.28],[131648,131648,4.88],[131649,131649,5.87],[131650,131650,4.37],[131651,131651,7.34],[131652,131652,7.94],[131653,131653,7.98],[131654,131654,6.72],[131655,131655,4.88],[131656,131656,4.28],[131657,131657,3.06],[131658,131658,7.72],[131659,131659,5.5],[131660,131660,7.34],[131661,131661,3.66],[131662,131662,7.94],[131663,131663,5.5],[131664,131664,4.88],[131665,131666,5.75],[131667,131667,5.5],[131668,131669,4.88],[131670,131671,5.5],[131672,131672,4.88],[131673,131673,6.55],[131674,131674,6.9],[131675,131676,4.62],[131677,131677,6.47],[131678,131678,4.87],[131679,131679,3.66],[131680,131681,5.5],[131682,131682,4.98],[131683,131683,5.5],[131684,131684,4.88],[131685,131687,5.5],[131688,131688,3.06],[131689,131689,2.96],[131690,131693,3.06],[131694,131694,6.35],[131695,131697,8.56],[131698,131699,5.5],[131700,131700,5.47],[131701,131701,5.5],[131702,131702,6.93],[131703,131703,7.24],[131704,131704,6.09],[131705,131711,3.66],[131712,131713,5.37],[131714,131714,4.28],[131715,131716,3.66],[131717,131717,4.8],[131718,131718,3.66],[131719,131720,3.06],[131721,131721,5.5],[131722,131722,6.04],[131723,131723,5.17],[131724,131724,5.5],[131725,131725,7.94],[131726,131726,5.5],[131727,131727,5.42],[131728,131728,4.88],[131729,131729,5.45],[131730,131735,4.88],[131736,131736,7.94],[131737,131737,5.19],[131738,131738,4.87],[131739,131739,4.98],[131740,131740,5.89],[131741,131741,3.06],[131742,131742,5.5],[131743,131743,4.73],[131744,131744,5.5],[131745,131746,4.88],[131747,131747,8.82],[131748,131748,9.29],[131749,131749,9.38],[131750,131750,6.21],[131751,131751,5.06],[131752,131752,7.14],[131753,131753,8.66],[131754,131754,6.23],[131755,131755,6.16],[131756,131756,5.66],[131757,131757,5.29],[131758,131758,6.87],[131759,131759,6.77],[131760,131761,3.53],[131762,131762,1.71],[131763,131765,2.39],[131766,131766,3.23],[131767,131767,4.71],[131768,131768,3.27],[131769,131769,2.41],[131770,131770,4.02],[131771,131775,3.66],[131776,131777,2.73],[131778,131781,6.2],[131782,131783,6.99],[131784,131784,3.66],[131785,131785,6.99],[131786,131791,3.66],[131792,131793,3.06],[131794,131799,3.66],[131800,131805,6.99],[131806,131806,0],[131807,131807,4.2],[131808,131808,3.22],[131809,131809,1.83],[131810,131810,2.34],[131811,131811,3.18],[131812,131812,2.73],[131813,131817,4.21],[131818,131821,3.66],[131822,131822,4.88],[131823,131831,3.66],[131832,131832,3.06],[131833,131836,3.66],[131837,131838,4.37],[131839,131839,3.66],[131840,131951,0],[131952,131952,4.61],[131953,131953,3.65],[131954,131954,6.46],[131955,131955,5.14],[131956,131957,3.66],[131958,131958,7.93],[131959,131959,6.38],[131960,131961,11],[131962,131962,3.66],[131963,131965,4.88],[131966,131966,5],[131967,131967,3.66],[131968,131971,11],[131972,131973,6.99],[131974,131974,7.52],[131975,131975,5],[131976,131976,8.26],[131977,131977,9.57],[131978,131978,5.94],[131979,131979,11],[131980,131980,9.69],[131981,131981,11],[131982,131982,8.29],[131983,131983,9.98],[131984,131984,3.02],[131985,131985,7.52],[131986,131986,7.54],[131987,131987,6.23],[131988,131988,7.73],[131989,131989,6.96],[131990,131990,7.54],[131991,131991,8.27],[131992,131992,8.66],[131993,131993,4.63],[131994,131994,7.62],[131995,131995,7.54],[131996,131996,9.27],[131997,131997,8.23],[131998,131998,7.14],[131999,131999,8.66],[132000,132000,8.27],[132001,132001,6.63],[132002,132002,11],[132003,132003,7.4],[132004,132004,6.78],[132005,132005,6.77],[132006,132006,9.01],[132007,132007,7.54],[132008,132008,9.58],[132009,132009,9],[132010,132010,4.63],[132011,132011,6.77],[132012,132012,6.85],[132013,132013,5.64],[132014,132014,6.96],[132015,132015,3.02],[132016,132016,6.94],[132017,132017,6.85],[132018,132018,6.82],[132019,132019,6.51],[132020,132020,6.69],[132021,132021,5.64],[132022,132022,5.03],[132023,132023,6.96],[132024,132024,6.86],[132025,132025,3.02],[132026,132027,6.51],[132028,132028,7.04],[132029,132029,6.51],[132030,132030,5.53],[132031,132031,6.68],[132032,132032,7.01],[132033,132033,6.88],[132034,132034,5.59],[132035,132035,6.93],[132036,132036,5.46],[132037,132037,6.94],[132038,132038,8.69],[132039,132039,6.49],[132040,132040,9.04],[132041,132041,8.95],[132042,132042,3.02],[132043,132043,6.94],[132044,132044,6.68],[132045,132045,6.94],[132046,132046,8.95],[132047,132047,6.23],[132048,132048,5.6],[132049,132049,5.45],[132050,132050,7.94],[132051,132051,9.79],[132052,132052,7.94],[132053,132053,5.79],[132054,132054,7.24],[132055,132055,6.16],[132056,132056,7.94],[132057,132057,5.5],[132058,132058,7.34],[132059,132059,4.62],[132060,132060,6.12],[132061,132061,4.91],[132062,132062,6.33],[132063,132063,4.96],[132064,132064,8.05],[132065,132065,6.09],[132066,132066,9.11],[132067,132067,8.56],[132068,132068,6.77],[132069,132069,5.73],[132070,132070,7.27],[132071,132071,4.88],[132072,132073,5.96],[132074,132074,7.22],[132075,132075,6.39],[132076,132076,7.69],[132077,132077,5.6],[132078,132078,5.23],[132079,132079,4.24],[132080,132080,6.16],[132081,132081,5.6],[132082,132082,4.88],[132083,132083,3.06],[132084,132084,7.94],[132085,132086,4.45],[132087,132087,6.12],[132088,132088,5.5],[132089,132089,7.34],[132090,132090,9.78],[132091,132091,6.96],[132092,132092,5.49],[132093,132095,7.34],[132096,132097,6.96],[132098,132098,8.72],[132099,132099,6.23],[132100,132100,7.71],[132101,132101,7.52],[132102,132103,4.63],[132104,132104,5],[132105,132105,12.3],[132106,132106,12.13],[132107,132107,9],[132108,132108,7.62],[132109,132109,8.26],[132110,132110,6.77],[132111,132111,8.27],[132112,132112,7.52],[132113,132114,7.54],[132115,132115,6.23],[132116,132116,8.2],[132117,132117,6.96],[132118,132118,10.7],[132119,132119,6.77],[132120,132121,8.26],[132122,132122,7.62],[132123,132123,8.08],[132124,132124,9.27],[132125,132125,8.27],[132126,132126,8.66],[132127,132127,8.27],[132128,132128,6.63],[132129,132129,7.68],[132130,132130,6.78],[132131,132131,6.77],[132132,132132,9.01],[132133,132133,7.54],[132134,132134,8.37],[132135,132135,7.83],[132136,132136,11.33],[132137,132137,11.49],[132138,132138,8.62],[132139,132139,10.12],[132140,132140,7.49],[132141,132141,7.71],[132142,132142,11.38],[132143,132143,7.77],[132144,132144,6.61],[132145,132145,6.76],[132146,132146,6.54],[132147,132147,5.18],[132148,132148,6.84],[132149,132149,6.55],[132150,132150,8.78],[132151,132151,5.77],[132152,132153,7.04],[132154,132154,6.51],[132155,132155,6.83],[132156,132156,7.66],[132157,132157,7.01],[132158,132158,6.68],[132159,132159,7.01],[132160,132160,6.85],[132161,132161,5.88],[132162,132162,5.46],[132163,132163,6.51],[132164,132164,9.25],[132165,132165,6.51],[132166,132166,7.09],[132167,132167,6.66],[132168,132168,9.64],[132169,132169,9.76],[132170,132170,7.05],[132171,132171,8.74],[132172,132172,6.28],[132173,132173,6.02],[132174,132174,9.23],[132175,132175,6.6],[132176,132177,6.55],[132178,132178,6.96],[132179,132179,5.18],[132180,132180,6.02],[132181,132181,5.73],[132182,132183,3.02],[132184,132184,3.79],[132185,132186,10.05],[132187,132187,6.96],[132188,132188,6.51],[132189,132189,7.04],[132190,132190,6.51],[132191,132191,7.01],[132192,132192,12.9],[132193,132193,6.97],[132194,132194,7.38],[132195,132195,5.97],[132196,132196,10.65],[132197,132197,7.45],[132198,132198,7.94],[132199,132199,6.49],[132200,132200,11.36],[132201,132201,9.17],[132202,132202,9.86],[132203,132203,7.6],[132204,132204,13.29],[132205,132205,10.29],[132206,132206,5.51],[132207,132207,4.35],[132208,132208,8.12],[132209,132209,6.89],[132210,132210,7.94],[132211,132211,5.5],[132212,132212,8.95],[132213,132213,6.48],[132214,132214,8.95],[132215,132215,6.48],[132216,132216,13.06],[132217,132217,11.44],[132218,132218,8.39],[132219,132219,6.23],[132220,132220,10.82],[132221,132221,8.95],[132222,132222,12.9],[132223,132223,6.97],[132224,132224,7.34],[132225,132225,4.88],[132226,132226,3.67],[132227,132230,0],[132231,132231,6.99],[132232,132233,0],[132234,132234,7.94],[132235,132235,5.89],[132236,132236,6.32],[132237,132237,5.17],[132238,132238,6.12],[132239,132239,5.5],[132240,132240,6.23],[132241,132241,5.18],[132242,132242,6.23],[132243,132243,5.18],[132244,132244,6.94],[132245,132245,5.67],[132246,132246,10.7],[132247,132247,8.78],[132248,132248,5.51],[132249,132249,4.35],[132250,132250,7.62],[132251,132251,6.51],[132252,132252,7.62],[132253,132253,6.51],[132254,132254,7.34],[132255,132255,5.34],[132256,132256,8.64],[132257,132257,6.31],[132258,132258,8.27],[132259,132259,7.01],[132260,132260,9.36],[132261,132261,6.85],[132262,132262,11.35],[132263,132263,8.68],[132264,132264,8.66],[132265,132265,6.78],[132266,132266,7.34],[132267,132267,4.88],[132268,132268,6.72],[132269,132269,4.81],[132270,132270,6.77],[132271,132271,6.51],[132272,132272,6.77],[132273,132273,6.51],[132274,132274,7.54],[132275,132275,6.51],[132276,132276,8.77],[132277,132277,6.63],[132278,132278,7.15],[132279,132279,5.53],[132280,132280,7.83],[132281,132281,6.66],[132282,132282,7.83],[132283,132283,6.96],[132284,132284,9.66],[132285,132285,7.58],[132286,132286,9.66],[132287,132287,7.58],[132288,132288,3.66],[132289,132289,9.86],[132290,132290,7.6],[132291,132291,7.34],[132292,132292,5.67],[132293,132293,7.46],[132294,132294,5.49],[132295,132295,7.94],[132296,132296,5.89],[132297,132297,7.94],[132298,132298,5.89],[132299,132299,7.15],[132300,132300,5.53],[132301,132301,9.78],[132302,132302,6.96],[132303,132303,3.06],[132304,132304,7.94],[132305,132305,4.88],[132306,132306,7.94],[132307,132307,4.88],[132308,132308,9.78],[132309,132309,7.34],[132310,132310,6.72],[132311,132311,4.88],[132312,132312,8.3],[132313,132313,6.55],[132314,132314,7.94],[132315,132315,4.88],[132316,132316,9.86],[132317,132317,7.6],[132318,132318,5.51],[132319,132319,4.35],[132320,132320,5.51],[132321,132321,4.88],[132322,132322,7.94],[132323,132323,5.89],[132324,132324,7.94],[132325,132325,5.89],[132326,132326,7.94],[132327,132327,5.5],[132328,132328,8.66],[132329,132329,6.68],[132330,132330,7.94],[132331,132331,5.5],[132332,132332,7.26],[132333,132333,4.72],[132334,132334,7.79],[132335,132335,5.5],[132336,132336,7.79],[132337,132337,5.5],[132338,132338,7.79],[132339,132339,5.5],[132340,132340,7.15],[132341,132341,5.53],[132342,132342,6.36],[132343,132343,4.51],[132344,132344,9.59],[132345,132345,7.39],[132346,132346,6.36],[132347,132347,4.51],[132348,132348,7.94],[132349,132349,5.5],[132350,132350,7.94],[132351,132351,5.5],[132352,132352,6.32],[132353,132353,5.5],[132354,132354,8.84],[132355,132355,8.48],[132356,132356,8.82],[132357,132357,7.76],[132358,132358,6.31],[132359,132359,4.98],[132360,132360,9.97],[132361,132361,8.27],[132362,132362,10.45],[132363,132363,8.66],[132364,132364,7.94],[132365,132365,4.98],[132366,132366,7.65],[132367,132367,6.62],[132368,132368,5.51],[132369,132369,4.35],[132370,132370,7.46],[132371,132371,5.49],[132372,132372,8.38],[132373,132373,7.62],[132374,132374,9.13],[132375,132375,7.49],[132376,132376,11.34],[132377,132377,8.11],[132378,132378,8.66],[132379,132379,6.85],[132380,132380,10.88],[132381,132381,9],[132382,132382,7.53],[132383,132383,6.94],[132384,132384,10.79],[132385,132385,8.76],[132386,132386,12.22],[132387,132387,9.99],[132388,132388,7.77],[132389,132389,6.78],[132390,132390,7.56],[132391,132391,6.92],[132392,132392,4.88],[132393,132393,4.43],[132394,132394,9.8],[132395,132395,8.94],[132396,132396,6.18],[132397,132397,5.76],[132398,132398,7.49],[132399,132399,6.65],[132400,132400,11],[132401,132401,9.14],[132402,132402,7.66],[132403,132403,8.34],[132404,132404,8.4],[132405,132405,7.66],[132406,132406,7.37],[132407,132407,6.92],[132408,132408,7.66],[132409,132409,8.92],[132410,132410,8.41],[132411,132411,7.72],[132412,132412,4.53],[132413,132413,9.01],[132414,132414,7.82],[132415,132415,7.8],[132416,132416,6.32],[132417,132417,7.14],[132418,132418,8.4],[132419,132419,7.57],[132420,132420,8.84],[132421,132421,6.9],[132422,132422,6.91],[132423,132423,7.19],[132424,132424,7.97],[132425,132425,6.97],[132426,132426,8.72],[132427,132427,7.06],[132428,132428,8.85],[132429,132429,7.97],[132430,132430,8.66],[132431,132431,6.28],[132432,132432,7.4],[132433,132433,7.35],[132434,132434,6.58],[132435,132435,8.8],[132436,132436,6.79],[132437,132437,8.54],[132438,132438,7.69],[132439,132440,11],[132441,132443,2.32],[132444,132444,3.2],[132445,132445,2.32],[132446,132446,4.86],[132447,132447,4.56],[132448,132448,11],[132449,132449,10.12],[132450,132450,6.57],[132451,132451,7.03],[132452,132452,6.96],[132453,132453,6.57],[132454,132454,6.6],[132455,132455,5.21],[132456,132456,6.57],[132457,132457,7.35],[132458,132458,6.7],[132459,132459,6.57],[132460,132460,2.91],[132461,132461,10.12],[132462,132462,6.48],[132463,132463,6.57],[132464,132464,6.18],[132465,132466,6.59],[132467,132467,6.34],[132468,132468,6.62],[132469,132469,2.91],[132470,132470,6.59],[132471,132471,4.55],[132472,132472,6.57],[132473,132473,3.78],[132474,132474,10.12],[132475,132475,5.69],[132476,132476,6.81],[132477,132477,6.57],[132478,132478,6.58],[132479,132479,10.24],[132480,132480,6.96],[132481,132481,6.59],[132482,132482,3.53],[132483,132483,10.24],[132484,132484,6.57],[132485,132485,6.42],[132486,132486,7.04],[132487,132487,6.93],[132488,132488,11],[132489,132489,2.79],[132490,132490,4.85],[132491,132492,11],[132493,132494,8.99],[132495,132495,8.05],[132496,132496,11],[132497,132541,0],[132542,132542,3.92],[132543,132543,0],[132544,132544,3.2],[132545,132546,0],[132547,132547,3.06],[132548,132549,0],[132550,132550,3.35],[132551,132551,0],[132552,132559,11],[132560,132560,5.3],[132561,132561,5.01],[132562,132562,3.69],[132563,132563,4.61],[132564,132564,5.18],[132565,132565,3.07],[132566,132566,3.15],[132567,132567,5.24],[132568,132568,5.23],[132569,132569,2.93],[132570,132570,4.97],[132571,132571,4.76],[132572,132572,4.75],[132573,132573,5.58],[132574,132574,5.34],[132575,132575,3.02],[132576,132576,3.35],[132577,132577,5.23],[132578,132579,5],[132580,132580,4.84],[132581,132581,5.31],[132582,132582,5.06],[132583,132583,5.21],[132584,132584,5.16],[132585,132585,6.71],[132586,132586,5.5],[132587,132591,11],[132592,132592,6.13],[132593,132593,6],[132594,132594,5.87],[132595,132595,2.3],[132596,132596,4.09],[132597,132607,11],[132608,132608,8.15],[132609,132609,14.3],[132610,132610,8.35],[132611,132611,10.11],[132612,132612,29.2],[132613,132613,12.03],[132614,132615,7.09],[132616,132616,8.56],[132617,132618,5.78],[132619,132619,2.89],[132620,132620,3.51],[132621,132621,2.63],[132622,132622,7.22],[132623,132623,5.98],[132624,132628,0],[132629,132629,2.96],[132630,132634,0],[132635,132635,3.51],[132636,132636,0],[132637,132637,11],[132638,132638,3.18],[132639,132639,3.92],[132640,132640,8.87],[132641,132641,4.54],[132642,132643,2.28],[132644,132644,4.75],[132645,132645,2.28],[132646,132646,7.02],[132647,132647,2.28],[132648,132648,7.85],[132649,132649,3.1],[132650,132651,7.85],[132652,132654,6.19],[132655,132656,3.71],[132657,132658,5.38],[132659,132660,9.03],[132661,132662,12.08],[132663,132664,6.4],[132665,132666,5.98],[132667,132668,7.74],[132669,132671,7.05],[132672,132672,2.28],[132673,132673,8.67],[132674,132674,6.4],[132675,132675,6.61],[132676,132676,5.57],[132677,132677,3.72],[132678,132678,5.78],[132679,132679,3.1],[132680,132680,4.75],[132681,132682,7.02],[132683,132703,0],[132704,132714,5.78],[132715,132716,3.51],[132717,132717,5.78],[132718,132718,7.85],[132719,132719,6.4],[132720,132720,0],[132721,132723,2.28],[132724,132724,0],[132725,132725,2.28],[132726,132727,4.75],[132728,132728,7.02],[132729,132736,7.85],[132737,132743,6.19],[132744,132752,3.71],[132753,132761,5.38],[132762,132764,9.03],[132765,132766,12.08],[132767,132767,6.4],[132768,132768,5.98],[132769,132774,8.67],[132775,132776,6.4],[132777,132777,8.93],[132778,132778,12.71],[132779,132779,8.93],[132780,132782,6.61],[132783,132788,8.93],[132789,132792,5.57],[132793,132797,5.78],[132798,132798,4.95],[132799,132799,6.19],[132800,132803,3.1],[132804,132811,4.75],[132812,132814,7.02],[132815,132815,4.75],[132816,132817,7.02],[132818,132819,8.93],[132820,132820,2.28],[132821,132821,3.1],[132822,132828,0],[132829,132829,12.35],[132830,132830,11.93],[132831,132840,0],[132841,132841,6.6],[132842,132845,0],[132846,132846,3.71],[132847,132847,5.38],[132848,132857,5.78],[132858,132858,9.03],[132859,132859,12.08],[132860,132860,5.98],[132861,132861,4.54],[132862,132862,3.72],[132863,132863,4.95],[132864,132864,6.5],[132865,132865,3.27],[132866,132868,2.83],[132869,132869,5.88],[132870,132871,4.25],[132872,132873,4.14],[132874,132874,6.37],[132875,132875,10.15],[132876,132876,7.63],[132877,132877,8.34],[132878,132878,11],[132879,132879,0],[132880,132880,10.23],[132881,132881,0],[132882,132882,10.54],[132883,132884,12],[132885,132886,5.93],[132887,132887,10.23],[132888,132888,6.71],[132889,132889,3.02],[132890,132890,7.71],[132891,132892,10.99],[132893,132893,2.67],[132894,132894,13.42],[132895,132895,9.78],[132896,132896,7.22],[132897,132897,9.73],[132898,132898,7.46],[132899,132900,9.75],[132901,132901,10.48],[132902,132902,9.27],[132903,132903,8.77],[132904,132904,6.89],[132905,132905,9.17],[132906,132906,5.93],[132907,132907,10.39],[132908,132908,8.17],[132909,132909,10.54],[132910,132910,12],[132911,132911,6.54],[132912,132938,0],[132939,132940,11],[132941,132941,6.41],[132942,132942,9.27],[132943,132943,7.22],[132944,132950,7.85],[132951,132952,6.19],[132953,132954,3.71],[132955,132955,5.38],[132956,132956,9.03],[132957,132959,5.98],[132960,132961,8.67],[132962,132964,8.93],[132965,132966,3.72],[132967,132969,5.78],[132970,132970,5.57],[132971,132972,5.38],[132973,132973,9.03],[132974,132975,6.42],[132976,132976,10.04],[132977,132977,4.49],[132978,132978,6.42],[132979,132980,3.22],[132981,132983,7.05],[132984,132985,4.32],[132986,132988,6.42],[132989,132990,10.04],[132991,132991,5.99],[132992,132992,5.82],[132993,132993,7.46],[132994,132994,8.9],[132995,132995,7.14],[132996,132996,7.83],[132997,132997,5.99],[132998,132998,6.05],[132999,132999,5.86],[133000,133000,5.92],[133001,133001,5.7],[133002,133002,4.94],[133003,133003,6.97],[133004,133004,7.14],[133005,133005,6.34],[133006,133006,5.5],[133007,133007,7.94],[133008,133008,11.21],[133009,133009,4.29],[133010,133010,6.27],[133011,133011,7.38],[133012,133012,8.01],[133013,133013,4.94],[133014,133014,6.41],[133015,133015,7.11],[133016,133016,6.8],[133017,133018,5.82],[133019,133019,6.97],[133020,133020,7.14],[133021,133023,11.21],[133024,133025,7.14],[133026,133027,5.92],[133028,133028,5.5],[133029,133029,5.57],[133030,133040,0],[133041,133041,5.2],[133042,133055,11],[133056,133056,5.94],[133057,133057,5.96],[133058,133058,5.99],[133059,133059,5.65],[133060,133061,5.93],[133062,133062,5.77],[133063,133064,5.96],[133065,133065,6.09],[133066,133066,2.91],[133067,133067,7.26],[133068,133068,4.81],[133069,133069,6.81],[133070,133070,6.52],[133071,133071,6.06],[133072,133072,7.09],[133073,133073,5.74],[133074,133074,7.53],[133075,133076,4.61],[133077,133077,6.2],[133078,133078,5.36],[133079,133079,4.15],[133080,133080,8.71],[133081,133081,4.3],[133082,133082,7.15],[133083,133083,7.79],[133084,133084,6.34],[133085,133085,8.06],[133086,133086,5.98],[133087,133087,6.36],[133088,133088,5.73],[133089,133089,6.34],[133090,133090,5.95],[133091,133092,5.98],[133093,133093,5.77],[133094,133094,5.73],[133095,133095,5.82],[133096,133097,4.98],[133098,133098,4.3],[133099,133107,0],[133108,133109,3.72],[133110,133110,6.09],[133111,133111,10.45],[133112,133113,5.29],[133114,133114,4.59],[133115,133119,11],[133120,133120,10.2],[133121,133121,8.54],[133122,133122,8.7],[133123,133123,7.24],[133124,133124,9.44],[133125,133125,10.19],[133126,133126,9.66],[133127,133127,10.39],[133128,133128,10.48],[133129,133129,12.03],[133130,133130,8.1],[133131,133131,6.68],[133132,133132,10.03],[133133,133133,8],[133134,133134,8.48],[133135,133135,9.88],[133136,133136,8.29],[133137,133137,11.79],[133138,133138,8.01],[133139,133139,7.84],[133140,133140,9.25],[133141,133141,10.31],[133142,133145,0],[133146,133146,4.45],[133147,133155,0],[133156,133156,2.52],[133157,133159,0],[133160,133160,2.72],[133161,133165,0],[133166,133167,11],[133168,133169,3.95],[133170,133170,6.5],[133171,133172,9.63],[133173,133173,6.37],[133174,133174,7.37],[133175,133175,14.4],[133176,133176,11.82],[133177,133178,11.7],[133179,133179,5.52],[133180,133180,6.78],[133181,133181,8.87],[133182,133182,4.67],[133183,133183,11],[133184,133184,5.87],[133185,133185,9.83],[133186,133186,5.25],[133187,133187,7.28],[133188,133188,9.91],[133189,133189,4.53],[133190,133190,2.74],[133191,133191,8.58],[133192,133192,7.44],[133193,133193,4.86],[133194,133194,7.38],[133195,133195,5.06],[133196,133196,10.9],[133197,133197,6.46],[133198,133198,10.92],[133199,133199,9.39],[133200,133200,7.92],[133201,133201,11.25],[133202,133202,9.48],[133203,133203,9.14],[133204,133204,10.04],[133205,133205,7.06],[133206,133206,8.39],[133207,133207,12.46],[133208,133208,5.24],[133209,133211,0],[133212,133213,11],[133214,133214,6.13],[133215,133279,11],[133280,133281,9.62],[133282,133282,7.43],[133283,133283,8.42],[133284,133284,10.14],[133285,133285,7.43],[133286,133286,6.97],[133287,133287,5.34],[133288,133289,8.34],[133290,133290,6.03],[133291,133291,4.72],[133292,133292,6.39],[133293,133293,2.63],[133294,133294,5.25],[133295,133295,12.4],[133296,133296,9.23],[133297,133297,5.16],[133298,133298,3.71],[133299,133299,6.77],[133300,133300,8.75],[133301,133301,11],[133302,133304,9.62],[133305,133305,3.76],[133306,133306,8.34],[133307,133307,10.18],[133308,133308,7.43],[133309,133309,6.58],[133310,133332,11],[133333,133333,5.78],[133334,133334,3.96],[133335,133335,4.07],[133336,133336,3.41],[133337,133337,3.27],[133338,133343,11],[133344,133344,5.65],[133345,133345,6.19],[133346,133346,11],[133347,133369,0],[133370,133370,11],[133371,133375,0],[133376,133378,7.26],[133379,133379,10.21],[133380,133381,7.97],[133382,133382,10.97],[133383,133384,5.84],[133385,133385,5.22],[133386,133386,7.42],[133387,133387,9.06],[133388,133388,7.88],[133389,133392,6.03],[133393,133396,10.97],[133397,133397,8.47],[133398,133398,8.71],[133399,133399,6.13],[133400,133400,6.98],[133401,133401,6.84],[133402,133402,7.08],[133403,133403,7.46],[133404,133404,8.15],[133405,133405,8.5],[133406,133406,7.71],[133407,133407,5.53],[133408,133408,6.31],[133409,133409,5.98],[133410,133410,5.79],[133411,133411,8.32],[133412,133412,6.12],[133413,133413,7.09],[133414,133414,5.75],[133415,133415,6.95],[133416,133417,5.64],[133418,133418,6.18],[133419,133419,8.73],[133420,133420,6.24],[133421,133421,6.41],[133422,133422,6.37],[133423,133423,6.7],[133424,133424,4.42],[133425,133425,4.49],[133426,133426,7.84],[133427,133428,8.06],[133429,133429,6.03],[133430,133430,7.9],[133431,133431,6.29],[133432,133432,7.48],[133433,133433,5.58],[133434,133434,7.26],[133435,133435,10.26],[133436,133436,7.26],[133437,133437,5.39],[133438,133440,10.26],[133441,133448,7.26],[133449,133452,10.26],[133453,133453,7.26],[133454,133455,10.26],[133456,133456,13.45],[133457,133460,0],[133461,133463,7.26],[133464,133464,8.47],[133465,133465,8.71],[133466,133466,6.13],[133467,133467,8.15],[133468,133468,5.98],[133469,133469,5.79],[133470,133470,8.73],[133471,133471,6.7],[133472,133472,9.06],[133473,133473,7.88],[133474,133475,7.26],[133476,133476,5.25],[133477,133477,8.17],[133478,133478,5.13],[133479,133479,5.31],[133480,133480,5.42],[133481,133481,5.36],[133482,133482,5.57],[133483,133483,5.94],[133484,133484,5.81],[133485,133485,7.16],[133486,133486,5.28],[133487,133487,5.25],[133488,133488,5.49],[133489,133489,3.44],[133490,133491,7.97],[133492,133493,10.97],[133494,133495,7.97],[133496,133496,5.66],[133497,133497,8.15],[133498,133498,6.7],[133499,133499,6.13],[133500,133500,7.96],[133501,133501,5],[133502,133502,6.09],[133503,133503,6.24],[133504,133504,6.21],[133505,133505,7.26],[133506,133506,12.07],[133507,133507,11.97],[133508,133508,11],[133509,133509,9.82],[133510,133510,12.84],[133511,133511,5.43],[133512,133512,7.24],[133513,133513,7.35],[133514,133514,7.51],[133515,133515,8.27],[133516,133516,6.75],[133517,133518,11],[133519,133519,7.78],[133520,133520,8.34],[133521,133522,11],[133523,133523,6.61],[133524,133524,7.82],[133525,133525,7.6],[133526,133526,7.23],[133527,133527,6.95],[133528,133528,6.86],[133529,133529,7.56],[133530,133530,5.77],[133531,133531,6.54],[133532,133532,8.76],[133533,133533,8.46],[133534,133534,10.43],[133535,133535,6.01],[133536,133536,5.97],[133537,133537,7.35],[133538,133538,6.02],[133539,133539,6.69],[133540,133540,7.49],[133541,133541,7.44],[133542,133542,6.02],[133543,133543,6.68],[133544,133544,6.92],[133545,133545,11],[133546,133546,7.19],[133547,133547,8.26],[133548,133548,6.04],[133549,133549,7.92],[133550,133550,6.43],[133551,133551,6.19],[133552,133552,6.04],[133553,133553,11],[133554,133554,8.12],[133555,133557,11],[133558,133558,7.67],[133559,133559,6.21],[133560,133560,7.25],[133561,133561,5.43],[133562,133563,11],[133564,133564,7.26],[133565,133565,5.08],[133566,133568,10.26],[133569,133572,7.26],[133573,133574,11],[133575,133576,10.24],[133577,133578,11],[133579,133580,13.24],[133581,133581,7.26],[133582,133582,5.74],[133583,133590,11],[133591,133591,10.26],[133592,133595,11],[133596,133596,7.35],[133597,133597,6.02],[133598,133598,11],[133599,133599,6.19],[133600,133600,8.27],[133601,133601,6.75],[133602,133603,7.26],[133604,133605,11],[133606,133606,6.53],[133607,133607,5.79],[133608,133608,5.26],[133609,133609,7.97],[133610,133610,5.51],[133611,133611,6.7],[133612,133612,7],[133613,133613,6.21],[133614,133614,7.62],[133615,133615,6.94],[133616,133616,6.08],[133617,133617,6.04],[133618,133618,4.55],[133619,133619,6.56],[133620,133620,4.38],[133621,133621,7.5],[133622,133622,6.95],[133623,133623,3],[133624,133624,6.23],[133625,133625,5.83],[133626,133626,6.96],[133627,133627,2.97],[133628,133632,11],[133633,133634,7.45],[133635,133635,9.76],[133636,133636,11],[133637,133637,7.77],[133638,133638,10.36],[133639,133640,8.82],[133641,133642,6.48],[133643,133646,11],[133647,133647,6.12],[133648,133648,7.77],[133649,133650,11],[133651,133651,6.46],[133652,133652,7.77],[133653,133653,6.24],[133654,133654,6.28],[133655,133655,7.99],[133656,133656,7.8],[133657,133657,5.85],[133658,133658,6.54],[133659,133659,6.34],[133660,133660,6.43],[133661,133661,5.88],[133662,133662,6.23],[133663,133663,5.82],[133664,133664,6.31],[133665,133665,5.9],[133666,133666,6.49],[133667,133667,6.16],[133668,133668,5.59],[133669,133669,6.36],[133670,133670,6.26],[133671,133671,6.13],[133672,133672,6.3],[133673,133673,11],[133674,133674,6.1],[133675,133675,6.08],[133676,133676,6.3],[133677,133677,5.9],[133678,133678,6.15],[133679,133679,7.52],[133680,133680,5.88],[133681,133681,11],[133682,133682,7.17],[133683,133683,7.19],[133684,133684,11],[133685,133685,6.04],[133686,133686,6.15],[133687,133687,11],[133688,133688,6.15],[133689,133689,5.88],[133690,133691,11],[133692,133692,7.45],[133693,133693,11],[133694,133694,10.04],[133695,133696,10.15],[133697,133698,7.45],[133699,133702,11],[133703,133704,7.45],[133705,133706,11],[133707,133709,7.45],[133710,133712,11],[133713,133713,7.45],[133714,133720,11],[133721,133721,6.28],[133722,133722,7.99],[133723,133723,6.43],[133724,133724,5.7],[133725,133725,11],[133726,133726,6.08],[133727,133733,11],[133734,133734,5.59],[133735,133735,5.1],[133736,133736,5.44],[133737,133737,5.4],[133738,133738,6.06],[133739,133739,6.21],[133740,133740,5.52],[133741,133741,5.74],[133742,133743,6.21],[133744,133745,7.45],[133746,133746,6.12],[133747,133747,6.48],[133748,133748,11.54],[133749,133749,7.45],[133750,133760,11],[133761,133762,7.16],[133763,133763,9.79],[133764,133764,11],[133765,133765,9.92],[133766,133766,12.9],[133767,133767,6.9],[133768,133768,6.91],[133769,133769,7.09],[133770,133770,9.87],[133771,133771,9.4],[133772,133772,7.48],[133773,133773,9.92],[133774,133774,11],[133775,133776,9.92],[133777,133777,12.9],[133778,133778,11],[133779,133780,12.9],[133781,133781,6.18],[133782,133782,8.46],[133783,133783,7.88],[133784,133784,7.33],[133785,133785,6.09],[133786,133786,7.72],[133787,133787,8.04],[133788,133788,6.97],[133789,133789,8.35],[133790,133790,7.86],[133791,133791,5.43],[133792,133792,6.63],[133793,133793,5.54],[133794,133794,6.29],[133795,133795,9.14],[133796,133796,6.43],[133797,133797,7.37],[133798,133798,5.37],[133799,133799,7.2],[133800,133800,5.92],[133801,133801,11],[133802,133802,6.29],[133803,133803,6.3],[133804,133804,8.51],[133805,133805,8.88],[133806,133806,6.34],[133807,133807,7.13],[133808,133808,5.21],[133809,133809,11],[133810,133810,7.36],[133811,133811,8.56],[133812,133812,11],[133813,133813,6.65],[133814,133814,8.11],[133815,133815,6.39],[133816,133816,8.06],[133817,133817,6.48],[133818,133819,11],[133820,133820,7.16],[133821,133821,5.71],[133822,133824,10.14],[133825,133829,7.16],[133830,133830,11],[133831,133832,7.16],[133833,133833,10.14],[133834,133834,11],[133835,133836,10.14],[133837,133837,7.16],[133838,133839,11],[133840,133840,12.23],[133841,133855,11],[133856,133856,9.75],[133857,133857,7.48],[133858,133859,7.16],[133860,133861,11],[133862,133862,5.36],[133863,133863,5.57],[133864,133864,5.27],[133865,133865,5.28],[133866,133866,5.82],[133867,133867,5.99],[133868,133868,5.32],[133869,133869,6.97],[133870,133870,5.19],[133871,133871,5.63],[133872,133872,4.51],[133873,133873,10.22],[133874,133880,11],[133881,133881,7.88],[133882,133888,11],[133889,133889,5.61],[133890,133890,8.93],[133891,133891,10.09],[133892,133892,11],[133893,133893,6.9],[133894,133894,9.03],[133895,133895,7.33],[133896,133896,7.4],[133897,133897,7.29],[133898,133898,7.54],[133899,133899,7.49],[133900,133900,5.59],[133901,133902,11],[133903,133903,7.06],[133904,133904,9.03],[133905,133906,11],[133907,133907,7.03],[133908,133908,9.02],[133909,133909,7.27],[133910,133910,7.24],[133911,133911,7.2],[133912,133912,7.13],[133913,133913,7.81],[133914,133914,6.98],[133915,133915,7.07],[133916,133916,7.27],[133917,133917,7.05],[133918,133918,7.16],[133919,133919,7.02],[133920,133920,7.87],[133921,133922,7.07],[133923,133923,7.1],[133924,133924,7.07],[133925,133925,6.9],[133926,133926,6.97],[133927,133927,6.39],[133928,133928,6.97],[133929,133929,11],[133930,133930,7.13],[133931,133931,8.68],[133932,133932,6.98],[133933,133933,7.42],[133934,133934,7.13],[133935,133935,7.51],[133936,133936,7.19],[133937,133937,11],[133938,133938,7.71],[133939,133939,7.27],[133940,133940,11],[133941,133941,6.98],[133942,133942,7.24],[133943,133943,7.26],[133944,133944,7.07],[133945,133945,6.82],[133946,133947,11],[133948,133948,5.61],[133949,133949,3.81],[133950,133950,7.69],[133951,133951,5.61],[133952,133952,8.86],[133953,133956,5.61],[133957,133958,11],[133959,133960,10.57],[133961,133962,11],[133963,133964,12.65],[133965,133965,5.61],[133966,133973,11],[133974,133974,5.61],[133975,133975,7.69],[133976,133979,11],[133980,133981,7.07],[133982,133982,11],[133983,133983,8.05],[133984,133984,7.55],[133985,133985,5.59],[133986,133987,5.61],[133988,133989,11],[133990,133999,6.29],[134000,134000,6.14],[134001,134001,6.31],[134002,134002,2.43],[134003,134003,4.17],[134004,134004,5.81],[134005,134005,5.22],[134006,134006,6.02],[134007,134007,6.77],[134008,134017,11],[134018,134018,6.18],[134019,134019,7.61],[134020,134020,11],[134021,134021,9.76],[134022,134022,11.69],[134023,134023,10.29],[134024,134024,6.89],[134025,134025,10.43],[134026,134026,12.35],[134027,134029,11],[134030,134031,7.81],[134032,134032,8.62],[134033,134033,11],[134034,134035,8.26],[134036,134036,16.93],[134037,134037,7.81],[134038,134040,11],[134041,134041,9.1],[134042,134042,7.13],[134043,134043,11],[134044,134044,8.28],[134045,134045,11],[134046,134046,10.45],[134047,134047,8.5],[134048,134050,11],[134051,134051,13.59],[134052,134052,7.47],[134053,134055,11],[134056,134056,7.36],[134057,134057,10.13],[134058,134058,6.43],[134059,134061,11],[134062,134062,7.35],[134063,134063,7.58],[134064,134064,5.88],[134065,134065,6.98],[134066,134066,8.75],[134067,134067,9.34],[134068,134068,7.35],[134069,134069,8.03],[134070,134070,9.96],[134071,134071,10.18],[134072,134072,11.02],[134073,134073,13.15],[134074,134077,11],[134078,134078,11.68],[134079,134079,8],[134080,134080,6.41],[134081,134081,10.51],[134082,134082,12.2],[134083,134085,11],[134086,134086,14.3],[134087,134087,12.86],[134088,134088,16.1],[134089,134089,11],[134090,134090,19.01],[134091,134091,17.82],[134092,134092,22.59],[134093,134093,6.18],[134094,134095,11],[134096,134096,9.21],[134097,134102,11],[134103,134103,15.03],[134104,134115,11],[134116,134116,3.6],[134117,134117,5.48],[134118,134118,5.87],[134119,134119,6.9],[134120,134120,6.91],[134121,134121,6.54],[134122,134122,6.6],[134123,134123,8.13],[134124,134124,9.12],[134125,134125,7],[134126,134126,9.47],[134127,134127,9.02],[134128,134128,7.78],[134129,134129,7.59],[134130,134130,8.55],[134131,134131,9.08],[134132,134132,7.95],[134133,134133,16.02],[134134,134134,8.12],[134135,134135,12.73],[134136,134136,13.71],[134137,134137,8.07],[134138,134138,11.23],[134139,134143,11],[134144,134144,7.26],[134145,134145,11.08],[134146,134146,14.09],[134147,134147,11.41],[134148,134148,11],[134149,134149,9.67],[134150,134150,9.42],[134151,134151,8.52],[134152,134152,11.11],[134153,134153,9.87],[134154,134154,13.47],[134155,134155,16.47],[134156,134156,10.98],[134157,134157,11],[134158,134159,8.41],[134160,134160,8.87],[134161,134161,11],[134162,134163,8.26],[134164,134164,8.5],[134165,134165,5.68],[134166,134166,9.9],[134167,134167,6.59],[134168,134168,12.15],[134169,134169,8.46],[134170,134171,8.84],[134172,134172,8.41],[134173,134173,14.44],[134174,134174,11.29],[134175,134175,9.34],[134176,134176,6.83],[134177,134178,9.02],[134179,134179,9.16],[134180,134180,9],[134181,134183,8.98],[134184,134184,8.36],[134185,134185,11],[134186,134187,8.4],[134188,134189,8.95],[134190,134190,12.18],[134191,134191,14.44],[134192,134192,6.83],[134193,134193,9.71],[134194,134194,8.5],[134195,134195,7.13],[134196,134196,9.71],[134197,134197,8.37],[134198,134198,6.13],[134199,134199,8.37],[134200,134200,8.39],[134201,134201,11.9],[134202,134204,11],[134205,134205,6.97],[134206,134206,10.85],[134207,134208,7.26],[134209,134209,11.09],[134210,134210,13.86],[134211,134211,11.93],[134212,134212,15.26],[134213,134213,11],[134214,134216,7.26],[134217,134217,11],[134218,134219,7.26],[134220,134220,10.92],[134221,134221,7.26],[134222,134228,11],[134229,134230,7.26],[134231,134231,11],[134232,134232,8.84],[134233,134233,8.41],[134234,134234,8.98],[134235,134239,11],[134240,134240,20.14],[134241,134241,14.81],[134242,134243,7.26],[134244,134245,11],[134246,134246,6.38],[134247,134247,6.25],[134248,134248,7.7],[134249,134249,5.5],[134250,134250,6.46],[134251,134251,7.12],[134252,134252,5.03],[134253,134253,5.68],[134254,134254,6.49],[134255,134255,5.03],[134256,134263,11],[134264,134264,5.77],[134265,134265,2.76],[134266,134266,5.24],[134267,134267,8.21],[134268,134268,7.44],[134269,134269,7.36],[134270,134270,7.3],[134271,134271,8.65],[134272,134272,6.12],[134273,134273,6.17],[134274,134274,12.22],[134275,134275,9.53],[134276,134276,11],[134277,134277,9.49],[134278,134278,9.25],[134279,134279,7.82],[134280,134280,11.11],[134281,134281,13.44],[134282,134282,17.57],[134283,134283,13.1],[134284,134284,9.31],[134285,134285,11],[134286,134287,8.66],[134288,134288,8.88],[134289,134289,11],[134290,134291,8.52],[134292,134292,8.56],[134293,134293,6.31],[134294,134294,9.34],[134295,134295,7.13],[134296,134296,10.96],[134297,134297,8.52],[134298,134298,8.77],[134299,134299,9.27],[134300,134300,8.52],[134301,134301,15.17],[134302,134302,10.63],[134303,134303,8.96],[134304,134304,7.16],[134305,134306,8.45],[134307,134307,9.5],[134308,134308,6.84],[134309,134311,8.41],[134312,134312,7.82],[134313,134313,11],[134314,134315,8.71],[134316,134316,8.8],[134317,134317,8.85],[134318,134318,12.72],[134319,134319,14.7],[134320,134320,7.16],[134321,134321,9.82],[134322,134322,8.35],[134323,134323,7.81],[134324,134324,11],[134325,134325,8.73],[134326,134326,6.93],[134327,134327,8.81],[134328,134328,7.8],[134329,134329,8.81],[134330,134331,11],[134332,134332,6.17],[134333,134333,4.91],[134334,134334,11.11],[134335,134335,9.77],[134336,134336,14.26],[134337,134337,10.17],[134338,134338,14.38],[134339,134339,7.52],[134340,134340,11.6],[134341,134341,11],[134342,134342,6.17],[134343,134343,10.66],[134344,134344,8.18],[134345,134345,11],[134346,134346,14.38],[134347,134347,18.86],[134348,134348,10.9],[134349,134349,9.61],[134350,134356,11],[134357,134357,10.66],[134358,134358,8.18],[134359,134365,11],[134366,134366,9.56],[134367,134367,11],[134368,134368,17.27],[134369,134369,14.15],[134370,134371,6.97],[134372,134373,11],[134374,134383,7.57],[134384,134384,11],[134385,134385,5.84],[134386,134386,8.27],[134387,134400,11],[134401,134401,0],[134402,134402,4.24],[134403,134403,3.11],[134404,134404,11],[134405,134405,13.63],[134406,134406,15.09],[134407,134407,9.89],[134408,134408,17.93],[134409,134409,6.99],[134410,134410,14.97],[134411,134411,8.84],[134412,134412,10.98],[134413,134413,11],[134414,134415,12.25],[134416,134416,17.96],[134417,134417,11],[134418,134418,6.99],[134419,134419,11.54],[134420,134420,14.87],[134421,134421,9.73],[134422,134422,8.79],[134423,134423,8.27],[134424,134424,13.26],[134425,134425,10.66],[134426,134426,9.13],[134427,134427,12.74],[134428,134428,8.77],[134429,134429,15.9],[134430,134430,13.83],[134431,134431,5.69],[134432,134432,6.38],[134433,134433,12.03],[134434,134434,12.39],[134435,134435,13.66],[134436,134436,9.59],[134437,134437,8.1],[134438,134438,6.11],[134439,134440,9.24],[134441,134441,9.98],[134442,134442,7.84],[134443,134443,11.29],[134444,134444,12.58],[134445,134445,6.37],[134446,134446,6.38],[134447,134447,9.7],[134448,134448,6.72],[134449,134449,6.28],[134450,134450,8.44],[134451,134451,7.15],[134452,134452,6.33],[134453,134453,8.79],[134454,134454,9.45],[134455,134455,11.12],[134456,134456,12.03],[134457,134457,12.12],[134458,134458,8.1],[134459,134460,11],[134461,134461,4.19],[134462,134462,10.79],[134463,134463,8.91],[134464,134464,8.82],[134465,134465,9.56],[134466,134466,9.62],[134467,134467,10.17],[134468,134468,10.22],[134469,134469,11],[134470,134470,12.57],[134471,134471,11.62],[134472,134472,18.33],[134473,134473,11],[134474,134474,17.1],[134475,134475,16.44],[134476,134476,14.63],[134477,134477,6.58],[134478,134478,1.9],[134479,134486,11],[134487,134487,14.63],[134488,134494,11],[134495,134495,13.08],[134496,134496,8.79],[134497,134497,12.11],[134498,134498,7.61],[134499,134499,8.27],[134500,134501,11],[134502,134502,6.38],[134503,134503,8.6],[134504,134504,8.79],[134505,134505,10.85],[134506,134506,6.8],[134507,134507,9.7],[134508,134508,13.26],[134509,134509,4.84],[134510,134510,8.79],[134511,134511,10.14],[134512,134512,9.24],[134513,134513,9.64],[134514,134514,13.14],[134515,134515,7.55],[134516,134516,8.24],[134517,134517,11.1],[134518,134520,11],[134521,134521,11.61],[134522,134522,14.75],[134523,134523,10.14],[134524,134524,6.8],[134525,134525,10.65],[134526,134526,9.36],[134527,134527,10.61],[134528,134529,11],[134530,134530,4.57],[134531,134531,3.06],[134532,134532,11],[134533,134533,6.26],[134534,134534,9.17],[134535,134535,9.05],[134536,134536,9.07],[134537,134537,6.31],[134538,134538,6.17],[134539,134539,6.54],[134540,134540,10.84],[134541,134541,10.66],[134542,134542,14.42],[134543,134543,7.93],[134544,134544,12.34],[134545,134545,7.08],[134546,134546,7.13],[134547,134547,11.57],[134548,134548,7.21],[134549,134549,7.18],[134550,134550,11.81],[134551,134553,11],[134554,134554,8.17],[134555,134555,7.73],[134556,134556,7.23],[134557,134557,6.47],[134558,134558,7.33],[134559,134559,8.71],[134560,134560,6.89],[134561,134561,6.17],[134562,134562,6.04],[134563,134563,13.02],[134564,134564,11.81],[134565,134565,10.82],[134566,134566,7.15],[134567,134567,6.54],[134568,134568,6.89],[134569,134569,7.44],[134570,134570,7.1],[134571,134571,9.79],[134572,134572,8.92],[134573,134573,7.62],[134574,134574,6.58],[134575,134575,5.63],[134576,134576,7.23],[134577,134577,7.49],[134578,134578,11],[134579,134579,7.19],[134580,134580,6.04],[134581,134581,7.07],[134582,134582,7.42],[134583,134583,8.52],[134584,134584,7.4],[134585,134585,7.23],[134586,134586,6.8],[134587,134587,6.01],[134588,134588,11],[134589,134589,6.79],[134590,134591,11],[134592,134592,6.75],[134593,134593,7.57],[134594,134594,6],[134595,134595,7.09],[134596,134596,8.16],[134597,134597,7.39],[134598,134598,6.89],[134599,134601,11],[134602,134602,6.65],[134603,134606,11],[134607,134607,9.42],[134608,134608,9.02],[134609,134609,9.11],[134610,134612,6.38],[134613,134613,11],[134614,134614,6.38],[134615,134615,11],[134616,134616,10.34],[134617,134617,11.58],[134618,134618,12.05],[134619,134619,17.23],[134620,134620,14.67],[134621,134621,14.34],[134622,134622,15.97],[134623,134623,11.03],[134624,134641,11],[134642,134642,14.21],[134643,134643,4.55],[134644,134644,12.07],[134645,134655,11],[134656,134656,2.14],[134657,134657,6.6],[134658,134658,6.29],[134659,134659,6.26],[134660,134660,7.03],[134661,134661,6.92],[134662,134662,6.99],[134663,134663,5.24],[134664,134664,5.81],[134665,134665,6.71],[134666,134666,6.45],[134667,134667,6.5],[134668,134668,9],[134669,134669,8.96],[134670,134671,7.27],[134672,134672,5.86],[134673,134673,7.61],[134674,134674,9.37],[134675,134675,9],[134676,134676,6.94],[134677,134677,6.92],[134678,134678,6.6],[134679,134679,6.94],[134680,134680,6.07],[134681,134681,6.81],[134682,134683,7.16],[134684,134685,6.54],[134686,134686,7.39],[134687,134687,7.44],[134688,134688,7.31],[134689,134689,6.94],[134690,134690,6.72],[134691,134691,5.26],[134692,134692,6.58],[134693,134693,6.41],[134694,134694,7.31],[134695,134695,5.62],[134696,134696,6.87],[134697,134697,7.12],[134698,134698,6.56],[134699,134699,6.95],[134700,134700,7.39],[134701,134701,6.36],[134702,134702,6.33],[134703,134703,6.76],[134704,134704,4.8],[134705,134705,5.59],[134706,134706,5.57],[134707,134707,11.26],[134708,134714,5.59],[134715,134718,11],[134719,134719,7.54],[134720,134720,3.47],[134721,134721,6.38],[134722,134722,5.62],[134723,134723,6.1],[134724,134724,4.64],[134725,134725,5.68],[134726,134726,6.66],[134727,134734,5.59],[134735,134735,8.05],[134736,134736,6.43],[134737,134737,6.76],[134738,134738,7.21],[134739,134739,7.46],[134740,134740,6.77],[134741,134741,6.63],[134742,134742,6.37],[134743,134743,8.39],[134744,134744,6.82],[134745,134745,7.35],[134746,134746,8.53],[134747,134747,14.01],[134748,134784,11],[134785,134785,6.8],[134786,134786,5.95],[134787,134787,11],[134788,134788,6.24],[134789,134790,11],[134791,134791,5.62],[134792,134792,6.12],[134793,134793,11],[134794,134794,6.04],[134795,134796,11],[134797,134797,6.24],[134798,134803,11],[134804,134804,6.41],[134805,134805,6.62],[134806,134806,6.85],[134807,134807,7.05],[134808,134808,11],[134809,134809,6.75],[134810,134810,5.8],[134811,134811,5.84],[134812,134812,7.42],[134813,134813,7.34],[134814,134814,7.32],[134815,134815,7.36],[134816,134816,11],[134817,134817,6.8],[134818,134818,6.15],[134819,134819,5.95],[134820,134820,11],[134821,134821,6.11],[134822,134822,11],[134823,134823,5.89],[134824,134825,11],[134826,134826,6.11],[134827,134827,8.45],[134828,134828,11],[134829,134829,6.11],[134830,134830,6.06],[134831,134831,5.81],[134832,134832,5.65],[134833,134833,0],[134834,134834,4.73],[134835,134841,0],[134842,134842,11],[134843,134844,0],[134845,134845,5],[134846,134847,11],[134848,134848,3.75],[134849,134849,6.5],[134850,134850,3.71],[134851,134851,3.74],[134852,134852,3.66],[134853,134853,11],[134854,134854,6.46],[134855,134855,11],[134856,134859,0],[134860,134860,3.58],[134861,134861,0],[134862,134863,11],[134864,134864,6.14],[134865,134865,5.59],[134866,134866,5.48],[134867,134867,6.33],[134868,134868,5.62],[134869,134869,5.8],[134870,134870,6.85],[134871,134871,6.91],[134872,134872,7.32],[134873,134873,6.9],[134874,134875,11],[134876,134877,11.01],[134878,134911,11],[134912,134912,6.85],[134913,134913,5.43],[134914,134915,8.46],[134916,134916,12.73],[134917,134917,6.57],[134918,134918,12.73],[134919,134919,16.36],[134920,134920,4.23],[134921,134921,6.35],[134922,134922,7.09],[134923,134924,1.76],[134925,134925,2.69],[134926,134926,5.04],[134927,134928,2.69],[134929,134929,3.45],[134930,134930,11.57],[134931,134931,6.55],[134932,134932,3.95],[134933,134933,7.13],[134934,134934,5.19],[134935,134935,8.28],[134936,134937,0],[134938,134938,3.22],[134939,134940,5.53],[134941,134941,3.35],[134942,134942,5.48],[134943,134943,5.84],[134944,134945,3.75],[134946,134946,5.97],[134947,134947,5.68],[134948,134948,7.61],[134949,134949,5.48],[134950,134951,6.26],[134952,134952,5.2],[134953,134953,5.58],[134954,134954,5.6],[134955,134955,5.97],[134956,134956,5.68],[134957,134957,7.61],[134958,134958,5.48],[134959,134960,6.26],[134961,134961,5.55],[134962,134962,5.58],[134963,134963,5.47],[134964,134964,5.78],[134965,134965,0],[134966,134966,5.47],[134967,134967,0],[134968,134968,6.02],[134969,134969,0],[134970,134970,14.93],[134971,134971,14.63],[134972,134972,5.37],[134973,134973,5.41],[134974,134974,3.14],[134975,134975,4.71],[134976,134978,5.68],[134979,134979,5.58],[134980,134980,5.2],[134981,134981,5.88],[134982,134982,5.68],[134983,134983,5.2],[134984,134984,11],[134985,134985,5.1],[134986,134988,5.2],[134989,134989,5.58],[134990,134993,5.2],[134994,134994,5.58],[134995,134995,5.2],[134996,134998,5.68],[134999,134999,5.58],[135000,135000,5.68],[135001,135001,5.88],[135002,135002,5.68],[135003,135003,5.2],[135004,135004,5.58],[135005,135006,5.2],[135007,135007,5.39],[135008,135008,5.2],[135009,135009,6.16],[135010,135010,5.39],[135011,135011,5.88],[135012,135014,5.68],[135015,135015,5.2],[135016,135016,6.65],[135017,135017,5.58],[135018,135018,5.39],[135019,135019,5.76],[135020,135020,5.83],[135021,135024,11],[135025,135025,5.98],[135026,135026,0],[135027,135027,5.98],[135028,135028,6.08],[135029,135029,12.06],[135030,135030,5.58],[135031,135031,11.56],[135032,135032,5.58],[135033,135033,11.56],[135034,135038,0],[135039,135039,5.08],[135040,135040,0],[135041,135041,5.98],[135042,135044,0],[135045,135045,5.67],[135046,135048,0],[135049,135049,5.78],[135050,135050,5.24],[135051,135051,5.75],[135052,135055,11],[135056,135063,5.58],[135064,135064,11],[135065,135100,5.58],[135101,135101,11],[135102,135102,5.62],[135103,135103,5.64],[135104,135104,6.38],[135105,135105,4.32],[135106,135106,5.39],[135107,135107,6.45],[135108,135108,4.55],[135109,135109,3.58],[135110,135110,0],[135111,135111,7.12],[135112,135112,3.91],[135113,135113,6.11],[135114,135114,6.58],[135115,135115,6.39],[135116,135116,6.78],[135117,135117,11],[135118,135118,6.95],[135119,135119,5.48],[135120,135120,22.13],[135121,135121,5.23],[135122,135122,2.31],[135123,135123,12.68],[135124,135124,5.35],[135125,135125,7.02],[135126,135126,7.22],[135127,135127,6.7],[135128,135128,6.98],[135129,135167,11],[135168,135168,12.36],[135169,135169,7.44],[135170,135170,7.35],[135171,135171,12.38],[135172,135172,7.15],[135173,135173,7.41],[135174,135174,12.4],[135175,135175,7.52],[135176,135176,9.56],[135177,135177,7.27],[135178,135178,12.2],[135179,135179,7.33],[135180,135180,7.25],[135181,135181,7.33],[135182,135182,7.45],[135183,135183,13.8],[135184,135184,12.36],[135185,135185,12.38],[135186,135186,7.04],[135187,135187,7.41],[135188,135188,6.27],[135189,135189,7.44],[135190,135190,7.42],[135191,135191,7.44],[135192,135192,12.36],[135193,135193,7.44],[135194,135194,12.39],[135195,135195,7.58],[135196,135196,12.39],[135197,135197,7.41],[135198,135198,12.4],[135199,135199,12.36],[135200,135200,7.33],[135201,135201,11.75],[135202,135202,12.35],[135203,135203,12.1],[135204,135204,14.77],[135205,135206,7.27],[135207,135207,6.94],[135208,135208,7.56],[135209,135209,15.06],[135210,135210,26.97],[135211,135211,9.47],[135212,135212,11.54],[135213,135216,6.53],[135217,135217,13.33],[135218,135223,6.53],[135224,135224,10.34],[135225,135226,6.53],[135227,135227,9.36],[135228,135228,9.05],[135229,135230,6.53],[135231,135231,17.42],[135232,135232,7.17],[135233,135233,6.85],[135234,135234,7.42],[135235,135236,6.8],[135237,135237,7.42],[135238,135238,7.92],[135239,135239,7.11],[135240,135240,7.17],[135241,135241,7.92],[135242,135242,2.97],[135243,135243,5.08],[135244,135244,7.33],[135245,135245,9.81],[135246,135246,7.25],[135247,135247,12.51],[135248,135248,7.35],[135249,135249,7.44],[135250,135251,7.27],[135252,135252,7.26],[135253,135253,7.16],[135254,135254,10.59],[135255,135255,10.64],[135256,135257,6.53],[135258,135258,6.8],[135259,135259,9.56],[135260,135260,7.36],[135261,135261,7.25],[135262,135264,6.53],[135265,135265,7.58],[135266,135266,10.23],[135267,135267,13.8],[135268,135268,10.94],[135269,135269,7.34],[135270,135270,7.18],[135271,135271,11.31],[135272,135272,10.23],[135273,135273,11.19],[135274,135276,11.31],[135277,135277,11.19],[135278,135278,13.78],[135279,135279,12.12],[135280,135280,12.14],[135281,135284,6.53],[135285,135285,7.34],[135286,135286,7.39],[135287,135287,7.41],[135288,135288,12.38],[135289,135289,12.39],[135290,135290,12.14],[135291,135291,12.39],[135292,135292,12.42],[135293,135293,12.41],[135294,135294,12.09],[135295,135295,7.45],[135296,135296,12.36],[135297,135297,7.18],[135298,135298,6.53],[135299,135299,10.23],[135300,135300,13.05],[135301,135302,6.53],[135303,135303,10.35],[135304,135305,10.34],[135306,135306,11.31],[135307,135307,10.34],[135308,135308,13.73],[135309,135309,6.53],[135310,135310,7.4],[135311,135311,10.34],[135312,135312,8.37],[135313,135313,7.11],[135314,135314,7.46],[135315,135315,7.92],[135316,135316,8.07],[135317,135318,7.9],[135319,135319,6.1],[135320,135321,7.18],[135322,135322,10.34],[135323,135323,10.35],[135324,135324,11.31],[135325,135325,6.53],[135326,135326,3.7],[135327,135327,10.49],[135328,135328,7.28],[135329,135329,7.44],[135330,135330,7.79],[135331,135331,7.65],[135332,135332,6.7],[135333,135333,8.69],[135334,135334,7.3],[135335,135335,8.64],[135336,135336,6.16],[135337,135337,6.97],[135338,135338,8.6],[135339,135339,7.71],[135340,135340,6.92],[135341,135341,7.5],[135342,135342,7.76],[135343,135343,7.61],[135344,135344,8.07],[135345,135345,6.77],[135346,135346,6.51],[135347,135347,7.48],[135348,135348,7.47],[135349,135349,7.76],[135350,135350,7.07],[135351,135352,6.85],[135353,135353,6.92],[135354,135354,6.96],[135355,135355,8.47],[135356,135356,6.51],[135357,135357,7.28],[135358,135358,6.92],[135359,135359,7.39],[135360,135360,8.08],[135361,135361,6.34],[135362,135362,6.67],[135363,135363,6.65],[135364,135364,7.43],[135365,135365,8.71],[135366,135375,11],[135376,135376,5.7],[135377,135377,6.26],[135378,135378,5.8],[135379,135379,9.14],[135380,135380,5.93],[135381,135381,5.88],[135382,135382,6.83],[135383,135383,9.32],[135384,135384,5.92],[135385,135385,5.74],[135386,135386,10.69],[135387,135387,6.34],[135388,135388,6.35],[135389,135389,8.09],[135390,135390,5.88],[135391,135391,6.13],[135392,135392,8.13],[135393,135393,6.07],[135394,135394,7.29],[135395,135395,6.13],[135396,135396,8.8],[135397,135397,5.89],[135398,135398,8.09],[135399,135399,6.06],[135400,135400,6.38],[135401,135401,6.23],[135402,135402,6.47],[135403,135403,6.33],[135404,135404,6.38],[135405,135405,6.62],[135406,135406,6.33],[135407,135407,5.7],[135408,135408,5.83],[135409,135409,6.52],[135410,135410,5.83],[135411,135412,5.97],[135413,135413,6.5],[135414,135414,8.07],[135415,135415,5.7],[135416,135416,6.12],[135417,135417,5.8],[135418,135418,5.7],[135419,135419,5.91],[135420,135420,4.07],[135421,135421,6.35],[135422,135422,5.92],[135423,135423,6.26],[135424,135442,9.51],[135443,135518,11],[135519,135520,0],[135521,135541,9.51],[135542,135581,11],[135582,135582,9.51],[135583,135585,11],[135586,135586,9.51],[135587,135591,11],[135592,135618,9.51],[135619,135679,11],[135680,135680,7.64],[135681,135681,9.91],[135682,135682,7.09],[135683,135683,7.31],[135684,135684,7.19],[135685,135685,8.01],[135686,135686,9.87],[135687,135687,11.98],[135688,135688,7.12],[135689,135689,9.14],[135690,135690,9.13],[135691,135691,7.12],[135692,135692,9.42],[135693,135693,8.06],[135694,135694,11.59],[135695,135695,9.47],[135696,135696,11.23],[135697,135697,13.4],[135698,135698,13.39],[135699,135699,11.23],[135700,135700,13.33],[135701,135701,11.23],[135702,135702,11.28],[135703,135703,13.47],[135704,135704,11.96],[135705,135705,14.82],[135706,135706,12.63],[135707,135707,11.96],[135708,135708,12.6],[135709,135710,11.96],[135711,135711,12.62],[135712,135712,10.87],[135713,135713,13.46],[135714,135714,11.1],[135715,135715,10.86],[135716,135716,11.12],[135717,135717,12.18],[135718,135718,10.71],[135719,135719,11.09],[135720,135720,6.74],[135721,135721,7.81],[135722,135722,7.61],[135723,135723,9.92],[135724,135724,9.16],[135725,135725,6.85],[135726,135726,9],[135727,135727,9.92],[135728,135728,7.43],[135729,135729,9.68],[135730,135730,9.65],[135731,135731,7.43],[135732,135732,9.59],[135733,135734,7.43],[135735,135735,9.73],[135736,135736,8.37],[135737,135737,10.11],[135738,135738,10.08],[135739,135739,8.37],[135740,135740,10.01],[135741,135741,8.8],[135742,135742,8.37],[135743,135743,10.16],[135744,135751,9.36],[135752,135752,10.67],[135753,135753,11],[135754,135754,13.47],[135755,135756,9.36],[135757,135757,13.49],[135758,135759,11],[135760,135764,9.68],[135765,135765,10.66],[135766,135766,9.68],[135767,135767,11],[135768,135768,10.85],[135769,135769,11],[135770,135770,13.65],[135771,135772,9.68],[135773,135773,11.73],[135774,135775,11],[135776,135776,7.84],[135777,135777,9.9],[135778,135778,9.87],[135779,135779,7.84],[135780,135780,9.81],[135781,135781,10.19],[135782,135782,7.84],[135783,135783,9.95],[135784,135784,8.37],[135785,135785,10.11],[135786,135786,10.08],[135787,135787,8.37],[135788,135788,10.01],[135789,135789,10.41],[135790,135790,8.37],[135791,135791,10.16],[135792,135794,8.53],[135795,135795,8.6],[135796,135796,8.64],[135797,135800,8.53],[135801,135801,8.55],[135802,135802,8.53],[135803,135803,8.6],[135804,135804,8.53],[135805,135805,10.04],[135806,135806,8.7],[135807,135807,8.53],[135808,135808,7.63],[135809,135809,9.52],[135810,135810,8.99],[135811,135811,7.63],[135812,135812,8.87],[135813,135813,7.36],[135814,135815,11.25],[135816,135816,11.39],[135817,135817,11],[135818,135818,10.8],[135819,135819,8.34],[135820,135820,8.87],[135821,135821,10.79],[135822,135823,11],[135824,135824,5.84],[135825,135825,7.73],[135826,135826,7.2],[135827,135827,6.96],[135828,135828,7.08],[135829,135829,7.52],[135830,135830,8.7],[135831,135831,8.1],[135832,135832,8.32],[135833,135833,9.6],[135834,135834,9.06],[135835,135835,8.32],[135836,135836,8.94],[135837,135837,8.32],[135838,135838,10.16],[135839,135839,8.6],[135840,135840,7.03],[135841,135841,9.5],[135842,135842,9.49],[135843,135843,7.03],[135844,135844,9.43],[135845,135845,7.21],[135846,135846,7.06],[135847,135847,8.74],[135848,135848,7.92],[135849,135849,10.17],[135850,135850,10.14],[135851,135851,7.92],[135852,135852,10.08],[135853,135854,7.92],[135855,135855,9.87],[135856,135856,12.3],[135857,135857,11],[135858,135858,11.44],[135859,135859,9.55],[135860,135860,10.08],[135861,135861,11.44],[135862,135863,11],[135864,135864,9.84],[135865,135865,12.09],[135866,135866,12.06],[135867,135867,9.84],[135868,135868,11.99],[135869,135870,9.84],[135871,135871,11],[135872,135872,14.22],[135873,135873,11],[135874,135874,13.36],[135875,135875,12.14],[135876,135876,11.99],[135877,135877,13.36],[135878,135879,11],[135880,135880,10.26],[135881,135881,12.15],[135882,135884,10.26],[135885,135885,12.91],[135886,135886,10.26],[135887,135887,12.86],[135888,135888,7.41],[135889,135889,9.85],[135890,135890,9.54],[135891,135891,7.16],[135892,135892,9.52],[135893,135893,7.2],[135894,135894,7.77],[135895,135895,11],[135896,135896,8.15],[135897,135897,10.05],[135898,135898,10.06],[135899,135899,8.15],[135900,135900,10.03],[135901,135901,9.89],[135902,135902,8.15],[135903,135903,10.18],[135904,135908,12.29],[135909,135909,13.66],[135910,135911,12.29],[135912,135912,6.39],[135913,135913,7.99],[135914,135914,9.15],[135915,135915,6.54],[135916,135916,10.37],[135917,135917,7.7],[135918,135918,8.99],[135919,135919,11.05],[135920,135920,8.43],[135921,135921,11.26],[135922,135922,10.62],[135923,135923,8.24],[135924,135924,10.05],[135925,135925,9.25],[135926,135926,9.13],[135927,135927,10.64],[135928,135928,8.37],[135929,135929,10.86],[135930,135930,10.22],[135931,135931,7.84],[135932,135932,10],[135933,135933,9.9],[135934,135934,9.13],[135935,135935,10.24],[135936,135936,8.54],[135937,135937,11.38],[135938,135938,10.73],[135939,135939,8.35],[135940,135940,10.51],[135941,135941,10.07],[135942,135942,9.17],[135943,135943,10.75],[135944,135944,6.42],[135945,135945,9.17],[135946,135946,6.67],[135947,135947,7.01],[135948,135948,6.61],[135949,135949,8.84],[135950,135950,6.42],[135951,135951,7.9],[135952,135952,11.3],[135953,135953,11],[135954,135954,10.45],[135955,135955,6.88],[135956,135956,8.08],[135957,135957,10.45],[135958,135959,11],[135960,135960,8.1],[135961,135961,9.96],[135962,135964,8.1],[135965,135965,9.68],[135966,135966,8.7],[135967,135967,8.1],[135968,135968,12.14],[135969,135969,14.26],[135970,135970,14.25],[135971,135971,12.09],[135972,135972,14.2],[135973,135973,11.77],[135974,135974,12.14],[135975,135975,14.28],[135976,135976,14.97],[135977,135977,15.2],[135978,135978,15.14],[135979,135979,14.97],[135980,135980,18.26],[135981,135981,14.52],[135982,135982,14.73],[135983,135983,15.22],[135984,135984,7.33],[135985,135985,9.66],[135986,135986,9.54],[135987,135987,7.19],[135988,135988,9.49],[135989,135989,9.34],[135990,135990,7.39],[135991,135991,9.48],[135992,135992,7.6],[135993,135993,9.82],[135994,135994,9.7],[135995,135995,7.35],[135996,135996,9.65],[135997,135997,9.52],[135998,135998,7.65],[135999,135999,9.53],[136000,136000,7.41],[136001,136001,9.85],[136002,136002,7.6],[136003,136003,6.75],[136004,136004,7.62],[136005,136005,7.2],[136006,136006,7.72],[136007,136007,9.14],[136008,136008,9.41],[136009,136009,9.52],[136010,136010,10.2],[136011,136011,9.52],[136012,136012,11.21],[136013,136013,9.25],[136014,136014,9.43],[136015,136015,9.25],[136016,136016,8.53],[136017,136017,8.55],[136018,136018,8.53],[136019,136019,8.6],[136020,136023,8.53],[136024,136024,8.86],[136025,136025,12.6],[136026,136026,10.34],[136027,136030,11],[136031,136031,7.84],[136032,136032,10.01],[136033,136033,3.3],[136034,136034,6.79],[136035,136037,3.94],[136038,136038,5.47],[136039,136039,3.3],[136040,136040,10.28],[136041,136041,6.11],[136042,136042,5.56],[136043,136043,5.9],[136044,136044,6.05],[136045,136045,7.2],[136046,136046,6.63],[136047,136047,6.73],[136048,136048,7.14],[136049,136049,6.19],[136050,136050,4.59],[136051,136051,8.21],[136052,136052,8.15],[136053,136053,9.6],[136054,136054,6.05],[136055,136055,7.14],[136056,136056,8.66],[136057,136057,9.02],[136058,136058,5.77],[136059,136059,6.2],[136060,136060,11.41],[136061,136063,11],[136064,136064,17],[136065,136065,15.55],[136066,136066,12.6],[136067,136067,16.76],[136068,136068,12.08],[136069,136069,11.25],[136070,136070,9.81],[136071,136071,14.44],[136072,136073,10.85],[136074,136074,11.84],[136075,136075,13.59],[136076,136076,10.74],[136077,136077,9.69],[136078,136078,8.64],[136079,136079,11.81],[136080,136080,3.19],[136081,136081,6.05],[136082,136083,3.19],[136084,136084,6.05],[136085,136085,7.55],[136086,136086,5.05],[136087,136087,9.85],[136088,136088,11.44],[136089,136089,5.56],[136090,136095,11],[136096,136096,7.98],[136097,136097,7.56],[136098,136098,6.45],[136099,136099,8.3],[136100,136100,9.87],[136101,136101,3.45],[136102,136102,7.7],[136103,136103,9.16],[136104,136104,5.63],[136105,136105,7],[136106,136106,7.39],[136107,136107,5.82],[136108,136108,6.5],[136109,136109,8.54],[136110,136110,5.87],[136111,136111,8.27],[136112,136112,5.87],[136113,136113,5.91],[136114,136114,9.1],[136115,136115,10.03],[136116,136116,7.75],[136117,136117,6],[136118,136118,7.87],[136119,136119,9.47],[136120,136120,5.83],[136121,136121,9.38],[136122,136122,10.53],[136123,136123,8.25],[136124,136124,5.63],[136125,136125,7.71],[136126,136126,8.02],[136127,136127,6.98],[136128,136128,7.77],[136129,136129,8.34],[136130,136130,6.93],[136131,136131,6.66],[136132,136132,6.1],[136133,136133,10.58],[136134,136134,6.52],[136135,136135,9],[136136,136136,7.86],[136137,136137,11.97],[136138,136138,9],[136139,136139,6.91],[136140,136140,8.06],[136141,136141,9.98],[136142,136143,7.21],[136144,136144,5.65],[136145,136145,7.58],[136146,136146,7.56],[136147,136147,6.14],[136148,136148,10.37],[136149,136149,7.81],[136150,136150,7.67],[136151,136151,6.53],[136152,136152,6.47],[136153,136153,7.59],[136154,136154,7.21],[136155,136155,9.66],[136156,136156,8.91],[136157,136157,6.27],[136158,136158,5.91],[136159,136159,7.5],[136160,136160,7.72],[136161,136161,9.36],[136162,136162,7.09],[136163,136163,7.65],[136164,136164,7.59],[136165,136165,8.72],[136166,136166,7.69],[136167,136167,5.58],[136168,136168,9.71],[136169,136169,8.52],[136170,136170,10.08],[136171,136171,8.02],[136172,136172,9.37],[136173,136173,7.3],[136174,136174,7.1],[136175,136175,9],[136176,136176,7.17],[136177,136177,8.28],[136178,136178,7.11],[136179,136179,9.52],[136180,136180,7.72],[136181,136181,7.65],[136182,136183,10.15],[136184,136184,5.95],[136185,136185,6.88],[136186,136186,5.9],[136187,136187,7.9],[136188,136188,6.41],[136189,136189,6.35],[136190,136190,9.03],[136191,136191,10.15],[136192,136192,11],[136193,136196,8.72],[136197,136201,8.2],[136202,136203,8.23],[136204,136204,8.83],[136205,136206,8.82],[136207,136208,8.83],[136209,136209,8.82],[136210,136210,9.72],[136211,136211,10.28],[136212,136212,9.72],[136213,136213,10.28],[136214,136214,8.2],[136215,136215,10.27],[136216,136216,9.72],[136217,136217,10.28],[136218,136218,9.72],[136219,136219,8.2],[136220,136220,7.32],[136221,136221,6.5],[136222,136222,5.45],[136223,136224,3.51],[136225,136226,5.05],[136227,136227,3.75],[136228,136228,5.3],[136229,136229,5.49],[136230,136230,3.5],[136231,136231,2.29],[136232,136232,4.4],[136233,136233,4.54],[136234,136234,4.39],[136235,136235,12.21],[136236,136236,9.79],[136237,136237,10.53],[136238,136238,11.53],[136239,136239,9.14],[136240,136242,9.12],[136243,136247,8.35],[136248,136249,8.36],[136250,136252,9.23],[136253,136253,9.38],[136254,136254,9.23],[136255,136255,9.14],[136256,136256,9.47],[136257,136257,10.16],[136258,136258,9.47],[136259,136259,10.16],[136260,136260,10.23],[136261,136261,9.47],[136262,136262,10.29],[136263,136263,9.47],[136264,136264,8.36],[136265,136265,4.61],[136266,136266,1.53],[136267,136267,4.05],[136268,136271,8.98],[136272,136278,7.72],[136279,136279,10.65],[136280,136280,10.33],[136281,136281,10.32],[136282,136282,10.66],[136283,136283,10.32],[136284,136284,10.66],[136285,136285,9.06],[136286,136286,9.24],[136287,136287,9.06],[136288,136288,9.24],[136289,136289,9.25],[136290,136290,9.06],[136291,136291,9.24],[136292,136292,9.06],[136293,136293,9.25],[136294,136294,3.75],[136295,136296,10.54],[136297,136298,9.6],[136299,136307,6.88],[136308,136309,8.41],[136310,136310,8.1],[136311,136311,8.72],[136312,136312,8.1],[136313,136313,8.72],[136314,136321,8.41],[136322,136322,8.42],[136323,136324,4.25],[136325,136325,8.52],[136326,136326,8.84],[136327,136328,8.65],[136329,136337,7.16],[136338,136352,8.69],[136353,136354,4.11],[136355,136355,7.07],[136356,136363,6.84],[136364,136364,7.96],[136365,136365,8.6],[136366,136366,8.37],[136367,136367,7.73],[136368,136368,8.37],[136369,136370,7.73],[136371,136371,8.37],[136372,136372,7.73],[136373,136374,8.37],[136375,136375,7.73],[136376,136376,8.37],[136377,136377,7.73],[136378,136378,8.24],[136379,136379,3.83],[136380,136380,3.75],[136381,136381,3.83],[136382,136382,4.74],[136383,136383,6.66],[136384,136392,10.09],[136393,136395,11.62],[136396,136396,10.09],[136397,136397,11.62],[136398,136399,10.09],[136400,136400,5.95],[136401,136401,5.05],[136402,136402,5.95],[136403,136411,9.6],[136412,136413,11.13],[136414,136414,10.89],[136415,136415,11.38],[136416,136416,10.89],[136417,136417,11.38],[136418,136418,9.6],[136419,136419,11.14],[136420,136420,9.6],[136421,136422,11.13],[136423,136423,9.72],[136424,136424,10.89],[136425,136425,9.72],[136426,136426,5.48],[136427,136427,4.9],[136428,136428,7.35],[136429,136437,6.46],[136438,136438,7.72],[136439,136439,7.99],[136440,136440,7.98],[136441,136441,7.71],[136442,136442,8.14],[136443,136443,7.71],[136444,136444,6.97],[136445,136445,8.5],[136446,136446,6.97],[136447,136447,8.5],[136448,136448,8.13],[136449,136449,8.28],[136450,136450,8.64],[136451,136451,7.82],[136452,136452,7.99],[136453,136453,3.93],[136454,136454,4.5],[136455,136455,3.93],[136456,136456,5.48],[136457,136458,3.92],[136459,136459,3.93],[136460,136460,12.29],[136461,136461,11.79],[136462,136462,10.81],[136463,136463,11.09],[136464,136466,9.47],[136467,136470,7.46],[136471,136476,11],[136477,136484,8.99],[136485,136485,5.71],[136486,136494,6.36],[136495,136500,7.89],[136501,136501,8.21],[136502,136502,7.89],[136503,136503,8.21],[136504,136509,7.89],[136510,136510,3.81],[136511,136511,5.1],[136512,136513,3.72],[136514,136519,10.36],[136520,136525,6.77],[136526,136527,8.3],[136528,136528,3.99],[136529,136529,4.9],[136530,136530,7.35],[136531,136534,8.89],[136535,136538,9.45],[136539,136539,10.98],[136540,136540,10.87],[136541,136541,5.37],[136542,136547,9.21],[136548,136551,8.24],[136552,136553,9.78],[136554,136554,5.03],[136555,136556,8.98],[136557,136558,7.72],[136559,136559,6.61],[136560,136561,8.98],[136562,136563,7.72],[136564,136566,8.59],[136567,136570,8.44],[136571,136571,5.42],[136572,136572,7.84],[136573,136573,3.66],[136574,136580,10.87],[136581,136581,8.24],[136582,136585,6.88],[136586,136589,8.87],[136590,136592,13.16],[136593,136594,10.54],[136595,136596,13.16],[136597,136597,6],[136598,136598,9.28],[136599,136602,6.88],[136603,136606,10.09],[136607,136607,5.95],[136608,136613,9.6],[136614,136614,5.48],[136615,136621,6.36],[136622,136622,3.81],[136623,136623,6.26],[136624,136627,5.58],[136628,136631,6.33],[136632,136643,7.96],[136644,136645,9.14],[136646,136649,8.35],[136650,136651,9.14],[136652,136655,8.35],[136656,136657,9.14],[136658,136661,8.35],[136662,136663,9.14],[136664,136667,8.35],[136668,136669,8.82],[136670,136673,7.47],[136674,136675,8.82],[136676,136679,7.14],[136680,136681,9.04],[136682,136685,7.59],[136686,136686,4.39],[136687,136688,10.89],[136689,136692,6.24],[136693,136694,10.89],[136695,136698,7.3],[136699,136700,10.89],[136701,136704,7.3],[136705,136705,5.23],[136706,136707,7.16],[136708,136711,9.79],[136712,136713,10.89],[136714,136717,6.24],[136718,136719,9.04],[136720,136723,7.52],[136724,136726,7.02],[136727,136731,9.97],[136732,136733,7.43],[136734,136737,9.98],[136738,136739,10.26],[136740,136743,6.88],[136744,136745,10.36],[136746,136749,7.1],[136750,136751,9.56],[136752,136752,6.88],[136753,136754,6.84],[136755,136755,6.88],[136756,136757,10.77],[136758,136761,6.98],[136762,136763,12.51],[136764,136767,6.37],[136768,136769,8.38],[136770,136773,7.57],[136774,136775,4.48],[136776,136777,8.38],[136778,136781,7.57],[136782,136783,11.21],[136784,136787,6.24],[136788,136789,11.21],[136790,136793,6.77],[136794,136794,4.14],[136795,136796,11.21],[136797,136800,7.01],[136801,136802,11.21],[136803,136806,6.24],[136807,136808,11.21],[136809,136812,7.01],[136813,136813,6.87],[136814,136814,5.26],[136815,136815,10.87],[136816,136817,16.44],[136818,136818,16.81],[136819,136820,13.87],[136821,136822,16.44],[136823,136831,11],[136832,136832,4.89],[136833,136833,3.31],[136834,136834,4.89],[136835,136835,6.48],[136836,136836,8.06],[136837,136837,9.65],[136838,136838,3.31],[136839,136839,4.89],[136840,136840,6.48],[136841,136841,8.06],[136842,136842,9.65],[136843,136843,3.31],[136844,136844,4.89],[136845,136845,6.48],[136846,136846,8.06],[136847,136847,9.65],[136848,136848,3.31],[136849,136849,4.89],[136850,136850,6.48],[136851,136851,8.06],[136852,136852,9.65],[136853,136853,3.31],[136854,136854,4.89],[136855,136856,6.48],[136857,136857,8.06],[136858,136858,6.48],[136859,136860,5],[136861,136863,11],[136864,136864,7.49],[136865,136865,7.77],[136866,136866,7.52],[136867,136867,6.59],[136868,136869,7.52],[136870,136871,5.77],[136872,136872,4.36],[136873,136874,6.48],[136875,136875,6.12],[136876,136876,5.55],[136877,136877,4.36],[136878,136878,4.42],[136879,136879,5.69],[136880,136880,5.71],[136881,136881,5.51],[136882,136882,3.67],[136883,136883,4.89],[136884,136885,6.26],[136886,136886,6.48],[136887,136887,6.45],[136888,136888,7.08],[136889,136889,4.83],[136890,136891,8.04],[136892,136892,5.64],[136893,136893,3.6],[136894,136894,5.59],[136895,136895,4.36],[136896,136896,5.59],[136897,136897,3.13],[136898,136898,3.6],[136899,136899,5.63],[136900,136900,5.36],[136901,136901,5.71],[136902,136902,4.42],[136903,136903,5.59],[136904,136904,5.05],[136905,136905,6.68],[136906,136906,4.19],[136907,136907,7.18],[136908,136908,3.13],[136909,136909,3.6],[136910,136910,5.71],[136911,136911,5.64],[136912,136912,4.43],[136913,136913,4.66],[136914,136914,5.6],[136915,136915,4.42],[136916,136916,6.05],[136917,136917,5.69],[136918,136918,8.1],[136919,136919,8.29],[136920,136920,7.28],[136921,136921,3.87],[136922,136922,4.37],[136923,136923,4.72],[136924,136924,5.84],[136925,136925,6.47],[136926,136926,8.04],[136927,136927,6.4],[136928,136928,6.96],[136929,136929,5.64],[136930,136930,6.96],[136931,136931,6.68],[136932,136932,7.55],[136933,136933,8.04],[136934,136934,7.28],[136935,136935,3.13],[136936,136936,5.71],[136937,136937,4.83],[136938,136938,8.41],[136939,136939,4.03],[136940,136940,3.05],[136941,136941,5.09],[136942,136942,5.64],[136943,136943,7.28],[136944,136944,6.62],[136945,136945,5.68],[136946,136946,6.07],[136947,136947,5.02],[136948,136948,6.08],[136949,136949,4.09],[136950,136950,5.21],[136951,136951,5.54],[136952,136952,6.23],[136953,136959,11],[136960,136960,11.15],[136961,136961,11.12],[136962,136962,5.88],[136963,136963,10.82],[136964,136964,9.21],[136965,136965,11.12],[136966,136966,10.72],[136967,136967,11.53],[136968,136968,9.35],[136969,136969,11.77],[136970,136970,9.36],[136971,136971,11.33],[136972,136972,11.32],[136973,136973,11],[136974,136974,10.04],[136975,136975,8.37],[136976,136976,10.14],[136977,136977,11.54],[136978,136980,6.53],[136981,136991,11],[136992,136992,9.68],[136993,136993,9.64],[136994,136994,5.73],[136995,136995,6.9],[136996,136996,8.62],[136997,136997,8.85],[136998,136998,10.56],[136999,136999,9.57],[137000,137000,10.63],[137001,137001,9.6],[137002,137002,5.71],[137003,137003,9.59],[137004,137004,9.63],[137005,137005,6.74],[137006,137006,9.81],[137007,137007,11.19],[137008,137008,10.54],[137009,137009,8.85],[137010,137012,6.53],[137013,137013,3.62],[137014,137014,5.37],[137015,137023,11],[137024,137025,9.11],[137026,137026,6.88],[137027,137027,6.81],[137028,137028,6.59],[137029,137029,8.85],[137030,137030,11.27],[137031,137031,8.99],[137032,137032,4.82],[137033,137033,9.11],[137034,137034,6.81],[137035,137035,8.07],[137036,137036,9.69],[137037,137037,6.74],[137038,137038,9.54],[137039,137039,8.99],[137040,137040,8.34],[137041,137041,6.31],[137042,137043,6.53],[137044,137055,11],[137056,137056,8.85],[137057,137057,10.1],[137058,137058,4.31],[137059,137059,6.92],[137060,137060,8.77],[137061,137061,10.39],[137062,137062,11.16],[137063,137063,8.85],[137064,137064,8.77],[137065,137065,10.1],[137066,137066,9.38],[137067,137067,10.1],[137068,137068,10.35],[137069,137069,11],[137070,137070,10.32],[137071,137071,9.17],[137072,137072,11.58],[137073,137073,11],[137074,137075,6.53],[137076,137087,11],[137088,137090,6.6],[137091,137091,10.45],[137092,137095,6.6],[137096,137096,14.3],[137097,137097,10.45],[137098,137100,6.6],[137101,137101,10.45],[137102,137102,14.3],[137103,137104,6.6],[137105,137105,6.84],[137106,137112,6.6],[137113,137113,10.45],[137114,137114,3.85],[137115,137115,10.45],[137116,137116,3.85],[137117,137118,6.6],[137119,137120,10.45],[137121,137121,10.69],[137122,137122,6.38],[137123,137123,6.6],[137124,137124,10.45],[137125,137125,6.6],[137126,137126,10.45],[137127,137128,6.6],[137129,137129,7.81],[137130,137130,6.82],[137131,137139,6.6],[137140,137141,0],[137142,137142,9.44],[137143,137143,6.13],[137144,137146,6.12],[137147,137149,5.25],[137150,137150,9.91],[137151,137152,11.23],[137153,137154,9.14],[137155,137155,9.36],[137156,137156,13.3],[137157,137157,13.68],[137158,137158,5.25],[137159,137159,8.74],[137160,137160,7.85],[137161,137161,5.25],[137162,137162,6.57],[137163,137164,5.25],[137165,137165,5.29],[137166,137171,5.25],[137172,137172,5.11],[137173,137173,6.82],[137174,137174,3.77],[137175,137175,5.83],[137176,137176,20.08],[137177,137177,7.12],[137178,137178,12.93],[137179,137179,4.18],[137180,137180,5.83],[137181,137181,5.25],[137182,137183,11],[137184,137185,5.83],[137186,137186,7.27],[137187,137187,9.68],[137188,137190,6.54],[137191,137191,7.66],[137192,137192,6.54],[137193,137193,6.21],[137194,137199,11],[137200,137200,4.14],[137201,137201,4.53],[137202,137202,1.76],[137203,137203,7.25],[137204,137204,4.53],[137205,137205,4.38],[137206,137206,3.13],[137207,137207,5.88],[137208,137208,3.13],[137209,137209,4.88],[137210,137215,11],[137216,137216,5.88],[137217,137217,11.33],[137218,137218,4.22],[137219,137219,7.02],[137220,137220,4.22],[137221,137221,6.4],[137222,137222,4.4],[137223,137223,5.88],[137224,137224,4.64],[137225,137225,7.06],[137226,137226,1.85],[137227,137230,0],[137231,137231,11],[137232,137233,6.29],[137234,137234,6.65],[137235,137235,9.63],[137236,137236,5.88],[137237,137237,7.83],[137238,137239,6.93],[137240,137240,6.2],[137241,137241,5.88],[137242,137247,11],[137248,137248,10.22],[137249,137249,9.07],[137250,137250,10.92],[137251,137252,10.25],[137253,137254,13.58],[137255,137255,13.2],[137256,137256,6.24],[137257,137257,8.12],[137258,137258,7.48],[137259,137259,7.42],[137260,137261,9.49],[137262,137263,6.24],[137264,137265,8.31],[137266,137266,8.2],[137267,137267,8.23],[137268,137268,8.44],[137269,137270,5.46],[137271,137271,7.62],[137272,137272,6.55],[137273,137273,7.48],[137274,137274,6.06],[137275,137275,6.05],[137276,137276,9.81],[137277,137277,8.96],[137278,137278,11.97],[137279,137279,9.99],[137280,137280,11.97],[137281,137281,7.05],[137282,137282,12.94],[137283,137283,2.21],[137284,137284,9.89],[137285,137285,9.96],[137286,137286,10.07],[137287,137287,12.39],[137288,137288,10.07],[137289,137289,12.39],[137290,137290,11.76],[137291,137291,10.17],[137292,137292,7.87],[137293,137294,9.47],[137295,137295,5.78],[137296,137296,7.95],[137297,137297,6.06],[137298,137298,8.64],[137299,137299,8.44],[137300,137300,7.15],[137301,137301,4.96],[137302,137302,8.24],[137303,137303,6.25],[137304,137304,6.03],[137305,137305,12.1],[137306,137306,8.13],[137307,137307,5.7],[137308,137308,8],[137309,137309,9.07],[137310,137310,10.92],[137311,137311,3.13],[137312,137312,10.25],[137313,137313,13.58],[137314,137314,10.12],[137315,137315,4.71],[137316,137316,7.62],[137317,137317,8.71],[137318,137318,7.9],[137319,137319,7.49],[137320,137320,9.15],[137321,137321,8.2],[137322,137322,5.63],[137323,137323,6.55],[137324,137325,6.06],[137326,137327,8.31],[137328,137328,4.1],[137329,137329,8.44],[137330,137330,5.63],[137331,137331,10.92],[137332,137332,6.02],[137333,137333,9.55],[137334,137334,6.16],[137335,137335,5.46],[137336,137343,11],[137344,137344,6.41],[137345,137345,8.69],[137346,137346,7.4],[137347,137348,5.31],[137349,137349,11.63],[137350,137350,10.85],[137351,137351,11.23],[137352,137352,10.92],[137353,137353,7.77],[137354,137354,10.01],[137355,137355,6.9],[137356,137356,5.61],[137357,137357,8.71],[137358,137358,6.77],[137359,137359,5.77],[137360,137360,5.98],[137361,137361,6.06],[137362,137362,7.48],[137363,137363,7.42],[137364,137364,7.2],[137365,137365,9.16],[137366,137366,8],[137367,137367,6.05],[137368,137368,6.88],[137369,137369,9.46],[137370,137370,12.85],[137371,137371,9.34],[137372,137372,8.31],[137373,137373,10.15],[137374,137374,5.72],[137375,137375,7.66],[137376,137376,6.06],[137377,137377,11.53],[137378,137378,8.31],[137379,137379,5.72],[137380,137381,8.31],[137382,137382,5.55],[137383,137383,6.13],[137384,137384,10.98],[137385,137385,0],[137386,137386,7.9],[137387,137471,11],[137472,137472,7.41],[137473,137473,6.65],[137474,137474,7.71],[137475,137475,6.54],[137476,137476,6.62],[137477,137477,10.2],[137478,137478,6.9],[137479,137479,6.95],[137480,137480,7.42],[137481,137481,6.41],[137482,137482,8.55],[137483,137483,6.08],[137484,137484,7.6],[137485,137485,6.88],[137486,137486,7.48],[137487,137487,6.65],[137488,137488,8.22],[137489,137489,8.92],[137490,137490,6.76],[137491,137491,7.7],[137492,137492,7.12],[137493,137493,6.64],[137494,137494,6.88],[137495,137495,7.22],[137496,137496,7.27],[137497,137497,7],[137498,137498,5.73],[137499,137499,6.94],[137500,137500,7.25],[137501,137501,6.76],[137502,137502,6.61],[137503,137503,11],[137504,137506,7.93],[137507,137507,11.08],[137508,137508,14.1],[137509,137509,11.08],[137510,137510,14.1],[137511,137512,7.93],[137513,137513,11.87],[137514,137514,7.93],[137515,137515,12.44],[137516,137519,11],[137520,137520,13.95],[137521,137521,10.83],[137522,137522,7.93],[137523,137523,10.9],[137524,137524,13.18],[137525,137525,13.58],[137526,137526,13.46],[137527,137527,9.15],[137528,137528,11.49],[137529,137531,7.93],[137532,137535,11],[137536,137536,6.05],[137537,137539,11],[137540,137540,4.84],[137541,137541,5.28],[137542,137542,6.04],[137543,137543,5.49],[137544,137544,5.47],[137545,137545,5.07],[137546,137546,5.5],[137547,137547,5.36],[137548,137549,5.41],[137550,137550,5.47],[137551,137551,5.41],[137552,137552,5.64],[137553,137553,7.3],[137554,137554,5.9],[137555,137555,8],[137556,137556,7.24],[137557,137557,6.69],[137558,137558,9.92],[137559,137559,10.64],[137560,137560,6.26],[137561,137561,5.72],[137562,137562,9.14],[137563,137563,5.6],[137564,137564,9.14],[137565,137565,6.35],[137566,137566,9.34],[137567,137567,7.48],[137568,137568,5.59],[137569,137569,7.2],[137570,137570,5.9],[137571,137571,2.63],[137572,137572,6.04],[137573,137573,5.65],[137574,137574,6.04],[137575,137575,3.19],[137576,137576,2.72],[137577,137577,5.52],[137578,137578,6.04],[137579,137579,5.65],[137580,137580,2.3],[137581,137581,6.92],[137582,137583,11],[137584,137584,6.09],[137585,137585,5.75],[137586,137586,6.63],[137587,137587,6.01],[137588,137588,5.75],[137589,137599,11],[137600,137601,10.22],[137602,137602,9.99],[137603,137603,5.83],[137604,137604,10.05],[137605,137605,6.72],[137606,137606,6.58],[137607,137607,7.11],[137608,137608,6.36],[137609,137609,10.22],[137610,137610,6.83],[137611,137611,6.72],[137612,137612,6.58],[137613,137614,9.99],[137615,137615,6.92],[137616,137616,10.05],[137617,137617,7.06],[137618,137618,8.24],[137619,137619,6.34],[137620,137620,6.98],[137621,137621,9.16],[137622,137622,10.05],[137623,137623,9.99],[137624,137624,10.22],[137625,137625,6.72],[137626,137626,7.06],[137627,137628,10.05],[137629,137629,9.99],[137630,137630,6.09],[137631,137632,10.05],[137633,137633,5.97],[137634,137634,6.72],[137635,137635,7.46],[137636,137636,5.97],[137637,137637,6.72],[137638,137638,9.99],[137639,137639,5.95],[137640,137640,6.72],[137641,137641,6.58],[137642,137642,10.22],[137643,137643,6.58],[137644,137647,11],[137648,137648,7.33],[137649,137649,5.97],[137650,137650,6.64],[137651,137651,5.97],[137652,137652,6.57],[137653,137653,7.73],[137654,137654,14.3],[137655,137655,5.81],[137656,137656,5.71],[137657,137657,6.64],[137658,137658,6.19],[137659,137659,8.88],[137660,137660,9.02],[137661,137661,9],[137662,137662,7.96],[137663,137664,9.55],[137665,137665,6.09],[137666,137666,7.12],[137667,137667,6.42],[137668,137668,6.72],[137669,137669,9.99],[137670,137670,5.97],[137671,137671,6.72],[137672,137672,5.63],[137673,137673,5.74],[137674,137679,11],[137680,137680,6.09],[137681,137681,5.97],[137682,137682,3.95],[137683,137684,5.92],[137685,137685,8.54],[137686,137686,6.91],[137687,137687,8.54],[137688,137688,6.17],[137689,137689,6.58],[137690,137690,6.79],[137691,137693,11],[137694,137695,9.2],[137696,137696,7.08],[137697,137697,5.83],[137698,137698,7.27],[137699,137699,9.68],[137700,137702,6.54],[137703,137703,7.66],[137704,137704,6.54],[137705,137705,6.21],[137706,137707,13.97],[137708,137708,14.5],[137709,137709,15.84],[137710,137711,13.97],[137712,137712,6.98],[137713,137713,5.83],[137714,137714,7.27],[137715,137715,9.68],[137716,137718,6.54],[137719,137719,7.66],[137720,137720,6.54],[137721,137721,6.21],[137722,137723,13.97],[137724,137724,14.5],[137725,137725,15.84],[137726,137727,13.97],[137728,137728,7.45],[137729,137729,11.51],[137730,137730,6.65],[137731,137731,8.3],[137732,137732,11.51],[137733,137733,7.45],[137734,137734,10.39],[137735,137735,9.66],[137736,137738,10.39],[137739,137740,11.51],[137741,137741,8.62],[137742,137742,13.43],[137743,137743,14.57],[137744,137744,13.41],[137745,137745,7.58],[137746,137746,13.73],[137747,137747,13.41],[137748,137748,6.34],[137749,137749,13.38],[137750,137750,11.37],[137751,137752,6.53],[137753,137753,10.46],[137754,137754,12.47],[137755,137755,6.53],[137756,137757,11],[137758,137758,5.54],[137759,137759,5.92],[137760,137760,10.18],[137761,137761,5.81],[137762,137762,5.76],[137763,137763,6.53],[137764,137764,6.42],[137765,137765,11.47],[137766,137766,6.94],[137767,137767,6.55],[137768,137768,10],[137769,137770,6.12],[137771,137771,10.78],[137772,137772,10.01],[137773,137774,7.44],[137775,137775,5.77],[137776,137776,7.2],[137777,137777,12.01],[137778,137778,9.82],[137779,137779,7.72],[137780,137780,7.12],[137781,137781,7],[137782,137782,6.07],[137783,137783,6.53],[137784,137784,6.9],[137785,137785,7.7],[137786,137786,7.56],[137787,137788,7.23],[137789,137789,9.66],[137790,137790,6.53],[137791,137791,10.73],[137792,137792,6.74],[137793,137793,7.1],[137794,137794,7.25],[137795,137795,9.88],[137796,137796,5.77],[137797,137797,5.92],[137798,137798,6.53],[137799,137800,10.01],[137801,137801,9.88],[137802,137802,6.94],[137803,137803,9.73],[137804,137804,9.88],[137805,137805,7.23],[137806,137806,8.92],[137807,137808,5.77],[137809,137809,6.56],[137810,137810,11.88],[137811,137811,10.1],[137812,137812,14.25],[137813,137814,0],[137815,137815,3.12],[137816,137822,0],[137823,137823,11],[137824,137824,0],[137825,137825,4.93],[137826,137826,0],[137827,137827,5.4],[137828,137828,2.72],[137829,137836,0],[137837,137837,2.34],[137838,137838,5.93],[137839,137839,11.11],[137840,137841,5.93],[137842,137842,6.02],[137843,137852,0],[137853,137854,11],[137855,137855,0],[137856,137856,5.92],[137857,137857,5.89],[137858,137858,3.73],[137859,137860,5.83],[137861,137861,5.82],[137862,137862,5.88],[137863,137863,5.82],[137864,137864,6.14],[137865,137865,5.88],[137866,137871,11],[137872,137872,5.92],[137873,137873,7.28],[137874,137874,4.46],[137875,137875,9.9],[137876,137876,7.22],[137877,137877,7.12],[137878,137878,7.45],[137879,137879,7.44],[137880,137880,7.23],[137881,137881,9.88],[137882,137887,11],[137888,137888,7.85],[137889,137889,7.88],[137890,137890,10.79],[137891,137891,9.06],[137892,137892,7.85],[137893,137893,8.06],[137894,137894,7.19],[137895,137895,7.34],[137896,137896,3.28],[137897,137897,5.05],[137898,137898,6.59],[137899,137899,8.2],[137900,137900,13.56],[137901,137901,6.07],[137902,137983,11],[137984,137987,6.53],[137988,137988,11.07],[137989,137989,12.13],[137990,137990,17.05],[137991,137991,10.26],[137992,137992,15.18],[137993,137993,8.24],[137994,137994,13.16],[137995,137995,8.88],[137996,137996,13.79],[137997,137997,10.42],[137998,137998,15.33],[137999,137999,7.9],[138000,138000,12.58],[138001,138001,10.81],[138002,138002,15.73],[138003,138003,12.22],[138004,138004,12.44],[138005,138005,12.01],[138006,138006,12.85],[138007,138007,10.26],[138008,138008,8.73],[138009,138009,11.57],[138010,138010,9.67],[138011,138011,13.29],[138012,138012,16.6],[138013,138013,11.55],[138014,138014,11.12],[138015,138015,10.27],[138016,138016,8.91],[138017,138017,13.43],[138018,138018,13.24],[138019,138019,8.72],[138020,138020,11.79],[138021,138021,10.12],[138022,138022,9.39],[138023,138023,8.88],[138024,138024,8.41],[138025,138025,12.98],[138026,138026,10.17],[138027,138027,9.39],[138028,138028,10.55],[138029,138029,9.29],[138030,138030,13.45],[138031,138031,8.72],[138032,138032,12.01],[138033,138033,8.88],[138034,138034,8.89],[138035,138035,13.45],[138036,138036,6.53],[138037,138037,11.45],[138038,138042,6.53],[138043,138043,11.45],[138044,138044,6.53],[138045,138045,11.45],[138046,138047,11.85],[138048,138049,16.76],[138050,138050,6.53],[138051,138051,11.45],[138052,138052,3.83],[138053,138053,13.34],[138054,138054,19.9],[138055,138055,13.24],[138056,138056,8.88],[138057,138057,8.72],[138058,138058,8.89],[138059,138059,16.08],[138060,138063,11],[138064,138064,5.19],[138065,138065,13],[138066,138066,10.42],[138067,138067,10.81],[138068,138068,5.59],[138069,138069,7.19],[138070,138070,7.9],[138071,138071,12.02],[138072,138072,8.41],[138073,138073,9.92],[138074,138074,12.87],[138075,138075,14.21],[138076,138076,4.07],[138077,138077,5.04],[138078,138078,4.32],[138079,138079,7.06],[138080,138080,4.74],[138081,138081,6.12],[138082,138082,5.31],[138083,138083,4.62],[138084,138084,5.27],[138085,138085,6.69],[138086,138086,7.3],[138087,138087,10.34],[138088,138088,4.26],[138089,138089,14.33],[138090,138090,4.53],[138091,138099,6.53],[138100,138100,6.61],[138101,138101,6.28],[138102,138102,6.61],[138103,138103,6.28],[138104,138104,6.49],[138105,138105,6.86],[138106,138106,6.49],[138107,138107,6.96],[138108,138108,4.42],[138109,138111,11],[138112,138113,6.53],[138114,138114,10.79],[138115,138115,9.58],[138116,138116,6.17],[138117,138117,8.41],[138118,138118,10.02],[138119,138119,8.84],[138120,138120,8.74],[138121,138121,9.58],[138122,138122,8.72],[138123,138123,8.8],[138124,138124,8.81],[138125,138125,8.01],[138126,138126,8.25],[138127,138127,8.96],[138128,138128,9.12],[138129,138129,11.85],[138130,138130,9.47],[138131,138131,7.83],[138132,138132,7.93],[138133,138134,8.72],[138135,138135,7.44],[138136,138136,10.67],[138137,138137,7.6],[138138,138138,9.56],[138139,138139,5.88],[138140,138140,8.67],[138141,138141,7.52],[138142,138143,8.77],[138144,138144,8.47],[138145,138149,6.53],[138150,138151,10.66],[138152,138153,6.53],[138154,138154,9.44],[138155,138155,0],[138156,138157,6.53],[138158,138158,15.2],[138159,138159,18.12],[138160,138160,9.11],[138161,138161,8.79],[138162,138162,7.71],[138163,138163,8.41],[138164,138164,5.88],[138165,138165,9.53],[138166,138166,7.29],[138167,138167,8.16],[138168,138168,8.77],[138169,138169,8.19],[138170,138170,4],[138171,138171,7.83],[138172,138172,12.98],[138173,138173,14.7],[138174,138174,11.82],[138175,138175,8],[138176,138176,12.39],[138177,138177,12.58],[138178,138178,11.44],[138179,138179,11.62],[138180,138180,11.64],[138181,138181,11.77],[138182,138182,10.89],[138183,138183,9.24],[138184,138184,10.37],[138185,138185,10.89],[138186,138186,10.52],[138187,138187,11],[138188,138188,11.62],[138189,138189,8.67],[138190,138190,10.35],[138191,138191,11.62],[138192,138192,11.25],[138193,138193,8.92],[138194,138194,10.48],[138195,138195,10.85],[138196,138196,11.59],[138197,138197,11.97],[138198,138198,8.78],[138199,138199,11.8],[138200,138200,10.56],[138201,138202,11.62],[138203,138204,11.77],[138205,138205,8.32],[138206,138206,10.24],[138207,138207,11.62],[138208,138208,10.09],[138209,138209,11.19],[138210,138210,9.63],[138211,138211,10.89],[138212,138213,10.04],[138214,138214,6.53],[138215,138215,10.03],[138216,138217,6.53],[138218,138218,11.85],[138219,138219,10.35],[138220,138220,12.4],[138221,138225,6.53],[138226,138226,12.57],[138227,138227,11.42],[138228,138235,11],[138236,138236,11.77],[138237,138237,12.18],[138238,138238,9.36],[138239,138239,7.57],[138240,138240,6.62],[138241,138241,5.95],[138242,138242,7.13],[138243,138244,10.26],[138245,138245,4.72],[138246,138246,7.45],[138247,138247,7.64],[138248,138248,7.84],[138249,138249,6.71],[138250,138250,7.03],[138251,138251,7.33],[138252,138252,6.68],[138253,138253,8.03],[138254,138256,6.61],[138257,138257,6.93],[138258,138258,10.72],[138259,138259,7.19],[138260,138260,10.26],[138261,138262,8.15],[138263,138263,7.04],[138264,138264,11.33],[138265,138265,6.51],[138266,138266,5.79],[138267,138267,5.6],[138268,138268,10.72],[138269,138269,7.81],[138270,138270,6.49],[138271,138271,7.19],[138272,138272,11.11],[138273,138273,7.42],[138274,138274,11.78],[138275,138275,6.7],[138276,138276,9.42],[138277,138277,8.14],[138278,138278,9.5],[138279,138279,9.49],[138280,138280,8.37],[138281,138281,7.81],[138282,138282,8.68],[138283,138283,9.67],[138284,138291,5.61],[138292,138292,9.84],[138293,138293,7.59],[138294,138295,5.61],[138296,138298,11],[138299,138299,2.75],[138300,138300,4.73],[138301,138301,5.76],[138302,138302,6.2],[138303,138303,6.47],[138304,138305,5.39],[138306,138306,6.17],[138307,138307,6.34],[138308,138308,7.46],[138309,138309,7.42],[138310,138310,6.5],[138311,138311,5.18],[138312,138312,5.99],[138313,138313,5.54],[138314,138316,11],[138317,138318,6.2],[138319,138319,7.29],[138320,138320,6.29],[138321,138321,5.66],[138322,138322,5.64],[138323,138323,5.73],[138324,138324,5.31],[138325,138325,6.06],[138326,138326,5.57],[138327,138327,5.65],[138328,138328,7.35],[138329,138329,6.95],[138330,138330,7.14],[138331,138331,8.59],[138332,138332,7.44],[138333,138333,7.39],[138334,138334,6.42],[138335,138335,7.61],[138336,138336,6.37],[138337,138338,6.92],[138339,138339,7.2],[138340,138340,6.17],[138341,138341,6.46],[138342,138342,8.38],[138343,138343,6.42],[138344,138344,5.96],[138345,138345,5.99],[138346,138346,7.19],[138347,138347,7.46],[138348,138348,8.38],[138349,138349,7.2],[138350,138350,6.31],[138351,138351,8.01],[138352,138352,7.9],[138353,138354,6.25],[138355,138355,7.36],[138356,138356,6.92],[138357,138357,7.9],[138358,138358,7.2],[138359,138359,7.9],[138360,138362,2.95],[138363,138363,5.5],[138364,138364,3.59],[138365,138365,5.85],[138366,138366,2.95],[138367,138367,5.51],[138368,138383,11],[138384,138384,6.25],[138385,138386,6.49],[138387,138387,9.86],[138388,138388,6.37],[138389,138389,6.27],[138390,138390,6.68],[138391,138391,10.03],[138392,138392,6.54],[138393,138393,6.17],[138394,138394,11.49],[138395,138396,6.69],[138397,138397,9.12],[138398,138398,6.1],[138399,138399,6.47],[138400,138400,8.38],[138401,138401,6.5],[138402,138402,8.02],[138403,138403,6.78],[138404,138404,9],[138405,138405,6.4],[138406,138406,8.59],[138407,138407,6.6],[138408,138408,6.69],[138409,138409,6.55],[138410,138410,7.19],[138411,138412,6.74],[138413,138413,7.03],[138414,138414,6.74],[138415,138415,6.31],[138416,138416,6.29],[138417,138417,7.05],[138418,138418,6.56],[138419,138419,6.29],[138420,138420,6.28],[138421,138421,6.74],[138422,138422,8.28],[138423,138423,6.34],[138424,138424,6.55],[138425,138425,6.34],[138426,138426,6.43],[138427,138428,11],[138429,138429,7.08],[138430,138430,6.56],[138431,138431,7.81],[138432,138432,11.2],[138433,138435,7.41],[138436,138436,18.48],[138437,138437,8.18],[138438,138438,12.48],[138439,138439,18.09],[138440,138457,11],[138458,138458,0],[138459,138484,11],[138485,138485,5.8],[138486,138495,11],[138496,138496,5.53],[138497,138497,7.1],[138498,138498,7.34],[138499,138499,5.11],[138500,138500,5.26],[138501,138502,5.77],[138503,138503,4.89],[138504,138504,4.35],[138505,138505,3.06],[138506,138506,3.26],[138507,138507,5.94],[138508,138508,4.89],[138509,138509,6.96],[138510,138510,5.89],[138511,138511,5.5],[138512,138512,5.26],[138513,138513,5.96],[138514,138514,5.91],[138515,138515,5.96],[138516,138516,7.94],[138517,138517,4.8],[138518,138519,5.5],[138520,138520,5.02],[138521,138522,5.06],[138523,138523,4.81],[138524,138524,5.91],[138525,138525,5.55],[138526,138526,7.2],[138527,138527,5.55],[138528,138528,5.5],[138529,138529,7.94],[138530,138530,4.88],[138531,138531,4.35],[138532,138532,4.37],[138533,138533,5.92],[138534,138534,4.51],[138535,138535,5.5],[138536,138536,5.89],[138537,138537,5.02],[138538,138538,5.81],[138539,138539,5.49],[138540,138540,4.64],[138541,138541,5.92],[138542,138543,4.25],[138544,138544,4.73],[138545,138546,4.07],[138547,138547,4.76],[138548,138548,4.84],[138549,138549,2.2],[138550,138550,2.71],[138551,138551,5.04],[138552,138552,4.08],[138553,138553,5.94],[138554,138554,5.09],[138555,138555,4.85],[138556,138556,4.6],[138557,138557,3.7],[138558,138558,3.65],[138559,138559,4.51],[138560,138560,3.99],[138561,138561,4.98],[138562,138562,6.09],[138563,138564,3.01],[138565,138565,3.45],[138566,138566,4.29],[138567,138567,3.41],[138568,138568,3.42],[138569,138570,2.82],[138571,138572,2.66],[138573,138573,3.31],[138574,138574,1.8],[138575,138575,3.47],[138576,138576,5.38],[138577,138577,3.1],[138578,138578,3.17],[138579,138579,2.81],[138580,138581,3.17],[138582,138582,3.42],[138583,138583,2.11],[138584,138584,3.6],[138585,138585,3.36],[138586,138586,5.38],[138587,138587,3.23],[138588,138588,3.51],[138589,138589,3.1],[138590,138590,2.92],[138591,138591,2.98],[138592,138592,3.68],[138593,138593,3.1],[138594,138594,1.8],[138595,138595,2.52],[138596,138596,3.6],[138597,138597,3.23],[138598,138598,3.1],[138599,138599,2.92],[138600,138600,3.25],[138601,138601,3.68],[138602,138602,3.1],[138603,138603,8.37],[138604,138605,5.5],[138606,138606,3.66],[138607,138607,8.56],[138608,138609,5.5],[138610,138611,3.66],[138612,138612,4.28],[138613,138613,3.06],[138614,138614,4.88],[138615,138615,5.5],[138616,138616,3.56],[138617,138617,5.18],[138618,138618,8.43],[138619,138619,3.06],[138620,138620,2.96],[138621,138621,5.5],[138622,138622,5.91],[138623,138623,6.04],[138624,138625,5.5],[138626,138626,3.66],[138627,138627,6.56],[138628,138628,5.5],[138629,138629,3.06],[138630,138630,8.56],[138631,138632,5.5],[138633,138633,3.66],[138634,138634,4.28],[138635,138635,4.67],[138636,138637,5.5],[138638,138639,4.88],[138640,138640,5.75],[138641,138641,5.5],[138642,138642,4.88],[138643,138644,4.62],[138645,138645,4.88],[138646,138646,3.06],[138647,138647,4.88],[138648,138648,4.83],[138649,138649,5.5],[138650,138650,4.88],[138651,138651,3.45],[138652,138653,2.81],[138654,138654,3.16],[138655,138655,2.66],[138656,138657,2.29],[138658,138658,2.93],[138659,138659,3.53],[138660,138660,1.8],[138661,138661,2],[138662,138663,1.81],[138664,138664,2.12],[138665,138666,1.8],[138667,138667,2.98],[138668,138668,4.93],[138669,138669,5.38],[138670,138671,3.6],[138672,138672,3.54],[138673,138673,3.17],[138674,138674,3.53],[138675,138675,2.34],[138676,138676,2.37],[138677,138677,2.11],[138678,138678,3.6],[138679,138679,3.49],[138680,138680,3.58],[138681,138681,3.2],[138682,138682,3.23],[138683,138684,3.01],[138685,138685,3.34],[138686,138686,2.92],[138687,138687,2.96],[138688,138703,0],[138704,138706,11],[138707,138713,0],[138714,138714,11],[138715,138726,0],[138727,138749,11],[138750,138751,0],[138752,138752,7.94],[138753,138753,4.88],[138754,138754,7.34],[138755,138755,5.5],[138756,138756,7.54],[138757,138757,6.85],[138758,138758,7.34],[138759,138759,5.5],[138760,138760,7.68],[138761,138761,5.73],[138762,138762,7.94],[138763,138763,5.5],[138764,138764,8.48],[138765,138765,6.85],[138766,138766,7.94],[138767,138767,5.5],[138768,138768,7.94],[138769,138769,5.5],[138770,138770,7.94],[138771,138771,5.5],[138772,138772,6.96],[138773,138773,6.55],[138774,138774,6.96],[138775,138775,6.55],[138776,138776,6.72],[138777,138777,4.88],[138778,138778,6.72],[138779,138779,4.88],[138780,138780,6.72],[138781,138781,4.88],[138782,138782,6.12],[138783,138783,3.66],[138784,138784,7.94],[138785,138785,5.5],[138786,138786,7.94],[138787,138787,5.5],[138788,138788,8.27],[138789,138789,6.96],[138790,138790,7.94],[138791,138791,5.5],[138792,138792,7.94],[138793,138793,5.5],[138794,138794,7.94],[138795,138795,5.5],[138796,138796,3.66],[138797,138797,3.06],[138798,138798,4.63],[138799,138799,3.02],[138800,138800,7.62],[138801,138801,6.51],[138802,138802,7.62],[138803,138803,6.51],[138804,138804,7.94],[138805,138805,5.5],[138806,138806,6.12],[138807,138807,3.02],[138808,138808,6.72],[138809,138809,3.06],[138810,138810,6.72],[138811,138811,3.06],[138812,138812,6.72],[138813,138813,3.06],[138814,138814,9.27],[138815,138815,10.7],[138816,138816,9.78],[138817,138817,8.56],[138818,138818,9.27],[138819,138819,10.7],[138820,138820,7.94],[138821,138821,5.5],[138822,138822,8.23],[138823,138823,6.96],[138824,138824,7.94],[138825,138825,5.5],[138826,138826,7.94],[138827,138827,5.5],[138828,138828,8.66],[138829,138829,6.68],[138830,138830,7.94],[138831,138831,5.5],[138832,138832,8.66],[138833,138833,6.68],[138834,138834,8.66],[138835,138835,6.68],[138836,138836,6.63],[138837,138837,6.85],[138838,138838,6.12],[138839,138839,5.5],[138840,138840,7.34],[138841,138841,3.66],[138842,138842,7.65],[138843,138843,4.69],[138844,138844,7.34],[138845,138845,3.66],[138846,138846,7.34],[138847,138847,3.66],[138848,138848,6.12],[138849,138849,4.28],[138850,138850,7.52],[138851,138851,5.73],[138852,138852,6.12],[138853,138853,4.28],[138854,138854,6.12],[138855,138855,4.28],[138856,138856,6.12],[138857,138857,4.28],[138858,138858,6.72],[138859,138859,3.06],[138860,138860,6.78],[138861,138861,4.33],[138862,138862,6.72],[138863,138863,3.06],[138864,138864,6.72],[138865,138865,3.06],[138866,138866,7.94],[138867,138867,5.5],[138868,138868,7.94],[138869,138869,5.5],[138870,138870,7.94],[138871,138871,5.5],[138872,138872,8.05],[138873,138873,6.96],[138874,138874,7.94],[138875,138875,5.5],[138876,138876,7.52],[138877,138877,6.51],[138878,138878,7.52],[138879,138879,6.51],[138880,138880,10.88],[138881,138881,9],[138882,138882,10.88],[138883,138883,9],[138884,138884,10.88],[138885,138885,9],[138886,138886,10.38],[138887,138887,7.94],[138888,138888,10.88],[138889,138889,9],[138890,138890,7.94],[138891,138891,5.5],[138892,138892,7.94],[138893,138893,5.5],[138894,138894,7.94],[138895,138895,5.5],[138896,138896,6.72],[138897,138897,4.88],[138898,138898,7.54],[138899,138899,5.78],[138900,138900,6.72],[138901,138901,4.88],[138902,138902,5.5],[138903,138903,3.06],[138904,138904,7.94],[138905,138905,5.5],[138906,138906,4.88],[138907,138907,3.06],[138908,138908,4.66],[138909,138909,4.65],[138910,138910,7.46],[138911,138911,6.62],[138912,138912,7.52],[138913,138913,6.61],[138914,138914,7.52],[138915,138915,6.61],[138916,138916,7.52],[138917,138917,6.61],[138918,138918,7.52],[138919,138919,6.61],[138920,138920,7.52],[138921,138921,6.61],[138922,138922,7.52],[138923,138923,6.61],[138924,138924,7.52],[138925,138925,6.61],[138926,138926,7.52],[138927,138927,6.61],[138928,138928,7.52],[138929,138929,6.61],[138930,138930,7.52],[138931,138931,6.61],[138932,138932,7.52],[138933,138933,6.61],[138934,138934,7.52],[138935,138935,6.61],[138936,138936,6.96],[138937,138937,6.55],[138938,138938,6.96],[138939,138939,6.55],[138940,138940,6.96],[138941,138941,6.55],[138942,138942,6.96],[138943,138943,6.55],[138944,138944,6.96],[138945,138945,6.55],[138946,138946,6.96],[138947,138947,6.55],[138948,138948,6.96],[138949,138949,6.55],[138950,138950,6.96],[138951,138951,6.55],[138952,138952,4.63],[138953,138953,3.02],[138954,138954,4.63],[138955,138955,3.02],[138956,138956,8.66],[138957,138957,6.68],[138958,138958,8.66],[138959,138959,6.68],[138960,138960,8.66],[138961,138961,6.68],[138962,138962,8.66],[138963,138963,6.68],[138964,138964,8.66],[138965,138965,6.68],[138966,138966,8.66],[138967,138967,6.68],[138968,138968,8.66],[138969,138969,6.68],[138970,138970,8.87],[138971,138971,6.68],[138972,138972,8.87],[138973,138973,6.68],[138974,138974,8.87],[138975,138975,6.68],[138976,138976,8.87],[138977,138977,6.68],[138978,138978,8.87],[138979,138979,6.68],[138980,138980,8.05],[138981,138981,6.96],[138982,138982,8.05],[138983,138983,6.96],[138984,138984,8.32],[138985,138985,7.26],[138986,138986,8.32],[138987,138987,7.26],[138988,138988,8.32],[138989,138989,7.26],[138990,138990,8.32],[138991,138991,7.26],[138992,138992,8.32],[138993,138993,7.26],[138994,138994,6.77],[138995,138995,6.51],[138996,138996,6.77],[138997,138997,6.51],[138998,138998,6.77],[138999,138999,6.51],[139000,139000,6.77],[139001,139001,6.51],[139002,139002,10.3],[139003,139003,6.48],[139004,139004,5.57],[139005,139005,4.89],[139006,139007,5.04],[139008,139015,5.76],[139016,139017,7.94],[139018,139023,8.7],[139024,139029,4.62],[139030,139031,11],[139032,139033,8.23],[139034,139037,9.95],[139038,139039,11],[139040,139047,5.75],[139048,139049,9.45],[139050,139055,11.17],[139056,139063,2.96],[139064,139065,5.17],[139066,139071,6.89],[139072,139077,5.5],[139078,139079,11],[139080,139081,8.7],[139082,139083,10.96],[139084,139085,9.88],[139086,139087,11],[139088,139095,5.45],[139096,139096,11],[139097,139097,9.45],[139098,139098,11],[139099,139099,11.23],[139100,139100,11],[139101,139101,11.23],[139102,139102,11],[139103,139103,11.23],[139104,139111,7.24],[139112,139113,8.93],[139114,139115,10.97],[139116,139119,10.22],[139120,139121,6.85],[139122,139123,5.64],[139124,139125,6.96],[139126,139127,3.02],[139128,139129,6.68],[139130,139131,6.94],[139132,139133,8.95],[139134,139135,11],[139136,139143,5.76],[139144,139145,7.94],[139146,139151,8.7],[139152,139159,5.75],[139160,139161,9.45],[139162,139167,11.17],[139168,139175,7.24],[139176,139177,8.93],[139178,139179,10.97],[139180,139183,10.22],[139184,139188,5.76],[139189,139189,11],[139190,139191,5.76],[139192,139193,7.94],[139194,139195,7.52],[139196,139196,7.94],[139197,139197,3.66],[139198,139198,3.02],[139199,139201,3.66],[139202,139204,5.75],[139205,139205,11],[139206,139207,5.75],[139208,139208,6.96],[139209,139209,8.26],[139210,139210,8.27],[139211,139211,9.57],[139212,139212,7.94],[139213,139215,3.66],[139216,139217,2.96],[139218,139219,3.02],[139220,139221,11],[139222,139223,2.96],[139224,139225,3.66],[139226,139226,4.63],[139227,139227,5.94],[139228,139228,11],[139229,139231,3.66],[139232,139233,5.45],[139234,139235,6.94],[139236,139237,5.49],[139238,139239,5.45],[139240,139241,7.94],[139242,139242,6.77],[139243,139243,8.29],[139244,139244,7.63],[139245,139247,6.99],[139248,139249,11],[139250,139252,7.24],[139253,139253,11],[139254,139255,7.24],[139256,139256,8.66],[139257,139257,9.69],[139258,139258,9],[139259,139259,9.98],[139260,139260,8.17],[139261,139261,6.99],[139262,139262,3.66],[139263,139263,11],[139264,139264,5.5],[139265,139265,11],[139266,139266,5.5],[139267,139267,11],[139268,139268,3.67],[139269,139269,2.75],[139270,139270,1.83],[139271,139271,6.99],[139272,139272,4],[139273,139273,2.2],[139274,139274,0.69],[139275,139279,0],[139280,139281,6.36],[139282,139283,6.99],[139284,139285,11],[139286,139286,3.09],[139287,139287,6.99],[139288,139291,2.95],[139292,139295,5.05],[139296,139297,6.99],[139298,139298,6],[139299,139299,5.17],[139300,139300,3.67],[139301,139301,7.33],[139302,139302,9],[139303,139303,3.48],[139304,139310,0],[139311,139311,1.93],[139312,139312,16.74],[139313,139313,14.91],[139314,139314,3.97],[139315,139316,6.13],[139317,139317,3.58],[139318,139318,5.96],[139319,139319,8.35],[139320,139320,3.88],[139321,139322,5],[139323,139323,7.95],[139324,139324,6.87],[139325,139325,4.64],[139326,139326,6.99],[139327,139328,5.5],[139329,139329,5.11],[139330,139330,10.02],[139331,139331,3.58],[139332,139332,3.97],[139333,139334,3.58],[139335,139335,8.88],[139336,139337,7.77],[139338,139339,6.96],[139340,139340,5.96],[139341,139341,5.97],[139342,139342,5.3],[139343,139343,3.48],[139344,139344,5.5],[139345,139345,5.3],[139346,139346,6.06],[139347,139347,11],[139348,139348,5.5],[139349,139349,7.67],[139350,139350,6.53],[139351,139351,10.72],[139352,139353,6.53],[139354,139354,11],[139355,139355,6.53],[139356,139356,7.68],[139357,139357,11],[139358,139358,3.06],[139359,139359,2.44],[139360,139375,0],[139376,139376,4.64],[139377,139377,2.38],[139378,139379,11],[139380,139381,5.96],[139382,139382,4.64],[139383,139384,5.96],[139385,139388,4.64],[139389,139390,2.48],[139391,139391,6],[139392,139404,4.64],[139405,139406,2.48],[139407,139407,11],[139408,139408,3.01],[139409,139409,2.82],[139410,139410,3.17],[139411,139411,3.19],[139412,139412,2.82],[139413,139423,11],[139424,139424,6.99],[139425,139426,7.68],[139427,139428,6.99],[139429,139429,10.7],[139430,139430,8.23],[139431,139431,12.8],[139432,139432,12.83],[139433,139433,10.88],[139434,139434,9.18],[139435,139435,6.85],[139436,139436,6.99],[139437,139437,7.62],[139438,139438,6.78],[139439,139439,11],[139440,139440,5.73],[139441,139441,6.63],[139442,139442,8.53],[139443,139444,7.52],[139445,139445,7.68],[139446,139446,7.44],[139447,139447,8.03],[139448,139448,6.22],[139449,139449,6.6],[139450,139450,6.12],[139451,139451,9.14],[139452,139453,6.22],[139454,139454,8.28],[139455,139455,7.22],[139456,139471,11],[139472,139474,0],[139475,139475,6.6],[139476,139477,7.7],[139478,139480,0],[139481,139482,6.6],[139483,139485,0],[139486,139486,11],[139487,139487,9.51],[139488,139488,9.9],[139489,139489,0],[139490,139490,11],[139491,139504,0],[139505,139519,11],[139520,139521,8.25],[139522,139522,6.62],[139523,139523,10.88],[139524,139524,7.04],[139525,139525,11.84],[139526,139526,8.25],[139527,139527,6.58],[139528,139528,6.63],[139529,139529,9.31],[139530,139530,11],[139531,139531,10.97],[139532,139532,9.06],[139533,139533,6.62],[139534,139534,6.35],[139535,139535,6.76],[139536,139536,9.87],[139537,139537,8.38],[139538,139538,10.41],[139539,139539,3.56],[139540,139540,8.56],[139541,139541,6.62],[139542,139542,12.89],[139543,139543,9.41],[139544,139544,9.09],[139545,139546,6.62],[139547,139547,10.38],[139548,139548,9.61],[139549,139549,6.62],[139550,139550,6.96],[139551,139551,7.34],[139552,139552,12.41],[139553,139553,16.53],[139554,139554,10.74],[139555,139555,7.94],[139556,139556,6.62],[139557,139557,5.63],[139558,139558,9],[139559,139559,8.75],[139560,139560,7.99],[139561,139561,4.4],[139562,139562,7.62],[139563,139563,7.52],[139564,139564,10.45],[139565,139565,7.89],[139566,139566,7.9],[139567,139567,6.9],[139568,139568,8.25],[139569,139569,10.11],[139570,139570,7.3],[139571,139571,11.79],[139572,139572,7.67],[139573,139573,7.1],[139574,139574,6.19],[139575,139575,4.7],[139576,139576,5.51],[139577,139577,7.26],[139578,139578,10.27],[139579,139579,18.04],[139580,139580,7.4],[139581,139581,5.94],[139582,139582,5.16],[139583,139583,7.9],[139584,139584,10.15],[139585,139585,7.95],[139586,139587,5.87],[139588,139588,6.85],[139589,139589,7.84],[139590,139590,6.39],[139591,139591,5.66],[139592,139592,3.22],[139593,139593,3.75],[139594,139594,7.3],[139595,139595,7.67],[139596,139596,8.91],[139597,139597,9.7],[139598,139598,4.58],[139599,139602,11],[139603,139604,8.25],[139605,139610,8.81],[139611,139614,11],[139615,139615,4.18],[139616,139616,3.17],[139617,139617,6.49],[139618,139618,9.21],[139619,139619,9.95],[139620,139620,7.19],[139621,139621,10.1],[139622,139622,13.34],[139623,139623,16.06],[139624,139624,9.59],[139625,139625,6.89],[139626,139626,9.38],[139627,139627,12.62],[139628,139628,5.87],[139629,139629,7.61],[139630,139630,8.24],[139631,139631,9.47],[139632,139632,3.18],[139633,139633,6.36],[139634,139634,9.01],[139635,139635,8.57],[139636,139636,5.69],[139637,139637,8.6],[139638,139638,11.78],[139639,139639,14.43],[139640,139640,9.18],[139641,139641,6.75],[139642,139642,9.16],[139643,139643,12.34],[139644,139644,3.18],[139645,139645,5.63],[139646,139646,6.92],[139647,139647,10.27],[139648,139648,11.45],[139649,139649,8.24],[139650,139650,11.45],[139651,139651,7.61],[139652,139652,4.88],[139653,139653,7.17],[139654,139654,6.21],[139655,139664,11],[139665,139665,5.5],[139666,139666,11],[139667,139667,5.5],[139668,139668,11],[139669,139669,5.5],[139670,139675,11],[139676,139687,6.62],[139688,139688,5.5],[139689,139689,11],[139690,139690,10.87],[139691,139693,6.62],[139694,139694,11],[139695,139695,6.62],[139696,139698,9.51],[139699,139699,11],[139700,139700,9.51],[139701,139701,11],[139702,139703,9.51],[139704,139705,11],[139706,139707,6.62],[139708,139708,9.51],[139709,139711,6.62],[139712,139712,9.51],[139713,139715,6.62],[139716,139718,11],[139719,139722,6.62],[139723,139724,11],[139725,139725,9.68],[139726,139726,6.62],[139727,139727,9.56],[139728,139728,11],[139729,139729,9.51],[139730,139730,10.24],[139731,139731,9.51],[139732,139732,10.24],[139733,139741,6.62],[139742,139743,7.1],[139744,139744,11],[139745,139745,7.1],[139746,139746,11],[139747,139747,7.1],[139748,139754,11],[139755,139759,6.62],[139760,139760,9.51],[139761,139764,6.62],[139765,139765,11],[139766,139775,6.62],[139776,139776,6.93],[139777,139777,5.16],[139778,139778,6.99],[139779,139779,5.78],[139780,139780,5.88],[139781,139781,7.89],[139782,139782,8],[139783,139783,7.7],[139784,139784,6.34],[139785,139785,6.73],[139786,139786,5.6],[139787,139787,6.34],[139788,139788,6.48],[139789,139789,5.6],[139790,139790,5.74],[139791,139791,9],[139792,139792,8.75],[139793,139793,8],[139794,139794,9],[139795,139795,8.75],[139796,139796,6.58],[139797,139797,3.97],[139798,139798,8.75],[139799,139799,5.76],[139800,139800,3.9],[139801,139801,4],[139802,139802,9],[139803,139803,8.23],[139804,139804,7.97],[139805,139805,5.7],[139806,139806,11],[139807,139807,10.77],[139808,139808,6.57],[139809,139809,6.61],[139810,139810,6.66],[139811,139811,2.74],[139812,139812,5.2],[139813,139813,3.8],[139814,139814,5.78],[139815,139816,6.53],[139817,139817,7.94],[139818,139818,5.84],[139819,139819,6.99],[139820,139820,10.06],[139821,139821,12.36],[139822,139822,7.46],[139823,139823,10.16],[139824,139824,12.83],[139825,139825,6.58],[139826,139826,6.91],[139827,139827,6.57],[139828,139828,6.64],[139829,139829,6.57],[139830,139830,3.7],[139831,139831,6.33],[139832,139832,6.19],[139833,139833,6.33],[139834,139834,6.38],[139835,139835,6.16],[139836,139837,6.05],[139838,139838,5.97],[139839,139839,6.42],[139840,139840,4.29],[139841,139841,6.32],[139842,139842,6.38],[139843,139843,6.43],[139844,139844,7.38],[139845,139845,7.66],[139846,139846,6.92],[139847,139847,6.72],[139848,139848,9],[139849,139849,6.04],[139850,139850,6.64],[139851,139851,7.38],[139852,139852,5.97],[139853,139853,6.63],[139854,139854,6.57],[139855,139855,6.52],[139856,139856,6.16],[139857,139857,7.02],[139858,139859,6.96],[139860,139861,8.4],[139862,139862,6.36],[139863,139863,6.55],[139864,139864,6.48],[139865,139865,6.69],[139866,139866,6.81],[139867,139867,7.11],[139868,139868,7],[139869,139869,6.19],[139870,139870,6.32],[139871,139871,6.49],[139872,139873,9],[139874,139874,6.2],[139875,139875,6.52],[139876,139877,9],[139878,139878,6.32],[139879,139879,6.2],[139880,139880,6.84],[139881,139881,6.48],[139882,139882,8.07],[139883,139883,7.71],[139884,139884,3.94],[139885,139885,6.09],[139886,139887,6.2],[139888,139889,6.04],[139890,139890,6.2],[139891,139891,6.24],[139892,139892,6.41],[139893,139893,6.39],[139894,139895,6.66],[139896,139896,6.17],[139897,139897,6.34],[139898,139898,6.24],[139899,139899,6.36],[139900,139900,6.56],[139901,139901,6.36],[139902,139902,6.44],[139903,139903,6.4],[139904,139904,6.68],[139905,139905,6.36],[139906,139907,6.95],[139908,139908,7.08],[139909,139909,6.94],[139910,139911,7.29],[139912,139912,7.34],[139913,139913,7.14],[139914,139915,6.18],[139916,139917,6.4],[139918,139918,6.7],[139919,139920,7.19],[139921,139922,7.17],[139923,139924,6.72],[139925,139925,7.96],[139926,139926,8.2],[139927,139927,7.83],[139928,139928,7.94],[139929,139929,8.32],[139930,139930,8.09],[139931,139931,7.9],[139932,139932,8.37],[139933,139933,8.31],[139934,139934,8.62],[139935,139935,8.36],[139936,139936,8.06],[139937,139937,7.87],[139938,139941,8.26],[139942,139942,3.63],[139943,139943,3.67],[139944,139944,6.86],[139945,139945,8.02],[139946,139946,6.85],[139947,139947,8.31],[139948,139948,8.53],[139949,139949,8.56],[139950,139950,9.61],[139951,139951,9.2],[139952,139953,6.96],[139954,139955,8.15],[139956,139957,7.73],[139958,139959,8.08],[139960,139960,6.55],[139961,139961,7.51],[139962,139962,5.28],[139963,139964,7.66],[139965,139965,7.42],[139966,139966,8.16],[139967,139967,6.94],[139968,139969,7.38],[139970,139971,7.05],[139972,139972,4.19],[139973,139973,4.85],[139974,139974,4.93],[139975,139975,6.94],[139976,139976,8.5],[139977,139978,8.14],[139979,139980,7.96],[139981,139981,6.43],[139982,139983,6.98],[139984,139985,7.13],[139986,139987,6.26],[139988,139988,6.04],[139989,139989,6.75],[139990,139991,6.63],[139992,139993,10.65],[139994,139995,7.16],[139996,139997,7.11],[139998,139999,7.36],[140000,140000,7.33],[140001,140001,7.21],[140002,140002,7.55],[140003,140003,7.3],[140004,140004,7.38],[140005,140005,7.41],[140006,140006,7.44],[140007,140007,7.55],[140008,140008,7.91],[140009,140009,7.57],[140010,140010,8.23],[140011,140011,8.42],[140012,140012,8.49],[140013,140013,8.54],[140014,140014,4.52],[140015,140015,11],[140016,140016,10.12],[140017,140017,10.33],[140018,140018,7.15],[140019,140019,6.34],[140020,140020,5.6],[140021,140022,6.34],[140023,140023,5.6],[140024,140024,6.34],[140025,140025,6.95],[140026,140026,7.15],[140027,140027,6.34],[140028,140028,5.6],[140029,140029,6.34],[140030,140030,5.6],[140031,140031,5.78],[140032,140033,6.62],[140034,140034,6.6],[140035,140035,8.74],[140036,140036,6.62],[140037,140037,8.74],[140038,140038,7.3],[140039,140039,11],[140040,140047,6.62],[140048,140048,6.2],[140049,140049,6.62],[140050,140050,11],[140051,140051,6.62],[140052,140052,9.51],[140053,140053,6.62],[140054,140055,12.1],[140056,140056,11],[140057,140057,6.62],[140058,140059,11],[140060,140063,6.62],[140064,140065,6.64],[140066,140067,9.51],[140068,140068,8.74],[140069,140069,11],[140070,140070,13.35],[140071,140071,11],[140072,140072,6.62],[140073,140074,11],[140075,140075,13.35],[140076,140076,10.19],[140077,140077,10.85],[140078,140078,6.86],[140079,140081,6.04],[140082,140082,9.78],[140083,140084,6.04],[140085,140085,6.62],[140086,140086,10.19],[140087,140092,6.62],[140093,140093,11],[140094,140094,6.62],[140095,140096,7.51],[140097,140100,6.62],[140101,140102,6.6],[140103,140105,6.62],[140106,140106,6.6],[140107,140109,6.62],[140110,140111,6.6],[140112,140112,6.62],[140113,140113,6.6],[140114,140116,6.62],[140117,140118,6.6],[140119,140124,6.62],[140125,140125,6.6],[140126,140128,6.62],[140129,140130,6.6],[140131,140133,6.62],[140134,140135,6.6],[140136,140137,6.62],[140138,140138,6.6],[140139,140144,6.62],[140145,140146,6.6],[140147,140154,6.62],[140155,140155,7.36],[140156,140156,9.58],[140157,140157,3.48],[140158,140158,10.33],[140159,140159,4.08],[140160,140163,6.62],[140164,140164,8.63],[140165,140165,7.52],[140166,140166,7.42],[140167,140168,11],[140169,140170,6.62],[140171,140171,11],[140172,140172,8.88],[140173,140173,8.65],[140174,140174,8.22],[140175,140178,7.24],[140179,140179,10.04],[140180,140180,10.19],[140181,140181,6.62],[140182,140182,5.19],[140183,140184,8.67],[140185,140186,8.97],[140187,140205,11],[140206,140206,6.62],[140207,140207,3.46],[140208,140209,11],[140210,140211,16.37],[140212,140214,10.19],[140215,140215,7.07],[140216,140221,5.54],[140222,140236,11],[140237,140237,10.97],[140238,140238,11],[140239,140239,9.43],[140240,140240,5.62],[140241,140241,5.96],[140242,140243,5.97],[140244,140245,11.34],[140246,140246,10.54],[140247,140249,10.73],[140250,140257,11],[140258,140258,12.58],[140259,140259,10.01],[140260,140260,12.03],[140261,140261,11.2],[140262,140262,10.19],[140263,140263,8.78],[140264,140319,11],[140320,140320,6.6],[140321,140321,11],[140322,140322,6.6],[140323,140323,3.48],[140324,140324,6.6],[140325,140325,8.71],[140326,140326,4.44],[140327,140351,11],[140352,140357,6.64],[140358,140361,8.25],[140362,140362,6.64],[140363,140484,11],[140485,140485,9.41],[140486,140543,11],[140544,140544,7.79],[140545,140545,11],[140546,140546,7.79],[140547,140555,11],[140556,140556,7.79],[140557,140559,11],[140560,140560,7.79],[140561,140563,11],[140564,140564,7.79],[140565,140567,11],[140568,140568,7.79],[140569,140571,11],[140572,140572,7.79],[140573,140579,11],[140580,140580,7.79],[140581,140587,11],[140588,140588,7.79],[140589,140595,11],[140596,140596,7.79],[140597,140603,11],[140604,140604,7.79],[140605,140619,11],[140620,140623,6.62],[140624,140652,7.79],[140653,140660,11],[140661,140671,6.62],[140672,140672,7.79],[140673,140675,11],[140676,140676,7.79],[140677,140679,11],[140680,140680,7.79],[140681,140683,11],[140684,140684,7.79],[140685,140687,11],[140688,140690,7.79],[140691,140691,8.02],[140692,140693,11],[140694,140703,6.62],[140704,140705,6.64],[140706,140706,11],[140707,140713,9.51],[140714,140715,3.9],[140716,140716,11],[140717,140717,9.51],[140718,140720,6.62],[140721,140721,11],[140722,140722,10.89],[140723,140723,11],[140724,140724,6.06],[140725,140725,9.51],[140726,140726,9.68],[140727,140727,11],[140728,140729,5.83],[140730,140730,10.89],[140731,140731,6.62],[140732,140732,10.89],[140733,140733,11],[140734,140735,7.03],[140736,140736,11],[140737,140737,8.74],[140738,140738,6.62],[140739,140739,9.51],[140740,140740,10.89],[140741,140741,6.62],[140742,140742,7.95],[140743,140743,6.76],[140744,140744,9.51],[140745,140745,11],[140746,140746,9],[140747,140747,6.64],[140748,140748,6.54],[140749,140749,6.62],[140750,140750,11],[140751,140751,6.64],[140752,140755,11],[140756,140759,6.62],[140760,140761,6.64],[140762,140769,6.62],[140770,140773,11],[140774,140774,3.9],[140775,140782,6.62],[140783,140783,11],[140784,140794,6.62],[140795,140798,11],[140799,140799,6.62],[140800,140803,11],[140804,140804,6.62],[140805,140806,11],[140807,140808,6.62],[140809,140809,11],[140810,140813,6.62],[140814,140814,11],[140815,140815,9.51],[140816,140818,9.13],[140819,140819,6.62],[140820,140823,11],[140824,140827,6.62],[140828,140831,11],[140832,140846,6.62],[140847,140847,9.51],[140848,140855,9.9],[140856,140857,6.62],[140858,140858,11.23],[140859,140859,11.57],[140860,140860,10.08],[140861,140863,6.62],[140864,140864,8.25],[140865,140865,6.62],[140866,140866,8.25],[140867,140871,6.62],[140872,140883,11],[140884,140895,6.62],[140896,140896,5.84],[140897,140898,11],[140899,140899,7.22],[140900,140900,11],[140901,140901,6.53],[140902,140902,5.61],[140903,140905,11],[140906,140906,5.5],[140907,140907,8.25],[140908,140910,11],[140911,140911,5.5],[140912,140913,6.62],[140914,140925,11],[140926,140926,6.62],[140927,140927,11],[140928,140939,6.62],[140940,140940,9.67],[140941,140941,9.49],[140942,140942,9.45],[140943,140943,9.86],[140944,140946,6.62],[140947,140947,11],[140948,140956,6.62],[140957,140961,11],[140962,140962,9.81],[140963,140963,9.87],[140964,140964,9.71],[140965,140965,7.26],[140966,140966,8.15],[140967,140967,10.16],[140968,140968,5.86],[140969,140969,10.12],[140970,140971,11],[140972,140972,6.21],[140973,140973,8.54],[140974,140974,11.61],[140975,140975,12.3],[140976,140977,6.62],[140978,140978,6.63],[140979,141025,11],[141026,141026,7.7],[141027,141056,11],[141057,141057,10.72],[141058,141058,10.57],[141059,141059,10.72],[141060,141060,10.78],[141061,141061,11],[141062,141062,8.68],[141063,141063,8.69],[141064,141064,8.7],[141065,141065,7.59],[141066,141069,11],[141070,141070,8.66],[141071,141071,10.26],[141072,141072,10.02],[141073,141073,10.39],[141074,141074,10.72],[141075,141075,8.41],[141076,141076,9.31],[141077,141077,8.38],[141078,141078,8.37],[141079,141079,6.28],[141080,141080,7.44],[141081,141081,8.4],[141082,141082,8.36],[141083,141083,8.35],[141084,141084,8.29],[141085,141085,5.44],[141086,141086,6.07],[141087,141087,5.91],[141088,141088,6.35],[141089,141089,7.61],[141090,141090,8.65],[141091,141092,8.67],[141093,141093,8.69],[141094,141094,8.72],[141095,141095,8.73],[141096,141096,11],[141097,141097,9.06],[141098,141098,8.68],[141099,141099,9.25],[141100,141100,9.06],[141101,141101,9.16],[141102,141102,8.98],[141103,141103,9.14],[141104,141104,10.15],[141105,141105,8.19],[141106,141106,7.95],[141107,141107,8.24],[141108,141108,8.69],[141109,141109,8.71],[141110,141110,7.64],[141111,141111,8.53],[141112,141112,8.45],[141113,141113,8.71],[141114,141114,8.35],[141115,141115,7.78],[141116,141116,7.79],[141117,141117,7.5],[141118,141118,7.71],[141119,141119,9.09],[141120,141120,8.96],[141121,141122,8.68],[141123,141123,7.78],[141124,141124,7.56],[141125,141125,7.65],[141126,141126,7.58],[141127,141127,8.65],[141128,141128,8.66],[141129,141129,7.84],[141130,141130,8.7],[141131,141131,8.64],[141132,141132,11],[141133,141133,9.6],[141134,141134,11],[141135,141136,8.38],[141137,141138,8.35],[141139,141141,11],[141142,141142,8.63],[141143,141143,11],[141144,141144,3.18],[141145,141145,3.05],[141146,141146,4.57],[141147,141148,4.31],[141149,141150,7.35],[141151,141152,11],[141153,141153,8.05],[141154,141155,5.98],[141156,141156,10.01],[141157,141157,7.34],[141158,141159,8.36],[141160,141161,4.29],[141162,141163,3.49],[141164,141165,3.03],[141166,141167,5.6],[141168,141169,4.51],[141170,141171,2.57],[141172,141173,3.67],[141174,141203,8.67],[141204,141204,9.83],[141205,141207,11],[141208,141208,8.23],[141209,141209,10.16],[141210,141210,8.23],[141211,141211,10.1],[141212,141212,10.19],[141213,141214,10.21],[141215,141215,9.17],[141216,141216,9.6],[141217,141217,9.11],[141218,141219,10.16],[141220,141220,10.09],[141221,141221,10.23],[141222,141222,10.24],[141223,141223,5.09],[141224,141224,9.71],[141225,141226,9.2],[141227,141228,9.54],[141229,141230,7.65],[141231,141231,9.61],[141232,141232,11],[141233,141233,9.61],[141234,141234,8.36],[141235,141235,10.4],[141236,141236,8.48],[141237,141237,9.52],[141238,141238,8.48],[141239,141239,9.77],[141240,141240,10.63],[141241,141241,9.77],[141242,141242,9.14],[141243,141243,9.6],[141244,141244,10.19],[141245,141245,10.67],[141246,141246,10.1],[141247,141247,11],[141248,141248,6.03],[141249,141249,10.43],[141250,141250,7.58],[141251,141252,6.21],[141253,141254,6.62],[141255,141255,6.82],[141256,141257,10.1],[141258,141258,3.74],[141259,141259,9.22],[141260,141260,3.57],[141261,141261,9.22],[141262,141263,11],[141264,141264,8.21],[141265,141265,6.82],[141266,141266,6.57],[141267,141268,5.97],[141269,141270,9.93],[141271,141271,12.26],[141272,141273,7.58],[141274,141274,9.57],[141275,141275,9.42],[141276,141276,11.6],[141277,141278,9.33],[141279,141279,4.36],[141280,141280,6.06],[141281,141281,7.7],[141282,141283,9.64],[141284,141285,10.41],[141286,141287,4.64],[141288,141289,4.02],[141290,141291,5.1],[141292,141293,5.37],[141294,141295,2.56],[141296,141297,11.36],[141298,141299,10.71],[141300,141300,13.2],[141301,141311,17.31],[141312,141567,7.52],[141568,141575,10.19],[141576,141577,5.62],[141578,141583,10.19],[141584,141584,15.53],[141585,141585,10.19],[141586,141587,5.62],[141588,141619,10.19],[141620,141621,11],[141622,141623,9.51],[141624,141624,5.62],[141625,141625,9.51],[141626,141640,10.19],[141641,141641,5.62],[141642,141643,10.19],[141644,141645,5.62],[141646,141646,10.19],[141647,141647,5.62],[141648,141648,10.19],[141649,141649,5.62],[141650,141651,10.19],[141652,141653,5.62],[141654,141655,10.19],[141656,141657,5.62],[141658,141659,10.19],[141660,141661,5.62],[141662,141663,10.19],[141664,141665,5.62],[141666,141669,9.51],[141670,141677,10.19],[141678,141679,7.53],[141680,141685,10.19],[141686,141686,7.53],[141687,141687,10.19],[141688,141689,7.53],[141690,141690,10.19],[141691,141691,7.53],[141692,141693,10.19],[141694,141695,7.53],[141696,141696,4.01],[141697,141697,4.18],[141698,141698,3.45],[141699,141700,4.11],[141701,141702,4.92],[141703,141704,3.68],[141705,141706,4.35],[141707,141708,3.31],[141709,141712,3.3],[141713,141713,4.02],[141714,141714,4.04],[141715,141716,7.25],[141717,141718,7.65],[141719,141720,7.13],[141721,141721,2.48],[141722,141722,3.05],[141723,141723,6.53],[141724,141725,6.51],[141726,141726,7.27],[141727,141727,6.03],[141728,141729,6.53],[141730,141733,6.03],[141734,141735,8.28],[141736,141743,6.53],[141744,141748,7.73],[141749,141749,9.56],[141750,141750,7.7],[141751,141751,7.72],[141752,141752,7.94],[141753,141753,7.72],[141754,141754,7.73],[141755,141755,7.74],[141756,141761,7.72],[141762,141762,9.41],[141763,141763,9.61],[141764,141768,8.22],[141769,141769,8.75],[141770,141772,8.23],[141773,141773,10.38],[141774,141774,7.15],[141775,141776,8.34],[141777,141779,7.56],[141780,141781,7.17],[141782,141783,8.44],[141784,141785,3.05],[141786,141787,4.66],[141788,141788,7.01],[141789,141789,7.12],[141790,141790,7.01],[141791,141791,7.41],[141792,141792,8.22],[141793,141793,7.19],[141794,141794,7.51],[141795,141797,7.3],[141798,141798,7.81],[141799,141799,6.99],[141800,141801,8.23],[141802,141802,7.89],[141803,141803,5.2],[141804,141805,9.89],[141806,141807,6.57],[141808,141809,7.79],[141810,141811,7.72],[141812,141812,9],[141813,141813,6.58],[141814,141814,6.34],[141815,141817,5.59],[141818,141819,7.43],[141820,141821,5.91],[141822,141823,5.2],[141824,141825,9.89],[141826,141826,9.92],[141827,141828,5.99],[141829,141830,6.55],[141831,141832,8.43],[141833,141833,7.33],[141834,141834,9.41],[141835,141835,7.18],[141836,141836,16.56],[141837,141839,6.72],[141840,141840,5.49],[141841,141841,8.01],[141842,141842,5.71],[141843,141843,5.49],[141844,141844,6.91],[141845,141845,5.49],[141846,141846,6.72],[141847,141847,7.43],[141848,141850,6.72],[141851,141851,7.02],[141852,141852,6.79],[141853,141853,7.56],[141854,141854,4.35],[141855,141855,3.67],[141856,141856,8.92],[141857,141857,3.59],[141858,141859,5.95],[141860,141860,5.99],[141861,141861,5.95],[141862,141862,5.99],[141863,141863,7.12],[141864,141864,7.02],[141865,141866,5.99],[141867,141868,5.97],[141869,141870,8.37],[141871,141871,5.04],[141872,141872,5.82],[141873,141873,5.96],[141874,141874,5.74],[141875,141875,8.85],[141876,141877,7.86],[141878,141880,9.89],[141881,141883,8.23],[141884,141885,5.63],[141886,141886,3.67],[141887,141887,6.77],[141888,141893,5.99],[141894,141895,4.27],[141896,141897,5.96],[141898,141899,5.62],[141900,141901,8.13],[141902,141903,6.55],[141904,141904,8.13],[141905,141906,6.71],[141907,141908,7.17],[141909,141910,8.28],[141911,141912,7.17],[141913,141913,6.67],[141914,141915,7.17],[141916,141917,8.12],[141918,141920,6.71],[141921,141921,5.97],[141922,141923,6.71],[141924,141925,7.34],[141926,141929,5.96],[141930,141933,5.98],[141934,141934,5.33],[141935,141936,5.98],[141937,141938,5.97],[141939,141939,5.99],[141940,141940,9.33],[141941,141941,10.82],[141942,141942,16.03],[141943,141943,6],[141944,141944,6.55],[141945,141946,7.25],[141947,141948,5.63],[141949,141951,5.97],[141952,141952,5.98],[141953,141956,5.97],[141957,141958,5.98],[141959,141959,6.06],[141960,141960,6.27],[141961,141962,5.98],[141963,141964,5.97],[141965,141965,6.06],[141966,141966,6.03],[141967,141968,5.99],[141969,141975,5.97],[141976,141978,5.98],[141979,141980,5.97],[141981,141982,5.98],[141983,141983,6.07],[141984,141984,6],[141985,141986,7.51],[141987,141987,8.87],[141988,141988,5.99],[141989,141989,10.29],[141990,141993,6.75],[141994,141994,5.63],[141995,141995,5.76],[141996,141996,6.06],[141997,141997,6.11],[141998,141998,5.97],[141999,142001,6.08],[142002,142002,6.06],[142003,142006,6.08],[142007,142007,6.02],[142008,142008,6.03],[142009,142009,6.02],[142010,142010,6.03],[142011,142012,9.76],[142013,142014,6.21],[142015,142022,5.05],[142023,142026,6],[142027,142028,5.05],[142029,142030,10.48],[142031,142032,6.21],[142033,142034,6.2],[142035,142038,5.05],[142039,142040,9.35],[142041,142043,6.57],[142044,142044,6.71],[142045,142045,6.57],[142046,142046,4.32],[142047,142049,7.58],[142050,142050,7.55],[142051,142051,7.52],[142052,142052,7.55],[142053,142053,9.21],[142054,142054,7.54],[142055,142057,7.58],[142058,142059,7.62],[142060,142061,5.63],[142062,142062,3.44],[142063,142064,3.13],[142065,142065,3.29],[142066,142066,4.29],[142067,142067,5.98],[142068,142068,3.84],[142069,142069,5.26],[142070,142070,2.48],[142071,142072,10.68],[142073,142074,5.97],[142075,142075,5.48],[142076,142076,3.9],[142077,142077,4.52],[142078,142079,3.23],[142080,142083,6.62],[142084,142084,12.07],[142085,142087,11],[142088,142091,6.62],[142092,142092,12.07],[142093,142093,6.45],[142094,142097,6.6],[142098,142105,6.62],[142106,142108,11],[142109,142110,2.64],[142111,142114,10.01],[142115,142115,10.19],[142116,142116,13.28],[142117,142118,11],[142119,142120,5.98],[142121,142121,11],[142122,142123,3.93],[142124,142125,9.26],[142126,142127,6.56],[142128,142129,10.19],[142130,142130,13.2],[142131,142131,17.31],[142132,142134,10.19],[142135,142135,15.53],[142136,142148,10.19],[142149,142150,10.21],[142151,142156,10.19],[142157,142160,11],[142161,142161,8.73],[142162,142162,7.7],[142163,142164,9.51],[142165,142223,11],[142224,142225,13.57],[142226,142335,11],[142336,142336,8.99],[142337,142337,9.32],[142338,142338,11.69],[142339,142339,10.54],[142340,142340,11.78],[142341,142341,7.24],[142342,142342,11.69],[142343,142343,9.39],[142344,142344,11.21],[142345,142346,11.79],[142347,142347,5.73],[142348,142348,12.06],[142349,142349,4.89],[142350,142350,11.42],[142351,142351,9.2],[142352,142353,6.26],[142354,142354,8.46],[142355,142355,6.26],[142356,142356,8.84],[142357,142357,11.69],[142358,142358,9.39],[142359,142359,8.76],[142360,142360,9.4],[142361,142361,8.76],[142362,142362,9.51],[142363,142363,9],[142364,142364,9.24],[142365,142365,10],[142366,142366,9.43],[142367,142367,8.16],[142368,142368,7.69],[142369,142369,10.3],[142370,142370,8.56],[142371,142371,9.43],[142372,142372,8],[142373,142373,9.35],[142374,142374,9.46],[142375,142375,11.33],[142376,142376,11.44],[142377,142377,14.34],[142378,142378,10.2],[142379,142379,6.61],[142380,142380,4.27],[142381,142381,8.71],[142382,142382,10.88],[142383,142383,11],[142384,142384,7.78],[142385,142385,8],[142386,142386,10.12],[142387,142387,8.78],[142388,142388,9.86],[142389,142389,5.59],[142390,142390,10.12],[142391,142391,7.57],[142392,142392,9.17],[142393,142394,10.05],[142395,142395,5.2],[142396,142396,10.11],[142397,142397,4.37],[142398,142398,9.58],[142399,142399,7.95],[142400,142400,5.42],[142401,142401,5.57],[142402,142402,7.29],[142403,142403,5.35],[142404,142404,7.06],[142405,142405,10.12],[142406,142406,8.12],[142407,142407,8.17],[142408,142408,7.69],[142409,142409,6.85],[142410,142410,7.72],[142411,142411,7.78],[142412,142412,7.36],[142413,142413,7.68],[142414,142414,8.21],[142415,142415,7.03],[142416,142416,6.74],[142417,142417,7.94],[142418,142418,6.64],[142419,142419,8.21],[142420,142420,6.2],[142421,142421,7.3],[142422,142422,7.94],[142423,142423,8.62],[142424,142424,9.38],[142425,142425,11.42],[142426,142426,8.77],[142427,142427,5.31],[142428,142428,3.43],[142429,142429,7.08],[142430,142430,8.48],[142431,142431,11],[142432,142432,6.72],[142433,142433,3.06],[142434,142434,6.72],[142435,142435,6.12],[142436,142436,7.34],[142437,142437,4.88],[142438,142438,3.06],[142439,142439,7.94],[142440,142440,5.5],[142441,142441,7.94],[142442,142442,5.5],[142443,142443,6.72],[142444,142444,4.88],[142445,142445,8.45],[142446,142447,6.62],[142448,142448,9.88],[142449,142449,7.11],[142450,142450,11.62],[142451,142451,9.63],[142452,142452,5.19],[142453,142453,7.25],[142454,142454,5.55],[142455,142455,6.35],[142456,142456,7.58],[142457,142458,6.62],[142459,142459,4.48],[142460,142461,6.62],[142462,142462,6.45],[142463,142463,6.6],[142464,142464,6.96],[142465,142465,6.31],[142466,142466,7.15],[142467,142467,6.34],[142468,142468,5.76],[142469,142469,4.76],[142470,142470,8.95],[142471,142471,7.24],[142472,142472,7.07],[142473,142473,5.44],[142474,142474,6.12],[142475,142475,5.27],[142476,142476,6.29],[142477,142477,4.99],[142478,142478,8.15],[142479,142479,7.01],[142480,142480,8.6],[142481,142481,6.65],[142482,142482,3.12],[142483,142483,2.84],[142484,142484,6.81],[142485,142485,5.87],[142486,142486,6.39],[142487,142487,5.14],[142488,142488,8.8],[142489,142489,8.21],[142490,142490,8.36],[142491,142491,6.95],[142492,142492,6.29],[142493,142493,5.17],[142494,142494,8.59],[142495,142495,6.65],[142496,142496,8.04],[142497,142497,6.86],[142498,142498,6.65],[142499,142499,5.83],[142500,142500,6.95],[142501,142501,5.28],[142502,142502,6.71],[142503,142503,6.24],[142504,142504,6.23],[142505,142505,5.59],[142506,142506,8.84],[142507,142507,7.97],[142508,142508,6.45],[142509,142509,5.82],[142510,142510,9.17],[142511,142511,7.7],[142512,142512,11.35],[142513,142513,8.98],[142514,142514,7.12],[142515,142515,5.57],[142516,142516,6.09],[142517,142517,6.29],[142518,142518,6.93],[142519,142519,6.07],[142520,142520,6.29],[142521,142521,5.17],[142522,142522,7.12],[142523,142523,5.57],[142524,142524,8.67],[142525,142525,7.77],[142526,142526,8.98],[142527,142527,8.19],[142528,142528,7.14],[142529,142529,5.92],[142530,142530,11.35],[142531,142531,8.98],[142532,142532,6.42],[142533,142533,5.48],[142534,142534,4.85],[142535,142535,4.18],[142536,142536,6.04],[142537,142537,5.77],[142538,142539,6.29],[142540,142540,6.47],[142541,142541,5.61],[142542,142542,6.79],[142543,142543,6.05],[142544,142544,5.76],[142545,142545,4.78],[142546,142547,6.29],[142548,142548,3.93],[142549,142549,4.06],[142550,142550,6.59],[142551,142551,5.69],[142552,142552,8.04],[142553,142553,6.86],[142554,142554,8.95],[142555,142555,7.24],[142556,142557,6.64],[142558,142558,6.12],[142559,142559,5.17],[142560,142560,9.06],[142561,142561,8.01],[142562,142562,7.24],[142563,142563,6.43],[142564,142564,5.87],[142565,142565,8.24],[142566,142566,8.01],[142567,142567,9.58],[142568,142569,7.62],[142570,142570,11.49],[142571,142571,9],[142572,142572,6.51],[142573,142573,8.36],[142574,142574,7.27],[142575,142577,0],[142578,142578,8.03],[142579,142579,6.76],[142580,142584,11],[142585,142585,9.2],[142586,142587,6.09],[142588,142588,9.2],[142589,142589,3.81],[142590,142590,4.69],[142591,142591,3.3],[142592,142639,11],[142640,142640,4.55],[142641,142641,9.42],[142642,142642,9.43],[142643,142644,7.47],[142645,142645,7.03],[142646,142646,6.65],[142647,142648,6.94],[142649,142650,7.12],[142651,142651,7.7],[142652,142652,8.73],[142653,142653,7.96],[142654,142654,5.48],[142655,142655,7.96],[142656,142657,9.43],[142658,142658,3.13],[142659,142659,7.03],[142660,142660,7.97],[142661,142661,7.03],[142662,142662,7.69],[142663,142663,8.01],[142664,142664,8.16],[142665,142665,5.25],[142666,142666,5.62],[142667,142667,6.9],[142668,142668,8.62],[142669,142669,5.9],[142670,142670,7.12],[142671,142671,3.11],[142672,142672,8.41],[142673,142673,3],[142674,142674,6.06],[142675,142675,4.55],[142676,142677,9.43],[142678,142678,7.97],[142679,142679,3.21],[142680,142680,7.81],[142681,142682,9.43],[142683,142683,8.32],[142684,142684,5.71],[142685,142685,7.03],[142686,142686,8.32],[142687,142687,7.12],[142688,142688,7.38],[142689,142689,7.75],[142690,142690,5.25],[142691,142691,9.2],[142692,142692,4.99],[142693,142693,9.2],[142694,142694,7.16],[142695,142695,8.48],[142696,142702,11],[142703,142703,3.39],[142704,142704,8.46],[142705,142718,11],[142719,142719,0],[142720,142720,13.71],[142721,142721,11.96],[142722,142722,11.68],[142723,142723,9.72],[142724,142724,10.23],[142725,142725,10.02],[142726,142726,8.53],[142727,142728,8.7],[142729,142729,10.16],[142730,142730,8.91],[142731,142731,10.11],[142732,142732,11.04],[142733,142733,10.88],[142734,142734,10.89],[142735,142735,15],[142736,142736,17.58],[142737,142737,9],[142738,142738,9.58],[142739,142739,11.77],[142740,142740,11.18],[142741,142741,8.1],[142742,142742,11.18],[142743,142751,11],[142752,142752,10.23],[142753,142753,12.02],[142754,142754,11.93],[142755,142755,10.23],[142756,142756,11.86],[142757,142758,10.23],[142759,142759,11],[142760,142762,8.53],[142763,142763,8.6],[142764,142764,8.53],[142765,142765,10.04],[142766,142766,8.7],[142767,142767,11],[142768,142772,12.4],[142773,142773,13.66],[142774,142774,12.4],[142775,142775,11],[142776,142776,17.07],[142777,142777,17.29],[142778,142778,17.25],[142779,142779,17.12],[142780,142780,20.36],[142781,142781,16.67],[142782,142782,16.88],[142783,142783,11],[142784,142790,9.36],[142791,142791,11],[142792,142792,7.92],[142793,142793,10.17],[142794,142794,10.14],[142795,142795,7.92],[142796,142796,10.08],[142797,142798,7.92],[142799,142799,11],[142800,142800,9.84],[142801,142801,12.09],[142802,142802,12.06],[142803,142803,9.84],[142804,142804,11.99],[142805,142806,9.84],[142807,142807,11],[142808,142808,6.42],[142809,142809,9.17],[142810,142810,6.67],[142811,142811,7.01],[142812,142812,6.61],[142813,142813,8.84],[142814,142814,6.42],[142815,142815,11],[142816,142847,0],[142848,142848,2.62],[142849,142849,2.67],[142850,142851,1.9],[142852,142852,2.24],[142853,142853,2.22],[142854,142854,4.17],[142855,142855,4.21],[142856,142856,3.35],[142857,142858,3.26],[142859,142859,3.89],[142860,142861,2.57],[142862,142862,11.06],[142863,142863,13.26],[142864,142865,12.84],[142866,142866,1.72],[142867,142867,6.06],[142868,142869,7.74],[142870,142870,6.63],[142871,142871,3.66],[142872,142872,6.62],[142873,142873,11],[142874,142874,4.17],[142875,142875,7.33],[142876,142877,2.57],[142878,142879,7.33],[142880,142881,4.71],[142882,142885,4.91],[142886,142887,7.4],[142888,142889,6.94],[142890,142892,7.61],[142893,142893,7.33],[142894,142894,6.62],[142895,142895,2.58],[142896,142896,3.75],[142897,142897,3.08],[142898,142911,11],[142912,142912,5.5],[142913,143405,11],[143406,143407,17.6],[143408,143422,11],[143423,143423,5.5],[143424,143512,11],[143513,143514,0],[143515,143664,11],[143665,143715,9.51],[143716,143716,9.31],[143717,143758,9.51],[143759,143871,11],[143872,143899,9.51],[143900,143900,9.36],[143901,143967,11],[143968,143995,9.51],[143996,143998,11],[143999,143999,9.31],[144000,144255,11],[144256,144260,9.51],[144261,144265,11],[144266,144268,9.51],[144269,144272,11],[144273,144277,9.51],[144278,144280,11],[144281,144282,9.51],[144283,144294,11],[144295,144303,9.51],[144304,144307,11],[144308,144321,9.51],[144322,144322,11],[144323,144323,9.51],[144324,144324,11],[144325,144326,9.51],[144327,144327,9.31],[144328,144328,11],[144329,144330,9.51],[144331,144334,11],[144335,144336,9.51],[144337,144338,11],[144339,144339,9.51],[144340,144341,11],[144342,144342,9.51],[144343,144346,11],[144347,144349,9.51],[144350,150975,11],[150976,151039,9.67],[151040,172031,11],[172032,172034,6.79],[172035,172035,7.05],[172036,172036,6.76],[172037,172038,6.25],[172039,172039,6.93],[172040,172040,5.77],[172041,172042,5.97],[172043,172043,6.18],[172044,172045,6.52],[172046,172046,6.3],[172047,172047,6.4],[172048,172050,7.53],[172051,172051,6.48],[172052,172052,6.36],[172053,172053,7.01],[172054,172054,6.89],[172055,172057,5.85],[172058,172058,7.42],[172059,172060,6.42],[172061,172061,6.9],[172062,172062,5.65],[172063,172064,7.01],[172065,172065,6.65],[172066,172067,6.41],[172068,172068,4.94],[172069,172069,6.61],[172070,172071,5.72],[172072,172072,5.7],[172073,172074,6.73],[172075,172075,4.94],[172076,172076,6.29],[172077,172078,5.76],[172079,172079,5.44],[172080,172081,6.67],[172082,172082,6.02],[172083,172084,5.93],[172085,172085,6.62],[172086,172087,7.75],[172088,172088,6.68],[172089,172090,6.84],[172091,172091,6.29],[172092,172093,7.34],[172094,172094,6.73],[172095,172095,6.52],[172096,172097,6.74],[172098,172098,6.85],[172099,172100,6.3],[172101,172101,6.48],[172102,172102,6.82],[172103,172104,7.03],[172105,172105,6.19],[172106,172106,5.51],[172107,172108,6.38],[172109,172109,6.57],[172110,172111,6.85],[172112,172112,6.68],[172113,172114,7.07],[172115,172115,6.72],[172116,172117,6.79],[172118,172118,6.73],[172119,172120,6.4],[172121,172121,6.51],[172122,172122,6.9],[172123,172124,6.28],[172125,172125,6.75],[172126,172126,6.92],[172127,172128,8.81],[172129,172129,7.01],[172130,172131,6.31],[172132,172132,6.68],[172133,172133,6.7],[172134,172135,5.53],[172136,172136,6.73],[172137,172138,6.34],[172139,172139,6.69],[172140,172140,6.78],[172141,172142,6.5],[172143,172143,6.09],[172144,172145,6.34],[172146,172146,6.14],[172147,172148,5.83],[172149,172149,5.61],[172150,172150,6.43],[172151,172152,6.25],[172153,172153,6.08],[172154,172155,6.48],[172156,172156,5.8],[172157,172157,7.29],[172158,172159,5.99],[172160,172160,7.38],[172161,172161,6.63],[172162,172164,7.01],[172165,172165,6.17],[172166,172167,6.68],[172168,172168,6.19],[172169,172170,7.8],[172171,172171,6.45],[172172,172173,6.74],[172174,172174,6.27],[172175,172176,6.2],[172177,172177,5.61],[172178,172179,6.16],[172180,172180,6.51],[172181,172181,7.03],[172182,172182,6.81],[172183,172183,5.57],[172184,172184,6.63],[172185,172186,6.54],[172187,172187,6.34],[172188,172189,6.46],[172190,172190,5.87],[172191,172191,6.68],[172192,172193,6.42],[172194,172194,6.12],[172195,172195,6.04],[172196,172197,5.96],[172198,172198,6.51],[172199,172200,7.03],[172201,172202,5.72],[172203,172203,5.87],[172204,172205,6.73],[172206,172206,6.51],[172207,172208,5.95],[172209,172209,5.7],[172210,172211,6.51],[172212,172212,5.99],[172213,172213,6.96],[172214,172215,6.58],[172216,172216,7.01],[172217,172217,6.15],[172218,172219,6.26],[172220,172220,7.53],[172221,172221,6.68],[172222,172223,6.16],[172224,172224,6.41],[172225,172226,6.6],[172227,172227,6.35],[172228,172229,7.19],[172230,172230,6.4],[172231,172232,5.8],[172233,172233,5.85],[172234,172235,7.03],[172236,172236,5.8],[172237,172237,6.09],[172238,172239,6.12],[172240,172240,5.76],[172241,172241,7.24],[172242,172244,6.17],[172245,172246,5.81],[172247,172247,5.9],[172248,172248,5.3],[172249,172250,6.84],[172251,172251,6.69],[172252,172253,6.02],[172254,172254,6.16],[172255,172258,6.69],[172259,172260,5.94],[172261,172261,6.02],[172262,172262,5.93],[172263,172264,5.53],[172265,172265,5.66],[172266,172268,6.51],[172269,172269,5.66],[172270,172270,6.23],[172271,172272,6.13],[172273,172273,6.98],[172274,172275,5.96],[172276,172276,6.35],[172277,172278,5.7],[172279,172279,5.94],[172280,172281,6.12],[172282,172282,6.16],[172283,172284,7.03],[172285,172285,6.16],[172286,172287,6.86],[172288,172288,7.41],[172289,172290,6.09],[172291,172291,6.79],[172292,172293,6.28],[172294,172294,6.23],[172295,172295,6.89],[172296,172297,5.73],[172298,172298,6.73],[172299,172300,5.9],[172301,172301,6.25],[172302,172303,6.21],[172304,172304,5.61],[172305,172306,5.48],[172307,172307,5.91],[172308,172308,5.39],[172309,172310,5.59],[172311,172311,6.08],[172312,172313,5.53],[172314,172314,5.61],[172315,172316,5.42],[172317,172317,5.59],[172318,172319,6.29],[172320,172320,6.26],[172321,172321,5.48],[172322,172323,5.91],[172324,172324,5.48],[172325,172325,6.15],[172326,172327,5.3],[172328,172328,6.54],[172329,172329,5.61],[172330,172331,5.87],[172332,172332,5.92],[172333,172334,6.19],[172335,172335,5.91],[172336,172336,6.49],[172337,172338,6.51],[172339,172339,6.46],[172340,172341,6.76],[172342,172342,5.91],[172343,172344,5.73],[172345,172348,5.91],[172349,172349,6.19],[172350,172352,5.91],[172353,172354,6.15],[172355,172355,6.06],[172356,172356,5.72],[172357,172358,5.58],[172359,172359,5.83],[172360,172361,5.7],[172362,172362,6.68],[172363,172363,6.32],[172364,172365,7.03],[172366,172366,6.46],[172367,172368,6.74],[172369,172369,5.91],[172370,172371,5.35],[172372,172372,6.09],[172373,172374,6.3],[172375,172375,6.19],[172376,172377,6.16],[172378,172378,7.11],[172379,172379,6.08],[172380,172382,6.16],[172383,172384,6.68],[172385,172385,6.57],[172386,172386,5.61],[172387,172388,5.84],[172389,172389,6.4],[172390,172391,6.08],[172392,172392,5.43],[172393,172394,5.32],[172395,172395,6.16],[172396,172396,5.95],[172397,172398,6.69],[172399,172399,6.2],[172400,172400,5.52],[172401,172402,6.45],[172403,172403,5.87],[172404,172405,7.33],[172406,172406,6.34],[172407,172408,5.74],[172409,172410,5.91],[172411,172411,6.28],[172412,172412,6.39],[172413,172413,6.51],[172414,172415,6.74],[172416,172416,6.68],[172417,172418,6.53],[172419,172419,6.05],[172420,172421,6.15],[172422,172422,6.04],[172423,172424,5.92],[172425,172425,6.3],[172426,172426,6.2],[172427,172428,6.26],[172429,172429,6.2],[172430,172431,5.76],[172432,172432,5.72],[172433,172433,6.02],[172434,172436,6.34],[172437,172438,5.96],[172439,172441,6.16],[172442,172442,5.93],[172443,172444,6.16],[172445,172445,6.4],[172446,172446,6.84],[172447,172448,6.7],[172449,172449,6.29],[172450,172451,6.1],[172452,172452,6.28],[172453,172454,5.9],[172455,172455,6.28],[172456,172458,5.72],[172459,172459,6.21],[172460,172461,5.5],[172462,172462,5.96],[172463,172464,6.02],[172465,172465,6.53],[172466,172467,6.6],[172468,172468,6.38],[172469,172470,6.34],[172471,172471,5.91],[172472,172473,5.09],[172474,172474,6.51],[172475,172475,5.39],[172476,172477,5.37],[172478,172478,5.36],[172479,172479,6.88],[172480,172481,5.64],[172482,172482,6.15],[172483,172485,5.84],[172486,172486,6.6],[172487,172487,6.59],[172488,172489,6.25],[172490,172490,6.09],[172491,172492,5.51],[172493,172493,7.01],[172494,172494,6.51],[172495,172496,7.01],[172497,172497,6.16],[172498,172499,5.62],[172500,172500,6.6],[172501,172502,6.17],[172503,172503,5.91],[172504,172505,5.49],[172506,172506,6.56],[172507,172508,6.41],[172509,172510,5.72],[172511,172512,6.59],[172513,172513,5.72],[172514,172514,6.18],[172515,172516,6.01],[172517,172517,6.51],[172518,172518,6.88],[172519,172520,7.07],[172521,172521,6.51],[172522,172522,7.19],[172523,172524,6.13],[172525,172525,5.8],[172526,172526,5.85],[172527,172528,5.61],[172529,172529,5.43],[172530,172530,6.89],[172531,172532,6.74],[172533,172533,6.51],[172534,172535,6.15],[172536,172536,6.27],[172537,172538,6.09],[172539,172539,5.46],[172540,172541,5.91],[172542,172542,6.2],[172543,172543,6.39],[172544,172545,5.84],[172546,172546,5.85],[172547,172548,5.96],[172549,172549,6.36],[172550,172550,5.8],[172551,172552,5.53],[172553,172553,6.01],[172554,172554,6.78],[172555,172556,4.99],[172557,172557,7.03],[172558,172558,6.6],[172559,172560,6.31],[172561,172561,5.92],[172562,172563,5.58],[172564,172564,6.51],[172565,172566,5.91],[172567,172568,6.57],[172569,172569,6.23],[172570,172570,6.28],[172571,172572,6.07],[172573,172573,5.77],[172574,172574,6.02],[172575,172576,6.89],[172577,172577,6.4],[172578,172578,5.82],[172579,172580,5.14],[172581,172581,5.04],[172582,172582,5.96],[172583,172584,6.52],[172585,172585,7.4],[172586,172586,6.63],[172587,172589,5.82],[172590,172591,6.08],[172592,172593,6.58],[172594,172594,5.93],[172595,172596,6.7],[172597,172597,5.93],[172598,172599,6.08],[172600,172601,5.95],[172602,172603,6.43],[172604,172604,6.34],[172605,172606,5.68],[172607,172607,6.02],[172608,172608,6.92],[172609,172610,5.25],[172611,172611,6.3],[172612,172613,6.74],[172614,172614,6.15],[172615,172616,6.2],[172617,172617,6.04],[172618,172618,5.58],[172619,172620,6.14],[172621,172621,6.69],[172622,172622,6.46],[172623,172624,5.86],[172625,172625,6.18],[172626,172626,6.65],[172627,172628,6.27],[172629,172629,6.65],[172630,172630,5.48],[172631,172632,5.76],[172633,172633,6.2],[172634,172635,6.08],[172636,172636,6.09],[172637,172638,6.15],[172639,172639,5.76],[172640,172640,6.7],[172641,172642,5.91],[172643,172643,6.47],[172644,172644,6.51],[172645,172646,5.74],[172647,172647,5.26],[172648,172649,6.19],[172650,172650,7.11],[172651,172652,5.7],[172653,172653,6.72],[172654,172656,5.77],[172657,172657,6.64],[172658,172660,6.78],[172661,172661,5.97],[172662,172663,6.08],[172664,172664,6.38],[172665,172665,5.79],[172666,172667,6.51],[172668,172668,6.24],[172669,172670,6.48],[172671,172671,6.73],[172672,172672,6.82],[172673,172675,6.13],[172676,172677,6.05],[172678,172678,6.38],[172679,172680,5.69],[172681,172681,5.37],[172682,172683,6.03],[172684,172684,6.34],[172685,172685,6.27],[172686,172687,6.79],[172688,172688,6.17],[172689,172690,6.26],[172691,172691,6.1],[172692,172694,6.01],[172695,172695,6.79],[172696,172697,6.19],[172698,172698,6.64],[172699,172699,6.36],[172700,172701,6.58],[172702,172702,6.19],[172703,172704,6.28],[172705,172705,5.77],[172706,172706,6.08],[172707,172708,5.26],[172709,172709,6.01],[172710,172711,7.15],[172712,172712,5.69],[172713,172714,5.95],[172715,172715,5.27],[172716,172717,6.04],[172718,172718,5.7],[172719,172720,5.32],[172721,172721,5.46],[172722,172722,6.54],[172723,172724,6.08],[172725,172725,6.09],[172726,172728,6.51],[172729,172729,7.42],[172730,172731,5.61],[172732,172732,6.26],[172733,172733,6.98],[172734,172735,6.93],[172736,172736,6.24],[172737,172738,6.51],[172739,172739,7.01],[172740,172740,6.56],[172741,172742,6.96],[172743,172743,6.21],[172744,172745,6.47],[172746,172746,5.38],[172747,172748,6.41],[172749,172749,5.61],[172750,172751,5.64],[172752,172752,6.28],[172753,172754,6.68],[172755,172755,5.85],[172756,172756,5.7],[172757,172758,6.08],[172759,172759,6.13],[172760,172760,6.47],[172761,172762,6.35],[172763,172763,6.47],[172764,172765,6.4],[172766,172766,5.95],[172767,172768,6.41],[172769,172769,6.32],[172770,172771,6.08],[172772,172772,6.04],[172773,172774,5.6],[172775,172775,6.64],[172776,172777,5.66],[172778,172778,5.91],[172779,172780,6.59],[172781,172781,6.23],[172782,172783,5.96],[172784,172784,5.82],[172785,172787,7.09],[172788,172790,5.96],[172791,172791,5.84],[172792,172793,6.57],[172794,172795,6.19],[172796,172797,5.05],[172798,172799,6.57],[172800,172800,6.31],[172801,172802,6.74],[172803,172803,6.23],[172804,172805,5.25],[172806,172806,6.51],[172807,172808,6.74],[172809,172809,6.59],[172810,172811,6.57],[172812,172812,5.77],[172813,172814,6.96],[172815,172815,6.69],[172816,172816,5.72],[172817,172818,5.57],[172819,172819,6.06],[172820,172822,5.25],[172823,172823,6.01],[172824,172825,5.64],[172826,172826,6.01],[172827,172828,6.28],[172829,172829,5.74],[172830,172830,6.58],[172831,172832,5.65],[172833,172833,6.19],[172834,172835,6.07],[172836,172838,6.3],[172839,172839,5.96],[172840,172841,6.3],[172842,172842,5.49],[172843,172844,5.51],[172845,172845,5.75],[172846,172847,6.16],[172848,172848,5.91],[172849,172849,7.01],[172850,172852,6.08],[172853,172853,5.98],[172854,172855,6.51],[172856,172856,7.2],[172857,172858,5.61],[172859,172859,6.51],[172860,172860,5.96],[172861,172862,6.04],[172863,172863,6.91],[172864,172864,7.14],[172865,172866,6.05],[172867,172867,6.14],[172868,172869,6.73],[172870,172870,6.41],[172871,172872,6.34],[172873,172873,5.59],[172874,172875,5.96],[172876,172876,5.85],[172877,172877,7.34],[172878,172879,6.96],[172880,172880,6.28],[172881,172883,5.72],[172884,172884,6.74],[172885,172885,7.27],[172886,172887,7.05],[172888,172888,6.67],[172889,172890,6.35],[172891,172891,6.07],[172892,172893,6.16],[172894,172894,5.7],[172895,172896,6.15],[172897,172897,5.87],[172898,172899,6.56],[172900,172900,6.16],[172901,172901,6.34],[172902,172903,5.92],[172904,172904,6.53],[172905,172905,6.2],[172906,172907,5.53],[172908,172908,5.77],[172909,172911,6.25],[172912,172912,5.91],[172913,172914,7.75],[172915,172915,6.41],[172916,172917,6.31],[172918,172918,6.14],[172919,172920,6.29],[172921,172921,5.87],[172922,172923,6.14],[172924,172925,6.19],[172926,172927,5.85],[172928,172928,6.46],[172929,172930,6.09],[172931,172931,6.41],[172932,172932,5.74],[172933,172934,5.59],[172935,172935,6.16],[172936,172936,5.84],[172937,172938,6.41],[172939,172939,6.96],[172940,172941,5.83],[172942,172942,6.23],[172943,172944,5.83],[172945,172945,5.65],[172946,172947,6.08],[172948,172948,6.51],[172949,172950,6.42],[172951,172951,5.7],[172952,172954,6.41],[172955,172955,5.59],[172956,172957,6.25],[172958,172958,6.68],[172959,172959,6.16],[172960,172961,6.19],[172962,172962,6.69],[172963,172964,6.29],[172965,172965,5.88],[172966,172967,6.23],[172968,172968,5.91],[172969,172970,6.57],[172971,172971,5.84],[172972,172973,6.25],[172974,172974,6.85],[172975,172976,5.53],[172977,172977,5.5],[172978,172978,6.39],[172979,172980,6.57],[172981,172981,6.71],[172982,172982,6.6],[172983,172985,5.74],[172986,172986,5.71],[172987,172988,6.36],[172989,172989,6.08],[172990,172991,5.96],[172992,172992,5.91],[172993,172994,5.27],[172995,172995,6.69],[172996,172997,5.53],[172998,172998,6.51],[172999,173000,7.16],[173001,173001,6.02],[173002,173003,6.42],[173004,173004,5.55],[173005,173005,6.32],[173006,173006,6.19],[173007,173007,6.32],[173008,173008,6.7],[173009,173010,6.14],[173011,173011,6.75],[173012,173012,5.53],[173013,173014,5.91],[173015,173015,5.87],[173016,173017,5.53],[173018,173018,7.71],[173019,173020,5.85],[173021,173021,6.35],[173022,173023,5.59],[173024,173024,6.17],[173025,173026,5.91],[173027,173027,6.23],[173028,173028,6.04],[173029,173030,6.68],[173031,173031,6.1],[173032,173032,5.95],[173033,173035,6.57],[173036,173038,7.01],[173039,173039,6.57],[173040,173040,6.51],[173041,173042,5.41],[173043,173043,6.17],[173044,173045,6.74],[173046,173046,6.35],[173047,173048,6.28],[173049,173049,5.48],[173050,173051,6.2],[173052,173052,6.58],[173053,173054,6.27],[173055,173055,6.51],[173056,173056,8.51],[173057,173058,6.68],[173059,173059,6.95],[173060,173060,5.85],[173061,173063,6.15],[173064,173064,5.8],[173065,173066,7.42],[173067,173067,6.51],[173068,173068,6.23],[173069,173070,6.51],[173071,173071,5.7],[173072,173073,6.51],[173074,173074,6.03],[173075,173077,6.69],[173078,173079,6.09],[173080,173080,6.16],[173081,173082,5.64],[173083,173083,6.15],[173084,173084,6.3],[173085,173086,6.2],[173087,173087,6.79],[173088,173089,6.01],[173090,173090,7.19],[173091,173091,6.45],[173092,173093,6.16],[173094,173094,6.01],[173095,173095,6.4],[173096,173097,7.26],[173098,173098,6.29],[173099,173100,6.17],[173101,173101,5.91],[173102,173103,6.81],[173104,173104,5.95],[173105,173105,5.83],[173106,173107,6.3],[173108,173108,6.6],[173109,173109,7.01],[173110,173111,6.82],[173112,173112,6.08],[173113,173114,7.01],[173115,173115,6.61],[173116,173117,7.25],[173118,173118,6.19],[173119,173120,5.54],[173121,173121,5.5],[173122,173123,6.35],[173124,173124,5.95],[173125,173126,5.69],[173127,173127,5.61],[173128,173129,6.14],[173130,173130,6.28],[173131,173132,5.32],[173133,173133,5.25],[173134,173134,6.42],[173135,173136,6.64],[173137,173137,5.5],[173138,173139,6.08],[173140,173140,6.48],[173141,173141,6.14],[173142,173143,6.34],[173144,173144,6.25],[173145,173145,6.51],[173146,173147,5.84],[173148,173148,5.96],[173149,173149,7.01],[173150,173151,6.75],[173152,173152,5.95],[173153,173155,7.01],[173156,173156,7.4],[173157,173158,6.16],[173159,173159,7.01],[173160,173161,6.39],[173162,173162,6.56],[173163,173163,5.95],[173164,173168,5.91],[173169,173169,6.79],[173170,173171,6.39],[173172,173172,5.61],[173173,173173,6.79],[173174,173175,5.95],[173176,173176,6.29],[173177,173177,6.17],[173178,173179,5.85],[173180,173180,5.96],[173181,173181,6.15],[173182,173183,6.17],[173184,173184,6.3],[173185,173185,5.87],[173186,173187,6.79],[173188,173188,5.84],[173189,173190,5.96],[173191,173191,5.95],[173192,173193,5.86],[173194,173194,6.04],[173195,173196,6.12],[173197,173199,11],[173200,173200,2.9],[173201,173202,4.49],[173203,173203,4.13],[173204,173204,5.61],[173205,173206,5.9],[173207,173207,5.27],[173208,173208,5.5],[173209,173209,6.15],[173210,173210,6.01],[173211,173211,3.73],[173212,173212,6.41],[173213,173213,6.17],[173214,173214,5.3],[173215,173215,4.96],[173216,173216,5.48],[173217,173218,7.03],[173219,173219,5.38],[173220,173220,6.74],[173221,173221,5.93],[173222,173222,6.24],[173223,173223,6.25],[173224,173224,6.51],[173225,173225,5.5],[173226,173226,6.29],[173227,173227,5.93],[173228,173228,6.68],[173229,173229,6.42],[173230,173230,6.79],[173231,173231,5.53],[173232,173233,4.26],[173234,173234,3.87],[173235,173235,7.01],[173236,173236,8.95],[173237,173237,6.81],[173238,173238,8.08],[173239,173239,6.2],[173240,173240,5.18],[173241,173241,5.59],[173242,173242,5.96],[173243,173243,5.37],[173244,173244,5.62],[173245,173245,6.26],[173246,173246,5.46],[173247,173247,6.48],[173248,173248,5.84],[173249,173249,6.06],[173250,173250,6.71],[173251,173251,5.47],[173252,173252,5.37],[173253,173253,6.08],[173254,173254,4.62],[173255,173263,11],[173264,173264,7.15],[173265,173266,6.65],[173267,173267,8.03],[173268,173269,6.12],[173270,173270,8.01],[173271,173272,6.81],[173273,173273,4.08],[173274,173275,6.95],[173276,173276,6.29],[173277,173278,5.71],[173279,173279,9.98],[173280,173280,8.36],[173281,173281,5.76],[173282,173282,6.04],[173283,173284,6.84],[173285,173286,6.6],[173287,173287,8.15],[173288,173288,8.01],[173289,173289,4.08],[173290,173290,10.23],[173291,173291,6.45],[173292,173292,6.23],[173293,173293,7.15],[173294,173295,7.03],[173296,173297,6.12],[173298,173298,3.13],[173299,173299,8.59],[173300,173301,8.04],[173302,173302,5.76],[173303,173303,8.03],[173304,173304,3.3],[173305,173305,3.33],[173306,173306,5.39],[173307,173307,5.42],[173308,173308,3.33],[173309,173309,3.3],[173310,173310,6.96],[173311,173311,6.01],[173312,173312,7.15],[173313,173313,7.63],[173314,173314,8.57],[173315,173316,9.43],[173317,173317,9.7],[173318,173318,11.9],[173319,173320,8.08],[173321,173323,7.35],[173324,173325,5.98],[173326,173326,10.04],[173327,173327,10.16],[173328,173329,13.16],[173330,173331,9.36],[173332,173332,7.8],[173333,173333,7.64],[173334,173334,7.7],[173335,173335,7.71],[173336,173337,7.7],[173338,173339,11.73],[173340,173341,8.57],[173342,173342,15.29],[173343,173343,11.44],[173344,173344,8.69],[173345,173345,7.96],[173346,173346,8.49],[173347,173347,11.73],[173348,173348,9.36],[173349,173349,10.35],[173350,173350,10.24],[173351,173351,4.95],[173352,173352,9.26],[173353,173353,9.81],[173354,173354,6.68],[173355,173355,9.59],[173356,173356,7.3],[173357,173357,7.74],[173358,173358,6.79],[173359,173359,7.11],[173360,173360,8.47],[173361,173361,8.74],[173362,173362,8.01],[173363,173363,8.81],[173364,173364,9.28],[173365,173366,7.27],[173367,173368,4.77],[173369,173369,6.78],[173370,173370,9.95],[173371,173371,8.39],[173372,173372,9.16],[173373,173373,7.5],[173374,173374,8.5],[173375,173375,6.67],[173376,173378,9.97],[173379,173380,5.81],[173381,173381,10.45],[173382,173382,8.56],[173383,173383,6.89],[173384,173384,7.64],[173385,173385,6.01],[173386,173386,7.9],[173387,173387,8.14],[173388,173389,10.21],[173390,173390,8.81],[173391,173391,10.25],[173392,173392,9.56],[173393,173393,9.18],[173394,173394,10.41],[173395,173395,9.83],[173396,173396,7.5],[173397,173397,7.12],[173398,173398,8.23],[173399,173399,6.68],[173400,173400,6.03],[173401,173401,8.07],[173402,173403,7.77],[173404,173404,8.39],[173405,173405,10.58],[173406,173407,7.72],[173408,173409,9.66],[173410,173411,10.09],[173412,173412,9.61],[173413,173413,9.97],[173414,173414,7.95],[173415,173415,8.45],[173416,173416,7.47],[173417,173417,8.91],[173418,173418,7.39],[173419,173419,8.99],[173420,173420,8.17],[173421,173421,10.43],[173422,173422,8.05],[173423,173423,6.75],[173424,173424,10.05],[173425,173425,7.47],[173426,173426,7.8],[173427,173427,7.47],[173428,173428,7.82],[173429,173429,8.15],[173430,173431,6.23],[173432,173432,8.1],[173433,173433,9.76],[173434,173434,6.59],[173435,173435,8.72],[173436,173436,6.52],[173437,173438,7.99],[173439,173440,7.57],[173441,173442,10.21],[173443,173444,9.43],[173445,173445,9.55],[173446,173446,10.32],[173447,173447,8.58],[173448,173448,8.81],[173449,173449,5.49],[173450,173450,7.85],[173451,173452,7.04],[173453,173453,9.03],[173454,173454,5.52],[173455,173455,8.05],[173456,173456,9.01],[173457,173457,7.39],[173458,173458,9.76],[173459,173459,10.91],[173460,173460,7.7],[173461,173461,8.6],[173462,173462,8.84],[173463,173463,8.45],[173464,173464,7.88],[173465,173465,7.77],[173466,173466,8.57],[173467,173467,8.69],[173468,173468,9.7],[173469,173469,8.25],[173470,173470,8.58],[173471,173473,7.99],[173474,173474,9.38],[173475,173475,10.69],[173476,173476,5.84],[173477,173477,6.54],[173478,173478,8.91],[173479,173479,10.69],[173480,173483,7.38],[173484,173487,7.8],[173488,173491,8.48],[173492,173492,6.79],[173493,173494,5.98],[173495,173495,7.39],[173496,173496,8.36],[173497,173497,6.73],[173498,173498,8.74],[173499,173500,9.22],[173501,173501,9.32],[173502,173502,9.21],[173503,173503,8.49],[173504,173504,9.32],[173505,173506,10.69],[173507,173508,7.72],[173509,173510,9.07],[173511,173512,8.98],[173513,173514,6.47],[173515,173515,7.42],[173516,173516,9.03],[173517,173517,7.42],[173518,173518,9.23],[173519,173520,5.91],[173521,173522,8.12],[173523,173523,8],[173524,173524,8.93],[173525,173525,8],[173526,173526,8.93],[173527,173527,5.99],[173528,173529,7.52],[173530,173530,6.15],[173531,173531,8.1],[173532,173532,11.54],[173533,173533,8.65],[173534,173534,6.74],[173535,173535,6.23],[173536,173536,10.52],[173537,173537,7.78],[173538,173538,13.82],[173539,173539,8.28],[173540,173540,8.37],[173541,173541,10.65],[173542,173542,8.12],[173543,173543,8.34],[173544,173544,6.3],[173545,173545,7.31],[173546,173546,7.01],[173547,173547,8.11],[173548,173550,9.76],[173551,173552,9.6],[173553,173554,8.1],[173555,173555,9.02],[173556,173556,9.9],[173557,173558,8.91],[173559,173562,6.71],[173563,173566,9.95],[173567,173567,7.66],[173568,173568,9.09],[173569,173569,8.98],[173570,173570,8.76],[173571,173575,7.77],[173576,173576,9.9],[173577,173577,6.25],[173578,173578,8.33],[173579,173579,9.05],[173580,173580,6.98],[173581,173581,5.18],[173582,173582,6.26],[173583,173583,8.16],[173584,173584,14.81],[173585,173585,8.49],[173586,173586,10.79],[173587,173587,5.4],[173588,173588,9.47],[173589,173589,10.21],[173590,173590,7.59],[173591,173591,7.8],[173592,173592,8],[173593,173593,8.16],[173594,173594,11.86],[173595,173595,10.05],[173596,173596,7.94],[173597,173597,9.09],[173598,173598,10.11],[173599,173599,6.84],[173600,173600,6.54],[173601,173601,3.3],[173602,173602,7.28],[173603,173603,7.33],[173604,173604,7.19],[173605,173605,7.14],[173606,173606,6.01],[173607,173607,7.2],[173608,173608,6.47],[173609,173609,6.84],[173610,173610,9.87],[173611,173611,5.97],[173612,173631,11],[173632,173632,8.23],[173633,173633,6.12],[173634,173634,8.23],[173635,173635,6.12],[173636,173636,8.17],[173637,173637,4.99],[173638,173638,3.42],[173639,173639,2.86],[173640,173640,7.81],[173641,173641,6.29],[173642,173643,6.36],[173644,173644,9.93],[173645,173645,7.8],[173646,173646,7.77],[173647,173647,6.53],[173648,173648,10.37],[173649,173649,9],[173650,173650,8.9],[173651,173651,7.68],[173652,173652,11.24],[173653,173653,8.87],[173654,173654,10.3],[173655,173655,8.19],[173656,173656,8],[173657,173657,6.18],[173658,173658,7.81],[173659,173659,6.62],[173660,173660,10.19],[173661,173661,8.71],[173662,173662,7.97],[173663,173663,7.02],[173664,173664,7.93],[173665,173665,6.51],[173666,173666,8.46],[173667,173667,7.6],[173668,173668,7.88],[173669,173669,7.09],[173670,173670,11.48],[173671,173671,10.3],[173672,173672,7.92],[173673,173673,6.3],[173674,173674,7.92],[173675,173675,6.3],[173676,173676,10.45],[173677,173677,7.78],[173678,173678,7.5],[173679,173682,0],[173683,173683,5.54],[173684,173693,0],[173694,173695,5.5],[173696,173696,8.46],[173697,173697,7.29],[173698,173698,4.77],[173699,173699,3.81],[173700,173700,13.86],[173701,173701,12.19],[173702,173702,10.05],[173703,173704,8.46],[173705,173705,7.29],[173706,173706,8.68],[173707,173707,7.44],[173708,173708,6.24],[173709,173709,5.91],[173710,173710,8],[173711,173711,6.93],[173712,173712,6.73],[173713,173713,5.91],[173714,173714,9.27],[173715,173715,8.01],[173716,173716,7.64],[173717,173717,6.41],[173718,173718,9.98],[173719,173719,8.7],[173720,173720,8.65],[173721,173721,7.35],[173722,173722,5.79],[173723,173723,4.95],[173724,173724,2.16],[173725,173725,1.86],[173726,173727,0],[173728,173728,7.26],[173729,173729,8.45],[173730,173730,6.01],[173731,173731,7.22],[173732,173732,7.78],[173733,173733,6.79],[173734,173734,6.36],[173735,173735,6.67],[173736,173736,6.05],[173737,173737,7.97],[173738,173738,7.25],[173739,173739,6.6],[173740,173740,7.27],[173741,173741,6.29],[173742,173742,6.04],[173743,173743,6.6],[173744,173744,7.01],[173745,173745,6.05],[173746,173746,6.23],[173747,173747,5.76],[173748,173748,7.6],[173749,173749,6.47],[173750,173750,8.15],[173751,173751,7.88],[173752,173752,8.6],[173753,173753,5.28],[173754,173754,6.83],[173755,173755,6.8],[173756,173756,7.03],[173757,173757,6.6],[173758,173758,8.15],[173759,173761,6.81],[173762,173762,5.86],[173763,173763,8.47],[173764,173764,7.67],[173765,173765,6.62],[173766,173766,6.26],[173767,173767,6.83],[173768,173768,7.37],[173769,173769,6.29],[173770,173770,8.23],[173771,173771,6.19],[173772,173772,5.31],[173773,173773,6.01],[173774,173774,6.6],[173775,173775,7.81],[173776,173776,5.11],[173777,173777,6.83],[173778,173778,5.72],[173779,173779,7.47],[173780,173780,7.84],[173781,173781,5.72],[173782,173782,6.37],[173783,173783,7.91],[173784,173784,7.9],[173785,173785,6.6],[173786,173786,5.76],[173787,173787,7.16],[173788,173788,6.81],[173789,173789,7.35],[173790,173790,6.37],[194560,194814,11],[194815,194815,8.69],[194816,195102,11],[917504,917504,0],[917505,917511,3.66],[917512,917512,0],[917513,917517,3.87],[917518,917532,3.66],[917533,917533,0],[917534,917535,3.66],[917536,917536,3.87],[917537,917537,4.33],[917538,917538,5.05],[917539,917539,9],[917540,917540,6.99],[917541,917541,11.84],[917542,917542,7.99],[917543,917543,2.95],[917544,917545,5],[917546,917546,6.99],[917547,917547,9],[917548,917548,4],[917549,917549,5],[917550,917550,4],[917551,917551,5],[917552,917561,6.99],[917562,917563,5],[917564,917566,9],[917567,917567,6],[917568,917568,11],[917569,917569,7.52],[917570,917570,7.54],[917571,917571,7.68],[917572,917572,8.48],[917573,917573,6.96],[917574,917574,6.32],[917575,917575,8.53],[917576,917576,8.27],[917577,917577,4.63],[917578,917578,5],[917579,917579,7.62],[917580,917580,6.12],[917581,917581,9.27],[917582,917582,8.23],[917583,917583,8.66],[917584,917584,6.63],[917585,917585,8.66],[917586,917586,7.65],[917587,917587,7.52],[917588,917588,6.78],[917589,917589,8.05],[917590,917590,7.52],[917591,917591,10.88],[917592,917592,7.54],[917593,917593,6.77],[917594,917594,7.54],[917595,917597,5],[917598,917598,9],[917599,917600,6.99],[917601,917601,6.61],[917602,917602,6.85],[917603,917603,5.73],[917604,917604,6.85],[917605,917605,6.55],[917606,917606,3.87],[917607,917607,6.85],[917608,917608,6.96],[917609,917609,3.02],[917610,917610,3.79],[917611,917611,6.51],[917612,917612,3.02],[917613,917613,10.7],[917614,917614,6.96],[917615,917615,6.68],[917616,917617,6.85],[917618,917618,4.69],[917619,917619,5.73],[917620,917620,4.33],[917621,917621,6.96],[917622,917622,6.51],[917623,917623,9],[917624,917625,6.51],[917626,917626,5.78],[917627,917627,6.98],[917628,917628,5],[917629,917629,6.98],[917630,917630,9]]');

/***/ }),

/***/ 1787:
/***/ ((module) => {

module.exports = JSON.parse('[{"name":"Google/Doubleclick Ads","company":"Google","homepage":"https://marketingplatform.google.com/about/enterprise/","category":"ad","domains":["adservice.google.com","adservice.google.com.au","adservice.google.com.sg","adservice.google.com.br","adservice.google.com.ua","adservice.google.co.uk","adservice.google.co.jp","adservice.google.co.in","adservice.google.co.kr","adservice.google.co.id","adservice.google.co.nz","adservice.google.ie","adservice.google.se","adservice.google.de","adservice.google.ca","adservice.google.be","adservice.google.es","adservice.google.ch","adservice.google.fr","adservice.google.nl","*.googleadservices.com","*.googlesyndication.com","*.googletagservices.com","*.2mdn.net","*.doubleclick.net"]},{"name":"Facebook","homepage":"https://www.facebook.com","category":"social","domains":["*.facebook.com","*.atlassbx.com","*.fbsbx.com","fbcdn-photos-e-a.akamaihd.net","*.facebook.net","*.fbcdn.net"],"products":[{"name":"Facebook Messenger Customer Chat","urlPatterns":["REGEXP:connect\\\\.facebook\\\\.net\\\\/.*\\\\/sdk\\\\/xfbml\\\\.customerchat\\\\.js"],"facades":[{"name":"React Live Chat Loader","repo":"https://github.com/calibreapp/react-live-chat-loader"}]}]},{"name":"Instagram","homepage":"https://www.instagram.com","category":"social","domains":["*.cdninstagram.com","*.instagram.com"]},{"name":"Google CDN","company":"Google","homepage":"https://developers.google.com/speed/libraries/","category":"cdn","domains":["ajax.googleapis.com","commondatastorage.googleapis.com","www.gstatic.com","ssl.gstatic.com"]},{"name":"Google Maps","company":"Google","homepage":"https://www.google.com/maps","category":"utility","domains":["maps.google.com","maps-api-ssl.google.com","maps.googleapis.com","mts.googleapis.com","mt.googleapis.com","mt0.googleapis.com","mt1.googleapis.com","mt2.googleapis.com","mt3.googleapis.com","khm0.googleapis.com","khm1.googleapis.com","khms.googleapis.com","khms1.googleapis.com","khms2.googleapis.com","maps.gstatic.com"]},{"name":"Other Google APIs/SDKs","company":"Google","homepage":"https://developers.google.com/apis-explorer/#p/","category":"utility","domains":["accounts.google.com","apis.google.com","calendar.google.com","clients2.google.com","cse.google.com","news.google.com","pay.google.com","payments.google.com","play.google.com","smartlock.google.com","www.google.com","www.google.de","www.google.co.jp","www.google.com.au","www.google.co.uk","www.google.ie","www.google.com.sg","www.google.co.in","www.google.com.br","www.google.ca","www.google.co.kr","www.google.co.nz","www.google.co.id","www.google.fr","www.google.be","www.google.com.ua","www.google.nl","www.google.ru","www.google.se","www.googleapis.com","imasdk.googleapis.com","storage.googleapis.com","translate.googleapis.com","translate.google.com","translate-pa.googleapis.com","lh3.googleusercontent.com","jnn-pa.googleapis.com","csi.gstatic.com"]},{"name":"Firebase","homepage":"https://developers.google.com/apis-explorer/#p/","category":"utility","domains":["firebasestorage.googleapis.com","firestore.googleapis.com","firebaseinstallations.googleapis.com","firebase.googleapis.com","firebaseremoteconfig.googleapis.com"]},{"name":"Google Analytics","company":"Google","homepage":"https://marketingplatform.google.com/about/analytics/","category":"analytics","domains":["*.google-analytics.com","*.urchin.com","analytics.google.com"]},{"name":"Google Optimize","company":"Google","homepage":"https://marketingplatform.google.com/about/optimize/","category":"analytics","domains":["www.googleoptimize.com"]},{"name":"Google AMP","company":"Google","homepage":"https://github.com/google/amp-client-id-library","category":"analytics","domains":["ampcid.google.com"]},{"name":"Google Tag Manager","company":"Google","homepage":"https://marketingplatform.google.com/about/tag-manager/","category":"tag-manager","domains":["*.googletagmanager.com"]},{"name":"Google Fonts","company":"Google","homepage":"https://fonts.google.com/","category":"cdn","domains":["fonts.googleapis.com","fonts.gstatic.com"]},{"name":"Adobe TypeKit","company":"Adobe","homepage":"https://fonts.adobe.com/","category":"cdn","domains":["*.typekit.com","*.typekit.net"]},{"name":"YouTube","homepage":"https://youtube.com","category":"video","domains":["*.youtube.com","*.ggpht.com","*.youtube-nocookie.com","*.ytimg.com"],"products":[{"name":"YouTube Embedded Player","urlPatterns":["youtube.com/embed/"],"facades":[{"name":"Lite YouTube","repo":"https://github.com/paulirish/lite-youtube-embed"}]}]},{"name":"Twitter","homepage":"https://twitter.com","category":"social","domains":["*.vine.co","*.twimg.com","*.twitpic.com","platform.twitter.com","syndication.twitter.com"]},{"name":"AddThis","homepage":"https://www.addthis.com/","category":"social","domains":["*.addthis.com","*.addthiscdn.com","*.addthisedge.com"]},{"name":"AddToAny","homepage":"https://www.addtoany.com/","category":"social","domains":["*.addtoany.com"]},{"name":"Akamai","homepage":"https://www.akamai.com/","category":"cdn","domains":["23.62.3.183","*.akamaitechnologies.com","*.akamaitechnologies.fr","*.akamai.net","*.akamaiedge.net","*.akamaihd.net","*.akamaized.net","*.edgefcs.net","*.edgekey.net","edgesuite.net","*.srip.net"]},{"name":"Blogger","homepage":"https://www.blogger.com/","category":"hosting","domains":["*.blogblog.com","*.blogger.com","*.blogspot.com","images-blogger-opensocial.googleusercontent.com"]},{"name":"Gravatar","homepage":"https://en.gravatar.com/","category":"social","domains":["*.gravatar.com"]},{"name":"Yandex Metrica","company":"Yandex","homepage":"https://metrica.yandex.com/about?","category":"analytics","domains":["mc.yandex.ru","mc.yandex.com","d31j93rd8oukbv.cloudfront.net"]},{"name":"Hotjar","homepage":"https://www.hotjar.com/","category":"analytics","domains":["*.hotjar.com","*.hotjar.io"]},{"name":"Baidu Analytics","homepage":"https://tongji.baidu.com/web/welcome/login","category":"analytics","domains":["hm.baidu.com","hmcdn.baidu.com"]},{"name":"Insider","homepage":"","category":"analytics","domains":["*.useinsider.com"]},{"name":"Adobe Experience Cloud","company":"Adobe","homepage":"","category":"analytics","domains":["*.2o7.net","du8783wkf05yr.cloudfront.net","*.hitbox.com","*.imageg.net","*.nedstat.com","*.omtrdc.net"]},{"name":"Adobe Tag Manager","company":"Adobe","homepage":"https://www.adobe.com/experience-platform/","category":"tag-manager","domains":["*.adobedtm.com","*.demdex.net","*.everesttech.net","sstats.adobe.com","hbrt.adobe.com"]},{"name":"jQuery CDN","homepage":"https://code.jquery.com/","category":"cdn","domains":["*.jquery.com"]},{"name":"Cloudflare CDN","homepage":"https://cdnjs.com/","category":"cdn","domains":["cdnjs.cloudflare.com","amp.cloudflare.com"]},{"name":"Cloudflare","homepage":"https://www.cloudflare.com/website-optimization/","category":"utility","domains":["ajax.cloudflare.com","*.nel.cloudflare.com","static.cloudflareinsights.com"]},{"name":"WordPress","company":"Automattic","homepage":"https://wp.com/","category":"hosting","domains":["*.wordpress.com","s0.wp.com","s2.wp.com","*.w.org","c0.wp.com","s1.wp.com","i0.wp.com","i1.wp.com","i2.wp.com","widgets.wp.com"]},{"name":"WordPress Site Stats","company":"Automattic","homepage":"https://wp.com/","category":"analytics","domains":["pixel.wp.com","stats.wp.com"]},{"name":"Hatena Blog","homepage":"https://hatenablog.com/","category":"hosting","domains":["*.st-hatena.com","*.hatena.ne.jp"]},{"name":"Shopify","homepage":"https://www.shopify.com/","category":"hosting","domains":["*.shopify.com","*.shopifyapps.com","*.shopifycdn.com","*.shopifysvc.com"]},{"name":"Dealer","homepage":"https://www.dealer.com/","category":"hosting","domains":["*.dealer.com"]},{"name":"PIXNET","homepage":"https://www.pixnet.net/","category":"social","domains":["*.pixfs.net","*.pixnet.net"]},{"name":"Moat","homepage":"https://moat.com/","category":"ad","domains":["*.moatads.com","*.moatpixel.com"]},{"name":"33 Across","homepage":"https://33across.com/","category":"ad","domains":["*.33across.com"]},{"name":"OpenX","homepage":"https://www.openx.com/","category":"ad","domains":["*.deliverimp.com","*.openxadexchange.com","*.servedbyopenx.com","*.jump-time.net","*.openx.net"]},{"name":"Amazon Ads","homepage":"https://ad.amazon.com/","category":"ad","domains":["*.amazon-adsystem.com"]},{"name":"Rubicon Project","homepage":"https://rubiconproject.com/","category":"ad","domains":["*.rubiconproject.com","*.chango.com","*.fimserve.com"]},{"name":"The Trade Desk","homepage":"https://www.thetradedesk.com/","category":"ad","domains":["*.adsrvr.org","d1eoo1tco6rr5e.cloudfront.net"]},{"name":"Bidswitch","homepage":"https://www.bidswitch.com/","category":"ad","domains":["*.bidswitch.net"]},{"name":"LiveRamp IdentityLink","homepage":"https://liveramp.com/discover-identitylink/","category":"analytics","domains":["*.circulate.com","*.rlcdn.com"]},{"name":"Drawbridge","homepage":"https://www.drawbridge.com/","category":"ad","domains":["*.adsymptotic.com"]},{"name":"AOL / Oath / Verizon Media","homepage":"https://www.oath.com/","category":"ad","domains":["*.advertising.com","*.aol.com","*.aolcdn.com","*.blogsmithmedia.com","*.oath.com","*.aol.net","*.tacoda.net","*.aol.co.uk"]},{"name":"Xaxis","homepage":"https://www.xaxis.com/","category":"ad","domains":["*.247realmedia.com","*.mookie1.com","*.gmads.net"]},{"name":"Freshdesk","company":"Freshworks","homepage":"https://freshdesk.com/","category":"customer-success","domains":["d36mpcpuzc4ztk.cloudfront.net"]},{"name":"Help Scout","homepage":"https://www.helpscout.net/","category":"customer-success","domains":["djtflbt20bdde.cloudfront.net","*.helpscout.net"],"products":[{"name":"Help Scout Beacon","urlPatterns":["beacon-v2.helpscout.net"],"facades":[{"name":"React Live Chat Loader","repo":"https://github.com/calibreapp/react-live-chat-loader"}]}]},{"name":"Alexa","homepage":"https://www.alexa.com/","category":"analytics","domains":["*.alexametrics.com","d31qbv1cthcecs.cloudfront.net"]},{"name":"OneSignal","homepage":"https://onesignal.com/","category":"utility","domains":["*.onesignal.com"]},{"name":"Lucky Orange","homepage":"https://www.luckyorange.com/","category":"analytics","domains":["*.luckyorange.com","d10lpsik1i8c69.cloudfront.net","*.luckyorange.net"]},{"name":"Crazy Egg","homepage":"https://www.crazyegg.com/","category":"analytics","domains":["*.cetrk.com","*.crazyegg.com","*.hellobar.com","dnn506yrbagrg.cloudfront.net"]},{"name":"Yandex Ads","company":"Yandex","homepage":"https://yandex.com/adv/","category":"ad","domains":["an.yandex.ru"]},{"name":"Salesforce","homepage":"https://www.salesforce.com/products/marketing-cloud/","category":"analytics","domains":["*.krxd.net"]},{"name":"Salesforce Commerce Cloud","homepage":"https://www.salesforce.com/products/commerce-cloud/overview/","category":"hosting","domains":["*.cquotient.com","*.demandware.net","demandware.edgesuite.net"]},{"name":"Optimizely","homepage":"https://www.optimizely.com/","category":"analytics","domains":["*.optimizely.com"]},{"name":"LiveChat","homepage":"https://www.livechat.com/","category":"customer-success","domains":["*.livechatinc.com","*.livechat.com","*.livechat-static.com"]},{"name":"VK","homepage":"https://vk.com/","category":"social","domains":["*.vk.com"]},{"name":"Tumblr","homepage":"https://tumblr.com/","category":"social","domains":["*.tumblr.com"]},{"name":"Wistia","homepage":"https://wistia.com/","category":"video","domains":["*.wistia.com","embedwistia-a.akamaihd.net","*.wistia.net"]},{"name":"Brightcove","homepage":"https://www.brightcove.com/en/","category":"video","domains":["*.brightcove.com","*.brightcove.net","*.zencdn.net"]},{"name":"JSDelivr CDN","homepage":"https://www.jsdelivr.com/","category":"cdn","domains":["*.jsdelivr.net"]},{"name":"Sumo","homepage":"https://sumo.com/","category":"marketing","domains":["*.sumo.com","*.sumome.com","sumo.b-cdn.net"]},{"name":"Vimeo","homepage":"https://vimeo.com/","category":"video","domains":["*.vimeo.com","*.vimeocdn.com"],"products":[{"name":"Vimeo Embedded Player","urlPatterns":["player.vimeo.com/video/"],"facades":[{"name":"Lite Vimeo","repo":"https://github.com/slightlyoff/lite-vimeo"},{"name":"Lite Vimeo Embed","repo":"https://github.com/luwes/lite-vimeo-embed"}]}]},{"name":"Disqus","homepage":"https://disqus.com/","category":"social","domains":["*.disqus.com","*.disquscdn.com"]},{"name":"Yandex APIs","company":"Yandex","homepage":"https://yandex.ru/","category":"utility","domains":["api-maps.yandex.ru","money.yandex.ru"]},{"name":"Yandex CDN","company":"Yandex","homepage":"https://yandex.ru/","category":"cdn","domains":["*.yandex.st","*.yastatic.net"]},{"name":"Integral Ad Science","homepage":"https://integralads.com/uk/","category":"ad","domains":["*.adsafeprotected.com","*.iasds01.com"]},{"name":"Tealium","homepage":"https://tealium.com/","category":"tag-manager","domains":["*.aniview.com","*.delvenetworks.com","*.limelight.com","*.tiqcdn.com","*.llnwd.net","*.tealiumiq.com"]},{"name":"Pubmatic","homepage":"https://pubmatic.com/","category":"ad","domains":["*.pubmatic.com"]},{"name":"Olark","homepage":"https://www.olark.com/","category":"customer-success","domains":["*.olark.com"]},{"name":"Tawk.to","homepage":"https://www.tawk.to/","category":"customer-success","domains":["*.tawk.to"]},{"name":"OptinMonster","homepage":"https://optinmonster.com/","category":"marketing","domains":["*.opmnstr.com","*.optmnstr.com","*.optmstr.com"]},{"name":"ZenDesk","homepage":"https://zendesk.com/","category":"customer-success","domains":["*.zdassets.com","*.zendesk.com","*.zopim.com"]},{"name":"Pusher","homepage":"https://pusher.com/","category":"utility","domains":["*.pusher.com","*.pusherapp.com"]},{"name":"Drift","homepage":"https://www.drift.com/","category":"marketing","domains":["*.drift.com","*.driftt.com"],"products":[{"name":"Drift Live Chat","urlPatterns":["REGEXP:js\\\\.driftt\\\\.com\\\\/include\\\\/.*\\\\/.*\\\\.js"],"facades":[{"name":"React Live Chat Loader","repo":"https://github.com/calibreapp/react-live-chat-loader"}]}]},{"name":"Sentry","homepage":"https://sentry.io/","category":"utility","domains":["*.getsentry.com","*.ravenjs.com","*.sentry-cdn.com","*.sentry.io"]},{"name":"Amazon Web Services","homepage":"https://aws.amazon.com/s3/","category":"other","domains":["*.amazon.com","*.amazonaws.com","*.amazonwebapps.com","*.amazonwebservices.com","*.elasticbeanstalk.com","*.images-amazon.com","*.amazon.co.uk"]},{"name":"Amazon Pay","homepage":"https://pay.amazon.com","category":"utility","domains":["payments.amazon.com","*.payments-amazon.com"]},{"name":"Media.net","homepage":"https://www.media.net/","category":"ad","domains":["*.media.net","*.mnet-ad.net"]},{"name":"Yahoo!","homepage":"https://www.yahoo.com/","category":"ad","domains":["*.bluelithium.com","*.hostingprod.com","*.lexity.com","*.yahoo.com","*.yahooapis.com","*.yimg.com","*.zenfs.com","*.yahoo.net"]},{"name":"Adroll","homepage":"https://www.adroll.com/","category":"ad","domains":["*.adroll.com"]},{"name":"Twitch","homepage":"https://twitch.tv/","category":"video","domains":["*.twitch.tv"]},{"name":"Taboola","homepage":"https://www.taboola.com/","category":"ad","domains":["*.taboola.com","*.taboolasyndication.com"]},{"name":"Sizmek","homepage":"https://www.sizmek.com/","category":"ad","domains":["*.serving-sys.com","*.peer39.net"]},{"name":"Scorecard Research","homepage":"https://www.scorecardresearch.com/","category":"ad","domains":["*.scorecardresearch.com"]},{"name":"Criteo","homepage":"https://www.criteo.com/","category":"ad","domains":["*.criteo.com","*.emailretargeting.com","*.criteo.net"]},{"name":"Segment","homepage":"https://segment.com/","category":"analytics","domains":["*.segment.com","*.segment.io"]},{"name":"ShareThis","homepage":"https://www.sharethis.com/","category":"social","domains":["*.sharethis.com"]},{"name":"Distil Networks","homepage":"https://www.distilnetworks.com/","category":"utility","domains":["*.areyouahuman.com"]},{"name":"Connexity","homepage":"https://connexity.com/","category":"analytics","domains":["*.connexity.net"]},{"name":"Popads","homepage":"https://www.popads.net/","category":"ad","domains":["*.popads.net"]},{"name":"CreateJS CDN","homepage":"https://code.createjs.com/","category":"cdn","domains":["*.createjs.com"]},{"name":"Squarespace","homepage":"https://www.squarespace.com/","category":"hosting","domains":["*.squarespace.com"]},{"name":"Media Math","homepage":"https://www.mediamath.com/","category":"ad","domains":["*.mathads.com","*.mathtag.com"]},{"name":"Mixpanel","homepage":"https://mixpanel.com/","category":"analytics","domains":["*.mixpanel.com","*.mxpnl.com"]},{"name":"FontAwesome CDN","homepage":"https://fontawesome.com/","category":"cdn","domains":["*.fontawesome.com"]},{"name":"Hubspot","homepage":"https://hubspot.com/","category":"marketing","domains":["*.hs-scripts.com","*.hubspot.com","*.leadin.com","*.hs-analytics.net","*.hscollectedforms.net","*.hscta.net","*.hsforms.net","*.hsleadflows.net","*.hsstatic.net","*.hubspot.net","*.hsforms.com","*.hs-banner.com","*.hs-embed-reporting.com","*.hs-growth-metrics.com","*.hs-data.com","*.hsadspixel.net"]},{"name":"Mailchimp","homepage":"https://mailchimp.com/","category":"marketing","domains":["*.chimpstatic.com","*.list-manage.com","*.mailchimp.com"]},{"name":"MGID","homepage":"https://www.mgid.com/","category":"ad","domains":["*.mgid.com","*.dt07.net"]},{"name":"Stripe","homepage":"https://stripe.com","category":"utility","domains":["*.stripe.com","*.stripecdn.com","*.stripe.network"]},{"name":"PayPal","homepage":"https://paypal.com","category":"utility","domains":["*.paypal.com","*.paypalobjects.com"]},{"name":"Market GID","homepage":"https://www.marketgid.com/","category":"ad","domains":["*.marketgid.com"]},{"name":"Pinterest","homepage":"https://pinterest.com/","category":"social","domains":["*.pinimg.com","*.pinterest.com"]},{"name":"New Relic","homepage":"https://newrelic.com/","category":"utility","domains":["*.newrelic.com","*.nr-data.net"]},{"name":"AppDynamics","homepage":"https://www.appdynamics.com/","category":"utility","domains":["*.appdynamics.com","*.eum-appdynamics.com","d3tjaysgumg9lf.cloudfront.net"]},{"name":"Parking Crew","homepage":"https://parkingcrew.net/","category":"other","domains":["d1lxhc4jvstzrp.cloudfront.net","*.parkingcrew.net"]},{"name":"WordAds","company":"Automattic","homepage":"https://wordads.co/","category":"ad","domains":["*.pubmine.com"]},{"name":"AppNexus","homepage":"https://www.appnexus.com/","category":"ad","domains":["*.adnxs.com","*.ctasnet.com","*.adrdgt.com"]},{"name":"Histats","homepage":"https://www.histats.com/","category":"analytics","domains":["*.histats.com"]},{"name":"DoubleVerify","homepage":"https://www.doubleverify.com/","category":"ad","domains":["*.doubleverify.com","*.dvtps.com","*.iqfp1.com"]},{"name":"Mediavine","homepage":"https://www.mediavine.com/","category":"ad","domains":["*.mediavine.com"]},{"name":"Wix","homepage":"https://www.wix.com/","category":"hosting","domains":["*.parastorage.com","*.wix.com","*.wixstatic.com","*.wixapps.net"]},{"name":"Webflow","homepage":"https://webflow.com/","category":"hosting","domains":["*.uploads-ssl.webflow.com","*.assets-global.website-files.com","*.assets.website-files.com"]},{"name":"Weebly","homepage":"https://www.weebly.com/","category":"hosting","domains":["*.editmysite.com"]},{"name":"LinkedIn","homepage":"https://www.linkedin.com/","category":"social","domains":["*.bizographics.com","platform.linkedin.com","*.slideshare.com","*.slidesharecdn.com"]},{"name":"LinkedIn Ads","category":"ad","domains":["*.licdn.com","*.ads.linkedin.com","ads.linkedin.com","www.linkedin.com"]},{"name":"Vox Media","homepage":"https://www.voxmedia.com/","category":"content","domains":["*.vox-cdn.com","*.voxmedia.com"]},{"name":"Hotmart","homepage":"https://www.hotmart.com/","category":"content","domains":["*.hotmart.com"]},{"name":"SoundCloud","homepage":"https://www.soundcloud.com/","category":"content","domains":["*.sndcdn.com","*.soundcloud.com","*.stratus.sc"]},{"name":"Spotify","homepage":"https://www.spotify.com/","category":"content","domains":["*.scdn.co","*.spotify.com"]},{"name":"AMP","homepage":"https://amp.dev/","category":"content","domains":["*.ampproject.org"]},{"name":"Beeketing","homepage":"https://beeketing.com/","category":"marketing","domains":["*.beeketing.com"]},{"name":"Albacross","homepage":"https://albacross.com/","category":"marketing","domains":["*.albacross.com"]},{"name":"TrafficJunky","homepage":"https://www.trafficjunky.com/","category":"ad","domains":["*.contentabc.com","*.trafficjunky.net"]},{"name":"Bootstrap CDN","homepage":"https://www.bootstrapcdn.com/","category":"cdn","domains":["*.bootstrapcdn.com"]},{"name":"Shareaholic","homepage":"https://www.shareaholic.com/","category":"social","domains":["*.shareaholic.com","dsms0mj1bbhn4.cloudfront.net"]},{"name":"Snowplow","homepage":"https://snowplowanalytics.com/","category":"analytics","domains":["d32hwlnfiv2gyn.cloudfront.net"]},{"name":"RD Station","homepage":"https://www.rdstation.com/en/","category":"marketing","domains":["d335luupugsy2.cloudfront.net"]},{"name":"Jivochat","homepage":"https://www.jivochat.com/","category":"customer-success","domains":["*.jivosite.com"]},{"name":"Listrak","homepage":"https://www.listrak.com/","category":"marketing","domains":["*.listrak.com","*.listrakbi.com"]},{"name":"Ontame","homepage":"https://www.ontame.io","category":"analytics","domains":["*.ontame.io"]},{"name":"Ipify","homepage":"https://www.ipify.org","category":"utility","domains":["*.ipify.org"]},{"name":"Ensighten","homepage":"https://www.ensighten.com/","category":"tag-manager","domains":["*.ensighten.com"]},{"name":"EpiServer","homepage":"https://www.episerver.com","category":"content","domains":["*.episerver.net"]},{"name":"mPulse","homepage":"https://developer.akamai.com/akamai-mpulse","category":"analytics","domains":["*.akstat.io","*.go-mpulse.net","*.mpulse.net","*.mpstat.us"]},{"name":"Pingdom RUM","homepage":"https://www.pingdom.com/product/performance-monitoring/","category":"analytics","domains":["*.pingdom.net"]},{"name":"SpeedCurve LUX","company":"SpeedCurve","homepage":"https://speedcurve.com/features/lux/","category":"analytics","domains":["*.speedcurve.com"]},{"name":"Radar","company":"Cedexis","homepage":"https://www.cedexis.com/radar/","category":"analytics","domains":["*.cedexis-test.com","*.cedexis.com","*.cmdolb.com","cedexis.leasewebcdn.com","*.cedexis-radar.net","*.cedexis.net","cedexis-test01.insnw.net","cedexisakamaitest.azureedge.net","cedexispub.cdnetworks.net","cs600.wac.alphacdn.net","cs600.wpc.edgecastdns.net","global2.cmdolb.com","img-cedexis.mncdn.com","a-cedexis.msedge.net","zn3vgszfh.fastestcdn.net"]},{"name":"Byside","homepage":"https://byside.com","category":"analytics","domains":["*.byside.com"]},{"name":"VWO","homepage":"https://vwo.com","category":"analytics","domains":["*.vwo.com","*.visualwebsiteoptimizer.com","d5phz18u4wuww.cloudfront.net","*.wingify.com"]},{"name":"Bing Ads","homepage":"https://bingads.microsoft.com","category":"ad","domains":["*.bing.com","*.microsoft.com","*.msn.com","*.s-msft.com","*.s-msn.com","*.msads.net","*.msecnd.net"]},{"name":"GoSquared","homepage":"https://www.gosquared.com","category":"analytics","domains":["*.gosquared.com","d1l6p2sc9645hc.cloudfront.net"]},{"name":"Usabilla","homepage":"https://usabilla.com","category":"analytics","domains":["*.usabilla.com","d6tizftlrpuof.cloudfront.net"]},{"name":"Fastly Insights","homepage":"https://insights.fastlylabs.com","category":"analytics","domains":["*.fastly-insights.com"]},{"name":"Visual IQ","homepage":"https://www.visualiq.com","category":"analytics","domains":["*.myvisualiq.net"]},{"name":"Snapchat","homepage":"https://www.snapchat.com","category":"analytics","domains":["*.snapchat.com","*.sc-static.net"]},{"name":"Atlas Solutions","homepage":"https://atlassolutions.com","category":"analytics","domains":["*.atdmt.com"]},{"name":"Quantcast","homepage":"https://www.quantcast.com","category":"analytics","domains":["*.brtstats.com","*.quantcount.com","*.quantserve.com","*.semantictec.com","*.ntv.io"]},{"name":"Spiceworks","homepage":"https://www.spiceworks.com","category":"analytics","domains":["*.spiceworks.com"]},{"name":"Marketo","homepage":"https://www.marketo.com","category":"analytics","domains":["*.marketo.com","*.mktoresp.com","*.marketo.net"]},{"name":"Intercom","homepage":"https://www.intercom.com","category":"customer-success","domains":["*.intercomcdn.com","*.intercom.io"],"products":[{"name":"Intercom Widget","urlPatterns":["widget.intercom.io","js.intercomcdn.com/shim.latest.js"],"facades":[{"name":"React Live Chat Loader","repo":"https://github.com/calibreapp/react-live-chat-loader"},{"name":"Intercom Facade","repo":"https://github.com/danielbachhuber/intercom-facade/"}]}]},{"name":"Unpkg","homepage":"https://unpkg.com","category":"cdn","domains":["*.unpkg.com","*.npmcdn.com"]},{"name":"ReadSpeaker","homepage":"https://www.readspeaker.com","category":"other","domains":["*.readspeaker.com"]},{"name":"Browsealoud","homepage":"https://www.texthelp.com/en-gb/products/browsealoud/","category":"other","domains":["*.browsealoud.com","*.texthelp.com"]},{"name":"15gifts","category":"customer-success","domains":["*.15gifts.com","*.primefuse.com"]},{"name":"1xRUN","category":"utility","domains":["*.1xrun.com"]},{"name":"2AdPro Media Solutions","category":"ad","domains":["*.2adpro.com"]},{"name":"301 Digital Media","category":"content","domains":["*.301ads.com","*.301network.com"]},{"name":"360 picnic platform","company":"MediaV","category":"ad","domains":["*.mediav.com"]},{"name":"365 Media Group","category":"content","domains":["*.365dm.com"]},{"name":"365 Tech Services","category":"hosting","domains":["*.365webservices.co.uk"]},{"name":"3D Issue","category":"utility","domains":["*.3dissue.com","*.pressjack.com"]},{"name":"47Line Technologies","category":"other","domains":["*.pejs.net"]},{"name":"4finance","category":"utility","domains":["*.4finance.com"]},{"name":"5miles","category":"content","domains":["*.5milesapp.com"]},{"name":"77Tool","company":"77Agency","category":"analytics","domains":["*.77tracking.com"]},{"name":"9xb","category":"ad","domains":["*.9xb.com"]},{"name":"@UK","category":"hosting","domains":["*.uk-plc.net"]},{"name":"A Perfect Pocket","category":"hosting","domains":["*.aperfectpocketdata.com"]},{"name":"A-FIS PTE","category":"analytics","domains":["*.websta.me"]},{"name":"AB Tasty","category":"analytics","domains":["*.abtasty.com","d1447tq2m68ekg.cloudfront.net"]},{"name":"ABA RESEARCH","category":"analytics","domains":["*.abaresearch.uk","qmodal.azurewebsites.net"]},{"name":"ADMIZED","category":"ad","domains":["*.admized.com"]},{"name":"ADNOLOGIES","category":"ad","domains":["*.heias.com"]},{"name":"ADventori","category":"ad","domains":["*.adventori.com"]},{"name":"AI Media Group","category":"ad","domains":["*.aimediagroup.com"]},{"name":"AIR.TV","category":"ad","domains":["*.air.tv"]},{"name":"AKQA","category":"ad","domains":["*.srtk.net"]},{"name":"AOL ad","company":"AOL","category":"ad","domains":["*.atwola.com"]},{"name":"AOL On","company":"AOL","category":"content","domains":["*.5min.com"]},{"name":"AOL Sponsored Listiings","company":"AOL","category":"ad","domains":["*.adsonar.com"]},{"name":"APSIS Lead","company":"APSIS International AB","category":"ad","domains":["*.prospecteye.com"]},{"name":"APSIS Profile Cloud","company":"APSIS","category":"analytics","domains":["*.innomdc.com"]},{"name":"APSIS Forms","company":"APSIS","category":"other","domains":["*.apsisforms.com"]},{"name":"ARENA","company":"Altitude","category":"ad","domains":["*.altitude-arena.com"]},{"name":"ARM","category":"analytics","domains":["*.tag4arm.com"]},{"name":"ASAPP","category":"other","domains":["*.asapp.com"]},{"name":"ASP","category":"hosting","domains":["*.goshowoff.com"]},{"name":"AT Internet","category":"analytics","domains":["*.ati-host.net"]},{"name":"ATTRAQT","category":"utility","domains":["*.attraqt.com","*.locayta.com"]},{"name":"AVANSER","category":"analytics","domains":["*.avanser.com.au"]},{"name":"AVG","company":"AVG Technologies","category":"utility","domains":["*.avg.com"]},{"name":"AWeber","category":"ad","domains":["*.aweber.com"]},{"name":"AXS","category":"content","domains":["*.axs.com"]},{"name":"Accentuate","company":"Accentuate Digital","category":"utlity","homepage":"https://www.accentuate.io/","domains":["*.accentuate.io"]},{"name":"Accenture","category":"analytics","domains":["*.tmvtp.com"]},{"name":"Accord Holdings","category":"ad","domains":["*.agcdn.com"]},{"name":"Accordant Media","category":"ad","domains":["*.a3cloud.net"]},{"name":"Account Kit","category":"other","domains":["*.accountkit.com"]},{"name":"Accuen Media (Omnicom Media Group)","category":"content","domains":["*.p-td.com"]},{"name":"Accuweather","category":"content","domains":["*.accuweather.com"]},{"name":"Acquisio","category":"ad","domains":["*.acq.io"]},{"name":"Act-On Software","category":"marketing","domains":["*.actonsoftware.com"]},{"name":"ActBlue","category":"other","domains":["*.actblue.com"]},{"name":"Active Agent","category":"ad","domains":["*.active-agent.com"]},{"name":"ActiveCampaign","category":"ad","domains":["*.trackcmp.net","app-us1.com","*.app-us1.com"]},{"name":"AcuityAds","category":"ad","domains":["*.acuityplatform.com"]},{"name":"Acxiom","category":"ad","domains":["*.acxiom-online.com","*.acxiomapac.com","*.delivery.net"]},{"name":"Ad4Screen","category":"ad","domains":["*.a4.tl"]},{"name":"Ad6Media","category":"ad","domains":["*.ad6media.fr"]},{"name":"AdCurve","category":"ad","domains":["*.shop2market.com"]},{"name":"AdEasy","category":"ad","domains":["*.adeasy.ru"]},{"name":"AdExtent","category":"ad","domains":["*.adextent.com"]},{"name":"AdForge Edge","company":"AdForge","category":"ad","domains":["*.adforgeinc.com"]},{"name":"AdGear","company":"Samsung Electronics","category":"ad","domains":["*.adgear.com","*.adgrx.com"]},{"name":"AdInMedia","category":"ad","domains":["*.fastapi.net"]},{"name":"AdJug","category":"ad","domains":["*.adjug.com"]},{"name":"AdMatic","category":"ad","domains":["*.admatic.com.tr"]},{"name":"AdMedia","category":"ad","domains":["*.admedia.com"]},{"name":"AdRecover","category":"ad","domains":["*.adrecover.com"]},{"name":"AdRiver","category":"ad","domains":["*.adriver.ru"]},{"name":"AdSniper","category":"ad","domains":["*.adsniper.ru","*.sniperlog.ru"]},{"name":"AdSpeed","category":"ad","domains":["*.adspeed.net"]},{"name":"AdSpruce","category":"ad","domains":["*.adspruce.com"]},{"name":"AdSupply","category":"ad","domains":["*.doublepimp.com"]},{"name":"AdTheorent","category":"ad","domains":["*.adentifi.com"]},{"name":"AdThink AudienceInsights","company":"AdThink Media","category":"analytics","domains":["*.audienceinsights.net"]},{"name":"AdTrue","company":"FPT AdTrue","category":"ad","domains":["*.adtrue.com"]},{"name":"AdYapper","category":"ad","domains":["*.adyapper.com"]},{"name":"Adacado","category":"ad","domains":["*.adacado.com"]},{"name":"Adap.tv","category":"ad","domains":["*.adap.tv"]},{"name":"Adapt Services","category":"hosting","domains":["*.adcmps.com"]},{"name":"Adaptive Web","category":"hosting","domains":["*.adaptive.co.uk"]},{"name":"Adara Media","category":"ad","domains":["*.yieldoptimizer.com"]},{"name":"Adblade","category":"ad","domains":["*.adblade.com"]},{"name":"Adbrain","category":"ad","domains":["*.adbrn.com"]},{"name":"AddEvent","category":"utility","domains":["*.addevent.com"]},{"name":"AddShoppers","category":"social","domains":["*.addshoppers.com","d3rr3d0n31t48m.cloudfront.net","*.shop.pe"]},{"name":"AddThisEvent","category":"hosting","domains":["*.addthisevent.com"]},{"name":"Addoox MetaNetwork","company":"Addoox","category":"ad","domains":["*.metanetwork.net"]},{"name":"Addvantage Media","category":"ad","domains":["*.addvantagemedia.com","*.simplytechnology.net"]},{"name":"AD EBis","category":"analytics","homepage":"https://www.ebis.ne.jp/","domains":["*.ebis.ne.jp"]},{"name":"Adecs","category":"customer-success","domains":["*.adecs.co.uk"]},{"name":"Adelphic","category":"ad","domains":["*.ipredictive.com"]},{"name":"Adestra","category":"ad","domains":["*.adestra.com","*.msgfocus.com"]},{"name":"Adform","category":"ad","domains":["*.adform.net","*.adformdsp.net"]},{"name":"Adkontekst","category":"ad","domains":["*.adkontekst.pl"]},{"name":"Adlead","category":"ad","domains":["*.webelapp.com"]},{"name":"Adledge","category":"utility","domains":["*.adledge.com"]},{"name":"Adloox","category":"ad","domains":["*.adlooxtracking.com"]},{"name":"Adlux","category":"ad","domains":["*.adlux.com"]},{"name":"Admedo","category":"ad","domains":["*.a8723.com","*.adizio.com","*.admedo.com"]},{"name":"Admeta","company":"Wideorbit","category":"ad","domains":["*.atemda.com"]},{"name":"Admetrics","company":"Next Tuesday","category":"analytics","domains":["*.nt.vc"]},{"name":"Admiral","category":"ad","domains":["*.unknowntray.com"]},{"name":"Admitad","category":"ad","domains":["*.lenmit.com"]},{"name":"Admixer for Publishers","company":"Admixer","category":"ad","domains":["*.admixer.net"]},{"name":"Adnium","category":"ad","domains":["*.adnium.com"]},{"name":"Adnostic","company":"Dennis Publishing","category":"ad","domains":["*.adnostic.co.uk"]},{"name":"Adobe Marketing Cloud","company":"Adobe Systems","category":"ad","domains":["*.adobetag.com"]},{"name":"Adobe Scene7","company":"Adobe Systems","category":"content","domains":["wwwimages.adobe.com","*.scene7.com","*.everestads.net","*.everestjs.net"]},{"name":"Adobe Systems","category":"content","domains":["adobe.com","www.adobe.com"]},{"name":"Adobe Business Catalyst","homepage":"https://www.businesscatalyst.com/","category":"hosting","domains":["*.businesscatalyst.com"]},{"name":"Adocean","company":"Gemius","category":"ad","domains":["*.adocean.pl"]},{"name":"Adometry","company":"Google","category":"ad","domains":["*.dmtry.com"]},{"name":"Adomik","category":"analytics","domains":["*.adomik.com"]},{"name":"Adotmob","category":"ad","domains":["*.adotmob.com"]},{"name":"Adrian Quevedo","category":"hosting","domains":["*.adrianquevedo.com"]},{"name":"Adroit Digital Solutions","category":"ad","domains":["*.imiclk.com","*.abmr.net"]},{"name":"AdsNative","category":"ad","domains":["*.adsnative.com"]},{"name":"AdsWizz","category":"ad","domains":["*.adswizz.com"]},{"name":"Adscale","category":"ad","domains":["*.adscale.de"]},{"name":"Adschoom","company":"JSWeb Production","category":"ad","domains":["*.adschoom.com"]},{"name":"Adscience","category":"ad","domains":["*.adscience.nl"]},{"name":"Adsiduous","category":"ad","domains":["*.adsiduous.com"]},{"name":"Adsty","category":"ad","domains":["*.adx1.com"]},{"name":"Adtech (AOL)","category":"ad","domains":["*.adtechus.com"]},{"name":"Adtegrity","category":"ad","domains":["*.adtpix.com"]},{"name":"Adthink","company":"Adthink Media","category":"ad","domains":["*.adxcore.com","*.dcoengine.com"]},{"name":"AdultWebmasterEmpire.Com","category":"ad","domains":["*.awempire.com"]},{"name":"Adunity","category":"ad","domains":["*.adunity.com"]},{"name":"Advance Magazine Group","category":"content","domains":["*.condenastdigital.com","*.condenet.com","*.condenast.co.uk"]},{"name":"Adverline Board","company":"Adverline","category":"ad","domains":["*.adverline.com","*.adnext.fr"]},{"name":"AdvertServe","category":"ad","domains":["*.advertserve.com"]},{"name":"Advolution","category":"utility","domains":["*.advolution.de"]},{"name":"Adwise","category":"ad","domains":["*.adwise.bg"]},{"name":"Adyen","category":"utility","domains":["*.adyen.com"]},{"name":"Adyoulike","category":"ad","domains":["*.adyoulike.com","*.omnitagjs.com","*.adyoulike.net"]},{"name":"Adzerk","category":"ad","domains":["*.adzerk.net"]},{"name":"Adzip","company":"Adbox Digital","category":"ad","domains":["*.adzip.co"]},{"name":"AerServ","category":"ad","domains":["*.aerserv.com"]},{"name":"Affectv","category":"ad","domains":["*.affectv.com","*.affec.tv"]},{"name":"Affiliate Window","company":"Digital Window","category":"ad","domains":["*.dwin1.com"]},{"name":"Affiliatly","category":"ad","domains":["*.affiliatly.com"]},{"name":"Affino","category":"ad","domains":["affino.com"]},{"name":"Affirm","category":"utility","domains":["*.affirm.com"]},{"name":"Afterpay","company":"Block","category":"utlity","homepage":"https://www.afterpay.com/","domains":["*.afterpay.com"]},{"name":"Agenda Media","category":"ad","domains":["*.agendamedia.co.uk"]},{"name":"Aggregate Knowledge","company":"Neustar","category":"ad","domains":["*.agkn.com"]},{"name":"AgilOne","category":"marketing","domains":["*.agilone.com"]},{"name":"Agility","category":"hosting","domains":["*.agilitycms.com"]},{"name":"Ahalogy","category":"social","domains":["*.ahalogy.com"]},{"name":"Aheadworks","category":"utility","domains":["*.aheadworks.com"]},{"name":"AirPR","category":"analytics","domains":["*.airpr.com"]},{"name":"Aira","category":"ad","domains":["*.aira.net"]},{"name":"Airport Parking and Hotels","category":"content","domains":["*.aph.com"]},{"name":"Akanoo","category":"analytics","domains":["*.akanoo.com"]},{"name":"Alchemy","company":"AndBeyond.Media","category":"ad","domains":["*.andbeyond.media"]},{"name":"AlephD","company":"AOL","category":"ad","domains":["*.alephd.com"]},{"name":"AliveChat","company":"AYU Technology Solutions","category":"customer-success","domains":["*.websitealive.com","*.websitealive7.com"]},{"name":"All Access","category":"other","domains":["*.allaccess.com.ph"]},{"name":"Alliance for Audited Media","category":"ad","domains":["*.aamsitecertifier.com"]},{"name":"Allyde","category":"marketing","domains":["*.mautic.com"]},{"name":"AlphaSSL","category":"utility","domains":["*.alphassl.com"]},{"name":"Altitude","category":"ad","domains":["*.altitudeplatform.com"]},{"name":"Altocloud","category":"analytics","domains":["*.altocloud.com"]},{"name":"Amadeus","category":"content","domains":["*.e-travel.com"]},{"name":"Amazon CloudFront","company":"Amazon","category":"utility","domains":["cloudfront.net"]},{"name":"Ambassador","category":"ad","domains":["*.getambassador.com"]},{"name":"Ambient","company":"Ericcson","category":"other","domains":["*.adnetwork.vn","*.ambientplatform.vn"]},{"name":"Amelia Communication","category":"hosting","domains":["*.sara.media"]},{"name":"Amobee","category":"marketing","domains":["*.amgdgt.com","*.kontera.com"]},{"name":"Amplience","category":"marketing","domains":["*.10cms.com","*.amplience.com","*.amplience.net","*.bigcontent.io","*.adis.ws"]},{"name":"Amplitude Mobile Analytics","company":"Amplitude","category":"analytics","domains":["*.amplitude.com","d24n15hnbwhuhn.cloudfront.net"]},{"name":"Anametrix","company":"Ensighten","category":"analytics","domains":["*.anametrix.com"]},{"name":"Ancora Platform","company":"Ancora Media Solutions","category":"ad","domains":["*.ancoraplatform.com"]},{"name":"Anedot","category":"other","domains":["*.anedot.com"]},{"name":"AnimateJS","category":"utility","domains":["*.animatedjs.com"]},{"name":"AnswerDash","category":"customer-success","domains":["*.answerdash.com"]},{"name":"Answers","category":"analytics","domains":["*.answcdn.com","*.answers.com","*.dsply.com"]},{"name":"Apester","category":"analytics","domains":["*.apester.com","*.qmerce.com"]},{"name":"Apligraf SmartWeb","company":"Apligraf","category":"utility","domains":["*.apligraf.com.br"]},{"name":"Appier","category":"ad","domains":["*.appier.net"]},{"name":"Appsolute","category":"utility","homepage":"https://appsolute.us/","domains":["dropahint.love"]},{"name":"Apptus eSales","company":"Apptus","category":"analytics","domains":["*.apptus.com"]},{"name":"Arbor","company":"LiveRamp","category":"other","domains":["*.pippio.com"]},{"name":"Ardent Creative","category":"hosting","domains":["*.ardentcreative.co.uk"]},{"name":"Arnold Clark Automobiles","category":"content","domains":["*.arnoldclark.com"]},{"name":"Atom Content Marketing","category":"content","domains":["*.atomvault.net"]},{"name":"Atom Data","category":"other","domains":["*.atomdata.io"]},{"name":"Attribution","category":"ad","domains":["*.attributionapp.com"]},{"name":"Audience 360","company":"Datapoint Media","category":"ad","domains":["*.dpmsrv.com"]},{"name":"Audience Science","category":"ad","domains":["*.revsci.net"]},{"name":"AudienceSearch","company":"Intimate Merger","category":"ad","domains":["*.im-apps.net"]},{"name":"Auditorius","category":"ad","domains":["*.audtd.com"]},{"name":"Augur","category":"analytics","domains":["*.augur.io"]},{"name":"Auto Link Maker","company":"Apple","category":"ad","domains":["*.apple.com"]},{"name":"Autopilot","category":"ad","domains":["*.autopilothq.com"]},{"name":"Avail","company":"RichRelevance","category":"ad","domains":["*.avail.net"]},{"name":"AvantLink","category":"ad","domains":["*.avmws.com"]},{"name":"Avco Systems","category":"utility","domains":["*.avcosystems.com"]},{"name":"Avid Media","category":"customer-success","domains":["*.adspdbl.com","*.metadsp.co.uk"]},{"name":"Avocet Systems","category":"ad","domains":["*.avocet.io"]},{"name":"Avora","category":"analytics","domains":["*.truedash.com"]},{"name":"Azure Traffic Manager","company":"Microsoft","category":"other","domains":["*.gateway.net","*.trafficmanager.net"]},{"name":"Azure Web Services","company":"Microsoft","category":"cdn","domains":["*.azurewebsites.net","*.azureedge.net","*.msedge.net","*.windows.net"]},{"name":"BAM","category":"analytics","domains":["*.bam-x.com"]},{"name":"Baifendian Technology","category":"marketing","domains":["*.baifendian.com"]},{"name":"Bankrate","category":"utility","domains":["*.bankrate.com"]},{"name":"BannerFlow","company":"Nordic Factory Solutions","category":"ad","domains":["*.bannerflow.com"]},{"name":"Barclaycard SmartPay","company":"Barclaycard","category":"utility","domains":["*.barclaycardsmartpay.com"]},{"name":"Barilliance","category":"analytics","domains":["*.barilliance.net","dn3y71tq7jf07.cloudfront.net"]},{"name":"Barnebys","category":"other","domains":["*.barnebys.com"]},{"name":"Basis","company":"Basis Technologies","category":"ad","homepage":"https://basis.net/","domains":["*.basis.net"]},{"name":"Batch Media","category":"ad","domains":["*.t4ft.de"]},{"name":"Bauer Consumer Media","category":"content","domains":["*.bauercdn.com","*.greatmagazines.co.uk"]},{"name":"Baynote","category":"analytics","domains":["*.baynote.net"]},{"name":"Bazaarvoice","category":"analytics","domains":["*.bazaarvoice.com","*.feedmagnet.com"]},{"name":"Beachfront Media","category":"ad","domains":["*.bfmio.com"]},{"name":"BeamPulse","category":"analytics","domains":["*.beampulse.com"]},{"name":"Beeswax","category":"ad","domains":["*.bidr.io"]},{"name":"Beetailer","category":"social","domains":["*.beetailer.com"]},{"name":"Best Of Media S.A.","category":"content","domains":["*.servebom.com"]},{"name":"Bet365","category":"ad","domains":["*.bet365affiliates.com"]},{"name":"Betfair","category":"other","domains":["*.cdnbf.net"]},{"name":"Betgenius","company":"Genius Sports","category":"content","domains":["*.connextra.com"]},{"name":"Better Banners","category":"ad","domains":["*.betterbannerscloud.com"]},{"name":"Better Business Bureau","category":"analytics","domains":["*.bbb.org"]},{"name":"Between Digital","category":"ad","domains":["*.betweendigital.com"]},{"name":"BidTheatre","category":"ad","domains":["*.bidtheatre.com"]},{"name":"Bidtellect","category":"ad","domains":["*.bttrack.com"]},{"name":"Bigcommerce","category":"marketing","domains":["*.bigcommerce.com"]},{"name":"BitGravity","company":"Tata Communications","category":"content","domains":["*.bitgravity.com"]},{"name":"Bitly","category":"utility","domains":["*.bitly.com","*.lemde.fr","*.bit.ly"]},{"name":"Bizible","category":"ad","domains":["*.bizible.com","*.bizibly.com"]},{"name":"Bizrate","category":"analytics","domains":["*.bizrate.com"]},{"name":"BlastCasta","category":"social","domains":["*.poweringnews.com"]},{"name":"Blindado","category":"utility","domains":["*.siteblindado.com"]},{"name":"Blis","category":"ad","domains":["*.blismedia.com"]},{"name":"Blogg.se","category":"hosting","domains":["*.cdnme.se","*.publishme.se"]},{"name":"BloomReach","category":"ad","domains":["*.brcdn.com","*.brsrvr.com","*.brsvr.com"]},{"name":"Bloomberg","category":"content","domains":["*.gotraffic.net"]},{"name":"Shop Logic","company":"BloomReach","category":"marketing","domains":["*.goshoplogic.com"]},{"name":"Blue State Digital","category":"ad","domains":["*.bsd.net"]},{"name":"Blue Triangle Technologies","category":"analytics","domains":["*.btttag.com"]},{"name":"BlueCava","category":"ad","domains":["*.bluecava.com"]},{"name":"BlueKai","company":"Oracle","category":"ad","domains":["*.bkrtx.com","*.bluekai.com"]},{"name":"Bluecore","category":"analytics","domains":["*.bluecore.com"]},{"name":"Bluegg","category":"hosting","domains":["d1va5oqn59yrvt.cloudfront.net"]},{"name":"Bold Commerce","category":"utility","domains":["*.shappify-cdn.com","*.shappify.com","*.boldapps.net"]},{"name":"BoldChat","company":"LogMeIn","category":"customer-success","domains":["*.boldchat.com"]},{"name":"Bombora","category":"ad","domains":["*.mlno6.com"]},{"name":"Bonnier","category":"content","domains":["*.bonniercorp.com"]},{"name":"Bookatable","category":"content","domains":["*.bookatable.com","*.livebookings.com"]},{"name":"Booking.com","category":"content","domains":["*.bstatic.com"]},{"name":"Boomtrain","category":"ad","domains":["*.boomtrain.com","*.boomtrain.net"]},{"name":"BoostSuite","category":"ad","domains":["*.poweredbyeden.com"]},{"name":"Boostable","category":"ad","domains":["*.boostable.com"]},{"name":"Bootstrap Chinese network","category":"cdn","domains":["*.bootcss.com"]},{"name":"Booxscale","category":"ad","domains":["*.booxscale.com"]},{"name":"Borderfree","company":"pitney bowes","category":"utility","domains":["*.borderfree.com","*.fiftyone.com"]},{"name":"BowNow","category":"analytics","homepage":"https://bow-now.jp/","domains":["*.bownow.jp"]},{"name":"Box","category":"hosting","domains":["*.box.com"]},{"name":"Boxever","category":"analytics","domains":["*.boxever.com"]},{"name":"Braintree Payments","company":"Paypal","category":"utility","domains":["*.braintreegateway.com"]},{"name":"Branch Metrics","category":"ad","domains":["*.branch.io","*.app.link"]},{"name":"Brand Finance","category":"other","domains":["*.brandirectory.com"]},{"name":"Brand View","category":"analytics","domains":["*.brandview.com"]},{"name":"Brandscreen","category":"ad","domains":["*.rtbidder.net"]},{"name":"BridgeTrack","company":"Sapient","category":"ad","domains":["*.bridgetrack.com"]},{"name":"BrightRoll","company":"Yahoo!","category":"ad","domains":["*.btrll.com"]},{"name":"BrightTag / Signal","company":"Signal","homepage":"https://www.signal.co","category":"tag-manager","domains":["*.btstatic.com","*.thebrighttag.com"]},{"name":"Brightcove ZenCoder","company":"Brightcove","category":"other","domains":["*.zencoder.net"]},{"name":"Bronto Software","category":"marketing","domains":["*.bm23.com","*.bronto.com","*.brontops.com"]},{"name":"Browser-Update.org","category":"other","domains":["*.browser-update.org"]},{"name":"Buffer","category":"social","domains":["*.bufferapp.com"]},{"name":"Bugsnag","category":"utility","domains":["*.bugsnag.com","d2wy8f7a9ursnm.cloudfront.net"]},{"name":"Burst Media","category":"ad","domains":["*.burstnet.com","*.1rx.io"]},{"name":"Burt","category":"analytics","domains":["*.richmetrics.com","*.burt.io"]},{"name":"Business Message","category":"ad","domains":["*.message-business.com"]},{"name":"Business Week","company":"Bloomberg","category":"social","domains":["*.bwbx.io"]},{"name":"Buto","company":"Big Button","category":"ad","domains":["*.buto.tv"]},{"name":"Button","category":"ad","domains":["*.btncdn.com"]},{"name":"BuySellAds","category":"ad","domains":["*.buysellads.com","*.buysellads.net"]},{"name":"BuySight (AOL)","category":"ad","domains":["*.pulsemgr.com"]},{"name":"Buyapowa","category":"ad","domains":["*.co-buying.com"]},{"name":"BuzzFeed","category":"social","domains":["*.buzzfed.com"]},{"name":"C1X","category":"ad","domains":["*.c1exchange.com"]},{"name":"C3 Metrics","category":"analytics","domains":["*.c3tag.com"]},{"name":"CANDDi","company":"Campaign and Digital Intelligence","category":"ad","domains":["*.canddi.com"]},{"name":"CCM benchmark Group","category":"social","domains":["*.ccm2.net"]},{"name":"CD Networks","category":"utility","domains":["*.gccdn.net"]},{"name":"CDN Planet","category":"analytics","domains":["*.cdnplanet.com"]},{"name":"InAuth","category":"utility","homepage":"https://www.inauth.com/","domains":["*.cdn-net.com"]},{"name":"CJ Affiliate","company":"Conversant","category":"ad","domains":["*.cj.com","*.dpbolvw.net"]},{"name":"CJ Affiliate by Conversant","company":"Conversant","category":"ad","domains":["*.ftjcfx.com"]},{"name":"CNBC","category":"content","domains":["*.cnbc.com"]},{"name":"CNET Content Solutions","company":"CBS Interactive","category":"content","domains":["*.cnetcontent.com"]},{"name":"CPEx","category":"content","domains":["*.cpex.cz"]},{"name":"CPXi","category":"ad","domains":["*.cpxinteractive.com"]},{"name":"CUBED Attribution","company":"CUBED","category":"ad","domains":["*.withcubed.com"]},{"name":"Cachefly","category":"utility","domains":["*.cachefly.net"]},{"name":"Calendly","category":"other","domains":["*.calendly.com"]},{"name":"CallRail","category":"analytics","domains":["*.callrail.com"]},{"name":"CallTrackingMetrics","category":"analytics","domains":["*.tctm.co"]},{"name":"Canned Banners","category":"ad","domains":["*.cannedbanners.com"]},{"name":"Canopy Labs","category":"analytics","domains":["*.canopylabs.com"]},{"name":"Capita","category":"utility","domains":["*.crcom.co.uk"]},{"name":"Captify Media","category":"ad","domains":["*.cpx.to"]},{"name":"Captiify","category":"ad","domains":["*.captifymedia.com"]},{"name":"Captivate Ai","category":"ad","domains":["*.captivate.ai"]},{"name":"Captora","category":"marketing","domains":["*.captora.com"]},{"name":"Carcloud","category":"other","domains":["*.carcloud.co.uk"]},{"name":"Cardlytics","category":"ad","domains":["*.cardlytics.com"]},{"name":"Cardosa Enterprises","category":"analytics","domains":["*.y-track.com"]},{"name":"Caspian Media","category":"ad","domains":["*.caspianmedia.com"]},{"name":"Cast","category":"utility","domains":["*.cast.rocks"]},{"name":"Catch","category":"other","domains":["*.getcatch.com"]},{"name":"Cavisson","category":"analytics","domains":["*.cavisson.com"]},{"name":"Cedato","category":"ad","domains":["*.algovid.com","*.vdoserv.com"]},{"name":"Celebrus Technologies","category":"analytics","domains":["*.celebrus.com"]},{"name":"Celtra","category":"ad","domains":["*.celtra.com"]},{"name":"Centro","category":"ad","domains":["*.brand-server.com"]},{"name":"Ceros","category":"other","domains":["ceros.com","view.ceros.com"]},{"name":"Ceros Analytics","company":"Ceros","category":"analytics","domains":["api.ceros.com"]},{"name":"Certona","category":"analytics","domains":["*.certona.net"]},{"name":"Certum","category":"utility","domains":["*.ocsp-certum.com","*.certum.pl"]},{"name":"Cgrdirect","category":"other","domains":["*.cgrdirect.co.uk"]},{"name":"Channel 5 Media","category":"ad","domains":["*.five.tv"]},{"name":"Channel.me","category":"customer-success","domains":["*.channel.me"]},{"name":"ChannelAdvisor","category":"ad","domains":["*.channeladvisor.com","*.searchmarketing.com"]},{"name":"ChannelApe","company":"ChannelApe","category":"other","homepage":"https://www.channelape.com/","domains":["*.channelape.com"]},{"name":"Chargeads Oscar","company":"Chargeads","category":"ad","domains":["*.chargeads.com"]},{"name":"Charities Aid Foundation","category":"utility","domains":["*.cafonline.org"]},{"name":"Chartbeat","category":"analytics","domains":["*.chartbeat.com","*.chartbeat.net"]},{"name":"Cheapflights Media","company":"Momondo","category":"content","domains":["*.momondo.net"]},{"name":"CheckM8","category":"ad","domains":["*.checkm8.com"]},{"name":"CheckRate","company":"FreeStart","category":"utility","domains":["*.checkrate.co.uk"]},{"name":"Checkfront","category":"other","domains":["*.checkfront.com","dcg3jth5savst.cloudfront.net"]},{"name":"CheetahMail","company":"Experian","category":"ad","domains":["*.chtah.com"]},{"name":"Chitika","category":"ad","domains":["*.chitika.net"]},{"name":"ChoiceStream","category":"ad","domains":["*.choicestream.com"]},{"name":"Cint","category":"social","domains":["*.cint.com"]},{"name":"Civic","category":"hosting","domains":["*.civiccomputing.com"]},{"name":"ClearRise","category":"customer-success","domains":["*.clearrise.com"]},{"name":"Clearstream","category":"ad","domains":["*.clrstm.com"]},{"name":"Clerk.io ApS","category":"analytics","domains":["*.clerk.io"]},{"name":"CleverDATA","category":"ad","domains":["*.1dmp.io"]},{"name":"CleverTap","category":"analytics","domains":["d2r1yp2w7bby2u.cloudfront.net"]},{"name":"Click Density","category":"analytics","domains":["*.clickdensity.com"]},{"name":"Click4Assistance","category":"customer-success","domains":["*.click4assistance.co.uk"]},{"name":"ClickDesk","category":"customer-success","domains":["*.clickdesk.com","d1gwclp1pmzk26.cloudfront.net"]},{"name":"ClickDimensions","category":"ad","domains":["*.clickdimensions.com"]},{"name":"Clickadu (Winner Solutions)","category":"ad","domains":["*.clickadu.com"]},{"name":"Clickagy Audience Lab","company":"Clickagy","category":"ad","domains":["*.clickagy.com"]},{"name":"Clickio","category":"ad","domains":[]},{"name":"Clicktale","category":"analytics","domains":["*.cdngc.net","*.clicktale.net"]},{"name":"Clicktripz","category":"content","domains":["*.clicktripz.com"]},{"name":"Clik.com Websites","category":"content","domains":["*.clikpic.com"]},{"name":"Cloud Technologies","category":"ad","domains":["*.behavioralengine.com","*.behavioralmailing.com"]},{"name":"Cloud-A","category":"other","domains":["*.bulkstorage.ca"]},{"name":"Cloud.typography","company":"Hoefler &amp; Co","category":"cdn","domains":["*.typography.com"]},{"name":"CloudSponge","category":"ad","domains":["*.cloudsponge.com"]},{"name":"CloudVPS","category":"other","domains":["*.adoftheyear.com","*.objectstore.eu"]},{"name":"Cloudinary","category":"content","domains":["*.cloudinary.com"]},{"name":"Cloudqp","company":"Cloudwp","category":"other","domains":["*.cloudwp.io"]},{"name":"Cludo","category":"utility","domains":["*.cludo.com"]},{"name":"Cognesia","category":"marketing","domains":["*.intelli-direct.com"]},{"name":"CogoCast","company":"Cogo Labs","category":"ad","domains":["*.cogocast.net"]},{"name":"Colbenson","category":"utility","domains":["*.colbenson.com"]},{"name":"Collective","category":"ad","domains":["*.collective-media.net"]},{"name":"Com Laude","category":"other","domains":["*.gdimg.net"]},{"name":"Comm100","category":"customer-success","domains":["*.comm100.com"]},{"name":"CommerceHub","category":"marketing","domains":["*.mercent.com"]},{"name":"Commission Factory","category":"ad","domains":["*.cfjump.com"]},{"name":"Communicator","category":"ad","domains":["*.communicatorcorp.com","*.communicatoremail.com"]},{"name":"Comodo","category":"utility","domains":["*.comodo.com","*.trust-provider.com","*.trustlogo.com","*.usertrust.com","*.comodo.net"]},{"name":"Comodo Certificate Authority","company":"Comodo","category":"utility","domains":["crt.comodoca.com","*.comodoca4.com","ocsp.comodoca.com","ocsp.usertrust.com","crt.usertrust.com"]},{"name":"Compete","company":"Millwood Brown Digital","category":"analytics","domains":["*.c-col.com","*.compete.com"]},{"name":"Compuware","category":"analytics","domains":["*.axf8.net"]},{"name":"Conductrics","category":"analytics","domains":["*.conductrics.com"]},{"name":"Confirmit","category":"analytics","domains":["*.confirmit.com"]},{"name":"Connatix","category":"ad","domains":["*.connatix.com"]},{"name":"Connect Events","category":"hosting","domains":["*.connectevents.com.au"]},{"name":"Constant Contact","category":"ad","domains":["*.ctctcdn.com"]},{"name":"Constructor.io","category":"utility","domains":["*.cnstrc.com"]},{"name":"Contabo","category":"hosting","domains":["185.2.100.179"]},{"name":"Content Media Corporation","category":"content","domains":["*.contentmedia.eu"]},{"name":"ContentSquare","category":"analytics","domains":["d1m6l9dfulcyw7.cloudfront.net","*.content-square.net","*.contentsquare.net"]},{"name":"ContextWeb","category":"ad","domains":["*.contextweb.com"]},{"name":"Continental Exchange Solutions","category":"utility","domains":["*.hifx.com"]},{"name":"Converge-Digital","category":"ad","domains":["*.converge-digital.com"]},{"name":"Conversant","category":"analytics","domains":["*.dotomi.com","*.dtmpub.com","*.emjcd.com","mediaplex.com","*.tqlkg.com","*.fastclick.net"]},{"name":"Conversant Ad Server","company":"Conversant","category":"ad","domains":["adfarm.mediaplex.com","*.mediaplex.com"]},{"name":"Conversant Tag Manager","company":"Conversant","category":"tag-manager","domains":["*.mplxtms.com"]},{"name":"Conversio","category":"ad","domains":["*.conversio.com"]},{"name":"Conversion Labs","category":"ad","domains":["*.net.pl"]},{"name":"Conversion Logic","category":"ad","domains":["*.conversionlogic.net"]},{"name":"Convert Insights","category":"analytics","domains":["*.convertexperiments.com"]},{"name":"ConvertMedia","category":"ad","domains":["*.admailtiser.com","*.basebanner.com","*.cmbestsrv.com","*.vidfuture.com","*.zorosrv.com"]},{"name":"Convertro","category":"ad","domains":["*.convertro.com"]},{"name":"Conviva","category":"content","domains":["*.conviva.com"]},{"name":"Cookie Reports","category":"utility","domains":["*.cookiereports.com"]},{"name":"Cookie-Script.com","category":"utility","domains":["*.cookie-script.com"]},{"name":"CookieQ","company":"Baycloud Systems","category":"utility","domains":["*.cookieq.com"]},{"name":"CoolaData","category":"analytics","domains":["*.cooladata.com"]},{"name":"CopperEgg","category":"analytics","domains":["*.copperegg.com","d2vig74li2resi.cloudfront.net"]},{"name":"Council ad Network","category":"ad","domains":["*.counciladvertising.net"]},{"name":"Covert Pics","category":"content","domains":["*.covet.pics"]},{"name":"Cox Digital Solutions","category":"ad","domains":["*.afy11.net"]},{"name":"Creafi Online Media","category":"ad","domains":["*.creafi-online-media.com"]},{"name":"Creators","category":"content","domains":["*.creators.co"]},{"name":"Crimson Hexagon Analytics","company":"Crimson Hexagon","category":"analytics","domains":["*.hexagon-analytics.com"]},{"name":"Crimtan","category":"ad","domains":["*.ctnsnet.com"]},{"name":"Cross Pixel Media","category":"ad","domains":["*.crsspxl.com"]},{"name":"Crosswise","category":"ad","domains":["*.univide.com"]},{"name":"Crowd Control","company":"Lotame","category":"ad","domains":["*.crwdcntrl.net"]},{"name":"Crowd Ignite","category":"ad","domains":["*.crowdignite.com"]},{"name":"CrowdTwist","category":"ad","domains":["*.crowdtwist.com"]},{"name":"Crowdskout","category":"ad","domains":["*.crowdskout.com"]},{"name":"Crowdynews","category":"social","domains":["*.breakingburner.com"]},{"name":"Curalate","category":"marketing","domains":["*.curalate.com","d116tqlcqfmz3v.cloudfront.net"]},{"name":"Customer Acquisition Cloud","company":"[24]7","category":"ad","domains":["*.campanja.com"]},{"name":"Customer.io","category":"ad","domains":["*.customer.io"]},{"name":"Custora","category":"analytics","domains":["*.custora.com"]},{"name":"Cxense","category":"ad","domains":["*.cxense.com","*.cxpublic.com","*.emediate.dk","*.emediate.eu"]},{"name":"CyberKnight","company":"Namogoo","category":"utility","domains":["*.namogoo.com"]},{"name":"CyberSource (Visa)","category":"utility","domains":["*.authorize.net"]},{"name":"Cybernet Quest","category":"analytics","domains":["*.cqcounter.com"]},{"name":"D.A. Consortium","category":"ad","domains":["*.eff1.net"]},{"name":"D4t4 Solutions","category":"analytics","domains":["*.u5e.com"]},{"name":"DCSL Software","category":"hosting","domains":["*.dcslsoftware.com"]},{"name":"DMG Media","category":"content","domains":["*.mol.im","*.and.co.uk","*.anm.co.uk","*.dailymail.co.uk"]},{"name":"DTSCOUT","category":"ad","domains":["*.dtscout.com"]},{"name":"Dailykarma","category":"utility","homepage":"https://www.dailykarma.com/","domains":["*.dailykarma.io"]},{"name":"Dailymotion","category":"content","domains":["*.dailymotion.com","*.dmxleo.com","*.dm.gg","*.pxlad.io","*.dmcdn.net","*.sublimevideo.net"]},{"name":"Dash Hudson","company":"Dash Hudson","category":"content","domains":["*.dashhudson.com"]},{"name":"Datacamp","category":"utility","domains":["*.cdn77.org"]},{"name":"Datalicious","category":"tag-manager","domains":["*.supert.ag","*.optimahub.com"]},{"name":"Datalogix","category":"ad","domains":["*.nexac.com"]},{"name":"Datawrapper","category":"utility","domains":["*.datawrapper.de","*.dwcdn.net"]},{"name":"Dataxu","category":"marketing","domains":["*.w55c.net"]},{"name":"DatoCMS","homepage":"https://www.datocms.com/","category":"content","domains":["*.datocms-assets.com"]},{"name":"Datonics","category":"ad","domains":["*.pro-market.net"]},{"name":"Dealtime","category":"content","domains":["*.dealtime.com"]},{"name":"Debenhams Geo Location","company":"Debenhams","category":"utility","domains":["176.74.183.134"]},{"name":"Decibel Insight","category":"analytics","domains":["*.decibelinsight.net"]},{"name":"Deep Forest Media","company":"Rakuten","category":"ad","domains":["*.dpclk.com"]},{"name":"DeepIntent","category":"ad","domains":["*.deepintent.com"]},{"name":"Delicious Media","category":"social","domains":["*.delicious.com"]},{"name":"Delineo","category":"ad","domains":["*.delineo.com"]},{"name":"Delta Projects AB","category":"ad","domains":["*.de17a.com"]},{"name":"Demand Media","category":"content","domains":["*.dmtracker.com"]},{"name":"DemandBase","category":"marketing","domains":["*.demandbase.com"]},{"name":"DemandJump","category":"analytics","domains":["*.demandjump.com"]},{"name":"Dennis Publishing","category":"content","domains":["*.alphr.com"]},{"name":"Devatics","category":"analytics","domains":["*.devatics.com","*.devatics.io"]},{"name":"Developer Media","category":"ad","domains":["*.developermedia.com"]},{"name":"DialogTech","category":"ad","domains":["*.dialogtech.com"]},{"name":"DialogTech SourceTrak","company":"DialogTech","category":"ad","domains":["d31y97ze264gaa.cloudfront.net"]},{"name":"DigiCert","category":"utility","domains":["*.digicert.com"]},{"name":"Digioh","category":"ad","domains":["*.lightboxcdn.com"]},{"name":"Digital Look","category":"content","domains":["*.digitallook.com"]},{"name":"Digital Media Exchange","company":"NDN","category":"content","domains":["*.newsinc.com"]},{"name":"Digital Millennium Copyright Act Services","category":"utility","domains":["*.dmca.com"]},{"name":"Digital Ocean","category":"other","domains":["95.85.62.56"]},{"name":"Digital Remedy","category":"ad","domains":["*.consumedmedia.com"]},{"name":"Digital Window","category":"ad","domains":["*.awin1.com","*.zenaps.com"]},{"name":"DigitalScirocco","category":"analytics","domains":["*.digitalscirocco.net"]},{"name":"Digitial Point","category":"utility","domains":["*.dpstatic.com"]},{"name":"Diligent (Adnetik)","category":"ad","domains":["*.wtp101.com"]},{"name":"Directed Edge","category":"social","domains":["*.directededge.com"]},{"name":"Distribute Travel","category":"ad","domains":["*.dtrck.net"]},{"name":"District M","category":"ad","domains":["*.districtm.io"]},{"name":"DistroScale","category":"ad","domains":["*.jsrdn.com"]},{"name":"Divido","category":"utility","domains":["*.divido.com"]},{"name":"Dow Jones","category":"content","domains":["*.dowjones.com","*.dowjoneson.com"]},{"name":"Drifty Co","category":"utility","domains":["*.onicframework.com"]},{"name":"Drip","company":"The Numa Group","category":"ad","domains":["*.getdrip.com"]},{"name":"Dropbox","category":"utility","domains":["*.dropboxusercontent.com"]},{"name":"Dyn Real User Monitoring","company":"Dyn","category":"analytics","domains":["*.jisusaiche.biz","*.dynapis.com","*.jisusaiche.com","*.dynapis.info"]},{"name":"DynAdmic","category":"ad","domains":["*.dyntrk.com"]},{"name":"Dynamic Converter","category":"utility","domains":["*.dynamicconverter.com"]},{"name":"Dynamic Dummy Image Generator","company":"Open Source","category":"utility","domains":["*.dummyimage.com"]},{"name":"Dynamic Logic","category":"ad","domains":["*.dl-rms.com","*.questionmarket.com"]},{"name":"Dynamic Yield","category":"customer-success","domains":["*.dynamicyield.com"]},{"name":"Dynatrace","category":"analytics","domains":["*.ruxit.com","js-cdn.dynatrace.com"]},{"name":"ec-concier","homepage":"https://ec-concier.com/","category":"marketing","domains":["*.ec-concier.com"]},{"name":"ECT News Network","category":"content","domains":["*.ectnews.com"]},{"name":"ELITechGroup","category":"analytics","domains":["*.elitechnology.com"]},{"name":"EMAP","category":"content","domains":["*.emap.com"]},{"name":"EMedia Solutions","category":"ad","domains":["*.e-shots.eu"]},{"name":"EQ works","category":"ad","domains":["*.eqads.com"]},{"name":"ESV Digital","category":"analytics","domains":["*.esearchvision.com"]},{"name":"Ebiquity","category":"analytics","domains":["*.ebiquitymedia.com"]},{"name":"Eco Rebates","category":"ad","domains":["*.ecorebates.com"]},{"name":"Ecwid","category":"hosting","domains":["*.ecwid.com","*.shopsettings.com","d3fi9i0jj23cau.cloudfront.net","d3j0zfs7paavns.cloudfront.net"]},{"name":"Edge Web Fonts","company":"Adobe Systems","category":"cdn","domains":["*.edgefonts.net"]},{"name":"Edition Digital","category":"ad","domains":["*.editiondigital.com"]},{"name":"Edot Web Technologies","category":"hosting","domains":["*.edot.co.za"]},{"name":"Effective Measure","category":"ad","domains":["*.effectivemeasure.net"]},{"name":"Effiliation sa","category":"ad","domains":["*.effiliation.com"]},{"name":"Ekm Systems","category":"analytics","domains":["*.ekmsecure.com","*.ekmpinpoint.co.uk"]},{"name":"Elastera","category":"hosting","domains":["*.elastera.net"]},{"name":"Elastic Ad","category":"ad","domains":["*.elasticad.net"]},{"name":"Elastic Load Balancing","company":"Amazon Web Services","category":"hosting","domains":["*.105app.com"]},{"name":"Elecard StreamEye","company":"Elecard","category":"other","domains":["*.streameye.net"]},{"name":"Elevate","company":"Elevate Technology Solutions","category":"utility","domains":["*.elevaate.technology"]},{"name":"Elicit","category":"utility","domains":["*.elicitapp.com"]},{"name":"Elogia","category":"ad","domains":["*.elogia.net"]},{"name":"Email Attitude","company":"1000mercis","category":"ad","domains":["*.email-attitude.com"]},{"name":"EmailCenter","category":"ad","domains":["*.emailcenteruk.com"]},{"name":"Embedly","category":"content","domains":["*.embedly.com","*.embed.ly"]},{"name":"EmpathyBroker Site Search","company":"EmpathyBroker","category":"utility","domains":["*.empathybroker.com"]},{"name":"Enfusen","category":"analytics","domains":["*.enfusen.com"]},{"name":"Engadget","company":"Engadget (AOL)","category":"content","domains":["*.gdgt.com"]},{"name":"Engagio","category":"marketing","domains":["*.engagio.com"]},{"name":"Ensighten Manage","company":"Ensighten","category":"tag-manager","domains":["*.levexis.com"]},{"name":"EntityLink","category":"other","domains":["*.entitytag.co.uk"]},{"name":"Entrust Datacard","category":"utility","domains":["*.entrust.com","*.entrust.net"]},{"name":"Equiniti","category":"utility","domains":["*.equiniti.com"]},{"name":"Errorception","category":"utility","domains":["*.errorception.com"]},{"name":"Esri ArcGIS","company":"Esri","category":"utility","domains":["*.arcgis.com","*.arcgisonline.com"]},{"name":"Ethnio","category":"analytics","domains":["*.ethn.io"]},{"name":"Eulerian Technologies","category":"ad","domains":["*.eolcdn.com"]},{"name":"Euroland","category":"utility","domains":["*.euroland.com"]},{"name":"European Interactive Digital ad Alli","category":"utility","domains":["*.edaa.eu"]},{"name":"Eventbrite","category":"hosting","domains":["*.evbuc.com","*.eventbrite.co.uk"]},{"name":"Everflow","category":"analytics","domains":["*.tp88trk.com"]},{"name":"Evergage","category":"analytics","domains":["*.evergage.com","*.evgnet.com"]},{"name":"Everquote","category":"content","domains":["*.evq1.com"]},{"name":"Everyday Health","category":"ad","domains":["*.agoramedia.com"]},{"name":"Evidon","category":"analytics","domains":["*.evidon.com"]},{"name":"Evolve Media","category":"content","domains":["*.evolvemediallc.com"]},{"name":"Exactag","category":"ad","domains":["*.exactag.com"]},{"name":"ExoClick","category":"ad","domains":["*.exoclick.com"]},{"name":"Expedia","category":"content","domains":["*.travel-assets.com","*.trvl-media.com","*.trvl-px.com","*.uciservice.com"]},{"name":"Expedia Australia","company":"Expedia","category":"content","domains":["*.expedia.com.au"]},{"name":"Expedia Canada","company":"Expedia","category":"content","domains":["*.expedia.ca"]},{"name":"Expedia France","company":"Expedia","category":"content","domains":["*.expedia.fr"]},{"name":"Expedia Germany","company":"Expedia","category":"content","domains":["*.expedia.de"]},{"name":"Expedia Italy","company":"Expedia","category":"content","domains":["*.expedia.it"]},{"name":"Expedia Japan","company":"Expedia","category":"content","domains":["*.expedia.co.jp"]},{"name":"Expedia USA","company":"Expedia","category":"content","domains":["*.expedia.com"]},{"name":"Expedia United Kingdom","company":"Expedia","category":"content","domains":["*.expedia.co.uk"]},{"name":"Experian","category":"utility","domains":["*.audienceiq.com","*.experian.com","*.experianmarketingservices.digital"]},{"name":"Experian Cross-Channel Marketing Platform","company":"Experian","category":"marketing","domains":["*.eccmp.com","*.ccmp.eu"]},{"name":"Exponea","category":"analytics","domains":["*.exponea.com"]},{"name":"Exponential Interactive","category":"ad","domains":["*.exponential.com"]},{"name":"Extensis WebInk","category":"cdn","domains":["*.webink.com"]},{"name":"Extole","category":"ad","domains":["*.extole.com","*.extole.io"]},{"name":"Ey-Seren","category":"analytics","domains":["*.webabacus.com"]},{"name":"EyeView","category":"ad","domains":["*.eyeviewads.com"]},{"name":"Eyeota","category":"ad","domains":["*.eyeota.net"]},{"name":"Ezakus Pretargeting","company":"Ezakus","category":"ad","domains":["*.ezakus.net"]},{"name":"Ezoic","category":"analytics","domains":["*.ezoic.net"]},{"name":"FLXone","company":"Teradata","category":"ad","domains":["*.pangolin.blue","*.flx1.com","d2hlpp31teaww3.cloudfront.net","*.flxpxl.com"]},{"name":"Fairfax Media","category":"content","domains":["ads.fairfax.com.au","resources.fairfax.com.au"]},{"name":"Fairfax Media Analtics","company":"Fairfax Media","category":"analytics","domains":["analytics.fairfax.com.au"]},{"name":"Falk Technologies","category":"ad","domains":["*.angsrvr.com"]},{"name":"Fanplayr","category":"analytics","domains":["*.fanplayr.com","d38nbbai6u794i.cloudfront.net"]},{"name":"Fast Thinking","company":"NE Marketing","category":"marketing","domains":["*.fast-thinking.co.uk"]},{"name":"Fastest Forward","category":"analytics","domains":["*.gaug.es"]},{"name":"Fastly","category":"utility","domains":["*.fastly.net"]},{"name":"Feedbackify","company":"InsideMetrics","category":"analytics","domains":["*.feedbackify.com"]},{"name":"Feefo.com","company":"Feefo","category":"analytics","domains":["*.feefo.com"]},{"name":"Fidelity Media","category":"ad","domains":["*.fidelity-media.com"]},{"name":"Filestack","category":"content","domains":["*.filepicker.io"]},{"name":"Finsbury Media","category":"ad","domains":["*.finsburymedia.com"]},{"name":"Firepush","category":"utility","domains":["*.firepush.io"]},{"name":"FirstImpression","category":"ad","domains":["*.firstimpression.io"]},{"name":"Fit Analytics","category":"other","domains":["*.fitanalytics.com"]},{"name":"Fits Me","category":"analytics","domains":["*.fits.me"]},{"name":"Fivetran","category":"analytics","domains":["*.fivetran.com"]},{"name":"FlexShopper","category":"utility","domains":["*.flexshopper.com"]},{"name":"Flickr","category":"content","domains":["*.flickr.com","*.staticflickr.com"]},{"name":"Flipboard","category":"social","domains":["*.flipboard.com"]},{"name":"Flipdesk","category":"customer-success","homepage":"https://flipdesk.jp/","domains":["*.flipdesk.jp"]},{"name":"Flipp","category":"analytics","domains":["*.wishabi.com","d2e0sxz09bo7k2.cloudfront.net","*.wishabi.net"]},{"name":"Flite","category":"ad","domains":["*.flite.com"]},{"name":"Flixmedia","category":"analytics","domains":["*.flix360.com","*.flixcar.com","*.flixfacts.com","*.flixsyndication.net","*.flixfacts.co.uk"]},{"name":"Flockler","category":"ad","domains":["*.flockler.com"]},{"name":"Flowplayer","category":"content","domains":["*.flowplayer.org"]},{"name":"Flowzymes Ky","category":"cdn","domains":["*.jquerytools.org"]},{"name":"Fomo","category":"ad","domains":["*.notifyapp.io"]},{"name":"Fonecall","category":"analytics","domains":["*.web-call-analytics.com"]},{"name":"Fontdeck","category":"cdn","domains":["*.fontdeck.com"]},{"name":"Foodity Technologies","category":"ad","domains":["*.foodity.com"]},{"name":"Force24","category":"ad","domains":["*.force24.co.uk"]},{"name":"ForeSee","company":"Answers","category":"analytics","domains":["*.4seeresults.com","*.answerscloud.com","*.foresee.com","*.foreseeresults.com"]},{"name":"Forensiq","category":"utility","domains":["*.fqtag.com"]},{"name":"Fort Awesome","category":"cdn","domains":["*.fortawesome.com"]},{"name":"Forter","category":"utility","domains":["*.forter.com"]},{"name":"Forward Internet Group","category":"hosting","domains":["*.f3d.io"]},{"name":"Forward3D","category":"ad","domains":["*.forward3d.com"]},{"name":"Fospha","category":"analytics","domains":["*.fospha.com"]},{"name":"Foursixty","category":"customer-success","domains":["*.foursixty.com"]},{"name":"FoxyCart","category":"utility","domains":["*.foxycart.com"]},{"name":"Fraudlogix","category":"utility","domains":["*.yabidos.com"]},{"name":"FreakOut","category":"ad","domains":["*.fout.jp"]},{"name":"Freespee","category":"customer-success","domains":["*.freespee.com"]},{"name":"Freetobook","category":"content","domains":["*.freetobook.com"]},{"name":"Fresh 8 Gaming","category":"ad","domains":["*.fresh8.co"]},{"name":"Fresh Relevance","category":"analytics","domains":["*.freshrelevance.com","*.cloudfront.ne","d1y9qtn9cuc3xw.cloudfront.net","d81mfvml8p5ml.cloudfront.net","dkpklk99llpj0.cloudfront.net"]},{"name":"Friendbuy","category":"ad","domains":["*.friendbuy.com","djnf6e5yyirys.cloudfront.net"]},{"name":"Frienefit","category":"ad","domains":["*.frienefit.com"]},{"name":"FuelX","category":"ad","domains":["*.fuelx.com"]},{"name":"Full Circle Studies","category":"analytics","domains":["*.securestudies.com"]},{"name":"FullStory","category":"analytics","domains":["*.fullstory.com"]},{"name":"Fyber","category":"ad","domains":["*.fyber.com"]},{"name":"G-Forces Web Management","category":"hosting","domains":["*.gforcesinternal.co.uk"]},{"name":"G4 Native","company":"Gravity4","category":"ad","domains":["*.triggit.com"]},{"name":"GET ME IN!  (TicketMaster)","category":"content","domains":["*.getmein.com"]},{"name":"GIPHY","category":"content","domains":["*.giphy.com"]},{"name":"GainCloud","company":"GainCloud Systems","category":"other","domains":["*.egaincloud.net"]},{"name":"Gath Adams","category":"content","domains":["*.iwantthatflight.com.au"]},{"name":"Gecko Tribe","category":"social","domains":["*.geckotribe.com"]},{"name":"Gemius","category":"ad","domains":["*.gemius.pl"]},{"name":"Genesis Media","category":"ad","domains":["*.bzgint.com","*.genesismedia.com","*.genesismediaus.com"]},{"name":"Genie Ventures","category":"ad","domains":["*.genieventures.co.uk"]},{"name":"Geniee","category":"ad","domains":["*.href.asia","*.genieessp.jp","*.genieesspv.jp","*.gssprt.jp"]},{"name":"Geniuslink","category":"analytics","domains":["*.geni.us"]},{"name":"GeoRiot","category":"other","domains":["*.georiot.com"]},{"name":"GeoTrust","category":"utility","domains":["*.geotrust.com"]},{"name":"Geoplugin","category":"utility","domains":["*.geoplugin.com","*.geoplugin.net"]},{"name":"Georeferencer","company":"Klokan Technologies","category":"utility","domains":["*.georeferencer.com"]},{"name":"GetIntent RTBSuite","company":"GetIntent","category":"ad","domains":["*.adhigh.net"]},{"name":"GetResponse","category":"ad","domains":["*.getresponse.com"]},{"name":"GetSiteControl","company":"GetWebCraft","category":"utility","domains":["*.getsitecontrol.com"]},{"name":"GetSocial","category":"social","domains":["*.getsocial.io"]},{"name":"Getty Images","category":"content","domains":["*.gettyimages.com","*.gettyimages.co.uk"]},{"name":"Gfycat","company":"Gycat","category":"utility","domains":["*.gfycat.com"]},{"name":"Ghostery Enterprise","company":"Ghostery","category":"marketing","domains":["*.betrad.com"]},{"name":"Giant Media","category":"ad","domains":["*.videostat.com"]},{"name":"Gigya","category":"analytics","domains":["*.gigya.com"]},{"name":"GitHub","category":"utility","domains":["*.github.com","*.githubusercontent.com","*.github.io","*.rawgit.com"]},{"name":"Gladly","company":"Gladly","homepage":"https://www.gladly.com/","category":"customer-success","domains":["*.gladly.com"]},{"name":"Glassdoor","category":"content","domains":["*.glassdoor.com"]},{"name":"Gleam","category":"marketing","domains":["*.gleam.io"]},{"name":"Global Digital Markets","category":"ad","domains":["*.gdmdigital.com"]},{"name":"Global-e","category":"hosting","domains":["*.global-e.com"]},{"name":"GlobalSign","category":"utility","domains":["*.globalsign.com","*.globalsign.net"]},{"name":"GlobalWebIndex","category":"analytics","domains":["*.globalwebindex.net"]},{"name":"Globase International","category":"ad","domains":["*.globase.com"]},{"name":"GoDataFeed","category":"other","domains":["*.godatafeed.com"]},{"name":"Google APIs","company":"Google","category":"utility","domains":["googleapis.com"]},{"name":"Google Ad Block Detection","company":"Google","category":"ad","domains":["*.0emn.com","*.0fmm.com"]},{"name":"Google Analytics Experiments","company":"Google","category":"analytics","domains":["*.gexperiments1.com"]},{"name":"Google DoubleClick Ad Exchange","company":"Google","category":"ad","domains":["*.admeld.com"]},{"name":"Google IPV6 Metrics","company":"Google","category":"analytics","domains":["*.ipv6test.net"]},{"name":"Google Plus","company":"Google","category":"social","domains":["plus.google.com"]},{"name":"Google Trusted Stores","company":"Google","category":"utility","domains":["*.googlecommerce.com"]},{"name":"Google Video","company":"Google","category":"content","domains":["*.googlevideo.com"]},{"name":"Google reCAPTCHA","company":"Google","category":"utility","domains":["*.recaptcha.net"]},{"name":"GovMetric","company":"ROL Solutions","category":"analytics","domains":["*.govmetric.com"]},{"name":"Granify","category":"analytics","domains":["*.granify.com"]},{"name":"Grapeshot","category":"ad","domains":["*.gscontxt.net","*.grapeshot.co.uk"]},{"name":"Gravity (AOL)","category":"analytics","domains":["*.grvcdn.com"]},{"name":"Groovy Gecko","category":"content","domains":["*.ggwebcast.com","*.groovygecko.net"]},{"name":"GroupM","category":"ad","domains":["*.qservz.com"]},{"name":"Guardian Media","category":"ad","domains":["*.theguardian.com","*.guardian.co.uk"]},{"name":"GumGum","category":"ad","domains":["*.gumgum.com"]},{"name":"Gumtree","category":"content","domains":["*.gumtree.com"]},{"name":"H264 Codec","company":"Cisco","category":"other","domains":["*.openh264.org"]},{"name":"HERE","category":"analytics","domains":["*.medio.com"]},{"name":"HP Optimost","company":"Hewlett-Packard Development Company","category":"marketing","domains":["*.hp.com","d2uncb19xzxhzx.cloudfront.net"]},{"name":"Has Offers","company":"TUNE","category":"ad","domains":["*.go2cloud.org"]},{"name":"Hawk Search","category":"utility","domains":["*.hawksearch.com"]},{"name":"Haymarket Media Group","category":"content","domains":["*.brandrepublic.com","*.hbpl.co.uk"]},{"name":"Heap","category":"analytics","domains":["*.heapanalytics.com"]},{"name":"Hearst Communications","category":"content","domains":["*.h-cdn.co","*.hearstdigital.com","*.hearstlabs.com","*.hearst.io","*.cdnds.net"]},{"name":"Heatmap","category":"analytics","domains":["*.heatmap.it"]},{"name":"Heroku","category":"other","domains":["*.herokuapp.com"]},{"name":"Hexton","category":"utility","domains":["*.hextom.com"]},{"name":"Hibernia Networks","category":"utility","domains":["*.hiberniacdn.com"]},{"name":"High Impact Media","category":"ad","domains":["*.reactx.com"]},{"name":"Highcharts","category":"utility","domains":["*.highcharts.com"]},{"name":"Highwinds","category":"utility","domains":["*.hwcdn.net"]},{"name":"HitsLink","category":"analytics","domains":["*.hitslink.com"]},{"name":"Hola Networks","category":"other","domains":["*.h-cdn.com"]},{"name":"Hootsuite","category":"analytics","domains":["*.hootsuite.com"]},{"name":"HotUKDeals","category":"analytics","domains":["*.hotukdeals.com"]},{"name":"HotWords","company":"Media Response Group","category":"ad","domains":["*.hotwords.com.br"]},{"name":"HotelsCombined","category":"content","domains":["*.datahc.com"]},{"name":"Hoverr","category":"ad","domains":["*.hoverr.media"]},{"name":"Hull.js","category":"utility","domains":["*.hull.io","*.hullapp.io"]},{"name":"Hupso Website Analyzer","company":"Hupso","category":"analytics","domains":["*.hupso.com"]},{"name":"I-Behavior","company":"WPP","category":"ad","domains":["*.ib-ibi.com"]},{"name":"i-mobile","company":"i-mobile","category":"ad","domains":["*.i-mobile.co.jp"]},{"name":"IBM Digital Analytics","company":"IBM","category":"analytics","domains":["*.cmcore.com","coremetrics.com","data.coremetrics.com","data.de.coremetrics.com","libs.de.coremetrics.com","tmscdn.de.coremetrics.com","iocdn.coremetrics.com","libs.coremetrics.com","tmscdn.coremetrics.com","*.s81c.com","*.unica.com","*.coremetrics.eu"]},{"name":"IBM Digital Data Exchange","company":"IBM","category":"tag-manager","domains":["tagmanager.coremetrics.com"]},{"name":"IBM Tealeaf","company":"IBM","category":"analytics","domains":["*.ibmcloud.com"]},{"name":"IBM Acoustic Campaign","company":"IBM","category":"analytics","domains":["www.sc.pages01.net","www.sc.pages02.net","www.sc.pages03.net","www.sc.pages04.net","www.sc.pages05.net","www.sc.pages06.net","www.sc.pages07.net","www.sc.pages08.net","www.sc.pages09.net","www.sc.pagesA.net"]},{"name":"ICF Technology","category":"content","domains":["*.camads.net"]},{"name":"IFDNRG","category":"hosting","domains":["*.ifdnrg.com"]},{"name":"IMRG","category":"analytics","domains":["*.peermap.com","*.imrg.org"]},{"name":"IPONWEB","category":"ad","domains":["*.company-target.com","*.liadm.com","*.iponweb.net","*.p161.net"]},{"name":"IQ Mobile","category":"utility","domains":["*.iqm.cc"]},{"name":"IS Group","category":"hosting","domains":["*.creative-serving.com"]},{"name":"IT Dienstleistungen Tim Prinzkosky","category":"utility","domains":["*.flaticons.net"]},{"name":"IXI Digital","company":"Equifax","category":"ad","domains":["*.ixiaa.com"]},{"name":"IcoMoon","category":"cdn","domains":["d19ayerf5ehaab.cloudfront.net","d1azc1qln24ryf.cloudfront.net"]},{"name":"IdenTrust","category":"utility","domains":["*.identrust.com"]},{"name":"Ido","category":"customer-success","domains":["*.idio.co"]},{"name":"Ignition One","category":"marketing","domains":["*.searchignite.com"]},{"name":"ImageShack","category":"content","domains":["*.yfrog.com"]},{"name":"Imagen Studio","category":"utility","domains":["*.telephonesky.com"]},{"name":"Imagini Holdings","category":"ad","domains":["*.vdna-assets.com"]},{"name":"Img Safe","category":"content","domains":["*.imgsafe.org"]},{"name":"Imgur","category":"utility","domains":["*.imgur.com"]},{"name":"Impact Radius","category":"ad","domains":["*.impactradius-event.com","*.impactradius-go.com","*.7eer.net","d3cxv97fi8q177.cloudfront.net","*.evyy.net","*.ojrq.net"]},{"name":"Improve Digital","category":"ad","domains":["*.360yield.com"]},{"name":"Improvely","category":"analytics","domains":["*.iljmp.com"]},{"name":"InMobi","category":"ad","domains":["*.inmobi.com"]},{"name":"InSkin Media","category":"ad","domains":["*.inskinad.com","*.inskinmedia.com"]},{"name":"Inbenta","category":"customer-success","domains":["*.inbenta.com"]},{"name":"Incisive Media","category":"content","domains":["*.incisivemedia.com"]},{"name":"Indeed","category":"content","domains":["*.indeed.com"]},{"name":"Index Exchange","company":"WPP","category":"ad","domains":["*.casalemedia.com","*.indexww.com"]},{"name":"Indoona","category":"other","domains":["*.indoona.com"]},{"name":"Infectious Media","category":"ad","domains":["*.impdesk.com","*.impressiondesk.com","*.inmz.net"]},{"name":"Inference Mobile","category":"ad","domains":["*.inferencemobile.com"]},{"name":"Infinity Tracking","category":"analytics","domains":["*.infinity-tracking.net"]},{"name":"Infoline","category":"analytics","domains":["*.ioam.de"]},{"name":"Infolinks","category":"ad","domains":["*.infolinks.com"]},{"name":"Infopark","category":"hosting","domains":["*.scrvt.com"]},{"name":"Infusionsoft","category":"ad","domains":["*.infusionsoft.com"]},{"name":"Ink","category":"ad","domains":["*.inktad.com"]},{"name":"Inktel Contact Center Solutions","company":"Inktel","category":"customer-success","domains":["*.inktel.com"]},{"name":"Inneractive","category":"ad","domains":["*.inner-active.mobi"]},{"name":"Innovid","category":"ad","homepage":"https://www.innovid.com/","domains":["*.innovid.com"]},{"name":"Insight Express","category":"analytics","domains":["*.insightexpressai.com"]},{"name":"Insipio","category":"other","domains":["*.insipio.com"]},{"name":"Inspectlet","category":"analytics","domains":["*.inspectlet.com"]},{"name":"Instansive","category":"utility","domains":["*.instansive.com"]},{"name":"Instart","homepage":"https://www.instart.com/","category":"utility","domains":["*.insnw.net"]},{"name":"Instembedder","category":"content","domains":["*.instaembedder.com"]},{"name":"Instinctive","category":"ad","domains":["*.instinctiveads.com"]},{"name":"Intelligent Reach","category":"ad","domains":["*.ist-track.com"]},{"name":"Intent HQ","category":"analytics","domains":["*.intenthq.com"]},{"name":"Intent IQ","category":"ad","domains":["*.intentiq.com"]},{"name":"Intercept Interactive","category":"ad","domains":["*.undertone.com"]},{"name":"Interest Graph","company":"AOL","category":"ad","domains":["*.gravity.com"]},{"name":"Internet Brands","category":"content","domains":["*.ibpxl.com"]},{"name":"Interpublic Group","category":"ad","domains":["*.mbww.com"]},{"name":"Interstate","category":"analytics","domains":["*.interstateanalytics.com"]},{"name":"Interview","category":"analytics","domains":["*.efm.me"]},{"name":"Intilery","category":"customer-success","domains":["*.intilery-analytics.com"]},{"name":"Investis","category":"utility","domains":["*.investis.com"]},{"name":"Investis Flife","category":"hosting","domains":["*.quartalflife.com"]},{"name":"Invodo","category":"ad","domains":["*.invodo.com"]},{"name":"iSite","category":"analytics","domains":["*.isitetv.com"]},{"name":"Issue","category":"content","domains":["*.issue.by"]},{"name":"J.D. Williams & Co","category":"content","domains":["*.drct2u.com"]},{"name":"Janrain","category":"analytics","domains":["*.janrain.com","*.janrainbackplane.com","*.rpxnow.com","d3hmp0045zy3cs.cloudfront.net"]},{"name":"Jellyfish","category":"ad","domains":["*.jellyfish.net"]},{"name":"JetStream","category":"content","domains":["*.xlcdn.com"]},{"name":"JingDong","category":"content","domains":["*.3.com","*.jd.com"]},{"name":"Jivox","category":"ad","domains":["*.jivox.com"]},{"name":"Jobvite","category":"content","domains":["*.jobvite.com"]},{"name":"Johnston Press","category":"content","domains":["*.johnstonpress.co.uk","*.jpress.co.uk"]},{"name":"Join the Dots (Research)","category":"social","domains":["*.jtdiscuss.com"]},{"name":"JotForm","category":"utility","domains":["*.jotformpro.com"]},{"name":"JuicyAds","category":"ad","domains":["*.juicyads.com"]},{"name":"JustPremium","category":"ad","domains":["*.net.net"]},{"name":"JustPremium Ads","company":"JustPremium","category":"ad","domains":["*.justpremium.com"]},{"name":"JustUno","category":"ad","domains":["*.justuno.com","d2j3qa5nc37287.cloudfront.net"]},{"name":"KINX (Korea Internet Neutral eXchange)","category":"other","domains":["*.kinxcdn.com"]},{"name":"KISSmetrics","category":"analytics","domains":["*.kissmetrics.com","doug1izaerwt3.cloudfront.net","dsyszv14g9ymi.cloudfront.net"]},{"name":"Kaizen Platform","category":"analytics","domains":["*.kaizenplatform.net"]},{"name":"Kakao","category":"social","domains":["*.daum.net","*.daumcdn.net"]},{"name":"Kaltura Video Platform","company":"Kaltura","category":"content","domains":["*.kaltura.com"]},{"name":"Kameleoon","category":"analytics","domains":["*.kameleoon.com","*.kameleoon.eu"]},{"name":"Kampyle","category":"analytics","domains":["*.kampyle.com"]},{"name":"Kantar","category":"analytics","domains":["*.sesamestats.com"]},{"name":"Kargo","category":"marketing","domains":["*.kargo.com"]},{"name":"KARTE","company":"Plaid","homepage":"https://karte.io/","category":"marketing","domains":["*.karte.io"]},{"name":"Kauli","category":"ad","domains":["*.kau.li"]},{"name":"Keen","company":"Keen","homepage":"https://keen.io/","category":"analytics","domains":["*.keen.io","d26b395fwzu5fz.cloudfront.net"]},{"name":"Kelkoo","category":"hosting","domains":["*.kelkoo.com"]},{"name":"Kenshoo","category":"marketing","domains":["*.xg4ken.com"]},{"name":"Key CDN","category":"utility","domains":["*.kxcdn.com"]},{"name":"Keynote","company":"Dynatrace","category":"analytics","domains":["*.keynote.com"]},{"name":"Keywee","category":"ad","domains":["*.keywee.co"]},{"name":"Kiosked","category":"ad","domains":["*.kiosked.com"]},{"name":"Klarna","category":"utility","domains":["*.klarna.com"]},{"name":"Klaviyo","category":"ad","domains":["*.klaviyo.com"]},{"name":"Klevu Search","company":"Klevu","category":"utility","domains":["*.klevu.com"]},{"name":"Klick2Contact","category":"customer-success","domains":["*.klick2contact.com"]},{"name":"Knight Lab","company":"Northwestern University","category":"utility","domains":["*.knightlab.com"]},{"name":"Kodajo","category":"other","domains":["*.kodajo.com"]},{"name":"Komoona","category":"ad","domains":["*.komoona.com"]},{"name":"Korrelate","company":"JD Power","category":"analytics","domains":["*.korrelate.net"]},{"name":"LKQD","category":"ad","domains":["*.lkqd.net"]},{"name":"Layer0","category":"cdn","domains":["*.layer0.co"]},{"name":"Layershift","category":"hosting","domains":["109.109.138.174"]},{"name":"Lead Forensics","category":"ad","domains":["*.200summit.com","*.baw5tracker.com","*.business-path-55.com","*.bux1le001.com","*.central-core-7.com","*.direct-azr-78.com","*.explore-123.com","*.forensics1000.com","*.gldsta-02-or.com","*.green-bloc9.com","*.lansrv040.com","*.lead-123.com","*.leadforensics.com","*.mavic852.com","*.mon-com-net.com","*.peak-ip-54.com","*.snta0034.com","*.svr-prc-01.com","*.syntace-094.com","*.tghbn12.com","*.trail-web.com","*.web-01-gbl.com","*.web-cntr-07.com","*.trackdiscovery.net"]},{"name":"Lead Intelligence","company":"Magnetise Solutions","category":"ad","domains":["*.leadintelligence.co.uk"]},{"name":"LeadLander","category":"analytics","domains":["*.formalyzer.com","*.trackalyzer.com"]},{"name":"Leaflet","category":"utility","domains":["*.leafletjs.com"]},{"name":"LeasdBoxer","company":"LeadBoxer","category":"ad","domains":["*.leadboxer.com"]},{"name":"LeaseWeb","homepage":"https://www.leaseweb.com/","category":"cdn","domains":["*.lswcdn.net","*.leasewebcdn.com"]},{"name":"Leboncoin","category":"content","domains":["*.leboncoin.fr"]},{"name":"Lengow","category":"hosting","domains":["*.lengow.com"]},{"name":"Lessbuttons","category":"social","domains":["*.lessbuttons.com"]},{"name":"Letter Press","category":"ad","domains":["*.getletterpress.com"]},{"name":"Level 3 Communications","category":"utility","domains":["footprint.net"]},{"name":"Level3","category":"other","domains":["secure.footprint.net"]},{"name":"Lifestreet Media","category":"social","domains":["*.lfstmedia.com"]},{"name":"LiftSuggest","category":"analytics","domains":["d2blwevgjs7yom.cloudfront.net"]},{"name":"Ligatus","category":"ad","domains":["*.ligadx.com"]},{"name":"LightStep","category":"analytics","domains":["*.lightstep.com"]},{"name":"LightWidget","category":"utility","domains":["*.lightwidget.com"]},{"name":"Likelihood","company":"LIkeihood","category":"hosting","domains":["*.likelihood.com"]},{"name":"LikeShop","company":"Dash Hudson","category":"content","domains":["likeshop.me"]},{"name":"LINE Corporation","category":"ad","domains":["*.line-scdn.net","*.line.me"]},{"name":"Linkcious","category":"analytics","domains":["*.linkcious.com"]},{"name":"Linking Mobile","category":"ad","domains":["*.linkingmobile.com"]},{"name":"LittleData","category":"analytics","homepage":"https://www.littledata.io/","domains":["*.littledata.io"]},{"name":"LiveBurst","category":"ad","domains":["*.liveburst.com"]},{"name":"LiveClicker","category":"ad","domains":["*.liveclicker.net"]},{"name":"LiveHelpNow","category":"customer-success","domains":["*.livehelpnow.net"]},{"name":"LiveInternet","category":"analytics","domains":["*.yadro.ru"]},{"name":"LiveJournal","category":"social","domains":["*.livejournal.com","*.livejournal.net"]},{"name":"LivePerson","category":"customer-success","homepage":"https://www.liveperson.com/","domains":["*.liveperson.com","*.look.io","*.liveperson.net","*.lpsnmedia.net"]},{"name":"LiveRail","company":"Facebook","category":"ad","domains":["*.liverail.com","*.lrcdn.net"]},{"name":"LiveTex","category":"customer-success","domains":["*.livetex.ru"]},{"name":"Livefyre","category":"content","domains":["*.fyre.co","*.livefyre.com"]},{"name":"Living Map Company","category":"utility","domains":["*.livingmap.com"]},{"name":"Local World","category":"content","domains":["*.thelocalpeople.co.uk"]},{"name":"LockerDome","category":"analytics","domains":["*.lockerdome.com"]},{"name":"Logentries","company":"Rapid","category":"utility","domains":["*.logentries.com"]},{"name":"Logicalis","category":"analytics","domains":["*.trovus.co.uk"]},{"name":"LoginRadius","company":"LoginRadius","homepage":"https://www.loginradius.com/","category":"ad","domains":["*.loginradius.com","*.lrcontent.com"]},{"name":"LongTail Ad Solutions","category":"ad","domains":["*.jwpcdn.com","*.jwplatform.com","*.jwplayer.com","*.jwpltx.com","*.jwpsrv.com","*.longtailvideo.com"]},{"name":"Loop Commerce","category":"other","domains":["*.loopassets.net"]},{"name":"Loop11","category":"analytics","domains":["*.loop11.com"]},{"name":"LoopMe","category":"ad","domains":["*.loopme.biz","*.loopme.com","*.vntsm.com","*.loopme.me"]},{"name":"Looper","category":"content","domains":["*.looper.com"]},{"name":"Loyalty Point","category":"ad","domains":["*.loyaltypoint.pl"]},{"name":"LoyaltyLion","category":"ad","domains":["*.loyaltylion.com","*.loyaltylion.net","dg1f2pfrgjxdq.cloudfront.net"]},{"name":"Luma Tag","category":"analytics","domains":["*.lumatag.co.uk"]},{"name":"Lumesse","category":"content","domains":["*.recruitmentplatform.com"]},{"name":"Luminate","category":"ad","domains":["*.luminate.com"]},{"name":"Lynchpin Analytics","category":"analytics","domains":["*.lypn.net"]},{"name":"Lyris","category":"ad","domains":["*.clicktracks.com"]},{"name":"Lytics","category":"ad","domains":["*.lytics.io"]},{"name":"MEC WebTrack","company":"MEC","category":"ad","domains":["*.e-webtrack.net"]},{"name":"MECLABS Institute","category":"analytics","domains":["*.meclabs.com","*.meclabsdata.com"]},{"name":"MLveda","category":"utility","domains":["*.mlveda.com"]},{"name":"Macromill","company":"Macromill","category":"analytics","homepage":"https://group.macromill.com/","domains":["*.macromill.com"]},{"name":"Macropod BugHerd","company":"Macropod","category":"utility","domains":["*.bugherd.com"]},{"name":"Madison Logic","category":"marketing","domains":["*.ml314.com"]},{"name":"Madmetrics","company":"Keyade","category":"analytics","domains":["*.keyade.com"]},{"name":"Magnetic","category":"ad","domains":["*.domdex.com","d3ezl4ajpp2zy8.cloudfront.net"]},{"name":"Magnetic Platform","company":"Magnetic","category":"ad","domains":["*.magnetic.is"]},{"name":"MailMunch","category":"ad","domains":["*.mailmunch.co"]},{"name":"MailPlus","category":"ad","domains":["*.mailplus.nl"]},{"name":"Mapbox","category":"utility","domains":["*.mapbox.com"]},{"name":"Maptive","category":"utility","domains":["*.maptive.com"]},{"name":"Marcaria.com","category":"other","domains":["*.gooo.al"]},{"name":"Marchex","category":"analytics","domains":["*.voicestar.com","*.marchex.io"]},{"name":"Mark and Mini","category":"ad","domains":["*.markandmini.com"]},{"name":"Marker","category":"utility","domains":["*.marker.io"]},{"name":"Marketing Dashboards","company":"GroupM","category":"analytics","domains":["*.m-decision.com"]},{"name":"Marketizator","category":"analytics","domains":["*.marketizator.com"]},{"name":"Marketplace Web Service","company":"Amazon","category":"other","domains":["*.ssl-images-amazon.com"]},{"name":"Mashable","category":"social","domains":["*.mshcdn.com"]},{"name":"MatchWork","category":"utility","domains":["*.matchwork.com"]},{"name":"MathJax","category":"utility","domains":["*.mathjax.org"]},{"name":"Mather Economics","category":"analytics","domains":["*.matheranalytics.com"]},{"name":"MaxCDN Enterprise","company":"MaxCDN","category":"utility","domains":["*.netdna-cdn.com","*.netdna-ssl.com"]},{"name":"MaxMind","category":"utility","domains":["*.maxmind.com"]},{"name":"MaxPoint Interactive","category":"ad","domains":["*.mxptint.net"]},{"name":"Maxsi","category":"analytics","domains":["*.evisitanalyst.com"]},{"name":"Maxymiser","category":"analytics","domains":["*.maxymiser.net, maxymiser.hs.llnwd.net"]},{"name":"McAffee","category":"utility","domains":["*.mcafeesecure.com","*.scanalert.com"]},{"name":"Measured","category":"analytics","domains":["*.measured.com"],"homepage":"https://www.measured.com/"},{"name":"Media IQ","category":"analytics","domains":["*.mediaiqdigital.com"]},{"name":"Media Management Technologies","category":"ad","domains":["*.speedshiftmedia.com"]},{"name":"Media Temple","category":"hosting","domains":["*.goodlayers2.com"]},{"name":"Mediabong","category":"ad","domains":["*.mediabong.net"]},{"name":"Mediahawk","category":"analytics","domains":["*.mediahawk.co.uk"]},{"name":"Mediahub","category":"ad","domains":["*.hubverifyandoptimize.com","*.projectwatchtower.com"]},{"name":"Mediasyndicator","category":"ad","domains":["*.creativesyndicator.com"]},{"name":"Medium","category":"content","domains":["*.medium.com"]},{"name":"Meetrics","category":"ad","domains":["*.de.com","*.meetrics.net","*.mxcdn.net"]},{"name":"Mega","company":"Mega Information Technology","category":"other","domains":["*.mgcdn.com"]},{"name":"Melt","category":"ad","domains":["*.meltdsp.com","*.mesp.com"]},{"name":"Meltwater Group","category":"customer-success","domains":["*.meltwaternews.com"]},{"name":"Meme","category":"ad","domains":["*.viewwonder.com"]},{"name":"MentAd","category":"ad","domains":["*.mentad.com"]},{"name":"Mention Me","category":"ad","domains":["*.mention-me.com"]},{"name":"Merchant Equipment Store","category":"utility","domains":["*.merchantequip.com"]},{"name":"Merchenta","category":"customer-success","domains":["*.merchenta.com"]},{"name":"Merkle Digital Data Exchange","company":"Merkle","category":"ad","domains":["*.brilig.com"]},{"name":"Merkle Paid Search","company":"Merkle","category":"ad","domains":["*.rkdms.com"]},{"name":"Met Office","category":"content","domains":["*.metoffice.gov.uk"]},{"name":"Meta Broadcast","category":"social","domains":["*.metabroadcast.com"]},{"name":"Michael Associates","category":"ad","domains":["*.checktestsite.com"]},{"name":"Michelin","category":"content","domains":["*.viamichelin.com"]},{"name":"Microad","category":"ad","domains":["*.microad.jp"]},{"name":"Microsoft Certificate Services","company":"Microsoft","category":"utility","domains":["*.msocsp.com"]},{"name":"Microsoft Hosted Libs","company":"Microsoft","category":"cdn","domains":["*.aspnetcdn.com"]},{"name":"Microsoft XBox Live","company":"Microsoft","category":"marketing","domains":["*.xboxlive.com"]},{"name":"Mightypop","category":"ad","domains":["*.mightypop.ca"]},{"name":"Mika Tuupola","category":"utility","domains":["*.appelsiini.net"]},{"name":"Millennial Media","category":"ad","domains":["*.jumptap.com"]},{"name":"Mirror Image Internet","category":"utility","domains":["*.miisolutions.net"]},{"name":"Mobify","category":"utility","domains":["*.mobify.com","*.mobify.net"]},{"name":"Mobile Nations","category":"social","domains":["*.mobilenations.com"]},{"name":"Mobivate","category":"ad","domains":["*.mobivatebulksms.com"]},{"name":"Momondo","category":"content","domains":["*.momondo.dk"]},{"name":"Momondo Group","category":"content","domains":["*.momondogrouo.com","*.momondogroup.com"]},{"name":"Monarch Ads","category":"ad","domains":["*.monarchads.com"]},{"name":"Monetate","category":"analytics","domains":["*.monetate.net"]},{"name":"MonetizeMore","category":"ad","domains":["*.m2.ai"]},{"name":"Monitor","company":"Econda","category":"analytics","domains":["*.econda-monitor.de"]},{"name":"Monkey Frog Media","category":"content","domains":["*.monkeyfrogmedia.com"]},{"name":"Monotype","category":"cdn","domains":["*.fonts.com","*.fonts.net"]},{"name":"Moore-Wilson","category":"ad","domains":["*.mwdev.co.uk"]},{"name":"Moovweb","category":"utility","domains":["*.moovweb.net"]},{"name":"Mopinion","category":"analytics","domains":["*.mopinion.com"]},{"name":"MotionPoint","category":"other","domains":["*.convertlanguage.com"]},{"name":"Mouse3K","category":"analytics","domains":["*.mouse3k.com"]},{"name":"MouseStats","category":"analytics","domains":["*.mousestats.com"]},{"name":"Mouseflow","category":"analytics","domains":["*.mouseflow.com"]},{"name":"Movable Ink","category":"analytics","domains":["*.micpn.com"]},{"name":"MovingIMAGE24","category":"content","domains":["*.edge-cdn.net"]},{"name":"Moxielinks","category":"ad","domains":["*.moxielinks.com"]},{"name":"Moz Recommended Companies","company":"Moz","category":"analytics","domains":["d2eeipcrcdle6.cloudfront.net"]},{"name":"Mozilla","category":"utility","domains":["*.mozilla.org"]},{"name":"Multiview","category":"content","domains":["*.multiview.com","*.track-mv.com"]},{"name":"Mux","category":"analytics","domains":["*.litix.io"]},{"name":"MyAds","company":"MyBuys","category":"analytics","domains":["*.veruta.com"]},{"name":"MyBuys","category":"analytics","domains":["*.mybuys.com"]},{"name":"MyFonts","category":"cdn","domains":["*.myfonts.net"]},{"name":"MyRegistry","category":"other","domains":["*.myregistry.com"]},{"name":"MySpace","company":"Specific Media","category":"social","domains":["*.myspace.com"]},{"name":"Mynewsdesk","category":"utility","domains":["*.mynewsdesk.com"]},{"name":"NAVIS","category":"content","domains":["*.navistechnologies.info"]},{"name":"NCC Group Real User Monitoring","company":"NCC Group","category":"analytics","domains":["*.nccgroup-webperf.com"]},{"name":"NEORY Marketing Cloud","company":"NEORY","category":"marketing","domains":["*.ad-srv.net"]},{"name":"Nanigans","category":"ad","domains":["*.nanigans.com"]},{"name":"Nano Interactive","category":"ad","domains":["*.audiencemanager.de"]},{"name":"Nanorep","company":"Nanorep Technologies","category":"customer-success","domains":["*.nanorep.com"]},{"name":"Narrative","category":"ad","domains":["*.narrative.io"]},{"name":"Native Ads","category":"ad","domains":["*.nativeads.com"]},{"name":"Nativo","category":"ad","domains":["*.postrelease.com"]},{"name":"Navegg","category":"ad","domains":["*.navdmp.com"]},{"name":"NaviStone","category":"ad","domains":["*.murdoog.com"]},{"name":"Naytev","category":"analytics","domains":["*.naytev.com"]},{"name":"Needle","category":"analytics","domains":["*.needle.com"]},{"name":"Neiman Marcus","category":"content","domains":["*.ctscdn.com"]},{"name":"Nend","category":"ad","domains":["*.nend.net"]},{"name":"Neodata","category":"ad","domains":["*.neodatagroup.com"]},{"name":"Net Applications","category":"analytics","domains":["*.hitsprocessor.com"]},{"name":"Net Reviews","category":"analytics","domains":["*.avis-verifies.com"]},{"name":"NetAffiliation","company":"Kwanco","category":"ad","domains":["*.metaffiliation.com"]},{"name":"NetDirector","company":"G-Forces Web Management","category":"other","domains":["*.netdirector.co.uk"]},{"name":"NetFlix","category":"content","domains":["*.nflxext.com","*.nflximg.net"]},{"name":"Nielsen NetRatings SiteCensus","company":"The Nielsen Company","homepage":"http://www.nielsen-online.com/intlpage.html","category":"analytics","domains":["*.imrworldwide.com"]},{"name":"NetSeer","category":"ad","domains":["*.netseer.com","*.ns-cdn.com"]},{"name":"NetShelter","company":"Ziff Davis Tech","category":"ad","domains":["*.netshelter.net"]},{"name":"Netmining","company":"Ignition One","category":"ad","domains":["*.netmng.com"]},{"name":"Netop","category":"customer-success","domains":["*.netop.com"]},{"name":"Network Solutions","category":"utility","domains":["*.netsolssl.com","*.networksolutions.com"]},{"name":"Neustar AdAdvisor","company":"Neustar","category":"ad","domains":["*.adadvisor.net"]},{"name":"New Approach Media","category":"ad","domains":["*.newapproachmedia.co.uk"]},{"name":"NewShareCounts","category":"social","domains":["*.newsharecounts.com"]},{"name":"News","category":"social","domains":["*.news.com.au","*.newsanalytics.com.au","*.newsapi.com.au","*.newscdn.com.au","*.newsdata.com.au","*.newsdiscover.com.au","*.news-static.com"]},{"name":"Newsquest","category":"content","domains":["*.newsquestdigital.co.uk"]},{"name":"Newzulu","category":"content","domains":["*.filemobile.com","*.projects.fm"]},{"name":"Nexcess.Net","category":"hosting","domains":["*.nexcesscdn.net"]},{"name":"Nexstar Media Group","category":"ad","domains":["*.yashi.com"]},{"name":"NextPerf","company":"Rakuten Marketing","category":"ad","domains":["*.nxtck.com"]},{"name":"Nine.com.au","company":"Nine Digital","category":"content","domains":["*.9msn.com.au"]},{"name":"NitroSell","category":"hosting","domains":["*.nitrosell.com"]},{"name":"Nochex","category":"utility","domains":["*.nochex.com"]},{"name":"Northern &amp; Shell Media Group","category":"content","domains":["*.northernandshell.co.uk"]},{"name":"Nosto","category":"analytics","domains":["*.nosto.com"]},{"name":"Now Interact","category":"analytics","domains":["*.nowinteract.com"]},{"name":"Numberly","company":"1000mercis","category":"ad","domains":["*.mmtro.com","*.nzaza.com"]},{"name":"NyaConcepts","category":"analytics","domains":["*.xclusive.ly"]},{"name":"O2","category":"other","domains":["*.o2.co.uk"]},{"name":"GoDaddy","homepage":"https://www.godaddy.com/","category":"utility","domains":["*.godaddy.com","*.wsimg.com"]},{"name":"ObjectPlanet","category":"analytics","domains":["*.easypolls.net"]},{"name":"OhMyAd","category":"ad","domains":["*.ohmyad.co"]},{"name":"Okas Concepts","category":"utility","domains":["*.okasconcepts.com"]},{"name":"Okta","category":"analytics","domains":["*.okta.com"]},{"name":"Olapic","category":"content","domains":["*.photorank.me"]},{"name":"Ometria","category":"analytics","domains":["*.ometria.com"]},{"name":"Omniconvert","category":"analytics","domains":["*.omniconvert.com","d2tgfbvjf3q6hn.cloudfront.net","d3vbj265bmdenw.cloudfront.net"]},{"name":"Omniroot","company":"Verizon","category":"utility","domains":["*.omniroot.com"]},{"name":"OnAudience","company":"Cloud Technologies","category":"ad","domains":["*.onaudience.com"]},{"name":"OnScroll","category":"ad","domains":["*.onscroll.com"]},{"name":"OnState","category":"ad","domains":["*.onstate.co.uk"]},{"name":"OnYourMap","category":"utility","domains":["*.onyourmap.com"]},{"name":"One by AOL","company":"AOL","category":"ad","domains":["*.adtechjp.com","*.adtech.de"]},{"name":"One by AOL:Mobile","company":"AOL","category":"ad","domains":["*.nexage.com"]},{"name":"OneAll","category":"analytics","domains":["*.oneall.com"]},{"name":"OneSoon","category":"analytics","domains":["*.adalyser.com"]},{"name":"OneTag","category":"ad","domains":["*.onetag-sys.com"]},{"name":"Onet","category":"ad","domains":["*.onet.pl"]},{"name":"Online Rewards","company":"Mastercard","category":"ad","domains":["*.loyaltygateway.com"]},{"name":"Online republic","category":"content","domains":["*.imallcdn.net"]},{"name":"Ooyala","category":"ad","domains":["*.ooyala.com"]},{"name":"OpenTable","company":"Priceline Group","category":"content","domains":["*.opentable.com","*.opentable.co.uk","*.toptable.co.uk"]},{"name":"OpenX Ad Exchange","company":"OpenX Technologies","category":"ad","domains":["*.liftdna.com"]},{"name":"Opinion Stage","category":"analytics","domains":["*.opinionstage.com"]},{"name":"OpinionBar","category":"analytics","domains":["*.opinionbar.com"]},{"name":"Opta","company":"Perform Group","category":"content","domains":["*.opta.net"]},{"name":"OptiMonk","category":"ad","domains":["*.optimonk.com"]},{"name":"Optilead","category":"analytics","domains":["*.dyn-img.com","*.leadcall.co.uk","*.optilead.co.uk"]},{"name":"Optimatic","category":"ad","domains":["*.optimatic.com"]},{"name":"Optimise Media Group","category":"utility","domains":["*.omguk.com"]},{"name":"Optimost","company":"OpenText","category":"ad","domains":["*.optimost.com"]},{"name":"Optimove","company":"Mobius Solutions","category":"analytics","domains":["*.optimove.net"]},{"name":"Optorb","category":"ad","domains":["*.optorb.com"]},{"name":"Oracle","category":"marketing","domains":["*.custhelp.com","*.eloqua.com","*.en25.com","*.estara.com","*.instantservice.com"]},{"name":"Oracle Recommendations On Demand","company":"Oracle","category":"analytics","domains":["*.atgsvcs.com"]},{"name":"Oracle Responsys","company":"Oracle","category":"marketing","domains":["*.adrsp.net","*.responsys.net"]},{"name":"Order Security-VOID","company":"Order Security","category":"analytics","domains":["*.order-security.com"]},{"name":"Oriel","category":"ad","domains":["*.oriel.io"]},{"name":"Outbrain","homepage":"https://www.outbrain.com/","category":"ad","domains":["*.outbrain.com","*.outbrainimg.com","*.visualrevenue.com"]},{"name":"OverStream","company":"Coull","category":"ad","domains":["*.coull.com"]},{"name":"Overdrive","category":"content","domains":["*.contentreserve.com"]},{"name":"Overstock","category":"utility","domains":["*.ostkcdn.com"]},{"name":"OwnerIQ","category":"ad","domains":["*.owneriq.net"]},{"name":"OzCart","category":"utility","domains":["*.ozcart.com.au"]},{"name":"Ozone Media","category":"ad","domains":["*.adadyn.com"]},{"name":"Loqate","company":"Loqate","category":"other","domains":["*.pcapredict.com","*.postcodeanywhere.co.uk"]},{"name":"PEER 1 Hosting","category":"hosting","domains":["*.peer1.com"]},{"name":"PERFORM","category":"content","domains":["*.performgroup.com"]},{"name":"PICnet","category":"hosting","domains":["*.nonprofitsoapbox.com"]},{"name":"Pacnet","company":"Telstra","category":"other","domains":["*.cdndelivery.net"]},{"name":"Pagefair","category":"ad","domains":["*.pagefair.com","*.pagefair.net"]},{"name":"Pagely","category":"other","domains":["*.optnmstr.com"]},{"name":"Pagesuite","category":"ad","domains":["*.pagesuite-professional.co.uk"]},{"name":"Pardot","category":"marketing","domains":["*.pardot.com"]},{"name":"Parse.ly","category":"analytics","domains":["*.parsely.com","d1z2jf7jlzjs58.cloudfront.net"]},{"name":"Pay per Click","company":"Eysys","category":"ad","domains":["*.eysys.com"]},{"name":"PayPal Ads","category":"ad","domains":["*.where.com"]},{"name":"Peaks & Pies","category":"analytics","domains":["*.bunchbox.co"]},{"name":"PebblePost","category":"ad","domains":["*.pbbl.co"]},{"name":"Peerius","category":"analytics","domains":["*.peerius.com"]},{"name":"Peermap","company":"IMRG","category":"analytics","domains":["peermapcontent.affino.com"]},{"name":"Penske Media","category":"content","domains":["*.pmc.com"]},{"name":"Penton","category":"utility","domains":["*.pisces-penton.com"]},{"name":"Pepper","category":"ad","domains":["*.peppercorp.com"]},{"name":"Perfect Audience","company":"Marin Software","category":"ad","domains":["*.prfct.co","*.marinsm.com","*.perfectaudience.com"]},{"name":"Perfect Market","category":"ad","domains":["*.perfectmarket.com"]},{"name":"Perfect Privacy","category":"other","domains":["*.suitesmart.com"]},{"name":"Perform Group","category":"content","domains":["*.performfeeds.com","*.premiumtv.co.uk"]},{"name":"Performio","category":"ad","domains":["*.performax.cz"]},{"name":"PerimeterX Bot Defender","company":"PerimeterX","category":"utility","domains":["*.perimeterx.net","*.pxi.pub"]},{"name":"Periscope","category":"content","domains":["*.periscope.tv"]},{"name":"Permutive","category":"ad","domains":["*.permutive.com","d3alqb8vzo7fun.cloudfront.net"]},{"name":"Petametrics","category":"analytics","domains":["*.petametrics.com"]},{"name":"PhotoBucket","category":"content","domains":["*.photobucket.com"]},{"name":"Picreel","category":"analytics","domains":["*.pcrl.co","*.picreel.com"]},{"name":"Pictela (AOL)","category":"analytics","domains":["*.pictela.net"]},{"name":"PistonHeads","category":"social","domains":["*.pistonheads.com"]},{"name":"Piwik","category":"analytics","domains":["*.drtvtracker.com","*.piwikpro.com","*.raac33.net"]},{"name":"Pixalate","category":"utility","domains":["*.adrta.com"]},{"name":"Pixlee","category":"social","domains":["*.pixlee.com"]},{"name":"Placed","category":"analytics","domains":["*.placed.com"]},{"name":"Planning-inc","category":"analytics","domains":["*.planning-inc.co.uk"]},{"name":"PlayAd Media Group","category":"ad","domains":["*.youplay.se"]},{"name":"Playbuzz","category":"hosting","domains":["*.playbuzz.com"]},{"name":"Pleenq","category":"ad","domains":["*.pleenq.com"]},{"name":"Plentific","category":"content","domains":["*.plentific.com"]},{"name":"PluginDetect","category":"other","domains":["dtlilztwypawv.cloudfront.net"]},{"name":"Po.st","company":"RadiumOne","category":"utility","domains":["*.po.st"]},{"name":"Pointpin","category":"utility","domains":["*.pointp.in"]},{"name":"Pointroll (Garnett)","category":"ad","domains":["*.pointroll.com"]},{"name":"Polar","homepage":"https://polar.me/","category":"ad","domains":["*.polarmobile.ca","*.mediaeverywhere.com","*.mediavoice.com","*.plrsrvcs.com","*.polarcdn-engine.com","*.polarcdn-meraxes.com","*.polarcdn-pentos.com","*.polarcdn-static.com","*.polarcdn-terrax.com","*.polarcdn.com","*.polarmobile.com","*.poweredbypolar.com","*.mediaconductor.me","*.polaracademy.me"]},{"name":"PollDaddy (Automattic)","category":"ad","domains":["static.polldaddy.com","*.poll.fm"]},{"name":"Polldaddy","company":"Automattic","category":"analytics","domains":["polldaddy.com","*.polldaddy.com"]},{"name":"Polyfill service","company":"Polyfill.io","category":"other","domains":["*.polyfill.io"]},{"name":"MegaPopAds","category":"ad","domains":["*.megapopads.com"]},{"name":"Populis","category":"ad","domains":["*.populisengage.com"]},{"name":"Postimage.org","category":"content","domains":["*.postimg.org"]},{"name":"PowerFront","category":"hosting","domains":["*.inside-graph.com"]},{"name":"PowerReviews","category":"analytics","domains":["*.powerreviews.com"]},{"name":"Powerlinks.com","category":"ad","domains":["*.powerlinks.com"]},{"name":"Press+","category":"ad","domains":["*.pipol.com","*.ppjol.com","*.ppjol.net"]},{"name":"PressArea","category":"utility","domains":["*.pressarea.com"]},{"name":"Pretio Interactive","category":"ad","domains":["*.pretio.in"]},{"name":"Prezi","category":"utility","domains":["*.prezi.com"]},{"name":"PriceGrabber","category":"content","domains":["*.pgcdn.com","*.pricegrabber.com"]},{"name":"PriceRunner","category":"content","domains":["*.pricerunner.com"]},{"name":"PrintFriendly","category":"utility","domains":["*.printfriendly.com"]},{"name":"Privy","category":"ad","domains":["*.privy.com","*.privymktg.com"]},{"name":"Proclivity Media","category":"analytics","domains":["*.pswec.com"]},{"name":"Profitshare","category":"ad","domains":["*.profitshare.ro"]},{"name":"Programattik","category":"ad","domains":["*.programattik.com"]},{"name":"Proper Media","category":"content","domains":["*.proper.io"]},{"name":"Property Week","category":"content","domains":["*.propertyweek.com"]},{"name":"Provide Support","category":"customer-success","domains":["*.providesupport.com"]},{"name":"Proweb Uk","category":"hosting","domains":["*.proweb.net"]},{"name":"Proximic (ComScore)","category":"ad","domains":["*.proximic.com"]},{"name":"Psyma","category":"ad","domains":["*.psyma.com"]},{"name":"PubFactory","company":"Safari Books Online","category":"content","domains":["*.pubfactory.com"]},{"name":"PubNation","category":"ad","domains":["*.pubnation.com"]},{"name":"Publicidad.net","category":"ad","domains":["*.publicidad.tv"]},{"name":"PublishThis","company":"Ultra Unlimited","category":"ad","domains":["*.publishthis.com"]},{"name":"Pulse Insights","category":"analytics","domains":["*.pulseinsights.com"]},{"name":"Pulsepoint","category":"marketing","domains":["*.displaymarketplace.com"]},{"name":"Purch","category":"ad","domains":["*.bestofmedia.com","*.purch.com"]},{"name":"Pure Chat","category":"customer-success","domains":["*.purechat.com"]},{"name":"PushCrew","category":"ad","domains":["*.pushcrew.com"]},{"name":"Q1Media","category":"ad","domains":["*.q1media.com","*.q1mediahydraplatform.com"]},{"name":"Qbase Software Development","category":"hosting","domains":["*.smartwebportal.co.uk"]},{"name":"Qeryz","category":"analytics","domains":["*.qeryz.com"]},{"name":"Qode Interactive","category":"hosting","domains":["*.qodeinteractive.com"]},{"name":"Qrius","category":"social","domains":["*.qrius.me"]},{"name":"Qualaroo","category":"analytics","domains":["*.qualaroo.com"]},{"name":"Qualtrics","category":"analytics","domains":["*.qualtrics.com"]},{"name":"Qubit","company":"Qubit","category":"analytics","domains":["*.qubit.com","*.qutics.com","d3c3cq33003psk.cloudfront.net","*.goqubit.com","*.qubitproducts.com"]},{"name":"Qubit Deliver","company":"Qubit","category":"analytics","domains":["d1m54pdnjzjnhe.cloudfront.net","d22rutvoghj3db.cloudfront.net","dd6zx4ibq538k.cloudfront.net"]},{"name":"QuestionPro","category":"analytics","domains":["*.questionpro.com"]},{"name":"Queue-it","category":"other","domains":["*.queue-it.net"]},{"name":"QuinStreet","category":"ad","domains":["*.Quinstreet.com","*.b2btechleadform.com","*.qnsr.com","*.qsstats.com"]},{"name":"QuoVadis","category":"utility","domains":["*.quovadisglobal.com"]},{"name":"Qzzr","category":"analytics","domains":["*.movementventures.com","*.qzzr.com"]},{"name":"RapidAPI","category":"utility","domains":["*.rapidapi.com"]},{"name":"RCS Media Group","category":"ad","domains":["*.rcsadv.it"]},{"name":"REVIVVE","category":"ad","domains":["*.revivve.com"]},{"name":"RSSinclude","category":"social","domains":["*.rssinclude.com"]},{"name":"RTB House AdPilot","company":"RTB House","category":"ad","domains":["*.erne.co","*.creativecdn.com"]},{"name":"RTB Media","category":"ad","domains":["*.rtb-media.me"]},{"name":"RUN","category":"ad","domains":["*.runadtag.com","*.rundsp.com"]},{"name":"Rackspace","category":"hosting","domains":["*.rackcdn.com","*.rackspacecloud.com","*.raxcdn.com","*.websitetestlink.com"]},{"name":"RadiumOne","category":"ad","domains":["*.gwallet.com","*.r1-cdn.net"]},{"name":"Rakuten DC Storm","company":"Rakuten","category":"analytics","domains":["*.dc-storm.com","*.h4k5.com","*.stormiq.com"]},{"name":"Rakuten LinkShare","company":"Rakuten","category":"ad","domains":["*.linksynergy.com"]},{"name":"Rakuten Marketing","company":"Rakuten","category":"ad","domains":["*.rakuten-static.com","*.rmtag.com"]},{"name":"Rakuten MediaForge","company":"Rakuten","category":"ad","domains":["*.mediaforge.com"]},{"name":"Rambler","company":"Rambler & Co","category":"utility","domains":["*.rambler.ru"]},{"name":"Ranker","category":"content","domains":["*.ranker.com","*.rnkr-static.com"]},{"name":"Ravelin","category":"utility","domains":["*.ravelin.com"]},{"name":"Raygun","category":"utility","domains":["*.raygun.io"]},{"name":"ReCollect","category":"utility","domains":["*.recollect.net"]},{"name":"ReSRC","category":"utility","domains":["*.resrc.it"]},{"name":"ReTargeter","category":"ad","domains":["*.retargeter.com"]},{"name":"Reach Group","category":"ad","domains":["*.redintelligence.net"]},{"name":"ReachDynamics","category":"ad","domains":["*.rdcdn.com"]},{"name":"ReachForce","category":"ad","domains":["*.reachforce.com"]},{"name":"ReachLocal","category":"ad","domains":["*.rtrk.co.nz"]},{"name":"ReachMee","category":"content","domains":["*.reachmee.com"]},{"name":"Reactful","category":"analytics","domains":["*.reactful.com"]},{"name":"Realtime","company":"internet business technologies","category":"utility","domains":["*.realtime.co"]},{"name":"Realtime Media (Brian Communications)","category":"ad","domains":["*.rtm.com"]},{"name":"Realtime Targeting","category":"ad","domains":["*.idtargeting.com"]},{"name":"Realytics","category":"analytics","domains":["dcniko1cv0rz.cloudfront.net","*.realytics.net"]},{"name":"RebelMouse","category":"ad","domains":["*.rebelmouse.com","*.rbl.ms"]},{"name":"Receiptful","category":"utility","domains":["*.receiptful.com"]},{"name":"Recite Me","category":"other","domains":["*.reciteme.com"]},{"name":"RecoBell","category":"analytics","domains":["*.recobell.io"]},{"name":"Recommend","category":"analytics","domains":["*.recommend.pro"]},{"name":"Red Eye International","category":"ad","domains":["*.pajmc.com"]},{"name":"Redfish Group","category":"ad","domains":["*.wmps.com"]},{"name":"Reevoo","category":"analytics","domains":["*.reevoo.com"]},{"name":"Refersion","category":"ad","domains":["*.refersion.com"]},{"name":"Refined Ads","category":"ad","domains":["*.refinedads.com"]},{"name":"Reflektion","category":"analytics","domains":["*.reflektion.com","d26opx5dl8t69i.cloudfront.net"]},{"name":"Reflow","company":"Scenestealer","category":"ad","domains":["*.reflow.tv"]},{"name":"Reklama","category":"ad","domains":["*.o2.pl","*.wp.pl"]},{"name":"Relevad ReleStar","company":"Relevad","category":"ad","domains":["*.relestar.com"]},{"name":"Remarketing Pixel","company":"Adsterra Network","category":"ad","domains":["*.datadbs.com","*.remarketingpixel.com"]},{"name":"Remintrex","company":"SmartUp Venture","category":"ad","domains":["*.remintrex.com"]},{"name":"Republer","category":"ad","domains":["*.republer.com"]},{"name":"Research Now","category":"analytics","domains":["*.researchgnow.com","*.researchnow.com"]},{"name":"Research Online","company":"Skills Development Scotland","category":"content","domains":["*.researchonline.org.uk"]},{"name":"Resonance Insights","category":"analytics","domains":["*.res-x.com"]},{"name":"Resonate Networks","category":"analytics","domains":["*.reson8.com"]},{"name":"Response Team","category":"ad","domains":["*.i-transactads.com"]},{"name":"ResponseTap","category":"analytics","domains":["*.adinsight.com","*.responsetap.com"]},{"name":"ResponsiveVoice","category":"other","domains":["*.responsivevoice.org"]},{"name":"Retention Science","category":"ad","domains":["*.retentionscience.com","d1stxfv94hrhia.cloudfront.net"]},{"name":"Revcontent","category":"content","domains":["*.revcontent.com"]},{"name":"Revee","category":"ad","domains":["*.revee.com"]},{"name":"Revenue Conduit","category":"utility","domains":["*.revenueconduit.com"]},{"name":"RevenueMantra","category":"ad","domains":["*.revenuemantra.com"]},{"name":"Reviews.co.uk","category":"analytics","domains":["*.reviews.co.uk"]},{"name":"Reviews.io","category":"analytics","domains":["*.reviews.io"]},{"name":"Revolver Maps","category":"analytics","domains":["*.revolvermaps.com"]},{"name":"Revv","category":"utility","domains":["*.revv.co"]},{"name":"RichRelevance","category":"analytics","domains":["*.richrelevance.com"]},{"name":"RightNow Service Cloud","company":"Oracle","category":"customer-success","domains":["*.rightnowtech.com","*.rnengage.com"]},{"name":"Rightster","category":"ad","domains":["*.ads-creativesyndicator.com"]},{"name":"Riskified","category":"utility","domains":["*.riskified.com"]},{"name":"Rockerbox","category":"analytics","homepage":"https://www.rockerbox.com/","domains":["getrockerbox.com"]},{"name":"Rocket Fuel","category":"ad","domains":["*.rfihub.com","*.ru4.com","*.rfihub.net","*.ad1x.com"]},{"name":"Rollbar","category":"utility","domains":["*.rollbar.com","d37gvrvc0wt4s1.cloudfront.net"]},{"name":"RomanCart","category":"utility","domains":["*.romancart.com"]},{"name":"Rondavu","category":"ad","domains":["*.rondavu.com"]},{"name":"Roomkey","category":"content","domains":["*.roomkey.com"]},{"name":"Roost","category":"utility","domains":["*.goroost.com"]},{"name":"Roxot","category":"ad","domains":["*.rxthdr.com"]},{"name":"Roxr Software","category":"analytics","domains":["*.getclicky.com"]},{"name":"Rtoaster","company":"Brainpad","homepage":"https://www.brainpad.co.jp/rtoaster/","category":"marketing","domains":["*.rtoaster.jp"]},{"name":"Rubikloud.com","category":"analytics","domains":["*.rubikloud.com"]},{"name":"Ruler Analytics","company":"Ruler","category":"analytics","domains":["*.nyltx.com","*.ruleranalytics.com"]},{"name":"Runner","company":"Rambler & Co","category":"content","domains":["*.begun.ru"]},{"name":"S4M","category":"ad","domains":["*.sam4m.com"]},{"name":"SAP Hybris Marketing Convert","company":"SAP","category":"ad","domains":["*.seewhy.com"]},{"name":"SAS Institute","category":"ad","domains":["*.aimatch.com","*.sas.com"]},{"name":"SATORI","homepage":"https://satori.marketing/","category":"marketing","domains":["satori.segs.jp"]},{"name":"SC ShopMania Net SRL","category":"content","domains":["*.shopmania.com"]},{"name":"SDL Media Manager","company":"SDL","category":"other","domains":["*.sdlmedia.com"]},{"name":"SFR","category":"other","domains":["*.sfr.fr"]},{"name":"SLI Systems","category":"utility","domains":["*.resultslist.com","*.resultspage.com","*.sli-spark.com"]},{"name":"SMARTASSISTANT","company":"Smart Information Systems","category":"customer-success","domains":["*.smartassistant.com"]},{"name":"SMARTSTREAM.TV","category":"ad","domains":["*.smartstream.tv"]},{"name":"SPX","company":"Smaato","category":"ad","domains":["*.smaato.net"]},{"name":"Sabio","category":"customer-success","domains":["*.sabio.co.uk"]},{"name":"Sailthru","category":"analytics","domains":["*.sail-horizon.com","*.sail-personalize.com","*.sail-track.com"]},{"name":"Sailthru Sightlines","company":"Sailthru","category":"marketing","domains":["*.sailthru.com"]},{"name":"Sajari Pty","category":"utility","domains":["*.sajari.com"]},{"name":"SaleCycle","category":"ad","domains":["*.salecycle.com","d16fk4ms6rqz1v.cloudfront.net","d22j4fzzszoii2.cloudfront.net","d30ke5tqu2tkyx.cloudfront.net","dn1i8v75r669j.cloudfront.net"]},{"name":"Salesforce Live Agent","company":"Salesforce.com","category":"customer-success","domains":["*.salesforceliveagent.com"]},{"name":"Salesforce.com","category":"ad","domains":["*.force.com","*.salesforce.com"]},{"name":"Samba TV","company":"Samba","category":"content","domains":["*.samba.tv"]},{"name":"Samplicio.us","category":"analytics","domains":["*.samplicio.us"]},{"name":"Say Media","category":"ad","domains":["*.saymedia.com"]},{"name":"Scenario","category":"analytics","domains":["*.getscenario.com"]},{"name":"Schuh (image shard)","company":"Schuh","category":"other","domains":["d2ob0iztsaxy5v.cloudfront.net"]},{"name":"Science Rockstars","category":"analytics","domains":["*.persuasionapi.com"]},{"name":"ScientiaMobile","category":"analytics","domains":["*.wurflcloud.com","*.wurfl.io"]},{"name":"Scoota","category":"ad","domains":["*.rockabox.co","*.scoota.co","d31i2625d5nv27.cloudfront.net","dyjnzf8evxrp2.cloudfront.net"]},{"name":"ScribbleLive","category":"ad","domains":["*.scribblelive.com"]},{"name":"SearchForce","category":"ad","domains":["*.searchforce.net"]},{"name":"SearchSpring","category":"utility","domains":["*.searchspring.net"]},{"name":"Searchanise","category":"analytics","domains":["*.searchanise.com"]},{"name":"Sears Holdings","category":"content","domains":["*.shld.net"]},{"name":"Secomapp","category":"utility","domains":["*.secomapp.com"]},{"name":"SecuredVisit","company":"4Cite Marketing","category":"ad","domains":["*.securedvisit.com"]},{"name":"SecurityMetrics","category":"utility","domains":["*.securitymetrics.com"]},{"name":"Segmento","category":"ad","domains":["*.rutarget.ru"]},{"name":"Segmint","category":"analytics","domains":["*.segmint.net"]},{"name":"Sekindo","category":"content","domains":["*.sekindo.com"]},{"name":"Seldon","category":"analytics","domains":["*.rummblelabs.com"]},{"name":"SelectMedia International","category":"content","domains":["*.selectmedia.asia"]},{"name":"Selligent","category":"ad","domains":["*.emsecure.net","*.slgnt.eu","targetemsecure.blob.core.windows.net"]},{"name":"Sellpoints","category":"analytics","domains":["*.sellpoints.com"]},{"name":"Semantics3","category":"analytics","domains":["*.hits.io"]},{"name":"Semasio","category":"analytics","domains":["*.semasio.net"]},{"name":"Semcasting Site Visitor Attribution","company":"Semcasting","category":"ad","domains":["*.smartzonessva.com"]},{"name":"Sentifi","category":"social","domains":["*.sentifi.com"]},{"name":"ServMetric","category":"analytics","domains":["*.servmetric.com"]},{"name":"ServiceSource International","category":"marketing","domains":["*.scoutanalytics.net"]},{"name":"ServiceTick","category":"analytics","domains":["*.servicetick.com"]},{"name":"Servo","company":"Xervo","category":"hosting","domains":["*.onmodulus.net"]},{"name":"SessionCam","company":"ServiceTick","category":"analytics","domains":["*.sessioncam.com","d2oh4tlt9mrke9.cloudfront.net"]},{"name":"Seznam","category":"utility","domains":["*.imedia.cz"]},{"name":"Sharethrough","category":"ad","domains":["*.sharethrough.com"]},{"name":"SharpSpring","category":"marketing","domains":["*.sharpspring.com","*.marketingautomation.services"]},{"name":"ShopRunner","category":"content","domains":["*.shoprunner.com","*.s-9.us"]},{"name":"ShopStorm","category":"utility","domains":["*.shopstorm.com"]},{"name":"Shopatron","category":"hosting","domains":["*.shopatron.com"]},{"name":"Shopgate","category":"utility","domains":["*.shopgate.com"]},{"name":"ShopiMind","company":"ShopIMind","category":"ad","domains":["*.shopimind.com"]},{"name":"Shopkeeper Tools","category":"utility","domains":["*.shopkeepertools.com"]},{"name":"Sidecar","category":"other","domains":["*.getsidecar.com","d3v27wwd40f0xu.cloudfront.net"]},{"name":"Sidereel","category":"analytics","domains":["*.sidereel.com"]},{"name":"Sift Science","category":"utility","domains":["*.siftscience.com"]},{"name":"Signal","category":"tag-manager","domains":["*.sitetagger.co.uk"]},{"name":"Signyfyd","category":"utility","domains":["*.signifyd.com"]},{"name":"Silktide","category":"hosting","domains":["*.silktide.com"]},{"name":"Silverpop","company":"IBM","category":"ad","domains":["*.mkt912.com","*.mkt922.com","*.mkt932.com","*.mkt941.com","*.mkt51.net","*.mkt61.net","*.pages01.net","*.pages02.net","*.pages03.net","*.pages04.net","*.pages05.net"]},{"name":"Simplaex","category":"marketing","domains":["*.simplaex.net"]},{"name":"SimpleReach","category":"analytics","domains":["*.simplereach.com","d8rk54i4mohrb.cloudfront.net"]},{"name":"Simplestream","category":"content","domains":["*.simplestream.com"]},{"name":"Simpli.fi","category":"ad","domains":["*.simpli.fi"]},{"name":"Simplicity Marketing","category":"ad","domains":["*.flashtalking.com"]},{"name":"SinnerSchrader Deutschland","category":"ad","domains":["*.s2Betrieb.de"]},{"name":"Sirv","category":"other","domains":["*.sirv.com"]},{"name":"Site Meter","category":"analytics","domains":["*.sitemeter.com"]},{"name":"Site24x7 Real User Monitoring","company":"Site24x7","category":"analytics","domains":["*.site24x7rum.com"]},{"name":"SiteGainer","category":"analytics","domains":["*.sitegainer.com","d191y0yd6d0jy4.cloudfront.net"]},{"name":"SiteScout","company":"Centro","category":"ad","domains":["*.pixel.ad","*.sitescout.com"]},{"name":"Siteimprove","category":"utility","domains":["*.siteimprove.com","*.siteimproveanalytics.com"]},{"name":"Six Degrees Group","category":"hosting","domains":["*.fstech.co.uk"]},{"name":"Skimbit","category":"ad","domains":["*.redirectingat.com","*.skimresources.com","*.skimresources.net"]},{"name":"Skimlinks","category":"ad","domains":["*.skimlinks.com"]},{"name":"SkyGlue Technology","category":"analytics","domains":["*.skyglue.com"]},{"name":"SkyScanner","category":"content","domains":["*.skyscanner.net"]},{"name":"Skybet","company":"Bonne Terre t/a Sky Vegas (Sky)","category":"other","domains":["*.skybet.com"]},{"name":"Skype","category":"other","domains":["*.skype.com"]},{"name":"Slate Group","category":"content","domains":["*.cdnslate.com"]},{"name":"SlimCut Media Outstream","company":"SlimCut Media","category":"ad","domains":["*.freeskreen.com"]},{"name":"Smart Insight Tracking","company":"Emarsys","category":"analytics","domains":["*.scarabresearch.com"]},{"name":"Smart AdServer","category":"ad","domains":["*.01net.com","*.sascdn.com","*.sasqos.com","*.smartadserver.com"]},{"name":"SmartFocus","category":"analytics","domains":["*.emv2.com","*.emv3.com","*.predictiveintent.com","*.smartfocus.com","*.themessagecloud.com"]},{"name":"Smarter Click","category":"ad","domains":["*.smct.co","*.smarterclick.co.uk"]},{"name":"SmarterHQ","category":"analytics","domains":["*.smarterhq.io","d1n00d49gkbray.cloudfront.net","*.smarterremarketer.net"]},{"name":"Smarttools","category":"customer-success","domains":["*.smartertrack.com"]},{"name":"Smartzer","category":"ad","domains":["*.smartzer.com"]},{"name":"Snack Media","category":"content","domains":["*.snack-media.com"]},{"name":"Snacktools","category":"ad","domains":["*.bannersnack.com"]},{"name":"SnapEngage","category":"customer-success","domains":["*.snapengage.com"]},{"name":"SnapWidget","category":"content","domains":["*.snapwidget.com"]},{"name":"Soasta","category":"analytics","domains":["*.lognormal.net"]},{"name":"SociableLabs","category":"ad","domains":["*.sociablelabs.net","*.sociablelabs.com"]},{"name":"Social Annex","category":"customer-success","domains":["*.socialannex.com"]},{"name":"SocialShopWave","category":"social","domains":["*.socialshopwave.com"]},{"name":"Socialphotos","category":"social","domains":["*.slpht.com"]},{"name":"Sociomantic Labs","company":"DunnHumby","category":"ad","domains":["*.sociomantic.com"]},{"name":"SodaHead","category":"analytics","domains":["*.sodahead.com"]},{"name":"Softwebzone","category":"hosting","domains":["*.softwebzone.com"]},{"name":"Sojern","category":"marketing","domains":["*.sojern.com"]},{"name":"Sokrati","category":"marketing","domains":["*.sokrati.com"]},{"name":"Sonobi","category":"ad","domains":["*.sonobi.com"]},{"name":"Sooqr Search","company":"Sooqr","category":"utility","domains":["*.sooqr.com"]},{"name":"Sophus3","category":"analytics","domains":["*.s3ae.com","*.sophus3.com"]},{"name":"Sorenson Media","category":"content","domains":["*.sorensonmedia.com"]},{"name":"Sortable","category":"ad","domains":["*.deployads.com"]},{"name":"Sotic","category":"hosting","domains":["*.sotic.net","*.soticservers.net"]},{"name":"Soundest","category":"ad","domains":["*.soundestlink.com","*.soundest.net"]},{"name":"Sourcepoint","category":"ad","domains":["*.decenthat.com","*.fallingfalcon.com","*.summerhamster.com","d2lv4zbk7v5f93.cloudfront.net","d3qxwzhswv93jk.cloudfront.net"]},{"name":"SourceKnowledge","homepage":"https://www.sourceknowledge.com","category":"ad","domains":["*.provenpixel.com"]},{"name":"SpaceNet","category":"hosting","domains":["*.nmm.de"]},{"name":"Sparkflow","company":"Intercept Interactive","category":"ad","domains":["*.sparkflow.net"]},{"name":"Specific Media","category":"ad","domains":["*.specificmedia.com","*.adviva.net","*.specificclick.net"]},{"name":"Spicy","company":"Data-Centric Alliance","category":"ad","domains":["*.sspicy.ru"]},{"name":"Spoke","category":"customer-success","domains":["*.121d8.com"]},{"name":"Spongecell","category":"ad","domains":["*.spongecell.com"]},{"name":"Spot.IM","category":"social","domains":["*.spot.im","*.spotim.market"]},{"name":"SpotXchange","category":"ad","domains":["*.spotxcdn.com","*.spotxchange.com","*.spotx.tv"]},{"name":"SpringServer","category":"ad","domains":["*.springserve.com"]},{"name":"Spylight","category":"other","domains":["*.spylight.com"]},{"name":"SreamAMG","company":"StreamAMG","category":"other","domains":["*.streamamg.com"]},{"name":"StackAdapt","category":"ad","domains":["*.stackadapt.com"]},{"name":"StackExchange","category":"social","domains":["*.sstatic.net"]},{"name":"Stackla PTY","category":"social","domains":["*.stackla.com"]},{"name":"Stailamedia","category":"ad","domains":["*.stailamedia.com"]},{"name":"Stamped.io","category":"analytics","domains":["*.stamped.io"]},{"name":"Starfield Services Root Certificate Authority","company":"Starfield Technologies","category":"utility","domains":["*.starfieldtech.com","ss2.us","*.ss2.us"]},{"name":"Starfield Technologies","category":"utility","domains":["*.websiteprotection.com"]},{"name":"StatCounter","category":"analytics","domains":["*.statcounter.com"]},{"name":"Statful","category":"analytics","domains":["*.statful.com"]},{"name":"Steelhouse","category":"ad","domains":["*.steelhousemedia.com"]},{"name":"Steepto","category":"ad","domains":["*.steepto.com"]},{"name":"StellaService","category":"analytics","domains":["*.stellaservice.com"]},{"name":"StickyADS.tv","category":"ad","domains":["*.stickyadstv.com"]},{"name":"STINGRAY","company":"FlexOne","category":"ad","domains":["*.impact-ad.jp"]},{"name":"Storify","company":"Adobe Systems","category":"social","domains":["*.storify.com"]},{"name":"Storm Tag Manager","company":"Rakuten","category":"tag-manager","domains":["*.stormcontainertag.com"]},{"name":"Storygize","category":"ad","domains":["*.storygize.net"]},{"name":"Strands","category":"utility","domains":["*.strands.com"]},{"name":"StreamRail","category":"ad","domains":["*.streamrail.com","*.streamrail.net"]},{"name":"StrikeAd","category":"ad","domains":["*.strikead.com"]},{"name":"Struq","company":"Quantcast","category":"ad","domains":["*.struq.com"]},{"name":"StrÃ¶er Digital Media","category":"ad","domains":["*.stroeerdigitalmedia.de"]},{"name":"StumbleUpon","category":"content","domains":["*.stumble-upon.com","*.stumbleupon.com"]},{"name":"Sub2 Technologies","category":"analytics","domains":["*.sub2tech.com"]},{"name":"SublimeSkinz","category":"ad","domains":["*.ayads.co"]},{"name":"Sumo Logic","category":"utility","domains":["*.sumologic.com"]},{"name":"Sunday Times Driving","category":"content","domains":["*.driving.co.uk"]},{"name":"SundaySky","category":"ad","domains":["*.sundaysky.com","dds6m601du5ji.cloudfront.net"]},{"name":"Sunrise Integration","category":"utility","domains":["*.sunriseintegration.com"]},{"name":"Supertool Network Technology","category":"analytics","domains":["*.miaozhen.com"]},{"name":"Survata","category":"analytics","domains":["*.survata.com"]},{"name":"SurveyGizmo","category":"analytics","domains":["*.surveygizmo.eu"]},{"name":"SurveyMonkey","category":"analytics","domains":["*.surveymonkey.com"]},{"name":"Survicate","category":"analytics","domains":["*.survicate.com"]},{"name":"Sweet Tooth","category":"ad","domains":["*.sweettooth.io"]},{"name":"Swiftype","category":"utility","domains":["*.swiftype.com","*.swiftypecdn.com"]},{"name":"Switch Concepts","category":"ad","domains":["*.switchadhub.com"]},{"name":"SwitchAds","company":"Switch Concepts","category":"ad","domains":["*.switchads.com"]},{"name":"Swogo","category":"analytics","domains":["*.xsellapp.com"]},{"name":"Swoop","category":"ad","domains":["*.swoop.com"]},{"name":"Symantec","category":"utility","domains":["*.norton.com","*.symantec.com","*.symcb.com","*.symcd.com"]},{"name":"Syncapse","category":"social","domains":["*.clickable.net"]},{"name":"Synergetic","category":"ad","domains":["*.synergetic.ag"]},{"name":"Synthetix","category":"customer-success","domains":["*.syn-finity.com","*.synthetix-ec1.com","*.synthetix.com"]},{"name":"Syte","category":"other","domains":["*.syteapi.com"]},{"name":"TINT","category":"content","domains":["*.71n7.com","d33w9bm0n1egwm.cloudfront.net","d36hc0p18k1aoc.cloudfront.net","d3l7tj34e9fc43.cloudfront.net"]},{"name":"TNS (Kantar Group)","category":"analytics","domains":["*.tns-counter.ru"]},{"name":"TRUSTe","category":"utility","domains":["*.truste.com"]},{"name":"TV Genius","company":"Ericcson Media Services","category":"content","domains":["*.tvgenius.net"]},{"name":"TVSquared","category":"ad","domains":["*.tvsquared.com"]},{"name":"TVTY","category":"ad","domains":["*.distribeo.com","*.ogigl.com"]},{"name":"Tactics bvba","category":"hosting","domains":["*.influid.co"]},{"name":"Tag Inspector","company":"InfoTrust","category":"analytics","domains":["d22xmn10vbouk4.cloudfront.net"]},{"name":"TagCommander","category":"tag-manager","domains":["*.commander1.com","*.tagcommander.com"]},{"name":"Tagboard","category":"social","domains":["*.tagboard.com"]},{"name":"Taggstar","company":"Taggstar UK","category":"ad","domains":["*.taggstar.com"]},{"name":"Tail Target","company":"Tail","category":"ad","domains":["*.tailtarget.com"]},{"name":"Tailored","category":"other","domains":["d24qm7bu56swjs.cloudfront.net","dw3vahmen1rfy.cloudfront.net","*.tailored.to"]},{"name":"Taleo Enterprise Cloud Service","company":"Oracle","category":"content","domains":["*.taleo.net"]},{"name":"Talkable","category":"ad","domains":["*.talkable.com","d2jjzw81hqbuqv.cloudfront.net"]},{"name":"TapSense","category":"ad","domains":["*.tapsense.com"]},{"name":"Tapad","category":"ad","domains":["*.tapad.com"]},{"name":"Teads","category":"ad","domains":["*.teads.tv"]},{"name":"Team Internet Tonic","company":"Team Internet","category":"ad","domains":["*.dntrax.com"]},{"name":"TechTarget","category":"content","domains":["*.techtarget.com","*.ttgtmedia.com"]},{"name":"Technorati","company":"Synacor","category":"ad","domains":["*.technoratimedia.com"]},{"name":"Teedhaze","category":"content","domains":["*.fuel451.com"]},{"name":"Tell Apart","category":"analytics","domains":["*.tellapart.com","*.tellaparts.com"]},{"name":"Tencent","category":"content","domains":["*.qq.com","*.ywxi.net"]},{"name":"Thanx Media","category":"utility","domains":["*.hawksearch.info"]},{"name":"Thawte","category":"utility","domains":["*.thawte.com"]},{"name":"Thesis","category":"analytics","homepage":"https://www.thesistesting.com/","domains":["*.ttsep.com"]},{"name":"The AA","category":"ad","domains":["*.adstheaa.com"]},{"name":"The ADEX","category":"ad","domains":["*.theadex.com"]},{"name":"The Best Day","category":"social","domains":["*.thebestday.com"]},{"name":"The Filter","company":"Exabre","category":"analytics","domains":["*.thefilter.com"]},{"name":"The Guardian","category":"analytics","domains":["*.ophan.co.uk"]},{"name":"The Hut Group","category":"content","domains":["*.thcdn.com"]},{"name":"The Numa Group","category":"other","domains":["*.hittail.com"]},{"name":"The Publisher Desk","category":"ad","domains":["*.206ads.com","*.publisherdesk.com"]},{"name":"The Sydney Morning Herald","company":"Fairfax Media","category":"content","domains":["*.smh.com.au"]},{"name":"The Wall Street Jounal","category":"content","domains":["*.wsj.net"]},{"name":"The Wall Street Journal","category":"content","domains":["*.marketwatch.com"]},{"name":"TheFind","category":"content","domains":["*.thefind.com"]},{"name":"Thinglink","category":"utility","domains":["*.thinglink.com"]},{"name":"Thirdpresence","category":"ad","domains":["*.thirdpresence.com"]},{"name":"ThreatMetrix","category":"utility","domains":["*.online-metrix.net"]},{"name":"Throtle","homepage":"https://throtle.io/","category":"analytics","domains":["*.thrtle.com","*.v12group.com"]},{"name":"TicketMaster","category":"content","domains":["*.t-x.io","*.tmcs.net"]},{"name":"TikTok","company":"ByteDance Ltd","homepage":"https://www.tiktok.com/en/","category":"social","domains":["*.tiktok.com","*.ipstatp.com"]},{"name":"Tidio Live Chat","company":"Tidio","homepage":"https://www.tidiochat.com/en/","category":"customer-success","domains":["*.tidiochat.com"]},{"name":"Time","category":"content","domains":["*.timeinc.net"]},{"name":"Time2Perf","category":"ad","domains":["*.time2perf.com"]},{"name":"TinyURL","category":"utility","domains":["*.tinyurl.com"]},{"name":"Tivo","category":"analytics","domains":["*.rovicorp.com"]},{"name":"Tom&Co","category":"hosting","domains":["*.tomandco.uk"]},{"name":"Toms Native Ads","company":"Purch","category":"ad","domains":["*.natoms.com"]},{"name":"ToneMedia","category":"ad","domains":["*.clickfuse.com"]},{"name":"Tonic","company":"Team Internet","category":"ad","domains":["*.dntx.com"]},{"name":"Touch Commerce","category":"customer-success","domains":["*.inq.com","*.touchcommerce.com"]},{"name":"ToutApp","category":"ad","domains":["*.toutapp.com"]},{"name":"TraceView","company":"Solarwinds","category":"analytics","domains":["*.tracelytics.com","d2gfdmu30u15x7.cloudfront.net"]},{"name":"TrackJS","category":"analytics","domains":["*.trackjs.com","d2zah9y47r7bi2.cloudfront.net"]},{"name":"Tradedoubler","category":"ad","domains":["*.pvnsolutions.com","*.tradedoubler.com"]},{"name":"Tradelab","category":"ad","domains":["*.tradelab.fr"]},{"name":"TrafficFactory","category":"ad","domains":["*.trafficfactory.biz"]},{"name":"TrafficHunt","category":"ad","domains":["*.traffichunt.com"]},{"name":"TrafficStars","category":"ad","domains":["*.trafficstars.com","*.tsyndicate.com"]},{"name":"Transifex","category":"utility","domains":["*.transifex.com"]},{"name":"Travelex","category":"utility","domains":["*.travelex.net","*.travelex.co.uk"]},{"name":"Travelocity Canada","company":"Travelocity","category":"content","domains":["*.travelocity.ca"]},{"name":"Travelocity USA","company":"Travelocity","category":"content","domains":["*.travelocity.com"]},{"name":"Travelzoo","category":"content","domains":["*.travelzoo.com"]},{"name":"Treasure Data","category":"analytics","domains":["*.treasuredata.com"]},{"name":"Tremor Video","category":"ad","domains":["*.tremorhub.com","*.videohub.tv"]},{"name":"Trialfire","category":"analytics","domains":["*.trialfire.com"]},{"name":"Tribal Fusion","company":"Exponential Interactive","category":"ad","domains":["*.tribalfusion.com"]},{"name":"Triblio","category":"marketing","domains":["*.tribl.io"]},{"name":"Triggered Messaging","company":"Fresh Relevance","category":"ad","domains":["*.triggeredmessaging.com"]},{"name":"Trinity Mirror","category":"content","domains":["*.mirror.co.uk"]},{"name":"Trinity Mirror Digital Media","category":"social","domains":["*.tm-aws.com","*.icnetwork.co.uk"]},{"name":"TripAdvisor","category":"content","domains":["*.jscache.com","*.tacdn.com","*.tamgrt.com","*.tripadvisor.com","*.viator.com","*.tripadvisor.co.uk"]},{"name":"TripleLift","category":"ad","domains":["*.3lift.com"]},{"name":"Tru Optik","category":"ad","domains":["*.truoptik.com"]},{"name":"TruConversion","category":"analytics","domains":["*.truconversion.com"]},{"name":"Trueffect","category":"marketing","domains":["*.adlegend.com"]},{"name":"Truefit","category":"analytics","domains":["*.truefitcorp.com"]},{"name":"Trust Guard","category":"utility","domains":["*.trust-guard.com"]},{"name":"Trust Pilot","category":"analytics","domains":["*.trustpilot.com"]},{"name":"Amazon Trust Services","company":"Amazon","category":"utility","domains":["*.amazontrust.com","o.ss2.us"]},{"name":"Google Trust Services","company":"Google","category":"utility","domains":["*.pki.goog"]},{"name":"Let\'s Encrypt","homepage":"https://letsencrypt.org/","category":"utility","domains":["*.letsencrypt.org"]},{"name":"TrustX","category":"ad","domains":["*.trustx.org"]},{"name":"Trusted Shops","category":"utility","domains":["*.trustedshops.com"]},{"name":"Trustev","company":"TransUnion","category":"utility","domains":["*.trustev.com"]},{"name":"Trustwave","category":"utility","domains":["*.trustwave.com"]},{"name":"Tryzens TradeState","company":"Tryzens","category":"analytics","domains":["*.tryzens-analytics.com"]},{"name":"TubeMogul","category":"ad","domains":["*.tubemogul.com"]},{"name":"Turn","category":"ad","domains":["*.turn.com"]},{"name":"Tutorialize","category":"customer-success","domains":["*.tutorialize.me"]},{"name":"Twenga","category":"content","domains":["*.twenga.fr","*.c4tw.net","*.twenga.co.uk"]},{"name":"Twitframe","company":"Superblock","category":"utility","domains":["*.twitframe.com"]},{"name":"Twitter Online Conversion Tracking","company":"Twitter","category":"ad","domains":["*.ads-twitter.com","analytics.twitter.com"]},{"name":"Twitter Short URL","company":"Twitter","category":"social","domains":["*.t.co"]},{"name":"Twyn Group","category":"ad","domains":["*.twyn.com"]},{"name":"Tynt","company":"33 Across","category":"ad","domains":["*.tynt.com"]},{"name":"Typepad","category":"hosting","domains":["*.typepad.com"]},{"name":"TyrbooBytes","category":"utility","domains":["*.turbobytes.net"]},{"name":"UPS i-parcel","company":"UPS","category":"other","domains":["*.i-parcel.com"]},{"name":"US Media Consulting","category":"ad","domains":["*.mediade.sk"]},{"name":"Ubertags","category":"tag-manager","domains":["*.ubertags.com"]},{"name":"Umbel","category":"analytics","domains":["*.umbel.com"]},{"name":"Unanimis","company":"Switch","category":"ad","domains":["*.unanimis.co.uk"]},{"name":"Unbounce","category":"ad","domains":["*.ubembed.com","*.unbounce.com","d2xxq4ijfwetlm.cloudfront.net","d9hhrg4mnvzow.cloudfront.net"]},{"name":"Underdog Media","category":"ad","domains":["*.underdog.media","*.udmserve.net"]},{"name":"Understand Digital","category":"ad","domains":["*.redirecting2.net"]},{"name":"Undertone","company":"Perion","category":"ad","domains":["*.legolas-media.com"]},{"name":"Unidays","category":"ad","domains":["*.myunidays.com","*.unidays.world"]},{"name":"Uniqodo","category":"ad","domains":["*.uniqodo.com"]},{"name":"Unite","category":"ad","domains":["*.uadx.com"]},{"name":"United Card Services","category":"utility","domains":["*.ucs.su"]},{"name":"United Internet","category":"hosting","domains":["*.uicdn.com"]},{"name":"United Internet Media","category":"ad","domains":["*.ui-portal.de"]},{"name":"United Internet Media AG","category":"hosting","domains":["*.tifbs.net","*.uicdn.net","*.uimserv.net"]},{"name":"Unknown","category":"other","domains":[]},{"name":"Unruly Media","category":"ad","domains":["*.unrulymedia.com"]},{"name":"UpBuild","category":"ad","domains":["*.upbuild.io"]},{"name":"UpSellit","category":"analytics","domains":["*.upsellit.com"]},{"name":"Upland Software","category":"hosting","domains":["*.clickability.com"]},{"name":"Airship","category":"marketing","domains":["*.urbanairship.com","*.aswpsdkus.com"]},{"name":"UsabilityTools","category":"analytics","domains":["*.usabilitytools.com"]},{"name":"Usablenet.net","category":"utility","domains":["*.usablenet.net"]},{"name":"Use It Better","category":"analytics","domains":["*.useitbetter.com"]},{"name":"User Replay","category":"analytics","domains":["*.userreplay.net"]},{"name":"UserReport","category":"analytics","domains":["*.userreport.com"]},{"name":"Userneeds","category":"analytics","domains":["*.userneeds.dk"]},{"name":"Userzoom","category":"analytics","domains":["*.userzoom.com"]},{"name":"V12 Retail Finance","category":"utility","domains":["*.v12finance.com"]},{"name":"Vacaciones eDreams","category":"content","domains":["*.odistatic.net"]},{"name":"Varick Media Management","category":"ad","domains":["*.vmmpxl.com"]},{"name":"Vdopia Chocolate","company":"Vdopia","category":"ad","domains":["*.vdopia.com"]},{"name":"Ve","company":"Ve","homepage":"https://www.ve.com/","category":"marketing","domains":["*.veinteractive.com","*.ve.com"]},{"name":"Ve Interactive","company":"Ve","category":"ad","domains":["*.vepxl1.net","*.adgenie.co.uk"]},{"name":"Vee24","category":"customer-success","domains":["*.vee24.com"]},{"name":"Veeseo","category":"content","domains":["*.veeseo.com"]},{"name":"Venatus Media","category":"marketing","domains":["*.alcvid.com","*.venatusmedia.com"]},{"name":"Veoxa","category":"ad","domains":["*.veoxa.com"]},{"name":"Vergic AB","category":"customer-success","domains":["*.psplugin.com"]},{"name":"Vergic Engage Platform","company":"Vergic","category":"customer-success","domains":["*.vergic.com"]},{"name":"Verisign (Symantec)","category":"utility","domains":["*.verisign.com"]},{"name":"Verizon","category":"utility","domains":["*.public-trust.com"]},{"name":"Verizon Digital Media CDN","homepage":"https://www.verizondigitalmedia.com/","category":"cdn","domains":["*.edgecastcdn.net","*.edgecastdns.net"]},{"name":"Verizon Uplynk","company":"Verizon","category":"content","domains":["*.uplynk.com"]},{"name":"Vero","company":"Semblance","category":"ad","domains":["*.getvero.com","d3qxef4rp70elm.cloudfront.net"]},{"name":"VertaMedia","category":"ad","domains":["*.vertamedia.com"]},{"name":"Vertical Mass","category":"ad","domains":["*.vmweb.net"]},{"name":"Vestorly","category":"ad","domains":["*.oodalab.com"]},{"name":"Vextras","category":"other","domains":["*.vextras.com"]},{"name":"Viacom","category":"content","domains":["*.mtvnservices.com"]},{"name":"Vibrant Media","category":"ad","domains":["*.intellitxt.com","*.picadmedia.com"]},{"name":"VidPulse","category":"analytics","domains":["*.vidpulse.com"]},{"name":"Video Media Groep","category":"ad","domains":["*.vmg.host","*.inpagevideo.nl"]},{"name":"VideoHub","company":"Tremor Video","category":"ad","domains":["*.scanscout.com"]},{"name":"Videology","category":"ad","domains":["*.tidaltv.com"]},{"name":"Vidible","category":"ad","domains":["*.vidible.tv"]},{"name":"VigLink","category":"ad","domains":["*.viglink.com"]},{"name":"Vindico","company":"Viant","category":"ad","domains":["*.vindicosuite.com"]},{"name":"Viocorp International","category":"content","domains":["*.vioapi.com"]},{"name":"ViralNinjas","category":"ad","domains":["*.viralninjas.com"]},{"name":"Virool","category":"ad","domains":["*.virool.com"]},{"name":"Virtual Earth","company":"Microsoft","category":"utility","domains":["*.virtualearth.net"]},{"name":"Visely","company":"Visely","category":"other","homepage":"https://visely.io/","domains":["*.visely.io"]},{"name":"VisScore","category":"analytics","domains":["*.visscore.com","d2hkbi3gan6yg6.cloudfront.net"]},{"name":"Visible Measures","category":"ad","domains":["*.visiblemeasures.com"]},{"name":"Visual Studio","company":"Microsoft","category":"utility","domains":["*.visualstudio.com"]},{"name":"VisualDNA","category":"ad","domains":["*.visualdna.com"]},{"name":"VisualVisitor","category":"ad","domains":["*.id-visitors.com"]},{"name":"Vivocha S.p.A","category":"customer-success","domains":["*.vivocha.com"]},{"name":"Vizu (Nielsen)","category":"analytics","domains":["*.vizu.com"]},{"name":"Vizury","category":"ad","domains":["*.vizury.com"]},{"name":"VoiceFive","category":"analytics","domains":["*.voicefive.com"]},{"name":"Volvelle","company":"Optomaton","category":"ad","domains":["*.volvelle.tech"]},{"name":"VouchedFor","category":"analytics","domains":["*.vouchedfor.co.uk"]},{"name":"WARPCACHE","category":"utility","domains":["*.warpcache.net"]},{"name":"WISHLIST","company":"Shopapps","category":"social","domains":["*.shopapps.in"]},{"name":"WP Engine","category":"hosting","domains":["*.wpengine.com"]},{"name":"WalkMe","category":"customer-success","domains":["*.walkme.com"]},{"name":"Watching That","category":"other","domains":["*.watchingthat.com"]},{"name":"Wayfair","category":"analytics","domains":["*.wayfair.com"]},{"name":"Web CEO","category":"other","domains":["*.websiteceo.com"]},{"name":"Web Dissector","company":"Beijing Gridsum Technologies","category":"analytics","domains":["*.gridsumdissector.com","*.webdissector.com"]},{"name":"Web Forensics","category":"analytics","domains":["*.webforensics.co.uk"]},{"name":"Web Security and Performance","company":"NCC Group","category":"utility","domains":["*.nccgroup.trust"]},{"name":"WebEngage","category":"customer-success","domains":["*.webengage.co","*.webengage.com","d23nd6ymopvz52.cloudfront.net","d3701cc9l7v9a6.cloudfront.net"]},{"name":"WebInsight","company":"dotMailer","category":"analytics","domains":["*.trackedlink.net","*.trackedweb.net"]},{"name":"WebPageOne Solutions","category":"other","domains":["*.webpageone.com"]},{"name":"WebSpectator","category":"ad","domains":["*.webspectator.com"]},{"name":"WebTuna","company":"Application Performance","category":"analytics","domains":["*.webtuna.com"]},{"name":"WebVideoCore","company":"StreamingVideoProvider","category":"content","domains":["*.webvideocore.net"]},{"name":"WebWombat","category":"utility","domains":["*.ic.com.au"]},{"name":"Webcollage","category":"customer-success","domains":["*.webcollage.net"]},{"name":"Webcore","category":"ad","domains":["*.onefeed.co.uk"]},{"name":"Webkul","company":"Webkul Software","category":"utility","domains":["*.webkul.com"]},{"name":"Webmarked","category":"utility","domains":["*.webmarked.net"]},{"name":"Weborama","category":"ad","domains":["*.weborama.com","*.weborama.fr"]},{"name":"WebpageFX","category":"ad","domains":["*.leadmanagerfx.com"]},{"name":"Webphone","company":"IP WEB SERVICES","category":"customer-success","domains":["*.webphone.net"]},{"name":"Webselect selectcommerce","company":"Webselect Internet","category":"hosting","domains":["*.webselect.net"]},{"name":"Webthinking","category":"hosting","domains":["*.webthinking.co.uk"]},{"name":"Webtrekk","category":"analytics","domains":["*.wbtrk.net","*.webtrekk-asia.net","*.webtrekk.net","*.wt-eu02.net","*.wt-safetag.com"]},{"name":"Webtrends","category":"analytics","domains":["*.webtrends.com","*.webtrendslive.com","d1q62gfb8siqnm.cloudfront.net"]},{"name":"Webtype","category":"cdn","domains":["*.webtype.com"]},{"name":"White Ops","category":"utility","domains":["*.acexedge.com","*.tagsrvcs.com"]},{"name":"Whitespace","category":"ad","domains":["*.whitespacers.com"]},{"name":"WhosOn Live Chat Software","category":"customer-success","domains":["*.whoson.com"]},{"name":"Wibbitz","category":"other","domains":["*.wibbitz.com"]},{"name":"Wide Area Communications","category":"hosting","domains":["*.widearea.co.uk"]},{"name":"WideOrbit","category":"marketing","domains":["*.admaym.com"]},{"name":"William Reed","category":"content","domains":["*.wrbm.com"]},{"name":"WillyFogg.com","category":"content","domains":["*.willyfogg.com"]},{"name":"Windows","company":"Microsoft","category":"utility","domains":["*.windowsupdate.com"]},{"name":"WisePops","category":"utility","domains":["*.wisepops.com"]},{"name":"Wishlist King","company":"Appmate","category":"other","homepage":"https://appmate.io/","domains":["*.appmate.io"]},{"name":"Wishpond Technologies","category":"marketing","domains":["*.wishpond.com","*.wishpond.net"]},{"name":"WizRocket Technologies","category":"analytics","domains":["*.wzrkt.com"]},{"name":"Woopra","category":"analytics","domains":["*.woopra.com"]},{"name":"Woosmap","category":"utility","domains":["*.woosmap.com"]},{"name":"WorkCast","category":"hosting","domains":["*.workcast.net"]},{"name":"World News Media","category":"content","domains":["*.wnmedia.co.uk"]},{"name":"Worldpay","category":"utility","domains":["*.worldpay.com"]},{"name":"Wow Analytics","category":"analytics","domains":["*.wowanalytics.co.uk"]},{"name":"Wowcher","category":"ad","domains":["*.wowcher.co.uk"]},{"name":"Wufoo","category":"utility","domains":["*.wufoo.com"]},{"name":"Wunderkind","category":"marketing","homepage":"https://www.wunderkind.co/","domains":["*.bounceexchange.com","*.bouncex.net","*.wknd.ai","*.cdnbasket.net","*.cdnwidget.com"]},{"name":"Wyng","category":"ad","domains":["*.offerpop.com"]},{"name":"XMLSHOP","category":"hosting","domains":["*.xmlshop.biz"]},{"name":"XiTi","company":"AT Internet","category":"analytics","domains":["*.xiti.com","*.aticdn.net"],"homepage":"https://www.atinternet.com/en/"},{"name":"YUDU","category":"content","domains":["*.yudu.com"]},{"name":"Yahoo! Ad Exchange","company":"Yahoo!","category":"ad","domains":["*.yieldmanager.com","*.browsiprod.com"]},{"name":"Yahoo! JAPAN Ads","company":"Yahoo! JAPAN","category":"ad","homepage":"https://marketing.yahoo.co.jp/service/yahooads/","domains":["yads.c.yimg.jp","s.yimg.jp","b92.yahoo.co.jp"]},{"name":"Yahoo! Tag Manager","company":"Yahoo! JAPAN","category":"tag-manager","homepage":"https://marketing.yahoo.co.jp/service/tagmanager/","domains":["*.yjtag.jp"]},{"name":"Yahoo! Small Business","company":"Yahoo!","category":"hosting","domains":["*.aabacosmallbusiness.com"]},{"name":"Yellow Robot","category":"ad","domains":["*.backinstock.org"]},{"name":"YieldPartners","category":"ad","domains":["*.yieldpartners.com"]},{"name":"Yieldbot","category":"ad","domains":["*.yldbt.com"]},{"name":"Yieldify","category":"ad","domains":["*.yieldify.com","*.yieldifylabs.com","d33wq5gej88ld6.cloudfront.net","dwmvwp56lzq5t.cloudfront.net"]},{"name":"Yieldlab","category":"ad","domains":["*.yieldlab.net"]},{"name":"Yieldmo","category":"ad","domains":["*.yieldmo.com"]},{"name":"Yieldr","category":"ad","domains":["*.254a.com"]},{"name":"Yo","category":"utility","domains":["*.yopify.com"]},{"name":"YoYo","category":"utility","domains":["*.goadservices.com"]},{"name":"Yotpo","homepage":"https://www.yotpo.com/","category":"marketing","domains":["*.yotpo.com","*.swellrewards.com"]},{"name":"Yottaa","category":"hosting","domains":["*.yottaa.com","*.yottaa.net"]},{"name":"YourAmigo","category":"utility","domains":["*.youramigo.com"]},{"name":"YuMe","category":"ad","domains":["*.yume.com","*.yumenetworks.com"]},{"name":"Yummley","category":"other","domains":["*.yummly.com"]},{"name":"ZEDO","category":"ad","domains":["*.zedo.com"]},{"name":"Zafu","category":"analytics","domains":["*.zafu.com"]},{"name":"Zaius","category":"ad","domains":["*.zaius.com"]},{"name":"Zamplus ad","category":"ad","domains":["*.zampda.net"]},{"name":"Zanox","category":"ad","domains":["*.zanox.com","*.zanox.ws"]},{"name":"Zapper","category":"utility","domains":["*.zapper.com"]},{"name":"Zarget","category":"analytics","domains":["*.zarget.com"]},{"name":"Zemanta","category":"ad","domains":["*.zemanta.com"]},{"name":"Zen Internet","category":"other","domains":["*.zyen.com"]},{"name":"Zenovia Digital Exchange","category":"ad","domains":["*.rhythmxchange.com","*.zenoviaexchange.com"]},{"name":"ZergNet","category":"content","domains":["*.zergnet.com"]},{"name":"Zerogrey","category":"hosting","domains":["*.zerogrey.com"]},{"name":"Ziff Davis Tech","category":"ad","domains":["*.adziff.com","*.zdbb.net"]},{"name":"Zmags","category":"marketing","domains":["*.zmags.com"]},{"name":"Zolando","category":"content","domains":["*.ztat.net"]},{"name":"Zoover","category":"analytics","domains":["*.zoover.nl","*.zoover.co.uk"]},{"name":"Zopim","category":"customer-success","domains":["*.zopim.io"]},{"name":"[24]7","category":"customer-success","domains":["*.247-inc.net","*.247inc.net","d1af033869koo7.cloudfront.net"]},{"name":"adKernel","category":"ad","domains":["*.adkernel.com"]},{"name":"adMarketplace","company":"AMPexchange","category":"ad","domains":["*.ampxchange.com","*.admarketplace.net"]},{"name":"addtocalendar","category":"utility","domains":["*.addtocalendar.com"]},{"name":"adnanny","category":"ad","domains":["*.adserver01.de"]},{"name":"affilinet","category":"ad","domains":["*.reussissonsensemble.fr","*.successfultogether.co.uk"]},{"name":"audioBoom","category":"social","domains":["*.audioboom.com","*.audioboo.fm"]},{"name":"bPay by Barclaycard","company":"Barclays Bank","category":"utility","domains":["*.bpay.co.uk"]},{"name":"bRealTime","category":"ad","domains":["*.brealtime.com"]},{"name":"bd4travel","category":"analytics","domains":["*.bd4travel.com"]},{"name":"bizinformation-VOID","company":"bizinformation","category":"analytics","domains":["*.bizinformation.org"]},{"name":"carrot","category":"social","domains":["*.sharebutton.co"]},{"name":"cloudIQ","category":"analytics","domains":["*.cloud-iq.com"]},{"name":"comScore","category":"analytics","domains":["*.adxpose.com","*.comscore.com","*.sitestat.com","*.zqtk.net"]},{"name":"content.ad","category":"ad","domains":["*.content.ad"]},{"name":"d3 Media","company":"d3 Technologies","category":"other","domains":["*.d3sv.net"]},{"name":"dexiMEDIA","category":"ad","domains":["*.deximedia.com"]},{"name":"dianomi","category":"ad","domains":["*.dianomi.com","*.dianomioffers.co.uk"]},{"name":"donReach","category":"social","domains":["*.donreach.com"]},{"name":"dotMailer","category":"ad","domains":["*.dmtrk.com","*.dotmailer.com","*.emlfiles.com"]},{"name":"dotMailer Surveys","company":"dotMailer","category":"analytics","domains":["*.dotmailer-surveys.com"]},{"name":"dstillery","category":"ad","domains":["*.dstillery.com","*.media6degrees.com"]},{"name":"eBay","category":"ad","domains":["*.ebay.com","*.ebayimg.com","*.fetchback.com"]},{"name":"eBay Enterprise","category":"hosting","domains":["*.csdata1.com","*.gsipartners.com"]},{"name":"eBuzzing","company":"Teads Managed Services","category":"ad","domains":["*.ebz.io"]},{"name":"eDigital Research","category":"customer-success","domains":["*.edigitalresearch.com","*.edigitalsurvey.com","*.edrcdn.com","*.ecustomeropinions.com"]},{"name":"eGain","category":"analytics","domains":["*.analytics-egain.com","*.egain.com"]},{"name":"eHost","category":"hosting","domains":["*.ehosts.net"]},{"name":"eKomi","category":"analytics","domains":["*.ekomi.com","*.ekomi.de"]},{"name":"eWAY","company":"Web Active Pty","category":"utility","domains":["*.eway.com.au"]},{"name":"eXTReMe digital","category":"analytics","domains":["*.extreme-dm.com"]},{"name":"eXelate","category":"ad","domains":["*.exelator.com"]},{"name":"ecommercefeed.net","category":"marketing","domains":["*.ecommercefeed.net"]},{"name":"engage:BDR","category":"ad","domains":["*.bnmla.com","*.ebdr3.com"]},{"name":"epago","category":"ad","domains":["*.adaos-ads.net"]},{"name":"epoq internet services","category":"analytics","domains":["*.epoq.de"]},{"name":"etouches","category":"hosting","domains":["*.etouches.com"]},{"name":"etracker","category":"analytics","domains":["*.etracker.com","*.etracker.de"]},{"name":"everestads.com","category":"content","domains":["*.verestads.net"]},{"name":"exebid.DCA","company":"Data-Centric Alliance","category":"ad","domains":["*.exe.bid"]},{"name":"eyeReturn Marketing","category":"marketing","domains":["*.eyereturn.com"]},{"name":"feedoptimise","category":"hosting","domains":["*.feedoptimise.com","d1w78njrm56n7g.cloudfront.net"]},{"name":"fifty-five","category":"ad","domains":["*.55labs.com"]},{"name":"fluct","category":"ad","domains":["*.adingo.jp"]},{"name":"freegeoip.net","company":"(community-funded)","category":"utility","domains":["*.freegeoip.net"]},{"name":"freewheel.tv","category":"content","domains":["*.fwmrm.net"]},{"name":"gnatta","category":"customer-success","domains":["*.gnatta.com"]},{"name":"home.pl","category":"hosting","domains":["*.nscontext.eu"]},{"name":"hyfn","category":"ad","domains":["*.hyfn.com"]},{"name":"iAdvize SAS","category":"customer-success","domains":["*.iadvize.com"]},{"name":"iBillboard","category":"ad","domains":["*.ibillboard.com"]},{"name":"iCrossing","category":"ad","domains":["*.ic-live.com"]},{"name":"iFactory","company":"RDW Group","category":"hosting","domains":["*.ifactory.com"]},{"name":"iGoDigital","category":"analytics","domains":["*.igodigital.com"]},{"name":"iJento","company":"Fopsha","category":"ad","domains":["*.ijento.com"]},{"name":"iPage","category":"hosting","domains":["*.ipage.com"]},{"name":"iPerceptions","category":"customer-success","domains":["*.iperceptions.com"]},{"name":"iTunes","company":"Apple","category":"content","domains":["*.mzstatic.com"]},{"name":"imgix","company":"Zebrafish Labs","category":"utility","domains":["*.imgix.net"]},{"name":"infogr.am","category":"utility","domains":["*.infogr.am","*.jifo.co"]},{"name":"iotec","category":"analytics","domains":["*.dsp.io"]},{"name":"iovation","category":"utility","domains":["*.iesnare.com"]},{"name":"ipinfo.io","category":"utility","domains":["*.ipinfo.io"]},{"name":"issuu","category":"content","domains":["*.issuu.com","*.isu.pub"]},{"name":"iubenda","category":"utility","domains":["*.iubenda.com"]},{"name":"j2 Cloud Services","category":"ad","domains":["*.campaigner.com"]},{"name":"jsonip.com","category":"analytics","domains":["*.jsonip.com"]},{"name":"linkpulse","category":"analytics","domains":["*.lp4.io"]},{"name":"loGo_net","category":"analytics","domains":["*.logo-net.co.uk"]},{"name":"mainADV","category":"ad","domains":["*.httptrack.com","*.solocpm.com"]},{"name":"mbr targeting","category":"ad","domains":["*.m6r.eu"]},{"name":"media.ventive","category":"ad","domains":["*.contentspread.net"]},{"name":"metrigo","category":"ad","domains":["*.metrigo.com"]},{"name":"minicabit.com","category":"content","domains":["*.minicabit.com"]},{"name":"mobiManage","category":"hosting","domains":["*.mobimanage.com"]},{"name":"moving-pictures","category":"other","domains":["*.moving-pictures.biz","*.v6-moving-pictures.com","*.vtstat.com","*.moving-pictures.de"]},{"name":"my6sense","category":"ad","domains":["*.mynativeplatform.com"]},{"name":"myThings","category":"ad","domains":["*.mythings.com","*.mythingsmedia.net"]},{"name":"mymovies","category":"content","domains":["*.mymovies.net"]},{"name":"nRelate-VOID","company":"nRelate","category":"content","domains":["*.nrelate.com"]},{"name":"nToklo","category":"analytics","domains":["*.ntoklo.com"]},{"name":"neXeps","category":"ad","domains":["*.nexeps.com"]},{"name":"ninemsn Pty.","category":"utility","domains":["*.ninemsn.com.au"]},{"name":"nugg.ad","category":"ad","domains":["*.nuggad.net"]},{"name":"numero interactive","company":"numero","category":"ad","domains":["*.numerointeractive.com"]},{"name":"optMD","company":"Optimax Media Delivery","category":"ad","domains":["*.optmd.com"]},{"name":"otracking.com","category":"analytics","domains":["*.otracking.com"]},{"name":"paysafecard","company":"Paysafe Group","category":"utility","domains":["*.paysafecard.com"]},{"name":"piano","category":"ad","domains":["*.npttech.com","*.tinypass.com"]},{"name":"piclike","category":"ad","domains":["*.piclike.us"]},{"name":"placehold.it","category":"utility","domains":["*.placehold.it"]},{"name":"plista","category":"ad","domains":["*.plista.com"]},{"name":"prebid.org","category":"utility","domains":["*.prebid.org"]},{"name":"reEmbed","category":"other","domains":["*.reembed.com"]},{"name":"reddit","category":"social","domains":["*.reddit.com","*.redditstatic.com"]},{"name":"rewardStyle.com","category":"ad","domains":["*.rewardstyle.com"]},{"name":"rss2json","category":"utility","domains":["*.rss2json.com"]},{"name":"sage Pay","company":"Sage Pay Europe","category":"utility","domains":["*.sagepay.com"]},{"name":"section.io","category":"utility","domains":["*.squixa.net"]},{"name":"smartclip","category":"ad","domains":["*.smartclip.net"]},{"name":"sovrn","category":"ad","domains":["*.lijit.com"]},{"name":"stackpile.io","company":"StackPile","category":"tag-manager","domains":["*.stackpile.io"]},{"name":"template-help.com","category":"hosting","domains":["*.template-help.com"]},{"name":"test","company":"test only","category":"other","domains":["*.testtesttest.com"]},{"name":"trueAnthem","category":"social","domains":["*.tru.am"]},{"name":"tweetmeme-VOID","company":"tweetmeme","category":"analytics","domains":["*.tweetmeme.com"]},{"name":"uLogin","category":"other","domains":["*.ulogin.ru"]},{"name":"uLogix","category":"ad","domains":["*.ulogix.ru"]},{"name":"ucfunnel ucX","company":"ucfunnel","category":"ad","domains":["*.aralego.com"]},{"name":"up-value","category":"ad","domains":["*.up-value.de"]},{"name":"wywy","category":"ad","domains":["*.wywy.com","*.wywyuserservice.com"]},{"name":"CDK Dealer Management","company":"CDK Global","homepage":"https://www.cdkglobal.com/us","category":"hosting","domains":["*.assets-cdk.com"]},{"name":"fam","company":"Fing Co Ltd.","homepage":"http://admin.fam-ad.com/report/","category":"ad","domains":["*.fam-ad.com"]},{"name":"zypmedia","category":"ad","domains":["*.extend.tv"]},{"name":"codigo","homepage":"https://www.codigo.se","category":"analytics","domains":["*.codigo.se"]},{"name":"Playground","homepage":"https://playground.xyz","category":"ad","domains":["*.playground.xyz"]},{"name":"RAM","homepage":"https://www2.rampanel.com/","category":"analytics","domains":["*.rampanel.com"]},{"name":"Adition","homepage":"https://www.adition.com","category":"ad","domains":["*.adition.com"]},{"name":"Widespace","homepage":"https://www.widespace.com","category":"ad","domains":["*.widespace.com"]},{"name":"Colpirio","homepage":"https://www.widespace.com","category":"analytics","domains":["*.colpirio.com"]},{"name":"Brandmetrics","homepage":"https://www.brandmetrics.com","category":"analytics","domains":["*.brandmetrics.com"]},{"name":"EasyAd","homepage":"https://web.easy-ads.com/","category":"ad","domains":["*.easy-ads.com"]},{"name":"Glimr","homepage":"https://glimr.io/","category":"analytics","domains":["*.glimr.io"]},{"name":"Webtreck","homepage":"https://www.webtrekk.com/en/home/","category":"analytics","domains":["*.wcfbc.net"]},{"name":"DigiTrust","homepage":"http://www.digitru.st/","category":"analytics","domains":["*.digitru.st"]},{"name":"Kantar Sifo","homepage":"https://www.kantarsifo.se","category":"analytics","domains":["*.research-int.se"]},{"name":"Concert","homepage":"https://concert.io/","category":"ad","domains":["*.concert.io"]},{"name":"Emerse","homepage":"https://www.emerse.com/","category":"ad","domains":["*.emerse.com"]},{"name":"Iterate","homepage":"https://iteratehq.com/","category":"analytics","domains":["*.iteratehq.com"]},{"name":"Cookiebot","homepage":"https://www.cookiebot.com/","category":"utility","domains":["*.cookiebot.com"]},{"name":"Netlify","homepage":"https://www.netlify.com/","category":"utility","domains":["*.netlify.com","*.netlifyusercontent.com"]},{"name":"Scroll","homepage":"https://scroll.com/","category":"utility","domains":["*.scroll.com"]},{"name":"Consumable","homepage":"https://consumable.com/","category":"ad","domains":["*.serverbid.com"]},{"name":"DMD Marketing","homepage":"https://www.dmdconnects.com/","category":"ad","domains":["*.medtargetsystem.com"]},{"name":"Catchpoint","homepage":"https://www.catchpoint.com/","category":"analytics","domains":["*.3gl.net"]},{"name":"Terminus","homepage":"https://terminus.com/","category":"ad","domains":["*.terminus.services"]},{"name":"Acceptable Ads","homepage":"https://acceptableads.com/","category":"ad","domains":["*.aaxads.com","*.aaxdetect.com"]},{"name":"ClearBrain","homepage":"https://www.clearbrain.com/","category":"analytics","domains":["*.clearbrain.com"]},{"name":"Optanon","homepage":"https://www.cookielaw.org/","category":"consent-provider","domains":["*.onetrust.com","*.cookielaw.org"]},{"name":"TrustArc","homepage":"https://www.trustarc.com/","category":"utility","domains":["*.trustarc.com"]},{"name":"iSpot.tv","homepage":"https://www.ispot.tv/","category":"ad","domains":["*.ispot.tv"]},{"name":"RevJet","homepage":"https://www.revjet.com/","category":"ad","domains":["*.revjet.com"]},{"name":"atlasRTX","homepage":"https://www.atlasrtx.com/","category":"customer-success","domains":["*.atlasrtx.com"]},{"name":"ContactAtOnce","homepage":"https://www.contactatonce.com/","category":"customer-success","domains":["*.contactatonce.com"]},{"name":"Algolia","homepage":"https://www.algolia.com/","category":"utility","domains":["*.algolianet.com","*.algolia.net","*.algolia.io"]},{"name":"EMX Digital","homepage":"https://emxdigital.com","category":"ad","domains":["*.emxdgt.com"]},{"name":"Moxie","homepage":"https://www.gomoxie.com/","category":"utility","domains":["*.gomoxie.solutions"]},{"name":"Scripps Network Digital","homepage":"https://www.scrippsnetworksdigital.com/","category":"ad","domains":["*.snidigital.com"]},{"name":"TurnTo","homepage":"https://www.turntonetworks.com/","category":"utility","domains":["*.turnto.com"]},{"name":"Quantum Metric","homepage":"https://www.quantummetric.com/","category":"analytics","domains":["*.quantummetric.com"]},{"name":"Carbon Ads","homepage":"https://www.carbonads.net/","category":"ad","domains":["*.carbonads.net","*.carbonads.com"]},{"name":"Ably","homepage":"https://www.ably.io/","category":"utility","domains":["*.ably.io"]},{"name":"Sectigo","homepage":"https://sectigo.com/","category":"utility","domains":["*.sectigo.com"]},{"name":"Specless","homepage":"https://gospecless.com/","category":"ad","domains":["*.specless.tech"]},{"name":"Loggly","homepage":"https://www.loggly.com/","category":"analytics","domains":["*.loggly.com","d9jmv9u00p0mv.cloudfront.net"]},{"name":"Intent Media","homepage":"https://intent.com/","category":"ad","domains":["*.intentmedia.net"]},{"name":"Supership","homepage":"https://supership.jp/","category":"ad","domains":["*.socdm.com"]},{"name":"F@N Communications","homepage":"https://www.fancs.com/","category":"ad","domains":["*.ladsp.com"]},{"name":"Vidyard","homepage":"https://www.vidyard.com/","category":"utility","domains":["*.vidyard.com"]},{"name":"RapidSSL","homepage":"https://www.rapidssl.com/","category":"utility","domains":["*.rapidssl.com"]},{"name":"Coherent Path","homepage":"https://coherentpath.com/","category":"utility","domains":["*.coherentpath.com"]},{"name":"Attentive","homepage":"https://attentivemobile.com/","category":"ad","domains":["*.attn.tv","*.attentivemobile.com"]},{"name":"emetriq","homepage":"https://www.emetriq.com/","category":"ad","domains":["*.emetriq.de","*.xplosion.de"]},{"name":"Bonzai","homepage":"https://www.bonzai.co/","category":"ad","domains":["*.bonzai.co"]},{"name":"Freshchat","homepage":"https://www.freshworks.com/live-chat-software/","category":"customer-success","domains":["*.freshchat.com","*.freshworksapi.com"],"products":[{"name":"Freshdesk Messaging","urlPatterns":["wchat.freshchat.com"],"facades":[{"name":"Freshdesk Messaging (formerly Freshchat) Facade","repo":"https://github.com/coliff/freshdesk-messaging-facade/"}]}]},{"name":"Contentful","homepage":"https://www.contentful.com/","category":"utility","domains":["*.contentful.com"]},{"name":"PureCars","homepage":"https://www.purecars.com/","category":"marketing","domains":["*.purecars.com"]},{"name":"Tray Commerce","homepage":"https://www.tray.com.br/","category":"marketing","domains":["*.tcdn.com.br"]},{"name":"AdScore","homepage":"https://www.adscore.com/","category":"ad","domains":["*.adsco.re"]},{"name":"WebsiteBuilder.com","homepage":"https://www.websitebuilder.com","category":"hosting","domains":["*.mywebsitebuilder.com"]},{"name":"mParticle","homepage":"https://www.mparticle.com/","category":"utility","domains":["*.mparticle.com"]},{"name":"Ada","homepage":"https://www.ada.support/","category":"customer-success","domains":["*.ada.support"]},{"name":"Quora Ads","homepage":"https://www.quora.com/business/","category":"ad","domains":["*.quora.com"]},{"name":"Auth0","homepage":"https://auth0.com/","category":"utility","domains":["*.auth0.com"]},{"name":"Bridgewell DSP","homepage":"https://www.bridgewell.com/","category":"ad","domains":["*.scupio.com"]},{"name":"Wicked Reports","homepage":"https://www.wickedreports.com/","category":"marketing","domains":["*.wickedreports.com"]},{"name":"Jaywing","homepage":"https://jaywing.com/","category":"marketing","domains":["*.jaywing.com"]},{"name":"Holimetrix","homepage":"https://u360.d-bi.fr/","category":"marketing","domains":["*.d-bi.fr"]},{"name":"iZooto","homepage":"https://www.izooto.com","category":"marketing","domains":["*.izooto.com"]},{"name":"Ordergroove","homepage":"https://www.ordergroove.com/","category":"marketing","domains":["*.ordergroove.com"]},{"name":"PageSense","homepage":"https://www.zoho.com/pagesense/","category":"analytics","domains":["*.pagesense.io"]},{"name":"Vizzit","homepage":"https://www.vizzit.se","category":"analytics","domains":["*.vizzit.se"]},{"name":"Click Guardian","homepage":"https://www.clickguardian.co.uk/","category":"ad","domains":["*.clickguardian.app","*.clickguardian.co.uk"]},{"name":"Smartsupp","company":"Smartsupp.com","homepage":"https://www.smartsupp.com","category":"customer-success","domains":["*.smartsuppchat.com","*.smartsupp.com","smartsupp-widget-161959.c.cdn77.org","*.smartsuppcdn.com"]},{"name":"Smartlook","company":"Smartsupp.com","homepage":"https://www.smartlook.com/","category":"analytics","domains":["*.smartlook.com"]},{"name":"Luigis Box","company":"Luigis Box","homepage":"https://www.luigisbox.com/","category":"utility","domains":["*.luigisbox.com"]},{"name":"Targito","company":"VIVmail.cz","homepage":"https://www.targito.com","category":"marketing","domains":["*.targito.com"]},{"name":"Foxentry","company":"AVANTRO","homepage":"https://foxentry.cz/","category":"utility","domains":["*.foxentry.cz"]},{"name":"Pendo","homepage":"https://www.pendo.io","category":"analytics","domains":["*.pendo.io"]},{"name":"Braze","homepage":"https://www.braze.com","category":"analytics","domains":["*.appboycdn.com"]},{"name":"Usersnap","homepage":"https://usersnap.com","category":"customer-success","domains":["*.usersnap.com"]},{"name":"Rewardful","homepage":"https://www.getrewardful.com","category":"analytics","domains":["*.wdfl.co"]},{"name":"Launch Darkly","homepage":"https://launchdarkly.com","category":"utility","domains":["*.launchdarkly.com"]},{"name":"Statuspage","company":"Atlassian","homepage":"https://www.statuspage.io","category":"utility","domains":["*.statuspage.io"]},{"name":"HyperInzerce","homepage":"https://hyperinzerce.cz","category":"ad","domains":["*.hyperinzerce.cz"]},{"name":"POWr","homepage":"https://www.powr.io","category":"utility","domains":["*.powr.io"]},{"name":"Coral","company":"Coral","homepage":"https://coralproject.net","category":"content","domains":["*.coral.coralproject.net"]},{"name":"Bolt","homepage":"https://www.bolt.com/","category":"utility","domains":["*.bolt.com"]},{"name":"Judge.me","homepage":"https://judge.me/","category":"marketing","domains":["*.judge.me"]},{"name":"Tilda","homepage":"https://tilda.cc/","category":"hosting","domains":["*.tildacdn.com"]},{"name":"SalesLoft","homepage":"https://salesloft.com/","category":"marketing","domains":["*.salesloft.com"]},{"name":"Accessibe Accessibility Overlay","company":"Accessibe","homepage":"https://accessibe.com/","category":"utility","domains":["*.accessibe.com","*.acsbapp.com","*.acsbap.com"]},{"name":"Builder","homepage":"https://www.builder.io/","category":"hosting","domains":["*.builder.io"]},{"name":"Pepperjam","homepage":"https://www.pepperjam.com/","category":"marketing","domains":["*.pepperjam.com","*.affiliatetechnology.com"]},{"name":"Reach","homepage":"https://withreach.com/","category":"utility","domains":["*.gointerpay.net"]},{"name":"Chameleon","homepage":"https://www.trychameleon.com/","category":"marketing","domains":["*.trychameleon.com"]},{"name":"Matomo","company":"InnoCraft","homepage":"https://matomo.org/","category":"analytics","domains":["*.matomo.cloud"]},{"name":"Segmanta","homepage":"https://segmanta.com/","category":"marketing","domains":["*.segmanta.com"]},{"name":"Podsights","homepage":"https://podsights.com/","category":"marketing","domains":["*.pdst.fm","us-central1-adaptive-growth.cloudfunctions.net"]},{"name":"Chatwoot","homepage":"https://www.chatwoot.com/","category":"customer-success","domains":["*.chatwoot.com"]},{"name":"Crisp","homepage":"https://crisp.chat/","category":"customer-success","domains":["*.crisp.chat"]},{"name":"Admiral CMP","homepage":"https://www.getadmiral.com","category":"consent-provider","domains":["admiral.mgr.consensu.org","*.admiral.mgr.consensu.org"]},{"name":"Adnuntius CMP","homepage":"https://adnuntius.com","category":"consent-provider","domains":["adnuntiusconsent.mgr.consensu.org","*.adnuntiusconsent.mgr.consensu.org"]},{"name":"Clickio CMP","homepage":"https://clickio.com","category":"consent-provider","domains":["clickio.mgr.consensu.org","*.clickio.mgr.consensu.org"]},{"name":"AppConsent CMP","homepage":"https://appconsent.io/en","category":"consent-provider","domains":["appconsent.mgr.consensu.org","*.appconsent.mgr.consensu.org"]},{"name":"DMG Media CMP","homepage":"https://www.dmgmedia.co.uk","category":"consent-provider","domains":["dmgmedia.mgr.consensu.org","*.dmgmedia.mgr.consensu.org"]},{"name":"Axel Springer CMP","homepage":"https://www.axelspringer.com","category":"consent-provider","domains":["axelspringer.mgr.consensu.org","*.axelspringer.mgr.consensu.org"]},{"name":"Bedrock CMP","homepage":"https://www.bedrockstreaming.com","category":"consent-provider","domains":["bedrock.mgr.consensu.org","*.bedrock.mgr.consensu.org"]},{"name":"BMIND CMP","homepage":"https://www.bmind.es","category":"consent-provider","domains":["bmind.mgr.consensu.org","*.bmind.mgr.consensu.org"]},{"name":"Borlabs CMP","homepage":"https://borlabs.io","category":"consent-provider","domains":["borlabs.mgr.consensu.org","*.borlabs.mgr.consensu.org"]},{"name":"Civic CMP","homepage":"https://www.civicuk.com","category":"consent-provider","domains":["cookiecontrol.mgr.consensu.org","*.cookiecontrol.mgr.consensu.org"]},{"name":"Commanders Act CMP","homepage":"https://www.commandersact.com","category":"consent-provider","domains":["commandersact.mgr.consensu.org","*.commandersact.mgr.consensu.org"]},{"name":"Complianz CMP","homepage":"https://complianz.io/","category":"consent-provider","domains":["complianz.mgr.consensu.org","*.complianz.mgr.consensu.org"]},{"name":"Consent Desk CMP","homepage":"https://www.consentdesk.com/","category":"consent-provider","domains":["consentdesk.mgr.consensu.org","*.consentdesk.mgr.consensu.org"]},{"name":"Consent Manager CMP","homepage":"https://consentmanager.net","category":"consent-provider","domains":["consentmanager.mgr.consensu.org","*.consentmanager.mgr.consensu.org"]},{"name":"Conversant CMP","homepage":"https://www.conversantmedia.eu/","category":"consent-provider","domains":["conversant.mgr.consensu.org","*.conversant.mgr.consensu.org"]},{"name":"Cookie Information CMP","homepage":"https://www.cookieinformation.com/","category":"consent-provider","domains":["cookieinformation.mgr.consensu.org","*.cookieinformation.mgr.consensu.org"]},{"name":"Cookiebot CMP","homepage":"https://www.cookiebot.com","category":"consent-provider","domains":["cookiebot.mgr.consensu.org","*.cookiebot.mgr.consensu.org"]},{"name":"Truendo CMP","homepage":"https://truendo.com/","category":"consent-provider","domains":["truendo.mgr.consensu.org","*.truendo.mgr.consensu.org"]},{"name":"Dentsu CMP","homepage":"https://www.dentsuaegisnetwork.de/","category":"consent-provider","domains":["dan.mgr.consensu.org","*.dan.mgr.consensu.org"]},{"name":"Didomi CMP","homepage":"https://www.didomi.io/en/","category":"consent-provider","domains":["didomi.mgr.consensu.org","*.didomi.mgr.consensu.org"]},{"name":"Ensighten CMP","homepage":"https://www.ensighten.com/","category":"consent-provider","domains":["ensighten.mgr.consensu.org","*.ensighten.mgr.consensu.org"]},{"name":"Evidon CMP","homepage":"https://evidon.com","category":"consent-provider","domains":["evidon.mgr.consensu.org","*.evidon.mgr.consensu.org"]},{"name":"Ezoic CMP","homepage":"https://www.ezoic.com/","category":"consent-provider","domains":["ezoic.mgr.consensu.org","*.ezoic.mgr.consensu.org"]},{"name":"Gemius CMP","homepage":"https://www.gemius.com","category":"consent-provider","domains":["gemius.mgr.consensu.org","*.gemius.mgr.consensu.org"]},{"name":"NitroPay CMP","homepage":"https://nitropay.com/","category":"consent-provider","domains":["nitropay.mgr.consensu.org","*.nitropay.mgr.consensu.org"]},{"name":"Google FundingChoices","homepage":"https://fundingchoices.google.com/start/","category":"consent-provider","domains":["fundingchoices.mgr.consensu.org","*.fundingchoices.mgr.consensu.org"]},{"name":"Gravito CMP","homepage":"https://www.gravito.net/","category":"consent-provider","domains":["gravito.mgr.consensu.org","*.gravito.mgr.consensu.org"]},{"name":"ID Ward CMP","homepage":"https://id-ward.com/enterprise","category":"consent-provider","domains":["idward.mgr.consensu.org","*.idward.mgr.consensu.org"]},{"name":"iubenda CMP","homepage":"https://www.iubenda.com","category":"consent-provider","domains":["iubenda.mgr.consensu.org","*.iubenda.mgr.consensu.org"]},{"name":"Jump CMP","homepage":"https://jumpgroup.it/","category":"consent-provider","domains":["avacy.mgr.consensu.org","*.avacy.mgr.consensu.org"]},{"name":"LiveRamp CMP","homepage":"https://liveramp.com/","category":"consent-provider","domains":["faktor.mgr.consensu.org","*.faktor.mgr.consensu.org"]},{"name":"Madvertise CMP","homepage":"https://madvertise.com/en/","category":"consent-provider","domains":["madvertise.mgr.consensu.org","*.madvertise.mgr.consensu.org"]},{"name":"Mairdumont Netletic CMP","homepage":"https://www.mairdumont-netletix.com/","category":"consent-provider","domains":["mdnxmp.mgr.consensu.org","*.mdnxmp.mgr.consensu.org"]},{"name":"Marfeel CMP","homepage":"https://www.marfeel.com/","category":"consent-provider","domains":["marfeel.mgr.consensu.org","*.marfeel.mgr.consensu.org"]},{"name":"Mediavine CMP","homepage":"https://www.mediavine.com/","category":"consent-provider","domains":["mediavine.mgr.consensu.org","*.mediavine.mgr.consensu.org"]},{"name":"ConsentServe CMP","homepage":"https://www.consentserve.com/","category":"consent-provider","domains":["consentserve.mgr.consensu.org","*.consentserve.mgr.consensu.org"]},{"name":"Next14 CMP","homepage":"https://www.next14.com/","category":"consent-provider","domains":["next14.mgr.consensu.org","*.next14.mgr.consensu.org"]},{"name":"AdRoll CMP","homepage":"https://www.adroll.com/","category":"consent-provider","domains":["adroll.mgr.consensu.org","*.adroll.mgr.consensu.org"]},{"name":"Ogury CMP","homepage":"https://www.ogury.com/","category":"consent-provider","domains":["ogury.mgr.consensu.org","*.ogury.mgr.consensu.org"]},{"name":"OneTag CMP","homepage":"https://onetag.net","category":"consent-provider","domains":["onetag.mgr.consensu.org","*.onetag.mgr.consensu.org"]},{"name":"OneTrust CMP","homepage":"https://onetrust.com","category":"consent-provider","domains":["onetrust.mgr.consensu.org","*.onetrust.mgr.consensu.org"]},{"name":"optAd360 CMP","homepage":"https://www.optad360.com/","category":"consent-provider","domains":["optad360.mgr.consensu.org","*.optad360.mgr.consensu.org"]},{"name":"Osano CMP","homepage":"https://www.osano.com","category":"consent-provider","domains":["osano.mgr.consensu.org","*.osano.mgr.consensu.org"]},{"name":"Playwire CMP","homepage":"https://www.playwire.com","category":"consent-provider","domains":["playwire.mgr.consensu.org","*.playwire.mgr.consensu.org"]},{"name":"Pulselive CMP","homepage":"https://www.pulselive.com","category":"consent-provider","domains":["pulselive.mgr.consensu.org","*.pulselive.mgr.consensu.org"]},{"name":"Quantcast Choice","homepage":"https://quantcast.com","category":"consent-provider","domains":["quantcast.mgr.consensu.org","*.quantcast.mgr.consensu.org"]},{"name":"RCS Pubblicita CMP","homepage":"http://www.rcspubblicita.it/site/home.html","category":"consent-provider","domains":["rcsmediagroup.mgr.consensu.org","*.rcsmediagroup.mgr.consensu.org"]},{"name":"Rich Audience CMP","homepage":"https://richaudience.com","category":"consent-provider","domains":["richaudience.mgr.consensu.org","*.richaudience.mgr.consensu.org"]},{"name":"Ringier Axel Springer CMP","homepage":"https://www.ringieraxelspringer.pl/en/home/","category":"consent-provider","domains":["rasp.mgr.consensu.org","*.rasp.mgr.consensu.org"]},{"name":"Secure Privacy CMP","homepage":"https://secureprivacy.ai/","category":"consent-provider","domains":["secureprivacy.mgr.consensu.org","*.secureprivacy.mgr.consensu.org"]},{"name":"Securiti CMP","homepage":"https://securiti.ai/","category":"consent-provider","domains":["securiti.mgr.consensu.org","*.securiti.mgr.consensu.org"]},{"name":"Seznam.cz CMP","homepage":"https://www.seznam.cz/","category":"consent-provider","domains":["seznam.mgr.consensu.org","*.seznam.mgr.consensu.org"]},{"name":"ShareThis CMP","homepage":"https://sharethis.com","category":"consent-provider","domains":["sharethis.mgr.consensu.org","*.sharethis.mgr.consensu.org"]},{"name":"ShinyStat CMP","homepage":"https://www.shinystat.com","category":"consent-provider","domains":["shinystat.mgr.consensu.org","*.shinystat.mgr.consensu.org"]},{"name":"Sibbo CMP","homepage":"https://sibboventures.com/en/","category":"consent-provider","domains":["sibboventures.mgr.consensu.org","*.sibboventures.mgr.consensu.org"]},{"name":"Singlespot CMP","homepage":"https://www.singlespot.com/en","category":"consent-provider","domains":["singlespot.mgr.consensu.org","*.singlespot.mgr.consensu.org"]},{"name":"Sirdata CMP","homepage":"https://www.sirdata.com","category":"consent-provider","domains":["sddan.mgr.consensu.org","*.sddan.mgr.consensu.org"]},{"name":"Snigel CMP","homepage":"https://snigel.com","category":"consent-provider","domains":["snigelweb.mgr.consensu.org","*.snigelweb.mgr.consensu.org"]},{"name":"Sourcepoint CMP","homepage":"https://sourcepoint.com","category":"consent-provider","domains":["sourcepoint.mgr.consensu.org","*.sourcepoint.mgr.consensu.org"]},{"name":"Pubtech CMP","homepage":"https://www.pubtech.ai/","category":"consent-provider","domains":["pubtech.mgr.consensu.org","*.pubtech.mgr.consensu.org"]},{"name":"AdMetrics Pro CMP","homepage":"https://admetricspro.com","category":"consent-provider","domains":["cmp.mgr.consensu.org","*.cmp.mgr.consensu.org"]},{"name":"Traffective CMP","homepage":"https://traffective.com","category":"consent-provider","domains":["traffective.mgr.consensu.org","*.traffective.mgr.consensu.org"]},{"name":"UniConsent CMP","homepage":"https://uniconsent.com","category":"consent-provider","domains":["uniconsent.mgr.consensu.org","*.uniconsent.mgr.consensu.org"]},{"name":"TrustArc CMP","homepage":"https://trustarc.com/","category":"consent-provider","domains":["trustarc.mgr.consensu.org","*.trustarc.mgr.consensu.org"]},{"name":"Usercentrics CMP","homepage":"https://usercentrics.com","category":"consent-provider","domains":["usercentrics.mgr.consensu.org","*.usercentrics.mgr.consensu.org","*.usercentrics.eu","*.services.usercentrics.eu"]},{"name":"WebAds CMP","homepage":"https://www.webads.nl/","category":"consent-provider","domains":["webads.mgr.consensu.org","*.webads.mgr.consensu.org"]},{"name":"Trustcommander","company":"Commandersact","homepage":"https://www.commandersact.com","category":"consent-provider","domains":["*.trustcommander.net"]},{"name":"Hubvisor","homepage":"https://www.hubvisor.io","category":"ad","domains":["*.hubvisor.io"]},{"name":"Castle","homepage":"https://castle.io","category":"utility","domains":["*.castle.io","d2t77mnxyo7adj.cloudfront.net"]},{"name":"Wigzo","homepage":"https://www.wigzo.com/","category":"marketing","domains":["*.wigzo.com","*.wigzopush.com"]},{"name":"Convertful","homepage":"https://convertful.com/","category":"marketing","domains":["*.convertful.com"]},{"name":"OpenLink","company":"MediaWallah","homepage":"https://www.mediawallah.com/","category":"ad","domains":["*.mediawallahscript.com"]},{"name":"TPMN","company":"TPMN","homepage":"http://tpmn.io/","category":"ad","domains":["*.tpmn.co.kr"]},{"name":"HERO","company":"Klarna","homepage":"https://www.usehero.com/","category":"customer-success","domains":["*.usehero.com"]},{"name":"Zync","company":"Zeta Global","homepage":"https://zetaglobal.com/","category":"marketing","domains":["*.rezync.com"]},{"name":"AdFuel Video","company":"AdFuel","homepage":"https://goadfuel.com/","category":"ad","domains":["*.videoplayerhub.com"]},{"name":"Prefix Box AI Search","company":"Prefix Box","homepage":"https://www.prefixbox.com/","category":"utility","domains":["*.prefixbox.com"]},{"name":"SpeedSize Service Worker","company":"SpeedSize","homepage":"https://speedsize.com/","category":"utility","domains":["di6367dava8ow.cloudfront.net","d2d22nphq0yz8t.cloudfront.net"]},{"name":"Vonage Video API","company":"Vonage","homepage":"https://www.vonage.com/communications-apis/video/","category":"video","domains":["*.opentok.com"]},{"name":"Checkout.com","company":"Checkout.com","homepage":"https://www.checkout.com","category":"utility","domains":["*.checkout.com"]},{"name":"Noibu","company":"Noibu","homepage":"https://www.noibu.com","category":"utility","domains":["*.noibu.com"]},{"name":"Clarity","company":"Microsoft","homepage":"https://clarity.microsoft.com/","category":"utility","domains":["*.clarity.ms"]},{"name":"goinstore","company":"Emplifi","homepage":"https://goinstore.com/","category":"customer-success","domains":["*.goinstore.com"]},{"name":"SegmentStream","company":"SegmentStream","homepage":"https://segmentstream.com/","category":"marketing","domains":["*.segmentstream.com"]},{"name":"Amazon Associates","company":"Amazon","homepage":"https://affiliate-program.amazon.co.uk/","category":"marketing","domains":["*.associates-amazon.com"]},{"name":"DotMetrics","company":"Ipsos","homepage":"https://www.dotmetrics.net/","category":"analytics","domains":["*.dotmetrics.net"]},{"name":"Truffle Bid","company":"Truffle","homepage":"https://truffle.bid/","category":"ad","domains":["*.truffle.bid"]},{"name":"Hybrid","company":"Hybrid","homepage":"https://hybrid.ai/","category":"ad","domains":["*.hybrid.ai"]},{"name":"AdMan Media","company":"AdMan","homepage":"https://admanmedia.com/","category":"video","domains":["*.admanmedia.com"]},{"name":"ID5 Identity Cloud","company":"ID5","homepage":"https://id5.io/","category":"ad","domains":["id5-sync.com","*.id5-sync.com"]},{"name":"Audience Rate","company":"Audience Rate Limited","homepage":"https://www.audiencerate.com/","category":"ad","domains":["*.audrte.com"]},{"name":"Seedtag","company":"Seedtag Advertising","homepage":"https://www.seedtag.com/","category":"ad","domains":["*.seedtag.com"]},{"name":"IVI","company":"IVI Technologies","homepage":"http://ivitechnologies.com/","category":"ad","domains":["*.ivitrack.com"]},{"name":"Sportradar","company":"Sportradar","homepage":"https://www.sportradar.com/","category":"ad","domains":["*.sportradarserving.com"]},{"name":"ZEOTAP","company":"ZEOTAP","homepage":"https://zeotap.com/","category":"ad","domains":["*.zeotap.com"]},{"name":"Web Content Assessor","company":"TMT Digital","homepage":"https://mediatrust.com/","category":"ad","domains":["*.webcontentassessor.com"]},{"name":"Genie","company":"Media Force","homepage":"https://hellogenie.com/","category":"ad","domains":["*.mfadsrvr.com"]},{"name":"mediarithmics","company":"mediarithmics","homepage":"https://www.mediarithmics.com/","category":"ad","domains":["*.mediarithmics.com"]},{"name":"Ozone Project","company":"The Ozone Project","homepage":"https://www.ozoneproject.com/","category":"ad","domains":["*.the-ozone-project.com"]},{"name":"FiftyAurora","company":"Fifty","homepage":"https://fifty.io/","category":"ad","domains":["*.fiftyt.com"]},{"name":"smadex","company":"entravision","homepage":"https://smadex.com/","category":"ad","domains":["*.smadex.com"]},{"name":"AWX","company":"Trinity Mirror","category":"ad","domains":["*.tm-awx.com"]},{"name":"XPO","company":"Knorex","category":"ad","homepage":"https://www.knorex.com/","domains":["*.brand-display.com"]},{"name":"Viafoura","company":"Viafoura","category":"ad","homepage":"https://viafoura.com/","domains":["*.viafoura.co","*.viafoura.net"]},{"name":"Adnami","company":"Adnami","category":"ad","homepage":"https://www.adnami.io/","domains":["*.adnami.io"]},{"name":"LiveRamp Privacy Manager","company":"LiveRamp","category":"ad","homepage":"https://liveramp.com/privacy-legal-compliance/","domains":["*.privacymanager.io"]},{"name":"Onfocus","company":"Onfocus SAS","category":"ad","domains":["*.4dex.io"]},{"name":"viewTag","company":"Advanced Store","category":"ad","domains":["*.ad4m.at"]},{"name":"MRP Prelytics","company":"Market Resource Partners","category":"ad","homepage":"https://www.mrpfd.com/","domains":["*.mrpdata.net"]},{"name":"iPROM","company":"iPROM","category":"ad","homepage":"https://iprom.eu/","domains":["*.iprom.net"]}]');

/***/ })

/******/ });
/************************************************************************/
/******/ // The module cache
/******/ var __webpack_module_cache__ = {};
/******/ 
/******/ // The require function
/******/ function __nccwpck_require__(moduleId) {
/******/ 	// Check if module is in cache
/******/ 	var cachedModule = __webpack_module_cache__[moduleId];
/******/ 	if (cachedModule !== undefined) {
/******/ 		return cachedModule.exports;
/******/ 	}
/******/ 	// Create a new module (and put it into the cache)
/******/ 	var module = __webpack_module_cache__[moduleId] = {
/******/ 		id: moduleId,
/******/ 		loaded: false,
/******/ 		exports: {}
/******/ 	};
/******/ 
/******/ 	// Execute the module function
/******/ 	var threw = true;
/******/ 	try {
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __nccwpck_require__);
/******/ 		threw = false;
/******/ 	} finally {
/******/ 		if(threw) delete __webpack_module_cache__[moduleId];
/******/ 	}
/******/ 
/******/ 	// Flag the module as loaded
/******/ 	module.loaded = true;
/******/ 
/******/ 	// Return the exports of the module
/******/ 	return module.exports;
/******/ }
/******/ 
/******/ // expose the modules object (__webpack_modules__)
/******/ __nccwpck_require__.m = __webpack_modules__;
/******/ 
/************************************************************************/
/******/ /* webpack/runtime/create fake namespace object */
/******/ (() => {
/******/ 	var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);
/******/ 	var leafPrototypes;
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 16: return value when it's Promise-like
/******/ 	// mode & 8|1: behave like require
/******/ 	__nccwpck_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = this(value);
/******/ 		if(mode & 8) return value;
/******/ 		if(typeof value === 'object' && value) {
/******/ 			if((mode & 4) && value.__esModule) return value;
/******/ 			if((mode & 16) && typeof value.then === 'function') return value;
/******/ 		}
/******/ 		var ns = Object.create(null);
/******/ 		__nccwpck_require__.r(ns);
/******/ 		var def = {};
/******/ 		leafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];
/******/ 		for(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {
/******/ 			Object.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));
/******/ 		}
/******/ 		def['default'] = () => (value);
/******/ 		__nccwpck_require__.d(ns, def);
/******/ 		return ns;
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/define property getters */
/******/ (() => {
/******/ 	// define getter functions for harmony exports
/******/ 	__nccwpck_require__.d = (exports, definition) => {
/******/ 		for(var key in definition) {
/******/ 			if(__nccwpck_require__.o(definition, key) && !__nccwpck_require__.o(exports, key)) {
/******/ 				Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 			}
/******/ 		}
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/ensure chunk */
/******/ (() => {
/******/ 	__nccwpck_require__.f = {};
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__nccwpck_require__.e = (chunkId) => {
/******/ 		return Promise.all(Object.keys(__nccwpck_require__.f).reduce((promises, key) => {
/******/ 			__nccwpck_require__.f[key](chunkId, promises);
/******/ 			return promises;
/******/ 		}, []));
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/get javascript chunk filename */
/******/ (() => {
/******/ 	// This function allow to reference async chunks
/******/ 	__nccwpck_require__.u = (chunkId) => {
/******/ 		// return url for filenames based on template
/******/ 		return "" + chunkId + ".index.js";
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/hasOwnProperty shorthand */
/******/ (() => {
/******/ 	__nccwpck_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ })();
/******/ 
/******/ /* webpack/runtime/make namespace object */
/******/ (() => {
/******/ 	// define __esModule on exports
/******/ 	__nccwpck_require__.r = (exports) => {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/node module decorator */
/******/ (() => {
/******/ 	__nccwpck_require__.nmd = (module) => {
/******/ 		module.paths = [];
/******/ 		if (!module.children) module.children = [];
/******/ 		return module;
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/compat */
/******/ 
/******/ if (typeof __nccwpck_require__ !== 'undefined') __nccwpck_require__.ab = new URL('.', import.meta.url).pathname.slice(import.meta.url.match(/^file:\/\/\/\w:/) ? 1 : 0, -1) + "/";
/******/ 
/******/ /* webpack/runtime/import chunk loading */
/******/ (() => {
/******/ 	// no baseURI
/******/ 	
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		179: 0
/******/ 	};
/******/ 	
/******/ 	var installChunk = (data) => {
/******/ 		var {ids, modules, runtime} = data;
/******/ 		// add "modules" to the modules object,
/******/ 		// then flag all "ids" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0;
/******/ 		for(moduleId in modules) {
/******/ 			if(__nccwpck_require__.o(modules, moduleId)) {
/******/ 				__nccwpck_require__.m[moduleId] = modules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(runtime) runtime(__nccwpck_require__);
/******/ 		for(;i < ids.length; i++) {
/******/ 			chunkId = ids[i];
/******/ 			if(__nccwpck_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				installedChunks[chunkId][0]();
/******/ 			}
/******/ 			installedChunks[ids[i]] = 0;
/******/ 		}
/******/ 	
/******/ 	}
/******/ 	
/******/ 	__nccwpck_require__.f.j = (chunkId, promises) => {
/******/ 			// import() chunk loading for javascript
/******/ 			var installedChunkData = __nccwpck_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;
/******/ 			if(installedChunkData !== 0) { // 0 means "already installed".
/******/ 	
/******/ 				// a Promise means "currently loading".
/******/ 				if(installedChunkData) {
/******/ 					promises.push(installedChunkData[1]);
/******/ 				} else {
/******/ 					if(true) { // all chunks have JS
/******/ 						// setup Promise in chunk cache
/******/ 						var promise = import("./" + __nccwpck_require__.u(chunkId)).then(installChunk, (e) => {
/******/ 							if(installedChunks[chunkId] !== 0) installedChunks[chunkId] = undefined;
/******/ 							throw e;
/******/ 						});
/******/ 						var promise = Promise.race([promise, new Promise((resolve) => (installedChunkData = installedChunks[chunkId] = [resolve]))])
/******/ 						promises.push(installedChunkData[1] = promise);
/******/ 					} else installedChunks[chunkId] = 0;
/******/ 				}
/******/ 			}
/******/ 	};
/******/ 	
/******/ 	// no external install chunk
/******/ 	
/******/ 	// no on chunks loaded
/******/ })();
/******/ 
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {

// NAMESPACE OBJECT: ./node_modules/lighthouse/core/config/constants.js
var constants_namespaceObject = {};
__nccwpck_require__.r(constants_namespaceObject);
__nccwpck_require__.d(constants_namespaceObject, {
  "defaultNavigationConfig": () => (defaultNavigationConfig),
  "defaultPassConfig": () => (defaultPassConfig),
  "defaultSettings": () => (defaultSettings),
  "nonSimulatedPassConfigOverrides": () => (nonSimulatedPassConfigOverrides),
  "screenEmulationMetrics": () => (screenEmulationMetrics),
  "throttling": () => (constants_throttling),
  "userAgents": () => (userAgents)
});

// EXTERNAL MODULE: ./node_modules/@actions/core/lib/core.js
var core = __nccwpck_require__(2186);
// EXTERNAL MODULE: ./node_modules/lighthouse-logger/index.js
var lighthouse_logger = __nccwpck_require__(8687);
// EXTERNAL MODULE: external "fs"
var external_fs_ = __nccwpck_require__(7147);
// EXTERNAL MODULE: external "path"
var external_path_ = __nccwpck_require__(1017);
// EXTERNAL MODULE: ./node_modules/lodash/isEqual.js
var isEqual = __nccwpck_require__(52);
// EXTERNAL MODULE: external "events"
var external_events_ = __nccwpck_require__(2361);
;// CONCATENATED MODULE: ./node_modules/lighthouse/core/gather/fetcher.js
/**
 * @license Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */



/**
 * @fileoverview Fetcher is a utility for making requests to any arbitrary resource,
 * ignoring normal browser constraints such as CORS.
 */

/* global fetch */

/** @typedef {{content: string|null, status: number|null}} FetchResponse */

class Fetcher {
  /**
   * @param {LH.Gatherer.FRProtocolSession} session
   */
  constructor(session) {
    this.session = session;
  }

  /**
   * Fetches any resource using the network directly.
   *
   * @param {string} url
   * @param {{timeout: number}=} options timeout is in ms
   * @return {Promise<FetchResponse>}
   */
  async fetchResource(url, options = {timeout: 2_000}) {
    // In Lightrider, `Network.loadNetworkResource` is not implemented, but fetch
    // is configured to work for any resource.
    if (global.isLightrider) {
      return this._wrapWithTimeout(this._fetchWithFetchApi(url), options.timeout);
    }

    return this._fetchResourceOverProtocol(url, options);
  }

  /**
   * @param {string} url
   * @return {Promise<FetchResponse>}
   */
  async _fetchWithFetchApi(url) {
    const response = await fetch(url);

    let content = null;
    try {
      content = await response.text();
    } catch {}

    return {
      content,
      status: response.status,
    };
  }

  /**
   * @param {string} handle
   * @param {{timeout: number}=} options,
   * @return {Promise<string>}
   */
  async _readIOStream(handle, options = {timeout: 2_000}) {
    const startTime = Date.now();

    let ioResponse;
    let data = '';
    while (!ioResponse || !ioResponse.eof) {
      const elapsedTime = Date.now() - startTime;
      if (elapsedTime > options.timeout) {
        throw new Error('Waiting for the end of the IO stream exceeded the allotted time.');
      }
      ioResponse = await this.session.sendCommand('IO.read', {handle});
      const responseData = ioResponse.base64Encoded ?
        Buffer.from(ioResponse.data, 'base64').toString('utf-8') :
        ioResponse.data;
      data = data.concat(responseData);
    }

    return data;
  }

  /**
   * @param {string} url
   * @return {Promise<{stream: LH.Crdp.IO.StreamHandle|null, status: number|null}>}
   */
  async _loadNetworkResource(url) {
    const frameTreeResponse = await this.session.sendCommand('Page.getFrameTree');
    const networkResponse = await this.session.sendCommand('Network.loadNetworkResource', {
      frameId: frameTreeResponse.frameTree.frame.id,
      url,
      options: {
        disableCache: true,
        includeCredentials: true,
      },
    });

    return {
      stream: networkResponse.resource.success ? (networkResponse.resource.stream || null) : null,
      status: networkResponse.resource.httpStatusCode || null,
    };
  }

  /**
   * @param {string} url
   * @param {{timeout: number}} options timeout is in ms
   * @return {Promise<FetchResponse>}
   */
  async _fetchResourceOverProtocol(url, options) {
    const startTime = Date.now();
    const response = await this._wrapWithTimeout(this._loadNetworkResource(url), options.timeout);

    const isOk = response.status && response.status >= 200 && response.status <= 299;
    if (!response.stream || !isOk) return {status: response.status, content: null};

    const timeout = options.timeout - (Date.now() - startTime);
    const content = await this._readIOStream(response.stream, {timeout});
    return {status: response.status, content};
  }

  /**
   * @template T
   * @param {Promise<T>} promise
   * @param {number} ms
   */
  async _wrapWithTimeout(promise, ms) {
    /** @type {NodeJS.Timeout} */
    let timeoutHandle;
    const timeoutPromise = new Promise((_, reject) => {
      timeoutHandle = setTimeout(reject, ms, new Error('Timed out fetching resource'));
    });

    /** @type {Promise<T>} */
    const wrappedPromise = await Promise.race([promise, timeoutPromise])
      .finally(() => clearTimeout(timeoutHandle));
    return wrappedPromise;
  }
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/lib/page-functions.js
/**
 * @license Copyright 2018 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

/**
 * @fileoverview
 * Helper functions that are passed by `toString()` by Driver to be evaluated in target page.
 *
 * Every function in this module only runs in the browser, so it is ignored from
 * the c8 code coverage tool. See c8.sh
 *
 * Important: this module should only be imported like this:
 *     const pageFunctions = require('...');
 * Never like this:
 *     const {justWhatINeed} = require('...');
 * Otherwise, minification will mangle the variable names and break usage.
 */

/**
 * `typed-query-selector`'s CSS selector parser.
 * @template {string} T
 * @typedef {import('typed-query-selector/parser').ParseSelector<T>} ParseSelector
 */

/* global window document Node ShadowRoot HTMLElement */

/**
 * The `exceptionDetails` provided by the debugger protocol does not contain the useful
 * information such as name, message, and stack trace of the error when it's wrapped in a
 * promise. Instead, map to a successful object that contains this information.
 * @param {string|Error} [err] The error to convert
 * @return {{__failedInBrowser: boolean, name: string, message: string, stack: string|undefined}}
 */
function wrapRuntimeEvalErrorInBrowser(err) {
  if (!err || typeof err === 'string') {
    err = new Error(err);
  }

  return {
    __failedInBrowser: true,
    name: err.name || 'Error',
    message: err.message || 'unknown error',
    stack: err.stack,
  };
}

/**
 * @template {string} T
 * @param {T} selector Optional simple CSS selector to filter nodes on.
 *     Combinators are not supported.
 * @return {Array<ParseSelector<T>>}
 */
function getElementsInDocument(selector) {
  const realMatchesFn = window.__ElementMatches || window.Element.prototype.matches;
  /** @type {Array<ParseSelector<T>>} */
  const results = [];

  /** @param {NodeListOf<Element>} nodes */
  const _findAllElements = nodes => {
    for (const el of nodes) {
      if (!selector || realMatchesFn.call(el, selector)) {
        /** @type {ParseSelector<T>} */
        // @ts-expect-error - el is verified as matching above, tsc just can't verify it through the .call().
        const matchedEl = el;
        results.push(matchedEl);
      }

      // If the element has a shadow root, dig deeper.
      if (el.shadowRoot) {
        _findAllElements(el.shadowRoot.querySelectorAll('*'));
      }
    }
  };
  _findAllElements(document.querySelectorAll('*'));

  return results;
}

/**
 * Gets the opening tag text of the given node.
 * @param {Element|ShadowRoot} element
 * @param {Array<string>=} ignoreAttrs An optional array of attribute tags to not include in the HTML snippet.
 * @return {string}
 */
function getOuterHTMLSnippet(element, ignoreAttrs = [], snippetCharacterLimit = 500) {
  const ATTRIBUTE_CHAR_LIMIT = 75;
  // Autofill information that is injected into the snippet via AutofillShowTypePredictions
  // TODO(paulirish): Don't clean title attribute from all elements if it's unnecessary
  const autoFillIgnoreAttrs = ['autofill-information', 'autofill-prediction', 'title'];

  // ShadowRoots are sometimes passed in; use their hosts' outerHTML.
  if (element instanceof ShadowRoot) {
    element = element.host;
  }

  try {
    /** @type {Element} */
    // @ts-expect-error - clone will be same type as element - see https://github.com/microsoft/TypeScript/issues/283
    const clone = element.cloneNode();

    // Prevent any potential side-effects by appending to a template element.
    // See https://github.com/GoogleChrome/lighthouse/issues/11465
    const template = element.ownerDocument.createElement('template');
    template.content.append(clone);
    ignoreAttrs.concat(autoFillIgnoreAttrs).forEach(attribute =>{
      clone.removeAttribute(attribute);
    });
    let charCount = 0;
    for (const attributeName of clone.getAttributeNames()) {
      if (charCount > snippetCharacterLimit) {
        clone.removeAttribute(attributeName);
        continue;
      }

      let attributeValue = clone.getAttribute(attributeName);
      if (attributeValue === null) continue; // Can't happen.

      let dirty = false;

      // Replace img.src with img.currentSrc. Same for audio and video.
      if (attributeName === 'src' && 'currentSrc' in element) {
        const elementWithSrc = /** @type {HTMLImageElement|HTMLMediaElement} */ (element);
        const currentSrc = elementWithSrc.currentSrc;
        // Only replace if the two URLs do not resolve to the same location.
        const documentHref = elementWithSrc.ownerDocument.location.href;
        if (new URL(attributeValue, documentHref).toString() !== currentSrc) {
          attributeValue = currentSrc;
          dirty = true;
        }
      }

      // Elide attribute value if too long.
      if (attributeValue.length > ATTRIBUTE_CHAR_LIMIT) {
        attributeValue = attributeValue.slice(0, ATTRIBUTE_CHAR_LIMIT - 1) + '…';
        dirty = true;
      }

      if (dirty) {
        // Style attributes can be blocked by the CSP if they are set via `setAttribute`.
        // If we are trying to set the style attribute, use `el.style.cssText` instead.
        // https://github.com/GoogleChrome/lighthouse/issues/13630
        if (attributeName === 'style') {
          const elementWithStyle = /** @type {HTMLElement} */ (clone);
          elementWithStyle.style.cssText = attributeValue;
        } else {
          clone.setAttribute(attributeName, attributeValue);
        }
      }
      charCount += attributeName.length + attributeValue.length;
    }

    const reOpeningTag = /^[\s\S]*?>/;
    const [match] = clone.outerHTML.match(reOpeningTag) || [];
    if (match && charCount > snippetCharacterLimit) {
      return match.slice(0, match.length - 1) + ' …>';
    }
    return match || '';
  } catch (_) {
    // As a last resort, fall back to localName.
    return `<${element.localName}>`;
  }
}

/**
 * Computes a memory/CPU performance benchmark index to determine rough device class.
 * @see https://github.com/GoogleChrome/lighthouse/issues/9085
 * @see https://docs.google.com/spreadsheets/d/1E0gZwKsxegudkjJl8Fki_sOwHKpqgXwt8aBAfuUaB8A/edit?usp=sharing
 *
 * Historically (until LH 6.3), this benchmark created a string of length 100,000 in a loop, and returned
 * the number of times per second the string can be created.
 *
 * Changes to v8 in 8.6.106 changed this number and also made Chrome more variable w.r.t GC interupts.
 * This benchmark now is a hybrid of a similar GC-heavy approach to the original benchmark and an array
 * copy benchmark.
 *
 * As of Chrome m86...
 *
 *  - 1000+ is a desktop-class device, Core i3 PC, iPhone X, etc
 *  - 800+ is a high-end Android phone, Galaxy S8, low-end Chromebook, etc
 *  - 125+ is a mid-tier Android phone, Moto G4, etc
 *  - <125 is a budget Android phone, Alcatel Ideal, Galaxy J2, etc
 * @return {number}
 */
function computeBenchmarkIndex() {
  /**
   * The GC-heavy benchmark that creates a string of length 10000 in a loop.
   * The returned index is the number of times per second the string can be created divided by 10.
   * The division by 10 is to keep similar magnitudes to an earlier version of BenchmarkIndex that
   * used a string length of 100000 instead of 10000.
   */
  function benchmarkIndexGC() {
    const start = Date.now();
    let iterations = 0;

    while (Date.now() - start < 500) {
      let s = '';
      for (let j = 0; j < 10000; j++) s += 'a';
      if (s.length === 1) throw new Error('will never happen, but prevents compiler optimizations');

      iterations++;
    }

    const durationInSeconds = (Date.now() - start) / 1000;
    return Math.round(iterations / 10 / durationInSeconds);
  }

  /**
   * The non-GC-dependent benchmark that copies integers back and forth between two arrays of length 100000.
   * The returned index is the number of times per second a copy can be made, divided by 10.
   * The division by 10 is to keep similar magnitudes to the GC-dependent version.
   */
  function benchmarkIndexNoGC() {
    const arrA = [];
    const arrB = [];
    for (let i = 0; i < 100000; i++) arrA[i] = arrB[i] = i;

    const start = Date.now();
    let iterations = 0;

    // Some Intel CPUs have a performance cliff due to unlucky JCC instruction alignment.
    // Two possible fixes: call Date.now less often, or manually unroll the inner loop a bit.
    // We'll call Date.now less and only check the duration on every 10th iteration for simplicity.
    // See https://bugs.chromium.org/p/v8/issues/detail?id=10954#c1.
    while (iterations % 10 !== 0 || Date.now() - start < 500) {
      const src = iterations % 2 === 0 ? arrA : arrB;
      const tgt = iterations % 2 === 0 ? arrB : arrA;

      for (let j = 0; j < src.length; j++) tgt[j] = src[j];

      iterations++;
    }

    const durationInSeconds = (Date.now() - start) / 1000;
    return Math.round(iterations / 10 / durationInSeconds);
  }

  // The final BenchmarkIndex is a simple average of the two components.
  return (benchmarkIndexGC() + benchmarkIndexNoGC()) / 2;
}

/**
 * Adapted from DevTools' SDK.DOMNode.prototype.path
 *   https://github.com/ChromeDevTools/devtools-frontend/blob/4fff931bb/front_end/sdk/DOMModel.js#L625-L647
 * Backend: https://source.chromium.org/search?q=f:node.cc%20symbol:PrintNodePathTo&sq=&ss=chromium%2Fchromium%2Fsrc
 *
 * TODO: DevTools nodePath handling doesn't support iframes, but probably could. https://crbug.com/1127635
 * @param {Node} node
 * @return {string}
 */
function getNodePath(node) {
  // For our purposes, there's no worthwhile difference between shadow root and document fragment
  // We can consider them entirely synonymous.
  /** @param {Node} node @return {node is ShadowRoot} */
  const isShadowRoot = node => node.nodeType === Node.DOCUMENT_FRAGMENT_NODE;
  /** @param {Node} node */
  const getNodeParent = node => isShadowRoot(node) ? node.host : node.parentNode;

  /** @param {Node} node @return {number|'a'} */
  function getNodeIndex(node) {
    if (isShadowRoot(node)) {
      // User-agent shadow roots get 'u'. Non-UA shadow roots get 'a'.
      return 'a';
    }
    let index = 0;
    let prevNode;
    while (prevNode = node.previousSibling) { // eslint-disable-line no-cond-assign
      node = prevNode;
      // skip empty text nodes
      if (node.nodeType === Node.TEXT_NODE && (node.nodeValue || '').trim().length === 0) continue;
      index++;
    }
    return index;
  }

  /** @type {Node|null} */
  let currentNode = node;
  const path = [];
  while (currentNode && getNodeParent(currentNode)) {
    const index = getNodeIndex(currentNode);
    path.push([index, currentNode.nodeName]);
    currentNode = getNodeParent(currentNode);
  }
  path.reverse();
  return path.join(',');
}

/**
 * @param {Element} element
 * @return {string}
 *
 * Note: CSS Selectors having no standard mechanism to describe shadow DOM piercing. So we can't.
 *
 * If the node resides within shadow DOM, the selector *only* starts from the shadow root.
 * For example, consider this img within a <section> within a shadow root..
 *  - DOM: <html> <body> <div> #shadow-root <section> <img/>
 *  - nodePath: 0,HTML,1,BODY,1,DIV,a,#document-fragment,0,SECTION,0,IMG
 *  - nodeSelector: section > img
 */
function getNodeSelector(element) {
  /**
   * @param {Element} element
   */
  function getSelectorPart(element) {
    let part = element.tagName.toLowerCase();
    if (element.id) {
      part += '#' + element.id;
    } else if (element.classList.length > 0) {
      part += '.' + element.classList[0];
    }
    return part;
  }

  const parts = [];
  while (parts.length < 4) {
    parts.unshift(getSelectorPart(element));
    if (!element.parentElement) {
      break;
    }
    element = element.parentElement;
    if (element.tagName === 'HTML') {
      break;
    }
  }
  return parts.join(' > ');
}

/**
 * This function checks if an element or an ancestor of an element is `position:fixed`.
 * In addition we ensure that the element is capable of behaving as a `position:fixed`
 * element, checking that it lives within a scrollable ancestor.
 * @param {HTMLElement} element
 * @return {boolean}
 */
function isPositionFixed(element) {
  /**
   * @param {HTMLElement} element
   * @param {'overflowY'|'position'} attr
   * @return {string}
   */
  function getStyleAttrValue(element, attr) {
    // Check style before computedStyle as computedStyle is expensive.
    return element.style[attr] || window.getComputedStyle(element)[attr];
  }

  // Position fixed/sticky has no effect in case when document does not scroll.
  const htmlEl = document.querySelector('html');
  if (!htmlEl) throw new Error('html element not found in document');
  if (htmlEl.scrollHeight <= htmlEl.clientHeight ||
      !['scroll', 'auto', 'visible'].includes(getStyleAttrValue(htmlEl, 'overflowY'))) {
    return false;
  }

  /** @type {HTMLElement | null} */
  let currentEl = element;
  while (currentEl) {
    const position = getStyleAttrValue(currentEl, 'position');
    if ((position === 'fixed' || position === 'sticky')) {
      return true;
    }
    currentEl = currentEl.parentElement;
  }
  return false;
}

/**
 * Generate a human-readable label for the given element, based on end-user facing
 * strings like the innerText or alt attribute.
 * Returns label string or null if no useful label is found.
 * @param {Element} element
 * @return {string | null}
 */
function getNodeLabel(element) {
  // Inline so that audits that import getNodeLabel don't
  // also need to import truncate
  /**
   * @param {string} str
   * @param {number} maxLength
   * @return {string}
   */
  function truncate(str, maxLength) {
    if (str.length <= maxLength) {
      return str;
    }
    // Take advantage of string iterator multi-byte character awareness.
    // Regular `.slice` will ignore unicode character boundaries and lead to malformed text.
    return Array.from(str).slice(0, maxLength - 1).join('') + '…';
  }

  const tagName = element.tagName.toLowerCase();
  // html and body content is too broad to be useful, since they contain all page content
  if (tagName !== 'html' && tagName !== 'body') {
    const nodeLabel = element instanceof HTMLElement && element.innerText ||
        element.getAttribute('alt') || element.getAttribute('aria-label');
    if (nodeLabel) {
      return truncate(nodeLabel, 80);
    } else {
      // If no useful label was found then try to get one from a child.
      // E.g. if an a tag contains an image but no text we want the image alt/aria-label attribute.
      const nodeToUseForLabel = element.querySelector('[alt], [aria-label]');
      if (nodeToUseForLabel) {
        return getNodeLabel(nodeToUseForLabel);
      }
    }
  }
  return null;
}

/**
 * @param {Element} element
 * @return {LH.Artifacts.Rect}
 */
function getBoundingClientRect(element) {
  const realBoundingClientRect = window.__HTMLElementBoundingClientRect ||
    window.HTMLElement.prototype.getBoundingClientRect;
  // The protocol does not serialize getters, so extract the values explicitly.
  const rect = realBoundingClientRect.call(element);
  return {
    top: Math.round(rect.top),
    bottom: Math.round(rect.bottom),
    left: Math.round(rect.left),
    right: Math.round(rect.right),
    width: Math.round(rect.width),
    height: Math.round(rect.height),
  };
}

/**
 * RequestIdleCallback shim that calculates the remaining deadline time in order to avoid a potential lighthouse
 * penalty for tests run with simulated throttling. Reduces the deadline time to (50 - safetyAllowance) / cpuSlowdownMultiplier to
 * ensure a long task is very unlikely if using the API correctly.
 * @param {number} cpuSlowdownMultiplier
 */
function wrapRequestIdleCallback(cpuSlowdownMultiplier) {
  const safetyAllowanceMs = 10;
  const maxExecutionTimeMs = Math.floor((50 - safetyAllowanceMs) / cpuSlowdownMultiplier);
  const nativeRequestIdleCallback = window.requestIdleCallback;
  window.requestIdleCallback = (cb, options) => {
    /**
     * @type {Parameters<typeof window['requestIdleCallback']>[0]}
     */
    const cbWrap = (deadline) => {
      const start = Date.now();
      // @ts-expect-error - save original on non-standard property.
      deadline.__timeRemaining = deadline.timeRemaining;
      deadline.timeRemaining = () => {
        // @ts-expect-error - access non-standard property.
        const timeRemaining = deadline.__timeRemaining();
        return Math.min(timeRemaining, Math.max(0, maxExecutionTimeMs - (Date.now() - start))
        );
      };
      deadline.timeRemaining.toString = () => {
        return 'function timeRemaining() { [native code] }';
      };
      cb(deadline);
    };
    return nativeRequestIdleCallback(cbWrap, options);
  };
  window.requestIdleCallback.toString = () => {
    return 'function requestIdleCallback() { [native code] }';
  };
}

/**
 * @param {Element|ShadowRoot} element
 * @return {LH.Artifacts.NodeDetails}
 */
function getNodeDetails(element) {
  // This bookkeeping is for the FullPageScreenshot gatherer.
  if (!window.__lighthouseNodesDontTouchOrAllVarianceGoesAway) {
    window.__lighthouseNodesDontTouchOrAllVarianceGoesAway = new Map();
  }

  element = element instanceof ShadowRoot ? element.host : element;
  const selector = getNodeSelector(element);

  // Create an id that will be unique across all execution contexts.
  //
  // Made up of 3 components:
  //   - prefix unique to specific execution context
  //   - nth unique node seen by this function for this execution context
  //   - node tagName
  //
  // Every page load only has up to two associated contexts - the page context
  // (denoted as `__lighthouseExecutionContextUniqueIdentifier` being undefined)
  // and the isolated context. The id must be unique to distinguish gatherers running
  // on different page loads that identify the same logical element, for purposes
  // of the full page screenshot node lookup; hence the prefix.
  //
  // The id could be any arbitrary string, the exact value is not important.
  // For example, tagName is added only because it might be useful for debugging.
  // But execution id and map size are added to ensure uniqueness.
  // We also dedupe this id so that details collected for an element within the same
  // pass and execution context will share the same id. Not technically important, but
  // cuts down on some duplication.
  let lhId = window.__lighthouseNodesDontTouchOrAllVarianceGoesAway.get(element);
  if (!lhId) {
    lhId = [
      window.__lighthouseExecutionContextUniqueIdentifier === undefined ?
        'page' :
        window.__lighthouseExecutionContextUniqueIdentifier,
      window.__lighthouseNodesDontTouchOrAllVarianceGoesAway.size,
      element.tagName,
    ].join('-');
    window.__lighthouseNodesDontTouchOrAllVarianceGoesAway.set(element, lhId);
  }

  const details = {
    lhId,
    devtoolsNodePath: getNodePath(element),
    selector: selector,
    boundingRect: getBoundingClientRect(element),
    snippet: getOuterHTMLSnippet(element),
    nodeLabel: getNodeLabel(element) || selector,
  };

  return details;
}

/** @type {string} */
const getNodeDetailsRawString = getNodeDetails.toString();
getNodeDetails.toString = () => `function getNodeDetails(element) {
  ${getNodePath};
  ${getNodeSelector};
  ${getBoundingClientRect};
  ${getOuterHTMLSnippet};
  ${getNodeLabel};
  return (${getNodeDetailsRawString})(element);
}`;

const pageFunctions = {
  wrapRuntimeEvalErrorInBrowser,
  getElementsInDocument,
  getOuterHTMLSnippet,
  computeBenchmarkIndex,
  getNodeDetails,
  getNodePath,
  getNodeSelector,
  getNodeLabel,
  isPositionFixed,
  wrapRequestIdleCallback,
  getBoundingClientRect,
};

;// CONCATENATED MODULE: ./node_modules/lighthouse/core/gather/driver/execution-context.js
/**
 * @license Copyright 2020 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

/* global window */




class ExecutionContext {
  /** @param {LH.Gatherer.FRProtocolSession} session */
  constructor(session) {
    this._session = session;

    /** @type {number|undefined} */
    this._executionContextId = undefined;
    /**
     * Marks how many execution context ids have been created, for purposes of having a unique
     * value (that doesn't expose the actual execution context id) to
     * use for __lighthouseExecutionContextUniqueIdentifier.
     * @type {number}
     */
    this._executionContextIdentifiersCreated = 0;

    // We use isolated execution contexts for `evaluateAsync` that can be destroyed through navigation
    // and other page actions. Cleanup our relevant bookkeeping as we see those events.
    // Domains are enabled when a dedicated execution context is requested.
    session.on('Page.frameNavigated', () => this.clearContextId());
    session.on('Runtime.executionContextDestroyed', event => {
      if (event.executionContextId === this._executionContextId) {
        this.clearContextId();
      }
    });
  }

  /**
   * Returns the isolated context ID currently in use.
   */
  getContextId() {
    return this._executionContextId;
  }

  /**
   * Clears the remembered context ID. Use this method when we have knowledge that the runtime context
   * we were using has been destroyed by the browser and is no longer available.
   */
  clearContextId() {
    this._executionContextId = undefined;
  }

  /**
   * Returns the cached isolated execution context ID or creates a new execution context for the main
   * frame. The cached execution context is cleared on every gotoURL invocation, so a new one will
   * always be created on the first call on a new page.
   * @return {Promise<number>}
   */
  async _getOrCreateIsolatedContextId() {
    if (typeof this._executionContextId === 'number') return this._executionContextId;

    await this._session.sendCommand('Page.enable');
    await this._session.sendCommand('Runtime.enable');

    const frameTreeResponse = await this._session.sendCommand('Page.getFrameTree');
    const mainFrameId = frameTreeResponse.frameTree.frame.id;

    const isolatedWorldResponse = await this._session.sendCommand('Page.createIsolatedWorld', {
      frameId: mainFrameId,
      worldName: 'lighthouse_isolated_context',
    });

    this._executionContextId = isolatedWorldResponse.executionContextId;
    this._executionContextIdentifiersCreated++;
    return isolatedWorldResponse.executionContextId;
  }

  /**
   * Evaluate an expression in the given execution context; an undefined contextId implies the main
   * page without isolation.
   * @param {string} expression
   * @param {number|undefined} contextId
   * @return {Promise<*>}
   */
  async _evaluateInContext(expression, contextId) {
    // Use a higher than default timeout if the user hasn't specified a specific timeout.
    // Otherwise, use whatever was requested.
    const timeout = this._session.hasNextProtocolTimeout() ?
      this._session.getNextProtocolTimeout() :
      60000;

    // `__lighthouseExecutionContextUniqueIdentifier` is only used by the FullPageScreenshot gatherer.
    // See `getNodeDetails` in page-functions.
    const uniqueExecutionContextIdentifier = contextId === undefined ?
      undefined :
      this._executionContextIdentifiersCreated;

    const evaluationParams = {
      // We need to explicitly wrap the raw expression for several purposes:
      // 1. Ensure that the expression will be a native Promise and not a polyfill/non-Promise.
      // 2. Ensure that errors in the expression are captured by the Promise.
      // 3. Ensure that errors captured in the Promise are converted into plain-old JS Objects
      //    so that they can be serialized properly b/c JSON.stringify(new Error('foo')) === '{}'
      //
      // `__lighthouseExecutionContextUniqueIdentifier` is only used by the FullPageScreenshot gatherer.
      // See `getNodeDetails` in page-functions.
      expression: `(function wrapInNativePromise() {
        ${ExecutionContext._cachedNativesPreamble};
        globalThis.__lighthouseExecutionContextUniqueIdentifier =
          ${uniqueExecutionContextIdentifier};
        return new Promise(function (resolve) {
          return Promise.resolve()
            .then(_ => ${expression})
            .catch(${pageFunctions.wrapRuntimeEvalErrorInBrowser})
            .then(resolve);
        });
      }())
      //# sourceURL=_lighthouse-eval.js`,
      includeCommandLineAPI: true,
      awaitPromise: true,
      returnByValue: true,
      timeout,
      contextId,
    };

    this._session.setNextProtocolTimeout(timeout);
    const response = await this._session.sendCommand('Runtime.evaluate', evaluationParams);
    if (response.exceptionDetails) {
      // An error occurred before we could even create a Promise, should be *very* rare.
      // Also occurs when the expression is not valid JavaScript.
      const errorMessage = response.exceptionDetails.exception ?
        response.exceptionDetails.exception.description :
        response.exceptionDetails.text;
      return Promise.reject(new Error(`Evaluation exception: ${errorMessage}`));
    }
    // Protocol should always return a 'result' object, but it is sometimes undefined.  See #6026.
    if (response.result === undefined) {
      return Promise.reject(
        new Error('Runtime.evaluate response did not contain a "result" object'));
    }
    const value = response.result.value;
    if (value?.__failedInBrowser) {
      return Promise.reject(Object.assign(new Error(), value));
    } else {
      return value;
    }
  }

  /**
   * Note: Prefer `evaluate` instead.
   * Evaluate an expression in the context of the current page. If useIsolation is true, the expression
   * will be evaluated in a content script that has access to the page's DOM but whose JavaScript state
   * is completely separate.
   * Returns a promise that resolves on the expression's value.
   * @param {string} expression
   * @param {{useIsolation?: boolean}=} options
   * @return {Promise<*>}
   */
  async evaluateAsync(expression, options = {}) {
    const contextId = options.useIsolation ? await this._getOrCreateIsolatedContextId() : undefined;

    try {
      // `await` is not redundant here because we want to `catch` the async errors
      return await this._evaluateInContext(expression, contextId);
    } catch (err) {
      // If we were using isolation and the context disappeared on us, retry one more time.
      if (contextId && err.message.includes('Cannot find context')) {
        this.clearContextId();
        const freshContextId = await this._getOrCreateIsolatedContextId();
        return this._evaluateInContext(expression, freshContextId);
      }

      throw err;
    }
  }

  /**
   * Evaluate a function in the context of the current page.
   * If `useIsolation` is true, the function will be evaluated in a content script that has
   * access to the page's DOM but whose JavaScript state is completely separate.
   * Returns a promise that resolves on a value of `mainFn`'s return type.
   * @template {unknown[]} T, R
   * @param {((...args: T) => R)} mainFn The main function to call.
   * @param {{args: T, useIsolation?: boolean, deps?: Array<Function|string>}} options `args` should
   *   match the args of `mainFn`, and can be any serializable value. `deps` are functions that must be
   *   defined for `mainFn` to work.
   * @return {Promise<Awaited<R>>}
   */
  evaluate(mainFn, options) {
    const argsSerialized = ExecutionContext.serializeArguments(options.args);
    const depsSerialized = options.deps ? options.deps.join('\n') : '';
    const expression = `(() => {
      ${depsSerialized}
      return (${mainFn})(${argsSerialized});
    })()`;
    return this.evaluateAsync(expression, options);
  }

  /**
   * Evaluate a function on every new frame from now on.
   * @template {unknown[]} T
   * @param {((...args: T) => void)} mainFn The main function to call.
   * @param {{args: T, deps?: Array<Function|string>}} options `args` should
   *   match the args of `mainFn`, and can be any serializable value. `deps` are functions that must be
   *   defined for `mainFn` to work.
   * @return {Promise<void>}
   */
  async evaluateOnNewDocument(mainFn, options) {
    const argsSerialized = ExecutionContext.serializeArguments(options.args);
    const depsSerialized = options.deps ? options.deps.join('\n') : '';

    const expression = `(() => {
      ${ExecutionContext._cachedNativesPreamble};
      ${depsSerialized};
      (${mainFn})(${argsSerialized});
    })()
    //# sourceURL=_lighthouse-eval.js`;

    await this._session.sendCommand('Page.addScriptToEvaluateOnNewDocument', {source: expression});
  }

  /**
   * Cache native functions/objects inside window so we are sure polyfills do not overwrite the
   * native implementations when the page loads.
   * @return {Promise<void>}
   */
  async cacheNativesOnNewDocument() {
    await this.evaluateOnNewDocument(() => {
      /* c8 ignore start */
      window.__nativePromise = window.Promise;
      window.__nativeURL = window.URL;
      window.__nativePerformance = window.performance;
      window.__nativeFetch = window.fetch;
      window.__ElementMatches = window.Element.prototype.matches;
      window.__HTMLElementBoundingClientRect = window.HTMLElement.prototype.getBoundingClientRect;
      /* c8 ignore stop */
    }, {args: []});
  }

  /**
   * Prefix every script evaluation with a shadowing of common globals that tend to be ponyfilled
   * incorrectly by many sites. This allows functions to still refer to `Promise` instead of
   * Lighthouse-specific backups like `__nativePromise` (injected by `cacheNativesOnNewDocument` above).
   */
  static _cachedNativesPreamble = [
    'const Promise = globalThis.__nativePromise || globalThis.Promise',
    'const URL = globalThis.__nativeURL || globalThis.URL',
    'const performance = globalThis.__nativePerformance || globalThis.performance',
    'const fetch = globalThis.__nativeFetch || globalThis.fetch',
  ].join(';\n');

  /**
   * Serializes an array of arguments for use in an `eval` string across the protocol.
   * @param {unknown[]} args
   * @return {string}
   */
  static serializeArguments(args) {
    return args.map(arg => arg === undefined ? 'undefined' : JSON.stringify(arg)).join(',');
  }
}



// EXTERNAL MODULE: external "url"
var external_url_ = __nccwpck_require__(7310);
// EXTERNAL MODULE: ./node_modules/lookup-closest-locale/index.js
var lookup_closest_locale = __nccwpck_require__(7489);
// EXTERNAL MODULE: ./node_modules/intl-messageformat/index.js
var intl_messageformat = __nccwpck_require__(9195);
;// CONCATENATED MODULE: external "module"
const external_module_namespaceObject = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("module");
;// CONCATENATED MODULE: ./node_modules/lighthouse/esm-utils.js
/**
 * @license Copyright 2021 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */





/**
 * Commonjs equivalent of `require.resolve`.
 * @param {string} packageName
 */
function resolveModulePath(packageName) {
  const require = createRequire(import.meta.url);
  return require.resolve(packageName);
}

/**
 * @param {ImportMeta} importMeta
 */
function getModulePath(importMeta) {
  return external_url_.fileURLToPath(importMeta.url);
}

/**
 * @param {ImportMeta} importMeta
 */
function esm_utils_getModuleDirectory(importMeta) {
  return external_path_.dirname(getModulePath(importMeta));
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/shared/type-verifiers.js
/**
 * @license Copyright 2020 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

/**
 * @fileoverview A collection of general type verification functions for dealing
 * with external data. If these grow in scope they could be auto-generated with
 * something like `io-ts`, but it's not worth the complexity yet.
 */

/**
 * Type predicate verifying `val` is an object (excluding `Array` and `null`).
 * @param {unknown} val
 * @return {val is Record<string, unknown>}
 */
function isObjectOfUnknownValues(val) {
  return typeof val === 'object' && val !== null && !Array.isArray(val);
}

/**
 * Type predicate verifying `val` is an object or an array.
 * @param {unknown} val
 * @return {val is Record<string, unknown>|Array<unknown>}
 */
function isObjectOrArrayOfUnknownValues(val) {
  return typeof val === 'object' && val !== null;
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/shared/localization/locales.js
/**
 * @license Copyright 2018 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

/**
 * @fileoverview
 * Define message file to be used for a given locale. A few aliases are defined below.
 *
 * Google locale inheritance rules: https://goto.google.com/ccssm
 * CLDR language aliases: https://www.unicode.org/cldr/charts/latest/supplemental/aliases.html
 * CLDR locale inheritance: https://github.com/unicode-cldr/cldr-core/blob/master/supplemental/parentLocales.json
 *
 * For Lighthouse bundles that shouldn't include locale data, the recommended pattern
 * is to replace the default export of this file with `{}` so that no locale messages
 * are included. Strings will work normally through the IcuMessage.formattedDefault
 * fallback, and locale messages can be added on demand (e.g. dynamically fetched)
 * through `format.registerLocaleData()`.
 */

// TODO(paulirish): Centralize locale inheritance (combining this & i18n.lookupLocale()), adopt cldr parentLocale rules.





/** @typedef {import('../../types/lhr/settings').Locale} Locale */
/** @typedef {Record<string, {message: string}>} LhlMessages */

const moduleDir = esm_utils_getModuleDirectory(import.meta);

/** @type {Record<string, LhlMessages>} */
const files = {
  'ar': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/ar.json`, 'utf8')),
  'ar-XB': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/ar-XB.json`, 'utf8')),
  'bg': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/bg.json`, 'utf8')),
  'ca': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/ca.json`, 'utf8')),
  'cs': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/cs.json`, 'utf8')),
  'da': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/da.json`, 'utf8')),
  'de': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/de.json`, 'utf8')),
  'el': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/el.json`, 'utf8')),
  'en-GB': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/en-GB.json`, 'utf8')),
  'en-US': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/en-US.json`, 'utf8')),
  'en-XA': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/en-XA.json`, 'utf8')),
  'en-XL': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/en-XL.json`, 'utf8')),
  'es': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/es.json`, 'utf8')),
  'es-419': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/es-419.json`, 'utf8')),
  'fi': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/fi.json`, 'utf8')),
  'fil': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/fil.json`, 'utf8')),
  'fr': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/fr.json`, 'utf8')),
  'he': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/he.json`, 'utf8')),
  'hi': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/hi.json`, 'utf8')),
  'hr': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/hr.json`, 'utf8')),
  'hu': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/hu.json`, 'utf8')),
  'id': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/id.json`, 'utf8')),
  'it': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/it.json`, 'utf8')),
  'ja': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/ja.json`, 'utf8')),
  'ko': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/ko.json`, 'utf8')),
  'lt': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/lt.json`, 'utf8')),
  'lv': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/lv.json`, 'utf8')),
  'nl': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/nl.json`, 'utf8')),
  'no': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/no.json`, 'utf8')),
  'pl': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/pl.json`, 'utf8')),
  'pt': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/pt.json`, 'utf8')),
  'pt-PT': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/pt-PT.json`, 'utf8')),
  'ro': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/ro.json`, 'utf8')),
  'ru': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/ru.json`, 'utf8')),
  'sk': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/sk.json`, 'utf8')),
  'sl': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/sl.json`, 'utf8')),
  'sr': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/sr.json`, 'utf8')),
  'sr-Latn': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/sr-Latn.json`, 'utf8')),
  'sv': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/sv.json`, 'utf8')),
  'ta': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/ta.json`, 'utf8')),
  'te': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/te.json`, 'utf8')),
  'th': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/th.json`, 'utf8')),
  'tr': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/tr.json`, 'utf8')),
  'uk': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/uk.json`, 'utf8')),
  'vi': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/vi.json`, 'utf8')),
  'zh': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/zh.json`, 'utf8')),
  'zh-HK': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/zh-HK.json`, 'utf8')),
  'zh-TW': JSON.parse(external_fs_.readFileSync(`${moduleDir}/locales/zh-TW.json`, 'utf8')),
};

// The keys within this const must exactly match the LH.Locale type in externs.d.ts
/** @type {Record<Locale, LhlMessages>} */
const locales = {
  'en-US': files['en-US'], // The 'source' strings, with descriptions
  'en': files['en-US'], // According to CLDR/ICU, 'en' == 'en-US' dates/numbers (Why?!)

  // TODO: en-GB has just ~10 messages that are different from en-US. We should only ship those.
  'en-AU': files['en-GB'], // Alias of 'en-GB'
  'en-GB': files['en-GB'], // Alias of 'en-GB'
  'en-IE': files['en-GB'], // Alias of 'en-GB'
  'en-SG': files['en-GB'], // Alias of 'en-GB'
  'en-ZA': files['en-GB'], // Alias of 'en-GB'
  'en-IN': files['en-GB'], // Alias of 'en-GB'

  // All locales from here have a messages file, though we allow fallback to the base locale when the files are identical
  'ar-XB': files['ar-XB'], // psuedolocalization
  'ar': files['ar'],
  'bg': files['bg'],
  'ca': files['ca'],
  'cs': files['cs'],
  'da': files['da'],
  'de': files['de'], // de-AT, de-CH identical, so they fall back into de
  'el': files['el'],
  'en-XA': files['en-XA'], // psuedolocalization
  'en-XL': files['en-XL'], // local psuedolocalization
  'es': files['es'],
  'es-419': files['es-419'],
  // Aliases of es-419: https://raw.githubusercontent.com/unicode-cldr/cldr-core/master/supplemental/parentLocales.json
  'es-AR': files['es-419'],
  'es-BO': files['es-419'],
  'es-BR': files['es-419'],
  'es-BZ': files['es-419'],
  'es-CL': files['es-419'],
  'es-CO': files['es-419'],
  'es-CR': files['es-419'],
  'es-CU': files['es-419'],
  'es-DO': files['es-419'],
  'es-EC': files['es-419'],
  'es-GT': files['es-419'],
  'es-HN': files['es-419'],
  'es-MX': files['es-419'],
  'es-NI': files['es-419'],
  'es-PA': files['es-419'],
  'es-PE': files['es-419'],
  'es-PR': files['es-419'],
  'es-PY': files['es-419'],
  'es-SV': files['es-419'],
  'es-US': files['es-419'],
  'es-UY': files['es-419'],
  'es-VE': files['es-419'],

  'fi': files['fi'],
  'fil': files['fil'],
  'fr': files['fr'], // fr-CH identical, so it falls back into fr
  'he': files['he'],
  'hi': files['hi'],
  'hr': files['hr'],
  'hu': files['hu'],
  'gsw': files['de'], // swiss german. identical (for our purposes) to 'de'
  'id': files['id'],
  'in': files['id'], // Alias of 'id'
  'it': files['it'],
  'iw': files['he'], // Alias of 'he'
  'ja': files['ja'],
  'ko': files['ko'],
  'lt': files['lt'],
  'lv': files['lv'],
  'mo': files['ro'], // Alias of 'ro'
  'nl': files['nl'],
  'nb': files['no'], // Alias of 'no'
  'no': files['no'],
  'pl': files['pl'],
  'pt': files['pt'], // pt-BR identical, so it falls back into pt
  'pt-PT': files['pt-PT'],
  'ro': files['ro'],
  'ru': files['ru'],
  'sk': files['sk'],
  'sl': files['sl'],
  'sr': files['sr'],
  'sr-Latn': files['sr-Latn'],
  'sv': files['sv'],
  'ta': files['ta'],
  'te': files['te'],
  'th': files['th'],
  'tl': files['fil'], // Alias of 'fil'
  'tr': files['tr'],
  'uk': files['uk'],
  'vi': files['vi'],
  'zh': files['zh'], // aka ZH-Hans, sometimes seen as zh-CN, zh-Hans-CN, Simplified Chinese
  'zh-HK': files['zh-HK'], // aka zh-Hant-HK. Note: yue-Hant-HK is not supported.
  'zh-TW': files['zh-TW'], // aka zh-Hant, zh-Hant-TW, Traditional Chinese
};



;// CONCATENATED MODULE: ./node_modules/lighthouse/shared/localization/format.js
/**
 * @license Copyright 2021 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */









const format_moduleDir = esm_utils_getModuleDirectory(import.meta);

/** Contains available locales with messages. May be an empty object if bundled. */
const LOCALE_MESSAGES = locales;

const DEFAULT_LOCALE = 'en-US';

/**
 * The locale tags for the localized messages available to Lighthouse on disk.
 * When bundled, these will be inlined by `inline-fs`.
 * These locales are considered the "canonical" locales. We support other locales which
 * are simply aliases to one of these. ex: es-AR (alias) -> es-419 (canonical)
 */
const CANONICAL_LOCALES = external_fs_.readdirSync(format_moduleDir + '/locales/')
  .filter(basename => basename.endsWith('.json') && !basename.endsWith('.ctc.json'))
  .map(locale => locale.replace('.json', ''))
  .sort();

/** @typedef {import('intl-messageformat-parser').Element} MessageElement */
/** @typedef {import('intl-messageformat-parser').ArgumentElement} ArgumentElement */

const MESSAGE_I18N_ID_REGEX = / | [^\s]+$/;

const formats = {
  number: {
    bytes: {
      maximumFractionDigits: 0,
    },
    milliseconds: {
      maximumFractionDigits: 0,
    },
    seconds: {
      // Force the seconds to the tenths place for limited output and ease of scanning
      minimumFractionDigits: 1,
      maximumFractionDigits: 1,
    },
    extendedPercent: {
      // Force allow up to two digits after decimal place in percentages. (Intl.NumberFormat options)
      maximumFractionDigits: 2,
      style: 'percent',
    },
  },
};

/**
 * Function to retrieve all 'argumentElement's from an ICU message. An argumentElement
 * is an ICU element with an argument in it, like '{varName}' or '{varName, number, bytes}'. This
 * differs from 'messageElement's which are just arbitrary text in a message.
 *
 * Notes:
 *  This function will recursively inspect plural elements for nested argumentElements.
 *
 *  We need to find all the elements from the plural format sections, but
 *  they need to be deduplicated. I.e. "=1{hello {icu}} =other{hello {icu}}"
 *  the variable "icu" would appear twice if it wasn't de duplicated. And they cannot
 *  be stored in a set because they are not equal since their locations are different,
 *  thus they are stored via a Map keyed on the "id" which is the ICU varName.
 *
 * @param {Array<MessageElement>} icuElements
 * @param {Map<string, ArgumentElement>} [seenElementsById]
 * @return {Map<string, ArgumentElement>}
 */
function collectAllCustomElementsFromICU(icuElements, seenElementsById = new Map()) {
  for (const el of icuElements) {
    // We are only interested in elements that need ICU formatting (argumentElements)
    if (el.type !== 'argumentElement') continue;

    seenElementsById.set(el.id, el);

    // Plurals need to be inspected recursively
    if (!el.format || el.format.type !== 'pluralFormat') continue;
    // Look at all options of the plural (=1{} =other{}...)
    for (const option of el.format.options) {
      // Run collections on each option's elements
      collectAllCustomElementsFromICU(option.value.elements, seenElementsById);
    }
  }

  return seenElementsById;
}

/**
 * Returns a copy of the `values` object, with the values formatted based on how
 * they will be used in their icuMessage, e.g. KB or milliseconds. The original
 * object is unchanged.
 * @param {IntlMessageFormat} messageFormatter
 * @param {Readonly<Record<string, string | number>>} values
 * @param {string} lhlMessage Used for clear error logging.
 * @return {Record<string, string | number>}
 */
function _preformatValues(messageFormatter, values = {}, lhlMessage) {
  const elementMap = collectAllCustomElementsFromICU(messageFormatter.getAst().elements);
  const argumentElements = [...elementMap.values()];

  /** @type {Record<string, string | number>} */
  const formattedValues = {};

  for (const {id, format} of argumentElements) {
    // Throw an error if a message's value isn't provided
    if (id && (id in values) === false) {
      throw new Error(`ICU Message "${lhlMessage}" contains a value reference ("${id}") ` +
        `that wasn't provided`);
    }

    const value = values[id];

    // Direct `{id}` replacement and non-numeric values need no formatting.
    if (!format || format.type !== 'numberFormat') {
      formattedValues[id] = value;
      continue;
    }

    if (typeof value !== 'number') {
      throw new Error(`ICU Message "${lhlMessage}" contains a numeric reference ("${id}") ` +
        'but provided value was not a number');
    }

    // Format values for known styles.
    if (format.style === 'milliseconds') {
      // Round all milliseconds to the nearest 10.
      formattedValues[id] = Math.round(value / 10) * 10;
    } else if (format.style === 'seconds' && id === 'timeInMs') {
      // Convert all seconds to the correct unit (currently only for `timeInMs`).
      formattedValues[id] = Math.round(value / 100) / 10;
    } else if (format.style === 'bytes') {
      // Replace all the bytes with KB.
      formattedValues[id] = value / 1024;
    } else {
      // For all other number styles, the value isn't changed.
      formattedValues[id] = value;
    }
  }

  // Throw an error if a value is provided but has no placeholder in the message.
  for (const valueId of Object.keys(values)) {
    if (valueId in formattedValues) continue;

    // errorCode is a special case always allowed to help LighthouseError ease-of-use.
    if (valueId === 'errorCode') {
      formattedValues.errorCode = values.errorCode;
      continue;
    }

    throw new Error(`Provided value "${valueId}" does not match any placeholder in ` +
      `ICU message "${lhlMessage}"`);
  }

  return formattedValues;
}

/**
 * Format string `message` by localizing `values` and inserting them. `message`
 * is assumed to already be in the given locale.
 * If you need to localize a messagem `getFormatted` is probably what you want.
 * @param {string} message
 * @param {Record<string, string | number>|undefined} values
 * @param {LH.Locale} locale
 * @return {string}
 */
function formatMessage(message, values, locale) {
  // Parsing and formatting can be slow. Don't attempt if the string can't
  // contain ICU placeholders, in which case formatting is already complete.
  if (!message.includes('{') && values === undefined) return message;

  // When using accented english, force the use of a different locale for number formatting.
  const localeForMessageFormat = (locale === 'en-XA' || locale === 'en-XL') ? 'de-DE' : locale;

  const formatter = new intl_messageformat(message, localeForMessageFormat, formats);

  // Preformat values for the message format like KB and milliseconds.
  const valuesForMessageFormat = _preformatValues(formatter, values, message);

  return formatter.format(valuesForMessageFormat);
}

/**
 * Retrieves the localized version of `icuMessage` and formats with any given
 * value replacements.
 * @param {LH.IcuMessage} icuMessage
 * @param {LH.Locale} locale
 * @return {string}
 */
function _localizeIcuMessage(icuMessage, locale) {
  const localeMessages = _getLocaleMessages(locale);
  const localeMessage = localeMessages[icuMessage.i18nId];

  // Use the DEFAULT_LOCALE fallback (usually the original english message) if we couldn't
  // find a message in the specified locale. Possible reasons:
  //  - string drift between Lighthouse versions
  //  - in a bundle stripped of locale files but running in the DEFAULT_LOCALE
  //  - new strings haven't been updated yet in a local dev run
  // Better to have an english message than no message at all; in some cases it
  // won't even matter.
  if (!localeMessage) {
    return icuMessage.formattedDefault;
  }

  return formatMessage(localeMessage.message, icuMessage.values, locale);
}

/**
 * @param {LH.Locale} locale
 * @return {Record<string, string>}
 */
function getRendererFormattedStrings(locale) {
  const localeMessages = _getLocaleMessages(locale);

  // If `localeMessages` is empty in the bundled and DEFAULT_LOCALE case, this
  // will be empty and the report will fall back to the util UIStrings for these.
  const icuMessageIds = Object.keys(localeMessages)
    .filter(f => f.startsWith('report/renderer/report-utils.js'));
  /** @type {Record<string, string>} */
  const strings = {};
  for (const icuMessageId of icuMessageIds) {
    const {filename, key} = getIcuMessageIdParts(icuMessageId);
    if (!filename.endsWith('report-utils.js')) {
      throw new Error(`Unexpected message: ${icuMessageId}`);
    }

    strings[key] = localeMessages[icuMessageId].message;
  }

  return strings;
}

/**
 * Returns whether `icuMessageOrNot`` is an `LH.IcuMessage` instance.
 * @param {unknown} icuMessageOrNot
 * @return {icuMessageOrNot is LH.IcuMessage}
 */
function isIcuMessage(icuMessageOrNot) {
  if (!isObjectOfUnknownValues(icuMessageOrNot)) {
    return false;
  }

  const {i18nId, values, formattedDefault} = icuMessageOrNot;
  if (typeof i18nId !== 'string') {
    return false;
  }

  // formattedDefault is required.
  if (typeof formattedDefault !== 'string') {
    return false;
  }

  // Values is optional.
  if (values !== undefined) {
    if (!isObjectOfUnknownValues(values)) {
      return false;
    }
    for (const value of Object.values(values)) {
      if (typeof value !== 'string' && typeof value !== 'number') {
        return false;
      }
    }
  }

  // Finally return true if i18nId seems correct.
  return MESSAGE_I18N_ID_REGEX.test(i18nId);
}

/**
 * Get the localized and formatted form of `icuMessageOrRawString` if it's an
 * LH.IcuMessage, or get it back directly if it's already a string.
 * Warning: this function throws if `icuMessageOrRawString` is not the expected
 * type (use function from `createIcuMessageFn` to create a valid LH.IcuMessage)
 * or `locale` isn't supported (use `lookupLocale` to find a valid locale).
 * @param {LH.IcuMessage | string} icuMessageOrRawString
 * @param {LH.Locale} locale
 * @return {string}
 */
function format_getFormatted(icuMessageOrRawString, locale) {
  if (isIcuMessage(icuMessageOrRawString)) {
    return _localizeIcuMessage(icuMessageOrRawString, locale);
  }

  if (typeof icuMessageOrRawString === 'string') {
    return icuMessageOrRawString;
  }

  // Should be impossible from types, but do a strict check in case malformed JSON makes it this far.
  throw new Error('Attempted to format invalid icuMessage type');
}

/** @param {string[]} pathInLHR */
function _formatPathAsString(pathInLHR) {
  let pathAsString = '';
  for (const property of pathInLHR) {
    if (/^[a-z]+$/i.test(property)) {
      if (pathAsString.length) pathAsString += '.';
      pathAsString += property;
    } else {
      if (/]|"|'|\s/.test(property)) throw new Error(`Cannot handle "${property}" in i18n`);
      pathAsString += `[${property}]`;
    }
  }

  return pathAsString;
}

/**
 * Recursively walk the input object, looking for property values that are
 * `LH.IcuMessage`s and replace them with their localized values. Primarily
 * used with the full LHR or a Config as input.
 * Returns a map of locations that were replaced to the `IcuMessage` that was at
 * that location.
 * @param {unknown} inputObject
 * @param {LH.Locale} locale
 * @return {LH.Result.IcuMessagePaths}
 */
function replaceIcuMessages(inputObject, locale) {
  /**
   * @param {unknown} subObject
   * @param {LH.Result.IcuMessagePaths} icuMessagePaths
   * @param {string[]} pathInLHR
   */
  function replaceInObject(subObject, icuMessagePaths, pathInLHR = []) {
    if (!isObjectOrArrayOfUnknownValues(subObject)) return;

    for (const [property, possibleIcuMessage] of Object.entries(subObject)) {
      const currentPathInLHR = pathInLHR.concat([property]);

      // Replace any IcuMessages with a localized string.
      if (isIcuMessage(possibleIcuMessage)) {
        const formattedString = format_getFormatted(possibleIcuMessage, locale);
        const messageInstancesInLHR = icuMessagePaths[possibleIcuMessage.i18nId] || [];
        const currentPathAsString = _formatPathAsString(currentPathInLHR);

        messageInstancesInLHR.push(
          possibleIcuMessage.values ?
            {values: possibleIcuMessage.values, path: currentPathAsString} :
            currentPathAsString
        );

        // @ts-ignore - tsc doesn't like that `property` can be either string key or array index.
        subObject[property] = formattedString;
        icuMessagePaths[possibleIcuMessage.i18nId] = messageInstancesInLHR;
      } else {
        replaceInObject(possibleIcuMessage, icuMessagePaths, currentPathInLHR);
      }
    }
  }

  /** @type {LH.Result.IcuMessagePaths} */
  const icuMessagePaths = {};
  replaceInObject(inputObject, icuMessagePaths);
  return icuMessagePaths;
}

/**
 * Returns the locale messages for the given `locale`, if they exist.
 * Throws if an unsupported locale.
 *
 * NOTE: If DEFAULT_LOCALE is requested and this is inside a bundle with locale
 * messages stripped, an empty object will be returned. Default fallbacks will need to handle that case.
 * @param {LH.Locale} locale
 * @return {import('./locales').LhlMessages}
 */
function _getLocaleMessages(locale) {
  const localeMessages = LOCALE_MESSAGES[locale];
  if (!localeMessages) {
    if (locale === DEFAULT_LOCALE) {
      // If the default locale isn't in LOCALE_MESSAGES, this is likely executing
      // in a bundle. Let the caller use the fallbacks available.
      return {};
    }
    throw new Error(`Unsupported locale '${locale}'`);
  }

  return localeMessages;
}

/**
 * Returns whether the `requestedLocale` is registered and available for use
 * @param {LH.Locale} requestedLocale
 * @return {boolean}
 */
function hasLocale(requestedLocale) {
  // The default locale is always supported through `IcuMessage.formattedDefault`.
  if (requestedLocale === DEFAULT_LOCALE) return true;

  const hasIntlSupport = Intl.NumberFormat.supportedLocalesOf([requestedLocale]).length > 0;
  const hasMessages = Boolean(LOCALE_MESSAGES[requestedLocale]);

  return hasIntlSupport && hasMessages;
}

/**
 * Returns a list of canonical locales, as defined by the existent message files.
 * In practice, each of these may have aliases in the full list returned by
 * `getAvailableLocales()`.
 * TODO: create a CanonicalLocale type
 * @return {Array<string>}
 */
function getCanonicalLocales() {
  return CANONICAL_LOCALES;
}

/**
 * Returns a list of available locales.
 *  - if full build, this includes all canonical locales, aliases, and any locale added
 *      via `registerLocaleData`.
 *  - if bundled and locale messages have been stripped (locales.js shimmed), this includes
 *      only DEFAULT_LOCALE and any locales from `registerLocaleData`.
 * @return {Array<LH.Locale>}
 */
function getAvailableLocales() {
  const localesWithMessages = new Set([...Object.keys(LOCALE_MESSAGES), DEFAULT_LOCALE]);
  return /** @type {Array<LH.Locale>} */ ([...localesWithMessages].sort());
}

/**
 * Populate the i18n string lookup dict with locale data
 * Used when the host environment selects the locale and serves lighthouse the intended locale file
 * @see https://docs.google.com/document/d/1jnt3BqKB-4q3AE94UWFA0Gqspx8Sd_jivlB7gQMlmfk/edit
 * @param {LH.Locale} locale
 * @param {import('./locales').LhlMessages} lhlMessages
 */
function registerLocaleData(locale, lhlMessages) {
  LOCALE_MESSAGES[locale] = lhlMessages;
}

/**
 * @param {string} i18nMessageId
 */
function getIcuMessageIdParts(i18nMessageId) {
  if (!MESSAGE_I18N_ID_REGEX.test(i18nMessageId)) {
    throw Error(`"${i18nMessageId}" does not appear to be a valid ICU message id`);
  }
  const [filename, key] = i18nMessageId.split(' | ');
  return {filename, key};
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/root.js
/**
 * @license Copyright 2021 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */





const LH_ROOT = esm_utils_getModuleDirectory(import.meta);
const pkg = JSON.parse(external_fs_.readFileSync(`${LH_ROOT}/package.json`, 'utf-8'));
const lighthouseVersion = pkg.version;



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/lib/i18n/i18n.js
/**
 * @license Copyright 2018 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

/** @typedef {import('../../../shared/localization/locales').LhlMessages} LhlMessages */












const UIStrings = {
  /** Used to show the duration in milliseconds that something lasted. The `{timeInMs}` placeholder will be replaced with the time duration, shown in milliseconds (e.g. 63 ms) */
  ms: '{timeInMs, number, milliseconds}\xa0ms',
  /** Used to show the duration in seconds that something lasted. The {timeInMs} placeholder will be replaced with the time duration, shown in seconds (e.g. 5.2 s) */
  seconds: '{timeInMs, number, seconds}\xa0s',
  /** Label shown per-audit to show how many bytes smaller the page could be if the user implemented the suggestions. The `{wastedBytes}` placeholder will be replaced with the number of bytes, shown in kibibytes (e.g. 148 KiB) */
  displayValueByteSavings: 'Potential savings of {wastedBytes, number, bytes}\xa0KiB',
  /** Label shown per-audit to show how many milliseconds faster the page load could be if the user implemented the suggestions. The `{wastedMs}` placeholder will be replaced with the time duration, shown in milliseconds (e.g. 140 ms) */
  displayValueMsSavings: 'Potential savings of {wastedMs, number, milliseconds}\xa0ms',
  /** Label shown per-audit to show how many HTML elements did not pass the audit. The `{# elements found}` placeholder will be replaced with the number of failing HTML elements. */
  displayValueElementsFound: `{nodeCount, plural, =1 {1 element found} other {# elements found}}`,
  /** Label for a column in a data table; entries will be the URL of a web resource */
  columnURL: 'URL',
  /** Label for a column in a data table; entries will be the size or quantity of some resource, e.g. the width and height dimensions of an image or the number of images in a web page. */
  columnSize: 'Size',
  /** Label for a column in a data table; entries will be the file size of a web resource in kilobytes. */
  columnResourceSize: 'Resource Size',
  /** Label for a column in a data table; entries will be the download size of a web resource in kilobytes. */
  columnTransferSize: 'Transfer Size',
  /** Label for a column in a data table; entries will be the time to live value of the cache header on a web resource. */
  columnCacheTTL: 'Cache TTL',
  /** Label for a column in a data table; entries will be the number of kilobytes the user could reduce their page by if they implemented the suggestions. */
  columnWastedBytes: 'Potential Savings',
  /** Label for a column in a data table; entries will be the number of milliseconds the user could reduce page load by if they implemented the suggestions. */
  columnWastedMs: 'Potential Savings',
  /** Label for a table column that displays how much time each row spent blocking other work on the main thread, entries will be the number of milliseconds spent. */
  columnBlockingTime: 'Main-Thread Blocking Time',
  /** Label for a column in a data table; entries will be the number of milliseconds spent during a particular activity. */
  columnTimeSpent: 'Time Spent',
  /** Label for a column in a data table; entries will be the location of a specific line of code in a file, in the format "line: 102". */
  columnLocation: 'Location',
  /** Label for a column in a data table; entries will be types of resources loaded over the network, e.g. "Scripts", "Third-Party", "Stylesheet". */
  columnResourceType: 'Resource Type',
  /** Label for a column in a data table; entries will be the number of network requests done by a webpage. */
  columnRequests: 'Requests',
  /** Label for a column in a data table; entries will be the names of arbitrary objects, e.g. the name of a Javascript library, or the name of a user defined timing event. */
  columnName: 'Name',
  /** Label for a column in a data table; entries will be the locations of JavaScript or CSS code, e.g. the name of a Javascript package or module. */
  columnSource: 'Source',
  /** Label for a column in a data table; entries will be how much a predetermined budget has been exeeded by. Depending on the context, this number could represent an excess in quantity or size of network requests, or, an excess in the duration of time that it takes for the page to load.*/
  columnOverBudget: 'Over Budget',
  /** Label for a column in a data table; entries will be a representation of a DOM element. */
  columnElement: 'Element',
  /** Label for a column in a data table; entries will be the number of milliseconds since the page started loading. */
  columnStartTime: 'Start Time',
  /** Label for a column in a data table; entries will be the total number of milliseconds from the start time until the end time. */
  columnDuration: 'Duration',
  /** Label for a column in a data table; entries will be a representation of a DOM element that did not meet certain suggestions. */
  columnFailingElem: 'Failing Elements',
  /** Label for a column in a data table; entries will be a description of the table item. */
  columnDescription: 'Description',
  /** Label for a row in a data table; entries will be the total number and byte size of all resources loaded by a web page. */
  totalResourceType: 'Total',
  /** Label for a row in a data table; entries will be the total number and byte size of all 'Document' resources loaded by a web page. */
  documentResourceType: 'Document',
  /** Label for a row in a data table; entries will be the total number and byte size of all 'Script' resources loaded by a web page. 'Script' refers to JavaScript or other files that are executable by a browser. */
  scriptResourceType: 'Script',
  /** Label for a row in a data table; entries will be the total number and byte size of all 'Stylesheet' resources loaded by a web page. 'Stylesheet' refers to CSS stylesheets. */
  stylesheetResourceType: 'Stylesheet',
  /** Label for a row in a data table; entries will be the total number and byte size of all 'Image' resources loaded by a web page. */
  imageResourceType: 'Image',
  /** Label for a row in a data table; entries will be the total number and byte size of all 'Media' resources loaded by a web page. 'Media' refers to audio and video files. */
  mediaResourceType: 'Media',
  /** Label for a row in a data table; entries will be the total number and byte size of all 'Font' resources loaded by a web page. */
  fontResourceType: 'Font',
  /** Label for a row in a data table; entries will be the total number and byte size of all resources loaded by a web page that don't fit into the categories of Document, Script, Stylesheet, Image, Media, & Font.*/
  otherResourceType: 'Other',
  /** Label for a row in a data table; entries will be the total number and byte size of all third-party resources loaded by a web page. 'Third-party resources are items loaded from URLs that aren't controlled by the owner of the web page. */
  thirdPartyResourceType: 'Third-party',
  /** Label used to identify a value in a table where many individual values are aggregated to a single value, for brevity. "Other resources" could also be read as "the rest of the resources". Resource refers to network resources requested by the browser. */
  otherResourcesLabel: 'Other resources',
  /** The name of the metric that marks the time at which the first text or image is painted by the browser. Shown to users as the label for the numeric metric value. Ideally fits within a ~40 character limit. */
  firstContentfulPaintMetric: 'First Contentful Paint',
  /** The name of the metric that marks the time at which the page is fully loaded and is able to quickly respond to user input (clicks, taps, and keypresses feel responsive). Shown to users as the label for the numeric metric value. Ideally fits within a ~40 character limit. */
  interactiveMetric: 'Time to Interactive',
  /** The name of the metric that marks the time at which a majority of the content has been painted by the browser. Shown to users as the label for the numeric metric value. Ideally fits within a ~40 character limit. */
  firstMeaningfulPaintMetric: 'First Meaningful Paint',
  /** The name of a metric that calculates the total duration of blocking time for a web page. Blocking times are time periods when the page would be blocked (prevented) from responding to user input (clicks, taps, and keypresses will feel slow to respond). Shown to users as the label for the numeric metric value. Ideally fits within a ~40 character limit. */
  totalBlockingTimeMetric: 'Total Blocking Time',
  /** The name of the metric "Maximum Potential First Input Delay" that marks the maximum estimated time between the page receiving input (a user clicking, tapping, or typing) and the page responding. Shown to users as the label for the numeric metric value. Ideally fits within a ~40 character limit. */
  maxPotentialFIDMetric: 'Max Potential First Input Delay',
  /** The name of the metric that summarizes how quickly the page looked visually complete. The name of this metric is largely abstract and can be loosely translated. Shown to users as the label for the numeric metric value. Ideally fits within a ~40 character limit. */
  speedIndexMetric: 'Speed Index',
  /** The name of the metric that marks the time at which the largest text or image is painted by the browser. Shown to users as the label for the numeric metric value. Ideally fits within a ~40 character limit. */
  largestContentfulPaintMetric: 'Largest Contentful Paint',
  /** The name of the metric "Cumulative Layout Shift" that indicates how much the page changes its layout while it loads. If big segments of the page shift their location during load, the Cumulative Layout Shift will be higher. Shown to users as the label for the numeric metric value. Ideally fits within a ~40 character limit. */
  cumulativeLayoutShiftMetric: 'Cumulative Layout Shift',
  /** The name of the "Interaction to Next Paint" metric that measures the time between a user interaction and when the browser displays a response on screen. Shown to users as the label for the numeric metric value. Ideally fits within a ~40 character limit. */
  interactionToNextPaint: 'Interaction to Next Paint',
  /** Table item value for the severity of a small, or low impact vulnerability. Part of a ranking scale in the form: low, medium, high. */
  itemSeverityLow: 'Low',
  /** Table item value for the severity of a vulnerability. Part of a ranking scale in the form: low, medium, high. */
  itemSeverityMedium: 'Medium',
  /** Table item value for the severity of a high impact, or dangerous vulnerability. Part of a ranking scale in the form: low, medium, high. */
  itemSeverityHigh: 'High',
};

/**
 * Look up the best available locale for the requested language through these fall backs:
 * - exact match
 * - progressively shorter prefixes (`de-CH-1996` -> `de-CH` -> `de`)
 * - supported locales in Intl formatters
 *
 * If `locale` isn't provided or one could not be found, DEFAULT_LOCALE is returned.
 *
 * By default any of the locales Lighthouse has strings for can be returned, but this
 * can be overriden with `possibleLocales`, useful e.g. when Lighthouse is bundled and
 * only DEFAULT_LOCALE is available, but `possibleLocales` can be used to select a
 * locale available to be downloaded on demand.
 * @param {string|string[]=} locales
 * @param {Array<string>=} possibleLocales
 * @return {LH.Locale}
 */
function lookupLocale(locales, possibleLocales) {
  // TODO: lookupLocale may need to be split into two functions, one that canonicalizes
  // locales and one that looks up the best locale filename for a given locale.
  // e.g. `en-IE` is canonical, but uses `en-GB.json`. See TODO in locales.js

  if (typeof Intl !== 'object') {
    // If Node was built with `--with-intl=none`, `Intl` won't exist.
    throw new Error('Lighthouse must be run in Node with `Intl` support. See https://nodejs.org/api/intl.html for help');
  }

  const canonicalLocales = Intl.getCanonicalLocales(locales);

  // Filter by what's available in this runtime.
  const availableLocales = Intl.NumberFormat.supportedLocalesOf(canonicalLocales);

  // Get available locales and transform into object to match `lookupClosestLocale`'s API.
  const localesWithMessages = possibleLocales || getAvailableLocales();
  const localesWithmessagesObj = /** @type {Record<LH.Locale, LhlMessages>} */ (
    Object.fromEntries(localesWithMessages.map(l => [l, {}])));

  const closestLocale = lookup_closest_locale(availableLocales, localesWithmessagesObj);

  if (!closestLocale) {
    // Log extra info if we're pretty sure this version of Node was built with `--with-intl=small-icu`.
    if (Intl.NumberFormat.supportedLocalesOf('es').length === 0) {
      lighthouse_logger.warn('i18n', 'Requested locale not available in this version of node. The `full-icu` npm module can provide additional locales. For help, see https://github.com/GoogleChrome/lighthouse/blob/main/readme.md#how-do-i-get-localized-lighthouse-results-via-the-cli');
    }
    // eslint-disable-next-line max-len
    lighthouse_logger.warn('i18n', `locale(s) '${locales}' not available. Falling back to default '${DEFAULT_LOCALE}'`);
  }

  return closestLocale || DEFAULT_LOCALE;
}

/**
 * Returns a function that generates `LH.IcuMessage` objects to localize the
 * messages in `fileStrings` and the shared `i18n.UIStrings`.
 * @param {string} filename
 * @param {Record<string, string>} fileStrings
 */
function createIcuMessageFn(filename, fileStrings) {
  if (filename.startsWith('file://')) filename = external_url_.fileURLToPath(filename);

  // In the common case, `filename` is an absolute path that needs to be transformed
  // to be relative to LH_ROOT. In other cases, `filename` might be the exact i18n identifier
  // already (see: stack-packs.js, or bundled lighthouse).
  if (external_path_.isAbsolute(filename)) filename = external_path_.relative(LH_ROOT, filename);

  /**
   * Combined so fn can access both caller's strings and i18n.UIStrings shared across LH.
   * @type {Record<string, string>}
   */
  const mergedStrings = {...UIStrings, ...fileStrings};

  /**
   * Convert a message string and replacement values into an `LH.IcuMessage`.
   * @param {string} message
   * @param {Record<string, string | number>} [values]
   * @return {LH.IcuMessage}
   */
  const getIcuMessageFn = (message, values) => {
    const keyname = Object.keys(mergedStrings).find(key => mergedStrings[key] === message);
    if (!keyname) throw new Error(`Could not locate: ${message}`);

    // `message` can be a UIString defined within the provided `fileStrings`, or it could be
    // one of the common strings found in `i18n.UIStrings`.
    const filenameToLookup = keyname in fileStrings ?
      filename :
      external_path_.relative(LH_ROOT, getModulePath(import.meta));
    const unixStyleFilename = filenameToLookup.replace(/\\/g, '/');
    const i18nId = `${unixStyleFilename} | ${keyname}`;

    return {
      i18nId,
      values,
      formattedDefault: formatMessage(message, values, DEFAULT_LOCALE),
    };
  };

  return getIcuMessageFn;
}

/**
 * Returns true if the given value is a string or an LH.IcuMessage.
 * @param {unknown} value
 * @return {value is string|LH.IcuMessage}
 */
function isStringOrIcuMessage(value) {
  return typeof value === 'string' || isIcuMessage(value);
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/lib/lh-error.js
/**
 * @license Copyright 2018 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */



/* eslint-disable max-len */
const lh_error_UIStrings = {
  /**
   * @description Error message explaining that the Lighthouse run was not able to collect screenshots through Chrome.
   * @example {NO_SPEEDLINE_FRAMES} errorCode
   * */
  didntCollectScreenshots: `Chrome didn't collect any screenshots during the page load. Please make sure there is content visible on the page, and then try re-running Lighthouse. ({errorCode})`,
  /**
   * @description Error message explaining that the performance trace was not able to be recorded for the Lighthouse run.
   * @example {NO_TRACING_STARTED} errorCode
   * */
  badTraceRecording: 'Something went wrong with recording the trace over your page load. Please run Lighthouse again. ({errorCode})',
  /**
   * @description Error message explaining that the First Contentful Paint metric was not seen during the page load.
   * @example {NO_FCP} errorCode
   * */
  noFcp: 'The page did not paint any content. Please ensure you keep the browser window in the foreground during the load and try again. ({errorCode})',
  /**
   * @description Error message explaining that the Largest Contentful Paint metric was not seen during the page load.
   * @example {NO_LCP} errorCode
   * */
  noLcp: 'The page did not display content that qualifies as a Largest Contentful Paint (LCP). Ensure the page has a valid LCP element and then try again. ({errorCode})',
  /**
   * @description Error message explaining that the page loaded too slowly to perform a Lighthouse run.
   * @example {NO_TTI_CPU_IDLE_PERIOD} errorCode
   * */
  pageLoadTookTooLong: 'Your page took too long to load. Please follow the opportunities in the report to reduce your page load time, and then try re-running Lighthouse. ({errorCode})',
  /** Error message explaining that Lighthouse could not load the requested URL and the steps that might be taken to fix the unreliability. */
  pageLoadFailed: 'Lighthouse was unable to reliably load the page you requested. Make sure you are testing the correct URL and that the server is properly responding to all requests.',
  /**
   * @description Error message explaining that Lighthouse could not load the requested URL and the steps that might be taken to fix the unreliability.
   * @example {404} statusCode
   * */
  pageLoadFailedWithStatusCode: 'Lighthouse was unable to reliably load the page you requested. Make sure you are testing the correct URL and that the server is properly responding to all requests. (Status code: {statusCode})',
  /**
   * @description Error message explaining that Lighthouse could not load the requested URL and the steps that might be taken to fix the unreliability.
   * @example {FAILED_DOCUMENT_REQUEST} errorDetails
   * */
  pageLoadFailedWithDetails: 'Lighthouse was unable to reliably load the page you requested. Make sure you are testing the correct URL and that the server is properly responding to all requests. (Details: {errorDetails})',
  /**
   * @description Error message explaining that the security certificate of the page Lighthouse observed was invalid, so the URL cannot be accessed. securityMessages will be replaced with one or more strings from the browser explaining what was insecure about the page load.
   * @example {net::ERR_CERT_DATE_INVALID} securityMessages
   * */
  pageLoadFailedInsecure: 'The URL you have provided does not have a valid security certificate. {securityMessages}',
  /** Error message explaining that Chrome prevented the page from loading and displayed an interstitial screen instead, so the URL cannot be accessed. */
  pageLoadFailedInterstitial: 'Chrome prevented page load with an interstitial. Make sure you are testing the correct URL and that the server is properly responding to all requests.',
  /** Error message explaining that Chrome has encountered an error during the Lighthouse run, and that Chrome should be restarted. */
  internalChromeError: 'An internal Chrome error occurred. Please restart Chrome and try re-running Lighthouse.',
  /** Error message explaining that fetching the resources of the webpage has taken longer than the maximum time. */
  requestContentTimeout: 'Fetching resource content has exceeded the allotted time',
  /**
   * @description Error message explaining that the webpage is non-HTML, so audits are ill-defined.
   * @example {application/xml} mimeType
   * */
  notHtml: 'The page provided is not HTML (served as MIME type {mimeType}).',
  /** Error message explaining that the provided URL Lighthouse points to is not valid, and cannot be loaded. */
  urlInvalid: 'The URL you have provided appears to be invalid.',
  /**
   * @description Error message explaining that the Chrome Devtools protocol has exceeded the maximum timeout allowed.
   * @example {Network.enable} protocolMethod
   * */
  protocolTimeout: 'Waiting for DevTools protocol response has exceeded the allotted time. (Method: {protocolMethod})',
  /** Error message explaining that the requested page could not be resolved by the DNS server. */
  dnsFailure: 'DNS servers could not resolve the provided domain.',
  /** Error message explaining that Lighthouse couldn't complete because the page has stopped responding to its instructions. */
  pageLoadFailedHung: 'Lighthouse was unable to reliably load the URL you requested because the page stopped responding.',
  /** Error message explaining that Lighthouse timed out while waiting for the initial connection to the Chrome Devtools protocol. */
  criTimeout: 'Timeout waiting for initial Debugger Protocol connection.',
  /**
   * @description Error message explaining that a resource that was required for testing was never collected. "artifactName" will be replaced with the name of the resource that wasn't collected.
   * @example {WebAppManifest} artifactName
   * */
  missingRequiredArtifact: 'Required {artifactName} gatherer did not run.',
  /**
   * @description Error message explaining that there was an error while trying to collect a resource that was required for testing. "artifactName" will be replaced with the name of the resource that wasn't collected; "errorMessage" will be replaced with a string description of the error that occurred.
   * @example {WebAppManifest} artifactName
   * @example {Manifest invalid} errorMessage
   * */
  erroredRequiredArtifact: 'Required {artifactName} gatherer encountered an error: {errorMessage}',

  /**
   * @description Error message explaining that a feature is unavailable due to an old version of Chrome. "featureName" will be replaced by the name of the feature which is not supported.
   * @example {Largest Contentful Paint} featureName
   * */
  oldChromeDoesNotSupportFeature: 'This version of Chrome is too old to support \'{featureName}\'. Use a newer version to see full results.',
};

const str_ = createIcuMessageFn(import.meta.url, lh_error_UIStrings);


/**
 * @typedef LighthouseErrorDefinition
 * @property {string} code
 * @property {string} message
 * @property {RegExp} [pattern]
 * @property {boolean} [lhrRuntimeError] True if it should appear in the top-level LHR.runtimeError property.
 */

const LHERROR_SENTINEL = '__LighthouseErrorSentinel';
const ERROR_SENTINEL = '__ErrorSentinel';
/**
 * @typedef {{sentinel: '__LighthouseErrorSentinel', code: string, stack?: string, [p: string]: string|undefined}} SerializedLighthouseError
 * @typedef {{sentinel: '__ErrorSentinel', message: string, code?: string, stack?: string}} SerializedBaseError
 */

class lh_error_LighthouseError extends Error {
  /**
   * @param {LighthouseErrorDefinition} errorDefinition
   * @param {Record<string, string|undefined>=} properties
   */
  constructor(errorDefinition, properties) {
    super(errorDefinition.code);
    this.name = 'LighthouseError';
    this.code = errorDefinition.code;
    // Add additional properties to be ICU replacements in the error string.
    // `code` is always added as `errorCode` so callers don't need to specify the code multiple times.
    this.friendlyMessage = str_(errorDefinition.message, {errorCode: this.code, ...properties});
    this.lhrRuntimeError = !!errorDefinition.lhrRuntimeError;
    if (properties) Object.assign(this, properties);

    Error.captureStackTrace(this, lh_error_LighthouseError);
  }

  /**
   * @param {string} method
   * @param {{message: string, data?: string|undefined}} protocolError
   * @return {Error|LighthouseError}
   */
  static fromProtocolMessage(method, protocolError) {
    // extract all errors with a regex pattern to match against.
    // if we find one, use the friendly LighthouseError definition
    const matchedErrorDefinition = Object.values(lh_error_LighthouseError.errors)
      .filter(e => e.pattern)
      .find(e => e.pattern && e.pattern.test(protocolError.message));
    if (matchedErrorDefinition) {
      return new lh_error_LighthouseError(matchedErrorDefinition);
    }

    // otherwise fallback to building a generic Error
    let errMsg = `(${method}): ${protocolError.message}`;
    if (protocolError.data) errMsg += ` (${protocolError.data})`;
    const error = new Error(`Protocol error ${errMsg}`);
    return Object.assign(error, {protocolMethod: method, protocolError: protocolError.message});
  }

  /**
   * A JSON.stringify replacer to serialize LighthouseErrors and (as a fallback) Errors.
   * Returns a simplified version of the error object that can be reconstituted
   * as a copy of the original error at parse time.
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#The_replacer_parameter
   * @param {Error|LighthouseError} err
   * @return {SerializedBaseError|SerializedLighthouseError}
   */
  static stringifyReplacer(err) {
    if (err instanceof lh_error_LighthouseError) {
      // Remove class props so that remaining values were what was passed in as `properties`.
      // eslint-disable-next-line no-unused-vars
      const {name, code, message, friendlyMessage, lhrRuntimeError, stack, ...properties} = err;

      return {
        sentinel: LHERROR_SENTINEL,
        code,
        stack,
        ...properties,
      };
    }

    // Unexpected errors won't be LighthouseErrors, but we want them serialized as well.
    if (err instanceof Error) {
      const {message, stack} = err;
      // @ts-expect-error - code can be helpful for e.g. node errors, so preserve it if it's present.
      const code = err.code;
      return {
        sentinel: ERROR_SENTINEL,
        message,
        code,
        stack,
      };
    }

    throw new Error('Invalid value for LighthouseError stringification');
  }

  /**
   * A JSON.parse reviver. If any value passed in is a serialized Error or
   * LighthouseError, the error is recreated as the original object. Otherwise, the
   * value is passed through unchanged.
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse#Using_the_reviver_parameter
   * @param {string} key
   * @param {any} possibleError
   * @return {any}
   */
  static parseReviver(key, possibleError) {
    if (typeof possibleError === 'object' && possibleError !== null) {
      if (possibleError.sentinel === LHERROR_SENTINEL) {
        // Include sentinel in destructuring so it doesn't end up in `properties`.
        // eslint-disable-next-line no-unused-vars
        const {sentinel, code, stack, ...properties} = /** @type {SerializedLighthouseError} */ (possibleError);
        const errorDefinition = lh_error_LighthouseError.errors[/** @type {keyof typeof ERRORS} */ (code)];
        const lhError = new lh_error_LighthouseError(errorDefinition, properties);
        lhError.stack = stack;

        return lhError;
      }

      if (possibleError.sentinel === ERROR_SENTINEL) {
        const {message, code, stack} = /** @type {SerializedBaseError} */ (possibleError);
        const error = new Error(message);
        Object.assign(error, {code, stack});
        return error;
      }
    }

    return possibleError;
  }
}

const ERRORS = {
  // Screenshot/speedline errors
  NO_SPEEDLINE_FRAMES: {
    code: 'NO_SPEEDLINE_FRAMES',
    message: lh_error_UIStrings.didntCollectScreenshots,
    lhrRuntimeError: true,
  },
  SPEEDINDEX_OF_ZERO: {
    code: 'SPEEDINDEX_OF_ZERO',
    message: lh_error_UIStrings.didntCollectScreenshots,
    lhrRuntimeError: true,
  },
  NO_SCREENSHOTS: {
    code: 'NO_SCREENSHOTS',
    message: lh_error_UIStrings.didntCollectScreenshots,
    lhrRuntimeError: true,
  },
  INVALID_SPEEDLINE: {
    code: 'INVALID_SPEEDLINE',
    message: lh_error_UIStrings.didntCollectScreenshots,
    lhrRuntimeError: true,
  },

  // Trace parsing errors
  NO_TRACING_STARTED: {
    code: 'NO_TRACING_STARTED',
    message: lh_error_UIStrings.badTraceRecording,
    lhrRuntimeError: true,
  },
  NO_RESOURCE_REQUEST: {
    code: 'NO_RESOURCE_REQUEST',
    message: lh_error_UIStrings.badTraceRecording,
    lhrRuntimeError: true,
  },
  NO_NAVSTART: {
    code: 'NO_NAVSTART',
    message: lh_error_UIStrings.badTraceRecording,
    lhrRuntimeError: true,
  },
  NO_FCP: {
    code: 'NO_FCP',
    message: lh_error_UIStrings.noFcp,
    lhrRuntimeError: true,
  },
  NO_DCL: {
    code: 'NO_DCL',
    message: lh_error_UIStrings.badTraceRecording,
    lhrRuntimeError: true,
  },
  NO_FMP: {
    code: 'NO_FMP',
    message: lh_error_UIStrings.badTraceRecording,
  },
  NO_LCP: {
    code: 'NO_LCP',
    message: lh_error_UIStrings.noLcp,
  },
  NO_LCP_ALL_FRAMES: {
    code: 'NO_LCP_ALL_FRAMES',
    message: lh_error_UIStrings.noLcp,
  },
  UNSUPPORTED_OLD_CHROME: {
    code: 'UNSUPPORTED_OLD_CHROME',
    message: lh_error_UIStrings.oldChromeDoesNotSupportFeature,
  },

  // TTI calculation failures
  NO_TTI_CPU_IDLE_PERIOD: {code: 'NO_TTI_CPU_IDLE_PERIOD', message: lh_error_UIStrings.pageLoadTookTooLong},
  NO_TTI_NETWORK_IDLE_PERIOD: {
    code: 'NO_TTI_NETWORK_IDLE_PERIOD',
    message: lh_error_UIStrings.pageLoadTookTooLong,
  },

  // Page load failures
  NO_DOCUMENT_REQUEST: {
    code: 'NO_DOCUMENT_REQUEST',
    message: lh_error_UIStrings.pageLoadFailed,
    lhrRuntimeError: true,
  },
  /* Used when DevTools reports loading failed. Usually an internal (Chrome) issue.
   * Requries an additional `errorDetails` field for translation.
   */
  FAILED_DOCUMENT_REQUEST: {
    code: 'FAILED_DOCUMENT_REQUEST',
    message: lh_error_UIStrings.pageLoadFailedWithDetails,
    lhrRuntimeError: true,
  },
  /* Used when status code is 4xx or 5xx.
   * Requires an additional `statusCode` field for translation.
   */
  ERRORED_DOCUMENT_REQUEST: {
    code: 'ERRORED_DOCUMENT_REQUEST',
    message: lh_error_UIStrings.pageLoadFailedWithStatusCode,
    lhrRuntimeError: true,
  },
  /* Used when security error prevents page load.
   * Requires an additional `securityMessages` field for translation.
   */
  INSECURE_DOCUMENT_REQUEST: {
    code: 'INSECURE_DOCUMENT_REQUEST',
    message: lh_error_UIStrings.pageLoadFailedInsecure,
    lhrRuntimeError: true,
  },
  /* Used when any Chrome interstitial error prevents page load.
   */
  CHROME_INTERSTITIAL_ERROR: {
    code: 'CHROME_INTERSTITIAL_ERROR',
    message: lh_error_UIStrings.pageLoadFailedInterstitial,
    lhrRuntimeError: true,
  },
  /* Used when the page stopped responding and did not finish loading. */
  PAGE_HUNG: {
    code: 'PAGE_HUNG',
    message: lh_error_UIStrings.pageLoadFailedHung,
    lhrRuntimeError: true,
  },
  /* Used when the page is non-HTML. */
  NOT_HTML: {
    code: 'NOT_HTML',
    message: lh_error_UIStrings.notHtml,
    lhrRuntimeError: true,
  },

  // Protocol internal failures
  TRACING_ALREADY_STARTED: {
    code: 'TRACING_ALREADY_STARTED',
    message: lh_error_UIStrings.internalChromeError,
    pattern: /Tracing.*started/,
    lhrRuntimeError: true,
  },
  PARSING_PROBLEM: {
    code: 'PARSING_PROBLEM',
    message: lh_error_UIStrings.internalChromeError,
    pattern: /Parsing problem/,
    lhrRuntimeError: true,
  },
  READ_FAILED: {
    code: 'READ_FAILED',
    message: lh_error_UIStrings.internalChromeError,
    pattern: /Read failed/,
    lhrRuntimeError: true,
  },

  // URL parsing failures
  INVALID_URL: {
    code: 'INVALID_URL',
    message: lh_error_UIStrings.urlInvalid,
  },

  /* Protocol timeout failures
   * Requires an additional `protocolMethod` field for translation.
   */
  PROTOCOL_TIMEOUT: {
    code: 'PROTOCOL_TIMEOUT',
    message: lh_error_UIStrings.protocolTimeout,
    lhrRuntimeError: true,
  },

  // DNS failure on main document (no resolution, timed out, etc)
  DNS_FAILURE: {
    code: 'DNS_FAILURE',
    message: lh_error_UIStrings.dnsFailure,
    lhrRuntimeError: true,
  },

  /** A timeout in the initial connection to the debugger protocol. */
  CRI_TIMEOUT: {
    code: 'CRI_TIMEOUT',
    message: lh_error_UIStrings.criTimeout,
    lhrRuntimeError: true,
  },

  /**
   * Error internal to Runner used when an artifact required for an audit is missing.
   * Requires an additional `artifactName` field for translation.
  */
  MISSING_REQUIRED_ARTIFACT: {
    code: 'MISSING_REQUIRED_ARTIFACT',
    message: lh_error_UIStrings.missingRequiredArtifact,
  },

  /**
   * Error internal to Runner used when an artifact required for an audit was an error.
   * Requires additional `artifactName` and `errorMessage` fields for translation.
  */
  ERRORED_REQUIRED_ARTIFACT: {
    code: 'ERRORED_REQUIRED_ARTIFACT',
    message: lh_error_UIStrings.erroredRequiredArtifact,
  },

  // Hey! When adding a new error type, update lighthouse-result.proto too.
  // Only necessary for runtime errors, which come from artifacts or pageLoadErrors.
};

/** @type {Record<keyof typeof ERRORS, LighthouseErrorDefinition>} */
lh_error_LighthouseError.errors = ERRORS;
lh_error_LighthouseError.NO_ERROR = 'NO_ERROR';
lh_error_LighthouseError.UNKNOWN_ERROR = 'UNKNOWN_ERROR';



;// CONCATENATED MODULE: ./node_modules/lighthouse/shared/util.js
/**
 * @license
 * Copyright 2017 The Lighthouse Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS-IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/** @typedef {import('../types/lhr/audit-details').default.SnippetValue} SnippetValue */

const ELLIPSIS = '\u2026';
const NBSP = '\xa0';
const PASS_THRESHOLD = 0.9;

const RATINGS = {
  PASS: {label: 'pass', minScore: PASS_THRESHOLD},
  AVERAGE: {label: 'average', minScore: 0.5},
  FAIL: {label: 'fail'},
  ERROR: {label: 'error'},
};

// 25 most used tld plus one domains (aka public suffixes) from http archive.
// @see https://github.com/GoogleChrome/lighthouse/pull/5065#discussion_r191926212
// The canonical list is https://publicsuffix.org/learn/ but we're only using subset to conserve bytes
const listOfTlds = [
  'com', 'co', 'gov', 'edu', 'ac', 'org', 'go', 'gob', 'or', 'net', 'in', 'ne', 'nic', 'gouv',
  'web', 'spb', 'blog', 'jus', 'kiev', 'mil', 'wi', 'qc', 'ca', 'bel', 'on',
];

class Util {
  static get RATINGS() {
    return RATINGS;
  }

  static get PASS_THRESHOLD() {
    return PASS_THRESHOLD;
  }

  static get MS_DISPLAY_VALUE() {
    return `%10d${NBSP}ms`;
  }

  /**
   * If LHR is older than 10.0 it will not have the `finalDisplayedUrl` property.
   * Old LHRs should have the `finalUrl` property which will work fine for the report.
   *
   * @param {LH.Result} lhr
   */
  static getFinalDisplayedUrl(lhr) {
    if (lhr.finalDisplayedUrl) return lhr.finalDisplayedUrl;
    if (lhr.finalUrl) return lhr.finalUrl;
    throw new Error('Could not determine final displayed URL');
  }

  /**
   * If LHR is older than 10.0 it will not have the `mainDocumentUrl` property.
   * Old LHRs should have the `finalUrl` property which is the same as `mainDocumentUrl`.
   *
   * @param {LH.Result} lhr
   */
  static getMainDocumentUrl(lhr) {
    return lhr.mainDocumentUrl || lhr.finalUrl;
  }

  /**
   * @param {LH.Result} lhr
   * @return {LH.Result.FullPageScreenshot=}
   */
  static getFullPageScreenshot(lhr) {
    if (lhr.fullPageScreenshot) {
      return lhr.fullPageScreenshot;
    }

    // Prior to 10.0.
    const details = /** @type {LH.Result.FullPageScreenshot=} */ (
      lhr.audits['full-page-screenshot']?.details);
    return details;
  }

  /**
   * Split a string by markdown code spans (enclosed in `backticks`), splitting
   * into segments that were enclosed in backticks (marked as `isCode === true`)
   * and those that outside the backticks (`isCode === false`).
   * @param {string} text
   * @return {Array<{isCode: true, text: string}|{isCode: false, text: string}>}
   */
  static splitMarkdownCodeSpans(text) {
    /** @type {Array<{isCode: true, text: string}|{isCode: false, text: string}>} */
    const segments = [];

    // Split on backticked code spans.
    const parts = text.split(/`(.*?)`/g);
    for (let i = 0; i < parts.length; i ++) {
      const text = parts[i];

      // Empty strings are an artifact of splitting, not meaningful.
      if (!text) continue;

      // Alternates between plain text and code segments.
      const isCode = i % 2 !== 0;
      segments.push({
        isCode,
        text,
      });
    }

    return segments;
  }

  /**
   * Split a string on markdown links (e.g. [some link](https://...)) into
   * segments of plain text that weren't part of a link (marked as
   * `isLink === false`), and segments with text content and a URL that did make
   * up a link (marked as `isLink === true`).
   * @param {string} text
   * @return {Array<{isLink: true, text: string, linkHref: string}|{isLink: false, text: string}>}
   */
  static splitMarkdownLink(text) {
    /** @type {Array<{isLink: true, text: string, linkHref: string}|{isLink: false, text: string}>} */
    const segments = [];

    const parts = text.split(/\[([^\]]+?)\]\((https?:\/\/.*?)\)/g);
    while (parts.length) {
      // Shift off the same number of elements as the pre-split and capture groups.
      const [preambleText, linkText, linkHref] = parts.splice(0, 3);

      if (preambleText) { // Skip empty text as it's an artifact of splitting, not meaningful.
        segments.push({
          isLink: false,
          text: preambleText,
        });
      }

      // Append link if there are any.
      if (linkText && linkHref) {
        segments.push({
          isLink: true,
          text: linkText,
          linkHref,
        });
      }
    }

    return segments;
  }

  /**
   * @param {URL} parsedUrl
   * @param {{numPathParts?: number, preserveQuery?: boolean, preserveHost?: boolean}=} options
   * @return {string}
   */
  static getURLDisplayName(parsedUrl, options) {
    // Closure optional properties aren't optional in tsc, so fallback needs undefined  values.
    options = options || {numPathParts: undefined, preserveQuery: undefined,
      preserveHost: undefined};
    const numPathParts = options.numPathParts !== undefined ? options.numPathParts : 2;
    const preserveQuery = options.preserveQuery !== undefined ? options.preserveQuery : true;
    const preserveHost = options.preserveHost || false;

    let name;

    if (parsedUrl.protocol === 'about:' || parsedUrl.protocol === 'data:') {
      // Handle 'about:*' and 'data:*' URLs specially since they have no path.
      name = parsedUrl.href;
    } else {
      name = parsedUrl.pathname;
      const parts = name.split('/').filter(part => part.length);
      if (numPathParts && parts.length > numPathParts) {
        name = ELLIPSIS + parts.slice(-1 * numPathParts).join('/');
      }

      if (preserveHost) {
        name = `${parsedUrl.host}/${name.replace(/^\//, '')}`;
      }
      if (preserveQuery) {
        name = `${name}${parsedUrl.search}`;
      }
    }

    const MAX_LENGTH = 64;
    if (parsedUrl.protocol !== 'data:') {
      // Always elide hexadecimal hash
      name = name.replace(/([a-f0-9]{7})[a-f0-9]{13}[a-f0-9]*/g, `$1${ELLIPSIS}`);
      // Also elide other hash-like mixed-case strings
      name = name.replace(/([a-zA-Z0-9-_]{9})(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9-_]{10,}/g,
        `$1${ELLIPSIS}`);
      // Also elide long number sequences
      name = name.replace(/(\d{3})\d{6,}/g, `$1${ELLIPSIS}`);
      // Merge any adjacent ellipses
      name = name.replace(/\u2026+/g, ELLIPSIS);

      // Elide query params first
      if (name.length > MAX_LENGTH && name.includes('?')) {
        // Try to leave the first query parameter intact
        name = name.replace(/\?([^=]*)(=)?.*/, `?$1$2${ELLIPSIS}`);

        // Remove it all if it's still too long
        if (name.length > MAX_LENGTH) {
          name = name.replace(/\?.*/, `?${ELLIPSIS}`);
        }
      }
    }

    // Elide too long names next
    if (name.length > MAX_LENGTH) {
      const dotIndex = name.lastIndexOf('.');
      if (dotIndex >= 0) {
        name = name.slice(0, MAX_LENGTH - 1 - (name.length - dotIndex)) +
          // Show file extension
          `${ELLIPSIS}${name.slice(dotIndex)}`;
      } else {
        name = name.slice(0, MAX_LENGTH - 1) + ELLIPSIS;
      }
    }

    return name;
  }

  /**
   * Split a URL into a file, hostname and origin for easy display.
   * @param {string} url
   * @return {{file: string, hostname: string, origin: string}}
   */
  static parseURL(url) {
    const parsedUrl = new URL(url);
    return {
      file: Util.getURLDisplayName(parsedUrl),
      hostname: parsedUrl.hostname,
      origin: parsedUrl.origin,
    };
  }

  /**
   * @param {string|URL} value
   * @return {!URL}
   */
  static createOrReturnURL(value) {
    if (value instanceof URL) {
      return value;
    }

    return new URL(value);
  }

  /**
   * Gets the tld of a domain
   *
   * @param {string} hostname
   * @return {string} tld
   */
  static getTld(hostname) {
    const tlds = hostname.split('.').slice(-2);

    if (!listOfTlds.includes(tlds[0])) {
      return `.${tlds[tlds.length - 1]}`;
    }

    return `.${tlds.join('.')}`;
  }

  /**
   * Returns a primary domain for provided hostname (e.g. www.example.com -> example.com).
   * @param {string|URL} url hostname or URL object
   * @return {string}
   */
  static getRootDomain(url) {
    const hostname = Util.createOrReturnURL(url).hostname;
    const tld = Util.getTld(hostname);

    // tld is .com or .co.uk which means we means that length is 1 to big
    // .com => 2 & .co.uk => 3
    const splitTld = tld.split('.');

    // get TLD + root domain
    return hostname.split('.').slice(-splitTld.length).join('.');
  }

  /**
   * Returns only lines that are near a message, or the first few lines if there are
   * no line messages.
   * @param {SnippetValue['lines']} lines
   * @param {SnippetValue['lineMessages']} lineMessages
   * @param {number} surroundingLineCount Number of lines to include before and after
   * the message. If this is e.g. 2 this function might return 5 lines.
   */
  static filterRelevantLines(lines, lineMessages, surroundingLineCount) {
    if (lineMessages.length === 0) {
      // no lines with messages, just return the first bunch of lines
      return lines.slice(0, surroundingLineCount * 2 + 1);
    }

    const minGapSize = 3;
    const lineNumbersToKeep = new Set();
    // Sort messages so we can check lineNumbersToKeep to see how big the gap to
    // the previous line is.
    lineMessages = lineMessages.sort((a, b) => (a.lineNumber || 0) - (b.lineNumber || 0));
    lineMessages.forEach(({lineNumber}) => {
      let firstSurroundingLineNumber = lineNumber - surroundingLineCount;
      let lastSurroundingLineNumber = lineNumber + surroundingLineCount;

      while (firstSurroundingLineNumber < 1) {
        // make sure we still show (surroundingLineCount * 2 + 1) lines in total
        firstSurroundingLineNumber++;
        lastSurroundingLineNumber++;
      }
      // If only a few lines would be omitted normally then we prefer to include
      // extra lines to avoid the tiny gap
      if (lineNumbersToKeep.has(firstSurroundingLineNumber - minGapSize - 1)) {
        firstSurroundingLineNumber -= minGapSize;
      }
      for (let i = firstSurroundingLineNumber; i <= lastSurroundingLineNumber; i++) {
        const surroundingLineNumber = i;
        lineNumbersToKeep.add(surroundingLineNumber);
      }
    });

    return lines.filter(line => lineNumbersToKeep.has(line.lineNumber));
  }
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/lib/url-utils.js
/**
 * @license Copyright 2016 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */




/** @typedef {import('./network-request.js').NetworkRequest} NetworkRequest */

const allowedProtocols = [
  'https:', 'http:', 'chrome:', 'chrome-extension:',
];

const SECURE_SCHEMES = ['data', 'https', 'wss', 'blob', 'chrome', 'chrome-extension', 'about',
  'filesystem'];
const SECURE_LOCALHOST_DOMAINS = ['localhost', '127.0.0.1'];
const NON_NETWORK_SCHEMES = [
  'blob', // @see https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL
  'data', // @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs
  'intent', // @see https://developer.chrome.com/docs/multidevice/android/intents/
  'file', // @see https://en.wikipedia.org/wiki/File_URI_scheme
  'filesystem', // @see https://developer.mozilla.org/en-US/docs/Web/API/FileSystem
];

/**
 * There is fancy URL rewriting logic for the chrome://settings page that we need to work around.
 * Why? Special handling was added by Chrome team to allow a pushState transition between chrome:// pages.
 * As a result, the network URL (chrome://chrome/settings/) doesn't match the final document URL (chrome://settings/).
 * @param {string} url
 * @return {string}
 */
function rewriteChromeInternalUrl(url) {
  if (!url || !url.startsWith('chrome://')) return url;
  // Chrome adds a trailing slash to `chrome://` URLs, but the spec does not.
  //   https://github.com/GoogleChrome/lighthouse/pull/3941#discussion_r154026009
  if (url.endsWith('/')) url = url.replace(/\/$/, '');
  return url.replace(/^chrome:\/\/chrome\//, 'chrome://');
}

class url_utils_UrlUtils {
  /**
   * @param {string} url
   * @return {boolean}
   */
  static isValid(url) {
    try {
      new URL(url);
      return true;
    } catch (e) {
      return false;
    }
  }

  /**
   * @param {string} urlA
   * @param {string} urlB
   * @return {boolean}
   */
  static hostsMatch(urlA, urlB) {
    try {
      return new URL(urlA).host === new URL(urlB).host;
    } catch (e) {
      return false;
    }
  }

  /**
   * @param {string} urlA
   * @param {string} urlB
   * @return {boolean}
   */
  static originsMatch(urlA, urlB) {
    try {
      return new URL(urlA).origin === new URL(urlB).origin;
    } catch (e) {
      return false;
    }
  }

  /**
   * @param {string} url
   * @return {?string}
   */
  static getOrigin(url) {
    try {
      const urlInfo = new URL(url);
      // check for both host and origin since some URLs schemes like data and file set origin to the
      // string "null" instead of the object
      return (urlInfo.host && urlInfo.origin) || null;
    } catch (e) {
      return null;
    }
  }

  /**
   * Check if rootDomains matches
   *
   * @param {string|URL} urlA
   * @param {string|URL} urlB
   */
  static rootDomainsMatch(urlA, urlB) {
    let urlAInfo;
    let urlBInfo;
    try {
      urlAInfo = Util.createOrReturnURL(urlA);
      urlBInfo = Util.createOrReturnURL(urlB);
    } catch (err) {
      return false;
    }

    if (!urlAInfo.hostname || !urlBInfo.hostname) {
      return false;
    }

    // get the string before the tld
    const urlARootDomain = Util.getRootDomain(urlAInfo);
    const urlBRootDomain = Util.getRootDomain(urlBInfo);

    return urlARootDomain === urlBRootDomain;
  }

  /**
   * @param {string} url
   * @param {{numPathParts: number, preserveQuery: boolean, preserveHost: boolean}=} options
   * @return {string}
   */
  static getURLDisplayName(url, options) {
    return Util.getURLDisplayName(new URL(url), options);
  }

  /**
   * Limits data URIs to 100 characters, returns all other strings untouched.
   * @param {string} url
   * @return {string}
   */
  static elideDataURI(url) {
    try {
      const parsed = new URL(url);
      return parsed.protocol === 'data:' ? url.slice(0, 100) : url;
    } catch (e) {
      return url;
    }
  }

  /**
   * Determine if url1 equals url2, ignoring URL fragments.
   * @param {string} url1
   * @param {string} url2
   * @return {boolean}
   */
  static equalWithExcludedFragments(url1, url2) {
    [url1, url2] = [url1, url2].map(rewriteChromeInternalUrl);
    try {
      const urla = new URL(url1);
      urla.hash = '';

      const urlb = new URL(url2);
      urlb.hash = '';

      return urla.href === urlb.href;
    } catch (e) {
      return false;
    }
  }

  /**
   * Determine if the url has a protocol that we're able to test
   * @param {string} url
   * @return {boolean}
   */
  static isProtocolAllowed(url) {
    try {
      const parsed = new URL(url);
      return allowedProtocols.includes(parsed.protocol);
    } catch (e) {
      return false;
    }
  }

  /**
   * Is the host localhost-enough to satisfy the "secure context" definition
   * https://github.com/GoogleChrome/lighthouse/pull/11766#discussion_r582340683
   * @param {string} hostname Either a `new URL(url).hostname` or a `networkRequest.parsedUrl.host`
   * @return {boolean}
   */
  static isLikeLocalhost(hostname) {
    // Any hostname terminating in `.localhost` is considered to be local.
    // https://w3c.github.io/webappsec-secure-contexts/#localhost
    // This method doesn't consider IPs that resolve to loopback, IPv6 or other loopback edgecases
    return SECURE_LOCALHOST_DOMAINS.includes(hostname) || hostname.endsWith('.localhost');
  }

  /**
   * @param {NetworkRequest['parsedURL']['scheme']} scheme
   * @return {boolean}
   */
  static isSecureScheme(scheme) {
    return SECURE_SCHEMES.includes(scheme);
  }

  /**
   * Use `NetworkRequest.isNonNetworkRequest(req)` if working with a request.
   * Note: the `protocol` field from CDP can be 'h2', 'http', (not 'https'!) or it'll be url's scheme.
   *   https://source.chromium.org/chromium/chromium/src/+/main:content/browser/devtools/protocol/network_handler.cc;l=598-611;drc=56d4a9a9deb30be73adcee8737c73bcb2a5ab64f
   * However, a `new URL(href).protocol` has a colon suffix.
   *   https://url.spec.whatwg.org/#dom-url-protocol
   * A URL's `scheme` is specced as the `protocol` sans-colon, but isn't exposed on a URL object.
   * This method can take all 3 of these string types as a parameter.
   * @param {NetworkRequest['protocol'] | URL['protocol']} protocol Either a networkRequest's `protocol` per CDP or a `new URL(href).protocol`
   * @return {boolean}
   */
  static isNonNetworkProtocol(protocol) {
    // Strip off any colon
    const urlScheme = protocol.includes(':') ? protocol.slice(0, protocol.indexOf(':')) : protocol;
    return NON_NETWORK_SCHEMES.includes(urlScheme);
  }

  /**
   * @param {string} src
   * @return {string|undefined}
   */
  static guessMimeType(src) {
    let url;
    try {
      url = new URL(src);
    } catch {
      return undefined;
    }

    if (url.protocol === 'data:') {
      const match = url.pathname.match(/^(image\/(png|jpeg|svg\+xml|webp|gif|avif))[;,]/);
      if (!match) return undefined;
      return match[1];
    }

    const match = url.pathname.toLowerCase().match(/\.(png|jpeg|jpg|svg|webp|gif|avif)$/);
    if (!match) return undefined;

    const ext = match[1];
    if (ext === 'svg') return 'image/svg+xml';
    if (ext === 'jpg') return 'image/jpeg';
    return `image/${ext}`;
  }

  /**
   * @param {string|undefined} url
   * @return {string}
   */
  static normalizeUrl(url) {
    // Verify the url is valid and that protocol is allowed
    if (url && this.isValid(url) && this.isProtocolAllowed(url)) {
      // Use canonicalized URL (with trailing slashes and such)
      return new URL(url).href;
    } else {
      throw new lh_error_LighthouseError(lh_error_LighthouseError.errors.INVALID_URL);
    }
  }
}

url_utils_UrlUtils.INVALID_URL_DEBUG_STRING =
    'Lighthouse was unable to determine the URL of some script executions. ' +
    'It\'s possible a Chrome extension or other eval\'d code is the source.';

/* harmony default export */ const url_utils = (url_utils_UrlUtils);

;// CONCATENATED MODULE: ./node_modules/lighthouse/core/lib/network-request.js
/**
 * @license Copyright 2018 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

/**
 * @fileoverview Fills most of the role of NetworkManager and NetworkRequest classes from DevTools.
 * @see https://cs.chromium.org/chromium/src/third_party/blink/renderer/devtools/front_end/sdk/NetworkRequest.js
 * @see https://cs.chromium.org/chromium/src/third_party/blink/renderer/devtools/front_end/sdk/NetworkManager.js

 A detailed overview of the Chromium networking layer can be found here:
    https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/docs/Network-Timings.svg

  Below is a simplified model.

  DevTools box-whisker

    |-------[xxxxxXXXXXX]-|
       (1)    (2)    (3) (4)

  (1) leading whisker

      Covers various stages:

      - Queuing (delta between renderer knowing about request and network manager knowing about it)
      - DNS
      - Connection setup cost (TCP, TLS, SSL, etc.)

      CDP: left whisker edge is Network.requestWillBeSent timestamp

  (2) light shaded region

      browser network manager has initiated the request, hasn't recieved any bytes back yet
      Note: even with early-hint response, only the "real" response is considered here

      CDP: Network.requestWillBeSentExtraInfo timing.requestTime + timing.sendStart

  (3) dark shaded region

      browser network manager has recieved the very first header byte

      CDP:   Network.requestWillBeSentExtraInfo timing.requestTime + timing.recievedHeadersEnd
      CDP:   (right edge of box) Network.finished/Network.failed timestamp
      Trace: ResourceFinish.finishedTime

  (4) trailing whisker

      Marks time when render process main thread is available to use the resource. Could be long
      if main thread is busy. Currently don't use this anywhere.

      Trace: ResourceFinish.ts
 */




// Lightrider X-Header names for timing information.
// See: _updateTransferSizeForLightrider and _updateTimingsForLightrider.
const HEADER_TCP = 'X-TCPMs';
const HEADER_SSL = 'X-SSLMs';
const HEADER_REQ = 'X-RequestMs';
const HEADER_RES = 'X-ResponseMs';
const HEADER_TOTAL = 'X-TotalMs';
const HEADER_FETCHED_SIZE = 'X-TotalFetchedSize';
const HEADER_PROTOCOL_IS_H2 = 'X-ProtocolIsH2';

/**
 * @typedef HeaderEntry
 * @property {string} name
 * @property {string} value
 */

/**
 * @typedef ParsedURL
 * @property {string} scheme Equivalent to a `new URL(url).protocol` BUT w/o the trailing colon (:)
 * @property {string} host Equivalent to a `new URL(url).hostname`
 * @property {string} securityOrigin
 */

/**
 * @typedef LightriderStatistics
 * The difference in networkEndTime between the observed Lighthouse networkEndTime and Lightrider's derived networkEndTime.
 * @property {number} endTimeDeltaMs
 * The time spent making a TCP connection (connect + SSL).
 * @property {number} TCPMs
 * The time spent requesting a resource from a remote server, we use this to approx RTT.
 * @property {number} requestMs
 * The time spent transferring a resource from a remote server.
 * @property {number} responseMs
 */

/** @type {LH.Util.SelfMap<LH.Crdp.Network.ResourceType>} */
const RESOURCE_TYPES = {
  XHR: 'XHR',
  Fetch: 'Fetch',
  EventSource: 'EventSource',
  Script: 'Script',
  Stylesheet: 'Stylesheet',
  Image: 'Image',
  Media: 'Media',
  Font: 'Font',
  Document: 'Document',
  TextTrack: 'TextTrack',
  WebSocket: 'WebSocket',
  Other: 'Other',
  Manifest: 'Manifest',
  SignedExchange: 'SignedExchange',
  Ping: 'Ping',
  Preflight: 'Preflight',
  CSPViolationReport: 'CSPViolationReport',
  Prefetch: 'Prefetch',
};

class NetworkRequest {
  constructor() {
    this.requestId = '';
    this.connectionId = '0';
    this.connectionReused = false;

    this.url = '';
    this.protocol = '';
    this.isSecure = false;
    this.isValid = false;
    this.parsedURL = /** @type {ParsedURL} */ ({scheme: ''});
    this.documentURL = '';

    /** When the renderer process initially discovers a network request, in milliseconds. */
    this.rendererStartTime = -1;
    /**
     * When the network service is about to handle a request, ie. just before going to the
     * HTTP cache or going to the network for DNS/connection setup, in milliseconds.
     */
    this.networkRequestTime = -1;
    /** When the last byte of the response headers is received, in milliseconds. */
    this.responseHeadersEndTime = -1;
    /** When the last byte of the response body is received, in milliseconds. */
    this.networkEndTime = -1;

    // Go read the comment on _updateTransferSizeForLightrider.
    this.transferSize = 0;
    this.resourceSize = 0;
    this.fromDiskCache = false;
    this.fromMemoryCache = false;
    this.fromPrefetchCache = false;

    /** @type {LightriderStatistics|undefined} Extra timing information available only when run in Lightrider. */
    this.lrStatistics = undefined;

    this.finished = false;
    this.requestMethod = '';
    this.statusCode = -1;
    /** @type {NetworkRequest|undefined} The network request that redirected to this one */
    this.redirectSource = undefined;
    /** @type {NetworkRequest|undefined} The network request that this one redirected to */
    this.redirectDestination = undefined;
    /** @type {NetworkRequest[]|undefined} The chain of network requests that redirected to this one */
    this.redirects = undefined;
    this.failed = false;
    this.localizedFailDescription = '';

    /** @type {LH.Crdp.Network.Initiator} */
    this.initiator = {type: 'other'};
    /** @type {LH.Crdp.Network.ResourceTiming|undefined} */
    this.timing = undefined;
    /** @type {LH.Crdp.Network.ResourceType|undefined} */
    this.resourceType = undefined;
    this.mimeType = '';
    /** @type {LH.Crdp.Network.ResourcePriority} */
    this.priority = 'Low';
    /** @type {NetworkRequest|undefined} */
    this.initiatorRequest = undefined;
    /** @type {HeaderEntry[]} */
    this.responseHeaders = [];
    /** @type {string} */
    this.responseHeadersText = '';

    this.fetchedViaServiceWorker = false;
    /** @type {string|undefined} */
    this.frameId = '';
    /**
     * @type {string|undefined}
     * Only set for child targets (OOPIFs). This is the sessionId of the protocol connection on
     * which this request was discovered. `undefined` means it came from the root.
     */
    this.sessionId = undefined;
    this.isLinkPreload = false;
  }

  /**
   * @return {boolean}
   */
  hasErrorStatusCode() {
    return this.statusCode >= 400;
  }

  /**
   * @param {NetworkRequest} initiatorRequest
   */
  setInitiatorRequest(initiatorRequest) {
    this.initiatorRequest = initiatorRequest;
  }

  /**
   * @param {LH.Crdp.Network.RequestWillBeSentEvent} data
   */
  onRequestWillBeSent(data) {
    this.requestId = data.requestId;
    let url;
    try {
      // try to construct the url and fill in request
      url = new URL(data.request.url);
    } catch (e) {
      // isValid left false, all other data is blank
      return;
    }
    this.url = data.request.url;
    this.documentURL = data.documentURL;
    this.parsedURL = {
      scheme: url.protocol.split(':')[0],
      // Intentional, DevTools uses different terminology
      host: url.hostname,
      securityOrigin: url.origin,
    };
    this.isSecure = url_utils.isSecureScheme(this.parsedURL.scheme);

    this.rendererStartTime = data.timestamp * 1000;
    // Expected to be overriden with better value in `_recomputeTimesWithResourceTiming`.
    this.networkRequestTime = this.rendererStartTime;

    this.requestMethod = data.request.method;

    this.initiator = data.initiator;
    this.resourceType = data.type && RESOURCE_TYPES[data.type];
    this.priority = data.request.initialPriority;

    this.frameId = data.frameId;
    this.isLinkPreload = data.initiator.type === 'preload' || !!data.request.isLinkPreload;
    this.isValid = true;
  }

  onRequestServedFromCache() {
    this.fromMemoryCache = true;
  }

  /**
   * @param {LH.Crdp.Network.ResponseReceivedEvent} data
   */
  onResponseReceived(data) {
    this._onResponse(data.response, data.timestamp, data.type);
    this._updateProtocolForLightrider();
    this.frameId = data.frameId;
  }

  /**
   * @param {LH.Crdp.Network.DataReceivedEvent} data
   */
  onDataReceived(data) {
    this.resourceSize += data.dataLength;
    if (data.encodedDataLength !== -1) {
      this.transferSize += data.encodedDataLength;
    }
  }

  /**
   * @param {LH.Crdp.Network.LoadingFinishedEvent} data
   */
  onLoadingFinished(data) {
    // On some requests DevTools can send duplicate events, prefer the first one for best timing data
    if (this.finished) return;

    this.finished = true;
    this.networkEndTime = data.timestamp * 1000;
    if (data.encodedDataLength >= 0) {
      this.transferSize = data.encodedDataLength;
    }

    this._updateResponseHeadersEndTimeIfNecessary();
    this._updateTransferSizeForLightrider();
    this._updateTimingsForLightrider();
  }

  /**
   * @param {LH.Crdp.Network.LoadingFailedEvent} data
   */
  onLoadingFailed(data) {
    // On some requests DevTools can send duplicate events, prefer the first one for best timing data
    if (this.finished) return;

    this.finished = true;
    this.networkEndTime = data.timestamp * 1000;

    this.failed = true;
    this.resourceType = data.type && RESOURCE_TYPES[data.type];
    this.localizedFailDescription = data.errorText;

    this._updateResponseHeadersEndTimeIfNecessary();
    this._updateTransferSizeForLightrider();
    this._updateTimingsForLightrider();
  }

  /**
   * @param {LH.Crdp.Network.ResourceChangedPriorityEvent} data
   */
  onResourceChangedPriority(data) {
    this.priority = data.newPriority;
  }

  /**
   * @param {LH.Crdp.Network.RequestWillBeSentEvent} data
   */
  onRedirectResponse(data) {
    if (!data.redirectResponse) throw new Error('Missing redirectResponse data');
    this._onResponse(data.redirectResponse, data.timestamp, data.type);
    this.resourceType = undefined;
    this.finished = true;
    this.networkEndTime = data.timestamp * 1000;

    this._updateResponseHeadersEndTimeIfNecessary();
  }

  /**
   * @param {string=} sessionId
   */
  setSession(sessionId) {
    this.sessionId = sessionId;
  }

  /**
   * @param {LH.Crdp.Network.Response} response
   * @param {number} timestamp in seconds
   * @param {LH.Crdp.Network.ResponseReceivedEvent['type']=} resourceType
   */
  _onResponse(response, timestamp, resourceType) {
    this.url = response.url;

    this.connectionId = String(response.connectionId);
    this.connectionReused = response.connectionReused;

    if (response.protocol) this.protocol = response.protocol;

    this.responseHeadersEndTime = timestamp * 1000;

    this.transferSize = response.encodedDataLength;
    if (typeof response.fromDiskCache === 'boolean') this.fromDiskCache = response.fromDiskCache;
    if (typeof response.fromPrefetchCache === 'boolean') {
      this.fromPrefetchCache = response.fromPrefetchCache;
    }

    this.statusCode = response.status;

    this.timing = response.timing;
    if (resourceType) this.resourceType = RESOURCE_TYPES[resourceType];
    this.mimeType = response.mimeType;
    this.responseHeadersText = response.headersText || '';
    this.responseHeaders = NetworkRequest._headersDictToHeadersArray(response.headers);

    this.fetchedViaServiceWorker = !!response.fromServiceWorker;

    if (this.fromMemoryCache) this.timing = undefined;
    if (this.timing) this._recomputeTimesWithResourceTiming(this.timing);
  }

  /**
   * Resolve differences between conflicting timing signals. Based on the property setters in DevTools.
   * @see https://github.com/ChromeDevTools/devtools-frontend/blob/56a99365197b85c24b732ac92b0ac70feed80179/front_end/sdk/NetworkRequest.js#L485-L502
   * @param {LH.Crdp.Network.ResourceTiming} timing
   */
  _recomputeTimesWithResourceTiming(timing) {
    // Don't recompute times if the data is invalid. RequestTime should always be a thread timestamp.
    // If we don't have receiveHeadersEnd, we really don't have more accurate data.
    if (timing.requestTime === 0 || timing.receiveHeadersEnd === -1) return;
    // Take networkRequestTime and responseHeadersEndTime from timing data for better accuracy.
    // Timing's requestTime is a baseline in seconds, rest of the numbers there are ticks in millis.
    this.networkRequestTime = timing.requestTime * 1000;
    const headersReceivedTime = this.networkRequestTime + timing.receiveHeadersEnd;
    if (!this.responseHeadersEndTime || this.responseHeadersEndTime < 0) {
      this.responseHeadersEndTime = headersReceivedTime;
    }

    this.responseHeadersEndTime = Math.min(this.responseHeadersEndTime, headersReceivedTime);
    this.responseHeadersEndTime = Math.max(this.responseHeadersEndTime, this.networkRequestTime);
    // We're only at responseReceived (_onResponse) at this point.
    // This networkEndTime may be redefined again after onLoading is done.
    this.networkEndTime = Math.max(this.networkEndTime, this.responseHeadersEndTime);
  }

  /**
   * Update responseHeadersEndTime to the networkEndTime if networkEndTime is earlier.
   * A response can't be received after the entire request finished.
   */
  _updateResponseHeadersEndTimeIfNecessary() {
    this.responseHeadersEndTime = Math.min(this.networkEndTime, this.responseHeadersEndTime);
  }

  /**
   * LR loses transfer size information, but passes it in the 'X-TotalFetchedSize' header.
   * 'X-TotalFetchedSize' is the canonical transfer size in LR. Nothing should supersede it.
   *
   * The total length of the encoded data is spread out among multiple events. The sum of the
   * values in onResponseReceived and all the onDataReceived events typically equals the value
   * seen on the onLoadingFinished event. In <1% of cases we see the values differ. As we process
   * onResponseReceived and onDataReceived we accumulate the total encodedDataLength. When we
   * process onLoadingFinished, we override the accumulated total. We do this so that if the
   * request is aborted or fails, we still get a value via the accumulation.
   *
   * In Lightrider, due to instrumentation limitations, our values for encodedDataLength are bogus
   * and not valid. However the resource's true encodedDataLength/transferSize is shared via a
   * special response header, X-TotalFetchedSize. In this situation, we read this value from
   * responseReceived, use it for the transferSize and ignore the encodedDataLength values in
   * both dataReceived and loadingFinished.
   */
  _updateTransferSizeForLightrider() {
    // Bail if we aren't in Lightrider.
    if (!global.isLightrider) return;

    const totalFetchedSize = this.responseHeaders.find(item => item.name === HEADER_FETCHED_SIZE);
    // Bail if the header was missing.
    if (!totalFetchedSize) return;
    const floatValue = parseFloat(totalFetchedSize.value);
    // Bail if the header cannot be parsed.
    if (isNaN(floatValue)) return;
    this.transferSize = floatValue;
  }

  /**
   * LR loses protocol information.
   */
  _updateProtocolForLightrider() {
    // Bail if we aren't in Lightrider.
    if (!global.isLightrider) return;

    if (this.responseHeaders.some(item => item.name === HEADER_PROTOCOL_IS_H2)) {
      this.protocol = 'h2';
    }
  }

  /**
   * LR gets additional, accurate timing information from its underlying fetch infrastructure.  This
   * is passed in via X-Headers similar to 'X-TotalFetchedSize'.
   */
  _updateTimingsForLightrider() {
    // Bail if we aren't in Lightrider.
    if (!global.isLightrider) return;

    // For more info on timing nomenclature: https://www.w3.org/TR/resource-timing-2/#processing-model

    //    StartTime
    //    | ConnectStart
    //    | |     SSLStart  SSLEnd
    //    | |     |         | ConnectEnd
    //    | |     |         | | SendStart/End   ReceiveHeadersEnd
    //    | |     |         | | |               |                EndTime
    //    ▼ ▼     ▼         ▼ ▼ ▼               ▼                ▼
    //    [ [TCP  [   SSL   ] ] [   Request   ] [   Response   ] ]
    //    ▲ ▲     ▲         ▲ ▲ ▲             ▲ ▲              ▲ ▲
    //    | |     '-SSLMs---' | '-requestMs---' '-responseMs---' |
    //    | '----TCPMs--------'                                  |
    //    |                                                      |
    //    '------------------------TotalMs-----------------------'

    const totalHeader = this.responseHeaders.find(item => item.name === HEADER_TOTAL);
    // Bail if there was no totalTime.
    if (!totalHeader) return;

    const totalMs = parseInt(totalHeader.value);
    const TCPMsHeader = this.responseHeaders.find(item => item.name === HEADER_TCP);
    const SSLMsHeader = this.responseHeaders.find(item => item.name === HEADER_SSL);
    const requestMsHeader = this.responseHeaders.find(item => item.name === HEADER_REQ);
    const responseMsHeader = this.responseHeaders.find(item => item.name === HEADER_RES);

    // Make sure all times are initialized and are non-negative.
    const TCPMs = TCPMsHeader ? Math.max(0, parseInt(TCPMsHeader.value)) : 0;
    const SSLMs = SSLMsHeader ? Math.max(0, parseInt(SSLMsHeader.value)) : 0;
    const requestMs = requestMsHeader ? Math.max(0, parseInt(requestMsHeader.value)) : 0;
    const responseMs = responseMsHeader ? Math.max(0, parseInt(responseMsHeader.value)) : 0;

    // Bail if the timings don't add up.
    if (TCPMs + requestMs + responseMs !== totalMs) {
      return;
    }

    // Bail if SSL time is > TCP time.
    if (SSLMs > TCPMs) {
      return;
    }

    this.lrStatistics = {
      endTimeDeltaMs: this.networkEndTime - (this.networkRequestTime + totalMs),
      TCPMs: TCPMs,
      requestMs: requestMs,
      responseMs: responseMs,
    };
  }

  /**
   * Convert the requestId to backend-version by removing the `:redirect` portion
   *
   * @param {string} requestId
   * @return {string}
   */
  static getRequestIdForBackend(requestId) {
    return requestId.replace(/(:redirect)+$/, '');
  }

  /**
   * Based on DevTools NetworkManager.
   * @see https://github.com/ChromeDevTools/devtools-frontend/blob/3415ee28e86a3f4bcc2e15b652d22069938df3a6/front_end/sdk/NetworkManager.js#L285-L297
   * @param {LH.Crdp.Network.Headers} headersDict
   * @return {Array<HeaderEntry>}
   */
  static _headersDictToHeadersArray(headersDict) {
    const result = [];
    for (const name of Object.keys(headersDict)) {
      const values = headersDict[name].split('\n');
      for (let i = 0; i < values.length; ++i) {
        result.push({name: name, value: values[i]});
      }
    }
    return result;
  }

  static get TYPES() {
    return RESOURCE_TYPES;
  }

  /**
   * @param {NetworkRequest} record
   * @return {boolean}
   */
  static isNonNetworkRequest(record) {
    // The 'protocol' field in devtools a string more like a `scheme`
    return url_utils.isNonNetworkProtocol(record.protocol) ||
      // But `protocol` can fail to be populated if the request fails, so fallback to scheme.
      url_utils.isNonNetworkProtocol(record.parsedURL.scheme);
  }

  /**
   * Technically there's not alignment on URLs that create "secure connections" vs "secure contexts"
   * https://github.com/GoogleChrome/lighthouse/pull/11766#discussion_r582340683
   * But for our purposes, we don't need to worry too much.
   * @param {NetworkRequest} record
   * @return {boolean}
   */
  static isSecureRequest(record) {
    return url_utils.isSecureScheme(record.parsedURL.scheme) ||
        url_utils.isSecureScheme(record.protocol) ||
        url_utils.isLikeLocalhost(record.parsedURL.host) ||
        NetworkRequest.isHstsRequest(record);
  }

  /**
   * Returns whether the network request was an HSTS redirect request.
   * @param {NetworkRequest} record
   * @return {boolean}
   */
  static isHstsRequest(record) {
    const destination = record.redirectDestination;
    if (!destination) return false;

    const reasonHeader = record.responseHeaders
      .find(header => header.name === 'Non-Authoritative-Reason');
    const reason = reasonHeader?.value;
    return reason === 'HSTS' && NetworkRequest.isSecureRequest(destination);
  }

  /**
   * Resource size is almost always the right one to be using because of the below:
   *     `transferSize = resourceSize + headers.length`.
   * HOWEVER, there are some cases where an image is compressed again over the network and transfer size
   * is smaller (see https://github.com/GoogleChrome/lighthouse/pull/4968).
   * Use the min of the two numbers to be safe.
   * `tranferSize` of cached records is 0
   * @param {NetworkRequest} networkRecord
   * @return {number}
   */
  static getResourceSizeOnNetwork(networkRecord) {
    return Math.min(networkRecord.resourceSize || 0, networkRecord.transferSize || Infinity);
  }
}

NetworkRequest.HEADER_TCP = HEADER_TCP;
NetworkRequest.HEADER_SSL = HEADER_SSL;
NetworkRequest.HEADER_REQ = HEADER_REQ;
NetworkRequest.HEADER_RES = HEADER_RES;
NetworkRequest.HEADER_TOTAL = HEADER_TOTAL;
NetworkRequest.HEADER_FETCHED_SIZE = HEADER_FETCHED_SIZE;
NetworkRequest.HEADER_PROTOCOL_IS_H2 = HEADER_PROTOCOL_IS_H2;



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/gather/driver/network.js
/**
 * @license Copyright 2021 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */



/**
 * Return the body of the response with the given ID. Rejects if getting the
 * body times out.
 * @param {LH.Gatherer.FRProtocolSession} session
 * @param {string} requestId
 * @param {number} [timeout]
 * @return {Promise<string>}
 */
async function fetchResponseBodyFromCache(session, requestId, timeout = 1000) {
  requestId = NetworkRequest.getRequestIdForBackend(requestId);

  // Encoding issues may lead to hanging getResponseBody calls: https://github.com/GoogleChrome/lighthouse/pull/4718
  // session.sendCommand will handle timeout after 1s.
  session.setNextProtocolTimeout(timeout);
  const result = await session.sendCommand('Network.getResponseBody', {requestId});
  return result.body;
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/gather/base-gatherer.js
/**
 * @license Copyright 2021 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */



/* eslint-disable no-unused-vars */

/**
 * Base class for all gatherers supporting both Fraggle Rock and the legacy flow.
 * Most extending classes should implement the Fraggle Rock API and let this class handle translation.
 * See core/gather/gatherers/gatherer.js for legacy method explanations.
 *
 * @implements {LH.Gatherer.GathererInstance}
 * @implements {LH.Gatherer.FRGathererInstance}
 */
class FRGatherer {
  /** @type {LH.Gatherer.GathererMeta} */
  meta = {supportedModes: []};

  /**
   * Method to start observing a page for an arbitrary period of time.
   * @param {LH.Gatherer.FRTransitionalContext} passContext
   * @return {Promise<void>|void}
   */
  startInstrumentation(passContext) { }

  /**
   * Method to start observing a page when the measurements are very sensitive and
   * should observe as little Lighthouse-induced work as possible.
   * @param {LH.Gatherer.FRTransitionalContext} passContext
   * @return {Promise<void>|void}
   */
  startSensitiveInstrumentation(passContext) { }

  /**
   * Method to stop observing a page when the measurements are very sensitive and
   * should observe as little Lighthouse-induced work as possible.
   *
   * @param {LH.Gatherer.FRTransitionalContext} passContext
   * @return {Promise<void>|void}
   */
  stopSensitiveInstrumentation(passContext) { }

  /**
   * Method to end observing a page after an arbitrary period of time.
   * @param {LH.Gatherer.FRTransitionalContext} passContext
   * @return {Promise<void>|void}
   */
  stopInstrumentation(passContext) { }

  /**
   * Method to gather results about a page.
   * @param {LH.Gatherer.FRTransitionalContext} passContext
   * @return {LH.Gatherer.PhaseResult}
   */
  getArtifact(passContext) { }

  /**
   * Legacy property used to define the artifact ID. In Fraggle Rock, the artifact ID lives on the config.
   * @return {keyof LH.GathererArtifacts}
   */
  get name() {
    let name = this.constructor.name;
    // Rollup will mangle class names in an known way–just trim until `$`.
    if (name.includes('$')) {
      name = name.substr(0, name.indexOf('$'));
    }
    // @ts-expect-error - assume that class name has been added to LH.GathererArtifacts.
    return name;
  }

  /**
   * Legacy method. Called before navigation to target url, roughly corresponds to `startInstrumentation`.
   * @param {LH.Gatherer.PassContext} passContext
   * @return {Promise<LH.Gatherer.PhaseResultNonPromise>}
   */
  async beforePass(passContext) {
    await this.startInstrumentation({...passContext, dependencies: {}});
    await this.startSensitiveInstrumentation({...passContext, dependencies: {}});
  }

  /**
   * Legacy method. Should never be used by a Fraggle Rock gatherer, here for compat only.
   * @param {LH.Gatherer.PassContext} passContext
   * @return {LH.Gatherer.PhaseResult}
   */
  pass(passContext) { }

  /**
   * Legacy method. Roughly corresponds to `stopInstrumentation` or `getArtifact` depending on type of gatherer.
   * @param {LH.Gatherer.PassContext} passContext
   * @param {LH.Gatherer.LoadData} loadData
   * @return {Promise<LH.Gatherer.PhaseResultNonPromise>}
   */
  async afterPass(passContext, loadData) {
    if ('dependencies' in this.meta) {
      throw Error('Gatherer with dependencies should override afterPass');
    }
    await this.stopSensitiveInstrumentation({...passContext, dependencies: {}});
    await this.stopInstrumentation({...passContext, dependencies: {}});
    return this.getArtifact({...passContext, dependencies: {}});
  }
}

/* harmony default export */ const base_gatherer = (FRGatherer);

;// CONCATENATED MODULE: ./node_modules/lighthouse/core/gather/gatherers/devtools-log.js
/**
 * @license Copyright 2021 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

/**
 * @fileoverview
 * This gatherer collects all network and page devtools protocol traffic during the timespan/navigation.
 * This protocol log can be used to recreate the network records using lib/network-recorder.js.
 */



class DevtoolsLog extends base_gatherer {
  static symbol = Symbol('DevtoolsLog');

  /** @type {LH.Gatherer.GathererMeta} */
  meta = {
    symbol: DevtoolsLog.symbol,
    supportedModes: ['timespan', 'navigation'],
  };

  constructor() {
    super();

    this._messageLog = new DevtoolsMessageLog(/^(Page|Network|Target|Runtime)\./);

    /** @param {LH.Protocol.RawEventMessage} e */
    this._onProtocolMessage = e => this._messageLog.record(e);
  }

  /**
   * @param {LH.Gatherer.FRTransitionalContext} passContext
   */
  async startSensitiveInstrumentation({driver}) {
    this._messageLog.reset();
    this._messageLog.beginRecording();

    driver.targetManager.on('protocolevent', this._onProtocolMessage);
    await driver.defaultSession.sendCommand('Page.enable');
  }

  /**
   * @param {LH.Gatherer.FRTransitionalContext} passContext
   */
  async stopSensitiveInstrumentation({driver}) {
    this._messageLog.endRecording();
    driver.targetManager.off('protocolevent', this._onProtocolMessage);
  }

  /**
   * @return {Promise<LH.Artifacts['DevtoolsLog']>}
   */
  async getArtifact() {
    return this._messageLog.messages;
  }
}


/**
 * This class saves all protocol messages whose method match a particular
 * regex filter. Used when saving assets for later analysis by another tool such as
 * Webpagetest.
 */
class DevtoolsMessageLog {
  /**
   * @param {RegExp=} regexFilter
   */
  constructor(regexFilter) {
    this._filter = regexFilter;

    /** @type {LH.DevtoolsLog} */
    this._messages = [];
    this._isRecording = false;
  }

  /**
   * @return {LH.DevtoolsLog}
   */
  get messages() {
    return this._messages;
  }

  reset() {
    this._messages = [];
  }

  beginRecording() {
    this._isRecording = true;
  }

  endRecording() {
    this._isRecording = false;
  }

  /**
   * Records a message if method matches filter and recording has been started.
   * @param {LH.Protocol.RawEventMessage} message
   */
  record(message) {
    // We're not recording, skip the rest of the checks.
    if (!this._isRecording) return;
    // The event was likely an internal puppeteer method that uses Symbols.
    if (typeof message.method !== 'string') return;
    // The event didn't pass our filter, do not record it.
    if (this._filter && !this._filter.test(message.method)) return;

    // We passed all the checks, record the message.
    this._messages.push(message);
  }
}

/* harmony default export */ const devtools_log = (DevtoolsLog);


;// CONCATENATED MODULE: ./node_modules/lighthouse/core/lib/tracehouse/trace-processor.js
/**
 * @license Copyright 2017 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

/**
 * @fileoverview Singluar helper to parse a raw trace and extract the most useful data for
 * various tools. This artifact will take a trace and then:
 *
 * 1. Find the TracingStartedInPage and navigationStart events of our intended tab & frame.
 * 2. Find the firstContentfulPaint and marked firstMeaningfulPaint events
 * 3. Isolate only the trace events from the tab's process (including all threads like compositor)
 *      * Sort those trace events in chronological order (as order isn't guaranteed)
 * 4. Return all those items in one handy bundle.
 */

/** @typedef {Omit<LH.Artifacts.NavigationTraceTimes, 'firstContentfulPaintAllFrames'|'traceEnd'>} TraceNavigationTimesForFrame */
/** @typedef {'lastNavigationStart'|'firstResourceSendRequest'|'lighthouseMarker'|'auto'} TimeOriginDeterminationMethod */
/** @typedef {Omit<LH.TraceEvent, 'name'|'args'> & {name: 'FrameCommittedInBrowser', args: {data: {frame: string, url: string, parent?: string}}}} FrameCommittedEvent */
/** @typedef {Omit<LH.TraceEvent, 'name'|'args'> & {name: 'largestContentfulPaint::Invalidate'|'largestContentfulPaint::Candidate', args: {data?: {size?: number}, frame: string}}} LCPEvent */
/** @typedef {Omit<LH.TraceEvent, 'name'|'args'> & {name: 'largestContentfulPaint::Candidate', args: {data: {size: number}, frame: string}}} LCPCandidateEvent */



const ACCEPTABLE_NAVIGATION_URL_REGEX = /^(chrome|https?):/;

// The ideal input response latency, the time between the input task and the
// first frame of the response.
const BASE_RESPONSE_LATENCY = 16;
// COMPAT: m71+ We added RunTask to `disabled-by-default-lighthouse`
const SCHEDULABLE_TASK_TITLE_LH = 'RunTask';
// m69-70 DoWork is different and we now need RunTask, see https://bugs.chromium.org/p/chromium/issues/detail?id=871204#c11
const SCHEDULABLE_TASK_TITLE_ALT1 = 'ThreadControllerImpl::RunTask';
// In m66-68 refactored to this task title, https://crrev.com/c/883346
const SCHEDULABLE_TASK_TITLE_ALT2 = 'ThreadControllerImpl::DoWork';
// m65 and earlier
const SCHEDULABLE_TASK_TITLE_ALT3 = 'TaskQueueManager::ProcessTaskFromWorkQueue';

class trace_processor_TraceProcessor {
  static get TIMESPAN_MARKER_ID() {
    return '__lighthouseTimespanStart__';
  }

  /**
   * @return {Error}
   */
  static createNoNavstartError() {
    return new Error('No navigationStart event found');
  }

  /**
   * @return {Error}
   */
  static createNoResourceSendRequestError() {
    return new Error('No ResourceSendRequest event found');
  }

  /**
   * @return {Error}
   */
  static createNoTracingStartedError() {
    return new Error('No tracingStartedInBrowser event found');
  }

  /**
   * @return {Error}
   */
  static createNoFirstContentfulPaintError() {
    return new Error('No FirstContentfulPaint event found');
  }

  /**
   * @return {Error}
   */
  static createNoLighthouseMarkerError() {
    return new Error('No Lighthouse timespan marker event found');
  }

  /**
   * Returns true if the event is a navigation start event of a document whose URL seems valid.
   *
   * @param {LH.TraceEvent} event
   * @return {boolean}
   */
  static _isNavigationStartOfInterest(event) {
    if (event.name !== 'navigationStart') return false;
    // COMPAT: support pre-m67 test traces before `args.data` added to all navStart events.
    // TODO: remove next line when old test traces (e.g. progressive-app-m60.json) are updated.
    if (event.args.data?.documentLoaderURL === undefined) return true;
    if (!event.args.data?.documentLoaderURL) return false;
    return ACCEPTABLE_NAVIGATION_URL_REGEX.test(event.args.data.documentLoaderURL);
  }

  /**
   * This method sorts a group of trace events that have the same timestamp. We want to...
   *
   * 1. Put E events first, we finish off our existing events before we start new ones.
   * 2. Order B/X events by their duration, we want parents to start before child events.
   * 3. If we don't have any of this to go on, just use the position in the original array (stable sort).
   *
   * Note that the typical group size with the same timestamp will be quite small (<10 or so events),
   * and the number of groups typically ~1% of total trace, so the same ultra-performance-sensitive consideration
   * given to functions that run on entire traces does not necessarily apply here.
   *
   * @param {number[]} tsGroupIndices
   * @param {number[]} timestampSortedIndices
   * @param {number} indexOfTsGroupIndicesStart
   * @param {LH.TraceEvent[]} traceEvents
   * @return {number[]}
   */
  static _sortTimestampEventGroup(
      tsGroupIndices,
      timestampSortedIndices,
      indexOfTsGroupIndicesStart,
      traceEvents
  ) {
    /*
     * We have two different sets of indices going on here.

     *    1. There's the index for an element of `traceEvents`, referred to here as an `ArrayIndex`.
     *       `timestampSortedIndices` is an array of `ArrayIndex` elements.
     *    2. There's the index for an element of `timestampSortedIndices`, referred to here as a `TsIndex`.
     *       A `TsIndex` is therefore an index to an element which is itself an index.
     *
     * These two helper functions help resolve this layer of indirection.
     * Our final return value is an array of `ArrayIndex` in their final sort order.
     */
    /** @param {number} i */
    const lookupArrayIndexByTsIndex = i => timestampSortedIndices[i];
    /** @param {number} i */
    const lookupEventByTsIndex = i => traceEvents[lookupArrayIndexByTsIndex(i)];

    /** @type {Array<number>} */
    const eEventIndices = [];
    /** @type {Array<number>} */
    const bxEventIndices = [];
    /** @type {Array<number>} */
    const otherEventIndices = [];

    for (const tsIndex of tsGroupIndices) {
      // See comment above for the distinction between `tsIndex` and `arrayIndex`.
      const arrayIndex = lookupArrayIndexByTsIndex(tsIndex);
      const event = lookupEventByTsIndex(tsIndex);
      if (event.ph === 'E') eEventIndices.push(arrayIndex);
      else if (event.ph === 'X' || event.ph === 'B') bxEventIndices.push(arrayIndex);
      else otherEventIndices.push(arrayIndex);
    }

    /** @type {Map<number, number>} */
    const effectiveDuration = new Map();
    for (const index of bxEventIndices) {
      const event = traceEvents[index];
      if (event.ph === 'X') {
        effectiveDuration.set(index, event.dur);
      } else {
        // Find the next available 'E' event *after* the current group of events that matches our name, pid, and tid.
        let duration = Number.MAX_SAFE_INTEGER;
        // To find the next "available" 'E' event, we need to account for nested events of the same name.
        let additionalNestedEventsWithSameName = 0;
        const startIndex = indexOfTsGroupIndicesStart + tsGroupIndices.length;
        for (let j = startIndex; j < timestampSortedIndices.length; j++) {
          const potentialMatchingEvent = lookupEventByTsIndex(j);
          const eventMatches = potentialMatchingEvent.name === event.name &&
            potentialMatchingEvent.pid === event.pid &&
            potentialMatchingEvent.tid === event.tid;

          // The event doesn't match, just skip it.
          if (!eventMatches) continue;

          if (potentialMatchingEvent.ph === 'E' && additionalNestedEventsWithSameName === 0) {
            // It's the next available 'E' event for us, so set the duration and break the loop.
            duration = potentialMatchingEvent.ts - event.ts;
            break;
          } else if (potentialMatchingEvent.ph === 'E') {
            // It's an 'E' event but for a nested event. Decrement our counter and move on.
            additionalNestedEventsWithSameName--;
          } else if (potentialMatchingEvent.ph === 'B') {
            // It's a nested 'B' event. Increment our counter and move on.
            additionalNestedEventsWithSameName++;
          }
        }

        effectiveDuration.set(index, duration);
      }
    }

    bxEventIndices.sort((indexA, indexB) => ((effectiveDuration.get(indexB) || 0) -
      (effectiveDuration.get(indexA) || 0) || (indexA - indexB)));

    otherEventIndices.sort((indexA, indexB) => indexA - indexB);

    return [...eEventIndices, ...bxEventIndices, ...otherEventIndices];
  }

  /**
   * Sorts and filters trace events by timestamp and respecting the nesting structure inherent to
   * parent/child event relationships.
   *
   * @param {LH.TraceEvent[]} traceEvents
   * @param {(e: LH.TraceEvent) => boolean} filter
   */
  static filteredTraceSort(traceEvents, filter) {
    // create an array of the indices that we want to keep
    const indices = [];
    for (let srcIndex = 0; srcIndex < traceEvents.length; srcIndex++) {
      if (filter(traceEvents[srcIndex])) {
        indices.push(srcIndex);
      }
    }

    // Sort by ascending timestamp first.
    indices.sort((indexA, indexB) => traceEvents[indexA].ts - traceEvents[indexB].ts);

    // Now we find groups with equal timestamps and order them by their nesting structure.
    for (let i = 0; i < indices.length - 1; i++) {
      const ts = traceEvents[indices[i]].ts;
      const tsGroupIndices = [i];
      for (let j = i + 1; j < indices.length; j++) {
        if (traceEvents[indices[j]].ts !== ts) break;
        tsGroupIndices.push(j);
      }

      // We didn't find any other events with the same timestamp, just keep going.
      if (tsGroupIndices.length === 1) continue;

      // Sort the group by other criteria and replace our index array with it.
      const finalIndexOrder = trace_processor_TraceProcessor._sortTimestampEventGroup(
        tsGroupIndices,
        indices,
        i,
        traceEvents
      );
      indices.splice(i, finalIndexOrder.length, ...finalIndexOrder);
      // We just sorted this set of identical timestamps, so skip over the rest of the group.
      // -1 because we already have i++.
      i += tsGroupIndices.length - 1;
    }

    // create a new array using the target indices from previous sort step
    const sorted = [];
    for (let i = 0; i < indices.length; i++) {
      sorted.push(traceEvents[indices[i]]);
    }

    return sorted;
  }

  /**
   * There should *always* be at least one top level event, having 0 typically means something is
   * drastically wrong with the trace and we should just give up early and loudly.
   *
   * @param {LH.TraceEvent[]} events
   */
  static assertHasToplevelEvents(events) {
    const hasToplevelTask = events.some(this.isScheduleableTask);
    if (!hasToplevelTask) {
      throw new Error('Could not find any top level events');
    }
  }


  /**
   * Calculate duration at specified percentiles for given population of
   * durations.
   * If one of the durations overlaps the end of the window, the full
   * duration should be in the duration array, but the length not included
   * within the window should be given as `clippedLength`. For instance, if a
   * 50ms duration occurs 10ms before the end of the window, `50` should be in
   * the `durations` array, and `clippedLength` should be set to 40.
   * @see https://docs.google.com/document/d/1b9slyaB9yho91YTOkAQfpCdULFkZM9LqsipcX3t7He8/preview
   * @param {!Array<number>} durations Array of durations, sorted in ascending order.
   * @param {number} totalTime Total time (in ms) of interval containing durations.
   * @param {!Array<number>} percentiles Array of percentiles of interest, in ascending order.
   * @param {number=} clippedLength Optional length clipped from a duration overlapping end of window. Default of 0.
   * @return {!Array<{percentile: number, time: number}>}
   * @private
   */
  static _riskPercentiles(durations, totalTime, percentiles, clippedLength = 0) {
    let busyTime = 0;
    for (let i = 0; i < durations.length; i++) {
      busyTime += durations[i];
    }
    busyTime -= clippedLength;

    // Start with idle time already complete.
    let completedTime = totalTime - busyTime;
    let duration = 0;
    let cdfTime = completedTime;
    const results = [];

    let durationIndex = -1;
    let remainingCount = durations.length + 1;
    if (clippedLength > 0) {
      // If there was a clipped duration, one less in count since one hasn't started yet.
      remainingCount--;
    }

    // Find percentiles of interest, in order.
    for (const percentile of percentiles) {
      // Loop over durations, calculating a CDF value for each until it is above
      // the target percentile.
      const percentileTime = percentile * totalTime;
      while (cdfTime < percentileTime && durationIndex < durations.length - 1) {
        completedTime += duration;
        remainingCount -= (duration < 0 ? -1 : 1);

        if (clippedLength > 0 && clippedLength < durations[durationIndex + 1]) {
          duration = -clippedLength;
          clippedLength = 0;
        } else {
          durationIndex++;
          duration = durations[durationIndex];
        }

        // Calculate value of CDF (multiplied by totalTime) for the end of this duration.
        cdfTime = completedTime + Math.abs(duration) * remainingCount;
      }

      // Negative results are within idle time (0ms wait by definition), so clamp at zero.
      results.push({
        percentile,
        time: Math.max(0, (percentileTime - completedTime) / remainingCount) +
          BASE_RESPONSE_LATENCY,
      });
    }

    return results;
  }

  /**
   * Calculates the maximum queueing time (in ms) of high priority tasks for
   * selected percentiles within a window of the main thread.
   * @see https://docs.google.com/document/d/1b9slyaB9yho91YTOkAQfpCdULFkZM9LqsipcX3t7He8/preview
   * @param {Array<ToplevelEvent>} events
   * @param {number} startTime Start time (in ms relative to timeOrigin) of range of interest.
   * @param {number} endTime End time (in ms relative to timeOrigin) of range of interest.
   * @param {!Array<number>=} percentiles Optional array of percentiles to compute. Defaults to [0.5, 0.75, 0.9, 0.99, 1].
   * @return {!Array<{percentile: number, time: number}>}
   */
  static getRiskToResponsiveness(
      events,
      startTime,
      endTime,
      percentiles = [0.5, 0.75, 0.9, 0.99, 1]
  ) {
    const totalTime = endTime - startTime;
    percentiles.sort((a, b) => a - b);

    const ret = this.getMainThreadTopLevelEventDurations(events, startTime, endTime);
    return this._riskPercentiles(ret.durations, totalTime, percentiles,
        ret.clippedLength);
  }

  /**
   * Provides durations in ms of all main thread top-level events
   * @param {Array<ToplevelEvent>} topLevelEvents
   * @param {number} startTime Optional start time (in ms relative to timeOrigin) of range of interest. Defaults to 0.
   * @param {number} endTime Optional end time (in ms relative to timeOrigin) of range of interest. Defaults to trace end.
   * @return {{durations: Array<number>, clippedLength: number}}
   */
  static getMainThreadTopLevelEventDurations(topLevelEvents, startTime = 0, endTime = Infinity) {
    // Find durations of all slices in range of interest.
    /** @type {Array<number>} */
    const durations = [];
    let clippedLength = 0;

    for (const event of topLevelEvents) {
      if (event.end < startTime || event.start > endTime) {
        continue;
      }

      let duration = event.duration;
      let eventStart = event.start;
      if (eventStart < startTime) {
        // Any part of task before window can be discarded.
        eventStart = startTime;
        duration = event.end - startTime;
      }

      if (event.end > endTime) {
        // Any part of task after window must be clipped but accounted for.
        clippedLength = duration - (endTime - eventStart);
      }

      durations.push(duration);
    }
    durations.sort((a, b) => a - b);

    return {
      durations,
      clippedLength,
    };
  }

  /**
   * Provides the top level events on the main thread with timestamps in ms relative to timeOrigin.
   * start.
   * @param {LH.Artifacts.ProcessedTrace} trace
   * @param {number=} startTime Optional start time (in ms relative to timeOrigin) of range of interest. Defaults to 0.
   * @param {number=} endTime Optional end time (in ms relative to timeOrigin) of range of interest. Defaults to trace end.
   * @return {Array<ToplevelEvent>}
   */
  static getMainThreadTopLevelEvents(trace, startTime = 0, endTime = Infinity) {
    const topLevelEvents = [];
    // note: mainThreadEvents is already sorted by event start
    for (const event of trace.mainThreadEvents) {
      if (!this.isScheduleableTask(event) || !event.dur) continue;

      const start = (event.ts - trace.timeOriginEvt.ts) / 1000;
      const end = (event.ts + event.dur - trace.timeOriginEvt.ts) / 1000;
      if (start > endTime || end < startTime) continue;

      topLevelEvents.push({
        start,
        end,
        duration: event.dur / 1000,
      });
    }

    return topLevelEvents;
  }

  /**
   * @param {LH.TraceEvent[]} events
   * @return {{startingPid: number, frameId: string}}
   */
  static findMainFrameIds(events) {
    // Prefer the newer TracingStartedInBrowser event first, if it exists
    const startedInBrowserEvt = events.find(e => e.name === 'TracingStartedInBrowser');
    if (startedInBrowserEvt?.args.data?.frames) {
      const mainFrame = startedInBrowserEvt.args.data.frames.find(frame => !frame.parent);
      const frameId = mainFrame?.frame;
      const pid = mainFrame?.processId;

      if (pid && frameId) {
        return {
          startingPid: pid,
          frameId,
        };
      }
    }

    // Support legacy browser versions that do not emit TracingStartedInBrowser event.
    // The first TracingStartedInPage in the trace is definitely our renderer thread of interest
    // Beware: the tracingStartedInPage event can appear slightly after a navigationStart
    const startedInPageEvt = events.find(e => e.name === 'TracingStartedInPage');
    if (startedInPageEvt?.args?.data) {
      const frameId = startedInPageEvt.args.data.page;
      if (frameId) {
        return {
          startingPid: startedInPageEvt.pid,
          frameId,
        };
      }
    }

    // Support the case where everything else fails, see https://github.com/GoogleChrome/lighthouse/issues/7118.
    // If we can't find either TracingStarted event, then we'll fallback to the first navStart that
    // looks like it was loading the main frame with a real URL. Because the schema for this event
    // has changed across Chrome versions, we'll be extra defensive about finding this case.
    const navStartEvt = events.find(e =>
      this._isNavigationStartOfInterest(e) && e.args.data?.isLoadingMainFrame
    );
    // Find the first resource that was requested and make sure it agrees on the id.
    const firstResourceSendEvt = events.find(e => e.name === 'ResourceSendRequest');
    // We know that these properties exist if we found the events, but TSC doesn't.
    if (navStartEvt?.args?.data &&
        firstResourceSendEvt &&
        firstResourceSendEvt.pid === navStartEvt.pid &&
        firstResourceSendEvt.tid === navStartEvt.tid) {
      const frameId = navStartEvt.args.frame;
      if (frameId) {
        return {
          startingPid: navStartEvt.pid,
          frameId,
        };
      }
    }

    throw this.createNoTracingStartedError();
  }

  /**
   * If there were any cross-origin navigations, there'll be more than one pid returned
   * @param {{startingPid: number, frameId: string}} mainFrameInfo
   * @param {LH.TraceEvent[]} keyEvents
   * @return {Map<number, number>} Map where keys are process IDs and their values are thread IDs
   */
  static findMainFramePidTids(mainFrameInfo, keyEvents) {
    const frameCommittedEvts = keyEvents.filter(evt =>
      evt.name === 'FrameCommittedInBrowser' &&
      evt.args?.data?.frame === mainFrameInfo.frameId
    );

    // "Modern" traces with a navigation have a FrameCommittedInBrowser event
    const mainFramePids = frameCommittedEvts.length
      ? frameCommittedEvts.map(e => e?.args?.data?.processId)
      // …But old traces and some timespan traces may not. In these situations, we'll assume the
      // primary process ID remains constant (as there were no navigations).
      : [mainFrameInfo.startingPid];

    const pidToTid = new Map();

    mainFramePids.forEach(pid => {
      // While renderer tids are generally predictable, we'll doublecheck it
      const threadNameEvt = keyEvents.find(e =>
        e.cat === '__metadata' &&
        e.pid === pid &&
        e.ph === 'M' &&
        e.name === 'thread_name' &&
        e.args.name === 'CrRendererMain'
      );
      const tid = threadNameEvt?.tid;

      if (!tid) {
        throw new Error('Unable to determine tid for renderer process');
      }

      pidToTid.set(pid, tid);
    });
    return pidToTid;
  }

  /**
   * @param {LH.TraceEvent} evt
   * @return {boolean}
   */
  static isScheduleableTask(evt) {
    return evt.name === SCHEDULABLE_TASK_TITLE_LH ||
    evt.name === SCHEDULABLE_TASK_TITLE_ALT1 ||
    evt.name === SCHEDULABLE_TASK_TITLE_ALT2 ||
    evt.name === SCHEDULABLE_TASK_TITLE_ALT3;
  }

  /**
   * @param {LH.TraceEvent} evt
   * @return {evt is LCPEvent}
   */
  static isLCPEvent(evt) {
    if (evt.name !== 'largestContentfulPaint::Invalidate' &&
        evt.name !== 'largestContentfulPaint::Candidate') return false;
    return Boolean(evt.args?.frame);
  }

  /**
   * @param {LH.TraceEvent} evt
   * @return {evt is LCPCandidateEvent}
   */
  static isLCPCandidateEvent(evt) {
    return Boolean(
      evt.name === 'largestContentfulPaint::Candidate' &&
      evt.args?.frame &&
      evt.args.data &&
      evt.args.data.size !== undefined
    );
  }

  /**
   * Returns the maximum LCP event across all frames in `events`.
   * Sets `invalidated` flag if LCP of every frame is invalidated.
   *
   * LCP's trace event was first introduced in m78. We can't surface an LCP for older Chrome versions.
   * LCP comes from a frame's latest `largestContentfulPaint::Candidate`, but it can be invalidated by a `largestContentfulPaint::Invalidate` event.
   *
   * @param {LH.TraceEvent[]} events
   * @param {LH.TraceEvent} timeOriginEvent
   * @return {{lcp: LCPEvent | undefined, invalidated: boolean}}
   */
  static computeValidLCPAllFrames(events, timeOriginEvent) {
    const lcpEvents = events.filter(this.isLCPEvent).reverse();

    /** @type {Map<string, LCPEvent>} */
    const finalLcpEventsByFrame = new Map();
    for (const e of lcpEvents) {
      if (e.ts <= timeOriginEvent.ts) break;

      // Already found final LCP state of this frame.
      const frame = e.args.frame;
      if (finalLcpEventsByFrame.has(frame)) continue;

      finalLcpEventsByFrame.set(frame, e);
    }

    /** @type {LCPCandidateEvent | undefined} */
    let maxLcpAcrossFrames;
    for (const lcp of finalLcpEventsByFrame.values()) {
      if (!this.isLCPCandidateEvent(lcp)) continue;
      if (!maxLcpAcrossFrames || lcp.args.data.size > maxLcpAcrossFrames.args.data.size) {
        maxLcpAcrossFrames = lcp;
      }
    }

    return {
      lcp: maxLcpAcrossFrames,
      // LCP events were found, but final LCP event of every frame was an invalidate event.
      invalidated: Boolean(!maxLcpAcrossFrames && finalLcpEventsByFrame.size),
    };
  }

  /**
   * @param {Array<{id: string, url: string, parent?: string}>} frames
   * @return {Map<string, string>}
   */
  static resolveRootFrames(frames) {
    /** @type {Map<string, string>} */
    const parentFrames = new Map();
    for (const frame of frames) {
      if (!frame.parent) continue;
      parentFrames.set(frame.id, frame.parent);
    }

    /** @type {Map<string, string>} */
    const frameIdToRootFrameId = new Map();
    for (const frame of frames) {
      let cur = frame.id;
      while (parentFrames.has(cur)) {
        cur = /** @type {string} */ (parentFrames.get(cur));
      }
      if (cur === undefined) {
        throw new Error('Unexpected undefined frameId');
      }
      frameIdToRootFrameId.set(frame.id, cur);
    }

    return frameIdToRootFrameId;
  }

  /**
   * Finds key trace events, identifies main process/thread, and returns timings of trace events
   * in milliseconds since the time origin in addition to the standard microsecond monotonic timestamps.
   * @param {LH.Trace} trace
   * @param {{timeOriginDeterminationMethod?: TimeOriginDeterminationMethod}} [options]
   * @return {LH.Artifacts.ProcessedTrace}
  */
  static processTrace(trace, options) {
    const {timeOriginDeterminationMethod = 'auto'} = options || {};

    // Parse the trace for our key events and sort them by timestamp. Note: sort
    // *must* be stable to keep events correctly nested.
    const keyEvents = this.filteredTraceSort(trace.traceEvents, e => {
      return e.cat.includes('blink.user_timing') ||
          e.cat.includes('loading') ||
          e.cat.includes('devtools.timeline') ||
          e.cat === '__metadata';
    });

    // Find the inspected frame
    const mainFrameInfo = this.findMainFrameIds(keyEvents);
    const rendererPidToTid = this.findMainFramePidTids(mainFrameInfo, keyEvents);

    // Subset all trace events to just our tab's process (incl threads other than main)
    // stable-sort events to keep them correctly nested.
    const processEvents = trace_processor_TraceProcessor
      .filteredTraceSort(trace.traceEvents, e => rendererPidToTid.has(e.pid));

    // TODO(paulirish): filter down frames (and subsequent actions) to the primary process tree & frame tree

    /** @type {Map<string, {id: string, url: string, parent?: string}>} */
    const framesById = new Map();

    // Begin collection of frame tree information with TracingStartedInBrowser,
    // which should be present even without navigations.
    const tracingStartedFrames = keyEvents
        .find(e => e.name === 'TracingStartedInBrowser')?.args?.data?.frames;
    if (tracingStartedFrames) {
      for (const frame of tracingStartedFrames) {
        framesById.set(frame.frame, {
          id: frame.frame,
          url: frame.url,
          parent: frame.parent,
        });
      }
    }

    // Update known frames if FrameCommittedInBrowser events come in, typically
    // with updated `url`, as well as pid, etc. Some traces (like timespans) may
    // not have any committed frames.
    keyEvents
      .filter(/** @return {evt is FrameCommittedEvent} */ evt => {
        return Boolean(
          evt.name === 'FrameCommittedInBrowser' &&
          evt.args.data?.frame &&
          evt.args.data.url
        );
      }).forEach(evt => {
        framesById.set(evt.args.data.frame, {
          id: evt.args.data.frame,
          url: evt.args.data.url,
          parent: evt.args.data.parent,
        });
      });

    const frames = [...framesById.values()];
    const frameIdToRootFrameId = this.resolveRootFrames(frames);

    const inspectedTreeFrameIds = [...frameIdToRootFrameId.entries()]
      .filter(([, rootFrameId]) => rootFrameId === mainFrameInfo.frameId)
      .map(([child]) => child);

    // Filter to just events matching the main frame ID, just to make sure.
    /** @param {LH.TraceEvent} e */
    function associatedToMainFrame(e) {
      const frameId = e.args?.data?.frame || e.args.frame;
      return frameId === mainFrameInfo.frameId;
    }

    /** @param {LH.TraceEvent} e */
    function associatedToAllFrames(e) {
      const frameId = e.args?.data?.frame || e.args.frame;
      return frameId ? inspectedTreeFrameIds.includes(frameId) : false;
    }
    const frameEvents = keyEvents.filter(e => associatedToMainFrame(e));

    // Filter to just events matching the main frame ID or any child frame IDs.
    let frameTreeEvents = [];
    if (frameIdToRootFrameId.has(mainFrameInfo.frameId)) {
      frameTreeEvents = keyEvents.filter(e => associatedToAllFrames(e));
    } else {
      // In practice, there should always be TracingStartedInBrowser/FrameCommittedInBrowser events to
      // define the frame tree. Unfortunately, many test traces do not that frame info due to minification.
      // This ensures there is always a minimal frame tree and events so those tests don't fail.
      lighthouse_logger.warn(
        'TraceProcessor',
        'frameTreeEvents may be incomplete, make sure the trace has frame events'
      );
      frameIdToRootFrameId.set(mainFrameInfo.frameId, mainFrameInfo.frameId);
      frameTreeEvents = frameEvents;
    }

    // Compute our time origin to use for all relative timings.
    const timeOriginEvt = this.computeTimeOrigin(
      {keyEvents, frameEvents, mainFrameInfo: mainFrameInfo},
      timeOriginDeterminationMethod
    );

    const mainThreadEvents = processEvents.filter(e => e.tid === rendererPidToTid.get(e.pid));

    // Ensure our traceEnd reflects all page activity.
    const traceEnd = this.computeTraceEnd(trace.traceEvents, timeOriginEvt);

    // This could be much more concise with object spread, but the consensus is that explicitness is
    // preferred over brevity here.
    return {
      frames,
      mainThreadEvents,
      frameEvents,
      frameTreeEvents,
      processEvents,
      mainFrameInfo,
      timeOriginEvt,
      timings: {
        timeOrigin: 0,
        traceEnd: traceEnd.timing,
      },
      timestamps: {
        timeOrigin: timeOriginEvt.ts,
        traceEnd: traceEnd.timestamp,
      },
      _keyEvents: keyEvents,
      _rendererPidToTid: rendererPidToTid,
    };
  }

  /**
   * Finds key navigation trace events and computes timings of events in milliseconds since the time
   * origin in addition to the standard microsecond monotonic timestamps.
   * @param {LH.Artifacts.ProcessedTrace} processedTrace
   * @return {LH.Artifacts.ProcessedNavigation}
  */
  static processNavigation(processedTrace) {
    const {frameEvents, frameTreeEvents, timeOriginEvt, timings, timestamps} = processedTrace;

    // Compute the key frame timings for the main frame.
    const frameTimings = this.computeNavigationTimingsForFrame(frameEvents, {timeOriginEvt});

    // Compute FCP for all frames.
    const fcpAllFramesEvt = frameTreeEvents.find(
      e => e.name === 'firstContentfulPaint' && e.ts > timeOriginEvt.ts
    );

    if (!fcpAllFramesEvt) {
      throw this.createNoFirstContentfulPaintError();
    }

    // Compute LCP for all frames.
    const lcpAllFramesEvt = this.computeValidLCPAllFrames(frameTreeEvents, timeOriginEvt).lcp;

    /** @param {number} ts */
    const getTiming = ts => (ts - timeOriginEvt.ts) / 1000;
    /** @param {number=} ts */
    const maybeGetTiming = (ts) => ts === undefined ? undefined : getTiming(ts);

    return {
      timings: {
        timeOrigin: timings.timeOrigin,
        firstPaint: frameTimings.timings.firstPaint,
        firstContentfulPaint: frameTimings.timings.firstContentfulPaint,
        firstContentfulPaintAllFrames: getTiming(fcpAllFramesEvt.ts),
        firstMeaningfulPaint: frameTimings.timings.firstMeaningfulPaint,
        largestContentfulPaint: frameTimings.timings.largestContentfulPaint,
        largestContentfulPaintAllFrames: maybeGetTiming(lcpAllFramesEvt?.ts),
        load: frameTimings.timings.load,
        domContentLoaded: frameTimings.timings.domContentLoaded,
        traceEnd: timings.traceEnd,
      },
      timestamps: {
        timeOrigin: timestamps.timeOrigin,
        firstPaint: frameTimings.timestamps.firstPaint,
        firstContentfulPaint: frameTimings.timestamps.firstContentfulPaint,
        firstContentfulPaintAllFrames: fcpAllFramesEvt.ts,
        firstMeaningfulPaint: frameTimings.timestamps.firstMeaningfulPaint,
        largestContentfulPaint: frameTimings.timestamps.largestContentfulPaint,
        largestContentfulPaintAllFrames: lcpAllFramesEvt?.ts,
        load: frameTimings.timestamps.load,
        domContentLoaded: frameTimings.timestamps.domContentLoaded,
        traceEnd: timestamps.traceEnd,
      },
      firstPaintEvt: frameTimings.firstPaintEvt,
      firstContentfulPaintEvt: frameTimings.firstContentfulPaintEvt,
      firstContentfulPaintAllFramesEvt: fcpAllFramesEvt,
      firstMeaningfulPaintEvt: frameTimings.firstMeaningfulPaintEvt,
      largestContentfulPaintEvt: frameTimings.largestContentfulPaintEvt,
      largestContentfulPaintAllFramesEvt: lcpAllFramesEvt,
      loadEvt: frameTimings.loadEvt,
      domContentLoadedEvt: frameTimings.domContentLoadedEvt,
      fmpFellBack: frameTimings.fmpFellBack,
      lcpInvalidated: frameTimings.lcpInvalidated,
    };
  }

  /**
   * Computes the last observable timestamp in a set of trace events.
   *
   * @param {Array<LH.TraceEvent>} events
   * @param {LH.TraceEvent} timeOriginEvt
   * @return {{timing: number, timestamp: number}}
   */
  static computeTraceEnd(events, timeOriginEvt) {
    let maxTs = -Infinity;
    for (const event of events) {
      maxTs = Math.max(event.ts + (event.dur || 0), maxTs);
    }

    return {timestamp: maxTs, timing: (maxTs - timeOriginEvt.ts) / 1000};
  }

  /**
   * Computes the time origin using the specified method.
   *
   *    - firstResourceSendRequest
   *      Uses the time that the very first network request is sent in the main frame.
   *      Eventually should be used in place of lastNavigationStart as the default for navigations.
   *      This method includes the cost of all redirects when evaluating a navigation (which matches lantern behavior).
   *      The only difference between firstResourceSendRequest and the first `navigationStart` is
   *      the unload time of `about:blank` (which is a Lighthouse implementation detail and shouldn't be included).
   *
   *    - lastNavigationStart
   *      Uses the time of the last `navigationStart` event in the main frame.
   *      The historical time origin of Lighthouse from 2016-Present.
   *      This method excludes the cost of client-side redirects when evaluating a navigation.
   *      Can also be skewed by several hundred milliseconds or even seconds when the browser takes a long
   *      time to unload `about:blank`.
   *
   * @param {{keyEvents: Array<LH.TraceEvent>, frameEvents: Array<LH.TraceEvent>, mainFrameInfo: {frameId: string}}} traceEventSubsets
   * @param {TimeOriginDeterminationMethod} method
   * @return {LH.TraceEvent}
   */
  static computeTimeOrigin(traceEventSubsets, method) {
    const lastNavigationStart = () => {
      // Our time origin will be the last frame navigation in the trace
      const frameEvents = traceEventSubsets.frameEvents;
      return frameEvents.filter(this._isNavigationStartOfInterest).pop();
    };

    const lighthouseMarker = () => {
      const frameEvents = traceEventSubsets.keyEvents;
      return frameEvents.find(
        evt =>
          evt.name === 'clock_sync' &&
          evt.args.sync_id === trace_processor_TraceProcessor.TIMESPAN_MARKER_ID
      );
    };

    switch (method) {
      case 'firstResourceSendRequest': {
        // Our time origin will be the timestamp of the first request that's sent in the frame.
        const fetchStart = traceEventSubsets.keyEvents.find(event => {
          if (event.name !== 'ResourceSendRequest') return false;
          const data = event.args.data || {};
          return data.frame === traceEventSubsets.mainFrameInfo.frameId;
        });
        if (!fetchStart) throw this.createNoResourceSendRequestError();
        return fetchStart;
      }
      case 'lastNavigationStart': {
        const navigationStart = lastNavigationStart();
        if (!navigationStart) throw this.createNoNavstartError();
        return navigationStart;
      }
      case 'lighthouseMarker': {
        const marker = lighthouseMarker();
        if (!marker) throw this.createNoLighthouseMarkerError();
        return marker;
      }
      case 'auto': {
        const marker = lighthouseMarker() || lastNavigationStart();
        if (!marker) throw this.createNoNavstartError();
        return marker;
      }
    }
  }

  /**
   * Computes timings of trace events of key trace events in milliseconds since the time origin
   * in addition to the standard microsecond monotonic timestamps.
   * @param {Array<LH.TraceEvent>} frameEvents
   * @param {{timeOriginEvt: LH.TraceEvent}} options
  */
  static computeNavigationTimingsForFrame(frameEvents, options) {
    const {timeOriginEvt} = options;

    // Find our first paint of this frame
    const firstPaint = frameEvents.find(e => e.name === 'firstPaint' && e.ts > timeOriginEvt.ts);

    // FCP will follow at/after the FP. Used in so many places we require it.
    const firstContentfulPaint = frameEvents.find(
      e => e.name === 'firstContentfulPaint' && e.ts > timeOriginEvt.ts
    );

    if (!firstContentfulPaint) {
      throw this.createNoFirstContentfulPaintError();
    }

    // fMP will follow at/after the FP
    let firstMeaningfulPaint = frameEvents.find(
      e => e.name === 'firstMeaningfulPaint' && e.ts > timeOriginEvt.ts
    );
    let fmpFellBack = false;

    // If there was no firstMeaningfulPaint event found in the trace, the network idle detection
    // may have not been triggered before Lighthouse finished tracing.
    // In this case, we'll use the last firstMeaningfulPaintCandidate we can find.
    // However, if no candidates were found (a bogus trace, likely), we fail.
    if (!firstMeaningfulPaint) {
      const fmpCand = 'firstMeaningfulPaintCandidate';
      fmpFellBack = true;
      lighthouse_logger.verbose('TraceProcessor',
        `No firstMeaningfulPaint found, falling back to last ${fmpCand}`);
      const lastCandidate = frameEvents.filter(e => e.name === fmpCand).pop();
      if (!lastCandidate) {
        lighthouse_logger.verbose('TraceProcessor', 'No `firstMeaningfulPaintCandidate` events found in trace');
      }
      firstMeaningfulPaint = lastCandidate;
    }

    // This function accepts events spanning multiple frames, but this usage will only provide events from the main frame.
    const lcpResult = this.computeValidLCPAllFrames(frameEvents, timeOriginEvt);

    const load = frameEvents.find(e => e.name === 'loadEventEnd' && e.ts > timeOriginEvt.ts);
    const domContentLoaded = frameEvents.find(
      e => e.name === 'domContentLoadedEventEnd' && e.ts > timeOriginEvt.ts
    );

    /** @param {{ts: number}=} event */
    const getTimestamp = (event) => event?.ts;
    /** @type {TraceNavigationTimesForFrame} */
    const timestamps = {
      timeOrigin: timeOriginEvt.ts,
      firstPaint: getTimestamp(firstPaint),
      firstContentfulPaint: firstContentfulPaint.ts,
      firstMeaningfulPaint: getTimestamp(firstMeaningfulPaint),
      largestContentfulPaint: getTimestamp(lcpResult.lcp),
      load: getTimestamp(load),
      domContentLoaded: getTimestamp(domContentLoaded),
    };

    /** @param {number} ts */
    const getTiming = ts => (ts - timeOriginEvt.ts) / 1000;
    /** @param {number=} ts */
    const maybeGetTiming = (ts) => ts === undefined ? undefined : getTiming(ts);
    /** @type {TraceNavigationTimesForFrame} */
    const timings = {
      timeOrigin: 0,
      firstPaint: maybeGetTiming(timestamps.firstPaint),
      firstContentfulPaint: getTiming(timestamps.firstContentfulPaint),
      firstMeaningfulPaint: maybeGetTiming(timestamps.firstMeaningfulPaint),
      largestContentfulPaint: maybeGetTiming(timestamps.largestContentfulPaint),
      load: maybeGetTiming(timestamps.load),
      domContentLoaded: maybeGetTiming(timestamps.domContentLoaded),
    };

    return {
      timings,
      timestamps,
      timeOriginEvt: timeOriginEvt,
      firstPaintEvt: firstPaint,
      firstContentfulPaintEvt: firstContentfulPaint,
      firstMeaningfulPaintEvt: firstMeaningfulPaint,
      largestContentfulPaintEvt: lcpResult.lcp,
      loadEvt: load,
      domContentLoadedEvt: domContentLoaded,
      fmpFellBack,
      lcpInvalidated: lcpResult.invalidated,
    };
  }
}



/**
 * @typedef ToplevelEvent
 * @prop {number} start
 * @prop {number} end
 * @prop {number} duration
 */

;// CONCATENATED MODULE: ./node_modules/lighthouse/core/gather/gatherers/trace.js
/**
 * @license Copyright 2021 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

/**
 * @fileoverview
 * This gatherer collects all network and page devtools protocol traffic during the timespan/navigation.
 * This protocol log can be used to recreate the network records using lib/network-recorder.js.
 */




class Trace extends base_gatherer {
  /** @type {LH.Trace} */
  _trace = {traceEvents: []};

  static getDefaultTraceCategories() {
    return [
      // Exclude default categories. We'll be selective to minimize trace size
      '-*',

      // Used instead of 'toplevel' in Chrome 71+
      'disabled-by-default-lighthouse',

      // Used for Cumulative Layout Shift metric
      'loading',

      // All compile/execute events are captured by parent events in devtools.timeline..
      // But the v8 category provides some nice context for only <0.5% of the trace size
      'v8',
      // Same situation here. This category is there for RunMicrotasks only, but with other teams
      // accidentally excluding microtasks, we don't want to assume a parent event will always exist
      'v8.execute',

      // For extracting UserTiming marks/measures
      'blink.user_timing',

      // Not mandatory but not used much
      'blink.console',

      // Most of the events we need are from these two categories
      'devtools.timeline',
      'disabled-by-default-devtools.timeline',

      // Up to 450 (https://goo.gl/rBfhn4) JPGs added to the trace
      'disabled-by-default-devtools.screenshot',

      // This doesn't add its own events, but adds a `stackTrace` property to devtools.timeline events
      'disabled-by-default-devtools.timeline.stack',

      // Additional categories used by devtools. Not used by Lighthouse, but included to facilitate
      // loading traces from Lighthouse into the Performance panel.
      'disabled-by-default-devtools.timeline.frame',
      'latencyInfo',

      // A bug introduced in M92 causes these categories to crash targets on Linux.
      // See https://github.com/GoogleChrome/lighthouse/issues/12835 for full investigation.
      // 'disabled-by-default-v8.cpu_profiler',
    ];
  }

  /**
   * @param {LH.Gatherer.FRProtocolSession} session
   * @return {Promise<LH.Trace>}
   */
  static async endTraceAndCollectEvents(session) {
    /** @type {Array<LH.TraceEvent>} */
    const traceEvents = [];

    /**
     * Listener for when dataCollected events fire for each trace chunk
     * @param {LH.Crdp.Tracing.DataCollectedEvent} data
     */
    const dataListener = function(data) {
      traceEvents.push(...data.value);
    };
    session.on('Tracing.dataCollected', dataListener);

    return new Promise((resolve, reject) => {
      session.once('Tracing.tracingComplete', _ => {
        session.off('Tracing.dataCollected', dataListener);
        resolve({traceEvents});
      });

      session.sendCommand('Tracing.end').catch(reject);
    });
  }

  static symbol = Symbol('Trace');

  /** @type {LH.Gatherer.GathererMeta} */
  meta = {
    symbol: Trace.symbol,
    supportedModes: ['timespan', 'navigation'],
  };

  /**
   * @param {LH.Gatherer.FRTransitionalContext} passContext
   */
  async startSensitiveInstrumentation({driver, gatherMode, settings}) {
    const traceCategories = Trace.getDefaultTraceCategories()
      .concat(settings.additionalTraceCategories || []);
    await driver.defaultSession.sendCommand('Page.enable');
    await driver.defaultSession.sendCommand('Tracing.start', {
      categories: traceCategories.join(','),
      options: 'sampling-frequency=10000', // 1000 is default and too slow.
    });

    if (gatherMode === 'timespan') {
      await driver.defaultSession.sendCommand('Tracing.recordClockSyncMarker',
        {syncId: trace_processor_TraceProcessor.TIMESPAN_MARKER_ID});
    }
  }

  /**
   * @param {LH.Gatherer.FRTransitionalContext} passContext
   */
  async stopSensitiveInstrumentation({driver}) {
    this._trace = await Trace.endTraceAndCollectEvents(driver.defaultSession);
  }

  getArtifact() {
    return this._trace;
  }
}

/* harmony default export */ const gatherers_trace = (Trace);

;// CONCATENATED MODULE: ./node_modules/lighthouse/core/config/constants.js
/**
 * @license Copyright 2018 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

/**
 * Adjustments needed for DevTools network throttling to simulate
 * more realistic network conditions.
 * @see https://crbug.com/721112
 * @see https://docs.google.com/document/d/10lfVdS1iDWCRKQXPfbxEn4Or99D64mvNlugP1AQuFlE/edit
 */
const DEVTOOLS_RTT_ADJUSTMENT_FACTOR = 3.75;
const DEVTOOLS_THROUGHPUT_ADJUSTMENT_FACTOR = 0.9;

const constants_throttling = {
  DEVTOOLS_RTT_ADJUSTMENT_FACTOR,
  DEVTOOLS_THROUGHPUT_ADJUSTMENT_FACTOR,
  // These values align with WebPageTest's definition of "Fast 3G"
  // But offer similar charateristics to roughly the 75th percentile of 4G connections.
  mobileSlow4G: {
    rttMs: 150,
    throughputKbps: 1.6 * 1024,
    requestLatencyMs: 150 * DEVTOOLS_RTT_ADJUSTMENT_FACTOR,
    downloadThroughputKbps: 1.6 * 1024 * DEVTOOLS_THROUGHPUT_ADJUSTMENT_FACTOR,
    uploadThroughputKbps: 750 * DEVTOOLS_THROUGHPUT_ADJUSTMENT_FACTOR,
    cpuSlowdownMultiplier: 4,
  },
  // These values partially align with WebPageTest's definition of "Regular 3G".
  // These values are meant to roughly align with Chrome UX report's 3G definition which are based
  // on HTTP RTT of 300-1400ms and downlink throughput of <700kbps.
  mobileRegular3G: {
    rttMs: 300,
    throughputKbps: 700,
    requestLatencyMs: 300 * DEVTOOLS_RTT_ADJUSTMENT_FACTOR,
    downloadThroughputKbps: 700 * DEVTOOLS_THROUGHPUT_ADJUSTMENT_FACTOR,
    uploadThroughputKbps: 700 * DEVTOOLS_THROUGHPUT_ADJUSTMENT_FACTOR,
    cpuSlowdownMultiplier: 4,
  },
  // Using a "broadband" connection type
  // Corresponds to "Dense 4G 25th percentile" in https://docs.google.com/document/d/1Ft1Bnq9-t4jK5egLSOc28IL4TvR-Tt0se_1faTA4KTY/edit#heading=h.bb7nfy2x9e5v
  desktopDense4G: {
    rttMs: 40,
    throughputKbps: 10 * 1024,
    cpuSlowdownMultiplier: 1,
    requestLatencyMs: 0, // 0 means unset
    downloadThroughputKbps: 0,
    uploadThroughputKbps: 0,
  },
};

/**
 * @type {Required<LH.SharedFlagsSettings['screenEmulation']>}
 */
const MOTOGPOWER_EMULATION_METRICS = {
  mobile: true,
  width: 412,
  height: 823,
  // This value has some interesting ramifications for image-size-responsive, see:
  // https://github.com/GoogleChrome/lighthouse/issues/10741#issuecomment-626903508
  deviceScaleFactor: 1.75,
  disabled: false,
};

/**
 * Desktop metrics adapted from emulated_devices/module.json
 * @type {Required<LH.SharedFlagsSettings['screenEmulation']>}
 */
const DESKTOP_EMULATION_METRICS = {
  mobile: false,
  width: 1350,
  height: 940,
  deviceScaleFactor: 1,
  disabled: false,
};

const screenEmulationMetrics = {
  mobile: MOTOGPOWER_EMULATION_METRICS,
  desktop: DESKTOP_EMULATION_METRICS,
};


const MOTOG4_USERAGENT = 'Mozilla/5.0 (Linux; Android 11; moto g power (2022)) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Mobile Safari/537.36'; // eslint-disable-line max-len
const DESKTOP_USERAGENT = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36'; // eslint-disable-line max-len

const userAgents = {
  mobile: MOTOG4_USERAGENT,
  desktop: DESKTOP_USERAGENT,
};

/** @type {LH.Config.Settings} */
const defaultSettings = {
  output: 'json',
  maxWaitForFcp: 30 * 1000,
  maxWaitForLoad: 45 * 1000,
  pauseAfterFcpMs: 1000,
  pauseAfterLoadMs: 1000,
  networkQuietThresholdMs: 1000,
  cpuQuietThresholdMs: 1000,

  formFactor: 'mobile',
  throttling: constants_throttling.mobileSlow4G,
  throttlingMethod: 'simulate',
  screenEmulation: screenEmulationMetrics.mobile,
  emulatedUserAgent: userAgents.mobile,

  auditMode: false,
  gatherMode: false,
  disableStorageReset: false,
  debugNavigation: false,
  channel: 'node',
  usePassiveGathering: false,
  disableFullPageScreenshot: false,
  skipAboutBlank: false,
  blankPage: 'about:blank',

  // the following settings have no defaults but we still want ensure that `key in settings`
  // in config will work in a typechecked way
  budgets: null,
  locale: 'en-US', // actual default determined by Config using lib/i18n
  blockedUrlPatterns: null,
  additionalTraceCategories: null,
  extraHeaders: null,
  precomputedLanternData: null,
  onlyAudits: null,
  onlyCategories: null,
  skipAudits: null,
};

/** @type {LH.Config.Pass} */
const defaultPassConfig = {
  passName: 'defaultPass',
  loadFailureMode: 'fatal',
  recordTrace: false,
  useThrottling: false,
  pauseAfterFcpMs: 0,
  pauseAfterLoadMs: 0,
  networkQuietThresholdMs: 0,
  cpuQuietThresholdMs: 0,
  blockedUrlPatterns: [],
  blankPage: 'about:blank',
  gatherers: [],
};

/** @type {Required<LH.Config.NavigationJson>} */
const defaultNavigationConfig = {
  id: 'default',
  loadFailureMode: 'fatal',
  disableThrottling: false,
  disableStorageReset: false,
  pauseAfterFcpMs: 0,
  pauseAfterLoadMs: 0,
  networkQuietThresholdMs: 0,
  cpuQuietThresholdMs: 0,
  blockedUrlPatterns: [],
  blankPage: 'about:blank',
  artifacts: [],
};

const nonSimulatedPassConfigOverrides = {
  pauseAfterFcpMs: 5250,
  pauseAfterLoadMs: 5250,
  networkQuietThresholdMs: 5250,
  cpuQuietThresholdMs: 5250,
};



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/gather/driver/environment.js
/**
 * @license Copyright 2021 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */







const environment_UIStrings = {
  /**
   * @description Warning that the host device where Lighthouse is running appears to have a slower
   * CPU than the expected Lighthouse baseline.
   */
  warningSlowHostCpu: 'The tested device appears to have a slower CPU than  ' +
  'Lighthouse expects. This can negatively affect your performance score. Learn more about ' +
  '[calibrating an appropriate CPU slowdown multiplier](https://github.com/GoogleChrome/lighthouse/blob/main/docs/throttling.md#cpu-throttling).',
};

/**
 * We want to warn when the CPU seemed to be at least ~2x weaker than our regular target device.
 * We're starting with a more conservative value that will increase over time to our true target threshold.
 * @see https://github.com/GoogleChrome/lighthouse/blob/ccbc8002fd058770d14e372a8301cc4f7d256414/docs/throttling.md#calibrating-multipliers
 */
const SLOW_CPU_BENCHMARK_INDEX_THRESHOLD = 1000;

const environment_str_ = createIcuMessageFn(import.meta.url, environment_UIStrings);

/**
 * @param {LH.Gatherer.FRProtocolSession} session
 * @return {Promise<LH.Crdp.Browser.GetVersionResponse & {milestone: number}>}
 */
async function getBrowserVersion(session) {
  const status = {msg: 'Getting browser version', id: 'lh:gather:getVersion'};
  lighthouse_logger.time(status, 'verbose');
  const version = await session.sendCommand('Browser.getVersion');
  const match = version.product.match(/\/(\d+)/); // eg 'Chrome/71.0.3577.0'
  const milestone = match ? parseInt(match[1]) : 0;
  lighthouse_logger.timeEnd(status);
  return Object.assign(version, {milestone});
}

/**
 * Computes the benchmark index to get a rough estimate of device class.
 * @param {LH.Gatherer.FRTransitionalDriver['executionContext']} executionContext
 * @return {Promise<number>}
 */
async function getBenchmarkIndex(executionContext) {
  const status = {msg: 'Benchmarking machine', id: 'lh:gather:getBenchmarkIndex'};
  lighthouse_logger.time(status);
  const indexVal = await executionContext.evaluate(pageFunctions.computeBenchmarkIndex, {
    args: [],
  });
  lighthouse_logger.timeEnd(status);
  return indexVal;
}

/**
 * Returns a warning if the host device appeared to be underpowered according to BenchmarkIndex.
 *
 * @param {{settings: LH.Config.Settings; baseArtifacts: Pick<LH.Artifacts, 'BenchmarkIndex'>}} context
 * @return {LH.IcuMessage | undefined}
 */
function getSlowHostCpuWarning(context) {
  const {settings, baseArtifacts} = context;
  const {throttling, throttlingMethod} = settings;
  const defaultThrottling = defaultSettings.throttling;

  // We only want to warn when the user can take an action to fix it.
  // Eventually, this should expand to cover DevTools.
  if (settings.channel !== 'cli') return;

  // Only warn if they are using the default throttling settings.
  const isThrottledMethod = throttlingMethod === 'simulate' || throttlingMethod === 'devtools';
  const isDefaultMultiplier =
    throttling.cpuSlowdownMultiplier === defaultThrottling.cpuSlowdownMultiplier;
  if (!isThrottledMethod || !isDefaultMultiplier) return;

  // Only warn if the device didn't meet the threshold.
  // See https://github.com/GoogleChrome/lighthouse/blob/main/docs/throttling.md#cpu-throttling
  if (baseArtifacts.BenchmarkIndex > SLOW_CPU_BENCHMARK_INDEX_THRESHOLD) return;

  return environment_str_(environment_UIStrings.warningSlowHostCpu);
}

/**
 * @param {{settings: LH.Config.Settings, baseArtifacts: Pick<LH.Artifacts, 'BenchmarkIndex'>}} context
 * @return {Array<LH.IcuMessage>}
 */
function getEnvironmentWarnings(context) {
  return [
    getSlowHostCpuWarning(context),
  ].filter(/** @return {s is LH.IcuMessage} */ s => !!s);
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/gather/driver/storage.js
/**
 * @license Copyright 2021 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */





/* eslint-disable max-len */
const storage_UIStrings = {
  /**
   * @description A warning that previously-saved data may have affected the measured performance and instructions on how to avoid the problem. "locations" will be a list of possible types of data storage locations, e.g. "IndexedDB",  "Local Storage", or "Web SQL".
   * @example {IndexedDB, Local Storage} locations
   */
  warningData: `{locationCount, plural,
    =1 {There may be stored data affecting loading performance in this location: {locations}. ` +
      `Audit this page in an incognito window to prevent those resources ` +
      `from affecting your scores.}
    other {There may be stored data affecting loading ` +
      `performance in these locations: {locations}. ` +
      `Audit this page in an incognito window to prevent those resources ` +
      `from affecting your scores.}
  }`,
  /** A warning that the data in the browser cache may have affected the measured performance because the operation to clear the browser cache timed out. */
  warningCacheTimeout: 'Clearing the browser cache timed out. Try auditing this page again and file a bug if the issue persists.',
  /** A warning that the data on the page's origin may have affected the measured performance because the operation to clear the origin data timed out. */
  warningOriginDataTimeout: 'Clearing the origin data timed out. Try auditing this page again and file a bug if the issue persists.',
};
/* eslint-enable max-len */

const storage_str_ = createIcuMessageFn(import.meta.url, storage_UIStrings);


/**
 * @param {LH.Gatherer.FRProtocolSession} session
 * @param {string} url
 * @return {Promise<LH.IcuMessage[]>}
 */
async function clearDataForOrigin(session, url) {
  const status = {msg: 'Cleaning origin data', id: 'lh:storage:clearDataForOrigin'};
  lighthouse_logger.time(status);

  const warnings = [];

  const origin = new URL(url).origin;

  // Clear some types of storage.
  // Cookies are not cleared, so the user isn't logged out.
  // indexeddb, websql, and localstorage are not cleared to prevent loss of potentially important data.
  //   https://chromedevtools.github.io/debugger-protocol-viewer/tot/Storage/#type-StorageType
  const typesToClear = [
    // 'cookies',
    'file_systems',
    'shader_cache',
    'service_workers',
    'cache_storage',
  ].join(',');

  // `Storage.clearDataForOrigin` is one of our PROTOCOL_TIMEOUT culprits and this command is also
  // run in the context of PAGE_HUNG to cleanup. We'll keep the timeout low and just warn if it fails.
  session.setNextProtocolTimeout(5000);

  try {
    await session.sendCommand('Storage.clearDataForOrigin', {
      origin: origin,
      storageTypes: typesToClear,
    });
  } catch (err) {
    if (/** @type {LH.LighthouseError} */ (err).code === 'PROTOCOL_TIMEOUT') {
      lighthouse_logger.warn('Driver', 'clearDataForOrigin timed out');
      warnings.push(storage_str_(storage_UIStrings.warningOriginDataTimeout));
    } else {
      throw err;
    }
  } finally {
    lighthouse_logger.timeEnd(status);
  }

  return warnings;
}

/**
 * @param {LH.Gatherer.FRProtocolSession} session
 * @param {string} url
 * @return {Promise<LH.IcuMessage | undefined>}
 */
async function getImportantStorageWarning(session, url) {
  const usageData = await session.sendCommand('Storage.getUsageAndQuota', {
    origin: url,
  });
  /** @type {Record<string, string>} */
  const storageTypeNames = {
    local_storage: 'Local Storage',
    indexeddb: 'IndexedDB',
    websql: 'Web SQL',
  };
  const locations = usageData.usageBreakdown
    .filter(usage => usage.usage)
    .map(usage => storageTypeNames[usage.storageType] || '')
    .filter(Boolean);
  if (locations.length) {
    // TODO(#11495): Use Intl.ListFormat with Node 12
    return storage_str_(storage_UIStrings.warningData, {
      locations: locations.join(', '),
      locationCount: locations.length,
    });
  }
}


/**
 * Clear the network cache on disk and in memory.
 * @param {LH.Gatherer.FRProtocolSession} session
 * @return {Promise<LH.IcuMessage[]>}
 */
async function clearBrowserCaches(session) {
  const status = {msg: 'Cleaning browser cache', id: 'lh:storage:clearBrowserCaches'};
  lighthouse_logger.time(status);

  const warnings = [];

  try {
    // Wipe entire disk cache
    await session.sendCommand('Network.clearBrowserCache');
    // Toggle 'Disable Cache' to evict the memory cache
    await session.sendCommand('Network.setCacheDisabled', {cacheDisabled: true});
    await session.sendCommand('Network.setCacheDisabled', {cacheDisabled: false});
  } catch (err) {
    if (/** @type {LH.LighthouseError} */ (err).code === 'PROTOCOL_TIMEOUT') {
      lighthouse_logger.warn('Driver', 'clearBrowserCaches timed out');
      warnings.push(storage_str_(storage_UIStrings.warningCacheTimeout));
    } else {
      throw err;
    }
  } finally {
    lighthouse_logger.timeEnd(status);
  }

  return warnings;
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/lib/emulation.js
/**
 * @license Copyright 2016 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */



const NO_THROTTLING_METRICS = {
  latency: 0,
  downloadThroughput: 0,
  uploadThroughput: 0,
  offline: false,
};

const NO_CPU_THROTTLE_METRICS = {
  rate: 1,
};

/**
 * @param {string} userAgent
 * @param {LH.Config.Settings['formFactor']} formFactor
 * @return {LH.Crdp.Emulation.SetUserAgentOverrideRequest['userAgentMetadata']}
 */
function parseUseragentIntoMetadata(userAgent, formFactor) {
  const match = userAgent.match(/Chrome\/([\d.]+)/); // eg 'Chrome/(71.0.3577.0)'
  const fullVersion = match?.[1] || '99.0.1234.0';
  const [version] = fullVersion.split('.', 1);
  const brands = [
    {brand: 'Chromium', version},
    {brand: 'Google Chrome', version},
    {brand: 'Lighthouse', version: lighthouseVersion},
  ];

  const motoGPowerDetails = {
    platform: 'Android',
    platformVersion: '11.0',
    architecture: '',
    model: 'moto g power (2022)',
  };
  const macDesktopDetails = {
    platform: 'macOS',
    platformVersion: '10.15.7',
    architecture: 'x86',
    model: '',
  };
  const mobile = formFactor === 'mobile';

  return {
    brands,
    fullVersion,
    // Since config users can supply a custom useragent, they likely are emulating something
    // other than Moto G Power and MacOS Desktop.
    // TODO: Determine how to thoughtfully expose this metadata/client-hints configurability.
    ...(mobile ? motoGPowerDetails : macDesktopDetails),
    mobile,
  };
}

/**
 * @param {LH.Gatherer.FRProtocolSession} session
 * @param {LH.Config.Settings} settings
 * @return {Promise<void>}
 */
async function emulate(session, settings) {
  if (settings.emulatedUserAgent !== false) {
    const userAgent = /** @type {string} */ (settings.emulatedUserAgent);
    await session.sendCommand('Network.setUserAgentOverride', {
      userAgent,
      userAgentMetadata: parseUseragentIntoMetadata(userAgent, settings.formFactor),
    });
  }
  // See devtools-entry for one usecase for disabling screenEmulation
  if (settings.screenEmulation.disabled !== true) {
    const {width, height, deviceScaleFactor, mobile} = settings.screenEmulation;
    const params = {width, height, deviceScaleFactor, mobile};
    await session.sendCommand('Emulation.setDeviceMetricsOverride', params);
    await session.sendCommand('Emulation.setTouchEmulationEnabled', {
      enabled: params.mobile,
    });
  }
}

/**
 * Sets the throttling options specified in config settings, clearing existing network throttling if
 * throttlingMethod is not `devtools` (but not CPU throttling, suspected requirement of WPT-compat).
 *
 * @param {LH.Gatherer.FRProtocolSession} session
 * @param {LH.Config.Settings} settings
 * @return {Promise<void>}
 */
async function throttle(session, settings) {
  if (settings.throttlingMethod !== 'devtools') return clearNetworkThrottling(session);

  await Promise.all([
    enableNetworkThrottling(session, settings.throttling),
    enableCPUThrottling(session, settings.throttling),
  ]);
}

/**
 * @param {LH.Gatherer.FRProtocolSession} session
 * @return {Promise<void>}
 */
async function clearThrottling(session) {
  await Promise.all([clearNetworkThrottling(session), clearCPUThrottling(session)]);
}

/**
 * @param {LH.Gatherer.FRProtocolSession} session
 * @param {Required<LH.ThrottlingSettings>} throttlingSettings
 * @return {Promise<void>}
 */
function enableNetworkThrottling(session, throttlingSettings) {
  /** @type {LH.Crdp.Network.EmulateNetworkConditionsRequest} */
  const conditions = {
    offline: false,
    latency: throttlingSettings.requestLatencyMs || 0,
    downloadThroughput: throttlingSettings.downloadThroughputKbps || 0,
    uploadThroughput: throttlingSettings.uploadThroughputKbps || 0,
  };

  // DevTools expects throughput in bytes per second rather than kbps
  conditions.downloadThroughput = Math.floor(conditions.downloadThroughput * 1024 / 8);
  conditions.uploadThroughput = Math.floor(conditions.uploadThroughput * 1024 / 8);
  return session.sendCommand('Network.emulateNetworkConditions', conditions);
}

/**
 * @param {LH.Gatherer.FRProtocolSession} session
 * @return {Promise<void>}
 */
function clearNetworkThrottling(session) {
  return session.sendCommand('Network.emulateNetworkConditions', NO_THROTTLING_METRICS);
}

/**
 * @param {LH.Gatherer.FRProtocolSession} session
 * @param {Required<LH.ThrottlingSettings>} throttlingSettings
 * @return {Promise<void>}
 */
function enableCPUThrottling(session, throttlingSettings) {
  const rate = throttlingSettings.cpuSlowdownMultiplier;
  return session.sendCommand('Emulation.setCPUThrottlingRate', {rate});
}

/**
 * @param {LH.Gatherer.FRProtocolSession} session
 * @return {Promise<void>}
 */
function clearCPUThrottling(session) {
  return session.sendCommand('Emulation.setCPUThrottlingRate', NO_CPU_THROTTLE_METRICS);
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/gather/driver/prepare.js
/**
 * @license Copyright 2021 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */







/**
 * Enables `Debugger` domain to receive async stacktrace information on network request initiators.
 * This is critical for tracking attribution of tasks and performance simulation accuracy.
 * @param {LH.Gatherer.FRProtocolSession} session
 */
async function prepare_enableAsyncStacks(session) {
  const enable = async () => {
    await session.sendCommand('Debugger.enable');
    await session.sendCommand('Debugger.setSkipAllPauses', {skip: true});
    await session.sendCommand('Debugger.setAsyncCallStackDepth', {maxDepth: 8});
  };

  /**
   * Resume any pauses that make it through `setSkipAllPauses`
   */
  function onDebuggerPaused() {
    session.sendCommand('Debugger.resume');
  }

  /**
   * `Debugger.setSkipAllPauses` is reset after every navigation, so retrigger it on main frame navigations.
   * See https://bugs.chromium.org/p/chromium/issues/detail?id=990945&q=setSkipAllPauses&can=2
   * @param {LH.Crdp.Page.FrameNavigatedEvent} event
   */
  function onFrameNavigated(event) {
    if (event.frame.parentId) return;
    enable().catch(err => lighthouse_logger.error('Driver', err));
  }

  session.on('Debugger.paused', onDebuggerPaused);
  session.on('Page.frameNavigated', onFrameNavigated);

  await enable();

  return async () => {
    await session.sendCommand('Debugger.disable');
    session.off('Debugger.paused', onDebuggerPaused);
    session.off('Page.frameNavigated', onFrameNavigated);
  };
}

/**
 * Use a RequestIdleCallback shim for tests run with simulated throttling, so that the deadline can be used without
 * a penalty.
 * @param {LH.Gatherer.FRTransitionalDriver} driver
 * @param {LH.Config.Settings} settings
 * @return {Promise<void>}
 */
async function shimRequestIdleCallbackOnNewDocument(driver, settings) {
  await driver.executionContext.evaluateOnNewDocument(pageFunctions.wrapRequestIdleCallback, {
    args: [settings.throttling.cpuSlowdownMultiplier],
  });
}

/**
 * Dismiss JavaScript dialogs (alert, confirm, prompt), providing a
 * generic promptText in case the dialog is a prompt.
 * @param {LH.Gatherer.FRProtocolSession} session
 * @return {Promise<void>}
 */
async function dismissJavaScriptDialogs(session) {
  session.on('Page.javascriptDialogOpening', data => {
    lighthouse_logger.warn('Driver', `${data.type} dialog opened by the page automatically suppressed.`);

    session
      .sendCommand('Page.handleJavaScriptDialog', {
        accept: true,
        promptText: 'Lighthouse prompt response',
      })
      .catch(err => lighthouse_logger.warn('Driver', err));
  });

  await session.sendCommand('Page.enable');
}

/**
 * Reset the storage and warn if any stored data could be affecting the scores.
 * @param {LH.Gatherer.FRProtocolSession} session
 * @param {string} url
 * @return {Promise<{warnings: Array<LH.IcuMessage>}>}
 */
async function resetStorageForUrl(session, url) {
  /** @type {Array<LH.IcuMessage>} */
  const warnings = [];

  const importantStorageWarning = await getImportantStorageWarning(session, url);
  if (importantStorageWarning) warnings.push(importantStorageWarning);

  const clearDataWarnings = await clearDataForOrigin(session, url);
  warnings.push(...clearDataWarnings);

  const clearCacheWarnings = await clearBrowserCaches(session);
  warnings.push(...clearCacheWarnings);

  return {warnings};
}

/**
 * Prepares a target for observational analysis by setting throttling and network headers/blocked patterns.
 *
 * This method assumes `prepareTargetForNavigationMode` or `prepareTargetForTimespanMode` has already been invoked.
 *
 * @param {LH.Gatherer.FRProtocolSession} session
 * @param {LH.Config.Settings} settings
 * @param {{disableThrottling: boolean, blockedUrlPatterns?: string[]}} options
 */
async function prepareThrottlingAndNetwork(session, settings, options) {
  const status = {msg: 'Preparing network conditions', id: `lh:gather:prepareThrottlingAndNetwork`};
  lighthouse_logger.time(status);

  if (options.disableThrottling) await clearThrottling(session);
  else await throttle(session, settings);

  // Set request blocking before any network activity.
  // No "clearing" is done at the end of the recording since Network.setBlockedURLs([]) will unset all if
  // neccessary at the beginning of the next section.
  const blockedUrls = (options.blockedUrlPatterns || []).concat(
    settings.blockedUrlPatterns || []
  );
  await session.sendCommand('Network.setBlockedURLs', {urls: blockedUrls});

  const headers = settings.extraHeaders;
  if (headers) await session.sendCommand('Network.setExtraHTTPHeaders', {headers});

  lighthouse_logger.timeEnd(status);
}

/**
 * Prepares a target to be analyzed by setting up device emulation (screen/UA, not throttling) and
 * async stack traces for network initiators.
 *
 * @param {LH.Gatherer.FRTransitionalDriver} driver
 * @param {LH.Config.Settings} settings
 */
async function prepareDeviceEmulation(driver, settings) {
  // Enable network domain here so future calls to `emulate()` don't clear cache (https://github.com/GoogleChrome/lighthouse/issues/12631)
  await driver.defaultSession.sendCommand('Network.enable');

  // Emulate our target device screen and user agent.
  await emulate(driver.defaultSession, settings);
}

/**
 * Prepares a target to be analyzed in timespan mode by enabling protocol domains, emulation, and throttling.
 *
 * @param {LH.Gatherer.FRTransitionalDriver} driver
 * @param {LH.Config.Settings} settings
 */
async function prepare_prepareTargetForTimespanMode(driver, settings) {
  const status = {msg: 'Preparing target for timespan mode', id: 'lh:prepare:timespanMode'};
  log.time(status);

  await prepareDeviceEmulation(driver, settings);
  await prepareThrottlingAndNetwork(driver.defaultSession, settings, {
    disableThrottling: false,
    blockedUrlPatterns: undefined,
  });

  log.timeEnd(status);
}

/**
 * Prepares a target to be analyzed in navigation mode by enabling protocol domains, emulation, and new document
 * handlers for global APIs or error handling.
 *
 * This method should be used in combination with `prepareTargetForIndividualNavigation` before a specific navigation occurs.
 *
 * @param {LH.Gatherer.FRTransitionalDriver} driver
 * @param {LH.Config.Settings} settings
 */
async function prepareTargetForNavigationMode(driver, settings) {
  const status = {msg: 'Preparing target for navigation mode', id: 'lh:prepare:navigationMode'};
  lighthouse_logger.time(status);

  await prepareDeviceEmulation(driver, settings);

  // Automatically handle any JavaScript dialogs to prevent a hung renderer.
  await dismissJavaScriptDialogs(driver.defaultSession);

  // Inject our snippet to cache important web platform APIs before they're (possibly) ponyfilled by the page.
  await driver.executionContext.cacheNativesOnNewDocument();

  // Wrap requestIdleCallback so pages under simulation receive the correct rIC deadlines.
  if (settings.throttlingMethod === 'simulate') {
    await shimRequestIdleCallbackOnNewDocument(driver, settings);
  }

  lighthouse_logger.timeEnd(status);
}

/**
 * Prepares a target for a particular navigation by resetting storage and setting network.
 *
 * This method assumes `prepareTargetForNavigationMode` has already been invoked.
 *
 * @param {LH.Gatherer.FRProtocolSession} session
 * @param {LH.Config.Settings} settings
 * @param {Pick<LH.Config.NavigationDefn, 'disableThrottling'|'disableStorageReset'|'blockedUrlPatterns'> & {requestor: LH.NavigationRequestor}} navigation
 * @return {Promise<{warnings: Array<LH.IcuMessage>}>}
 */
async function prepareTargetForIndividualNavigation(session, settings, navigation) {
  const status = {msg: 'Preparing target for navigation', id: 'lh:prepare:navigation'};
  lighthouse_logger.time(status);

  /** @type {Array<LH.IcuMessage>} */
  const warnings = [];

  const {requestor} = navigation;
  const shouldResetStorage =
    !settings.disableStorageReset &&
    !navigation.disableStorageReset &&
    // Without prior knowledge of the destination, we cannot know which URL to clear storage for.
    typeof requestor === 'string';
  if (shouldResetStorage) {
    const requestedUrl = requestor;
    const {warnings: storageWarnings} = await resetStorageForUrl(session, requestedUrl);
    warnings.push(...storageWarnings);
  }

  await prepareThrottlingAndNetwork(session, settings, navigation);

  lighthouse_logger.timeEnd(status);
  return {warnings};
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/legacy/gather/driver.js
/**
 * @license Copyright 2016 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */















// Controls how long to wait for a response after sending a DevTools protocol command.
const DEFAULT_PROTOCOL_TIMEOUT = 30000;

/**
 * @typedef {LH.Protocol.StrictEventEmitter<LH.CrdpEvents>} CrdpEventEmitter
 */

/**
 * @implements {LH.Gatherer.FRTransitionalDriver}
 */
class driver_Driver {
  /**
   * @pri_vate (This should be private, but that makes our tests harder).
   * An event emitter that enforces mapping between Crdp event names and payload types.
   */
  _eventEmitter = /** @type {CrdpEventEmitter} */ (new external_events_.EventEmitter());

  /**
   * @private
   * Used to save network and lifecycle protocol traffic. Just Page and Network are needed.
   */
  _devtoolsLog = new DevtoolsMessageLog(/^(Page|Network|Target|Runtime)\./);

  /**
   * @private
   * @type {Map<string, number>}
   */
  _domainEnabledCounts = new Map();

  /**
   * @type {number}
   * @private
   */
  _nextProtocolTimeout = DEFAULT_PROTOCOL_TIMEOUT;

  online = true;

  // eslint-disable-next-line no-invalid-this
  executionContext = new ExecutionContext(this);

  // eslint-disable-next-line no-invalid-this
  defaultSession = this;

  // eslint-disable-next-line no-invalid-this
  fetcher = new Fetcher(this.defaultSession);

  /**
   * @param {import('./connections/connection.js').Connection} connection
   */
  constructor(connection) {
    this._connection = connection;

    this.on('Target.attachedToTarget', event => {
      this._handleTargetAttached(event).catch(this._handleEventError);
    });

    this.on('Page.frameNavigated', event => {
      // We're only interested in setting autoattach on the root via this method.
      // `_handleTargetAttached` takes care of the recursive piece.
      if (event.frame.parentId) return;

      // Enable auto-attaching to subtargets so we receive iframe information.
      this.sendCommand('Target.setAutoAttach', {
        flatten: true,
        autoAttach: true,
        // Pause targets on startup so we don't miss anything
        waitForDebuggerOnStart: true,
      }).catch(this._handleEventError);
    });

    connection.on('protocolevent', this._handleProtocolEvent.bind(this));

    /** @private @deprecated Only available for plugin backcompat. */
    this.evaluate = this.executionContext.evaluate.bind(this.executionContext);
    /** @private @deprecated Only available for plugin backcompat. */
    this.evaluateAsync = this.executionContext.evaluateAsync.bind(this.executionContext);

    // A shim for sufficient coverage of targetManager functionality. Exposes the target
    // management that legacy driver already handles (see this._handleTargetAttached).
    this.targetManager = {
      rootSession: () => {
        return this.defaultSession;
      },
      /**
       * Bind to *any* protocol event.
       * @param {'protocolevent'} event
       * @param {(payload: LH.Protocol.RawEventMessage) => void} callback
       */
      on: (event, callback) => {
        this._connection.on('protocolevent', callback);
      },
      /**
       * Unbind to *any* protocol event.
       * @param {'protocolevent'} event
       * @param {(payload: LH.Protocol.RawEventMessage) => void} callback
       */
      off: (event, callback) => {
        this._connection.off('protocolevent', callback);
      },
    };
  }

  /** @deprecated - Not available on Fraggle Rock driver. */
  static get traceCategories() {
    return gatherers_trace.getDefaultTraceCategories();
  }

  /**
   * @return {Promise<LH.Crdp.Browser.GetVersionResponse & {milestone: number}>}
   */
  async getBrowserVersion() {
    return getBrowserVersion(this);
  }

  /**
   * @return {Promise<void>}
   */
  async connect() {
    const status = {msg: 'Connecting to browser', id: 'lh:init:connect'};
    lighthouse_logger.time(status);
    await this._connection.connect();
    lighthouse_logger.timeEnd(status);
  }

  /**
   * @return {Promise<void>}
   */
  disconnect() {
    return this._connection.disconnect();
  }

  /** @return {Promise<void>} */
  dispose() {
    return this.disconnect();
  }

  /**
   * Get the browser WebSocket endpoint for devtools protocol clients like Puppeteer.
   * Only works with WebSocket connection, not extension or devtools.
   * @return {Promise<string>}
   */
  wsEndpoint() {
    return this._connection.wsEndpoint();
  }

  /**
   * Bind listeners for protocol events.
   * @template {keyof LH.CrdpEvents} E
   * @param {E} eventName
   * @param {(...args: LH.CrdpEvents[E]) => void} cb
   */
  on(eventName, cb) {
    if (this._eventEmitter === null) {
      throw new Error('connect() must be called before attempting to listen to events.');
    }

    // log event listeners being bound
    lighthouse_logger.formatProtocol('listen for event =>', {method: eventName}, 'verbose');
    this._eventEmitter.on(eventName, cb);
  }

  /**
   * Bind a one-time listener for protocol events. Listener is removed once it
   * has been called.
   * @template {keyof LH.CrdpEvents} E
   * @param {E} eventName
   * @param {(...args: LH.CrdpEvents[E]) => void} cb
   */
  once(eventName, cb) {
    if (this._eventEmitter === null) {
      throw new Error('connect() must be called before attempting to listen to events.');
    }
    // log event listeners being bound
    lighthouse_logger.formatProtocol('listen once for event =>', {method: eventName}, 'verbose');
    this._eventEmitter.once(eventName, cb);
  }

  /**
   * Unbind event listener.
   * @template {keyof LH.CrdpEvents} E
   * @param {E} eventName
   * @param {Function} cb
   */
  off(eventName, cb) {
    if (this._eventEmitter === null) {
      throw new Error('connect() must be called before attempting to remove an event listener.');
    }

    this._eventEmitter.removeListener(eventName, cb);
  }

  /** @param {LH.Crdp.Target.TargetInfo} targetInfo */
  setTargetInfo(targetInfo) { // eslint-disable-line no-unused-vars
    // OOPIF handling in legacy driver is implicit.
  }

  /**
   * Debounce enabling or disabling domains to prevent driver users from
   * stomping on each other. Maintains an internal count of the times a domain
   * has been enabled. Returns false if the command would have no effect (domain
   * is already enabled or disabled), or if command would interfere with another
   * user of that domain (e.g. two gatherers have enabled a domain, both need to
   * disable it for it to be disabled). Returns true otherwise.
   * @param {string} domain
   * @param {string|undefined} sessionId
   * @param {boolean} enable
   * @return {boolean}
   * @private
   */
  _shouldToggleDomain(domain, sessionId, enable) {
    const key = domain + (sessionId || '');
    const enabledCount = this._domainEnabledCounts.get(key) || 0;
    const newCount = enabledCount + (enable ? 1 : -1);
    this._domainEnabledCounts.set(key, Math.max(0, newCount));

    // Switching to enabled or disabled, respectively.
    if ((enable && newCount === 1) || (!enable && newCount === 0)) {
      lighthouse_logger.verbose('Driver', `${domain}.${enable ? 'enable' : 'disable'}`);
      return true;
    } else {
      if (newCount < 0) {
        lighthouse_logger.error('Driver', `Attempted to disable domain '${domain}' when already disabled.`);
      }
      return false;
    }
  }

  /**
   * @return {boolean}
   */
  hasNextProtocolTimeout() {
    return this._nextProtocolTimeout !== DEFAULT_PROTOCOL_TIMEOUT;
  }

  /**
   * @return {number}
   */
  getNextProtocolTimeout() {
    return this._nextProtocolTimeout;
  }

  /**
   * timeout is used for the next call to 'sendCommand'.
   * NOTE: This can eventually be replaced when TypeScript
   * resolves https://github.com/Microsoft/TypeScript/issues/5453.
   * @param {number} timeout
   */
  setNextProtocolTimeout(timeout) {
    this._nextProtocolTimeout = timeout;
  }

  /**
   * @param {LH.Protocol.RawEventMessage} event
   */
  _handleProtocolEvent(event) {
    this._devtoolsLog.record(event);

    // @ts-expect-error TODO(bckenny): tsc can't type event.params correctly yet,
    // typing as property of union instead of narrowing from union of
    // properties. See https://github.com/Microsoft/TypeScript/pull/22348.
    this._eventEmitter.emit(event.method, event.params);
  }

  /**
   * @param {Error} error
   */
  _handleEventError(error) {
    lighthouse_logger.error('Driver', 'Unhandled event error', error.message);
  }

  /**
   * @param {LH.Crdp.Target.AttachedToTargetEvent} event
   */
  async _handleTargetAttached(event) {
    // We're only interested in network requests from iframes for now as those are "part of the page".
    // If it's not an iframe, just resume it and move on.
    if (event.targetInfo.type !== 'iframe') {
      // We suspended the target when we auto-attached, so make sure it goes back to being normal.
      await this.sendCommandToSession('Runtime.runIfWaitingForDebugger', event.sessionId);
      return;
    }

    // Note: This is only reached for _out of process_ iframes (OOPIFs).
    // If the iframe is in the same process as its embedding document, that means they
    // share the same target.

    // A target won't acknowledge/respond to protocol methods (or, at least for Network.enable)
    // until it is resumed. But also we're paranoid about sending Network.enable _slightly_ too late,
    // so we issue that method first. Therefore, we don't await on this serially, but await all at once.
    await Promise.all([
      // Events from subtargets will be stringified and sent back on `Target.receivedMessageFromTarget`.
      // We want to receive information about network requests from iframes, so enable the Network domain.
      this.sendCommandToSession('Network.enable', event.sessionId),
      // We also want to receive information about subtargets of subtargets, so make sure we autoattach recursively.
      this.sendCommandToSession('Target.setAutoAttach', event.sessionId, {
        autoAttach: true,
        flatten: true,
        // Pause targets on startup so we don't miss anything
        waitForDebuggerOnStart: true,
      }),
      // We suspended the target when we auto-attached, so make sure it goes back to being normal.
      this.sendCommandToSession('Runtime.runIfWaitingForDebugger', event.sessionId),
    ]);
  }

  /**
   * Call protocol methods, with a timeout.
   * To configure the timeout for the next call, use 'setNextProtocolTimeout'.
   * If 'sessionId' is undefined, the message is sent to the main session.
   * @template {keyof LH.CrdpCommands} C
   * @param {C} method
   * @param {string|undefined} sessionId
   * @param {LH.CrdpCommands[C]['paramsType']} params
   * @return {Promise<LH.CrdpCommands[C]['returnType']>}
   */
  sendCommandToSession(method, sessionId, ...params) {
    const timeout = this._nextProtocolTimeout;
    this._nextProtocolTimeout = DEFAULT_PROTOCOL_TIMEOUT;

    /** @type {NodeJS.Timer|undefined} */
    let asyncTimeout;
    const timeoutPromise = new Promise((resolve, reject) => {
      if (timeout === Infinity) return;
      // eslint-disable-next-line max-len
      asyncTimeout = setTimeout(reject, timeout, new lh_error_LighthouseError(lh_error_LighthouseError.errors.PROTOCOL_TIMEOUT, {
        protocolMethod: method,
      }));
    });

    return Promise.race([
      this._innerSendCommand(method, sessionId, ...params),
      timeoutPromise,
    ]).finally(() => {
      asyncTimeout && clearTimeout(asyncTimeout);
    });
  }

  /**
   * Alias for 'sendCommandToSession(method, undefined, ...params)'
   * @template {keyof LH.CrdpCommands} C
   * @param {C} method
   * @param {LH.CrdpCommands[C]['paramsType']} params
   * @return {Promise<LH.CrdpCommands[C]['returnType']>}
   */
  sendCommand(method, ...params) {
    return this.sendCommandToSession(method, undefined, ...params);
  }

  /**
   * Call protocol methods.
   * @private
   * @template {keyof LH.CrdpCommands} C
   * @param {C} method
   * @param {string|undefined} sessionId
   * @param {LH.CrdpCommands[C]['paramsType']} params
   * @return {Promise<LH.CrdpCommands[C]['returnType']>}
   */
  _innerSendCommand(method, sessionId, ...params) {
    const domainCommand = /^(\w+)\.(enable|disable)$/.exec(method);
    if (domainCommand) {
      const enable = domainCommand[2] === 'enable';
      if (!this._shouldToggleDomain(domainCommand[1], sessionId, enable)) {
        return Promise.resolve();
      }
    }
    return this._connection.sendCommand(method, sessionId, ...params);
  }

  /**
   * Returns whether a domain is currently enabled.
   * @param {string} domain
   * @return {boolean}
   */
  isDomainEnabled(domain) {
    // Defined, non-zero elements of the domains map are enabled.
    return !!this._domainEnabledCounts.get(domain);
  }

  /**
   * Return the body of the response with the given ID. Rejects if getting the
   * body times out.
   * @param {string} requestId
   * @param {number} [timeout]
   * @return {Promise<string>}
   */
  async getRequestContent(requestId, timeout = 1000) {
    return fetchResponseBodyFromCache(this.defaultSession, requestId, timeout);
  }

  /**
   * @param {{additionalTraceCategories?: string|null}=} settings
   * @return {Promise<void>}
   */
  async beginTrace(settings) {
    const additionalCategories = (settings?.additionalTraceCategories &&
        settings.additionalTraceCategories.split(',')) || [];
    const traceCategories = gatherers_trace.getDefaultTraceCategories().concat(additionalCategories);

    const uniqueCategories = Array.from(new Set(traceCategories));

    // Check any domains that could interfere with or add overhead to the trace.
    if (this.isDomainEnabled('CSS')) {
      throw new Error('CSS domain enabled when starting trace');
    }
    if (this.isDomainEnabled('DOM')) {
      throw new Error('DOM domain enabled when starting trace');
    }

    // Enable Page domain to wait for Page.loadEventFired
    return this.sendCommand('Page.enable')
      .then(_ => this.sendCommand('Tracing.start', {
        categories: uniqueCategories.join(','),
        options: 'sampling-frequency=10000', // 1000 is default and too slow.
      }));
  }

  /**
   * @return {Promise<LH.Trace>}
   */
  endTrace() {
    return gatherers_trace.endTraceAndCollectEvents(this.defaultSession);
  }

  /**
   * Begin recording devtools protocol messages.
   */
  async beginDevtoolsLog() {
    this._disableAsyncStacks = await prepare_enableAsyncStacks(this);
    this._devtoolsLog.reset();
    this._devtoolsLog.beginRecording();
  }

  /**
   * Stop recording to devtoolsLog and return log contents.
   * @return {Promise<LH.DevtoolsLog>}
   */
  async endDevtoolsLog() {
    this._devtoolsLog.endRecording();
    await this._disableAsyncStacks?.();
    return this._devtoolsLog.messages;
  }

  async url() {
    const {frameTree} = await this.sendCommand('Page.getFrameTree');
    return `${frameTree.frame.url}${frameTree.frame.urlFragment || ''}`;
  }
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/lib/arbitrary-equality-map.js
/**
 * @license Copyright 2018 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */



/**
 * @fileoverview This class is designed to allow maps with arbitrary equality functions.
 * It is not meant to be performant and is well-suited to use cases where the number of entries is
 * likely to be small (like computed artifacts).
 */
class ArbitraryEqualityMap {
  constructor() {
    this._equalsFn = ArbitraryEqualityMap.deepEquals;
    /** @type {Array<{key: *, value: *}>} */
    this._entries = [];
  }

  /**
   * @param {function(*,*):boolean} equalsFn
   */
  setEqualityFn(equalsFn) {
    this._equalsFn = equalsFn;
  }

  /**
   * @param {*} key
   * @return {boolean}
   */
  has(key) {
    return this._findIndexOf(key) !== -1;
  }

  /**
   * @param {*} key
   * @return {*}
   */
  get(key) {
    const entry = this._entries[this._findIndexOf(key)];
    return entry?.value;
  }

  /**
   * @param {*} key
   * @param {*} value
   */
  set(key, value) {
    let index = this._findIndexOf(key);
    if (index === -1) index = this._entries.length;
    this._entries[index] = {key, value};
  }

  /**
   * @param {*} key
   * @return {number}
   */
  _findIndexOf(key) {
    for (let i = 0; i < this._entries.length; i++) {
      if (this._equalsFn(key, this._entries[i].key)) return i;
    }

    return -1;
  }

  /**
   * Determines whether two objects are deeply equal. Defers to lodash isEqual, but is kept here for
   * easy usage by consumers.
   * See https://lodash.com/docs/4.17.5#isEqual.
   * @param {*} objA
   * @param {*} objB
   * @return {boolean}
   */
  static deepEquals(objA, objB) {
    return isEqual(objA, objB);
  }
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/computed/computed-artifact.js
/**
 * @license Copyright 2018 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */





/**
 * Decorate computableArtifact with a caching `request()` method which will
 * automatically call `computableArtifact.compute_()` under the hood.
 * @template {{name: string, compute_(dependencies: unknown, context: LH.Artifacts.ComputedContext): Promise<unknown>}} C
 * @template {Array<keyof LH.Util.FirstParamType<C['compute_']>>} K
 * @param {C} computableArtifact
 * @param {(K & ([keyof LH.Util.FirstParamType<C['compute_']>] extends [K[number]] ? unknown : never)) | null} keys List of properties of `dependencies` used by `compute_`; other properties are filtered out. Use `null` to allow all properties. Ensures that only required properties are used for caching result.
 */
function makeComputedArtifact(computableArtifact, keys) {
  // tsc (3.1) has more difficulty with template inter-references in jsdoc, so
  // give types to params and return value the long way, essentially recreating
  // polymorphic-this behavior for C.
  /**
   * Return an automatically cached result from the computed artifact.
   * @param {LH.Util.FirstParamType<C['compute_']>} dependencies
   * @param {LH.Artifacts.ComputedContext} context
   * @return {ReturnType<C['compute_']>}
   */
  const request = (dependencies, context) => {
    const pickedDependencies = keys ?
      Object.fromEntries(keys.map(key => [key, dependencies[key]])) :
      dependencies;

    // NOTE: break immutability solely for this caching-controller function.
    const computedCache = /** @type {Map<string, ArbitraryEqualityMap>} */ (context.computedCache);
    const computedName = computableArtifact.name;

    const cache = computedCache.get(computedName) || new ArbitraryEqualityMap();
    computedCache.set(computedName, cache);

    /** @type {ReturnType<C['compute_']>|undefined} */
    const computed = cache.get(pickedDependencies);
    if (computed) {
      return computed;
    }

    const status = {msg: `Computing artifact: ${computedName}`, id: `lh:computed:${computedName}`};
    lighthouse_logger.time(status, 'verbose');

    const artifactPromise = /** @type {ReturnType<C['compute_']>} */
        (computableArtifact.compute_(pickedDependencies, context));
    cache.set(pickedDependencies, artifactPromise);

    artifactPromise.then(() => lighthouse_logger.timeEnd(status)).catch(() => lighthouse_logger.timeEnd(status));

    return artifactPromise;
  };

  return Object.assign(computableArtifact, {request});
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/lib/dependency-graph/base-node.js
/**
 * @license Copyright 2017 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

/**
 * A union of all types derived from BaseNode, allowing type check discrimination
 * based on `node.type`. If a new node type is created, it should be added here.
 * @typedef {import('./cpu-node.js').CPUNode | import('./network-node.js').NetworkNode} Node
 */

/**
 * @fileoverview This class encapsulates logic for handling resources and tasks used to model the
 * execution dependency graph of the page. A node has a unique identifier and can depend on other
 * nodes/be depended on. The construction of the graph maintains some important invariants that are
 * inherent to the model:
 *
 *    1. The graph is a DAG, there are no cycles.
 *    2. There is always a root node upon which all other nodes eventually depend.
 *
 * This allows particular optimizations in this class so that we do no need to check for cycles as
 * these methods are called and we can always start traversal at the root node.
 */
class BaseNode {
  /**
   * @param {string} id
   */
  constructor(id) {
    this._id = id;
    this._isMainDocument = false;
    /** @type {Node[]} */
    this._dependents = [];
    /** @type {Node[]} */
    this._dependencies = [];
  }

  /**
   * @return {string}
   */
  get id() {
    return this._id;
  }

  /**
   * @return {typeof BaseNode.TYPES[keyof typeof BaseNode.TYPES]}
   */
  get type() {
    throw new Error('Unimplemented');
  }

  /**
   * In microseconds
   * @return {number}
   */
  get startTime() {
    throw new Error('Unimplemented');
  }

  /**
   * In microseconds
   * @return {number}
   */
  get endTime() {
    throw new Error('Unimplemented');
  }

  /**
   * @param {boolean} value
   */
  setIsMainDocument(value) {
    this._isMainDocument = value;
  }

  /**
   * @return {boolean}
   */
  isMainDocument() {
    return this._isMainDocument;
  }

  /**
   * @return {Node[]}
   */
  getDependents() {
    return this._dependents.slice();
  }

  /**
   * @return {number}
   */
  getNumberOfDependents() {
    return this._dependents.length;
  }

  /**
   * @return {Node[]}
   */
  getDependencies() {
    return this._dependencies.slice();
  }

  /**
   * @return {number}
   */
  getNumberOfDependencies() {
    return this._dependencies.length;
  }

  /**
   * @return {Node}
   */
  getRootNode() {
    let rootNode = /** @type {Node} */ (/** @type {BaseNode} */ (this));
    while (rootNode._dependencies.length) {
      rootNode = rootNode._dependencies[0];
    }

    return rootNode;
  }

  /**
   * @param {Node} node
   */
  addDependent(node) {
    node.addDependency(/** @type {Node} */ (/** @type {BaseNode} */ (this)));
  }

  /**
   * @param {Node} node
   */
  addDependency(node) {
    // @ts-expect-error - in checkJs, ts doesn't know that CPUNode and NetworkNode *are* BaseNodes.
    if (node === this) throw new Error('Cannot add dependency on itself');

    if (this._dependencies.includes(node)) {
      return;
    }

    node._dependents.push(/** @type {Node} */ (/** @type {BaseNode} */ (this)));
    this._dependencies.push(node);
  }

  /**
   * @param {Node} node
   */
  removeDependent(node) {
    node.removeDependency(/** @type {Node} */ (/** @type {BaseNode} */ (this)));
  }

  /**
   * @param {Node} node
   */
  removeDependency(node) {
    if (!this._dependencies.includes(node)) {
      return;
    }

    const thisIndex = node._dependents.indexOf(/** @type {Node} */ (/** @type {BaseNode} */(this)));
    node._dependents.splice(thisIndex, 1);
    this._dependencies.splice(this._dependencies.indexOf(node), 1);
  }

  removeAllDependencies() {
    for (const node of this._dependencies.slice()) {
      this.removeDependency(node);
    }
  }

  /**
   * Computes whether the given node is anywhere in the dependency graph of this node.
   * While this method can prevent cycles, it walks the graph and should be used sparingly.
   * Nodes are always considered dependent on themselves for the purposes of cycle detection.
   * @param {BaseNode} node
   * @return {boolean}
   */
  isDependentOn(node) {
    let isDependentOnNode = false;
    this.traverse(currentNode => {
      if (isDependentOnNode) return;
      isDependentOnNode = currentNode === node;
    }, currentNode => {
      // If we've already found the dependency, don't traverse further.
      if (isDependentOnNode) return [];
      // Otherwise, traverse the dependencies.
      return currentNode.getDependencies();
    });

    return isDependentOnNode;
  }

  /**
   * Clones the node's information without adding any dependencies/dependents.
   * @return {Node}
   */
  cloneWithoutRelationships() {
    const node = /** @type {Node} */ (new BaseNode(this.id));
    node.setIsMainDocument(this._isMainDocument);
    return node;
  }

  /**
   * Clones the entire graph connected to this node filtered by the optional predicate. If a node is
   * included by the predicate, all nodes along the paths between the node and the root will be included. If the
   * node this was called on is not included in the resulting filtered graph, the method will throw.
   * @param {function(Node):boolean} [predicate]
   * @return {Node}
   */
  cloneWithRelationships(predicate) {
    const rootNode = this.getRootNode();

    /** @type {Map<string, Node>} */
    const idsToIncludedClones = new Map();

    // Walk down dependents.
    rootNode.traverse(node => {
      if (idsToIncludedClones.has(node.id)) return;

      if (predicate === undefined) {
        // No condition for entry, so clone every node.
        idsToIncludedClones.set(node.id, node.cloneWithoutRelationships());
        return;
      }

      if (predicate(node)) {
        // Node included, so walk back up dependencies, cloning nodes from here back to the root.
        node.traverse(
          node => idsToIncludedClones.set(node.id, node.cloneWithoutRelationships()),
          // Dependencies already cloned have already cloned ancestors, so no need to visit again.
          node => node._dependencies.filter(parent => !idsToIncludedClones.has(parent.id))
        );
      }
    });

    // Copy dependencies between nodes.
    rootNode.traverse(originalNode => {
      const clonedNode = idsToIncludedClones.get(originalNode.id);
      if (!clonedNode) return;

      for (const dependency of originalNode._dependencies) {
        const clonedDependency = idsToIncludedClones.get(dependency.id);
        if (!clonedDependency) throw new Error('Dependency somehow not cloned');
        clonedNode.addDependency(clonedDependency);
      }
    });

    const clonedThisNode = idsToIncludedClones.get(this.id);
    if (!clonedThisNode) throw new Error('Cloned graph missing node');
    return clonedThisNode;
  }

  /**
   * Traverses all connected nodes in BFS order, calling `callback` exactly once
   * on each. `traversalPath` is the shortest (though not necessarily unique)
   * path from `node` to the root of the iteration.
   *
   * The `getNextNodes` function takes a visited node and returns which nodes to
   * visit next. It defaults to returning the node's dependents.
   * @param {(node: Node, traversalPath: Node[]) => void} callback
   * @param {function(Node): Node[]} [getNextNodes]
   */
  traverse(callback, getNextNodes) {
    for (const {node, traversalPath} of this.traverseGenerator(getNextNodes)) {
      callback(node, traversalPath);
    }
  }

  /**
   * @see BaseNode.traverse
   * @param {function(Node): Node[]} [getNextNodes]
   */
  * traverseGenerator(getNextNodes) {
    if (!getNextNodes) {
      getNextNodes = node => node.getDependents();
    }

    /** @type {Node[][]} */
    // @ts-expect-error - only traverses graphs of Node, so force tsc to treat `this` as one
    const queue = [[this]];
    const visited = new Set([this.id]);

    while (queue.length) {
      /** @type {Node[]} */
      // @ts-expect-error - queue has length so it's guaranteed to have an item
      const traversalPath = queue.shift();
      const node = traversalPath[0];
      yield {node, traversalPath};

      for (const nextNode of getNextNodes(node)) {
        if (visited.has(nextNode.id)) continue;
        visited.add(nextNode.id);

        queue.push([nextNode, ...traversalPath]);
      }
    }
  }

  /**
   * Returns whether the given node has a cycle in its dependent graph by performing a DFS.
   * @param {Node} node
   * @param {'dependents'|'dependencies'|'both'} [direction]
   * @return {boolean}
   */
  static hasCycle(node, direction = 'both') {
    // Checking 'both' is the default entrypoint to recursively check both directions
    if (direction === 'both') {
      return BaseNode.hasCycle(node, 'dependents') || BaseNode.hasCycle(node, 'dependencies');
    }

    const visited = new Set();
    /** @type {Node[]} */
    const currentPath = [];
    const toVisit = [node];
    const depthAdded = new Map([[node, 0]]);

    // Keep going while we have nodes to visit in the stack
    while (toVisit.length) {
      // Get the last node in the stack (DFS uses stack, not queue)
      /** @type {Node} */
      // @ts-expect-error - toVisit has length so it's guaranteed to have an item
      const currentNode = toVisit.pop();

      // We've hit a cycle if the node we're visiting is in our current dependency path
      if (currentPath.includes(currentNode)) return true;
      // If we've already visited the node, no need to revisit it
      if (visited.has(currentNode)) continue;

      // Since we're visiting this node, clear out any nodes in our path that we had to backtrack
      // @ts-expect-error
      while (currentPath.length > depthAdded.get(currentNode)) currentPath.pop();

      // Update our data structures to reflect that we're adding this node to our path
      visited.add(currentNode);
      currentPath.push(currentNode);

      // Add all of its dependents to our toVisit stack
      const nodesToExplore = direction === 'dependents' ?
        currentNode._dependents :
        currentNode._dependencies;
      for (const nextNode of nodesToExplore) {
        if (toVisit.includes(nextNode)) continue;
        toVisit.push(nextNode);
        depthAdded.set(nextNode, currentPath.length);
      }
    }

    return false;
  }

  /**
   * @param {Node} node
   * @return {boolean}
   */
  canDependOn(node) {
    return node.startTime <= this.startTime;
  }
}

BaseNode.TYPES = /** @type {{NETWORK: 'network', CPU: 'cpu'}} */({
  NETWORK: 'network',
  CPU: 'cpu',
});



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/lib/dependency-graph/network-node.js
/**
 * @license Copyright 2017 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */





class NetworkNode extends BaseNode {
  /**
   * @param {LH.Artifacts.NetworkRequest} networkRecord
   */
  constructor(networkRecord) {
    super(networkRecord.requestId);
    /** @private */
    this._record = networkRecord;
  }

  get type() {
    return BaseNode.TYPES.NETWORK;
  }

  /**
   * @return {number}
   */
  get startTime() {
    return this._record.networkRequestTime * 1000;
  }

  /**
   * @return {number}
   */
  get endTime() {
    return this._record.networkEndTime * 1000;
  }

  /**
   * @return {LH.Artifacts.NetworkRequest}
   */
  get record() {
    return this._record;
  }

  /**
   * @return {string}
   */
  get initiatorType() {
    return this._record.initiator && this._record.initiator.type;
  }

  /**
   * @return {boolean}
   */
  get fromDiskCache() {
    return !!this._record.fromDiskCache;
  }

  /**
   * @return {boolean}
   */
  get isNonNetworkProtocol() {
    return NetworkRequest.isNonNetworkRequest(this._record);
  }


  /**
   * Returns whether this network record can be downloaded without a TCP connection.
   * During simulation we treat data coming in over a network connection separately from on-device data.
   * @return {boolean}
   */
  get isConnectionless() {
    return this.fromDiskCache || this.isNonNetworkProtocol;
  }

  /**
   * @return {boolean}
   */
  hasRenderBlockingPriority() {
    const priority = this._record.priority;
    const isScript = this._record.resourceType === NetworkRequest.TYPES.Script;
    const isDocument = this._record.resourceType === NetworkRequest.TYPES.Document;
    const isBlockingScript = priority === 'High' && isScript;
    const isBlockingHtmlImport = priority === 'High' && isDocument;
    return priority === 'VeryHigh' || isBlockingScript || isBlockingHtmlImport;
  }

  /**
   * @return {NetworkNode}
   */
  cloneWithoutRelationships() {
    const node = new NetworkNode(this._record);
    node.setIsMainDocument(this._isMainDocument);
    return node;
  }
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/lib/dependency-graph/cpu-node.js
/**
 * @license Copyright 2017 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */




class CPUNode extends BaseNode {
  /**
   * @param {LH.TraceEvent} parentEvent
   * @param {LH.TraceEvent[]=} childEvents
   */
  constructor(parentEvent, childEvents = []) {
    const nodeId = `${parentEvent.tid}.${parentEvent.ts}`;
    super(nodeId);

    this._event = parentEvent;
    this._childEvents = childEvents;
  }

  get type() {
    return BaseNode.TYPES.CPU;
  }

  /**
   * @return {number}
   */
  get startTime() {
    return this._event.ts;
  }

  /**
   * @return {number}
   */
  get endTime() {
    return this._event.ts + this._event.dur;
  }

  /**
   * @return {LH.TraceEvent}
   */
  get event() {
    return this._event;
  }

  /**
   * @return {LH.TraceEvent[]}
   */
  get childEvents() {
    return this._childEvents;
  }

  /**
   * Returns true if this node contains a Layout task.
   * @return {boolean}
   */
  didPerformLayout() {
    return this._childEvents.some(evt => evt.name === 'Layout');
  }

  /**
   * Returns the script URLs that had their EvaluateScript events occur in this task.
   */
  getEvaluateScriptURLs() {
    /** @type {Set<string>} */
    const urls = new Set();
    for (const event of this._childEvents) {
      if (event.name !== 'EvaluateScript') continue;
      if (!event.args.data || !event.args.data.url) continue;
      urls.add(event.args.data.url);
    }

    return urls;
  }

  /**
   * @return {CPUNode}
   */
  cloneWithoutRelationships() {
    return new CPUNode(this._event, this._childEvents);
  }
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/lib/lh-trace-processor.js
/**
 * @license Copyright 2021 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */




// TraceProcessor throws generic errors, but we'd like our special localized and code-specific LighthouseError
// objects to be thrown instead.
class LHTraceProcessor extends trace_processor_TraceProcessor {
  /**
   * @return {Error}
   */
  static createNoNavstartError() {
    return new lh_error_LighthouseError(lh_error_LighthouseError.errors.NO_NAVSTART);
  }

  /**
   * This isn't currently used, but will be when the time origin of trace processing is changed.
   * @see {TraceProcessor.computeTimeOrigin}
   * @see https://github.com/GoogleChrome/lighthouse/pull/11253#discussion_r507985527
   * @return {Error}
   */
  static createNoResourceSendRequestError() {
    return new lh_error_LighthouseError(lh_error_LighthouseError.errors.NO_RESOURCE_REQUEST);
  }

  /**
   * @return {Error}
   */
  static createNoTracingStartedError() {
    return new lh_error_LighthouseError(lh_error_LighthouseError.errors.NO_TRACING_STARTED);
  }

  /**
   * @return {Error}
   */
  static createNoFirstContentfulPaintError() {
    return new lh_error_LighthouseError(lh_error_LighthouseError.errors.NO_FCP);
  }
}

/* harmony default export */ const lh_trace_processor = (LHTraceProcessor);

;// CONCATENATED MODULE: ./node_modules/lighthouse/core/computed/processed-trace.js
/**
 * @license Copyright 2021 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */




class ProcessedTrace {
  /**
    * @param {LH.Trace} trace
    * @return {Promise<LH.Artifacts.ProcessedTrace>}
   */
  static async compute_(trace) {
    return lh_trace_processor.processTrace(trace);
  }
}

const ProcessedTraceComputed = makeComputedArtifact(ProcessedTrace, null);


;// CONCATENATED MODULE: ./node_modules/lighthouse/core/lib/dependency-graph/simulator/network-analyzer.js
/**
 * @license Copyright 2018 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */



const INITIAL_CWD = 14 * 1024;

// Assume that 40% of TTFB was server response time by default for static assets
const DEFAULT_SERVER_RESPONSE_PERCENTAGE = 0.4;

/**
 * For certain resource types, server response time takes up a greater percentage of TTFB (dynamic
 * assets like HTML documents, XHR/API calls, etc)
 * @type {Partial<Record<LH.Crdp.Network.ResourceType, number>>}
 */
const SERVER_RESPONSE_PERCENTAGE_OF_TTFB = {
  Document: 0.9,
  XHR: 0.9,
  Fetch: 0.9,
};

class NetworkAnalyzer {
  /**
   * @return {string}
   */
  static get SUMMARY() {
    return '__SUMMARY__';
  }

  /**
   * @param {LH.Artifacts.NetworkRequest[]} records
   * @return {Map<string, LH.Artifacts.NetworkRequest[]>}
   */
  static groupByOrigin(records) {
    const grouped = new Map();
    records.forEach(item => {
      const key = item.parsedURL.securityOrigin;
      const group = grouped.get(key) || [];
      group.push(item);
      grouped.set(key, group);
    });
    return grouped;
  }

  /**
   * @param {number[]} values
   * @return {Summary}
   */
  static getSummary(values) {
    values.sort((a, b) => a - b);

    return {
      min: values[0],
      max: values[values.length - 1],
      avg: values.reduce((a, b) => a + b, 0) / values.length,
      median: values[Math.floor((values.length - 1) / 2)],
    };
  }

  /**
   * @param {Map<string,number[]>} values
   * @return {Map<string, Summary>}
   */
  static summarize(values) {
    const summaryByKey = new Map();
    const allEstimates = [];
    for (const [key, estimates] of values) {
      summaryByKey.set(key, NetworkAnalyzer.getSummary(estimates));
      allEstimates.push(...estimates);
    }

    summaryByKey.set(NetworkAnalyzer.SUMMARY, NetworkAnalyzer.getSummary(allEstimates));
    return summaryByKey;
  }

  /** @typedef {{record: LH.Artifacts.NetworkRequest, timing: LH.Crdp.Network.ResourceTiming, connectionReused?: boolean}} RequestInfo */

  /**
   * @param {LH.Artifacts.NetworkRequest[]} records
   * @param {(e: RequestInfo) => number | number[] | undefined} iteratee
   * @return {Map<string, number[]>}
   */
  static _estimateValueByOrigin(records, iteratee) {
    const connectionWasReused = NetworkAnalyzer.estimateIfConnectionWasReused(records);
    const groupedByOrigin = NetworkAnalyzer.groupByOrigin(records);

    const estimates = new Map();
    for (const [origin, originRecords] of groupedByOrigin.entries()) {
      /** @type {number[]} */
      let originEstimates = [];

      for (const record of originRecords) {
        const timing = record.timing;
        if (!timing) continue;

        const value = iteratee({
          record,
          timing,
          connectionReused: connectionWasReused.get(record.requestId),
        });
        if (typeof value !== 'undefined') {
          originEstimates = originEstimates.concat(value);
        }
      }

      if (!originEstimates.length) continue;
      estimates.set(origin, originEstimates);
    }

    return estimates;
  }

  /**
   * Estimates the observed RTT to each origin based on how long the TCP handshake took.
   * This is the most accurate and preferred method of measurement when the data is available.
   *
   * @param {LH.Artifacts.NetworkRequest[]} records
   * @return {Map<string, number[]>}
   */
  static _estimateRTTByOriginViaTCPTiming(records) {
    return NetworkAnalyzer._estimateValueByOrigin(records, ({timing, connectionReused}) => {
      if (connectionReused) return;

      // If the request was SSL we get two estimates, one for the SSL negotiation and another for the
      // regular handshake. SSL can also be more than 1 RT but assume False Start was used.
      if (timing.sslStart > 0 && timing.sslEnd > 0) {
        return [timing.connectEnd - timing.sslStart, timing.sslStart - timing.connectStart];
      } else if (timing.connectStart > 0 && timing.connectEnd > 0) {
        return timing.connectEnd - timing.connectStart;
      }
    });
  }

  /**
   * Estimates the observed RTT to each origin based on how long a download took on a fresh connection.
   * NOTE: this will tend to overestimate the actual RTT quite significantly as the download can be
   * slow for other reasons as well such as bandwidth constraints.
   *
   * @param {LH.Artifacts.NetworkRequest[]} records
   * @return {Map<string, number[]>}
   */
  static _estimateRTTByOriginViaDownloadTiming(records) {
    return NetworkAnalyzer._estimateValueByOrigin(records, ({record, timing, connectionReused}) => {
      if (connectionReused) return;
      // Only look at downloads that went past the initial congestion window
      if (record.transferSize <= INITIAL_CWD) return;
      if (!Number.isFinite(timing.receiveHeadersEnd) || timing.receiveHeadersEnd < 0) return;

      // Compute the amount of time downloading everything after the first congestion window took
      const totalTime = record.networkEndTime - record.networkRequestTime;
      const downloadTimeAfterFirstByte = totalTime - timing.receiveHeadersEnd;
      const numberOfRoundTrips = Math.log2(record.transferSize / INITIAL_CWD);

      // Ignore requests that required a high number of round trips since bandwidth starts to play
      // a larger role than latency
      if (numberOfRoundTrips > 5) return;
      return downloadTimeAfterFirstByte / numberOfRoundTrips;
    });
  }

  /**
   * Estimates the observed RTT to each origin based on how long it took until Chrome could
   * start sending the actual request when a new connection was required.
   * NOTE: this will tend to overestimate the actual RTT as the request can be delayed for other
   * reasons as well such as more SSL handshakes if TLS False Start is not enabled.
   *
   * @param {LH.Artifacts.NetworkRequest[]} records
   * @return {Map<string, number[]>}
   */
  static _estimateRTTByOriginViaSendStartTiming(records) {
    return NetworkAnalyzer._estimateValueByOrigin(records, ({record, timing, connectionReused}) => {
      if (connectionReused) return;
      if (!Number.isFinite(timing.sendStart) || timing.sendStart < 0) return;

      // Assume everything before sendStart was just DNS + (SSL)? + TCP handshake
      // 1 RT for DNS, 1 RT (maybe) for SSL, 1 RT for TCP
      let roundTrips = 2;
      if (record.parsedURL.scheme === 'https') roundTrips += 1;
      return timing.sendStart / roundTrips;
    });
  }

  /**
   * Estimates the observed RTT to each origin based on how long it took until Chrome received the
   * headers of the response (~TTFB).
   * NOTE: this is the most inaccurate way to estimate the RTT, but in some environments it's all
   * we have access to :(
   *
   * @param {LH.Artifacts.NetworkRequest[]} records
   * @return {Map<string, number[]>}
   */
  static _estimateRTTByOriginViaHeadersEndTiming(records) {
    return NetworkAnalyzer._estimateValueByOrigin(records, ({record, timing, connectionReused}) => {
      if (!Number.isFinite(timing.receiveHeadersEnd) || timing.receiveHeadersEnd < 0) return;
      if (!record.resourceType) return;

      const serverResponseTimePercentage =
        SERVER_RESPONSE_PERCENTAGE_OF_TTFB[record.resourceType] ||
        DEFAULT_SERVER_RESPONSE_PERCENTAGE;
      const estimatedServerResponseTime = timing.receiveHeadersEnd * serverResponseTimePercentage;

      // When connection was reused...
      // TTFB = 1 RT for request + server response time
      let roundTrips = 1;

      // When connection was fresh...
      // TTFB = DNS + (SSL)? + TCP handshake + 1 RT for request + server response time
      if (!connectionReused) {
        roundTrips += 1; // DNS
        if (record.parsedURL.scheme === 'https') roundTrips += 1; // SSL
        roundTrips += 1; // TCP handshake
      }

      // subtract out our estimated server response time
      return Math.max((timing.receiveHeadersEnd - estimatedServerResponseTime) / roundTrips, 3);
    });
  }

  /**
   * Given the RTT to each origin, estimates the observed server response times.
   *
   * @param {LH.Artifacts.NetworkRequest[]} records
   * @param {Map<string, number>} rttByOrigin
   * @return {Map<string, number[]>}
   */
  static _estimateResponseTimeByOrigin(records, rttByOrigin) {
    return NetworkAnalyzer._estimateValueByOrigin(records, ({record, timing}) => {
      if (!Number.isFinite(timing.receiveHeadersEnd) || timing.receiveHeadersEnd < 0) return;
      if (!Number.isFinite(timing.sendEnd) || timing.sendEnd < 0) return;

      const ttfb = timing.receiveHeadersEnd - timing.sendEnd;
      const origin = record.parsedURL.securityOrigin;
      const rtt = rttByOrigin.get(origin) || rttByOrigin.get(NetworkAnalyzer.SUMMARY) || 0;
      return Math.max(ttfb - rtt, 0);
    });
  }

  /**
   * @param {LH.Artifacts.NetworkRequest[]} records
   * @return {boolean}
   */
  static canTrustConnectionInformation(records) {
    const connectionIdWasStarted = new Map();
    for (const record of records) {
      const started = connectionIdWasStarted.get(record.connectionId) || !record.connectionReused;
      connectionIdWasStarted.set(record.connectionId, started);
    }

    // We probably can't trust the network information if all the connection IDs were the same
    if (connectionIdWasStarted.size <= 1) return false;
    // Or if there were connections that were always reused (a connection had to have started at some point)
    return Array.from(connectionIdWasStarted.values()).every(started => started);
  }

  /**
   * Returns a map of requestId -> connectionReused, estimating the information if the information
   * available in the records themselves appears untrustworthy.
   *
   * @param {LH.Artifacts.NetworkRequest[]} records
   * @param {{forceCoarseEstimates: boolean}} [options]
   * @return {Map<string, boolean>}
   */
  static estimateIfConnectionWasReused(records, options) {
    const {forceCoarseEstimates = false} = options || {};

    // Check if we can trust the connection information coming from the protocol
    if (!forceCoarseEstimates && NetworkAnalyzer.canTrustConnectionInformation(records)) {
      return new Map(records.map(record => [record.requestId, !!record.connectionReused]));
    }

    // Otherwise we're on our own, a record may not have needed a fresh connection if...
    //   - It was not the first request to the domain
    //   - It was H2
    //   - It was after the first request to the domain ended
    const connectionWasReused = new Map();
    const groupedByOrigin = NetworkAnalyzer.groupByOrigin(records);
    for (const [_, originRecords] of groupedByOrigin.entries()) {
      const earliestReusePossible = originRecords
        .map(record => record.networkEndTime)
        .reduce((a, b) => Math.min(a, b), Infinity);

      for (const record of originRecords) {
        connectionWasReused.set(
          record.requestId,
          record.networkRequestTime >= earliestReusePossible || record.protocol === 'h2'
        );
      }

      const firstRecord = originRecords.reduce((a, b) => {
        return a.networkRequestTime > b.networkRequestTime ? b : a;
      });
      connectionWasReused.set(firstRecord.requestId, false);
    }

    return connectionWasReused;
  }

  /**
   * Estimates the RTT to each origin by examining observed network timing information.
   * Attempts to use the most accurate information first and falls back to coarser estimates when it
   * is unavailable.
   *
   * @param {LH.Artifacts.NetworkRequest[]} records
   * @param {RTTEstimateOptions} [options]
   * @return {Map<string, Summary>}
   */
  static estimateRTTByOrigin(records, options) {
    const {
      forceCoarseEstimates = false,
      // coarse estimates include lots of extra time and noise
      // multiply by some factor to deflate the estimates a bit.
      coarseEstimateMultiplier = 0.3,
      useDownloadEstimates = true,
      useSendStartEstimates = true,
      useHeadersEndEstimates = true,
    } = options || {};

    let estimatesByOrigin = NetworkAnalyzer._estimateRTTByOriginViaTCPTiming(records);
    if (!estimatesByOrigin.size || forceCoarseEstimates) {
      estimatesByOrigin = new Map();
      const estimatesViaDownload = NetworkAnalyzer._estimateRTTByOriginViaDownloadTiming(records);
      const estimatesViaSendStart = NetworkAnalyzer._estimateRTTByOriginViaSendStartTiming(records);
      const estimatesViaTTFB = NetworkAnalyzer._estimateRTTByOriginViaHeadersEndTiming(records);

      for (const [origin, estimates] of estimatesViaDownload.entries()) {
        if (!useDownloadEstimates) continue;
        estimatesByOrigin.set(origin, estimates);
      }

      for (const [origin, estimates] of estimatesViaSendStart.entries()) {
        if (!useSendStartEstimates) continue;
        const existing = estimatesByOrigin.get(origin) || [];
        estimatesByOrigin.set(origin, existing.concat(estimates));
      }

      for (const [origin, estimates] of estimatesViaTTFB.entries()) {
        if (!useHeadersEndEstimates) continue;
        const existing = estimatesByOrigin.get(origin) || [];
        estimatesByOrigin.set(origin, existing.concat(estimates));
      }

      for (const estimates of estimatesByOrigin.values()) {
        estimates.forEach((x, i) => (estimates[i] = x * coarseEstimateMultiplier));
      }
    }

    if (!estimatesByOrigin.size) throw new Error('No timing information available');
    return NetworkAnalyzer.summarize(estimatesByOrigin);
  }

  /**
   * Estimates the server response time of each origin. RTT times can be passed in or will be
   * estimated automatically if not provided.
   *
   * @param {LH.Artifacts.NetworkRequest[]} records
   * @param {RTTEstimateOptions & {rttByOrigin?: Map<string, number>}} [options]
   * @return {Map<string, Summary>}
   */
  static estimateServerResponseTimeByOrigin(records, options) {
    let rttByOrigin = (options || {}).rttByOrigin;
    if (!rttByOrigin) {
      /** @type {Map<string, number>} */
      rttByOrigin = new Map();

      const rttSummaryByOrigin = NetworkAnalyzer.estimateRTTByOrigin(records, options);
      for (const [origin, summary] of rttSummaryByOrigin.entries()) {
        rttByOrigin.set(origin, summary.min);
      }
    }

    const estimatesByOrigin = NetworkAnalyzer._estimateResponseTimeByOrigin(records, rttByOrigin);
    return NetworkAnalyzer.summarize(estimatesByOrigin);
  }


  /**
   * Computes the average throughput for the given records in bits/second.
   * Excludes data URI, failed or otherwise incomplete, and cached requests.
   * Returns Infinity if there were no analyzable network records.
   *
   * @param {Array<LH.Artifacts.NetworkRequest>} networkRecords
   * @return {number}
   */
  static estimateThroughput(networkRecords) {
    let totalBytes = 0;

    // We will measure throughput by summing the total bytes downloaded by the total time spent
    // downloading those bytes. We slice up all the network records into start/end boundaries, so
    // it's easier to deal with the gaps in downloading.
    const timeBoundaries = networkRecords.reduce((boundaries, record) => {
      const scheme = record.parsedURL?.scheme;
      // Requests whose bodies didn't come over the network or didn't completely finish will mess
      // with the computation, just skip over them.
      if (scheme === 'data' || record.failed || !record.finished ||
          record.statusCode > 300 || !record.transferSize) {
        return boundaries;
      }

      // If we've made it this far, all the times we need should be valid (i.e. not undefined/-1).
      totalBytes += record.transferSize;
      boundaries.push({time: record.responseHeadersEndTime / 1000, isStart: true});
      boundaries.push({time: record.networkEndTime / 1000, isStart: false});
      return boundaries;
    }, /** @type {Array<{time: number, isStart: boolean}>} */([])).sort((a, b) => a.time - b.time);

    if (!timeBoundaries.length) {
      return Infinity;
    }

    let inflight = 0;
    let currentStart = 0;
    let totalDuration = 0;

    timeBoundaries.forEach(boundary => {
      if (boundary.isStart) {
        if (inflight === 0) {
          // We just ended a quiet period, keep track of when the download period started
          currentStart = boundary.time;
        }
        inflight++;
      } else {
        inflight--;
        if (inflight === 0) {
          // We just entered a quiet period, update our duration with the time we spent downloading
          totalDuration += boundary.time - currentStart;
        }
      }
    });

    return totalBytes * 8 / totalDuration;
  }

  /**
   * @param {Array<LH.Artifacts.NetworkRequest>} records
   * @param {string} resourceUrl
   * @return {LH.Artifacts.NetworkRequest|undefined}
   */
  static findResourceForUrl(records, resourceUrl) {
    // equalWithExcludedFragments is expensive, so check that the resourceUrl starts with the request url first
    return records.find(request =>
      resourceUrl.startsWith(request.url) &&
      url_utils.equalWithExcludedFragments(request.url, resourceUrl)
    );
  }

  /**
   * Resolves redirect chain given a main document.
   * See: {@link NetworkAnalyzer.findResourceForUrl}) for how to retrieve main document.
   *
   * @param {LH.Artifacts.NetworkRequest} request
   * @return {LH.Artifacts.NetworkRequest}
   */
  static resolveRedirects(request) {
    while (request.redirectDestination) request = request.redirectDestination;
    return request;
  }
}



/**
 * @typedef Summary
 * @property {number} min
 * @property {number} max
 * @property {number} avg
 * @property {number} median
 */

/**
 * @typedef RTTEstimateOptions
 * @property {boolean} [forceCoarseEstimates] TCP connection handshake information will be used when available, but in some circumstances this data can be unreliable. This flag exposes an option to ignore the handshake data and use the coarse download/TTFB timing data.
 * @property {number} [coarseEstimateMultiplier] Coarse estimates include lots of extra time and noise multiply by some factor to deflate the estimates a bit.
 * @property {boolean} [useDownloadEstimates] Useful for testing to isolate the different methods of estimation.
 * @property {boolean} [useSendStartEstimates] Useful for testing to isolate the different methods of estimation.
 * @property {boolean} [useHeadersEndEstimates] Useful for testing to isolate the different methods of estimation.
 */

;// CONCATENATED MODULE: ./node_modules/lighthouse/core/computed/page-dependency-graph.js
/**
 * @license Copyright 2017 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */










/** @typedef {import('../lib/dependency-graph/base-node.js').Node} Node */
/** @typedef {Omit<LH.Artifacts['URL'], 'finalDisplayedUrl'>} URLArtifact */

/**
 * @typedef {Object} NetworkNodeOutput
 * @property {Array<NetworkNode>} nodes
 * @property {Map<string, NetworkNode>} idToNodeMap
 * @property {Map<string, Array<NetworkNode>>} urlToNodeMap
 * @property {Map<string, NetworkNode|null>} frameIdToNodeMap
 */

// Shorter tasks have negligible impact on simulation results.
const SIGNIFICANT_DUR_THRESHOLD_MS = 10;

// TODO: video files tend to be enormous and throw off all graph traversals, move this ignore
//    into estimation logic when we use the dependency graph for other purposes.
const IGNORED_MIME_TYPES_REGEX = /^video/;

class PageDependencyGraph {
  /**
   * @param {LH.Artifacts.NetworkRequest} record
   * @return {Array<string>}
   */
  static getNetworkInitiators(record) {
    if (!record.initiator) return [];
    if (record.initiator.url) return [record.initiator.url];
    if (record.initiator.type === 'script') {
      // Script initiators have the stack of callFrames from all functions that led to this request.
      // If async stacks are enabled, then the stack will also have the parent functions that asynchronously
      // led to this request chained in the `parent` property.
      /** @type {Set<string>} */
      const scriptURLs = new Set();
      let stack = record.initiator.stack;
      while (stack) {
        const callFrames = stack.callFrames || [];
        for (const frame of callFrames) {
          if (frame.url) scriptURLs.add(frame.url);
        }

        stack = stack.parent;
      }

      return Array.from(scriptURLs);
    }

    return [];
  }

  /**
   * @param {Array<LH.Artifacts.NetworkRequest>} networkRecords
   * @return {NetworkNodeOutput}
   */
  static getNetworkNodeOutput(networkRecords) {
    /** @type {Array<NetworkNode>} */
    const nodes = [];
    /** @type {Map<string, NetworkNode>} */
    const idToNodeMap = new Map();
    /** @type {Map<string, Array<NetworkNode>>} */
    const urlToNodeMap = new Map();
    /** @type {Map<string, NetworkNode|null>} */
    const frameIdToNodeMap = new Map();

    networkRecords.forEach(record => {
      if (IGNORED_MIME_TYPES_REGEX.test(record.mimeType)) return;

      // Network record requestIds can be duplicated for an unknown reason
      // Suffix all subsequent records with `:duplicate` until it's unique
      // NOTE: This should never happen with modern NetworkRequest library, but old fixtures
      // might still have this issue.
      while (idToNodeMap.has(record.requestId)) {
        record.requestId += ':duplicate';
      }

      const node = new NetworkNode(record);
      nodes.push(node);

      const urlList = urlToNodeMap.get(record.url) || [];
      urlList.push(node);

      idToNodeMap.set(record.requestId, node);
      urlToNodeMap.set(record.url, urlList);

      // If the request was for the root document of an iframe, save an entry in our
      // map so we can link up the task `args.data.frame` dependencies later in graph creation.
      if (record.frameId &&
          record.resourceType === NetworkRequest.TYPES.Document &&
          record.documentURL === record.url) {
        // If there's ever any ambiguity, permanently set the value to `false` to avoid loops in the graph.
        const value = frameIdToNodeMap.has(record.frameId) ? null : node;
        frameIdToNodeMap.set(record.frameId, value);
      }
    });

    return {nodes, idToNodeMap, urlToNodeMap, frameIdToNodeMap};
  }

  /**
   * @param {LH.Artifacts.ProcessedTrace} processedTrace
   * @return {Array<CPUNode>}
   */
  static getCPUNodes({mainThreadEvents}) {
    /** @type {Array<CPUNode>} */
    const nodes = [];
    let i = 0;

    trace_processor_TraceProcessor.assertHasToplevelEvents(mainThreadEvents);

    while (i < mainThreadEvents.length) {
      const evt = mainThreadEvents[i];
      i++;

      // Skip all trace events that aren't schedulable tasks with sizable duration
      if (!trace_processor_TraceProcessor.isScheduleableTask(evt) || !evt.dur) {
        continue;
      }

      // Capture all events that occurred within the task
      /** @type {Array<LH.TraceEvent>} */
      const children = [];
      for (
        const endTime = evt.ts + evt.dur;
        i < mainThreadEvents.length && mainThreadEvents[i].ts < endTime;
        i++
      ) {
        children.push(mainThreadEvents[i]);
      }

      nodes.push(new CPUNode(evt, children));
    }

    return nodes;
  }

  /**
   * @param {NetworkNode} rootNode
   * @param {NetworkNodeOutput} networkNodeOutput
   */
  static linkNetworkNodes(rootNode, networkNodeOutput) {
    networkNodeOutput.nodes.forEach(node => {
      const directInitiatorRequest = node.record.initiatorRequest || rootNode.record;
      const directInitiatorNode =
        networkNodeOutput.idToNodeMap.get(directInitiatorRequest.requestId) || rootNode;
      const canDependOnInitiator =
        !directInitiatorNode.isDependentOn(node) &&
        node.canDependOn(directInitiatorNode);
      const initiators = PageDependencyGraph.getNetworkInitiators(node.record);
      if (initiators.length) {
        initiators.forEach(initiator => {
          const parentCandidates = networkNodeOutput.urlToNodeMap.get(initiator) || [];
          // Only add the edge if the parent is unambiguous with valid timing and isn't circular.
          if (parentCandidates.length === 1 &&
              parentCandidates[0].startTime <= node.startTime &&
              !parentCandidates[0].isDependentOn(node)) {
            node.addDependency(parentCandidates[0]);
          } else if (canDependOnInitiator) {
            directInitiatorNode.addDependent(node);
          }
        });
      } else if (canDependOnInitiator) {
        directInitiatorNode.addDependent(node);
      }

      // Make sure the nodes are attached to the graph if the initiator information was invalid.
      if (node !== rootNode && node.getDependencies().length === 0 && node.canDependOn(rootNode)) {
        node.addDependency(rootNode);
      }

      if (!node.record.redirects) return;

      const redirects = [...node.record.redirects, node.record];
      for (let i = 1; i < redirects.length; i++) {
        const redirectNode = networkNodeOutput.idToNodeMap.get(redirects[i - 1].requestId);
        const actualNode = networkNodeOutput.idToNodeMap.get(redirects[i].requestId);
        if (actualNode && redirectNode) {
          actualNode.addDependency(redirectNode);
        }
      }
    });
  }

  /**
   * @param {Node} rootNode
   * @param {NetworkNodeOutput} networkNodeOutput
   * @param {Array<CPUNode>} cpuNodes
   */
  static linkCPUNodes(rootNode, networkNodeOutput, cpuNodes) {
    /** @type {Set<LH.Crdp.Network.ResourceType|undefined>} */
    const linkableResourceTypes = new Set([
      NetworkRequest.TYPES.XHR, NetworkRequest.TYPES.Fetch, NetworkRequest.TYPES.Script,
    ]);

    /** @param {CPUNode} cpuNode @param {string} reqId */
    function addDependentNetworkRequest(cpuNode, reqId) {
      const networkNode = networkNodeOutput.idToNodeMap.get(reqId);
      if (!networkNode ||
          // Ignore all network nodes that started before this CPU task started
          // A network request that started earlier could not possibly have been started by this task
          networkNode.startTime <= cpuNode.startTime) return;
      const {record} = networkNode;
      const resourceType = record.resourceType ||
        record.redirectDestination?.resourceType;
      if (!linkableResourceTypes.has(resourceType)) {
        // We only link some resources to CPU nodes because we observe LCP simulation
        // regressions when including images, etc.
        return;
      }
      cpuNode.addDependent(networkNode);
    }

    /**
     * If the node has an associated frameId, then create a dependency on the root document request
     * for the frame. The task obviously couldn't have started before the frame was even downloaded.
     *
     * @param {CPUNode} cpuNode
     * @param {string|undefined} frameId
     */
    function addDependencyOnFrame(cpuNode, frameId) {
      if (!frameId) return;
      const networkNode = networkNodeOutput.frameIdToNodeMap.get(frameId);
      if (!networkNode) return;
      // Ignore all network nodes that started after this CPU task started
      // A network request that started after could not possibly be required this task
      if (networkNode.startTime >= cpuNode.startTime) return;
      cpuNode.addDependency(networkNode);
    }

    /** @param {CPUNode} cpuNode @param {string} url */
    function addDependencyOnUrl(cpuNode, url) {
      if (!url) return;
      // Allow network requests that end up to 100ms before the task started
      // Some script evaluations can start before the script finishes downloading
      const minimumAllowableTimeSinceNetworkNodeEnd = -100 * 1000;
      const candidates = networkNodeOutput.urlToNodeMap.get(url) || [];

      let minCandidate = null;
      let minDistance = Infinity;
      // Find the closest request that finished before this CPU task started
      for (const candidate of candidates) {
        // Explicitly ignore all requests that started after this CPU node
        // A network request that started after this task started cannot possibly be a dependency
        if (cpuNode.startTime <= candidate.startTime) return;

        const distance = cpuNode.startTime - candidate.endTime;
        if (distance >= minimumAllowableTimeSinceNetworkNodeEnd && distance < minDistance) {
          minCandidate = candidate;
          minDistance = distance;
        }
      }

      if (!minCandidate) return;
      cpuNode.addDependency(minCandidate);
    }

    /** @type {Map<string, CPUNode>} */
    const timers = new Map();
    for (const node of cpuNodes) {
      for (const evt of node.childEvents) {
        if (!evt.args.data) continue;

        const argsUrl = evt.args.data.url;
        const stackTraceUrls = (evt.args.data.stackTrace || []).map(l => l.url).filter(Boolean);

        switch (evt.name) {
          case 'TimerInstall':
            // @ts-expect-error - 'TimerInstall' event means timerId exists.
            timers.set(evt.args.data.timerId, node);
            stackTraceUrls.forEach(url => addDependencyOnUrl(node, url));
            break;
          case 'TimerFire': {
            // @ts-expect-error - 'TimerFire' event means timerId exists.
            const installer = timers.get(evt.args.data.timerId);
            if (!installer || installer.endTime > node.startTime) break;
            installer.addDependent(node);
            break;
          }

          case 'InvalidateLayout':
          case 'ScheduleStyleRecalculation':
            addDependencyOnFrame(node, evt.args.data.frame);
            stackTraceUrls.forEach(url => addDependencyOnUrl(node, url));
            break;

          case 'EvaluateScript':
            addDependencyOnFrame(node, evt.args.data.frame);
            // @ts-expect-error - 'EvaluateScript' event means argsUrl is defined.
            addDependencyOnUrl(node, argsUrl);
            stackTraceUrls.forEach(url => addDependencyOnUrl(node, url));
            break;

          case 'XHRReadyStateChange':
            // Only create the dependency if the request was completed
            // 'XHRReadyStateChange' event means readyState is defined.
            if (evt.args.data.readyState !== 4) break;

            // @ts-expect-error - 'XHRReadyStateChange' event means argsUrl is defined.
            addDependencyOnUrl(node, argsUrl);
            stackTraceUrls.forEach(url => addDependencyOnUrl(node, url));
            break;

          case 'FunctionCall':
          case 'v8.compile':
            addDependencyOnFrame(node, evt.args.data.frame);
            // @ts-expect-error - events mean argsUrl is defined.
            addDependencyOnUrl(node, argsUrl);
            break;

          case 'ParseAuthorStyleSheet':
            addDependencyOnFrame(node, evt.args.data.frame);
            // @ts-expect-error - 'ParseAuthorStyleSheet' event means styleSheetUrl is defined.
            addDependencyOnUrl(node, evt.args.data.styleSheetUrl);
            break;

          case 'ResourceSendRequest':
            addDependencyOnFrame(node, evt.args.data.frame);
            // @ts-expect-error - 'ResourceSendRequest' event means requestId is defined.
            addDependentNetworkRequest(node, evt.args.data.requestId);
            stackTraceUrls.forEach(url => addDependencyOnUrl(node, url));
            break;
        }
      }

      // Nodes starting before the root node cannot depend on it.
      if (node.getNumberOfDependencies() === 0 && node.canDependOn(rootNode)) {
        node.addDependency(rootNode);
      }
    }

    // Second pass to prune the graph of short tasks.
    const minimumEvtDur = SIGNIFICANT_DUR_THRESHOLD_MS * 1000;
    let foundFirstLayout = false;
    let foundFirstPaint = false;
    let foundFirstParse = false;

    for (const node of cpuNodes) {
      // Don't prune if event is the first ParseHTML/Layout/Paint.
      // See https://github.com/GoogleChrome/lighthouse/issues/9627#issuecomment-526699524 for more.
      let isFirst = false;
      if (!foundFirstLayout && node.childEvents.some(evt => evt.name === 'Layout')) {
        isFirst = foundFirstLayout = true;
      }
      if (!foundFirstPaint && node.childEvents.some(evt => evt.name === 'Paint')) {
        isFirst = foundFirstPaint = true;
      }
      if (!foundFirstParse && node.childEvents.some(evt => evt.name === 'ParseHTML')) {
        isFirst = foundFirstParse = true;
      }

      if (isFirst || node.event.dur >= minimumEvtDur) {
        // Don't prune this node. The task is long / important so it will impact simulation.
        continue;
      }

      // Prune the node if it isn't highly connected to minimize graph size. Rewiring the graph
      // here replaces O(M + N) edges with (M * N) edges, which is fine if either  M or N is at
      // most 1.
      if (node.getNumberOfDependencies() === 1 || node.getNumberOfDependents() <= 1) {
        PageDependencyGraph._pruneNode(node);
      }
    }
  }

  /**
   * Removes the given node from the graph, but retains all paths between its dependencies and
   * dependents.
   * @param {Node} node
   */
  static _pruneNode(node) {
    const dependencies = node.getDependencies();
    const dependents = node.getDependents();
    for (const dependency of dependencies) {
      node.removeDependency(dependency);
      for (const dependent of dependents) {
        dependency.addDependent(dependent);
      }
    }
    for (const dependent of dependents) {
      node.removeDependent(dependent);
    }
  }

  /**
   * @param {LH.Artifacts.ProcessedTrace} processedTrace
   * @param {Array<LH.Artifacts.NetworkRequest>} networkRecords
   * @param {URLArtifact} URL
   * @return {Node}
   */
  static createGraph(processedTrace, networkRecords, URL) {
    const networkNodeOutput = PageDependencyGraph.getNetworkNodeOutput(networkRecords);
    const cpuNodes = PageDependencyGraph.getCPUNodes(processedTrace);
    const {requestedUrl, mainDocumentUrl} = URL;
    if (!requestedUrl) throw new Error('requestedUrl is required to get the root request');
    if (!mainDocumentUrl) throw new Error('mainDocumentUrl is required to get the main resource');

    const rootRequest = NetworkAnalyzer.findResourceForUrl(networkRecords, requestedUrl);
    if (!rootRequest) throw new Error('rootRequest not found');
    const rootNode = networkNodeOutput.idToNodeMap.get(rootRequest.requestId);
    if (!rootNode) throw new Error('rootNode not found');

    const mainDocumentRequest = NetworkAnalyzer.findResourceForUrl(networkRecords, mainDocumentUrl);
    if (!mainDocumentRequest) throw new Error('mainDocumentRequest not found');
    const mainDocumentNode = networkNodeOutput.idToNodeMap.get(mainDocumentRequest.requestId);
    if (!mainDocumentNode) throw new Error('mainDocumentNode not found');

    PageDependencyGraph.linkNetworkNodes(rootNode, networkNodeOutput);
    PageDependencyGraph.linkCPUNodes(rootNode, networkNodeOutput, cpuNodes);
    mainDocumentNode.setIsMainDocument(true);

    if (NetworkNode.hasCycle(rootNode)) {
      throw new Error('Invalid dependency graph created, cycle detected');
    }

    return rootNode;
  }

  /**
   *
   * @param {Node} rootNode
   */
  static printGraph(rootNode, widthInCharacters = 100) {
    /** @param {string} str @param {number} target */
    function padRight(str, target, padChar = ' ') {
      return str + padChar.repeat(Math.max(target - str.length, 0));
    }

    /** @type {Array<Node>} */
    const nodes = [];
    rootNode.traverse(node => nodes.push(node));
    nodes.sort((a, b) => a.startTime - b.startTime);

    const min = nodes[0].startTime;
    const max = nodes.reduce((max, node) => Math.max(max, node.endTime), 0);

    const totalTime = max - min;
    const timePerCharacter = totalTime / widthInCharacters;
    nodes.forEach(node => {
      const offset = Math.round((node.startTime - min) / timePerCharacter);
      const length = Math.ceil((node.endTime - node.startTime) / timePerCharacter);
      const bar = padRight('', offset) + padRight('', length, '=');

      // @ts-expect-error -- disambiguate displayName from across possible Node types.
      const displayName = node.record ? node.record.url : node.type;
      // eslint-disable-next-line
      console.log(padRight(bar, widthInCharacters), `| ${displayName.slice(0, 30)}`);
    });
  }

  /**
   * Recalculate `artifacts.URL` for clients that don't provide it.
   *
   * @param {LH.DevtoolsLog} devtoolsLog
   * @param {LH.Artifacts.NetworkRequest[]} networkRecords
   * @param {LH.Artifacts.ProcessedTrace} processedTrace
   * @return {URLArtifact}
   */
  static getDocumentUrls(devtoolsLog, networkRecords, processedTrace) {
    const mainFrameId = processedTrace.mainFrameInfo.frameId;

    /** @type {string|undefined} */
    let requestedUrl;
    /** @type {string|undefined} */
    let mainDocumentUrl;
    for (const event of devtoolsLog) {
      if (event.method === 'Page.frameNavigated' && event.params.frame.id === mainFrameId) {
        const {url} = event.params.frame;
        // Only set requestedUrl on the first main frame navigation.
        if (!requestedUrl) requestedUrl = url;
        mainDocumentUrl = url;
      }
    }
    if (!requestedUrl || !mainDocumentUrl) throw new Error('No main frame navigations found');

    const initialRequest = NetworkAnalyzer.findResourceForUrl(networkRecords, requestedUrl);
    if (initialRequest?.redirects?.length) requestedUrl = initialRequest.redirects[0].url;

    return {requestedUrl, mainDocumentUrl};
  }

  /**
   * @param {{trace: LH.Trace, devtoolsLog: LH.DevtoolsLog, URL: LH.Artifacts['URL']}} data
   * @param {LH.Artifacts.ComputedContext} context
   * @return {Promise<Node>}
   */
  static async compute_(data, context) {
    const {trace, devtoolsLog} = data;
    const [processedTrace, networkRecords] = await Promise.all([
      ProcessedTraceComputed.request(trace, context),
      NetworkRecordsComputed.request(devtoolsLog, context),
    ]);

    // COMPAT: Backport for pre-10.0 clients that don't pass the URL artifact here (e.g. pubads).
    // Calculates the URL artifact from the processed trace and DT log.
    const URL = data.URL ||
      PageDependencyGraph.getDocumentUrls(devtoolsLog, networkRecords, processedTrace);

    return PageDependencyGraph.createGraph(processedTrace, networkRecords, URL);
  }
}

const PageDependencyGraphComputed =
  makeComputedArtifact(PageDependencyGraph, ['devtoolsLog', 'trace', 'URL']);


;// CONCATENATED MODULE: ./node_modules/lighthouse/core/lib/network-recorder.js
/**
 * @license Copyright 2016 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */








/**
 * @typedef {{
 *   requeststarted: [NetworkRequest],
 *   requestfinished: [NetworkRequest],
 * }} NetworkRecorderEventMap
 */
/** @typedef {LH.Protocol.StrictEventEmitterClass<NetworkRecorderEventMap>} RequestEmitter */
const RequestEventEmitter = /** @type {RequestEmitter} */ (external_events_.EventEmitter);

class NetworkRecorder extends RequestEventEmitter {
  /**
   * Creates an instance of NetworkRecorder.
   */
  constructor() {
    super();

    /** @type {NetworkRequest[]} */
    this._records = [];
    /** @type {Map<string, NetworkRequest>} */
    this._recordsById = new Map();
    /** @type {string|null|undefined} */
    this._mainSessionId = null;
  }

  /**
   * Returns the array of raw network request data without finalizing the initiator and
   * redirect chain.
   * @return {Array<NetworkRequest>}
   */
  getRawRecords() {
    return Array.from(this._records);
  }

  /**
   * Listener for the DevTools SDK NetworkManager's RequestStarted event, which includes both
   * web socket and normal request creation.
   * @param {NetworkRequest} request
   * @private
   */
  onRequestStarted(request) {
    this._records.push(request);
    this._recordsById.set(request.requestId, request);

    this.emit('requeststarted', request);
  }

  /**
   * Listener for the DevTools SDK NetworkManager's RequestFinished event, which includes
   * request finish, failure, and redirect, as well as the closing of web sockets.
   * @param {NetworkRequest} request
   * @private
   */
  onRequestFinished(request) {
    this.emit('requestfinished', request);
  }

  // The below methods proxy network data into the NetworkRequest object which mimics the
  // DevTools SDK network layer.

  /**
   * @param {{params: LH.Crdp.Network.RequestWillBeSentEvent, sessionId?: string}} event
   */
  onRequestWillBeSent(event) {
    const data = event.params;
    const originalRequest = this._findRealRequestAndSetSession(data.requestId, event.sessionId);
    // This is a simple new request, create the NetworkRequest object and finish.
    if (!originalRequest) {
      const request = new NetworkRequest();
      request.onRequestWillBeSent(data);
      request.sessionId = event.sessionId;
      this.onRequestStarted(request);
      lighthouse_logger.verbose('network', `request will be sent to ${request.url}`);
      return;
    }

    // TODO: beacon to Sentry, https://github.com/GoogleChrome/lighthouse/issues/7041
    if (!data.redirectResponse) {
      return;
    }

    // On redirect, another requestWillBeSent message is fired for the same requestId.
    // Update/finish the previous network request and create a new one for the redirect.
    const modifiedData = {
      ...data,
      // Copy over the initiator as well to match DevTools behavior
      initiator: originalRequest.initiator,
      requestId: `${originalRequest.requestId}:redirect`,
    };
    const redirectedRequest = new NetworkRequest();

    redirectedRequest.onRequestWillBeSent(modifiedData);
    originalRequest.onRedirectResponse(data);
    lighthouse_logger.verbose('network', `${originalRequest.url} redirected to ${redirectedRequest.url}`);

    originalRequest.redirectDestination = redirectedRequest;
    redirectedRequest.redirectSource = originalRequest;

    // Start the redirect request before finishing the original so we don't get erroneous quiet periods
    this.onRequestStarted(redirectedRequest);
    this.onRequestFinished(originalRequest);
  }

  /**
   * @param {{params: LH.Crdp.Network.RequestServedFromCacheEvent, sessionId?: string}} event
   */
  onRequestServedFromCache(event) {
    const data = event.params;
    const request = this._findRealRequestAndSetSession(data.requestId, event.sessionId);
    if (!request) return;
    lighthouse_logger.verbose('network', `${request.url} served from cache`);
    request.onRequestServedFromCache();
  }

  /**
   * @param {{params: LH.Crdp.Network.ResponseReceivedEvent, sessionId?: string}} event
   */
  onResponseReceived(event) {
    const data = event.params;
    const request = this._findRealRequestAndSetSession(data.requestId, event.sessionId);
    if (!request) return;
    lighthouse_logger.verbose('network', `${request.url} response received`);
    request.onResponseReceived(data);
  }

  /**
   * @param {{params: LH.Crdp.Network.DataReceivedEvent, sessionId?: string}} event
   */
  onDataReceived(event) {
    const data = event.params;
    const request = this._findRealRequestAndSetSession(data.requestId, event.sessionId);
    if (!request) return;
    lighthouse_logger.verbose('network', `${request.url} data received`);
    request.onDataReceived(data);
  }

  /**
   * @param {{params: LH.Crdp.Network.LoadingFinishedEvent, sessionId?: string}} event
   */
  onLoadingFinished(event) {
    const data = event.params;
    const request = this._findRealRequestAndSetSession(data.requestId, event.sessionId);
    if (!request) return;
    lighthouse_logger.verbose('network', `${request.url} loading finished`);
    request.onLoadingFinished(data);
    this.onRequestFinished(request);
  }

  /**
   * @param {{params: LH.Crdp.Network.LoadingFailedEvent, sessionId?: string}} event
   */
  onLoadingFailed(event) {
    const data = event.params;
    const request = this._findRealRequestAndSetSession(data.requestId, event.sessionId);
    if (!request) return;
    lighthouse_logger.verbose('network', `${request.url} loading failed`);
    request.onLoadingFailed(data);
    this.onRequestFinished(request);
  }

  /**
   * @param {{params: LH.Crdp.Network.ResourceChangedPriorityEvent, sessionId?: string}} event
   */
  onResourceChangedPriority(event) {
    const data = event.params;
    const request = this._findRealRequestAndSetSession(data.requestId, event.sessionId);
    if (!request) return;
    request.onResourceChangedPriority(data);
  }

  /**
   * Routes network events to their handlers, so we can construct networkRecords
   * @param {LH.Protocol.RawEventMessage} event
   */
  dispatch(event) {
    switch (event.method) {
      case 'Network.requestWillBeSent': return this.onRequestWillBeSent(event);
      case 'Network.requestServedFromCache': return this.onRequestServedFromCache(event);
      case 'Network.responseReceived': return this.onResponseReceived(event);
      case 'Network.dataReceived': return this.onDataReceived(event);
      case 'Network.loadingFinished': return this.onLoadingFinished(event);
      case 'Network.loadingFailed': return this.onLoadingFailed(event);
      case 'Network.resourceChangedPriority': return this.onResourceChangedPriority(event);
      default: return;
    }
  }

  /**
   * Redirected requests all have identical requestIds over the protocol. Once a request has been
   * redirected all future messages referrencing that requestId are about the new destination, not
   * the original. This method is a helper for finding the real request object to which the current
   * message is referring.
   *
   * @param {string} requestId
   * @param {string|undefined} sessionId
   * @return {NetworkRequest|undefined}
   */
  _findRealRequestAndSetSession(requestId, sessionId) {
    // The very first sessionId processed is always the main sessionId. In all but DevTools,
    // this sessionId is undefined. However, in DevTools the main Lighthouse protocol connection
    // does send events with sessionId set to a string, because of how DevTools routes the protocol
    // to Lighthouse.
    // Many places in Lighthouse use `record.sessionId === undefined` to mean that the session is not
    // an OOPIF. To maintain this property, we intercept sessionId here and set it to undefined if
    // it matches the first value seen.
    if (this._mainSessionId === null) {
      this._mainSessionId = sessionId;
    }
    if (this._mainSessionId === sessionId) {
      sessionId = undefined;
    }

    let request = this._recordsById.get(requestId);
    if (!request || !request.isValid) return undefined;

    while (request.redirectDestination) {
      request = request.redirectDestination;
    }

    request.setSession(sessionId);

    return request;
  }

  /**
   * @param {NetworkRequest} record The record to find the initiator of
   * @param {Map<string, NetworkRequest[]>} recordsByURL
   * @return {NetworkRequest|null}
   * @private
   */
  static _chooseInitiatorRequest(record, recordsByURL) {
    if (record.redirectSource) {
      return record.redirectSource;
    }

    const initiatorURL = PageDependencyGraphComputed.getNetworkInitiators(record)[0];
    let candidates = recordsByURL.get(initiatorURL) || [];
    // The initiator must come before the initiated request.
    candidates = candidates.filter(c => c.responseHeadersEndTime <= record.networkRequestTime);
    if (candidates.length > 1) {
      // Disambiguate based on prefetch. Prefetch requests have type 'Other' and cannot
      // initiate requests, so we drop them here.
      const nonPrefetchCandidates = candidates.filter(
          cand => cand.resourceType !== NetworkRequest.TYPES.Other);
      if (nonPrefetchCandidates.length) {
        candidates = nonPrefetchCandidates;
      }
    }
    if (candidates.length > 1) {
      // Disambiguate based on frame. It's likely that the initiator comes from the same frame.
      const sameFrameCandidates = candidates.filter(cand => cand.frameId === record.frameId);
      if (sameFrameCandidates.length) {
        candidates = sameFrameCandidates;
      }
    }
    if (candidates.length > 1 && record.initiator.type === 'parser') {
      // Filter to just Documents when initiator type is parser.
      const documentCandidates = candidates.filter(cand =>
        cand.resourceType === NetworkRequest.TYPES.Document);
      if (documentCandidates.length) {
        candidates = documentCandidates;
      }
    }
    if (candidates.length > 1) {
      // If all real loads came from successful preloads (url preloaded and
      // loads came from the cache), filter to link rel=preload request(s).
      const linkPreloadCandidates = candidates.filter(c => c.isLinkPreload);
      if (linkPreloadCandidates.length) {
        const nonPreloadCandidates = candidates.filter(c => !c.isLinkPreload);
        const allPreloaded = nonPreloadCandidates.every(c => c.fromDiskCache || c.fromMemoryCache);
        if (nonPreloadCandidates.length && allPreloaded) {
          candidates = linkPreloadCandidates;
        }
      }
    }

    // Only return an initiator if the result is unambiguous.
    return candidates.length === 1 ? candidates[0] : null;
  }

  /**
   * Construct network records from a log of devtools protocol messages.
   * @param {LH.DevtoolsLog} devtoolsLog
   * @return {Array<LH.Artifacts.NetworkRequest>}
   */
  static recordsFromLogs(devtoolsLog) {
    const networkRecorder = new NetworkRecorder();
    // playback all the devtools messages to recreate network records
    devtoolsLog.forEach(message => networkRecorder.dispatch(message));

    // get out the list of records & filter out invalid records
    const records = networkRecorder.getRawRecords().filter(record => record.isValid);

    /** @type {Map<string, NetworkRequest[]>} */
    const recordsByURL = new Map();
    for (const record of records) {
      const records = recordsByURL.get(record.url) || [];
      records.push(record);
      recordsByURL.set(record.url, records);
    }

    // set the initiatorRequest and redirects array
    for (const record of records) {
      const initiatorRequest = NetworkRecorder._chooseInitiatorRequest(record, recordsByURL);
      if (initiatorRequest) {
        record.setInitiatorRequest(initiatorRequest);
      }

      let finalRecord = record;
      while (finalRecord.redirectDestination) finalRecord = finalRecord.redirectDestination;
      if (finalRecord === record || finalRecord.redirects) continue;

      const redirects = [];
      for (
        let redirect = finalRecord.redirectSource;
        redirect;
        redirect = redirect.redirectSource
      ) {
        redirects.unshift(redirect);
      }

      finalRecord.redirects = redirects;
    }

    return records;
  }
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/computed/network-records.js
/**
 * @license Copyright 2017 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */





class NetworkRecords {
  /**
   * @param {LH.DevtoolsLog} devtoolsLog
   * @return {Promise<Array<LH.Artifacts.NetworkRequest>>} networkRecords
   */
  static async compute_(devtoolsLog) {
    return NetworkRecorder.recordsFromLogs(devtoolsLog);
  }
}

const NetworkRecordsComputed = makeComputedArtifact(NetworkRecords, null);


;// CONCATENATED MODULE: ./node_modules/lighthouse/core/lib/navigation-error.js
/**
 * @license Copyright 2021 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */






const navigation_error_UIStrings = {
  /**
   * Warning shown in report when the page under test is an XHTML document, which Lighthouse does not directly support
   * so we display a warning.
   */
  warningXhtml:
    'The page MIME type is XHTML: Lighthouse does not explicitly support this document type',
};

const navigation_error_str_ = createIcuMessageFn(import.meta.url, navigation_error_UIStrings);

// MIME types are case-insensitive but Chrome normalizes MIME types to be lowercase.
const HTML_MIME_TYPE = 'text/html';
const XHTML_MIME_TYPE = 'application/xhtml+xml';

/**
 * Returns an error if the original network request failed or wasn't found.
 * @param {LH.Artifacts.NetworkRequest|undefined} mainRecord
 * @return {LH.LighthouseError|undefined}
 */
function getNetworkError(mainRecord) {
  if (!mainRecord) {
    return new lh_error_LighthouseError(lh_error_LighthouseError.errors.NO_DOCUMENT_REQUEST);
  } else if (mainRecord.failed) {
    const netErr = mainRecord.localizedFailDescription;
    // Match all resolution and DNS failures
    // https://cs.chromium.org/chromium/src/net/base/net_error_list.h?rcl=cd62979b
    if (
      netErr === 'net::ERR_NAME_NOT_RESOLVED' ||
      netErr === 'net::ERR_NAME_RESOLUTION_FAILED' ||
      netErr.startsWith('net::ERR_DNS_')
    ) {
      return new lh_error_LighthouseError(lh_error_LighthouseError.errors.DNS_FAILURE);
    } else {
      return new lh_error_LighthouseError(
        lh_error_LighthouseError.errors.FAILED_DOCUMENT_REQUEST, {errorDetails: netErr});
    }
  } else if (mainRecord.hasErrorStatusCode()) {
    return new lh_error_LighthouseError(lh_error_LighthouseError.errors.ERRORED_DOCUMENT_REQUEST, {
      statusCode: `${mainRecord.statusCode}`,
    });
  }
}

/**
 * Returns an error if we ended up on the `chrome-error` page and all other requests failed.
 * @param {LH.Artifacts.NetworkRequest|undefined} mainRecord
 * @param {Array<LH.Artifacts.NetworkRequest>} networkRecords
 * @return {LH.LighthouseError|undefined}
 */
function getInterstitialError(mainRecord, networkRecords) {
  // If we never requested a document, there's no interstitial error, let other cases handle it.
  if (!mainRecord) return undefined;

  const interstitialRequest = networkRecords.find(record =>
    record.documentURL.startsWith('chrome-error://')
  );
  // If the page didn't end up on a chrome interstitial, there's no error here.
  if (!interstitialRequest) return undefined;

  // If the main document didn't fail, we didn't end up on an interstitial.
  // FIXME: This doesn't handle client-side redirects.
  // None of our error-handling deals with this case either because passContext.url doesn't handle non-network redirects.
  if (!mainRecord.failed) return undefined;

  // If a request failed with the `net::ERR_CERT_*` collection of errors, then it's a security issue.
  if (mainRecord.localizedFailDescription.startsWith('net::ERR_CERT')) {
    return new lh_error_LighthouseError(lh_error_LighthouseError.errors.INSECURE_DOCUMENT_REQUEST, {
      securityMessages: mainRecord.localizedFailDescription,
    });
  }

  // If we made it this far, it's a generic Chrome interstitial error.
  return new lh_error_LighthouseError(lh_error_LighthouseError.errors.CHROME_INTERSTITIAL_ERROR);
}

/**
 * Returns an error if we try to load a non-HTML page.
 * Expects a network request with all redirects resolved, otherwise the MIME type may be incorrect.
 * @param {LH.Artifacts.NetworkRequest|undefined} finalRecord
 * @return {LH.LighthouseError|undefined}
 */
function getNonHtmlError(finalRecord) {
  // If we never requested a document, there's no doctype error, let other cases handle it.
  if (!finalRecord) return undefined;

  // mimeType is determined by the browser, we assume Chrome is determining mimeType correctly,
  // independently of 'Content-Type' response headers, and always sending mimeType if well-formed.
  if (finalRecord.mimeType !== HTML_MIME_TYPE && finalRecord.mimeType !== XHTML_MIME_TYPE) {
    return new lh_error_LighthouseError(lh_error_LighthouseError.errors.NOT_HTML, {
      mimeType: finalRecord.mimeType,
    });
  }

  return undefined;
}

/**
 * Returns an error if the page load should be considered failed, e.g. from a
 * main document request failure, a security issue, etc.
 * @param {LH.LighthouseError|undefined} navigationError
 * @param {{url: string, loadFailureMode: LH.Gatherer.PassContext['passConfig']['loadFailureMode'], networkRecords: Array<LH.Artifacts.NetworkRequest>, warnings: Array<string | LH.IcuMessage>}} context
 * @return {LH.LighthouseError|undefined}
 */
function getPageLoadError(navigationError, context) {
  const {url, loadFailureMode, networkRecords} = context;
  /** @type {LH.Artifacts.NetworkRequest|undefined} */
  let mainRecord = NetworkAnalyzer.findResourceForUrl(networkRecords, url);

  // If the url doesn't give us a network request, it's possible we landed on a chrome-error:// page
  // In this case, just get the first document request.
  if (!mainRecord) {
    const documentRequests = networkRecords.filter(record =>
      record.resourceType === NetworkRequest.TYPES.Document
    );
    if (documentRequests.length) {
      mainRecord = documentRequests.reduce((min, r) => {
        return r.networkRequestTime < min.networkRequestTime ? r : min;
      });
    }
  }

  // MIME Type is only set on the final redirected document request. Use this for the HTML check instead of root.
  let finalRecord;
  if (mainRecord) {
    finalRecord = NetworkAnalyzer.resolveRedirects(mainRecord);
  }

  if (finalRecord?.mimeType === XHTML_MIME_TYPE) {
    context.warnings.push(navigation_error_str_(navigation_error_UIStrings.warningXhtml));
  }

  const networkError = getNetworkError(mainRecord);
  const interstitialError = getInterstitialError(mainRecord, networkRecords);
  const nonHtmlError = getNonHtmlError(finalRecord);

  // Check to see if we need to ignore the page load failure.
  // e.g. When the driver is offline, the load will fail without page offline support.
  if (loadFailureMode === 'ignore') return;

  // We want to special-case the interstitial beyond FAILED_DOCUMENT_REQUEST. See https://github.com/GoogleChrome/lighthouse/pull/8865#issuecomment-497507618
  if (interstitialError) return interstitialError;

  // Network errors are usually the most specific and provide the best reason for why the page failed to load.
  // Prefer networkError over navigationError.
  // Example: `DNS_FAILURE` is better than `NO_FCP`.
  if (networkError) return networkError;

  // Error if page is not HTML.
  if (nonHtmlError) return nonHtmlError;

  // Navigation errors are rather generic and express some failure of the page to render properly.
  // Use `navigationError` as the last resort.
  // Example: `NO_FCP`, the page never painted content for some unknown reason.
  return navigationError;
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/gather/driver/network-monitor.js
/**
 * @license Copyright 2021 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

/**
 * @fileoverview This class wires up the procotol to a network recorder and provides overall
 * status inspection state.
 */









/** @typedef {import('../../lib/network-recorder.js').NetworkRecorderEventMap} NetworkRecorderEventMap */
/** @typedef {'network-2-idle'|'network-critical-idle'|'networkidle'|'networkbusy'|'network-critical-busy'|'network-2-busy'} NetworkMonitorEvent_ */
/** @typedef {Record<NetworkMonitorEvent_, []> & NetworkRecorderEventMap} NetworkMonitorEventMap */
/** @typedef {keyof NetworkMonitorEventMap} NetworkMonitorEvent */
/** @typedef {LH.Protocol.StrictEventEmitterClass<NetworkMonitorEventMap>} NetworkMonitorEmitter */
const NetworkMonitorEventEmitter = /** @type {NetworkMonitorEmitter} */ (external_events_.EventEmitter);

class NetworkMonitor extends NetworkMonitorEventEmitter {
  /** @type {NetworkRecorder|undefined} */
  _networkRecorder = undefined;
  /** @type {Array<LH.Crdp.Page.Frame>} */
  _frameNavigations = [];

  // TODO(FR-COMPAT): switch to real TargetManager when legacy removed.
  /** @param {LH.Gatherer.FRTransitionalDriver['targetManager']} targetManager */
  constructor(targetManager) {
    super();

    /** @type {LH.Gatherer.FRTransitionalDriver['targetManager']} */
    this._targetManager = targetManager;

    /** @type {LH.Gatherer.FRProtocolSession} */
    this._session = targetManager.rootSession();

    /** @param {LH.Crdp.Page.FrameNavigatedEvent} event */
    this._onFrameNavigated = event => this._frameNavigations.push(event.frame);

    /** @param {LH.Protocol.RawEventMessage} event */
    this._onProtocolMessage = event => {
      if (!this._networkRecorder) return;
      this._networkRecorder.dispatch(event);
    };
  }

  /**
   * @return {Promise<void>}
   */
  async enable() {
    if (this._networkRecorder) return;

    this._frameNavigations = [];
    this._networkRecorder = new NetworkRecorder();

    /**
     * Reemit the same network recorder events.
     * @param {keyof NetworkRecorderEventMap} event
     * @return {(r: NetworkRequest) => void}
     */
    const reEmit = event => r => {
      this.emit(event, r);
      this._emitNetworkStatus();
    };

    this._networkRecorder.on('requeststarted', reEmit('requeststarted'));
    this._networkRecorder.on('requestfinished', reEmit('requestfinished'));

    this._session.on('Page.frameNavigated', this._onFrameNavigated);
    this._targetManager.on('protocolevent', this._onProtocolMessage);
  }

  /**
   * @return {Promise<void>}
   */
  async disable() {
    if (!this._networkRecorder) return;

    this._session.off('Page.frameNavigated', this._onFrameNavigated);
    this._targetManager.off('protocolevent', this._onProtocolMessage);

    this._frameNavigations = [];
    this._networkRecorder = undefined;
  }

  /** @return {Promise<{requestedUrl?: string, mainDocumentUrl?: string}>} */
  async getNavigationUrls() {
    const frameNavigations = this._frameNavigations;
    if (!frameNavigations.length) return {};

    const frameTreeResponse = await this._session.sendCommand('Page.getFrameTree');
    const mainFrameId = frameTreeResponse.frameTree.frame.id;
    const mainFrameNavigations = frameNavigations.filter(frame => frame.id === mainFrameId);
    if (!mainFrameNavigations.length) lighthouse_logger.warn('NetworkMonitor', 'No detected navigations');

    // The requested URL is the initiator request for the first frame navigation.
    /** @type {string|undefined} */
    let requestedUrl = mainFrameNavigations[0]?.url;
    if (this._networkRecorder) {
      const records = this._networkRecorder.getRawRecords();

      let initialUrlRequest = records.find(record => record.url === requestedUrl);
      while (initialUrlRequest?.redirectSource) {
        initialUrlRequest = initialUrlRequest.redirectSource;
        requestedUrl = initialUrlRequest.url;
      }
    }

    return {
      requestedUrl,
      mainDocumentUrl: mainFrameNavigations[mainFrameNavigations.length - 1]?.url,
    };
  }

  /**
   * @return {Array<NetworkRequest>}
   */
  getInflightRequests() {
    if (!this._networkRecorder) return [];
    return this._networkRecorder.getRawRecords().filter(request => !request.finished);
  }

  /**
   * Returns whether the network is completely idle (i.e. there are 0 inflight network requests).
   */
  isIdle() {
    return this._isActiveIdlePeriod(0);
  }

  /**
   * Returns whether any important resources for the page are in progress.
   * Above-the-fold images and XHRs should be included.
   * Tracking pixels, low priority images, and cross frame requests should be excluded.
   * @return {boolean}
   */
  isCriticalIdle() {
    if (!this._networkRecorder) return false;
    const requests = this._networkRecorder.getRawRecords();
    const rootFrameRequest = requests.find(r => r.resourceType === 'Document');
    const rootFrameId = rootFrameRequest?.frameId;

    return this._isActiveIdlePeriod(
      0,
      request =>
        request.frameId === rootFrameId &&
        (request.priority === 'VeryHigh' || request.priority === 'High')
    );
  }

  /**
   * Returns whether the network is semi-idle (i.e. there are 2 or fewer inflight network requests).
   */
  is2Idle() {
    return this._isActiveIdlePeriod(2);
  }

  /**
   * Returns whether the number of currently inflight requests is less than or
   * equal to the number of allowed concurrent requests.
   * @param {number} allowedRequests
   * @param {(request: NetworkRequest) => boolean} [requestFilter]
   * @return {boolean}
   */
  _isActiveIdlePeriod(allowedRequests, requestFilter) {
    if (!this._networkRecorder) return false;
    const requests = this._networkRecorder.getRawRecords();
    let inflightRequests = 0;

    for (let i = 0; i < requests.length; i++) {
      const request = requests[i];
      if (request.finished) continue;
      if (requestFilter && !requestFilter(request)) continue;
      if (NetworkRequest.isNonNetworkRequest(request)) continue;
      inflightRequests++;
    }

    return inflightRequests <= allowedRequests;
  }

  /**
   * Emits the appropriate network status event.
   */
  _emitNetworkStatus() {
    const zeroQuiet = this.isIdle();
    const twoQuiet = this.is2Idle();
    const criticalQuiet = this.isCriticalIdle();

    this.emit(zeroQuiet ? 'networkidle' : 'networkbusy');
    this.emit(twoQuiet ? 'network-2-idle' : 'network-2-busy');
    this.emit(criticalQuiet ? 'network-critical-idle' : 'network-critical-busy');

    if (twoQuiet && zeroQuiet) lighthouse_logger.verbose('NetworkRecorder', 'network fully-quiet');
    else if (twoQuiet && !zeroQuiet) lighthouse_logger.verbose('NetworkRecorder', 'network semi-quiet');
    else lighthouse_logger.verbose('NetworkRecorder', 'network busy');
  }

  /**
   * Finds all time periods where the number of inflight requests is less than or equal to the
   * number of allowed concurrent requests.
   * @param {Array<LH.Artifacts.NetworkRequest>} requests
   * @param {number} allowedConcurrentRequests
   * @param {number=} endTime
   * @return {Array<{start: number, end: number}>}
   */
  static findNetworkQuietPeriods(requests, allowedConcurrentRequests, endTime = Infinity) {
    // First collect the timestamps of when requests start and end
    /** @type {Array<{time: number, isStart: boolean}>} */
    let timeBoundaries = [];
    requests.forEach(request => {
      if (url_utils.isNonNetworkProtocol(request.protocol)) return;
      if (request.protocol === 'ws' || request.protocol === 'wss') return;

      // convert the network timestamp to ms
      timeBoundaries.push({time: request.networkRequestTime * 1000, isStart: true});
      if (request.finished) {
        timeBoundaries.push({time: request.networkEndTime * 1000, isStart: false});
      }
    });

    timeBoundaries = timeBoundaries
      .filter(boundary => boundary.time <= endTime)
      .sort((a, b) => a.time - b.time);

    let numInflightRequests = 0;
    let quietPeriodStart = 0;
    /** @type {Array<{start: number, end: number}>} */
    const quietPeriods = [];
    timeBoundaries.forEach(boundary => {
      if (boundary.isStart) {
        // we've just started a new request. are we exiting a quiet period?
        if (numInflightRequests === allowedConcurrentRequests) {
          quietPeriods.push({start: quietPeriodStart, end: boundary.time});
        }
        numInflightRequests++;
      } else {
        numInflightRequests--;
        // we've just completed a request. are we entering a quiet period?
        if (numInflightRequests === allowedConcurrentRequests) {
          quietPeriodStart = boundary.time;
        }
      }
    });

    // Check we ended in a quiet period
    if (numInflightRequests <= allowedConcurrentRequests) {
      quietPeriods.push({start: quietPeriodStart, end: endTime});
    }

    return quietPeriods.filter(period => period.start !== period.end);
  }
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/gather/driver/wait-for-condition.js
/**
 * @license Copyright 2020 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

/* global window */






/** @typedef {InstanceType<import('./network-monitor.js')['NetworkMonitor']>} NetworkMonitor */
/** @typedef {import('./network-monitor.js').NetworkMonitorEvent} NetworkMonitorEvent */

/**
 * @template [T=void]
 * @typedef CancellableWait
 * @prop {Promise<T>} promise
 * @prop {() => void} cancel
 */

/**
 * @typedef WaitOptions
 * @prop {number} pauseAfterFcpMs
 * @prop {number} pauseAfterLoadMs
 * @prop {number} networkQuietThresholdMs
 * @prop {number} cpuQuietThresholdMs
 * @prop {number} maxWaitForLoadedMs
 * @prop {number|undefined} maxWaitForFcpMs
 * @prop {{waitForFcp: typeof waitForFcp, waitForLoadEvent: typeof waitForLoadEvent, waitForNetworkIdle: typeof waitForNetworkIdle, waitForCPUIdle: typeof waitForCPUIdle}} [_waitForTestOverrides]
 */

/**
 * Returns a promise that resolves immediately.
 * Used for placeholder conditions that we don't want to start waiting for just yet, but still want
 * to satisfy the same interface.
 * @return {{promise: Promise<void>, cancel: function(): void}}
 */
function waitForNothing() {
  return {promise: Promise.resolve(), cancel() {}};
}

/**
 * Returns a promise that resolve when a frame has been navigated.
 * Used for detecting that our about:blank reset has been completed.
 * @param {LH.Gatherer.FRProtocolSession} session
 * @return {CancellableWait<LH.Crdp.Page.FrameNavigatedEvent>}
 */
function waitForFrameNavigated(session) {
  /** @type {(() => void)} */
  let cancel = () => {
    throw new Error('waitForFrameNavigated.cancel() called before it was defined');
  };

  /** @type {Promise<LH.Crdp.Page.FrameNavigatedEvent>} */
  const promise = new Promise((resolve, reject) => {
    session.once('Page.frameNavigated', resolve);
    cancel = () => {
      session.off('Page.frameNavigated', resolve);
      reject(new Error('Wait for navigated cancelled'));
    };
  });

  return {promise, cancel};
}

/**
 * Returns a promise that resolve when a frame has a FCP.
 * @param {LH.Gatherer.FRProtocolSession} session
 * @param {number} pauseAfterFcpMs
 * @param {number} maxWaitForFcpMs
 * @return {CancellableWait}
 */
function waitForFcp(session, pauseAfterFcpMs, maxWaitForFcpMs) {
  /** @type {(() => void)} */
  let cancel = () => {
    throw new Error('waitForFcp.cancel() called before it was defined');
  };

  /** @type {Promise<void>} */
  const promise = new Promise((resolve, reject) => {
    const maxWaitTimeout = setTimeout(() => {
      reject(new lh_error_LighthouseError(lh_error_LighthouseError.errors.NO_FCP));
    }, maxWaitForFcpMs);
    /** @type {NodeJS.Timeout|undefined} */
    let loadTimeout;

    /** @param {LH.Crdp.Page.LifecycleEventEvent} e */
    const lifecycleListener = e => {
      if (e.name === 'firstContentfulPaint') {
        loadTimeout = setTimeout(() => {
          resolve();
          cancel();
        }, pauseAfterFcpMs);
      }
    };

    session.on('Page.lifecycleEvent', lifecycleListener);

    let canceled = false;
    cancel = () => {
      if (canceled) return;
      canceled = true;
      session.off('Page.lifecycleEvent', lifecycleListener);
      maxWaitTimeout && clearTimeout(maxWaitTimeout);
      loadTimeout && clearTimeout(loadTimeout);
      reject(new Error('Wait for FCP canceled'));
    };
  });

  return {
    promise,
    cancel,
  };
}

/**
 * Returns a promise that resolves when the network has been idle (after DCL) for
 * `networkQuietThresholdMs` ms and a method to cancel internal network listeners/timeout.
 * @param {LH.Gatherer.FRProtocolSession} session
 * @param {NetworkMonitor} networkMonitor
 * @param {{networkQuietThresholdMs: number, busyEvent: NetworkMonitorEvent, idleEvent: NetworkMonitorEvent, isIdle(recorder: NetworkMonitor): boolean, pretendDCLAlreadyFired?: boolean}} networkQuietOptions
 * @return {CancellableWait}
 */
function waitForNetworkIdle(session, networkMonitor, networkQuietOptions) {
  let hasDCLFired = false;
  /** @type {NodeJS.Timer|undefined} */
  let idleTimeout;
  /** @type {(() => void)} */
  let cancel = () => {
    throw new Error('waitForNetworkIdle.cancel() called before it was defined');
  };

  const {networkQuietThresholdMs, busyEvent, idleEvent, isIdle} = networkQuietOptions;

  /** @type {Promise<void>} */
  const promise = new Promise((resolve, reject) => {
    const onIdle = () => {
      // eslint-disable-next-line no-use-before-define
      networkMonitor.once(busyEvent, onBusy);
      idleTimeout = setTimeout(() => {
        cancel();
        resolve();
      }, networkQuietThresholdMs);
    };

    const onBusy = () => {
      networkMonitor.once(idleEvent, onIdle);
      idleTimeout && clearTimeout(idleTimeout);
    };

    const domContentLoadedListener = () => {
      hasDCLFired = true;
      if (isIdle(networkMonitor)) {
        onIdle();
      } else {
        onBusy();
      }
    };

    // We frequently need to debug why LH is still waiting for the page.
    // This listener is added to all network events to verbosely log what URLs we're waiting on.
    const logStatus = () => {
      if (!hasDCLFired) {
        lighthouse_logger.verbose('waitFor', 'Waiting on DomContentLoaded');
        return;
      }

      const inflightRecords = networkMonitor.getInflightRequests();
      // If there are more than 20 inflight requests, load is still in full swing.
      // Wait until it calms down a bit to be a little less spammy.
      if (lighthouse_logger.isVerbose() && inflightRecords.length < 20 && inflightRecords.length > 0) {
        lighthouse_logger.verbose('waitFor', `=== Waiting on ${inflightRecords.length} requests to finish`);
        for (const record of inflightRecords) {
          lighthouse_logger.verbose('waitFor', `Waiting on ${record.url.slice(0, 120)} to finish`);
        }
      }
    };

    networkMonitor.on('requeststarted', logStatus);
    networkMonitor.on('requestfinished', logStatus);
    networkMonitor.on(busyEvent, logStatus);

    if (!networkQuietOptions.pretendDCLAlreadyFired) {
      session.once('Page.domContentEventFired', domContentLoadedListener);
    } else {
      domContentLoadedListener();
    }

    let canceled = false;
    cancel = () => {
      if (canceled) return;
      canceled = true;
      if (idleTimeout) clearTimeout(idleTimeout);
      if (!networkQuietOptions.pretendDCLAlreadyFired) {
        session.off('Page.domContentEventFired', domContentLoadedListener);
      }
      networkMonitor.removeListener(busyEvent, onBusy);
      networkMonitor.removeListener(idleEvent, onIdle);
      networkMonitor.removeListener('requeststarted', logStatus);
      networkMonitor.removeListener('requestfinished', logStatus);
      networkMonitor.removeListener(busyEvent, logStatus);
    };
  });

  return {
    promise,
    cancel,
  };
}

/**
 * Resolves when there have been no long tasks for at least waitForCPUQuiet ms.
 * @param {LH.Gatherer.FRProtocolSession} session
 * @param {number} waitForCPUQuiet
 * @return {CancellableWait}
 */
function waitForCPUIdle(session, waitForCPUQuiet) {
  if (!waitForCPUQuiet) {
    return {
      promise: Promise.resolve(),
      cancel: () => undefined,
    };
  }

  /** @type {NodeJS.Timer|undefined} */
  let lastTimeout;
  let canceled = false;

  /**
   * @param {ExecutionContext} executionContext
   * @param {() => void} resolve
   * @return {Promise<void>}
   */
  async function checkForQuiet(executionContext, resolve) {
    if (canceled) return;
    const timeSinceLongTask =
      await executionContext.evaluate(
        checkTimeSinceLastLongTaskInPage, {args: [], useIsolation: true});
    if (canceled) return;

    if (typeof timeSinceLongTask === 'number') {
      if (timeSinceLongTask >= waitForCPUQuiet) {
        lighthouse_logger.verbose('waitFor', `CPU has been idle for ${timeSinceLongTask} ms`);
        resolve();
      } else {
        lighthouse_logger.verbose('waitFor', `CPU has been idle for ${timeSinceLongTask} ms`);
        const timeToWait = waitForCPUQuiet - timeSinceLongTask;
        lastTimeout = setTimeout(() => checkForQuiet(executionContext, resolve), timeToWait);
      }
    }
  }

  /** @type {(() => void)} */
  let cancel = () => {
    throw new Error('waitForCPUIdle.cancel() called before it was defined');
  };

  const executionContext = new ExecutionContext(session);
  /** @type {Promise<void>} */
  const promise = new Promise((resolve, reject) => {
    executionContext.evaluate(registerPerformanceObserverInPage, {args: [], useIsolation: true})
      .then(() => checkForQuiet(executionContext, resolve))
      .catch(reject);
    cancel = () => {
      if (canceled) return;
      canceled = true;
      if (lastTimeout) clearTimeout(lastTimeout);
      reject(new Error('Wait for CPU idle canceled'));
    };
  });

  return {
    promise,
    cancel,
  };
}

/* c8 ignore start */

/**
 * This function is executed in the page itself when the document is first loaded.
 *
 * Used by _waitForCPUIdle and executed in the context of the page, updates the ____lastLongTask
 * property on window to the end time of the last long task.
 */
function registerPerformanceObserverInPage() {
  // Do not re-register if we've already run this script.
  if (window.____lastLongTask !== undefined) return;

  window.____lastLongTask = performance.now();
  const observer = new window.PerformanceObserver(entryList => {
    const entries = entryList.getEntries();
    for (const entry of entries) {
      if (entry.entryType === 'longtask') {
        const taskEnd = entry.startTime + entry.duration;
        window.____lastLongTask = Math.max(window.____lastLongTask || 0, taskEnd);
      }
    }
  });

  observer.observe({type: 'longtask', buffered: true});
}

/**
 * This function is executed in the page itself.
 *
 * Used by _waitForCPUIdle and executed in the context of the page, returns time since last long task.
 * @return {Promise<number>}
 */
function checkTimeSinceLastLongTaskInPage() {
  // This function attempts to return the time since the last long task occurred.
  // `PerformanceObserver`s don't always immediately fire though, so we check twice with some time in
  // between to make sure nothing has happened very recently.

  // Chrome 88 introduced heavy throttling of timers which means our `setTimeout` will be executed
  // at some point farish (several hundred ms) into the future and the time at which it executes isn't
  // a reliable indicator of long task existence, instead we check if any information has changed.
  // See https://developer.chrome.com/blog/timer-throttling-in-chrome-88/
  return new Promise(resolve => {
    const firstAttemptTs = performance.now();
    const firstAttemptLastLongTaskTs = window.____lastLongTask || 0;

    setTimeout(() => {
      // We can't be sure a long task hasn't occurred since our first attempt, but if the `____lastLongTask`
      // value is the same (i.e. the perf observer didn't have any new information), we can be pretty
      // confident that the long task info was accurate *at the time of our first attempt*.
      const secondAttemptLastLongTaskTs = window.____lastLongTask || 0;
      const timeSinceLongTask =
        firstAttemptLastLongTaskTs === secondAttemptLastLongTaskTs
          ? // The time of the last long task hasn't changed, the information from our first attempt is accurate.
            firstAttemptTs - firstAttemptLastLongTaskTs
          : // The time of the last long task *did* change, we can't really trust the information we have.
            0;
      resolve(timeSinceLongTask);
    }, 150);
  });
}

/* c8 ignore stop */

/**
 * Return a promise that resolves `pauseAfterLoadMs` after the load event
 * fires and a method to cancel internal listeners and timeout.
 * @param {LH.Gatherer.FRProtocolSession} session
 * @param {number} pauseAfterLoadMs
 * @return {CancellableWait}
 */
function waitForLoadEvent(session, pauseAfterLoadMs) {
  /** @type {(() => void)} */
  let cancel = () => {
    throw new Error('waitForLoadEvent.cancel() called before it was defined');
  };

  const promise = new Promise((resolve, reject) => {
    /** @type {NodeJS.Timer|undefined} */
    let loadTimeout;
    const loadListener = function() {
      loadTimeout = setTimeout(resolve, pauseAfterLoadMs);
    };
    session.once('Page.loadEventFired', loadListener);

    let canceled = false;
    cancel = () => {
      if (canceled) return;
      canceled = true;
      session.off('Page.loadEventFired', loadListener);
      loadTimeout && clearTimeout(loadTimeout);
    };
  });

  return {
    promise,
    cancel,
  };
}

/**
 * Returns whether the page appears to be hung.
 * @param {LH.Gatherer.FRProtocolSession} session
 * @return {Promise<boolean>}
 */
async function isPageHung(session) {
  try {
    session.setNextProtocolTimeout(1000);
    await session.sendCommand('Runtime.evaluate', {
      expression: '"ping"',
      returnByValue: true,
      timeout: 1000,
    });

    return false;
  } catch (err) {
    return true;
  }
}

/** @type {Required<WaitOptions>['_waitForTestOverrides']} */
const DEFAULT_WAIT_FUNCTIONS = {waitForFcp, waitForLoadEvent, waitForCPUIdle, waitForNetworkIdle};

/**
 * Returns a promise that resolves when:
 * - All of the following conditions have been met:
 *    - page has no security issues
 *    - pauseAfterLoadMs milliseconds have passed since the load event.
 *    - networkQuietThresholdMs milliseconds have passed since the last network request that exceeded
 *      2 inflight requests (network-2-quiet has been reached).
 *    - cpuQuietThresholdMs have passed since the last long task after network-2-quiet.
 * - maxWaitForLoadedMs milliseconds have passed.
 * See https://github.com/GoogleChrome/lighthouse/issues/627 for more.
 * @param {LH.Gatherer.FRProtocolSession} session
 * @param {NetworkMonitor} networkMonitor
 * @param {WaitOptions} options
 * @return {Promise<{timedOut: boolean}>}
 */
async function waitForFullyLoaded(session, networkMonitor, options) {
  const {pauseAfterFcpMs, pauseAfterLoadMs, networkQuietThresholdMs,
    cpuQuietThresholdMs, maxWaitForLoadedMs, maxWaitForFcpMs} = options;
  const {waitForFcp, waitForLoadEvent, waitForNetworkIdle, waitForCPUIdle} =
    options._waitForTestOverrides || DEFAULT_WAIT_FUNCTIONS;
  /** @type {NodeJS.Timer|undefined} */
  let maxTimeoutHandle;

  // Listener for FCP. Resolves pauseAfterFcpMs ms after first FCP event.
  const resolveOnFcp = maxWaitForFcpMs ?
    waitForFcp(session, pauseAfterFcpMs, maxWaitForFcpMs) :
    waitForNothing();
  // Listener for onload. Resolves pauseAfterLoadMs ms after load.
  const resolveOnLoadEvent = waitForLoadEvent(session, pauseAfterLoadMs);
  // General network listener. Resolves when the network has been 2-idle for networkQuietThresholdMs.
  const resolveOnNetworkIdle = waitForNetworkIdle(session, networkMonitor, {
    networkQuietThresholdMs,
    busyEvent: 'network-2-busy',
    idleEvent: 'network-2-idle',
    isIdle: recorder => recorder.is2Idle(),
  });
  // Critical network listener. Resolves when the network has had 0 critical requests for networkQuietThresholdMs.
  const resolveOnCriticalNetworkIdle = waitForNetworkIdle(session, networkMonitor, {
    networkQuietThresholdMs,
    busyEvent: 'network-critical-busy',
    idleEvent: 'network-critical-idle',
    isIdle: recorder => recorder.isCriticalIdle(),
  });
  // CPU listener. Resolves when the CPU has been idle for cpuQuietThresholdMs after network idle.
  let resolveOnCPUIdle = waitForNothing();

  // Wait for all initial load promises. Resolves on cleanup function the clears load
  // timeout timer.
  /** @type {Promise<() => Promise<{timedOut: boolean}>>} */
  const loadPromise = Promise.all([
    resolveOnFcp.promise,
    resolveOnLoadEvent.promise,
    resolveOnNetworkIdle.promise,
    resolveOnCriticalNetworkIdle.promise,
  ]).then(() => {
    resolveOnCPUIdle = waitForCPUIdle(session, cpuQuietThresholdMs);
    return resolveOnCPUIdle.promise;
  }).then(() => {
    /** @return {Promise<{timedOut: boolean}>} */
    const cleanupFn = async function() {
      lighthouse_logger.verbose('waitFor', 'loadEventFired and network considered idle');
      return {timedOut: false};
    };

    return cleanupFn;
  }).catch(err => {
    // Throw the error in the cleanupFn so we still cleanup all our handlers.
    return function() {
      throw err;
    };
  });

  // Last resort timeout. Resolves maxWaitForLoadedMs ms from now on
  // cleanup function that removes loadEvent and network idle listeners.
  /** @type {Promise<() => Promise<{timedOut: boolean}>>} */
  const maxTimeoutPromise = new Promise((resolve, reject) => {
    maxTimeoutHandle = setTimeout(resolve, maxWaitForLoadedMs);
  }).then(_ => {
    return async () => {
      lighthouse_logger.warn('waitFor', 'Timed out waiting for page load. Checking if page is hung...');
      if (await isPageHung(session)) {
        lighthouse_logger.warn('waitFor', 'Page appears to be hung, killing JavaScript...');
        await session.sendCommand('Emulation.setScriptExecutionDisabled', {value: true});
        await session.sendCommand('Runtime.terminateExecution');
        throw new lh_error_LighthouseError(lh_error_LighthouseError.errors.PAGE_HUNG);
      }

      return {timedOut: true};
    };
  });

  // Wait for load or timeout and run the cleanup function the winner returns.
  const cleanupFn = await Promise.race([
    loadPromise,
    maxTimeoutPromise,
  ]);

  maxTimeoutHandle && clearTimeout(maxTimeoutHandle);
  resolveOnFcp.cancel();
  resolveOnLoadEvent.cancel();
  resolveOnNetworkIdle.cancel();
  resolveOnCPUIdle.cancel();

  return cleanupFn();
}

/**
 * @param {LH.Gatherer.FRTransitionalDriver} driver
 */
function waitForUserToContinue(driver) {
  /* c8 ignore start */
  function createInPagePromise() {
    let resolve = () => {};
    /** @type {Promise<void>} */
    const promise = new Promise(r => resolve = r);

    // eslint-disable-next-line no-console
    console.log([
      `You have enabled Lighthouse navigation debug mode.`,
      `When you have finished inspecting the page, evaluate "continueLighthouseRun()"`,
      `in the console to continue with the Lighthouse run.`,
    ].join(' '));

    window.continueLighthouseRun = resolve;
    return promise;
  }
  /* c8 ignore stop */

  driver.defaultSession.setNextProtocolTimeout(2 ** 31 - 1);
  return driver.executionContext.evaluate(createInPagePromise, {args: []});
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/gather/driver/navigation.js
/**
 * @license Copyright 2021 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */




 // eslint-disable-line max-len




const navigation_UIStrings = {
  /**
   * @description Warning that the web page redirected during testing and that may have affected the load.
   * @example {https://example.com/requested/page} requested
   * @example {https://example.com/final/resolved/page} final
   */
  warningRedirected: 'The page may not be loading as expected because your test URL ' +
  `({requested}) was redirected to {final}. ` +
  'Try testing the second URL directly.',
  /**
   * @description Warning that Lighthouse timed out while waiting for the page to load.
   */
  warningTimeout: 'The page loaded too slowly to finish within the time limit. ' +
  'Results may be incomplete.',
};

const navigation_str_ = createIcuMessageFn(import.meta.url, navigation_UIStrings);


// Controls how long to wait after FCP before continuing
const DEFAULT_PAUSE_AFTER_FCP = 0;
// Controls how long to wait after onLoad before continuing
const DEFAULT_PAUSE_AFTER_LOAD = 0;
// Controls how long to wait between network requests before determining the network is quiet
const DEFAULT_NETWORK_QUIET_THRESHOLD = 5000;
// Controls how long to wait between longtasks before determining the CPU is idle, off by default
const DEFAULT_CPU_QUIET_THRESHOLD = 0;

/** @typedef {{waitUntil: Array<'fcp'|'load'|'navigated'>} & LH.Config.SharedPassNavigationJson & Partial<Pick<LH.Config.Settings, 'maxWaitForFcp'|'maxWaitForLoad'|'debugNavigation'>>} NavigationOptions */

/** @param {NavigationOptions} options */
function resolveWaitForFullyLoadedOptions(options) {
  /* eslint-disable max-len */
  let {pauseAfterFcpMs, pauseAfterLoadMs, networkQuietThresholdMs, cpuQuietThresholdMs} = options;
  let maxWaitMs = options.maxWaitForLoad;
  let maxFCPMs = options.maxWaitForFcp;

  if (typeof pauseAfterFcpMs !== 'number') pauseAfterFcpMs = DEFAULT_PAUSE_AFTER_FCP;
  if (typeof pauseAfterLoadMs !== 'number') pauseAfterLoadMs = DEFAULT_PAUSE_AFTER_LOAD;
  if (typeof networkQuietThresholdMs !== 'number') {
    networkQuietThresholdMs = DEFAULT_NETWORK_QUIET_THRESHOLD;
  }
  if (typeof cpuQuietThresholdMs !== 'number') cpuQuietThresholdMs = DEFAULT_CPU_QUIET_THRESHOLD;
  if (typeof maxWaitMs !== 'number') maxWaitMs = defaultSettings.maxWaitForLoad;
  if (typeof maxFCPMs !== 'number') maxFCPMs = defaultSettings.maxWaitForFcp;
  /* eslint-enable max-len */

  if (!options.waitUntil.includes('fcp')) maxFCPMs = undefined;

  return {
    pauseAfterFcpMs,
    pauseAfterLoadMs,
    networkQuietThresholdMs,
    cpuQuietThresholdMs,
    maxWaitForLoadedMs: maxWaitMs,
    maxWaitForFcpMs: maxFCPMs,
  };
}

/**
 * Navigates to the given URL, assuming that the page is not already on this URL.
 * Resolves on the url of the loaded page, taking into account any redirects.
 * Typical use of this method involves navigating to a neutral page such as `about:blank` in between
 * navigations.
 *
 * @param {LH.Gatherer.FRTransitionalDriver} driver
 * @param {LH.NavigationRequestor} requestor
 * @param {NavigationOptions} options
 * @return {Promise<{requestedUrl: string, mainDocumentUrl: string, warnings: Array<LH.IcuMessage>}>}
 */
async function gotoURL(driver, requestor, options) {
  const status = typeof requestor === 'string' ?
    {msg: `Navigating to ${requestor}`, id: 'lh:driver:navigate'} :
    {msg: 'Navigating using a user defined function', id: 'lh:driver:navigate'};
  lighthouse_logger.time(status);

  const session = driver.defaultSession;
  const networkMonitor = new NetworkMonitor(driver.targetManager);

  // Enable the events and network monitor needed to track navigation progress.
  await networkMonitor.enable();
  await session.sendCommand('Page.enable');
  await session.sendCommand('Page.setLifecycleEventsEnabled', {enabled: true});

  let waitForNavigationTriggered;
  if (typeof requestor === 'string') {
    // No timeout needed for Page.navigate. See https://github.com/GoogleChrome/lighthouse/pull/6413
    session.setNextProtocolTimeout(Infinity);
    waitForNavigationTriggered = session.sendCommand('Page.navigate', {url: requestor});
  } else {
    waitForNavigationTriggered = requestor();
  }

  const waitForNavigated = options.waitUntil.includes('navigated');
  const waitForLoad = options.waitUntil.includes('load');
  const waitForFcp = options.waitUntil.includes('fcp');

  /** @type {Array<Promise<{timedOut: boolean}>>} */
  const waitConditionPromises = [];

  if (waitForNavigated) {
    const navigatedPromise = waitForFrameNavigated(session).promise;
    waitConditionPromises.push(navigatedPromise.then(() => ({timedOut: false})));
  }

  if (waitForLoad) {
    const waitOptions = resolveWaitForFullyLoadedOptions(options);
    waitConditionPromises.push(waitForFullyLoaded(session, networkMonitor, waitOptions));
  } else if (waitForFcp) {
    throw new Error('Cannot wait for FCP without waiting for page load');
  }

  const waitConditions = await Promise.all(waitConditionPromises);
  const timedOut = waitConditions.some(condition => condition.timedOut);
  const navigationUrls = await networkMonitor.getNavigationUrls();

  let requestedUrl = navigationUrls.requestedUrl;
  if (typeof requestor === 'string') {
    if (requestedUrl && !url_utils.equalWithExcludedFragments(requestor, requestedUrl)) {
      lighthouse_logger.error(
        'Navigation',
        `Provided URL (${requestor}) did not match initial navigation URL (${requestedUrl})`
      );
    }
    requestedUrl = requestor;
  }
  if (!requestedUrl) throw Error('No navigations detected when running user defined requestor.');

  const mainDocumentUrl = navigationUrls.mainDocumentUrl || requestedUrl;

  // Bring `Page.navigate` errors back into the promise chain. See https://github.com/GoogleChrome/lighthouse/pull/6739.
  await waitForNavigationTriggered;
  await networkMonitor.disable();

  if (options.debugNavigation) {
    await waitForUserToContinue(driver);
  }

  lighthouse_logger.timeEnd(status);
  return {
    requestedUrl,
    mainDocumentUrl,
    warnings: getNavigationWarnings({timedOut, mainDocumentUrl, requestedUrl}),
  };
}

/**
 * @param {{timedOut: boolean, requestedUrl: string, mainDocumentUrl: string; }} navigation
 * @return {Array<LH.IcuMessage>}
 */
function getNavigationWarnings(navigation) {
  const {requestedUrl, mainDocumentUrl} = navigation;
  /** @type {Array<LH.IcuMessage>} */
  const warnings = [];

  if (navigation.timedOut) warnings.push(navigation_str_(navigation_UIStrings.warningTimeout));

  if (!url_utils.equalWithExcludedFragments(requestedUrl, mainDocumentUrl)) {
    warnings.push(navigation_str_(navigation_UIStrings.warningRedirected, {
      requested: requestedUrl,
      final: mainDocumentUrl,
    }));
  }

  return warnings;
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/gather/driver/service-workers.js
/**
 * @license Copyright 2021 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

/**
 * @param {LH.Gatherer.FRProtocolSession} session
 * @return {Promise<LH.Crdp.ServiceWorker.WorkerVersionUpdatedEvent>}
 */
function getServiceWorkerVersions(session) {
  return new Promise((resolve, reject) => {
    /**
     * @param {LH.Crdp.ServiceWorker.WorkerVersionUpdatedEvent} data
     */
    const versionUpdatedListener = data => {
      // find a service worker with runningStatus that looks like active
      // on slow connections the serviceworker might still be installing
      const activateCandidates = data.versions.filter(sw => {
        return sw.status !== 'redundant';
      });

      const hasActiveServiceWorker = activateCandidates.find(sw => {
        return sw.status === 'activated';
      });

      if (!activateCandidates.length || hasActiveServiceWorker) {
        session.off('ServiceWorker.workerVersionUpdated', versionUpdatedListener);
        session.sendCommand('ServiceWorker.disable').then(_ => resolve(data), reject);
      }
    };

    session.on('ServiceWorker.workerVersionUpdated', versionUpdatedListener);

    session.sendCommand('ServiceWorker.enable').catch(reject);
  });
}

/**
 * @param {LH.Gatherer.FRProtocolSession} session
 * @return {Promise<LH.Crdp.ServiceWorker.WorkerRegistrationUpdatedEvent>}
 */
function getServiceWorkerRegistrations(session) {
  return new Promise((resolve, reject) => {
    session.once('ServiceWorker.workerRegistrationUpdated', data => {
      session.sendCommand('ServiceWorker.disable').then(_ => resolve(data), reject);
    });
    session.sendCommand('ServiceWorker.enable').catch(reject);
  });
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/gather/gatherers/network-user-agent.js
/**
 * @license Copyright 2021 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */




/** @implements {LH.Gatherer.FRGathererInstance<'DevtoolsLog'>} */
class NetworkUserAgent extends base_gatherer {
  /** @type {LH.Gatherer.GathererMeta<'DevtoolsLog'>} */
  meta = {
    supportedModes: ['timespan', 'navigation'],
    dependencies: {DevtoolsLog: devtools_log.symbol},
  };

  /**
   * @param {LH.Artifacts['DevtoolsLog']} devtoolsLog
   * @return {string}
   */
  static getNetworkUserAgent(devtoolsLog) {
    for (const entry of devtoolsLog) {
      if (entry.method !== 'Network.requestWillBeSent') continue;
      const userAgent = entry.params.request.headers['User-Agent'];
      if (userAgent) return userAgent;
    }

    return '';
  }

  /**
   * @param {LH.Gatherer.FRTransitionalContext<'DevtoolsLog'>} context
   * @return {Promise<LH.Artifacts['NetworkUserAgent']>}
   */
  async getArtifact(context) {
    return NetworkUserAgent.getNetworkUserAgent(context.dependencies.DevtoolsLog);
  }
}

/* harmony default export */ const network_user_agent = (NetworkUserAgent);

;// CONCATENATED MODULE: ./node_modules/lighthouse/core/gather/base-artifacts.js
/**
 * @license Copyright 2021 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */






/**
 * @param {LH.Config.ResolvedConfig} resolvedConfig
 * @param {LH.Gatherer.FRTransitionalDriver} driver
 * @param {{gatherMode: LH.Gatherer.GatherMode}} context
 * @return {Promise<LH.BaseArtifacts>}
 */
async function base_artifacts_getBaseArtifacts(resolvedConfig, driver, context) {
  const BenchmarkIndex = await getBenchmarkIndex(driver.executionContext);
  const {userAgent} = await getBrowserVersion(driver.defaultSession);

  return {
    // Meta artifacts.
    fetchTime: new Date().toJSON(),
    Timing: [],
    LighthouseRunWarnings: [],
    settings: resolvedConfig.settings,
    // Environment artifacts that can always be computed.
    BenchmarkIndex,
    HostUserAgent: userAgent,
    HostFormFactor: userAgent.includes('Android') || userAgent.includes('Mobile') ?
      'mobile' : 'desktop',
    // Contextual artifacts whose collection changes based on gather mode.
    URL: {
      finalDisplayedUrl: '',
    },
    PageLoadError: null,
    GatherContext: context,
    // Artifacts that have been replaced by regular gatherers in Fraggle Rock.
    NetworkUserAgent: '',
    traces: {},
    devtoolsLogs: {},
  };
}

/**
 * Deduplicates identical warnings.
 * @param {Array<string | LH.IcuMessage>} warnings
 * @return {Array<string | LH.IcuMessage>}
 */
function deduplicateWarnings(warnings) {
  /** @type {Array<string | LH.IcuMessage>} */
  const unique = [];

  for (const warning of warnings) {
    if (unique.some(existing => isEqual(warning, existing))) continue;
    unique.push(warning);
  }

  return unique;
}

/**
 * @param {LH.FRBaseArtifacts} baseArtifacts
 * @param {Partial<LH.Artifacts>} gathererArtifacts
 * @return {LH.Artifacts}
 */
function base_artifacts_finalizeArtifacts(baseArtifacts, gathererArtifacts) {
  const warnings = baseArtifacts.LighthouseRunWarnings
    .concat(gathererArtifacts.LighthouseRunWarnings || [])
    .concat(getEnvironmentWarnings({settings: baseArtifacts.settings, baseArtifacts}));

  // Cast to remove the partial from gathererArtifacts.
  const artifacts = /** @type {LH.Artifacts} */ ({...baseArtifacts, ...gathererArtifacts});

  // Set the post-run meta artifacts.
  artifacts.Timing = lighthouse_logger.getTimeEntries();
  artifacts.LighthouseRunWarnings = deduplicateWarnings(warnings);

  if (artifacts.PageLoadError && !artifacts.URL.finalDisplayedUrl) {
    artifacts.URL.finalDisplayedUrl = artifacts.URL.requestedUrl || '';
  }

  // Check that the runner remembered to mutate the special-case URL artifact.
  if (!artifacts.URL.finalDisplayedUrl) throw new Error('Runner did not set finalDisplayedUrl');

  return artifacts;
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/legacy/gather/gather-runner.js
/**
 * @license Copyright 2016 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

















/** @typedef {import('./driver.js').Driver} Driver */
/** @typedef {import('../../lib/arbitrary-equality-map.js').ArbitraryEqualityMap} ArbitraryEqualityMap */

/**
 * Each entry in each gatherer result array is the output of a gatherer phase:
 * `beforePass`, `pass`, and `afterPass`. Flattened into an `LH.Artifacts` in
 * `collectArtifacts`.
 * @typedef {Record<keyof LH.GathererArtifacts, Array<LH.Gatherer.PhaseResult>>} GathererResults
 */
/** @typedef {Array<[keyof GathererResults, GathererResults[keyof GathererResults]]>} GathererResultsEntries */

/**
 * Class that drives browser to load the page and runs gatherer lifecycle hooks.
 */
class GatherRunner {
  /**
   * Loads about:blank and waits there briefly. Since a Page.reload command does
   * not let a service worker take over, we navigate away and then come back to
   * reload. We do not `waitForLoad` on about:blank since a page load event is
   * never fired on it.
   * @param {Driver} driver
   * @param {string=} url
   * @return {Promise<void>}
   */
  static async loadBlank(driver, url = defaultPassConfig.blankPage) {
    const status = {msg: 'Resetting state with about:blank', id: 'lh:gather:loadBlank'};
    lighthouse_logger.time(status);
    await gotoURL(driver, url, {waitUntil: ['navigated']});
    lighthouse_logger.timeEnd(status);
  }

  /**
   * Loads options.url with specified options. If the main document URL
   * redirects, options.url will be updated accordingly. As such, options.url
   * will always represent the post-redirected URL. options.requestedUrl is the
   * pre-redirect starting URL. If the navigation errors with "expected" errors such as
   * NO_FCP, a `navigationError` is returned.
   * @param {Driver} driver
   * @param {LH.Gatherer.PassContext} passContext
   * @return {Promise<{navigationError?: LH.LighthouseError}>}
   */
  static async loadPage(driver, passContext) {
    const status = {
      msg: 'Loading page & waiting for onload',
      id: `lh:gather:loadPage-${passContext.passConfig.passName}`,
    };
    lighthouse_logger.time(status);
    try {
      const requestedUrl = passContext.url;
      const {mainDocumentUrl, warnings} = await gotoURL(driver, requestedUrl, {
        waitUntil: passContext.passConfig.recordTrace ?
          ['load', 'fcp'] : ['load'],
        debugNavigation: passContext.settings.debugNavigation,
        maxWaitForFcp: passContext.settings.maxWaitForFcp,
        maxWaitForLoad: passContext.settings.maxWaitForLoad,
        ...passContext.passConfig,
      });
      passContext.url = mainDocumentUrl;
      const {URL} = passContext.baseArtifacts;
      if (!URL.finalDisplayedUrl || !URL.mainDocumentUrl) {
        URL.mainDocumentUrl = mainDocumentUrl;
        URL.finalDisplayedUrl = await passContext.driver.url();
      }
      if (passContext.passConfig.loadFailureMode === 'fatal') {
        passContext.LighthouseRunWarnings.push(...warnings);
      }
    } catch (err) {
      // If it's one of our loading-based LighthouseErrors, we'll treat it as a page load error.
      if (err.code === 'NO_FCP' || err.code === 'PAGE_HUNG') {
        return {navigationError: err};
      }

      throw err;
    } finally {
      lighthouse_logger.timeEnd(status);
    }

    return {};
  }

  /**
   * Rejects if any open tabs would share a service worker with the target URL.
   * This includes the target tab, so navigation to something like about:blank
   * should be done before calling.
   * @param {LH.Gatherer.FRProtocolSession} session
   * @param {string} pageUrl
   * @return {Promise<void>}
   */
  static assertNoSameOriginServiceWorkerClients(session, pageUrl) {
    /** @type {Array<LH.Crdp.ServiceWorker.ServiceWorkerRegistration>} */
    let registrations;
    /** @type {Array<LH.Crdp.ServiceWorker.ServiceWorkerVersion>} */
    let versions;

    return getServiceWorkerRegistrations(session)
      .then(data => {
        registrations = data.registrations;
      })
      .then(_ => getServiceWorkerVersions(session))
      .then(data => {
        versions = data.versions;
      })
      .then(_ => {
        const origin = new URL(pageUrl).origin;

        registrations
          .filter(reg => {
            const swOrigin = new URL(reg.scopeURL).origin;

            return origin === swOrigin;
          })
          .forEach(reg => {
            versions.forEach(ver => {
              // Ignore workers unaffiliated with this registration
              if (ver.registrationId !== reg.registrationId) {
                return;
              }

              // Throw if service worker for this origin has active controlledClients.
              if (ver.controlledClients && ver.controlledClients.length > 0) {
                throw new Error('You probably have multiple tabs open to the same origin.');
              }
            });
          });
      });
  }

  /**
   * @param {Driver} driver
   * @param {{requestedUrl: string, settings: LH.Config.Settings}} options
   * @return {Promise<void>}
   */
  static async setupDriver(driver, options) {
    const status = {msg: 'Initializing…', id: 'lh:gather:setupDriver'};
    lighthouse_logger.time(status);
    const session = driver.defaultSession;

    // Assert no service workers are still installed, so we test that they would actually be installed for a new user.
    await GatherRunner.assertNoSameOriginServiceWorkerClients(session, options.requestedUrl);

    await prepareTargetForNavigationMode(driver, options.settings);

    lighthouse_logger.timeEnd(status);
  }

  /**
   * Reset browser state where needed and release the connection.
   * @param {Driver} driver
   * @param {{requestedUrl: string, settings: LH.Config.Settings}} options
   * @return {Promise<void>}
   */
  static async disposeDriver(driver, options) {
    const status = {msg: 'Disconnecting from browser...', id: 'lh:gather:disconnect'};

    lighthouse_logger.time(status);
    try {
      // If storage was cleared for the run, clear at the end so Lighthouse specifics aren't cached.
      const session = driver.defaultSession;
      const resetStorage = !options.settings.disableStorageReset;
      if (resetStorage) await clearDataForOrigin(session, options.requestedUrl);

      await driver.disconnect();
    } catch (err) {
      // Ignore disconnecting error if browser was already closed.
      // See https://github.com/GoogleChrome/lighthouse/issues/1583
      if (!(/close\/.*status: (500|404)$/.test(err.message))) {
        lighthouse_logger.error('GatherRunner disconnect', err.message);
      }
    }
    lighthouse_logger.timeEnd(status);
  }

  /**
   * Beging recording devtoolsLog and trace (if requested).
   * @param {LH.Gatherer.PassContext} passContext
   * @return {Promise<void>}
   */
  static async beginRecording(passContext) {
    const status = {msg: 'Beginning devtoolsLog and trace', id: 'lh:gather:beginRecording'};
    lighthouse_logger.time(status);

    const {driver, passConfig, settings} = passContext;

    // Always record devtoolsLog
    await driver.beginDevtoolsLog();

    if (passConfig.recordTrace) {
      await driver.beginTrace(settings);
    }

    lighthouse_logger.timeEnd(status);
  }

  /**
   * End recording devtoolsLog and trace (if requested), returning an
   * `LH.Gatherer.LoadData` with the recorded data.
   * @param {LH.Gatherer.PassContext} passContext
   * @return {Promise<LH.Gatherer.LoadData>}
   */
  static async endRecording(passContext) {
    const {driver, passConfig} = passContext;

    let trace;
    if (passConfig.recordTrace) {
      const status = {msg: 'Gathering trace', id: `lh:gather:getTrace`};
      lighthouse_logger.time(status);
      trace = await driver.endTrace();
      lighthouse_logger.timeEnd(status);
    }

    const status = {
      msg: 'Gathering devtoolsLog & network records',
      id: `lh:gather:getDevtoolsLog`,
    };
    lighthouse_logger.time(status);
    const devtoolsLog = await driver.endDevtoolsLog();
    const networkRecords = await NetworkRecordsComputed.request(devtoolsLog, passContext);
    lighthouse_logger.timeEnd(status);

    return {
      networkRecords,
      devtoolsLog,
      trace,
    };
  }

  /**
   * Run beforePass() on gatherers.
   * @param {LH.Gatherer.PassContext} passContext
   * @param {Partial<GathererResults>} gathererResults
   * @return {Promise<void>}
   */
  static async beforePass(passContext, gathererResults) {
    const bpStatus = {msg: `Running beforePass methods`, id: `lh:gather:beforePass`};
    lighthouse_logger.time(bpStatus, 'verbose');

    for (const gathererDefn of passContext.passConfig.gatherers) {
      const gatherer = gathererDefn.instance;
      const status = {
        msg: `Gathering setup: ${gatherer.name}`,
        id: `lh:gather:beforePass:${gatherer.name}`,
      };
      lighthouse_logger.time(status, 'verbose');
      const artifactPromise = Promise.resolve().then(_ => gatherer.beforePass(passContext));
      gathererResults[gatherer.name] = [artifactPromise];
      await artifactPromise.catch(() => {});
      lighthouse_logger.timeEnd(status);
    }
    lighthouse_logger.timeEnd(bpStatus);
  }

  /**
   * Run pass() on gatherers.
   * @param {LH.Gatherer.PassContext} passContext
   * @param {Partial<GathererResults>} gathererResults
   * @return {Promise<void>}
   */
  static async pass(passContext, gathererResults) {
    const config = passContext.passConfig;
    const gatherers = config.gatherers;

    const pStatus = {msg: `Running pass methods`, id: `lh:gather:pass`};
    lighthouse_logger.time(pStatus, 'verbose');

    for (const gathererDefn of gatherers) {
      const gatherer = gathererDefn.instance;
      const status = {
        msg: `Gathering in-page: ${gatherer.name}`,
        id: `lh:gather:pass:${gatherer.name}`,
      };
      lighthouse_logger.time(status);
      const artifactPromise = Promise.resolve().then(_ => gatherer.pass(passContext));

      const gathererResult = gathererResults[gatherer.name] || [];
      gathererResult.push(artifactPromise);
      gathererResults[gatherer.name] = gathererResult;
      await artifactPromise.catch(() => {});
    }

    lighthouse_logger.timeEnd(pStatus);
  }

  /**
   * Run afterPass() on gatherers.
   * @param {LH.Gatherer.PassContext} passContext
   * @param {LH.Gatherer.LoadData} loadData
   * @param {Partial<GathererResults>} gathererResults
   * @return {Promise<void>}
   */
  static async afterPass(passContext, loadData, gathererResults) {
    const config = passContext.passConfig;
    const gatherers = config.gatherers;

    const apStatus = {msg: `Running afterPass methods`, id: `lh:gather:afterPass`};
    lighthouse_logger.time(apStatus, 'verbose');

    for (const gathererDefn of gatherers) {
      const gatherer = gathererDefn.instance;
      const status = {
        msg: `Gathering: ${gatherer.name}`,
        id: `lh:gather:afterPass:${gatherer.name}`,
      };
      lighthouse_logger.time(status);

      const artifactPromise = Promise.resolve()
        .then(_ => gatherer.afterPass(passContext, loadData));

      const gathererResult = gathererResults[gatherer.name] || [];
      gathererResult.push(artifactPromise);
      gathererResults[gatherer.name] = gathererResult;
      await artifactPromise.catch(() => {});
      lighthouse_logger.timeEnd(status);
    }
    lighthouse_logger.timeEnd(apStatus);
  }

  /**
   * Takes the results of each gatherer phase for each gatherer and uses the
   * last produced value (that's not undefined) as the artifact for that
   * gatherer. If an error was rejected from a gatherer phase,
   * uses that error object as the artifact instead.
   * @param {Partial<GathererResults>} gathererResults
   * @return {Promise<{artifacts: Partial<LH.GathererArtifacts>}>}
   */
  static async collectArtifacts(gathererResults) {
    /** @type {Partial<LH.GathererArtifacts>} */
    const gathererArtifacts = {};

    const resultsEntries = /** @type {GathererResultsEntries} */ (Object.entries(gathererResults));
    for (const [gathererName, phaseResultsPromises] of resultsEntries) {
      try {
        const phaseResults = await Promise.all(phaseResultsPromises);
        // Take the last defined pass result as artifact. If none are defined, the undefined check below handles it.
        const definedResults = phaseResults.filter(element => element !== undefined);
        const artifact = definedResults[definedResults.length - 1];
        // @ts-expect-error tsc can't yet express that gathererName is only a single type in each iteration, not a union of types.
        gathererArtifacts[gathererName] = artifact;
      } catch (err) {
        // Return error to runner to handle turning it into an error audit.
        gathererArtifacts[gathererName] = err;
      }

      if (gathererArtifacts[gathererName] === undefined) {
        throw new Error(`${gathererName} failed to provide an artifact.`);
      }
    }

    return {
      artifacts: gathererArtifacts,
    };
  }

  /**
   * Return an initialized but mostly empty set of base artifacts, to be
   * populated as the run continues.
   * @param {{driver: Driver, requestedUrl: string, settings: LH.Config.Settings}} options
   * @return {Promise<LH.BaseArtifacts>}
   */
  static async initializeBaseArtifacts(options) {
    const hostUserAgent = (await options.driver.getBrowserVersion()).userAgent;

    // Whether Lighthouse was run on a mobile device (i.e. not on a desktop machine).
    const HostFormFactor = hostUserAgent.includes('Android') || hostUserAgent.includes('Mobile') ?
      'mobile' : 'desktop';

    return {
      fetchTime: (new Date()).toJSON(),
      LighthouseRunWarnings: [],
      HostFormFactor,
      HostUserAgent: hostUserAgent,
      NetworkUserAgent: '', // updated later
      BenchmarkIndex: 0, // updated later
      traces: {},
      devtoolsLogs: {},
      settings: options.settings,
      GatherContext: {gatherMode: 'navigation'},
      URL: {
        requestedUrl: options.requestedUrl,
        mainDocumentUrl: '',
        finalDisplayedUrl: '',
      },
      Timing: [],
      PageLoadError: null,
    };
  }

  /**
   * Populates the important base artifacts from a fully loaded test page.
   * Currently must be run before `start-url` gatherer so that `WebAppManifest`
   * will be available to it.
   * @param {LH.Gatherer.PassContext} passContext
   */
  static async populateBaseArtifacts(passContext) {
    const status = {msg: 'Populate base artifacts', id: 'lh:gather:populateBaseArtifacts'};
    lighthouse_logger.time(status);

    const baseArtifacts = passContext.baseArtifacts;

    // Find the NetworkUserAgent actually used in the devtoolsLogs.
    const devtoolsLog = baseArtifacts.devtoolsLogs[passContext.passConfig.passName];
    baseArtifacts.NetworkUserAgent = network_user_agent.getNetworkUserAgent(devtoolsLog);

    const environmentWarnings = getEnvironmentWarnings(passContext);
    baseArtifacts.LighthouseRunWarnings.push(...environmentWarnings);

    lighthouse_logger.timeEnd(status);
  }

  /**
   * @param {Array<LH.Config.Pass>} passConfigs
   * @param {{driver: Driver, requestedUrl: string, settings: LH.Config.Settings, computedCache: Map<string, ArbitraryEqualityMap>}} options
   * @return {Promise<LH.Artifacts>}
   */
  static async run(passConfigs, options) {
    const driver = options.driver;

    /** @type {Partial<LH.GathererArtifacts>} */
    const artifacts = {};

    try {
      await driver.connect();
      // In the devtools/extension case, we can't still be on the site while trying to clear state
      // So we first navigate to about:blank, then apply our emulation & setup
      await GatherRunner.loadBlank(driver);

      const baseArtifacts = await GatherRunner.initializeBaseArtifacts(options);
      baseArtifacts.BenchmarkIndex = await getBenchmarkIndex(driver.executionContext);

      // Hack for running benchmarkIndex extra times.
      // Add a `bidx=20` query param, eg: https://www.example.com/?bidx=50
      const parsedUrl = url_utils.isValid(options.requestedUrl) && new URL(options.requestedUrl);
      if (options.settings.channel === 'lr' && parsedUrl && parsedUrl.searchParams.has('bidx')) {
        const bidxRunCount = parsedUrl.searchParams.get('bidx') || 0;
        // Add the first bidx into the new set
        const indexes = [baseArtifacts.BenchmarkIndex];
        for (let i = 0; i < bidxRunCount; i++) {
          const bidx = await getBenchmarkIndex(driver.executionContext);
          indexes.push(bidx);
        }
        baseArtifacts.BenchmarkIndexes = indexes;
      }

      await GatherRunner.setupDriver(driver, options);

      let isFirstPass = true;
      for (const passConfig of passConfigs) {
        /** @type {LH.Gatherer.PassContext} */
        const passContext = {
          gatherMode: 'navigation',
          driver,
          url: options.requestedUrl,
          settings: options.settings,
          passConfig,
          baseArtifacts,
          computedCache: options.computedCache,
          LighthouseRunWarnings: baseArtifacts.LighthouseRunWarnings,
        };
        const passResults = await GatherRunner.runPass(passContext);
        Object.assign(artifacts, passResults.artifacts);

        // If we encountered a pageLoadError, don't try to keep loading the page in future passes.
        if (passResults.pageLoadError && passConfig.loadFailureMode === 'fatal') {
          baseArtifacts.PageLoadError = passResults.pageLoadError;
          break;
        }

        if (isFirstPass) {
          await GatherRunner.populateBaseArtifacts(passContext);
          isFirstPass = false;
        }
      }

      await GatherRunner.disposeDriver(driver, options);
      return base_artifacts_finalizeArtifacts(baseArtifacts, artifacts);
    } catch (err) {
      // Clean up on error. Don't await so that the root error, not a disposal error, is shown.
      GatherRunner.disposeDriver(driver, options);

      throw err;
    }
  }

  /**
   * Save the devtoolsLog and trace (if applicable) to baseArtifacts.
   * @param {LH.Gatherer.PassContext} passContext
   * @param {LH.Gatherer.LoadData} loadData
   * @param {string} passName
   */
  static _addLoadDataToBaseArtifacts(passContext, loadData, passName) {
    const baseArtifacts = passContext.baseArtifacts;
    baseArtifacts.devtoolsLogs[passName] = loadData.devtoolsLog;
    if (loadData.trace) baseArtifacts.traces[passName] = loadData.trace;
  }

  /**
   * Starting from about:blank, load the page and run gatherers for this pass.
   * @param {LH.Gatherer.PassContext} passContext
   * @return {Promise<{artifacts: Partial<LH.GathererArtifacts>, pageLoadError?: LH.LighthouseError}>}
   */
  static async runPass(passContext) {
    const status = {
      msg: `Running ${passContext.passConfig.passName} pass`,
      id: `lh:gather:runPass-${passContext.passConfig.passName}`,
      args: [passContext.passConfig.gatherers.map(g => g.instance.name).join(', ')],
    };
    lighthouse_logger.time(status);

    /** @type {Partial<GathererResults>} */
    const gathererResults = {};
    const {driver, passConfig} = passContext;

    // Go to about:blank, set up, and run `beforePass()` on gatherers.
    await GatherRunner.loadBlank(driver, passConfig.blankPage);
    const {warnings} = await prepareTargetForIndividualNavigation(
      driver.defaultSession,
      passContext.settings,
      {
        requestor: passContext.url,
        disableStorageReset: !passConfig.useThrottling,
        disableThrottling: !passConfig.useThrottling,
        blockedUrlPatterns: passConfig.blockedUrlPatterns,
      }
    );
    passContext.LighthouseRunWarnings.push(...warnings);
    await GatherRunner.beforePass(passContext, gathererResults);

    // Navigate, start recording, and run `pass()` on gatherers.
    await GatherRunner.beginRecording(passContext);
    const {navigationError: possibleNavError} = await GatherRunner.loadPage(driver, passContext);
    await GatherRunner.pass(passContext, gathererResults);
    const loadData = await GatherRunner.endRecording(passContext);

    // Disable throttling so the afterPass analysis isn't throttled.
    await clearThrottling(driver.defaultSession);

    // In case of load error, save log and trace with an error prefix, return no artifacts for this pass.
    const pageLoadError = getPageLoadError(possibleNavError, {
      url: passContext.url,
      loadFailureMode: passConfig.loadFailureMode,
      networkRecords: loadData.networkRecords,
      warnings: passContext.LighthouseRunWarnings,
    });
    if (pageLoadError) {
      const localizedMessage = format_getFormatted(pageLoadError.friendlyMessage,
          passContext.settings.locale);
      lighthouse_logger.error('GatherRunner', localizedMessage, passContext.url);

      passContext.LighthouseRunWarnings.push(pageLoadError.friendlyMessage);
      GatherRunner._addLoadDataToBaseArtifacts(passContext, loadData,
          `pageLoadError-${passConfig.passName}`);

      lighthouse_logger.timeEnd(status);
      return {artifacts: {}, pageLoadError};
    }

    // If no error, save devtoolsLog and trace.
    GatherRunner._addLoadDataToBaseArtifacts(passContext, loadData, passConfig.passName);

    // Run `afterPass()` on gatherers and return collected artifacts.
    await GatherRunner.afterPass(passContext, loadData, gathererResults);
    const artifacts = GatherRunner.collectArtifacts(gathererResults);

    lighthouse_logger.timeEnd(status);
    return artifacts;
  }
}



;// CONCATENATED MODULE: external "process"
const external_process_namespaceObject = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("process");
;// CONCATENATED MODULE: ./node_modules/lighthouse/core/lib/lh-env.js
/**
 * @license Copyright 2020 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */



// NODE_ENV is set to test by mocha-setup.js and the smokehouse CLI runner
// CI as a catchall for everything we do in GitHub Actions
const isUnderTest = !!external_process_namespaceObject.env.CI || external_process_namespaceObject.env.NODE_ENV === 'test';



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/lib/statistics.js
/**
 * @license Copyright 2017 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

// The exact double values for the max and min scores possible in each range.
const MIN_PASSING_SCORE = 0.90000000000000002220446049250313080847263336181640625;
const MAX_AVERAGE_SCORE = 0.899999999999999911182158029987476766109466552734375;
const MIN_AVERAGE_SCORE = 0.5;
const MAX_FAILING_SCORE = 0.499999999999999944488848768742172978818416595458984375;

/**
 * Approximates the Gauss error function, the probability that a random variable
 * from the standard normal distribution lies within [-x, x]. Moved from
 * traceviewer.b.math.erf, based on Abramowitz and Stegun, formula 7.1.26.
 * @param {number} x
 * @return {number}
 */
function erf(x) {
  // erf(-x) = -erf(x);
  const sign = Math.sign(x);
  x = Math.abs(x);

  const a1 = 0.254829592;
  const a2 = -0.284496736;
  const a3 = 1.421413741;
  const a4 = -1.453152027;
  const a5 = 1.061405429;
  const p = 0.3275911;
  const t = 1 / (1 + p * x);
  const y = t * (a1 + t * (a2 + t * (a3 + t * (a4 + t * a5))));
  return sign * (1 - y * Math.exp(-x * x));
}

/**
 * Returns the score (1 - percentile) of `value` in a log-normal distribution
 * specified by the `median` value, at which the score will be 0.5, and a 10th
 * percentile value, at which the score will be 0.9. The score represents the
 * amount of the distribution greater than `value`. All values should be in the
 * same units (e.g. milliseconds). See
 *   https://www.desmos.com/calculator/o98tbeyt1t
 * for an interactive view of the relationship between these parameters and the
 * typical parameterization (location and shape) of the log-normal distribution.
 * @param {{median: number, p10: number}} parameters
 * @param {number} value
 * @return {number}
 */
function getLogNormalScore({median, p10}, value) {
  // Required for the log-normal distribution.
  if (median <= 0) throw new Error('median must be greater than zero');
  if (p10 <= 0) throw new Error('p10 must be greater than zero');
  // Not strictly required, but if p10 > median, it flips around and becomes the p90 point.
  if (p10 >= median) throw new Error('p10 must be less than the median');

  // Non-positive values aren't in the distribution, so always 1.
  if (value <= 0) return 1;

  // Closest double to `erfc-1(1/5)`.
  const INVERSE_ERFC_ONE_FIFTH = 0.9061938024368232;

  // Shape (σ) is `|log(p10/median) / (sqrt(2)*erfc^-1(1/5))|` and
  // standardizedX is `1/2 erfc(log(value/median) / (sqrt(2)*σ))`, so simplify a bit.
  const xRatio = Math.max(Number.MIN_VALUE, value / median); // value and median are > 0, so is ratio.
  const xLogRatio = Math.log(xRatio);
  const p10Ratio = Math.max(Number.MIN_VALUE, p10 / median); // p10 and median are > 0, so is ratio.
  const p10LogRatio = -Math.log(p10Ratio); // negate to keep σ positive.
  const standardizedX = xLogRatio * INVERSE_ERFC_ONE_FIFTH / p10LogRatio;
  const complementaryPercentile = (1 - erf(standardizedX)) / 2;

  // Clamp to avoid floating-point out-of-bounds issues and keep score in expected range.
  let score;
  if (value <= p10) {
    // Passing. Clamp to [0.9, 1].
    score = Math.max(MIN_PASSING_SCORE, Math.min(1, complementaryPercentile));
  } else if (value <= median) {
    // Average. Clamp to [0.5, 0.9).
    score = Math.max(MIN_AVERAGE_SCORE, Math.min(MAX_AVERAGE_SCORE, complementaryPercentile));
  } else {
    // Failing. Clamp to [0, 0.5).
    score = Math.max(0, Math.min(MAX_FAILING_SCORE, complementaryPercentile));
  }
  return score;
}

/**
 * Interpolates the y value at a point x on the line defined by (x0, y0) and (x1, y1)
 * @param {number} x0
 * @param {number} y0
 * @param {number} x1
 * @param {number} y1
 * @param {number} x
 * @return {number}
 */
function linearInterpolation(x0, y0, x1, y1, x) {
  const slope = (y1 - y0) / (x1 - x0);
  return y0 + (x - x0) * slope;
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/audits/audit.js
/**
 * @license Copyright 2016 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */






const DEFAULT_PASS = 'defaultPass';

/**
 * @typedef TableOptions
 * @property {number=} wastedMs
 * @property {number=} wastedBytes
 */

/**
 * @typedef OpportunityOptions
 * @property {number} overallSavingsMs
 * @property {number=} overallSavingsBytes
 */

/**
 * Clamp figure to 2 decimal places
 * @param {number} val
 * @return {number}
 */
const clampTo2Decimals = val => Math.round(val * 100) / 100;

class Audit {
  /**
   * @return {string}
   */
  static get DEFAULT_PASS() {
    return DEFAULT_PASS;
  }

  /**
   * @return {LH.Audit.ScoreDisplayModes}
   */
  static get SCORING_MODES() {
    return {
      NUMERIC: 'numeric',
      BINARY: 'binary',
      MANUAL: 'manual',
      INFORMATIVE: 'informative',
      NOT_APPLICABLE: 'notApplicable',
      ERROR: 'error',
    };
  }

  /**
   * @return {LH.Audit.Meta}
   */
  static get meta() {
    throw new Error('Audit meta information must be overridden.');
  }

  /**
   * @return {Object}
   */
  static get defaultOptions() {
    return {};
  }

  /* eslint-disable no-unused-vars */

  /**
   *
   * @param {LH.Artifacts} artifacts
   * @param {LH.Audit.Context} context
   * @return {LH.Audit.Product|Promise<LH.Audit.Product>}
   */
  static audit(artifacts, context) {
    throw new Error('audit() method must be overriden');
  }

  /* eslint-enable no-unused-vars */

  /**
   * Computes a score between 0 and 1 based on the measured `value`. Score is determined by
   * considering a log-normal distribution governed by two control points (the 10th
   * percentile value and the median value) and represents the percentage of sites that are
   * greater than `value`.
   *
   * Score characteristics:
   * - within [0, 1]
   * - rounded to two digits
   * - value must meet or beat a controlPoint value to meet or exceed its percentile score:
   *   - value > median will give a score < 0.5; value ≤ median will give a score ≥ 0.5.
   *   - value > p10 will give a score < 0.9; value ≤ p10 will give a score ≥ 0.9.
   * - values < p10 will get a slight boost so a score of 1 is achievable by a
   *   `value` other than those close to 0. Scores of > ~0.99524 end up rounded to 1.
   * @param {{median: number, p10: number}} controlPoints
   * @param {number} value
   * @return {number}
   */
  static computeLogNormalScore(controlPoints, value) {
    let percentile = getLogNormalScore(controlPoints, value);
    // Add a boost to scores of 90+, linearly ramping from 0 at 0.9 to half a
    // point (0.005) at 1. Expands scores in (0.9, 1] to (0.9, 1.005], so more top
    // scores will be a perfect 1 after the two-digit `Math.floor()` rounding below.
    if (percentile > 0.9) { // getLogNormalScore ensures `percentile` can't exceed 1.
      percentile += 0.05 * (percentile - 0.9);
    }
    return Math.floor(percentile * 100) / 100;
  }

  /**
   * This catches typos in the `key` property of a heading definition of table/opportunity details.
   * Throws an error if any of keys referenced by headings don't exist in at least one of the items.
   *
   * @param {LH.Audit.Details.Table['headings']|LH.Audit.Details.Opportunity['headings']} headings
   * @param {LH.Audit.Details.Opportunity['items']|LH.Audit.Details.Table['items']} items
   */
  static assertHeadingKeysExist(headings, items) {
    // If there are no items, there's nothing to check.
    if (!items.length) return;
    // Only do this in tests for now.
    if (!isUnderTest) return;

    for (const heading of headings) {
      // `null` heading key means it's a column for subrows only
      if (heading.key === null) continue;

      const key = heading.key;
      if (items.some(item => key in item)) continue;
      throw new Error(`"${heading.key}" is missing from items`);
    }
  }

  /**
   * @param {LH.Audit.Details.Table['headings']} headings
   * @param {LH.Audit.Details.Table['items']} results
   * @param {TableOptions=} options
   * @return {LH.Audit.Details.Table}
   */
  static makeTableDetails(headings, results, options = {}) {
    const {wastedBytes, wastedMs} = options;
    const summary = (wastedBytes || wastedMs) ? {wastedBytes, wastedMs} : undefined;
    if (results.length === 0) {
      return {
        type: 'table',
        headings: [],
        items: [],
        summary,
      };
    }

    Audit.assertHeadingKeysExist(headings, results);

    return {
      type: 'table',
      headings: headings,
      items: results,
      summary,
    };
  }

  /**
   * @param {LH.Audit.Details.List['items']} items
   * @return {LH.Audit.Details.List}
   */
  static makeListDetails(items) {
    return {
      type: 'list',
      items: items,
    };
  }

  /** @typedef {{
   * content: string;
   * title: string;
   * lineMessages: LH.Audit.Details.SnippetValue['lineMessages'];
   * generalMessages: LH.Audit.Details.SnippetValue['generalMessages'];
   * node?: LH.Audit.Details.NodeValue;
   * maxLineLength?: number;
   * maxLinesAroundMessage?: number;
   * }} SnippetInfo */
  /**
   * @param {SnippetInfo} snippetInfo
   * @return {LH.Audit.Details.SnippetValue}
   */
  static makeSnippetDetails({
    content,
    title,
    lineMessages,
    generalMessages,
    node,
    maxLineLength = 200,
    maxLinesAroundMessage = 20,
  }) {
    const allLines = Audit._makeSnippetLinesArray(content, maxLineLength);
    const lines = Util.filterRelevantLines(allLines, lineMessages, maxLinesAroundMessage);
    return {
      type: 'snippet',
      lines,
      title,
      lineMessages,
      generalMessages,
      lineCount: allLines.length,
      node,
    };
  }

  /**
   * @param {string} content
   * @param {number} maxLineLength
   * @return {LH.Audit.Details.SnippetValue['lines']}
   */
  static _makeSnippetLinesArray(content, maxLineLength) {
    return content.split('\n').map((line, lineIndex) => {
      const lineNumber = lineIndex + 1;
      /** @type LH.Audit.Details.SnippetValue['lines'][0] */
      const lineDetail = {
        content: line.slice(0, maxLineLength),
        lineNumber,
      };
      if (line.length > maxLineLength) {
        lineDetail.truncated = true;
      }
      return lineDetail;
    });
  }

  /**
   * @param {LH.Audit.Details.Opportunity['headings']} headings
   * @param {LH.Audit.Details.Opportunity['items']} items
   * @param {OpportunityOptions} options
   * @return {LH.Audit.Details.Opportunity}
   */
  static makeOpportunityDetails(headings, items, options) {
    Audit.assertHeadingKeysExist(headings, items);
    const {overallSavingsMs, overallSavingsBytes} = options;

    return {
      type: 'opportunity',
      headings: items.length === 0 ? [] : headings,
      items,
      overallSavingsMs,
      overallSavingsBytes,
    };
  }

  /**
   * @param {LH.Artifacts.NodeDetails} node
   * @return {LH.Audit.Details.NodeValue}
   */
  static makeNodeItem(node) {
    return {
      type: 'node',
      lhId: node.lhId,
      path: node.devtoolsNodePath,
      selector: node.selector,
      boundingRect: node.boundingRect,
      snippet: node.snippet,
      nodeLabel: node.nodeLabel,
    };
  }

  /**
   * @param {LH.Artifacts.Bundle} bundle
   * @param {number} generatedLine
   * @param {number} generatedColumn
   * @return {LH.Audit.Details.SourceLocationValue['original']}
   */
  static _findOriginalLocation(bundle, generatedLine, generatedColumn) {
    const entry = bundle?.map.findEntry(generatedLine, generatedColumn);
    if (!entry) return;

    return {
      file: entry.sourceURL || '',
      line: entry.sourceLineNumber || 0,
      column: entry.sourceColumnNumber || 0,
    };
  }

  /**
   * @param {string} url
   * @param {number} line 0-indexed
   * @param {number} column 0-indexed
   * @param {LH.Artifacts.Bundle=} bundle
   * @return {LH.Audit.Details.SourceLocationValue}
   */
  static makeSourceLocation(url, line, column, bundle) {
    return {
      type: 'source-location',
      url,
      urlProvider: 'network',
      line,
      column,
      original: bundle && this._findOriginalLocation(bundle, line, column),
    };
  }

  /**
   * @param {LH.Artifacts.ConsoleMessage} entry
   * @param {LH.Artifacts.Bundle=} bundle
   * @return {LH.Audit.Details.SourceLocationValue | undefined}
   */
  static makeSourceLocationFromConsoleMessage(entry, bundle) {
    if (!entry.url) return;

    const line = entry.lineNumber || 0;
    const column = entry.columnNumber || 0;
    return this.makeSourceLocation(entry.url, line, column, bundle);
  }

  /**
   * @param {number|null} score
   * @param {LH.Audit.ScoreDisplayMode} scoreDisplayMode
   * @param {string} auditId
   * @return {number|null}
   */
  static _normalizeAuditScore(score, scoreDisplayMode, auditId) {
    if (scoreDisplayMode !== Audit.SCORING_MODES.BINARY &&
        scoreDisplayMode !== Audit.SCORING_MODES.NUMERIC) {
      return null;
    }

    // Otherwise, score must be a number in [0, 1].
    if (score === null || !Number.isFinite(score)) {
      throw new Error(`Invalid score for ${auditId}: ${score}`);
    }
    if (score > 1) throw new Error(`Audit score for ${auditId} is > 1`);
    if (score < 0) throw new Error(`Audit score for ${auditId} is < 0`);

    score = clampTo2Decimals(score);

    return score;
  }

  /**
   * @param {typeof Audit} audit
   * @param {string | LH.IcuMessage} errorMessage
   * @return {LH.RawIcu<LH.Audit.Result>}
   */
  static generateErrorAuditResult(audit, errorMessage) {
    return Audit.generateAuditResult(audit, {
      score: null,
      errorMessage,
    });
  }

  /**
   * @param {typeof Audit} audit
   * @param {LH.Audit.Product} product
   * @return {LH.RawIcu<LH.Audit.Result>}
   */
  static generateAuditResult(audit, product) {
    if (product.score === undefined) {
      throw new Error('generateAuditResult requires a score');
    }

    // Default to binary scoring.
    let scoreDisplayMode = audit.meta.scoreDisplayMode || Audit.SCORING_MODES.BINARY;

    // But override if product contents require it.
    if (product.errorMessage) {
      // Error result.
      scoreDisplayMode = Audit.SCORING_MODES.ERROR;
    } else if (product.notApplicable) {
      // Audit was determined to not apply to the page.
      scoreDisplayMode = Audit.SCORING_MODES.NOT_APPLICABLE;
    }

    const score = Audit._normalizeAuditScore(product.score, scoreDisplayMode, audit.meta.id);

    let auditTitle = audit.meta.title;
    if (audit.meta.failureTitle) {
      if (score !== null && score < Util.PASS_THRESHOLD) {
        auditTitle = audit.meta.failureTitle;
      }
    }

    // The Audit.Product type is bifurcated to enforce numericUnit accompanying numericValue;
    // the existence of `numericUnit` is our discriminant.
    // Make ts happy and enforce this contract programmatically by only pulling numericValue off of
    // a `NumericProduct` type.
    const numericProduct = 'numericUnit' in product ? product : undefined;

    return {
      id: audit.meta.id,
      title: auditTitle,
      description: audit.meta.description,

      score,
      scoreDisplayMode,
      numericValue: numericProduct?.numericValue,
      numericUnit: numericProduct?.numericUnit,

      displayValue: product.displayValue,
      explanation: product.explanation,
      errorMessage: product.errorMessage,
      warnings: product.warnings,

      details: product.details,
    };
  }
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/scoring.js
/**
 * @license Copyright 2018 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */



/**
 * Clamp figure to 2 decimal places
 * @param {number} val
 * @return {number}
 */
const scoring_clampTo2Decimals = val => Math.round(val * 100) / 100;

class ReportScoring {
  /**
   * Computes the weighted-average of the score of the list of items.
   * @param {Array<{score: number|null, weight: number}>} items
   * @return {number|null}
   */
  static arithmeticMean(items) {
    // Filter down to just the items with a weight as they have no effect on score
    items = items.filter(item => item.weight > 0);
    // If there is 1 null score, return a null average
    if (items.some(item => item.score === null)) return null;

    const results = items.reduce(
      (result, item) => {
        const score = item.score;
        const weight = item.weight;

        return {
          weight: result.weight + weight,
          sum: result.sum + /** @type {number} */ (score) * weight,
        };
      },
      {weight: 0, sum: 0}
    );

    return scoring_clampTo2Decimals(results.sum / results.weight || 0);
  }

  /**
   * Returns the report JSON object with computed scores.
   * @param {Object<string, LH.Config.Category>} configCategories
   * @param {Object<string, LH.RawIcu<LH.Audit.Result>>} resultsByAuditId
   * @return {Object<string, LH.RawIcu<LH.Result.Category>>}
   */
  static scoreAllCategories(configCategories, resultsByAuditId) {
    /** @type {Record<string, LH.RawIcu<LH.Result.Category>>} */
    const scoredCategories = {};

    for (const [categoryId, configCategory] of Object.entries(configCategories)) {
      // Copy category audit members
      const auditRefs = configCategory.auditRefs.map(configMember => {
        const member = {...configMember};

        // If a result was not applicable, meaning its checks did not run against anything on
        // the page, force it's weight to 0. It will not count during the arithmeticMean() but
        // will still be included in the final report json and displayed in the report as
        // "Not Applicable".
        const result = resultsByAuditId[member.id];
        if (result.scoreDisplayMode === Audit.SCORING_MODES.NOT_APPLICABLE ||
            result.scoreDisplayMode === Audit.SCORING_MODES.INFORMATIVE ||
            result.scoreDisplayMode === Audit.SCORING_MODES.MANUAL) {
          member.weight = 0;
        }

        return member;
      });

      const scores = auditRefs.map(auditRef => ({
        score: resultsByAuditId[auditRef.id].score,
        weight: auditRef.weight,
      }));
      const score = ReportScoring.arithmeticMean(scores);

      scoredCategories[categoryId] = {
        ...configCategory,
        auditRefs,
        id: categoryId,
        score,
      };
    }

    return scoredCategories;
  }
}



// EXTERNAL MODULE: ./node_modules/lighthouse-stack-packs/index.js
var lighthouse_stack_packs = __nccwpck_require__(9916);
;// CONCATENATED MODULE: ./node_modules/lighthouse/core/lib/stack-packs.js
/**
 * @license Copyright 2019 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */






/**
 * Pairs consisting of a stack pack's ID and the set of stacks needed to be
 * detected in a page to display that pack's advice.
 * @type {Array<{packId: string, requiredStacks: Array<string>}>}
 */
const stackPacksToInclude = [
  {
    packId: 'wordpress',
    requiredStacks: ['js:wordpress'],
  },
  {
    packId: 'wp-rocket',
    requiredStacks: ['js:wp-rocket'],
  },
  {
    packId: 'ezoic',
    requiredStacks: ['js:ezoic'],
  },
  {
    packId: 'drupal',
    requiredStacks: ['js:drupal'],
  },
  {
    packId: 'amp',
    requiredStacks: ['js:amp'],
  },
  {
    packId: 'magento',
    requiredStacks: ['js:magento'],
  },
  {
    packId: 'octobercms',
    requiredStacks: ['js:octobercms'],
  },
  {
    packId: 'joomla',
    requiredStacks: ['js:joomla'],
  },
  {
    packId: 'next.js',
    requiredStacks: ['js:next'],
  },
  {
    packId: 'nuxt',
    requiredStacks: ['js:nuxt'],
  },
  {
    packId: 'angular',
    requiredStacks: ['js:@angular/core'],
  },
  {
    packId: 'react',
    requiredStacks: ['js:react'],
  },
];

/**
 * Returns all packs that match the stacks found in the page.
 * @param {LH.Artifacts['Stacks']|undefined} pageStacks
 * @return {LH.RawIcu<Array<LH.Result.StackPack>>}
 */
function getStackPacks(pageStacks) {
  if (!pageStacks) return [];

  /** @type {LH.RawIcu<Array<LH.Result.StackPack>>} */
  const packs = [];

  for (const pageStack of pageStacks) {
    const stackPackToIncl = stackPacksToInclude.find(stackPackToIncl =>
      stackPackToIncl.requiredStacks.includes(`${pageStack.detector}:${pageStack.id}`));
    if (!stackPackToIncl) {
      continue;
    }

    // Grab the full pack definition.
    const matchedPack = lighthouse_stack_packs.find(pack => pack.id === stackPackToIncl.packId);
    if (!matchedPack) {
      lighthouse_logger.warn('StackPacks',
        `'${stackPackToIncl.packId}' stack pack was matched but is not found in stack-packs lib`);
      continue;
    }

    // Create i18n handler to get translated strings.
    const str_ = createIcuMessageFn(
      `node_modules/lighthouse-stack-packs/packs/${matchedPack.id}.js`,
      matchedPack.UIStrings
    );

    /** @type {Record<string, LH.IcuMessage>} */
    const descriptions = {};
    /** @type {Record<string, string>} */
    const UIStrings = matchedPack.UIStrings;

    // Convert all strings into the correct translation.
    for (const key in UIStrings) {
      if (UIStrings[key]) {
        descriptions[key] = str_(UIStrings[key]);
      }
    }

    packs.push({
      id: matchedPack.id,
      title: matchedPack.title,
      iconDataURL: matchedPack.icon,
      descriptions,
    });
  }

  return packs;
}



// EXTERNAL MODULE: external "stream"
var external_stream_ = __nccwpck_require__(2781);
// EXTERNAL MODULE: external "util"
var external_util_ = __nccwpck_require__(3837);
;// CONCATENATED MODULE: ./node_modules/lighthouse/core/lib/dependency-graph/simulator/tcp-connection.js
/**
 * @license Copyright 2017 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

/** @typedef {import('./simulator-timing-map.js').ConnectionTiming} ConnectionTiming */

const INITIAL_CONGESTION_WINDOW = 10;
const TCP_SEGMENT_SIZE = 1460;

class TcpConnection {
  /**
   * @param {number} rtt
   * @param {number} throughput
   * @param {number=} serverLatency
   * @param {boolean=} ssl
   * @param {boolean=} h2
   */
  constructor(rtt, throughput, serverLatency = 0, ssl = true, h2 = false) {
    this._warmed = false;
    this._ssl = ssl;
    this._h2 = h2;
    this._rtt = rtt;
    this._throughput = throughput;
    this._serverLatency = serverLatency;
    this._congestionWindow = INITIAL_CONGESTION_WINDOW;
    this._h2OverflowBytesDownloaded = 0;
  }

  /**
   * @param {number} rtt
   * @param {number} availableThroughput
   * @return {number}
   */
  static maximumSaturatedConnections(rtt, availableThroughput) {
    const roundTripsPerSecond = 1000 / rtt;
    const bytesPerRoundTrip = TCP_SEGMENT_SIZE;
    const bytesPerSecond = roundTripsPerSecond * bytesPerRoundTrip;
    const minimumThroughputRequiredPerRequest = bytesPerSecond * 8;
    return Math.floor(availableThroughput / minimumThroughputRequiredPerRequest);
  }

  /**
   * @return {number}
   */
  _computeMaximumCongestionWindowInSegments() {
    const bytesPerSecond = this._throughput / 8;
    const secondsPerRoundTrip = this._rtt / 1000;
    const bytesPerRoundTrip = bytesPerSecond * secondsPerRoundTrip;
    return Math.floor(bytesPerRoundTrip / TCP_SEGMENT_SIZE);
  }

  /**
   * @param {number} throughput
   */
  setThroughput(throughput) {
    this._throughput = throughput;
  }

  /**
   * @param {number} congestion
   */
  setCongestionWindow(congestion) {
    this._congestionWindow = congestion;
  }

  /**
   * @param {boolean} warmed
   */
  setWarmed(warmed) {
    this._warmed = warmed;
  }

  /**
   * @return {boolean}
   */
  isWarm() {
    return this._warmed;
  }

  /**
   * @return {boolean}
   */
  isH2() {
    return this._h2;
  }

  /**
   * @return {number}
   */
  get congestionWindow() {
    return this._congestionWindow;
  }

  /**
   * Sets the number of excess bytes that are available to this connection on future downloads, only
   * applies to H2 connections.
   * @param {number} bytes
   */
  setH2OverflowBytesDownloaded(bytes) {
    if (!this._h2) return;
    this._h2OverflowBytesDownloaded = bytes;
  }

  /**
   * @return {TcpConnection}
   */
  clone() {
    return Object.assign(new TcpConnection(this._rtt, this._throughput), this);
  }

  /**
   * Simulates a network download of a particular number of bytes over an optional maximum amount of time
   * and returns information about the ending state.
   *
   * See https://hpbn.co/building-blocks-of-tcp/#three-way-handshake and
   *  https://hpbn.co/transport-layer-security-tls/#tls-handshake for details.
   *
   * @param {number} bytesToDownload
   * @param {DownloadOptions} [options]
   * @return {DownloadResults}
   */
  simulateDownloadUntil(bytesToDownload, options) {
    const {timeAlreadyElapsed = 0, maximumTimeToElapse = Infinity, dnsResolutionTime = 0} =
      options || {};

    if (this._warmed && this._h2) {
      bytesToDownload -= this._h2OverflowBytesDownloaded;
    }
    const twoWayLatency = this._rtt;
    const oneWayLatency = twoWayLatency / 2;
    const maximumCongestionWindow = this._computeMaximumCongestionWindowInSegments();

    let handshakeAndRequest = oneWayLatency;
    if (!this._warmed) {
      handshakeAndRequest =
        // DNS lookup
        dnsResolutionTime +
        // SYN
        oneWayLatency +
        // SYN ACK
        oneWayLatency +
        // ACK + initial request
        oneWayLatency +
        // ClientHello/ServerHello assuming TLS False Start is enabled (https://istlsfastyet.com/#server-performance).
        (this._ssl ? twoWayLatency : 0);
    }

    let roundTrips = Math.ceil(handshakeAndRequest / twoWayLatency);
    let timeToFirstByte = handshakeAndRequest + this._serverLatency + oneWayLatency;
    if (this._warmed && this._h2) timeToFirstByte = 0;

    const timeElapsedForTTFB = Math.max(timeToFirstByte - timeAlreadyElapsed, 0);
    const maximumDownloadTimeToElapse = maximumTimeToElapse - timeElapsedForTTFB;

    let congestionWindow = Math.min(this._congestionWindow, maximumCongestionWindow);
    let totalBytesDownloaded = 0;
    if (timeElapsedForTTFB > 0) {
      totalBytesDownloaded = congestionWindow * TCP_SEGMENT_SIZE;
    } else {
      roundTrips = 0;
    }

    let downloadTimeElapsed = 0;
    let bytesRemaining = bytesToDownload - totalBytesDownloaded;
    while (bytesRemaining > 0 && downloadTimeElapsed <= maximumDownloadTimeToElapse) {
      roundTrips++;
      downloadTimeElapsed += twoWayLatency;
      congestionWindow = Math.max(Math.min(maximumCongestionWindow, congestionWindow * 2), 1);

      const bytesDownloadedInWindow = congestionWindow * TCP_SEGMENT_SIZE;
      totalBytesDownloaded += bytesDownloadedInWindow;
      bytesRemaining -= bytesDownloadedInWindow;
    }

    const timeElapsed = timeElapsedForTTFB + downloadTimeElapsed;
    const extraBytesDownloaded = this._h2 ? Math.max(totalBytesDownloaded - bytesToDownload, 0) : 0;
    const bytesDownloaded = Math.max(Math.min(totalBytesDownloaded, bytesToDownload), 0);

    /** @type {ConnectionTiming} */
    let connectionTiming;
    if (!this._warmed) {
      connectionTiming = {
        dnsResolutionTime,
        connectionTime: handshakeAndRequest - dnsResolutionTime,
        sslTime: this._ssl ? twoWayLatency : undefined,
        timeToFirstByte,
      };
    } else if (this._h2) {
      // TODO: timing information currently difficult to model for warm h2 connections.
      connectionTiming = {
        timeToFirstByte,
      };
    } else {
      connectionTiming = {
        connectionTime: handshakeAndRequest,
        timeToFirstByte,
      };
    }

    return {
      roundTrips,
      timeElapsed,
      bytesDownloaded,
      extraBytesDownloaded,
      congestionWindow,
      connectionTiming,
    };
  }
}



/**
 * @typedef DownloadOptions
 * @property {number} [dnsResolutionTime]
 * @property {number} [timeAlreadyElapsed]
 * @property {number} [maximumTimeToElapse]
 */

/**
 * @typedef DownloadResults
 * @property {number} roundTrips
 * @property {number} timeElapsed
 * @property {number} bytesDownloaded
 * @property {number} extraBytesDownloaded
 * @property {number} congestionWindow
 * @property {ConnectionTiming} connectionTiming
 */

;// CONCATENATED MODULE: ./node_modules/lighthouse/core/lib/dependency-graph/simulator/connection-pool.js
/**
 * @license Copyright 2018 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */





const DEFAULT_SERVER_RESPONSE_TIME = 30;
const TLS_SCHEMES = ['https', 'wss'];

// Each origin can have 6 simulatenous connections open
// https://cs.chromium.org/chromium/src/net/socket/client_socket_pool_manager.cc?type=cs&q="int+g_max_sockets_per_group"
const CONNECTIONS_PER_ORIGIN = 6;

class ConnectionPool {
  /**
   * @param {LH.Artifacts.NetworkRequest[]} records
   * @param {Required<LH.Gatherer.Simulation.Options>} options
   */
  constructor(records, options) {
    this._options = options;

    this._records = records;
    /** @type {Map<string, TcpConnection[]>} */
    this._connectionsByOrigin = new Map();
    /** @type {Map<LH.Artifacts.NetworkRequest, TcpConnection>} */
    this._connectionsByRecord = new Map();
    this._connectionsInUse = new Set();
    this._connectionReusedByRequestId = NetworkAnalyzer.estimateIfConnectionWasReused(records, {
      forceCoarseEstimates: true,
    });

    this._initializeConnections();
  }

  /**
   * @return {TcpConnection[]}
   */
  connectionsInUse() {
    return Array.from(this._connectionsInUse);
  }

  _initializeConnections() {
    const connectionReused = this._connectionReusedByRequestId;
    const additionalRttByOrigin = this._options.additionalRttByOrigin;
    const serverResponseTimeByOrigin = this._options.serverResponseTimeByOrigin;

    const recordsByOrigin = NetworkAnalyzer.groupByOrigin(this._records);
    for (const [origin, records] of recordsByOrigin.entries()) {
      const connections = [];
      const additionalRtt = additionalRttByOrigin.get(origin) || 0;
      const responseTime = serverResponseTimeByOrigin.get(origin) || DEFAULT_SERVER_RESPONSE_TIME;

      for (const record of records) {
        if (connectionReused.get(record.requestId)) continue;

        const isTLS = TLS_SCHEMES.includes(record.parsedURL.scheme);
        const isH2 = record.protocol === 'h2';
        const connection = new TcpConnection(
          this._options.rtt + additionalRtt,
          this._options.throughput,
          responseTime,
          isTLS,
          isH2
        );

        connections.push(connection);
      }

      if (!connections.length) {
        throw new Error(`Could not find a connection for origin: ${origin}`);
      }

      // Make sure each origin has minimum number of connections available for max throughput.
      // But only if it's not over H2 which maximizes throughput already.
      const minConnections = connections[0].isH2() ? 1 : CONNECTIONS_PER_ORIGIN;
      while (connections.length < minConnections) connections.push(connections[0].clone());

      this._connectionsByOrigin.set(origin, connections);
    }
  }

  /**
   * @param {Array<TcpConnection>} connections
   * @param {{ignoreConnectionReused?: boolean, observedConnectionWasReused: boolean}} options
   */
  _findAvailableConnectionWithLargestCongestionWindow(connections, options) {
    const {ignoreConnectionReused, observedConnectionWasReused} = options;

    /** @type {TcpConnection|null} */
    let maxConnection = null;
    for (let i = 0; i < connections.length; i++) {
      const connection = connections[i];

      // Normally, we want to make sure the connection warmth matches the state of the record
      // we're acquiring for. Do this check first since it's the common case and cheaper than our
      // "in use" check below.
      // Use the _warmed property instead of the getter because this is a surprisingly hot code path.
      if (!ignoreConnectionReused && connection._warmed !== observedConnectionWasReused) {
        continue;
      }

      // Connections that are in use are never available.
      if (this._connectionsInUse.has(connection)) {
        continue;
      }

      // This connection is a match and is available! Update our max if it has a larger congestionWindow
      const currentMax = (maxConnection?.congestionWindow) || -Infinity;
      if (connection.congestionWindow > currentMax) maxConnection = connection;
    }

    return maxConnection;
  }

  /**
   * This method finds an available connection to the origin specified by the network record or null
   * if no connection was available. If returned, connection will not be available for other network
   * records until release is called.
   *
   * If ignoreConnectionReused is true, acquire will consider all connections not in use as available.
   * Otherwise, only connections that have matching "warmth" are considered available.
   *
   * @param {LH.Artifacts.NetworkRequest} record
   * @param {{ignoreConnectionReused?: boolean}} options
   * @return {?TcpConnection}
   */
  acquire(record, options = {}) {
    if (this._connectionsByRecord.has(record)) throw new Error('Record already has a connection');

    const origin = record.parsedURL.securityOrigin;
    const observedConnectionWasReused = !!this._connectionReusedByRequestId.get(record.requestId);
    const connections = this._connectionsByOrigin.get(origin) || [];
    const connectionToUse = this._findAvailableConnectionWithLargestCongestionWindow(connections, {
      ignoreConnectionReused: options.ignoreConnectionReused,
      observedConnectionWasReused,
    });

    if (!connectionToUse) return null;

    this._connectionsInUse.add(connectionToUse);
    this._connectionsByRecord.set(record, connectionToUse);
    return connectionToUse;
  }

  /**
   * Return the connection currently being used to fetch a record. If no connection
   * currently being used for this record, an error will be thrown.
   *
   * @param {LH.Artifacts.NetworkRequest} record
   * @return {TcpConnection}
   */
  acquireActiveConnectionFromRecord(record) {
    const activeConnection = this._connectionsByRecord.get(record);
    if (!activeConnection) throw new Error('Could not find an active connection for record');

    return activeConnection;
  }

  /**
   * @param {LH.Artifacts.NetworkRequest} record
   */
  release(record) {
    const connection = this._connectionsByRecord.get(record);
    this._connectionsByRecord.delete(record);
    this._connectionsInUse.delete(connection);
  }
}

;// CONCATENATED MODULE: ./node_modules/lighthouse/core/lib/dependency-graph/simulator/dns-cache.js
/**
 * @license Copyright 2018 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */



// A DNS lookup will usually take ~1-2 roundtrips of connection latency plus the extra DNS routing time.
// Example: https://www.webpagetest.org/result/180703_3A_e33ec79747c002ed4d7bcbfc81462203/1/details/#waterfall_view_step1
// Example: https://www.webpagetest.org/result/180707_1M_89673eb633b5d98386de95dfcf9b33d5/1/details/#waterfall_view_step1
// DNS is highly variable though, many times it's a little more than 1, but can easily be 4-5x RTT.
// We'll use 2 since it seems to give the most accurate results on average, but this can be tweaked.
const DNS_RESOLUTION_RTT_MULTIPLIER = 2;

class DNSCache {
  /**
   * @param {{rtt: number}} options
   */
  constructor({rtt}) {
    this._rtt = rtt;

    /** @type {Map<string, {resolvedAt: number}>} */
    this._resolvedDomainNames = new Map();
  }

  /**
   * @param {LH.Artifacts.NetworkRequest} request
   * @param {{requestedAt: number, shouldUpdateCache: boolean}=} options
   * @return {number}
   */
  getTimeUntilResolution(request, options) {
    const {requestedAt = 0, shouldUpdateCache = false} = options || {};

    const domain = request.parsedURL.host;
    const cacheEntry = this._resolvedDomainNames.get(domain);
    let timeUntilResolved = this._rtt * DNSCache.RTT_MULTIPLIER;
    if (cacheEntry) {
      const timeUntilCachedIsResolved = Math.max(cacheEntry.resolvedAt - requestedAt, 0);
      timeUntilResolved = Math.min(timeUntilCachedIsResolved, timeUntilResolved);
    }

    const resolvedAt = requestedAt + timeUntilResolved;
    if (shouldUpdateCache) this._updateCacheResolvedAtIfNeeded(request, resolvedAt);

    return timeUntilResolved;
  }

  /**
   * @param {LH.Artifacts.NetworkRequest} request
   * @param {number} resolvedAt
   */
  _updateCacheResolvedAtIfNeeded(request, resolvedAt) {
    const domain = request.parsedURL.host;
    const cacheEntry = this._resolvedDomainNames.get(domain) || {resolvedAt};
    cacheEntry.resolvedAt = Math.min(cacheEntry.resolvedAt, resolvedAt);
    this._resolvedDomainNames.set(domain, cacheEntry);
  }

  /**
   * Forcefully sets the DNS resolution time for a record.
   * Useful for testing and alternate execution simulations.
   *
   * @param {string} domain
   * @param {number} resolvedAt
   */
  setResolvedAt(domain, resolvedAt) {
    this._resolvedDomainNames.set(domain, {resolvedAt});
  }
}

DNSCache.RTT_MULTIPLIER = DNS_RESOLUTION_RTT_MULTIPLIER;



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/lib/dependency-graph/simulator/simulator-timing-map.js
/**
 * @license Copyright 2020 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */



/**
 * @fileoverview
 *
 * This class encapsulates the type-related validation logic for moving timing information for nodes
 * through the different simulation phases. Methods here ensure that the invariants of simulation hold
 * as nodes are queued, partially simulated, and completed.
 */


/** @typedef {import('../base-node.js').Node} Node */
/** @typedef {import('../network-node.js').NetworkNode} NetworkNode */
/** @typedef {import('../cpu-node.js').CPUNode} CpuNode */

/**
 * @typedef NodeTimingComplete
 * @property {number} startTime
 * @property {number} endTime
 * @property {number} queuedTime Helpful for debugging.
 * @property {number} estimatedTimeElapsed
 * @property {number} timeElapsed
 * @property {number} timeElapsedOvershoot
 * @property {number} bytesDownloaded
 */

/** @typedef {Pick<NodeTimingComplete, 'queuedTime'>} NodeTimingQueued */

/** @typedef {NodeTimingQueued & Pick<NodeTimingComplete, 'startTime'|'timeElapsed'>} CpuNodeTimingStarted */
/** @typedef {CpuNodeTimingStarted & Pick<NodeTimingComplete, 'timeElapsedOvershoot'|'bytesDownloaded'>} NetworkNodeTimingStarted */

/** @typedef {CpuNodeTimingStarted & Pick<NodeTimingComplete, 'estimatedTimeElapsed'>} CpuNodeTimingInProgress */
/** @typedef {NetworkNodeTimingStarted & Pick<NodeTimingComplete, 'estimatedTimeElapsed'>} NetworkNodeTimingInProgress */

/** @typedef {CpuNodeTimingInProgress & Pick<NodeTimingComplete, 'endTime'>} CpuNodeTimingComplete */
/** @typedef {NetworkNodeTimingInProgress & Pick<NodeTimingComplete, 'endTime'> & {connectionTiming: ConnectionTiming}} NetworkNodeTimingComplete */

/** @typedef {NodeTimingQueued | CpuNodeTimingStarted | NetworkNodeTimingStarted | CpuNodeTimingInProgress | NetworkNodeTimingInProgress | CpuNodeTimingComplete | NetworkNodeTimingComplete} NodeTimingData */

/**
 * @typedef ConnectionTiming A breakdown of network connection timings.
 * @property {number} [dnsResolutionTime]
 * @property {number} [connectionTime]
 * @property {number} [sslTime]
 * @property {number} timeToFirstByte
 */

class SimulatorTimingMap {
  constructor() {
    /** @type {Map<Node, NodeTimingData>} */
    this._nodeTimings = new Map();
  }

  /** @return {Array<Node>} */
  getNodes() {
    return Array.from(this._nodeTimings.keys());
  }

  /**
   * @param {Node} node
   * @param {{queuedTime: number}} values
   */
  setReadyToStart(node, values) {
    this._nodeTimings.set(node, values);
  }

  /**
   * @param {Node} node
   * @param {{startTime: number}} values
   */
  setInProgress(node, values) {
    const nodeTiming = {
      ...this.getQueued(node),
      startTime: values.startTime,
      timeElapsed: 0,
    };

    this._nodeTimings.set(
      node,
      node.type === BaseNode.TYPES.NETWORK
        ? {...nodeTiming, timeElapsedOvershoot: 0, bytesDownloaded: 0}
        : nodeTiming
    );
  }

  /**
   * @param {Node} node
   * @param {{endTime: number, connectionTiming?: ConnectionTiming}} values
   */
  setCompleted(node, values) {
    const nodeTiming = {
      ...this.getInProgress(node),
      endTime: values.endTime,
      connectionTiming: values.connectionTiming,
    };

    this._nodeTimings.set(node, nodeTiming);
  }

  /**
   * @param {CpuNode} node
   * @param {{timeElapsed: number}} values
   */
  setCpu(node, values) {
    const nodeTiming = {
      ...this.getCpuStarted(node),
      timeElapsed: values.timeElapsed,
    };

    this._nodeTimings.set(node, nodeTiming);
  }

  /**
   * @param {CpuNode} node
   * @param {{estimatedTimeElapsed: number}} values
   */
  setCpuEstimated(node, values) {
    const nodeTiming = {
      ...this.getCpuStarted(node),
      estimatedTimeElapsed: values.estimatedTimeElapsed,
    };

    this._nodeTimings.set(node, nodeTiming);
  }

  /**
   * @param {NetworkNode} node
   * @param {{timeElapsed: number, timeElapsedOvershoot: number, bytesDownloaded: number}} values
   */
  setNetwork(node, values) {
    const nodeTiming = {
      ...this.getNetworkStarted(node),
      timeElapsed: values.timeElapsed,
      timeElapsedOvershoot: values.timeElapsedOvershoot,
      bytesDownloaded: values.bytesDownloaded,
    };

    this._nodeTimings.set(node, nodeTiming);
  }

  /**
   * @param {NetworkNode} node
   * @param {{estimatedTimeElapsed: number}} values
   */
  setNetworkEstimated(node, values) {
    const nodeTiming = {
      ...this.getNetworkStarted(node),
      estimatedTimeElapsed: values.estimatedTimeElapsed,
    };

    this._nodeTimings.set(node, nodeTiming);
  }

  /**
   * @param {Node} node
   * @return {NodeTimingQueued}
   */
  getQueued(node) {
    const timing = this._nodeTimings.get(node);
    if (!timing) throw new Error(`Node ${node.id} not yet queued`);
    return timing;
  }

  /**
   * @param {CpuNode} node
   * @return {CpuNodeTimingStarted}
   */
  getCpuStarted(node) {
    const timing = this._nodeTimings.get(node);
    if (!timing) throw new Error(`Node ${node.id} not yet queued`);
    if (!('startTime' in timing)) throw new Error(`Node ${node.id} not yet started`);
    if ('bytesDownloaded' in timing) throw new Error(`Node ${node.id} timing not valid`);
    return timing;
  }

  /**
   * @param {NetworkNode} node
   * @return {NetworkNodeTimingStarted}
   */
  getNetworkStarted(node) {
    const timing = this._nodeTimings.get(node);
    if (!timing) throw new Error(`Node ${node.id} not yet queued`);
    if (!('startTime' in timing)) throw new Error(`Node ${node.id} not yet started`);
    if (!('bytesDownloaded' in timing)) throw new Error(`Node ${node.id} timing not valid`);
    return timing;
  }

  /**
   * @param {Node} node
   * @return {CpuNodeTimingInProgress | NetworkNodeTimingInProgress}
   */
  getInProgress(node) {
    const timing = this._nodeTimings.get(node);
    if (!timing) throw new Error(`Node ${node.id} not yet queued`);
    if (!('startTime' in timing)) throw new Error(`Node ${node.id} not yet started`);
    if (!('estimatedTimeElapsed' in timing)) throw new Error(`Node ${node.id} not yet in progress`);
    return timing;
  }

  /**
   * @param {Node} node
   * @return {CpuNodeTimingComplete | NetworkNodeTimingComplete}
   */
  getCompleted(node) {
    const timing = this._nodeTimings.get(node);
    if (!timing) throw new Error(`Node ${node.id} not yet queued`);
    if (!('startTime' in timing)) throw new Error(`Node ${node.id} not yet started`);
    if (!('estimatedTimeElapsed' in timing)) throw new Error(`Node ${node.id} not yet in progress`);
    if (!('endTime' in timing)) throw new Error(`Node ${node.id} not yet completed`);
    return timing;
  }
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/lib/dependency-graph/simulator/simulator.js
/**
 * @license Copyright 2017 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */









const mobileSlow4G = constants_throttling.mobileSlow4G;

/** @typedef {import('../base-node.js').Node} Node */
/** @typedef {import('../network-node.js').NetworkNode} NetworkNode */
/** @typedef {import('../cpu-node.js').CPUNode} CpuNode */
/** @typedef {import('./simulator-timing-map.js').CpuNodeTimingComplete | import('./simulator-timing-map.js').NetworkNodeTimingComplete} CompleteNodeTiming */
/** @typedef {import('./simulator-timing-map.js').ConnectionTiming} ConnectionTiming */

// see https://cs.chromium.org/search/?q=kDefaultMaxNumDelayableRequestsPerClient&sq=package:chromium&type=cs
const DEFAULT_MAXIMUM_CONCURRENT_REQUESTS = 10;
// layout tasks tend to be less CPU-bound and do not experience the same increase in duration
const DEFAULT_LAYOUT_TASK_MULTIPLIER = 0.5;
// if a task takes more than 10 seconds it's usually a sign it isn't actually CPU bound and we're overestimating
const DEFAULT_MAXIMUM_CPU_TASK_DURATION = 10000;

const NodeState = {
  NotReadyToStart: 0,
  ReadyToStart: 1,
  InProgress: 2,
  Complete: 3,
};

/** @type {Record<NetworkNode['record']['priority'], number>} */
const PriorityStartTimePenalty = {
  VeryHigh: 0,
  High: 0.25,
  Medium: 0.5,
  Low: 1,
  VeryLow: 2,
};

/** @type {Map<string, Map<Node, CompleteNodeTiming>>} */
const ALL_SIMULATION_NODE_TIMINGS = new Map();

class simulator_Simulator {
  /**
   * @param {LH.Gatherer.Simulation.Options} [options]
   */
  constructor(options) {
    /** @type {Required<LH.Gatherer.Simulation.Options>} */
    this._options = Object.assign(
      {
        rtt: mobileSlow4G.rttMs,
        throughput: mobileSlow4G.throughputKbps * 1024,
        maximumConcurrentRequests: DEFAULT_MAXIMUM_CONCURRENT_REQUESTS,
        cpuSlowdownMultiplier: mobileSlow4G.cpuSlowdownMultiplier,
        layoutTaskMultiplier: DEFAULT_LAYOUT_TASK_MULTIPLIER,
        additionalRttByOrigin: new Map(),
        serverResponseTimeByOrigin: new Map(),
      },
      options
    );

    this._rtt = this._options.rtt;
    this._throughput = this._options.throughput;
    this._maximumConcurrentRequests = Math.max(Math.min(
      TcpConnection.maximumSaturatedConnections(this._rtt, this._throughput),
      this._options.maximumConcurrentRequests
    ), 1);
    this._cpuSlowdownMultiplier = this._options.cpuSlowdownMultiplier;
    this._layoutTaskMultiplier = this._cpuSlowdownMultiplier * this._options.layoutTaskMultiplier;
    /** @type {Array<Node>} */
    this._cachedNodeListByStartPosition = [];

    // Properties reset on every `.simulate` call but duplicated here for type checking
    this._flexibleOrdering = false;
    this._nodeTimings = new SimulatorTimingMap();
    /** @type {Map<string, number>} */
    this._numberInProgressByType = new Map();
    /** @type {Record<number, Set<Node>>} */
    this._nodes = {};
    this._dns = new DNSCache({rtt: this._rtt});
    /** @type {ConnectionPool} */
    // @ts-expect-error
    this._connectionPool = null;

    if (!Number.isFinite(this._rtt)) throw new Error(`Invalid rtt ${this._rtt}`);
    if (!Number.isFinite(this._throughput)) throw new Error(`Invalid rtt ${this._throughput}`);
  }

  /** @return {number} */
  get rtt() {
    return this._rtt;
  }

  /**
   * @param {Node} graph
   */
  _initializeConnectionPool(graph) {
    /** @type {LH.Artifacts.NetworkRequest[]} */
    const records = [];
    graph.getRootNode().traverse(node => {
      if (node.type === BaseNode.TYPES.NETWORK) {
        records.push(node.record);
      }
    });

    this._connectionPool = new ConnectionPool(records, this._options);
  }

  /**
   * Initializes the various state data structures such _nodeTimings and the _node Sets by state.
   */
  _initializeAuxiliaryData() {
    this._nodeTimings = new SimulatorTimingMap();
    this._numberInProgressByType = new Map();

    this._nodes = {};
    this._cachedNodeListByStartPosition = [];
    // NOTE: We don't actually need *all* of these sets, but the clarity that each node progresses
    // through the system is quite nice.
    for (const state of Object.values(NodeState)) {
      this._nodes[state] = new Set();
    }
  }

  /**
   * @param {string} type
   * @return {number}
   */
  _numberInProgress(type) {
    return this._numberInProgressByType.get(type) || 0;
  }

  /**
   * @param {Node} node
   * @param {number} queuedTime
   */
  _markNodeAsReadyToStart(node, queuedTime) {
    const nodeStartPosition = simulator_Simulator._computeNodeStartPosition(node);
    const firstNodeIndexWithGreaterStartPosition = this._cachedNodeListByStartPosition
      .findIndex(candidate => simulator_Simulator._computeNodeStartPosition(candidate) > nodeStartPosition);
    const insertionIndex = firstNodeIndexWithGreaterStartPosition === -1 ?
      this._cachedNodeListByStartPosition.length : firstNodeIndexWithGreaterStartPosition;
    this._cachedNodeListByStartPosition.splice(insertionIndex, 0, node);

    this._nodes[NodeState.ReadyToStart].add(node);
    this._nodes[NodeState.NotReadyToStart].delete(node);
    this._nodeTimings.setReadyToStart(node, {queuedTime});
  }

  /**
   * @param {Node} node
   * @param {number} startTime
   */
  _markNodeAsInProgress(node, startTime) {
    const indexOfNodeToStart = this._cachedNodeListByStartPosition.indexOf(node);
    this._cachedNodeListByStartPosition.splice(indexOfNodeToStart, 1);

    this._nodes[NodeState.InProgress].add(node);
    this._nodes[NodeState.ReadyToStart].delete(node);
    this._numberInProgressByType.set(node.type, this._numberInProgress(node.type) + 1);
    this._nodeTimings.setInProgress(node, {startTime});
  }

  /**
   * @param {Node} node
   * @param {number} endTime
   * @param {ConnectionTiming} [connectionTiming] Optional network connection information.
   */
  _markNodeAsComplete(node, endTime, connectionTiming) {
    this._nodes[NodeState.Complete].add(node);
    this._nodes[NodeState.InProgress].delete(node);
    this._numberInProgressByType.set(node.type, this._numberInProgress(node.type) - 1);
    this._nodeTimings.setCompleted(node, {endTime, connectionTiming});

    // Try to add all its dependents to the queue
    for (const dependent of node.getDependents()) {
      // Skip dependent node if one of its dependencies hasn't finished yet
      const dependencies = dependent.getDependencies();
      if (dependencies.some(dep => !this._nodes[NodeState.Complete].has(dep))) continue;

      // Otherwise add it to the queue
      this._markNodeAsReadyToStart(dependent, endTime);
    }
  }

  /**
   * @param {LH.Artifacts.NetworkRequest} record
   * @return {?TcpConnection}
   */
  _acquireConnection(record) {
    return this._connectionPool.acquire(record, {
      ignoreConnectionReused: this._flexibleOrdering,
    });
  }

  /**
   * @return {Node[]}
   */
  _getNodesSortedByStartPosition() {
    // Make a copy so we don't skip nodes due to concurrent modification
    return Array.from(this._cachedNodeListByStartPosition);
  }

  /**
   * @param {Node} node
   * @param {number} totalElapsedTime
   */
  _startNodeIfPossible(node, totalElapsedTime) {
    if (node.type === BaseNode.TYPES.CPU) {
      // Start a CPU task if there's no other CPU task in process
      if (this._numberInProgress(node.type) === 0) {
        this._markNodeAsInProgress(node, totalElapsedTime);
      }

      return;
    }

    if (node.type !== BaseNode.TYPES.NETWORK) throw new Error('Unsupported');

    // If a network request is connectionless, we can always start it, so skip the connection checks
    if (!node.isConnectionless) {
      // Start a network request if we're not at max requests and a connection is available
      const numberOfActiveRequests = this._numberInProgress(node.type);
      if (numberOfActiveRequests >= this._maximumConcurrentRequests) return;
      const connection = this._acquireConnection(node.record);
      if (!connection) return;
    }

    this._markNodeAsInProgress(node, totalElapsedTime);
  }

  /**
   * Updates each connection in use with the available throughput based on the number of network requests
   * currently in flight.
   */
  _updateNetworkCapacity() {
    const inFlight = this._numberInProgress(BaseNode.TYPES.NETWORK);
    if (inFlight === 0) return;

    for (const connection of this._connectionPool.connectionsInUse()) {
      connection.setThroughput(this._throughput / inFlight);
    }
  }

  /**
   * Estimates the number of milliseconds remaining given current condidtions before the node is complete.
   * @param {Node} node
   * @return {number}
   */
  _estimateTimeRemaining(node) {
    if (node.type === BaseNode.TYPES.CPU) {
      return this._estimateCPUTimeRemaining(node);
    } else if (node.type === BaseNode.TYPES.NETWORK) {
      return this._estimateNetworkTimeRemaining(node);
    } else {
      throw new Error('Unsupported');
    }
  }

  /**
   * @param {CpuNode} cpuNode
   * @return {number}
   */
  _estimateCPUTimeRemaining(cpuNode) {
    const timingData = this._nodeTimings.getCpuStarted(cpuNode);
    const multiplier = cpuNode.didPerformLayout()
      ? this._layoutTaskMultiplier
      : this._cpuSlowdownMultiplier;
    const totalDuration = Math.min(
      Math.round(cpuNode.event.dur / 1000 * multiplier),
      DEFAULT_MAXIMUM_CPU_TASK_DURATION
    );
    const estimatedTimeElapsed = totalDuration - timingData.timeElapsed;
    this._nodeTimings.setCpuEstimated(cpuNode, {estimatedTimeElapsed});
    return estimatedTimeElapsed;
  }

  /**
   * @param {NetworkNode} networkNode
   * @return {number}
   */
  _estimateNetworkTimeRemaining(networkNode) {
    const record = networkNode.record;
    const timingData = this._nodeTimings.getNetworkStarted(networkNode);

    let timeElapsed = 0;
    if (networkNode.fromDiskCache) {
      // Rough access time for seeking to location on disk and reading sequentially.
      // 8ms per seek + 20ms/MB
      // @see http://norvig.com/21-days.html#answers
      const sizeInMb = (record.resourceSize || 0) / 1024 / 1024;
      timeElapsed = 8 + 20 * sizeInMb - timingData.timeElapsed;
    } else if (networkNode.isNonNetworkProtocol) {
      // Estimates for the overhead of a data URL in Chromium and the decoding time for base64-encoded data.
      // 2ms per request + 10ms/MB
      // @see traces on https://dopiaza.org/tools/datauri/examples/index.php
      const sizeInMb = (record.resourceSize || 0) / 1024 / 1024;
      timeElapsed = 2 + 10 * sizeInMb - timingData.timeElapsed;
    } else {
      const connection = this._connectionPool.acquireActiveConnectionFromRecord(record);
      const dnsResolutionTime = this._dns.getTimeUntilResolution(record, {
        requestedAt: timingData.startTime,
        shouldUpdateCache: true,
      });
      const timeAlreadyElapsed = timingData.timeElapsed;
      const calculation = connection.simulateDownloadUntil(
        record.transferSize - timingData.bytesDownloaded,
        {timeAlreadyElapsed, dnsResolutionTime, maximumTimeToElapse: Infinity}
      );

      timeElapsed = calculation.timeElapsed;
    }

    const estimatedTimeElapsed = timeElapsed + timingData.timeElapsedOvershoot;
    this._nodeTimings.setNetworkEstimated(networkNode, {estimatedTimeElapsed});
    return estimatedTimeElapsed;
  }

  /**
   * Computes and returns the minimum estimated completion time of the nodes currently in progress.
   * @return {number}
   */
  _findNextNodeCompletionTime() {
    let minimumTime = Infinity;
    for (const node of this._nodes[NodeState.InProgress]) {
      minimumTime = Math.min(minimumTime, this._estimateTimeRemaining(node));
    }

    return minimumTime;
  }

  /**
   * Given a time period, computes the progress toward completion that the node made durin that time.
   * @param {Node} node
   * @param {number} timePeriodLength
   * @param {number} totalElapsedTime
   */
  _updateProgressMadeInTimePeriod(node, timePeriodLength, totalElapsedTime) {
    const timingData = this._nodeTimings.getInProgress(node);
    const isFinished = timingData.estimatedTimeElapsed === timePeriodLength;

    if (node.type === BaseNode.TYPES.CPU || node.isConnectionless) {
      return isFinished
        ? this._markNodeAsComplete(node, totalElapsedTime)
        : (timingData.timeElapsed += timePeriodLength);
    }

    if (node.type !== BaseNode.TYPES.NETWORK) throw new Error('Unsupported');
    if (!('bytesDownloaded' in timingData)) throw new Error('Invalid timing data');

    const record = node.record;
    const connection = this._connectionPool.acquireActiveConnectionFromRecord(record);
    const dnsResolutionTime = this._dns.getTimeUntilResolution(record, {
      requestedAt: timingData.startTime,
      shouldUpdateCache: true,
    });
    const calculation = connection.simulateDownloadUntil(
      record.transferSize - timingData.bytesDownloaded,
      {
        dnsResolutionTime,
        timeAlreadyElapsed: timingData.timeElapsed,
        maximumTimeToElapse: timePeriodLength - timingData.timeElapsedOvershoot,
      }
    );

    connection.setCongestionWindow(calculation.congestionWindow);
    connection.setH2OverflowBytesDownloaded(calculation.extraBytesDownloaded);

    if (isFinished) {
      connection.setWarmed(true);
      this._connectionPool.release(record);
      this._markNodeAsComplete(node, totalElapsedTime, calculation.connectionTiming);
    } else {
      timingData.timeElapsed += calculation.timeElapsed;
      timingData.timeElapsedOvershoot += calculation.timeElapsed - timePeriodLength;
      timingData.bytesDownloaded += calculation.bytesDownloaded;
    }
  }

  /**
   * @return {{nodeTimings: Map<Node, LH.Gatherer.Simulation.NodeTiming>, completeNodeTimings: Map<Node, CompleteNodeTiming>}}
   */
  _computeFinalNodeTimings() {
    /** @type {Array<[Node, CompleteNodeTiming]>} */
    const completeNodeTimingEntries = this._nodeTimings.getNodes().map(node => {
      return [node, this._nodeTimings.getCompleted(node)];
    });

    // Most consumers will want the entries sorted by startTime, so insert them in that order
    completeNodeTimingEntries.sort((a, b) => a[1].startTime - b[1].startTime);

    // Trimmed version of type `LH.Gatherer.Simulation.NodeTiming`.
    /** @type {Array<[Node, LH.Gatherer.Simulation.NodeTiming]>} */
    const nodeTimingEntries = completeNodeTimingEntries.map(([node, timing]) => {
      return [node, {
        startTime: timing.startTime,
        endTime: timing.endTime,
        duration: timing.endTime - timing.startTime,
      }];
    });

    return {
      nodeTimings: new Map(nodeTimingEntries),
      completeNodeTimings: new Map(completeNodeTimingEntries),
    };
  }

  /**
   * @return {Required<LH.Gatherer.Simulation.Options>}
   */
  getOptions() {
    return this._options;
  }

  /**
   * Estimates the time taken to process all of the graph's nodes, returns the overall time along with
   * each node annotated by start/end times.
   *
   * If flexibleOrdering is set, simulator/connection pool are allowed to deviate from what was
   * observed in the trace/devtoolsLog and start requests as soon as they are queued (i.e. do not
   * wait around for a warm connection to be available if the original record was fetched on a warm
   * connection).
   *
   * @param {Node} graph
   * @param {{flexibleOrdering?: boolean, label?: string}=} options
   * @return {LH.Gatherer.Simulation.Result}
   */
  simulate(graph, options) {
    if (BaseNode.hasCycle(graph)) {
      throw new Error('Cannot simulate graph with cycle');
    }

    options = Object.assign({
      label: undefined,
      flexibleOrdering: false,
    }, options);

    // initialize the necessary data containers
    this._flexibleOrdering = !!options.flexibleOrdering;
    this._dns = new DNSCache({rtt: this._rtt});
    this._initializeConnectionPool(graph);
    this._initializeAuxiliaryData();

    const nodesNotReadyToStart = this._nodes[NodeState.NotReadyToStart];
    const nodesReadyToStart = this._nodes[NodeState.ReadyToStart];
    const nodesInProgress = this._nodes[NodeState.InProgress];

    const rootNode = graph.getRootNode();
    rootNode.traverse(node => nodesNotReadyToStart.add(node));
    let totalElapsedTime = 0;
    let iteration = 0;

    // root node is always ready to start
    this._markNodeAsReadyToStart(rootNode, totalElapsedTime);

    // loop as long as we have nodes in the queue or currently in progress
    while (nodesReadyToStart.size || nodesInProgress.size) {
      // move all possible queued nodes to in progress
      for (const node of this._getNodesSortedByStartPosition()) {
        this._startNodeIfPossible(node, totalElapsedTime);
      }

      if (!nodesInProgress.size) {
        // interplay between fromDiskCache and connectionReused can be incorrect
        // proceed with flexibleOrdering if we can, otherwise give up
        if (this._flexibleOrdering) throw new Error('Failed to start a node');
        this._flexibleOrdering = true;
        continue;
      }

      // set the available throughput for all connections based on # inflight
      this._updateNetworkCapacity();

      // find the time that the next node will finish
      const minimumTime = this._findNextNodeCompletionTime();
      totalElapsedTime += minimumTime;

      // While this is no longer strictly necessary, it's always better than LH hanging
      if (!Number.isFinite(minimumTime) || iteration > 100000) {
        throw new Error('Simulation failed, depth exceeded');
      }

      iteration++;
      // update how far each node will progress until that point
      for (const node of nodesInProgress) {
        this._updateProgressMadeInTimePeriod(node, minimumTime, totalElapsedTime);
      }
    }

    // `nodeTimings` are used for simulator consumers, `completeNodeTimings` kept for debugging.
    const {nodeTimings, completeNodeTimings} = this._computeFinalNodeTimings();
    ALL_SIMULATION_NODE_TIMINGS.set(options.label || 'unlabeled', completeNodeTimings);

    return {
      timeInMs: totalElapsedTime,
      nodeTimings,
    };
  }

  /**
   * @param {number} wastedBytes
   */
  computeWastedMsFromWastedBytes(wastedBytes) {
    const {throughput, observedThroughput} = this._options;

    // https://github.com/GoogleChrome/lighthouse/pull/13323#issuecomment-962031709
    // 0 throughput means the no (additional) throttling is expected.
    // This is common for desktop + devtools throttling where throttling is additive and we don't want any additional.
    const bitsPerSecond = throughput === 0 ? observedThroughput : throughput;
    if (bitsPerSecond === 0) return 0;

    const wastedBits = wastedBytes * 8;
    const wastedMs = wastedBits / bitsPerSecond * 1000;
    return wastedMs;
  }

  /** @return {Map<string, Map<Node, CompleteNodeTiming>>} */
  static get ALL_NODE_TIMINGS() {
    return ALL_SIMULATION_NODE_TIMINGS;
  }

  /**
   * We attempt to start nodes by their observed start time using the record priority as a tie breaker.
   * When simulating, just because a low priority image started 5ms before a high priority image doesn't mean
   * it would have happened like that when the network was slower.
   * @param {Node} node
   */
  static _computeNodeStartPosition(node) {
    if (node.type === 'cpu') return node.startTime;
    return node.startTime + (PriorityStartTimePenalty[node.record.priority] * 1000 * 1000 || 0);
  }
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/lib/lantern-trace-saver.js
/**
 * @license Copyright 2018 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

/** @typedef {import('./dependency-graph/base-node.js').Node} Node */
/** @typedef {import('./dependency-graph/simulator/simulator.js').CompleteNodeTiming} CompleteNodeTiming */

/**
 * @param {Map<Node, CompleteNodeTiming>} nodeTimings
 * @return {LH.Trace}
 */
function convertNodeTimingsToTrace(nodeTimings) {
  /** @type {LH.TraceEvent[]} */
  const traceEvents = [];
  const baseTs = 1e9;
  const baseEvent = {pid: 1, tid: 1, cat: 'devtools.timeline'};
  const frame = 'A00001';
  /** @param {number} ms */
  const toMicroseconds = ms => baseTs + ms * 1000;

  traceEvents.push(createFakeTracingStartedEvent());
  traceEvents.push({...createFakeTracingStartedEvent(), name: 'TracingStartedInBrowser'});

  // Create a fake requestId counter
  let requestId = 1;
  let lastEventEndTime = 0;
  for (const [node, timing] of nodeTimings.entries()) {
    lastEventEndTime = Math.max(lastEventEndTime, timing.endTime);
    if (node.type === 'cpu') {
      // Represent all CPU work that was bundled in a task as an EvaluateScript event
      traceEvents.push(...createFakeTaskEvents(node, timing));
    } else {
      // Ignore data URIs as they don't really add much value
      if (/^data/.test(node.record.url)) continue;
      traceEvents.push(...createFakeNetworkEvents(requestId, node.record, timing));
      requestId++;
    }
  }

  // Create a fake task event ~1s after the trace ends for a sane default bounds in DT
  traceEvents.push(
    ...createFakeTaskEvents(
      // @ts-expect-error
      {childEvents: [], event: {}},
      {
        startTime: lastEventEndTime + 1000,
        endTime: lastEventEndTime + 1001,
      }
    )
  );

  return {traceEvents};

  /**
   * @return {LH.TraceEvent}
   */
  function createFakeTracingStartedEvent() {
    const argsData = {
      frameTreeNodeId: 1,
      sessionId: '1.1',
      page: frame,
      persistentIds: true,
      frames: [{frame, url: 'about:blank', name: '', processId: 1}],
    };

    return {
      ...baseEvent,
      ts: baseTs - 1e5,
      ph: 'I',
      s: 't',
      cat: 'disabled-by-default-devtools.timeline',
      name: 'TracingStartedInPage',
      args: {data: argsData},
      dur: 0,
    };
  }

  /**
   * @param {LH.Gatherer.Simulation.GraphCPUNode} cpuNode
   * @param {{startTime: number, endTime: number}} timing
   * @return {LH.TraceEvent[]}
   */
  function createFakeTaskEvents(cpuNode, timing) {
    const argsData = {
      url: '',
      frame,
      lineNumber: 0,
      columnNumber: 0,
    };

    const eventTs = toMicroseconds(timing.startTime);

    /** @type {LH.TraceEvent[]} */
    const events = [
      {
        ...baseEvent,
        ph: 'X',
        name: 'Task',
        ts: eventTs,
        dur: (timing.endTime - timing.startTime) * 1000,
        args: {data: argsData},
      },
    ];

    const nestedBaseTs = cpuNode.event.ts || 0;
    const multiplier = (timing.endTime - timing.startTime) * 1000 / cpuNode.event.dur;
    // https://github.com/ChromeDevTools/devtools-frontend/blob/5429ac8a61ad4fa/front_end/timeline_model/TimelineModel.js#L1129-L1130
    const netReqEvents = new Set(['ResourceSendRequest', 'ResourceFinish',
      'ResourceReceiveResponse', 'ResourceReceivedData']);
    for (const event of cpuNode.childEvents) {
      if (netReqEvents.has(event.name)) continue;
      const ts = eventTs + (event.ts - nestedBaseTs) * multiplier;
      const newEvent = {...event, ...{pid: baseEvent.pid, tid: baseEvent.tid}, ts};
      if (event.dur) newEvent.dur = event.dur * multiplier;
      events.push(newEvent);
    }

    return events;
  }

  /**
   * @param {number} requestId
   * @param {LH.Artifacts.NetworkRequest} record
   * @param {CompleteNodeTiming} timing
   * @return {LH.TraceEvent}
   */
  function createWillSendRequestEvent(requestId, record, timing) {
    return {
      ...baseEvent,
      ph: 'I',
      s: 't',
      // No `dur` on network instant events but add to keep types happy.
      dur: 0,
      name: 'ResourceWillSendRequest',
      ts: toMicroseconds(timing.startTime),
      args: {data: {requestId: String(requestId)}},
    };
  }

  /**
   * @param {number} requestId
   * @param {LH.Artifacts.NetworkRequest} record
   * @param {CompleteNodeTiming} timing
   * @return {LH.TraceEvent[]}
   */
  function createFakeNetworkEvents(requestId, record, timing) {
    if (!('connectionTiming' in timing)) {
      throw new Error('Network node timing incomplete');
    }

    // 0ms requests get super-messed up rendering
    // Use 0.3ms instead so they're still hoverable, https://github.com/GoogleChrome/lighthouse/pull/5350#discussion_r194563201
    let {startTime, endTime} = timing; // eslint-disable-line prefer-const
    if (startTime === endTime) endTime += 0.3;

    const requestData = {requestId: requestId.toString(), frame};
    // No `dur` on network instant events but add to keep types happy.
    /** @type {LH.Util.StrictOmit<LH.TraceEvent, 'name'|'ts'|'args'>} */
    const baseRequestEvent = {...baseEvent, ph: 'I', s: 't', dur: 0};

    const sendRequestData = {
      ...requestData,
      requestMethod: record.requestMethod,
      url: record.url,
      priority: record.priority,
    };

    const {dnsResolutionTime, connectionTime, sslTime, timeToFirstByte} = timing.connectionTiming;
    let sslStart = -1;
    let sslEnd = -1;
    if (connectionTime !== undefined && sslTime !== undefined) {
      sslStart = connectionTime - sslTime;
      sslEnd = connectionTime;
    }
    const receiveResponseData = {
      ...requestData,
      statusCode: record.statusCode,
      mimeType: record.mimeType,
      encodedDataLength: record.transferSize,
      fromCache: record.fromDiskCache,
      fromServiceWorker: record.fetchedViaServiceWorker,
      timing: {
        // `requestTime` is in seconds.
        requestTime: toMicroseconds(startTime) / (1000 * 1000),
        // Remaining values are milliseconds after `requestTime`.
        dnsStart: dnsResolutionTime === undefined ? -1 : 0,
        dnsEnd: dnsResolutionTime ?? -1,
        connectStart: dnsResolutionTime ?? -1,
        connectEnd: connectionTime ?? -1,
        sslStart,
        sslEnd,
        sendStart: connectionTime ?? 0,
        sendEnd: connectionTime ?? 0,
        receiveHeadersEnd: timeToFirstByte,
        workerStart: -1,
        workerReady: -1,
        proxyStart: -1,
        proxyEnd: -1,
        pushStart: 0,
        pushEnd: 0,
      },
    };

    const resourceFinishData = {
      requestId: requestId.toString(),
      encodedDataLength: record.transferSize,
      decodedBodyLength: record.resourceSize,
      didFail: !!record.failed,
      finishTime: toMicroseconds(endTime) / (1000 * 1000),
    };

    /** @type {LH.TraceEvent[]} */
    const events = [];

    // Navigation request needs an additional ResourceWillSendRequest event.
    if (requestId === 1) {
      events.push(createWillSendRequestEvent(requestId, record, timing));
    }

    events.push(
      {
        ...baseRequestEvent,
        name: 'ResourceSendRequest',
        ts: toMicroseconds(startTime),
        args: {data: sendRequestData},
      },
      {
        ...baseRequestEvent,
        name: 'ResourceFinish',
        ts: toMicroseconds(endTime),
        args: {data: resourceFinishData},
      }
    );

    if (!record.failed) {
      events.push({
        ...baseRequestEvent,
        name: 'ResourceReceiveResponse',
        // Event `ts` isn't meaningful, so just pick a time.
        ts: toMicroseconds((startTime + endTime) / 2),
        args: {data: receiveResponseData},
      });
    }

    return events;
  }
}

/* harmony default export */ const lantern_trace_saver = ({
  simulationNamesToIgnore: [
    'unlabeled',
    // These node timings should be nearly identical to the ones produced for Interactive
    'optimisticSpeedIndex',
    'optimisticFlexSpeedIndex',
    'pessimisticSpeedIndex',
  ],
  convertNodeTimingsToTrace,
});

;// CONCATENATED MODULE: ./node_modules/lighthouse/core/lib/traces/metric-trace-events.js
/**
 * @license Copyright 2017 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */





/**
 * @param {LH.Result['audits']} auditResults
 * @return {LH.Artifacts.TimingSummary|undefined}
 */
function getUberMetrics(auditResults) {
  const metricsAudit = auditResults.metrics;
  if (!metricsAudit || !metricsAudit.details || !('items' in metricsAudit.details)) return;

  return metricsAudit.details.items[0];
}

class metric_trace_events_MetricTraceEvents {
  /**
   * @param {Array<LH.TraceEvent>} traceEvents
   * @param {LH.Result['audits']} auditResults
   */
  constructor(traceEvents, auditResults) {
    this._traceEvents = traceEvents;
    this._auditResults = auditResults;
  }

  /**
   * Returns simplified representation of all metrics
   * @return {Array<{id: string, name: string, tsKey: keyof LH.Artifacts.TimingSummary}>} metrics to consider
   */
  static get metricsDefinitions() {
    return [
      {
        name: 'Time Origin',
        id: 'timeorigin',
        tsKey: 'observedTimeOriginTs',
      },
      {
        name: 'First Contentful Paint',
        id: 'ttfcp',
        tsKey: 'observedFirstContentfulPaintTs',
      },
      {
        name: 'First Meaningful Paint',
        id: 'ttfmp',
        tsKey: 'observedFirstMeaningfulPaintTs',
      },
      {
        name: 'Speed Index',
        id: 'si',
        tsKey: 'observedSpeedIndexTs',
      },
      {
        name: 'First Visual Change',
        id: 'fv',
        tsKey: 'observedFirstVisualChangeTs',
      },
      {
        name: 'Visually Complete 100%',
        id: 'vc100',
        tsKey: 'observedLastVisualChangeTs',
      },
      {
        name: 'Interactive',
        id: 'tti',
        tsKey: 'interactiveTs',
      },
      {
        name: 'End of Trace',
        id: 'eot',
        tsKey: 'observedTraceEndTs',
      },
      {
        name: 'On Load',
        id: 'onload',
        tsKey: 'observedLoadTs',
      },
      {
        name: 'DOM Content Loaded',
        id: 'dcl',
        tsKey: 'observedDomContentLoadedTs',
      },
    ];
  }

  /**
   * Returns simplified representation of all metrics' timestamps from monotonic clock
   * @return {Array<{ts: number, id: string, name: string}>} metrics to consider
   */
  gatherMetrics() {
    const uberMetrics = getUberMetrics(this._auditResults);
    if (!uberMetrics) {
      return [];
    }

    /** @type {Array<{ts: number, id: string, name: string}>} */
    const resolvedMetrics = [];
    metric_trace_events_MetricTraceEvents.metricsDefinitions.forEach(metric => {
      // Skip if auditResults is missing a particular audit result
      const ts = uberMetrics[metric.tsKey];
      if (ts === undefined) {
        log.error('pwmetrics-events', `${metric.name} timestamp not found`);
        return;
      }

      resolvedMetrics.push({
        id: metric.id,
        name: metric.name,
        ts,
      });
    });

    return resolvedMetrics;
  }

  /**
   * Get the trace event data for our timeOrigin
   * @param {Array<{ts: number, id: string, name: string}>} metrics
   * @return {{pid: number, tid: number, ts: number} | {errorMessage: string}}
   */
  getTimeOriginEvt(metrics) {
    const timeOriginMetric = metrics.find(e => e.id === 'timeorigin');
    if (!timeOriginMetric) return {errorMessage: 'timeorigin Metric not found in definitions'};
    try {
      const frameIds = TraceProcessor.findMainFrameIds(this._traceEvents);
      return {pid: frameIds.startingPid, tid: 1, ts: timeOriginMetric.ts};
    } catch (err) {
      return {errorMessage: err.message};
    }
  }

  /**
   * Constructs performance.measure trace events, which have start/end events as follows:
   *     { "pid": 89922,"tid":1295,"ts":77176783452,"ph":"b","cat":"blink.user_timing","name":"innermeasure","args":{},"tts":1257886,"id":"0xe66c67"}
   *     { "pid": 89922,"tid":1295,"ts":77176882592,"ph":"e","cat":"blink.user_timing","name":"innermeasure","args":{},"tts":1257898,"id":"0xe66c67"}
   * @param {{ts: number, id: string, name: string}} metric
   * @param {{pid: number, tid: number, ts: number}} timeOriginEvt
   * @return {Array<LH.TraceEvent>} Pair of trace events (start/end)
   */
  synthesizeEventPair(metric, timeOriginEvt) {
    // We'll masquerade our fake events to look mostly like the timeOrigin event
    const eventBase = {
      pid: timeOriginEvt.pid,
      tid: timeOriginEvt.tid,
      cat: 'blink.user_timing',
      name: metric.name,
      args: {},
      // randomized id is same for the pair
      id: `0x${((Math.random() * 1000000) | 0).toString(16)}`,
    };
    const fakeMeasureStartEvent = Object.assign({}, eventBase, {
      ts: timeOriginEvt.ts,
      ph: 'b',
    });
    const fakeMeasureEndEvent = Object.assign({}, eventBase, {
      ts: metric.ts,
      ph: 'e',
    });
    return /** @type {Array<LH.TraceEvent>} */ ([fakeMeasureStartEvent, fakeMeasureEndEvent]);
  }

  /**
   * @return {Array<LH.TraceEvent>} User timing raw trace event pairs
   */
  generateFakeEvents() {
    const metrics = this.gatherMetrics();
    if (metrics.length === 0) {
      log.error('metrics-events', 'Metrics collection had errors, not synthetizing trace events');
      return [];
    }

    const timeOriginEvt = this.getTimeOriginEvt(metrics);
    if ('errorMessage' in timeOriginEvt) {
      log.error('pwmetrics-events', `Reference timeOrigin error: ${timeOriginEvt.errorMessage}`);
      return [];
    }

    /** @type {Array<LH.TraceEvent>} */
    const fakeEvents = [];
    metrics.forEach(metric => {
      if (metric.id === 'timeorigin') {
        return;
      }
      if (!metric.ts) {
        log.error('pwmetrics-events', `(${metric.name}) missing timestamp. Skipping…`);
        return;
      }
      log.verbose('pwmetrics-events', `Sythesizing trace events for ${metric.name}`);
      fakeEvents.push(...this.synthesizeEventPair(metric, timeOriginEvt));
    });
    return fakeEvents;
  }
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/computed/network-analysis.js
/**
 * @license Copyright 2017 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */





class network_analysis_NetworkAnalysis {
  /**
   * @param {Array<LH.Artifacts.NetworkRequest>} records
   * @return {LH.Util.StrictOmit<LH.Artifacts.NetworkAnalysis, 'throughput'>}
   */
  static computeRTTAndServerResponseTime(records) {
    // First pass compute the estimated observed RTT to each origin's servers.
    /** @type {Map<string, number>} */
    const rttByOrigin = new Map();
    for (const [origin, summary] of NetworkAnalyzer.estimateRTTByOrigin(records).entries()) {
      rttByOrigin.set(origin, summary.min);
    }

    // We'll use the minimum RTT as the assumed connection latency since we care about how much addt'l
    // latency each origin introduces as Lantern will be simulating with its own connection latency.
    const minimumRtt = Math.min(...Array.from(rttByOrigin.values()));
    // We'll use the observed RTT information to help estimate the server response time
    const responseTimeSummaries = NetworkAnalyzer.estimateServerResponseTimeByOrigin(records, {
      rttByOrigin,
    });

    /** @type {Map<string, number>} */
    const additionalRttByOrigin = new Map();
    /** @type {Map<string, number>} */
    const serverResponseTimeByOrigin = new Map();
    for (const [origin, summary] of responseTimeSummaries.entries()) {
      // Not all origins have usable timing data, we'll default to using no additional latency.
      const rttForOrigin = rttByOrigin.get(origin) || minimumRtt;
      additionalRttByOrigin.set(origin, rttForOrigin - minimumRtt);
      serverResponseTimeByOrigin.set(origin, summary.median);
    }

    return {
      rtt: minimumRtt,
      additionalRttByOrigin,
      serverResponseTimeByOrigin,
    };
  }

  /**
   * @param {LH.DevtoolsLog} devtoolsLog
   * @param {LH.Artifacts.ComputedContext} context
   * @return {Promise<LH.Artifacts.NetworkAnalysis>}
   */
  static async compute_(devtoolsLog, context) {
    const records = await NetworkRecordsComputed.request(devtoolsLog, context);
    const throughput = NetworkAnalyzer.estimateThroughput(records);
    const rttAndServerResponseTime = network_analysis_NetworkAnalysis.computeRTTAndServerResponseTime(records);
    return {throughput, ...rttAndServerResponseTime};
  }
}

const NetworkAnalysisComputed = makeComputedArtifact(network_analysis_NetworkAnalysis, null);


;// CONCATENATED MODULE: ./node_modules/lighthouse/core/computed/load-simulator.js
/**
 * @license Copyright 2018 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */






class load_simulator_LoadSimulator {
  /**
   * @param {{devtoolsLog: LH.DevtoolsLog, settings: LH.Audit.Context['settings']}} data
   * @param {LH.Artifacts.ComputedContext} context
   * @return {Promise<Simulator>}
   */
  static async compute_(data, context) {
    const {throttlingMethod, throttling, precomputedLanternData} = data.settings;
    const networkAnalysis = await NetworkAnalysisComputed.request(data.devtoolsLog, context);

    /** @type {LH.Gatherer.Simulation.Options} */
    const options = {
      additionalRttByOrigin: networkAnalysis.additionalRttByOrigin,
      serverResponseTimeByOrigin: networkAnalysis.serverResponseTimeByOrigin,
      observedThroughput: networkAnalysis.throughput,
    };

    // If we have precomputed lantern data, overwrite our observed estimates and use precomputed instead
    // for increased stability.
    if (precomputedLanternData) {
      options.additionalRttByOrigin = new Map(Object.entries(
        precomputedLanternData.additionalRttByOrigin));
      options.serverResponseTimeByOrigin = new Map(Object.entries(
        precomputedLanternData.serverResponseTimeByOrigin));
    }

    switch (throttlingMethod) {
      case 'provided':
        options.rtt = networkAnalysis.rtt;
        options.throughput = networkAnalysis.throughput;
        options.cpuSlowdownMultiplier = 1;
        options.layoutTaskMultiplier = 1;
        break;
      case 'devtools':
        if (throttling) {
          options.rtt =
            throttling.requestLatencyMs / constants_throttling.DEVTOOLS_RTT_ADJUSTMENT_FACTOR;
          options.throughput =
            throttling.downloadThroughputKbps * 1024 /
            constants_throttling.DEVTOOLS_THROUGHPUT_ADJUSTMENT_FACTOR;
        }

        options.cpuSlowdownMultiplier = 1;
        options.layoutTaskMultiplier = 1;
        break;
      case 'simulate':
        if (throttling) {
          options.rtt = throttling.rttMs;
          options.throughput = throttling.throughputKbps * 1024;
          options.cpuSlowdownMultiplier = throttling.cpuSlowdownMultiplier;
        }
        break;
      default:
        // intentionally fallback to simulator defaults
        break;
    }

    return new simulator_Simulator(options);
  }

  /**
   * @param {LH.Artifacts.NetworkAnalysis} networkAnalysis
   * @return {LH.PrecomputedLanternData}
   */
  static convertAnalysisToSaveableLanternData(networkAnalysis) {
    /** @type {LH.PrecomputedLanternData} */
    const lanternData = {additionalRttByOrigin: {}, serverResponseTimeByOrigin: {}};
    for (const [origin, value] of networkAnalysis.additionalRttByOrigin.entries()) {
      if (origin.startsWith('http')) lanternData.additionalRttByOrigin[origin] = value;
    }

    for (const [origin, value] of networkAnalysis.serverResponseTimeByOrigin.entries()) {
      if (origin.startsWith('http')) lanternData.serverResponseTimeByOrigin[origin] = value;
    }

    return lanternData;
  }
}

const LoadSimulatorComputed = makeComputedArtifact(load_simulator_LoadSimulator, ['devtoolsLog', 'settings']);


;// CONCATENATED MODULE: ./node_modules/lighthouse/core/lib/asset-saver.js
/**
 * @license Copyright 2016 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */















const {promisify} = external_util_;

// Rollup does not support `promisfy` or `stream.pipeline`. Bundled files
// don't need anything in this file except for `stringifyReplacer`, so a check for
// truthiness before using is enough.
// TODO: Can remove promisify(pipeline) in Node 15.
// https://nodejs.org/api/stream.html#streams-promises-api
const pipeline = promisify && promisify(external_stream_.pipeline);

const optionsFilename = 'options.json';
const artifactsFilename = 'artifacts.json';
const traceSuffix = '.trace.json';
const devtoolsLogSuffix = '.devtoolslog.json';
const stepDirectoryRegex = /^step(\d+)$/;

/**
 * @typedef {object} PreparedAssets
 * @property {string} passName
 * @property {LH.Trace} traceData
 * @property {LH.DevtoolsLog} devtoolsLog
 */


/**
 * Load artifacts object from files located within basePath
 * Also save the traces to their own files
 * @param {string} basePath
 * @return {LH.Artifacts}
 */
function loadArtifacts(basePath) {
  lighthouse_logger.log('Reading artifacts from disk:', basePath);

  if (!external_fs_.existsSync(basePath)) {
    throw new Error('No saved artifacts found at ' + basePath);
  }

  // load artifacts.json using a reviver to deserialize any LighthouseErrors in artifacts.
  const artifactsStr = external_fs_.readFileSync(external_path_.join(basePath, artifactsFilename), 'utf8');
  /** @type {LH.Artifacts} */
  const artifacts = JSON.parse(artifactsStr, lh_error_LighthouseError.parseReviver);

  const filenames = external_fs_.readdirSync(basePath);

  // load devtoolsLogs
  artifacts.devtoolsLogs = {};
  filenames.filter(f => f.endsWith(devtoolsLogSuffix)).forEach(filename => {
    const passName = filename.replace(devtoolsLogSuffix, '');
    const devtoolsLog = JSON.parse(external_fs_.readFileSync(external_path_.join(basePath, filename), 'utf8'));
    artifacts.devtoolsLogs[passName] = devtoolsLog;
    if (passName === 'defaultPass') {
      artifacts.DevtoolsLog = devtoolsLog;
    }
  });

  // load traces
  artifacts.traces = {};
  filenames.filter(f => f.endsWith(traceSuffix)).forEach(filename => {
    const file = external_fs_.readFileSync(external_path_.join(basePath, filename), {encoding: 'utf-8'});
    const trace = JSON.parse(file);
    const passName = filename.replace(traceSuffix, '');
    artifacts.traces[passName] = Array.isArray(trace) ? {traceEvents: trace} : trace;
    if (passName === 'defaultPass') {
      artifacts.Trace = artifacts.traces[passName];
    }
  });

  if (Array.isArray(artifacts.Timing)) {
    // Any Timing entries in saved artifacts will have a different timeOrigin than the auditing phase
    // The `gather` prop is read later in generate-timing-trace and they're added to a separate track of trace events
    artifacts.Timing.forEach(entry => (entry.gather = true));
  }
  return artifacts;
}

/**
 * @param {string} basePath
 * @return {LH.UserFlow.FlowArtifacts}
 */
function loadFlowArtifacts(basePath) {
  log.log('Reading flow artifacts from disk:', basePath);

  if (!fs.existsSync(basePath)) {
    throw new Error('No saved flow artifacts found at ' + basePath);
  }

  /** @type {LH.UserFlow.FlowArtifacts} */
  const flowArtifacts = JSON.parse(
    fs.readFileSync(path.join(basePath, optionsFilename), 'utf-8')
  );

  const filenames = fs.readdirSync(basePath);

  flowArtifacts.gatherSteps = [];
  for (const filename of filenames) {
    const regexResult = stepDirectoryRegex.exec(filename);
    if (!regexResult) continue;

    const index = Number(regexResult[1]);
    if (!Number.isFinite(index)) continue;

    const stepPath = path.join(basePath, filename);
    if (!fs.lstatSync(stepPath).isDirectory()) continue;

    /** @type {LH.UserFlow.GatherStep} */
    const gatherStep = JSON.parse(
      fs.readFileSync(path.join(stepPath, optionsFilename), 'utf-8')
    );
    gatherStep.artifacts = loadArtifacts(stepPath);

    flowArtifacts.gatherSteps[index] = gatherStep;
  }

  const missingStepIndex = flowArtifacts.gatherSteps.findIndex(gatherStep => !gatherStep);
  if (missingStepIndex !== -1) {
    throw new Error(`Could not find step with index ${missingStepIndex} at ${basePath}`);
  }

  return flowArtifacts;
}

/**
 * A replacer function for JSON.stingify of the artifacts. Used to serialize objects that
 * JSON won't normally handle.
 * @param {string} key
 * @param {any} value
 */
function stringifyReplacer(key, value) {
  // Currently only handle LighthouseError and other Error types.
  if (value instanceof Error) {
    return lh_error_LighthouseError.stringifyReplacer(value);
  }

  return value;
}

/**
 * Saves flow artifacts with the following file structure:
 *   flow/                             --  Directory specified by `basePath`.
 *     options.json                    --  Flow options (e.g. flow name, flags).
 *     step0/                          --  Directory containing artifacts for the first step.
 *       options.json                  --  First step's options (e.g. step flags).
 *       artifacts.json                --  First step's artifacts except the DevTools log and trace.
 *       defaultPass.devtoolslog.json  --  First step's DevTools log.
 *       defaultPass.trace.json        --  First step's trace.
 *     step1/                          --  Directory containing artifacts for the second step.
 *
 * @param {LH.UserFlow.FlowArtifacts} flowArtifacts
 * @param {string} basePath
 * @return {Promise<void>}
 */
async function saveFlowArtifacts(flowArtifacts, basePath) {
  const status = {msg: 'Saving flow artifacts', id: 'lh:assetSaver:saveArtifacts'};
  log.time(status);
  fs.mkdirSync(basePath, {recursive: true});

  // Delete any previous artifacts in this directory.
  const filenames = fs.readdirSync(basePath);
  for (const filename of filenames) {
    if (stepDirectoryRegex.test(filename) || filename === optionsFilename) {
      fs.rmSync(`${basePath}/${filename}`, {recursive: true});
    }
  }

  const {gatherSteps, ...flowOptions} = flowArtifacts;
  for (let i = 0; i < gatherSteps.length; ++i) {
    const {artifacts, ...stepOptions} = gatherSteps[i];
    const stepPath = path.join(basePath, `step${i}`);
    await saveArtifacts(artifacts, stepPath);
    fs.writeFileSync(
      path.join(stepPath, optionsFilename),
      JSON.stringify(stepOptions, stringifyReplacer, 2) + '\n'
    );
  }

  fs.writeFileSync(
    path.join(basePath, optionsFilename),
    JSON.stringify(flowOptions, stringifyReplacer, 2) + '\n'
  );

  log.log('Flow artifacts saved to disk in folder:', basePath);
  log.timeEnd(status);
}

/**
 * Save artifacts object mostly to single file located at basePath/artifacts.json.
 * Also save the traces & devtoolsLogs to their own files
 * @param {LH.Artifacts} artifacts
 * @param {string} basePath
 * @return {Promise<void>}
 */
async function saveArtifacts(artifacts, basePath) {
  const status = {msg: 'Saving artifacts', id: 'lh:assetSaver:saveArtifacts'};
  lighthouse_logger.time(status);
  external_fs_.mkdirSync(basePath, {recursive: true});

  // Delete any previous artifacts in this directory.
  const filenames = external_fs_.readdirSync(basePath);
  for (const filename of filenames) {
    if (filename.endsWith(traceSuffix) || filename.endsWith(devtoolsLogSuffix) ||
        filename === artifactsFilename) {
      external_fs_.unlinkSync(`${basePath}/${filename}`);
    }
  }

  // `DevtoolsLog` and `Trace` will always be the 'defaultPass' version.
  // We don't need to save them twice, so extract them here.
  // eslint-disable-next-line no-unused-vars
  const {traces, devtoolsLogs, DevtoolsLog, Trace, ...restArtifacts} = artifacts;

  // save traces
  for (const [passName, trace] of Object.entries(traces)) {
    await saveTrace(trace, `${basePath}/${passName}${traceSuffix}`);
  }

  // save devtools log
  for (const [passName, devtoolsLog] of Object.entries(devtoolsLogs)) {
    await saveDevtoolsLog(devtoolsLog, `${basePath}/${passName}${devtoolsLogSuffix}`);
  }

  // save everything else, using a replacer to serialize LighthouseErrors in the artifacts.
  const restArtifactsString = JSON.stringify(restArtifacts, stringifyReplacer, 2) + '\n';
  external_fs_.writeFileSync(`${basePath}/${artifactsFilename}`, restArtifactsString, 'utf8');
  lighthouse_logger.log('Artifacts saved to disk in folder:', basePath);
  lighthouse_logger.timeEnd(status);
}

/**
 * Save LHR to file located at basePath/lhr.report.json.
 * @param {LH.Result} lhr
 * @param {string} basePath
 */
function saveLhr(lhr, basePath) {
  external_fs_.writeFileSync(`${basePath}/lhr.report.json`, JSON.stringify(lhr, null, 2));
}

/**
 * Filter traces and extract screenshots to prepare for saving.
 * @param {LH.Artifacts} artifacts
 * @param {LH.Result['audits']} [audits]
 * @return {Promise<Array<PreparedAssets>>}
 */
async function prepareAssets(artifacts, audits) {
  const passNames = Object.keys(artifacts.traces);
  /** @type {Array<PreparedAssets>} */
  const assets = [];

  for (const passName of passNames) {
    const trace = artifacts.traces[passName];
    const devtoolsLog = artifacts.devtoolsLogs[passName];

    const traceData = Object.assign({}, trace);
    if (audits) {
      const evts = new MetricTraceEvents(traceData.traceEvents, audits).generateFakeEvents();
      traceData.traceEvents = traceData.traceEvents.concat(evts);
    }

    assets.push({
      passName,
      traceData,
      devtoolsLog,
    });
  }

  return assets;
}

/**
 * Generates a JSON representation of an array of objects with the objects
 * printed one per line for a more readable (but not too verbose) version.
 * @param {Array<unknown>} arrayOfObjects
 * @return {IterableIterator<string>}
 */
function* arrayOfObjectsJsonGenerator(arrayOfObjects) {
  const ITEMS_PER_ITERATION = 500;

  // Stringify and emit items separately to avoid a giant string in memory.
  yield '[\n';
  if (arrayOfObjects.length > 0) {
    const itemsIterator = arrayOfObjects[Symbol.iterator]();
    // Emit first item manually to avoid a trailing comma.
    const firstItem = itemsIterator.next().value;
    yield `  ${JSON.stringify(firstItem)}`;

    let itemsRemaining = ITEMS_PER_ITERATION;
    let itemsJSON = '';
    for (const item of itemsIterator) {
      itemsJSON += `,\n  ${JSON.stringify(item)}`;
      itemsRemaining--;
      if (itemsRemaining === 0) {
        yield itemsJSON;
        itemsRemaining = ITEMS_PER_ITERATION;
        itemsJSON = '';
      }
    }
    yield itemsJSON;
  }
  yield '\n]';
}

/**
 * Generates a JSON representation of traceData line-by-line for a nicer printed
 * version with one trace event per line.
 * @param {LH.Trace} traceData
 * @return {IterableIterator<string>}
 */
function* traceJsonGenerator(traceData) {
  const {traceEvents, ...rest} = traceData;

  yield '{\n';

  yield '"traceEvents": ';
  yield* arrayOfObjectsJsonGenerator(traceEvents);

  // Emit the rest of the object (usually just `metadata`, if anything).
  for (const [key, value] of Object.entries(rest)) {
    yield `,\n"${key}": ${JSON.stringify(value, null, 2)}`;
  }

  yield '}\n';
}

/**
 * Save a trace as JSON by streaming to disk at traceFilename.
 * @param {LH.Trace} traceData
 * @param {string} traceFilename
 * @return {Promise<void>}
 */
async function saveTrace(traceData, traceFilename) {
  const traceIter = traceJsonGenerator(traceData);
  const writeStream = external_fs_.createWriteStream(traceFilename);

  return pipeline(traceIter, writeStream);
}

/**
 * Save a devtoolsLog as JSON by streaming to disk at devtoolLogFilename.
 * @param {LH.DevtoolsLog} devtoolsLog
 * @param {string} devtoolLogFilename
 * @return {Promise<void>}
 */
function saveDevtoolsLog(devtoolsLog, devtoolLogFilename) {
  const writeStream = external_fs_.createWriteStream(devtoolLogFilename);

  return pipeline(function* () {
    yield* arrayOfObjectsJsonGenerator(devtoolsLog);
    yield '\n';
  }, writeStream);
}

/**
 * @param {string} pathWithBasename
 * @return {Promise<void>}
 */
async function saveLanternDebugTraces(pathWithBasename) {
  if (!process.env.LANTERN_DEBUG) return;

  for (const [label, nodeTimings] of Simulator.ALL_NODE_TIMINGS) {
    if (lanternTraceSaver.simulationNamesToIgnore.includes(label)) continue;

    const traceFilename = `${pathWithBasename}-${label}${traceSuffix}`;
    await saveTrace(lanternTraceSaver.convertNodeTimingsToTrace(nodeTimings), traceFilename);
    log.log('saveAssets', `${label} lantern trace file streamed to disk: ${traceFilename}`);
  }
}

/**
 * Writes trace(s) and associated asset(s) to disk.
 * @param {LH.Artifacts} artifacts
 * @param {LH.Result['audits']} audits
 * @param {string} pathWithBasename
 * @return {Promise<void>}
 */
async function saveAssets(artifacts, audits, pathWithBasename) {
  const allAssets = await prepareAssets(artifacts, audits);
  const saveAll = allAssets.map(async (passAssets, index) => {
    const devtoolsLogFilename = `${pathWithBasename}-${index}${devtoolsLogSuffix}`;
    fs.writeFileSync(devtoolsLogFilename, JSON.stringify(passAssets.devtoolsLog, null, 2));
    log.log('saveAssets', 'devtools log saved to disk: ' + devtoolsLogFilename);

    const traceFilename = `${pathWithBasename}-${index}${traceSuffix}`;
    await saveTrace(passAssets.traceData, traceFilename);
    log.log('saveAssets', 'trace file streamed to disk: ' + traceFilename);
  });

  await Promise.all(saveAll);
  await saveLanternDebugTraces(pathWithBasename);
}

/**
 * @param {LH.DevtoolsLog} devtoolsLog
 * @param {string} outputPath
 * @return {Promise<void>}
 */
async function saveLanternNetworkData(devtoolsLog, outputPath) {
  /** @type {LH.Audit.Context} */
  // @ts-expect-error - the full audit context isn't needed for analysis.
  const context = {computedCache: new Map()};
  const networkAnalysis = await NetworkAnalysis.request(devtoolsLog, context);
  const lanternData = LoadSimulator.convertAnalysisToSaveableLanternData(networkAnalysis);

  fs.writeFileSync(outputPath, JSON.stringify(lanternData));
}

/**
 * Normalize timing data so it doesn't change every update.
 * @param {LH.Result.MeasureEntry[]} timings
 */
function normalizeTimingEntries(timings) {
  let baseTime = 0;
  for (const timing of timings) {
    // @ts-expect-error: Value actually is writeable at this point.
    timing.startTime = baseTime++;
    // @ts-expect-error: Value actually is writeable at this point.
    timing.duration = 1;
  }
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/lib/sentry.js
/**
 * @license Copyright 2017 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */



/** @typedef {import('@sentry/node').Breadcrumb} Breadcrumb */
/** @typedef {import('@sentry/node').NodeClient} NodeClient */
/** @typedef {import('@sentry/node').NodeOptions} NodeOptions */
/** @typedef {import('@sentry/node').Severity} Severity */

const SENTRY_URL = 'https://a6bb0da87ee048cc9ae2a345fc09ab2e:63a7029f46f74265981b7e005e0f69f8@sentry.io/174697';

// Per-run chance of capturing errors (if enabled).
const SAMPLE_RATE = 0.01;

/** @type {Array<{pattern: RegExp, rate: number}>} */
const SAMPLED_ERRORS = [
  // Error code based sampling. Delete if still unused after 2019-01-01.
  // e.g.: {pattern: /No.*node with given id/, rate: 0.01},
];

const noop = () => { };

/**
 * A delegate for sentry so that environments without error reporting enabled will use
 * noop functions and environments with error reporting will call the actual Sentry methods.
 */
const sentryDelegate = {
  init,
  /** @type {(message: string, level?: Severity) => void} */
  captureMessage: noop,
  /** @type {(breadcrumb: Breadcrumb) => void} */
  captureBreadcrumb: noop,
  /** @type {() => any} */
  getContext: noop,
  /** @type {(error: Error, options: {level?: string, tags?: {[key: string]: any}, extra?: {[key: string]: any}}) => Promise<void>} */
  captureException: async () => { },
  _shouldSample() {
    return SAMPLE_RATE >= Math.random();
  },
};

/**
 * When called, replaces noops with actual Sentry implementation.
 * @param {{url: string, flags: LH.CliFlags, environmentData: NodeOptions}} opts
 */
async function init(opts) {
  // If error reporting is disabled, leave the functions as a noop
  if (!opts.flags.enableErrorReporting) {
    return;
  }

  // If not selected for samping, leave the functions as a noop.
  if (!sentryDelegate._shouldSample()) {
    return;
  }

  try {
    const Sentry = await __nccwpck_require__.e(/* import() */ 783).then(__nccwpck_require__.t.bind(__nccwpck_require__, 2783, 19));
    Sentry.init({
      ...opts.environmentData,
      dsn: SENTRY_URL,
    });

    const extras = {
      ...opts.flags.throttling,
      channel: opts.flags.channel || 'cli',
      url: opts.url,
      formFactor: opts.flags.formFactor,
      throttlingMethod: opts.flags.throttlingMethod,
    };
    Sentry.setExtras(extras);

    // Have each delegate function call the corresponding sentry function by default
    sentryDelegate.captureMessage = (...args) => Sentry.captureMessage(...args);
    sentryDelegate.captureBreadcrumb = (...args) => Sentry.addBreadcrumb(...args);
    sentryDelegate.getContext = () => extras;

    // Keep a record of exceptions per audit/gatherer so we can just report once
    const sentryExceptionCache = new Map();
    // Special case captureException to return a Promise so we don't process.exit too early
    sentryDelegate.captureException = async (err, opts = {}) => {
      // Ignore if there wasn't an error
      if (!err) return;

      // Ignore expected errors
      // @ts-expect-error Non-standard property added to flag error as not needing capturing.
      if (err.expected) return;

      const tags = opts.tags || {};
      if (tags.audit) {
        const key = `audit-${tags.audit}-${err.message}`;
        if (sentryExceptionCache.has(key)) return;
        sentryExceptionCache.set(key, true);
      }

      if (tags.gatherer) {
        const key = `gatherer-${tags.gatherer}-${err.message}`;
        if (sentryExceptionCache.has(key)) return;
        sentryExceptionCache.set(key, true);
      }

      // Sample known errors that occur at a high frequency.
      const sampledErrorMatch = SAMPLED_ERRORS.find(sample => sample.pattern.test(err.message));
      if (sampledErrorMatch && sampledErrorMatch.rate <= Math.random()) return;

      // @ts-expect-error - properties added to protocol method LighthouseErrors.
      if (err.protocolMethod) {
        // Protocol errors all share same stack trace, so add more to fingerprint
        // @ts-expect-error - properties added to protocol method LighthouseErrors.
        opts.fingerprint = ['{{ default }}', err.protocolMethod, err.protocolError];

        opts.tags = opts.tags || {};
        // @ts-expect-error - properties added to protocol method LighthouseErrors.
        opts.tags.protocolMethod = err.protocolMethod;
      }

      Sentry.withScope(scope => {
        if (opts.level) {
          // @ts-expect-error - allow any string.
          scope.setLevel(opts.level);
        }
        if (opts.tags) {
          scope.setTags(opts.tags);
        }
        if (opts.extra) {
          scope.setExtras(opts.extra);
        }
        Sentry.captureException(err);
      });
    };
  } catch (e) {
    lighthouse_logger.warn(
      'sentry',
      'Could not load Sentry, errors will not be reported.'
    );
  }
}

const Sentry = sentryDelegate;

;// CONCATENATED MODULE: ./node_modules/lighthouse/report/generator/flow-report-assets.js
/**
 * @license Copyright 2021 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */






const flow_report_assets_moduleDir = esm_utils_getModuleDirectory(import.meta);

/* eslint-disable max-len */
const FLOW_REPORT_TEMPLATE = external_fs_.readFileSync(`${flow_report_assets_moduleDir}/../../flow-report/assets/standalone-flow-template.html`, 'utf8');
const REGULAR_REPORT_CSS = external_fs_.readFileSync(flow_report_assets_moduleDir + '/../assets/styles.css', 'utf8');
const FLOW_REPORT_CSS = external_fs_.readFileSync(`${flow_report_assets_moduleDir}/../../flow-report/assets/styles.css`, 'utf8');
const FLOW_REPORT_JAVASCRIPT = external_fs_.readFileSync(`${flow_report_assets_moduleDir}/../../dist/report/flow.js`, 'utf8');
/* eslint-enable max-len */

const flowReportAssets = {
  FLOW_REPORT_TEMPLATE,
  FLOW_REPORT_CSS: [REGULAR_REPORT_CSS, FLOW_REPORT_CSS].join('\n'),
  FLOW_REPORT_JAVASCRIPT,
};

;// CONCATENATED MODULE: ./node_modules/lighthouse/report/generator/report-assets.js
/**
 * @license Copyright 2018 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */







const report_assets_moduleDir = esm_utils_getModuleDirectory(import.meta);

const REPORT_TEMPLATE = external_fs_.readFileSync(report_assets_moduleDir + '/../assets/standalone-template.html',
    'utf8');
const REPORT_JAVASCRIPT = external_fs_.readFileSync(report_assets_moduleDir + '/../../dist/report/standalone.js', 'utf8');

const reportAssets = {
  REPORT_TEMPLATE,
  REPORT_JAVASCRIPT,
  // Flow report assets are not needed for every bundle.
  // Replacing/ignoring flow-report-assets.js (e.g. `rollupPlugins.shim`) will
  // remove the flow assets from the bundle.
  ...flowReportAssets,
};

;// CONCATENATED MODULE: ./node_modules/lighthouse/report/generator/report-generator.js
/**
 * @license Copyright 2017 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */




/** @typedef {import('../../types/lhr/lhr').default} LHResult */
/** @typedef {import('../../types/lhr/flow-result').default} FlowResult */

class report_generator_ReportGenerator {
  /**
   * Replaces all the specified strings in source without serial replacements.
   * @param {string} source
   * @param {!Array<{search: string, replacement: string}>} replacements
   * @return {string}
   */
  static replaceStrings(source, replacements) {
    if (replacements.length === 0) {
      return source;
    }

    const firstReplacement = replacements[0];
    const nextReplacements = replacements.slice(1);
    return source
        .split(firstReplacement.search)
        .map(part => report_generator_ReportGenerator.replaceStrings(part, nextReplacements))
        .join(firstReplacement.replacement);
  }

  /**
   * @param {unknown} object
   * @return {string}
   */
  static sanitizeJson(object) {
    return JSON.stringify(object)
    .replace(/</g, '\\u003c') // replaces opening script tags
    .replace(/\u2028/g, '\\u2028') // replaces line separators ()
    .replace(/\u2029/g, '\\u2029'); // replaces paragraph separators
  }

  /**
   * Returns the standalone report HTML as a string with the report JSON and renderer JS inlined.
   * @param {LHResult} lhr
   * @return {string}
   */
  static generateReportHtml(lhr) {
    const sanitizedJson = report_generator_ReportGenerator.sanitizeJson(lhr);
    // terser does its own sanitization, but keep this basic replace for when
    // we want to generate a report without minification.
    const sanitizedJavascript = reportAssets.REPORT_JAVASCRIPT.replace(/<\//g, '\\u003c/');

    return report_generator_ReportGenerator.replaceStrings(reportAssets.REPORT_TEMPLATE, [
      {search: '%%LIGHTHOUSE_JSON%%', replacement: sanitizedJson},
      {search: '%%LIGHTHOUSE_JAVASCRIPT%%', replacement: sanitizedJavascript},
    ]);
  }

  /**
   * Returns the standalone flow report HTML as a string with the report JSON and renderer JS inlined.
   * @param {FlowResult} flow
   * @return {string}
   */
  static generateFlowReportHtml(flow) {
    const sanitizedJson = report_generator_ReportGenerator.sanitizeJson(flow);
    // terser does its own sanitization, but keep this basic replace for when
    // we want to generate a report without minification.
    const sanitizedJavascript = reportAssets.FLOW_REPORT_JAVASCRIPT.replace(/<\//g, '\\u003c/');
    return report_generator_ReportGenerator.replaceStrings(reportAssets.FLOW_REPORT_TEMPLATE, [
      /* eslint-disable max-len */
      {search: '%%LIGHTHOUSE_FLOW_JSON%%', replacement: sanitizedJson},
      {search: '%%LIGHTHOUSE_FLOW_JAVASCRIPT%%', replacement: sanitizedJavascript},
      {search: '/*%%LIGHTHOUSE_FLOW_CSS%%*/', replacement: reportAssets.FLOW_REPORT_CSS},
      /* eslint-enable max-len */
    ]);
  }

  /**
   * Converts the results to a CSV formatted string
   * Each row describes the result of 1 audit with
   *  - the name of the category the audit belongs to
   *  - the name of the audit
   *  - a description of the audit
   *  - the score type that is used for the audit
   *  - the score value of the audit
   *
   * @param {LHResult} lhr
   * @return {string}
   */
  static generateReportCSV(lhr) {
    // To keep things "official" we follow the CSV specification (RFC4180)
    // The document describes how to deal with escaping commas and quotes etc.
    const CRLF = '\r\n';
    const separator = ',';
    /** @param {string} value @return {string} */
    const escape = value => `"${value.replace(/"/g, '""')}"`;
    /** @param {ReadonlyArray<string | number | null>} row @return {string[]} */
    const rowFormatter = row => row.map(value => {
      if (value === null) return 'null';
      return value.toString();
    }).map(escape);

    const rows = [];
    const topLevelKeys = /** @type {const} */(
      ['requestedUrl', 'finalDisplayedUrl', 'fetchTime', 'gatherMode']);

    // First we have metadata about the LHR.
    rows.push(rowFormatter(topLevelKeys));
    rows.push(rowFormatter(topLevelKeys.map(key => lhr[key] ?? null)));

    // Some spacing.
    rows.push([]);

    // Categories.
    rows.push(['category', 'score']);
    for (const category of Object.values(lhr.categories)) {
      rows.push(rowFormatter([
        category.id,
        category.score,
      ]));
    }

    rows.push([]);

    // Audits.
    rows.push(['category', 'audit', 'score', 'displayValue', 'description']);
    for (const category of Object.values(lhr.categories)) {
      for (const auditRef of category.auditRefs) {
        const audit = lhr.audits[auditRef.id];
        if (!audit) continue;

        rows.push(rowFormatter([
          category.id,
          auditRef.id,
          audit.score,
          audit.displayValue || '',
          audit.description,
        ]));
      }
    }

    return rows
      .map(row => row.join(separator))
      .join(CRLF);
  }

  /**
   * @param {LHResult|FlowResult} result
   * @return {result is FlowResult}
   */
  static isFlowResult(result) {
    return 'steps' in result;
  }

  /**
   * Creates the results output in a format based on the `mode`.
   * @param {LHResult|FlowResult} result
   * @param {LHResult['configSettings']['output']} outputModes
   * @return {string|string[]}
   */
  static generateReport(result, outputModes) {
    const outputAsArray = Array.isArray(outputModes);
    if (typeof outputModes === 'string') outputModes = [outputModes];

    const output = outputModes.map(outputMode => {
      // HTML report.
      if (outputMode === 'html') {
        if (report_generator_ReportGenerator.isFlowResult(result)) {
          return report_generator_ReportGenerator.generateFlowReportHtml(result);
        }
        return report_generator_ReportGenerator.generateReportHtml(result);
      }
      // CSV report.
      if (outputMode === 'csv') {
        if (report_generator_ReportGenerator.isFlowResult(result)) {
          throw new Error('CSV output is not support for user flows');
        }
        return report_generator_ReportGenerator.generateReportCSV(result);
      }
      // JSON report.
      if (outputMode === 'json') {
        return JSON.stringify(result, null, 2);
      }

      throw new Error('Invalid output mode: ' + outputMode);
    });

    return outputAsArray ? output : output[0];
  }
}



// EXTERNAL MODULE: ./node_modules/third-party-web/nostats-subset.js
var nostats_subset = __nccwpck_require__(1394);
;// CONCATENATED MODULE: ./node_modules/lighthouse/core/lib/third-party-web.js
/**
 * @license Copyright 2020 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */



/** @typedef {import("third-party-web").IEntity} ThirdPartyEntity */
/** @typedef {import("third-party-web").IProduct} ThirdPartyProduct */

/**
 * @param {string} url
 * @return {ThirdPartyEntity|undefined}
 */
function getEntity(url) {
  return nostats_subset.getEntity(url);
}

/**
 * @param {string} url
 * @return {ThirdPartyProduct|undefined}
 */
function getProduct(url) {
  return nostats_subset.getProduct(url);
}

/**
 * @param {string} url
 * @param {ThirdPartyEntity | undefined} mainDocumentEntity
 */
function isThirdParty(url, mainDocumentEntity) {
  const entity = getEntity(url);
  if (!entity) return false;
  if (entity === mainDocumentEntity) return false;
  return true;
}

/**
 * @param {string} url
 * @param {ThirdPartyEntity | undefined} mainDocumentEntity
 */
function isFirstParty(url, mainDocumentEntity) {
  return !isThirdParty(url, mainDocumentEntity);
}

/* harmony default export */ const third_party_web = ({
  getEntity,
  getProduct,
  isThirdParty,
  isFirstParty,
});

;// CONCATENATED MODULE: ./node_modules/lighthouse/core/computed/entity-classification.js
/**
 * @license Copyright 2022 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */







/** @typedef {Map<string, LH.Artifacts.Entity>} EntityCache */

class EntityClassification {
  /**
   * @param {EntityCache} entityCache
   * @param {string} url
   * @return {LH.Artifacts.Entity | undefined}
   */
  static makeUpAnEntity(entityCache, url) {
    if (!url_utils.isValid(url)) return;
    // We can make up an entity only for those URLs with a valid domain attached.
    // So we further restrict from allowed URLs to (http/https).
    if (!Util.createOrReturnURL(url).protocol.startsWith('http')) return;

    const rootDomain = Util.getRootDomain(url);
    if (!rootDomain) return;
    if (entityCache.has(rootDomain)) return entityCache.get(rootDomain);

    const unrecognizedEntity = {
      name: rootDomain,
      company: rootDomain,
      category: '',
      categories: [],
      domains: [rootDomain],
      averageExecutionTime: 0,
      totalExecutionTime: 0,
      totalOccurrences: 0,
      isUnrecognized: true,
    };
    entityCache.set(rootDomain, unrecognizedEntity);
    return unrecognizedEntity;
  }

  /**
   * @param {{URL: LH.Artifacts['URL'], devtoolsLog: LH.DevtoolsLog}} data
   * @param {LH.Artifacts.ComputedContext} context
   * @return {Promise<LH.Artifacts.EntityClassification>}
   */
  static async compute_(data, context) {
    const networkRecords = await NetworkRecordsComputed.request(data.devtoolsLog, context);
    /** @type {EntityCache} */
    const madeUpEntityCache = new Map();
    /** @type {Map<string, LH.Artifacts.Entity>} */
    const entityByUrl = new Map();
    /** @type {Map<LH.Artifacts.Entity, Set<string>>} */
    const urlsByEntity = new Map();

    for (const record of networkRecords) {
      const {url} = record;
      if (entityByUrl.has(url)) continue;

      const entity = third_party_web.getEntity(url) ||
        EntityClassification.makeUpAnEntity(madeUpEntityCache, url);
      if (!entity) continue;

      const entityURLs = urlsByEntity.get(entity) || new Set();
      entityURLs.add(url);
      urlsByEntity.set(entity, entityURLs);
      entityByUrl.set(url, entity);
    }

    // When available, first party identification will be done via
    // `mainDocumentUrl` (for navigations), and falls back to `finalDisplayedUrl` (for timespan/snapshot).
    // See https://github.com/GoogleChrome/lighthouse/issues/13706
    const firstPartyUrl = data.URL.mainDocumentUrl || data.URL.finalDisplayedUrl;
    const firstParty = third_party_web.getEntity(firstPartyUrl) ||
      EntityClassification.makeUpAnEntity(madeUpEntityCache, firstPartyUrl);

    /**
     * Convenience function to check if a URL belongs to first party.
     * @param {string} url
     * @return {boolean}
     */
    function isFirstParty(url) {
      const entityUrl = entityByUrl.get(url);
      if (!entityUrl) throw new Error('A url not in devtoolsLog was used for first-party check.');
      return entityUrl === firstParty;
    }

    return {
      entityByUrl,
      urlsByEntity,
      firstParty,
      isFirstParty,
    };
  }
}

const EntityClassificationComputed = makeComputedArtifact(EntityClassification,
  ['URL', 'devtoolsLog']);


;// CONCATENATED MODULE: ./node_modules/lighthouse/core/runner.js
/**
 * @license Copyright 2016 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */























const runner_moduleDir = esm_utils_getModuleDirectory(import.meta);

/** @typedef {import('./legacy/gather/connections/connection.js').Connection} Connection */
/** @typedef {import('./lib/arbitrary-equality-map.js').ArbitraryEqualityMap} ArbitraryEqualityMap */
/** @typedef {LH.Config.LegacyResolvedConfig} Config */

class runner_Runner {
  /**
   * @template {LH.Config.LegacyResolvedConfig | LH.Config.ResolvedConfig} TConfig
   * @param {LH.Artifacts} artifacts
   * @param {{resolvedConfig: TConfig, driverMock?: Driver, computedCache: Map<string, ArbitraryEqualityMap>}} options
   * @return {Promise<LH.RunnerResult|undefined>}
   */
  static async audit(artifacts, options) {
    const {resolvedConfig, computedCache} = options;
    const settings = resolvedConfig.settings;

    try {
      const runnerStatus = {msg: 'Audit phase', id: 'lh:runner:audit'};
      lighthouse_logger.time(runnerStatus, 'verbose');

      /**
       * List of top-level warnings for this Lighthouse run.
       * @type {Array<string | LH.IcuMessage>}
       */
      const lighthouseRunWarnings = [];

      // Potentially quit early
      if (settings.gatherMode && !settings.auditMode) return;

      if (!resolvedConfig.audits) {
        throw new Error('No audits to evaluate.');
      }
      const auditResultsById = await runner_Runner._runAudits(settings, resolvedConfig.audits, artifacts,
          lighthouseRunWarnings, computedCache);

      // LHR construction phase
      const resultsStatus = {msg: 'Generating results...', id: 'lh:runner:generate'};
      lighthouse_logger.time(resultsStatus);

      if (artifacts.LighthouseRunWarnings) {
        lighthouseRunWarnings.push(...artifacts.LighthouseRunWarnings);
      }

      // Entering: conclusion of the lighthouse result object

      // Use version from gathering stage.
      // If accessibility gatherer didn't run or errored, it won't be in credits.
      const axeVersion = artifacts.Accessibility?.version;
      const credits = {
        'axe-core': axeVersion,
      };

      /** @type {Record<string, LH.RawIcu<LH.Result.Category>>} */
      let categories = {};
      if (resolvedConfig.categories) {
        categories = ReportScoring.scoreAllCategories(resolvedConfig.categories, auditResultsById);
      }

      lighthouse_logger.timeEnd(resultsStatus);
      lighthouse_logger.timeEnd(runnerStatus);

      /** @type {LH.RawIcu<LH.Result>} */
      const i18nLhr = {
        lighthouseVersion: lighthouseVersion,
        requestedUrl: artifacts.URL.requestedUrl,
        mainDocumentUrl: artifacts.URL.mainDocumentUrl,
        finalDisplayedUrl: artifacts.URL.finalDisplayedUrl,
        finalUrl: artifacts.URL.mainDocumentUrl,
        fetchTime: artifacts.fetchTime,
        gatherMode: artifacts.GatherContext.gatherMode,
        runtimeError: runner_Runner.getArtifactRuntimeError(artifacts),
        runWarnings: lighthouseRunWarnings,
        userAgent: artifacts.HostUserAgent,
        environment: {
          networkUserAgent: artifacts.NetworkUserAgent,
          hostUserAgent: artifacts.HostUserAgent,
          benchmarkIndex: artifacts.BenchmarkIndex,
          benchmarkIndexes: artifacts.BenchmarkIndexes,
          credits,
        },
        audits: auditResultsById,
        configSettings: settings,
        categories,
        categoryGroups: resolvedConfig.groups || undefined,
        stackPacks: getStackPacks(artifacts.Stacks),
        entities: await runner_Runner.getEntityClassification(artifacts, {computedCache}),
        fullPageScreenshot: resolvedConfig.settings.disableFullPageScreenshot ?
          undefined : artifacts.FullPageScreenshot,
        timing: this._getTiming(artifacts),
        i18n: {
          rendererFormattedStrings: getRendererFormattedStrings(settings.locale),
          icuMessagePaths: {},
        },
      };

      // Replace ICU message references with localized strings; save replaced paths in lhr.
      i18nLhr.i18n.icuMessagePaths = replaceIcuMessages(i18nLhr, settings.locale);

      // LHR has now been localized.
      const lhr = /** @type {LH.Result} */ (i18nLhr);

      if (settings.auditMode) {
        const path = runner_Runner._getDataSavePath(settings);
        saveLhr(lhr, path);
      }

      // Create the HTML, JSON, and/or CSV string
      const report = report_generator_ReportGenerator.generateReport(lhr, settings.output);

      return {lhr, artifacts, report};
    } catch (err) {
      throw runner_Runner.createRunnerError(err, settings);
    }
  }

  /**
   * @param {LH.Artifacts} artifacts
   * @param {LH.Artifacts.ComputedContext} context
   */
  static async getEntityClassification(artifacts, context) {
    const devtoolsLog = artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
    if (!devtoolsLog) return;
    const classifiedEntities = await EntityClassificationComputed.request(
      {URL: artifacts.URL, devtoolsLog}, context);

    /** @type {Array<LH.Result.LhrEntity>} */
    const entities = [];
    for (const [entity, entityUrls] of classifiedEntities.urlsByEntity) {
      const uniqueOrigins = new Set();
      for (const url of entityUrls) {
        const origin = url_utils.getOrigin(url);
        if (origin) uniqueOrigins.add(origin);
      }

      /** @type {LH.Result.LhrEntity} */
      const shortEntity = {
        name: entity.name,
        homepage: entity.homepage,
        origins: [...uniqueOrigins],
      };
      // Reduce payload size in LHR JSON by omitting whats falsy.
      if (entity === classifiedEntities.firstParty) shortEntity.isFirstParty = true;
      if (entity.isUnrecognized) shortEntity.isUnrecognized = true;
      entities.push(shortEntity);
    }

    return entities;
  }

  /**
   * User can run -G solo, -A solo, or -GA together
   * -G and -A will run partial lighthouse pipelines,
   * and -GA will run everything plus save artifacts and lhr to disk.
   *
   * @template {LH.Config.LegacyResolvedConfig | LH.Config.ResolvedConfig} TConfig
   * @param {(runnerData: {resolvedConfig: TConfig, driverMock?: Driver}) => Promise<LH.Artifacts>} gatherFn
   * @param {{resolvedConfig: TConfig, driverMock?: Driver, computedCache: Map<string, ArbitraryEqualityMap>}} options
   * @return {Promise<LH.Artifacts>}
   */
  static async gather(gatherFn, options) {
    const settings = options.resolvedConfig.settings;

    // Either load saved artifacts from disk or from the browser.
    try {
      const sentryContext = Sentry.getContext();
      Sentry.captureBreadcrumb({
        message: 'Run started',
        category: 'lifecycle',
        data: sentryContext,
      });

      /** @type {LH.Artifacts} */
      let artifacts;
      if (settings.auditMode && !settings.gatherMode) {
        // No browser required, just load the artifacts from disk.
        const path = this._getDataSavePath(settings);
        artifacts = loadArtifacts(path);
      } else {
        const runnerStatus = {msg: 'Gather phase', id: 'lh:runner:gather'};
        lighthouse_logger.time(runnerStatus, 'verbose');

        artifacts = await gatherFn({
          resolvedConfig: options.resolvedConfig,
          driverMock: options.driverMock,
        });

        lighthouse_logger.timeEnd(runnerStatus);

        // If `gather` is run multiple times before `audit`, the timing entries for each `gather` can pollute one another.
        // We need to clear the timing entries at the end of gathering.
        // Set artifacts.Timing again to ensure lh:runner:gather is included.
        artifacts.Timing = lighthouse_logger.takeTimeEntries();

        // -G means save these to disk (e.g. ./latest-run).
        if (settings.gatherMode) {
          const path = this._getDataSavePath(settings);
          await saveArtifacts(artifacts, path);
        }
      }

      return artifacts;
    } catch (err) {
      throw runner_Runner.createRunnerError(err, settings);
    }
  }

  /**
   * @param {any} err
   * @param {LH.Config.Settings} settings
   */
  static createRunnerError(err, settings) {
    // i18n LighthouseError strings.
    if (err.friendlyMessage) {
      err.friendlyMessage = format_getFormatted(err.friendlyMessage, settings.locale);
    }
    Sentry.captureException(err, {level: 'fatal'});
    return err;
  }

  /**
   * This handles both the auditMode case where gatherer entries need to be merged in and
   * the gather/audit case where timingEntriesFromRunner contains all entries from this run,
   * including those also in timingEntriesFromArtifacts.
   * @param {LH.Artifacts} artifacts
   * @return {LH.Result.Timing}
   */
  static _getTiming(artifacts) {
    const timingEntriesFromArtifacts = artifacts.Timing || [];
    const timingEntriesFromRunner = lighthouse_logger.takeTimeEntries();
    const timingEntriesKeyValues = [
      ...timingEntriesFromArtifacts,
      ...timingEntriesFromRunner,
    ].map(entry => /** @type {[string, PerformanceEntry]} */ ([
      // As entries can share a name and start time, dedupe based on the name, startTime and duration
      `${entry.startTime}-${entry.name}-${entry.duration}`,
      entry,
    ]));
    const timingEntries = Array.from(new Map(timingEntriesKeyValues).values())
    // Truncate timestamps to hundredths of a millisecond saves ~4KB. No need for microsecond
    // resolution.
    .map(entry => {
      return {
        // Don't spread entry because browser PerformanceEntries can't be spread.
        // https://github.com/GoogleChrome/lighthouse/issues/8638
        startTime: parseFloat(entry.startTime.toFixed(2)),
        name: entry.name,
        duration: parseFloat(entry.duration.toFixed(2)),
        entryType: entry.entryType,
      };
    }).sort((a, b) => a.startTime - b.startTime);
    const gatherEntry = timingEntries.find(e => e.name === 'lh:runner:gather');
    const auditEntry = timingEntries.find(e => e.name === 'lh:runner:audit');
    const gatherTiming = gatherEntry?.duration || 0;
    const auditTiming = auditEntry?.duration || 0;
    return {entries: timingEntries, total: gatherTiming + auditTiming};
  }

  /**
   * Establish connection, load page and collect all required artifacts
   * @param {string} requestedUrl
   * @param {{resolvedConfig: Config, computedCache: Map<string, ArbitraryEqualityMap>, driverMock?: Driver}} runnerOpts
   * @param {Connection} connection
   * @return {Promise<LH.Artifacts>}
   */
  static async _gatherArtifactsFromBrowser(requestedUrl, runnerOpts, connection) {
    if (!runnerOpts.resolvedConfig.passes) {
      throw new Error('No browser artifacts are either provided or requested.');
    }
    const driver = runnerOpts.driverMock || new driver_Driver(connection);
    const gatherOpts = {
      driver,
      requestedUrl,
      settings: runnerOpts.resolvedConfig.settings,
      computedCache: runnerOpts.computedCache,
    };
    const artifacts = await GatherRunner.run(runnerOpts.resolvedConfig.passes, gatherOpts);
    return artifacts;
  }

  /**
   * Run all audits with specified settings and artifacts.
   * @param {LH.Config.Settings} settings
   * @param {Array<LH.Config.AuditDefn>} audits
   * @param {LH.Artifacts} artifacts
   * @param {Array<string | LH.IcuMessage>} runWarnings
   * @param {Map<string, ArbitraryEqualityMap>} computedCache
   * @return {Promise<Record<string, LH.RawIcu<LH.Audit.Result>>>}
   */
  static async _runAudits(settings, audits, artifacts, runWarnings, computedCache) {
    const status = {msg: 'Analyzing and running audits...', id: 'lh:runner:auditing'};
    lighthouse_logger.time(status);

    if (artifacts.settings) {
      const overrides = {
        locale: undefined,
        gatherMode: undefined,
        auditMode: undefined,
        output: undefined,
        channel: undefined,
        budgets: undefined,
      };
      const normalizedGatherSettings = Object.assign({}, artifacts.settings, overrides);
      const normalizedAuditSettings = Object.assign({}, settings, overrides);

      // First, try each key individually so we can print which key differed.
      const keys = new Set([
        ...Object.keys(normalizedGatherSettings),
        ...Object.keys(normalizedAuditSettings),
      ]);
      for (const k of keys) {
        if (!isEqual(normalizedGatherSettings[k], normalizedAuditSettings[k])) {
          throw new Error(
            `Cannot change settings between gathering and auditing. Difference found at: ${k}`);
        }
      }

      // Call `isDeepEqual` on the entire thing, just in case something was missed.
      if (!isEqual(normalizedGatherSettings, normalizedAuditSettings)) {
        throw new Error('Cannot change settings between gathering and auditing');
      }
    }

    // Members of LH.Audit.Context that are shared across all audits.
    const sharedAuditContext = {
      settings,
      computedCache,
    };

    // Run each audit sequentially
    /** @type {Record<string, LH.RawIcu<LH.Audit.Result>>} */
    const auditResultsById = {};
    for (const auditDefn of audits) {
      const auditId = auditDefn.implementation.meta.id;
      const auditResult = await runner_Runner._runAudit(auditDefn, artifacts, sharedAuditContext,
          runWarnings);
      auditResultsById[auditId] = auditResult;
    }

    lighthouse_logger.timeEnd(status);
    return auditResultsById;
  }

  /**
   * Checks that the audit's required artifacts exist and runs the audit if so.
   * Otherwise returns error audit result.
   * @param {LH.Config.AuditDefn} auditDefn
   * @param {LH.Artifacts} artifacts
   * @param {Pick<LH.Audit.Context, 'settings'|'computedCache'>} sharedAuditContext
   * @param {Array<string | LH.IcuMessage>} runWarnings
   * @return {Promise<LH.RawIcu<LH.Audit.Result>>}
   * @private
   */
  static async _runAudit(auditDefn, artifacts, sharedAuditContext, runWarnings) {
    const audit = auditDefn.implementation;
    const status = {
      msg: `Auditing: ${format_getFormatted(audit.meta.title, 'en-US')}`,
      id: `lh:audit:${audit.meta.id}`,
    };
    lighthouse_logger.time(status);

    let auditResult;
    try {
      // Return an early error if an artifact required for the audit is missing or an error.
      for (const artifactName of audit.meta.requiredArtifacts) {
        const noArtifact = artifacts[artifactName] === undefined;

        // If trace/devtoolsLog required, check that DEFAULT_PASS trace/devtoolsLog exists.
        // NOTE: for now, not a pass-specific check of traces or devtoolsLogs.
        const noRequiredTrace = artifactName === 'traces' && !artifacts.traces[Audit.DEFAULT_PASS];
        const noRequiredDevtoolsLog = artifactName === 'devtoolsLogs' &&
            !artifacts.devtoolsLogs[Audit.DEFAULT_PASS];

        if (noArtifact || noRequiredTrace || noRequiredDevtoolsLog) {
          lighthouse_logger.warn('Runner',
              `${artifactName} gatherer, required by audit ${audit.meta.id}, did not run.`);
          throw new lh_error_LighthouseError(
            lh_error_LighthouseError.errors.MISSING_REQUIRED_ARTIFACT, {artifactName});
        }

        // If artifact was an error, output error result on behalf of audit.
        if (artifacts[artifactName] instanceof Error) {
          /** @type {Error} */
          // @ts-expect-error: TODO why is this a type error now?
          const artifactError = artifacts[artifactName];

          Sentry.captureException(artifactError, {
            tags: {gatherer: artifactName},
            level: 'error',
          });

          lighthouse_logger.warn('Runner', `${artifactName} gatherer, required by audit ${audit.meta.id},` +
            ` encountered an error: ${artifactError.message}`);

          // Create a friendlier display error and mark it as expected to avoid duplicates in Sentry
          const error = new lh_error_LighthouseError(lh_error_LighthouseError.errors.ERRORED_REQUIRED_ARTIFACT,
              {artifactName, errorMessage: artifactError.message});
          // @ts-expect-error Non-standard property added to Error
          error.expected = true;
          throw error;
        }
      }

      // all required artifacts are in good shape, so we proceed
      const auditOptions = Object.assign({}, audit.defaultOptions, auditDefn.options);
      const auditContext = {
        options: auditOptions,
        ...sharedAuditContext,
      };

      // Only pass the declared required and optional artifacts to the audit
      // The type is masquerading as `LH.Artifacts` but will only contain a subset of the keys
      // to prevent consumers from unnecessary type assertions.
      const requestedArtifacts = audit.meta.requiredArtifacts
        .concat(audit.meta.__internalOptionalArtifacts || []);
      const narrowedArtifacts = requestedArtifacts
        .reduce((narrowedArtifacts, artifactName) => {
          const requestedArtifact = artifacts[artifactName];
          // @ts-expect-error tsc can't yet express that artifactName is only a single type in each iteration, not a union of types.
          narrowedArtifacts[artifactName] = requestedArtifact;
          return narrowedArtifacts;
        }, /** @type {LH.Artifacts} */ ({}));
      const product = await audit.audit(narrowedArtifacts, auditContext);
      runWarnings.push(...(product.runWarnings || []));

      auditResult = Audit.generateAuditResult(audit, product);
    } catch (err) {
      // Log error if it hasn't already been logged above.
      if (err.code !== 'MISSING_REQUIRED_ARTIFACT' && err.code !== 'ERRORED_REQUIRED_ARTIFACT') {
        lighthouse_logger.warn(audit.meta.id, `Caught exception: ${err.message}`);
      }

      Sentry.captureException(err, {tags: {audit: audit.meta.id}, level: 'error'});
      // Errors become error audit result.
      const errorMessage = err.friendlyMessage ? err.friendlyMessage : err.message;
      auditResult = Audit.generateErrorAuditResult(audit, errorMessage);
    }

    lighthouse_logger.timeEnd(status);
    return auditResult;
  }

  /**
   * Searches a pass's artifacts for any `lhrRuntimeError` error artifacts.
   * Returns the first one found or `null` if none found.
   * @param {LH.Artifacts} artifacts
   * @return {LH.RawIcu<LH.Result['runtimeError']>|undefined}
   */
  static getArtifactRuntimeError(artifacts) {
    const possibleErrorArtifacts = [
      artifacts.PageLoadError, // Preferentially use `PageLoadError`, if it exists.
      ...Object.values(artifacts), // Otherwise check amongst all artifacts.
    ];

    for (const possibleErrorArtifact of possibleErrorArtifacts) {
      const isError = possibleErrorArtifact instanceof lh_error_LighthouseError;

      // eslint-disable-next-line max-len
      if (isError && possibleErrorArtifact.lhrRuntimeError) {
        const errorMessage = possibleErrorArtifact.friendlyMessage || possibleErrorArtifact.message;

        return {
          code: possibleErrorArtifact.code,
          message: errorMessage,
        };
      }
    }

    return undefined;
  }

  /**
   * Returns list of audit names for external querying.
   * @return {Array<string>}
   */
  static getAuditList() {
    const ignoredFiles = [
      'audit.js',
      'violation-audit.js',
      'accessibility/axe-audit.js',
      'multi-check-audit.js',
      'byte-efficiency/byte-efficiency-audit.js',
      'manual/manual-audit.js',
    ];

    const fileList = [
      ...external_fs_.readdirSync(external_path_.join(runner_moduleDir, './audits')),
      ...external_fs_.readdirSync(external_path_.join(runner_moduleDir, './audits/dobetterweb')).map(f => `dobetterweb/${f}`),
      ...external_fs_.readdirSync(external_path_.join(runner_moduleDir, './audits/metrics')).map(f => `metrics/${f}`),
      ...external_fs_.readdirSync(external_path_.join(runner_moduleDir, './audits/seo')).map(f => `seo/${f}`),
      ...external_fs_.readdirSync(external_path_.join(runner_moduleDir, './audits/seo/manual')).map(f => `seo/manual/${f}`),
      ...external_fs_.readdirSync(external_path_.join(runner_moduleDir, './audits/accessibility'))
          .map(f => `accessibility/${f}`),
      ...external_fs_.readdirSync(external_path_.join(runner_moduleDir, './audits/accessibility/manual'))
          .map(f => `accessibility/manual/${f}`),
      ...external_fs_.readdirSync(external_path_.join(runner_moduleDir, './audits/byte-efficiency'))
          .map(f => `byte-efficiency/${f}`),
      ...external_fs_.readdirSync(external_path_.join(runner_moduleDir, './audits/manual')).map(f => `manual/${f}`),
    ];
    return fileList.filter(f => {
      return /\.js$/.test(f) && !ignoredFiles.includes(f);
    }).sort();
  }

  /**
   * Returns list of gatherer names for external querying.
   * @return {Array<string>}
   */
  static getGathererList() {
    const fileList = [
      ...external_fs_.readdirSync(external_path_.join(runner_moduleDir, './gather/gatherers')),
      ...external_fs_.readdirSync(external_path_.join(runner_moduleDir, './gather/gatherers/seo')).map(f => `seo/${f}`),
      ...external_fs_.readdirSync(external_path_.join(runner_moduleDir, './gather/gatherers/dobetterweb'))
          .map(f => `dobetterweb/${f}`),
    ];
    return fileList.filter(f => /\.js$/.test(f) && f !== 'gatherer.js').sort();
  }

  /**
   * Get path to use for -G and -A modes. Defaults to $CWD/latest-run
   * @param {LH.Config.Settings} settings
   * @return {string}
   */
  static _getDataSavePath(settings) {
    const {auditMode, gatherMode} = settings;

    // This enables usage like: -GA=./custom-folder
    if (typeof auditMode === 'string') return external_path_.resolve(process.cwd(), auditMode);
    if (typeof gatherMode === 'string') return external_path_.resolve(process.cwd(), gatherMode);

    return external_path_.join(process.cwd(), 'latest-run');
  }
}



// EXTERNAL MODULE: external "http"
var external_http_ = __nccwpck_require__(3685);
// EXTERNAL MODULE: ./node_modules/ws/index.js
var ws = __nccwpck_require__(8867);
;// CONCATENATED MODULE: ./node_modules/lighthouse/core/legacy/gather/connections/connection.js
/**
 * @license Copyright 2016 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */








// TODO(bckenny): CommandCallback properties should be tied by command type after
// https://github.com/Microsoft/TypeScript/pull/22348. See driver.js TODO.
/**
 * @typedef {{'protocolevent': [LH.Protocol.RawEventMessage]}} ProtocolEventRecord
 * @typedef {LH.Protocol.StrictEventEmitter<ProtocolEventRecord>} CrdpEventMessageEmitter
 * @typedef {LH.CrdpCommands[keyof LH.CrdpCommands]} CommandInfo
 * @typedef {{resolve: function(Promise<CommandInfo['returnType']>): void, method: keyof LH.CrdpCommands}} CommandCallback
 */

class connection_Connection {
  constructor() {
    this._lastCommandId = 0;
    /** @type {Map<number, CommandCallback>} */
    this._callbacks = new Map();

    this._eventEmitter = /** @type {?CrdpEventMessageEmitter} */ (new EventEmitter());
  }

  /**
   * @return {Promise<void>}
   */
  connect() {
    return Promise.reject(new Error('Not implemented'));
  }

  /**
   * @return {Promise<void>}
   */
  disconnect() {
    return Promise.reject(new Error('Not implemented'));
  }

  /**
   * @return {Promise<string>}
   */
  wsEndpoint() {
    return Promise.reject(new Error('Not implemented'));
  }

  /**
   * Call protocol methods
   * @template {keyof LH.CrdpCommands} C
   * @param {C} method
   * @param {string|undefined} sessionId
   * @param {LH.CrdpCommands[C]['paramsType']} paramArgs,
   * @return {Promise<LH.CrdpCommands[C]['returnType']>}
   */
  sendCommand(method, sessionId, ...paramArgs) {
    // Reify params since we need it as a property so can't just spread again.
    const params = paramArgs.length ? paramArgs[0] : undefined;

    log.formatProtocol('method => browser', {method, params}, 'verbose');
    const id = ++this._lastCommandId;
    const message = JSON.stringify({id, sessionId, method, params});
    this.sendRawMessage(message);

    return new Promise(resolve => {
      this._callbacks.set(id, {method, resolve});
    });
  }

  /**
   * Bind listeners for connection events.
   * @param {'protocolevent'} eventName
   * @param {function(LH.Protocol.RawEventMessage): void} cb
   */
  on(eventName, cb) {
    if (eventName !== 'protocolevent') {
      throw new Error('Only supports "protocolevent" events');
    }

    if (!this._eventEmitter) {
      throw new Error('Attempted to add event listener after connection disposed.');
    }
    this._eventEmitter.on(eventName, cb);
  }

  /**
   * Unbind listeners for connection events.
   * @param {'protocolevent'} eventName
   * @param {function(LH.Protocol.RawEventMessage): void} cb
   */
  off(eventName, cb) {
    if (eventName !== 'protocolevent') {
      throw new Error('Only supports "protocolevent" events');
    }

    if (!this._eventEmitter) {
      throw new Error('Attempted to remove event listener after connection disposed.');
    }
    this._eventEmitter.removeListener(eventName, cb);
  }

  /* eslint-disable no-unused-vars */

  /**
   * @param {string} message
   * @protected
   */
  sendRawMessage(message) {
    throw new Error('Not implemented');
  }

  /* eslint-enable no-unused-vars */

  /**
   * @param {string} message
   * @return {void}
   * @protected
   */
  handleRawMessage(message) {
    /** @type {LH.Protocol.RawMessage} */
    const object = JSON.parse(message);

    // Responses to commands carry "id" property, while events do not.
    if (!('id' in object)) {
      log.formatProtocol('<= event',
          {method: object.method, params: object.params}, 'verbose');
      this.emitProtocolEvent(object);
      return;
    }

    const callback = this._callbacks.get(object.id);
    if (callback) {
      this._callbacks.delete(object.id);

      callback.resolve(Promise.resolve().then(_ => {
        if (object.error) {
          log.formatProtocol('method <= browser ERR', {method: callback.method}, 'error');
          throw LighthouseError.fromProtocolMessage(callback.method, object.error);
        }

        log.formatProtocol('method <= browser OK',
          {method: callback.method, params: object.result}, 'verbose');
        return object.result;
      }));
    } else {
      // In DevTools we receive responses to commands we did not send which we cannot act on, so we
      // just log these occurrences.
      const error = object.error?.message;
      log.formatProtocol(`disowned method <= browser ${error ? 'ERR' : 'OK'}`,
          {method: 'UNKNOWN', params: error || object.result}, 'verbose');
    }
  }

  /**
   * @param {LH.Protocol.RawEventMessage} eventMessage
   */
  emitProtocolEvent(eventMessage) {
    if (!this._eventEmitter) {
      throw new Error('Attempted to emit event after connection disposed.');
    }

    this._eventEmitter.emit('protocolevent', eventMessage);
  }

  /**
   * @protected
   */
  dispose() {
    if (this._eventEmitter) {
      this._eventEmitter.removeAllListeners();
      this._eventEmitter = null;
    }
  }
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/legacy/gather/connections/cri.js
/**
 * @license Copyright 2016 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */









const DEFAULT_HOSTNAME = '127.0.0.1';
const CONNECT_TIMEOUT = 10000;
const DEFAULT_PORT = 9222;

class cri_CriConnection extends (/* unused pure expression or super */ null && (Connection)) {
  /**
   * @param {number=} port Optional port number. Defaults to 9222;
   * @param {string=} hostname Optional hostname. Defaults to localhost.
   * @constructor
   */
  constructor(port = DEFAULT_PORT, hostname = DEFAULT_HOSTNAME) {
    super();
    this.port = port;
    this.hostname = hostname;
    this._ws = null;
    this._pageId = null;
  }

  /**
   * @override
   * @return {Promise<void>}
   */
  async connect() {
    const response = await this._runJsonCommand('new');
    return this._connectToSocket(/** @type {LH.DevToolsJsonTarget} */(response));
  }

  /**
   * @param {LH.DevToolsJsonTarget} response
   * @return {Promise<void>}
   * @private
   */
  _connectToSocket(response) {
    const url = response.webSocketDebuggerUrl;
    this._pageId = response.id;

    return new Promise((resolve, reject) => {
      const ws = new WebSocket(url, {
        perMessageDeflate: false,
      });
      ws.on('open', () => {
        this._ws = ws;
        resolve();
      });
      ws.on('message', data => this.handleRawMessage(/** @type {string} */ (data)));
      ws.on('close', this.dispose.bind(this));
      ws.on('error', reject);
    });
  }

  /**
   * @param {string} command
   * @return {Promise<LH.DevToolsJsonTarget | Array<LH.DevToolsJsonTarget> | {message: string}>}
   * @private
   */
  _runJsonCommand(command) {
    return new Promise((resolve, reject) => {
      const request = http.request({
        method: 'PUT', // GET and POST are deprecated: https://crrev.com/c/3595822
        hostname: this.hostname,
        port: this.port,
        path: '/json/' + command,
      }, response => {
        let data = '';
        response.setEncoding('utf8');
        response.on('data', chunk => {
          data += chunk;
        });
        response.on('end', () => {
          if (response.statusCode === 200) {
            try {
              resolve(JSON.parse(data));
              return;
            } catch (e) {
              // In the case of 'close' & 'activate' Chromium returns a string rather than JSON: goo.gl/7v27xD
              if (data === 'Target is closing' || data === 'Target activated') {
                return resolve({message: data});
              }
              return reject(e);
            }
          }
          reject(new Error(`Protocol JSON API error (${command}), status: ${response.statusCode}`));
        });
      });

      request.end();

      // This error handler is critical to ensuring Lighthouse exits cleanly even when Chrome crashes.
      // See https://github.com/GoogleChrome/lighthouse/pull/8583.
      request.on('error', reject);

      request.setTimeout(CONNECT_TIMEOUT, () => {
        // Reject on error with code specifically indicating timeout in connection setup.
        const err = new LighthouseError(LighthouseError.errors.CRI_TIMEOUT);
        log.error('CriConnection', err.friendlyMessage);
        reject(err);

        request.abort();
      });
    });
  }

  /**
   * @override
   * @return {Promise<void>}
   */
  disconnect() {
    if (!this._ws) {
      log.warn('CriConnection', 'disconnect() was called without an established connection.');
      return Promise.resolve();
    }

    return this._runJsonCommand(`close/${this._pageId}`).then(_ => {
      if (this._ws) {
        this._ws.removeAllListeners();
        this._ws.close();
        this._ws = null;
      }
      this._pageId = null;
    });
  }

  /**
   * @override
   * @return {Promise<string>}
   */
  wsEndpoint() {
    return this._runJsonCommand('version').then(response => {
      return /** @type {LH.DevToolsJsonTarget} */ (response).webSocketDebuggerUrl;
    });
  }


  /**
   * @override
   * @param {string} message
   * @protected
   */
  sendRawMessage(message) {
    if (!this._ws) {
      log.error('CriConnection', 'sendRawMessage() was called without an established connection.');
      throw new Error('sendRawMessage() was called without an established connection.');
    }
    this._ws.send(message);
  }
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/config/metrics-to-audits.js
/**
 * @license Copyright 2021 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

// go/lh-audit-metric-mapping
const fcpRelevantAudits = [
  'server-response-time',
  'render-blocking-resources',
  'redirects',
  'critical-request-chains',
  'uses-text-compression',
  'uses-rel-preconnect',
  'uses-rel-preload',
  'font-display',
  'unminified-javascript',
  'unminified-css',
  'unused-css-rules',
];

const lcpRelevantAudits = [
  ...fcpRelevantAudits,
  'largest-contentful-paint-element',
  'prioritize-lcp-image',
  'unused-javascript',
  'efficient-animated-content',
  'total-byte-weight',
  'lcp-lazy-loaded',
];

const tbtRelevantAudits = [
  'long-tasks',
  'third-party-summary',
  'third-party-facades',
  'bootup-time',
  'mainthread-work-breakdown',
  'dom-size',
  'duplicated-javascript',
  'legacy-javascript',
  'viewport',
];

const clsRelevantAudits = [
  'layout-shift-elements',
  'non-composited-animations',
  'unsized-images',
  // 'preload-fonts', // actually in BP, rather than perf
];

const inpRelevantAudits = [
  'work-during-interaction',
];

const metricsToAudits = {
  fcpRelevantAudits,
  lcpRelevantAudits,
  tbtRelevantAudits,
  clsRelevantAudits,
  inpRelevantAudits,
};

;// CONCATENATED MODULE: ./node_modules/lighthouse/core/config/default-config.js
/**
 * @license Copyright 2018 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

/* eslint-disable max-len */






const default_config_UIStrings = {
  /** Title of the Performance category of audits. Equivalent to 'Web performance', this term is inclusive of all web page speed and loading optimization topics. Also used as a label of a score gauge; try to limit to 20 characters. */
  performanceCategoryTitle: 'Performance',
  /** Title of the Budgets section of the Performance Category. 'Budgets' refers to a budget (like a financial budget), but applied to the amount of resources on a page, rather than money. */
  budgetsGroupTitle: 'Budgets',
  /** Description of the Budgets section of the Performance category. Within this section the budget results are displayed. */
  budgetsGroupDescription: 'Performance budgets set standards for the performance of your site.',
  /** Title of the speed metrics section of the Performance category. Within this section are various speed metrics which quantify the pageload performance into values presented in seconds and milliseconds. */
  metricGroupTitle: 'Metrics',
  /** Title of the opportunity section of the Performance category. Within this section are audits with imperative titles that suggest actions the user can take to improve the loading performance of their web page. 'Suggestion'/'Optimization'/'Recommendation' are reasonable synonyms for 'opportunity' in this case. */
  loadOpportunitiesGroupTitle: 'Opportunities',
  /** Description of the opportunity section of the Performance category. 'Suggestions' could also be 'recommendations'. Within this section are audits with imperative titles that suggest actions the user can take to improve the loading performance of their web page. */
  loadOpportunitiesGroupDescription: 'These suggestions can help your page load faster. They don\'t [directly affect](https://developer.chrome.com/docs/lighthouse/performance/performance-scoring/) the Performance score.',
  /** Title of an opportunity sub-section of the Performance category. Within this section are audits with imperative titles that suggest actions the user can take to improve the time of the first initial render of the webpage. */
  firstPaintImprovementsGroupTitle: 'First Paint Improvements',
  /** Description of an opportunity sub-section of the Performance category. Within this section are audits with imperative titles that suggest actions the user can take to improve the time of the first initial render of the webpage. */
  firstPaintImprovementsGroupDescription: 'The most critical aspect of performance is how quickly pixels are rendered onscreen. Key metrics: First Contentful Paint, First Meaningful Paint',
  /** Title of an opportunity sub-section of the Performance category. Within this section are audits with imperative titles that suggest actions the user can take to improve the overall loading performance of their web page. */
  overallImprovementsGroupTitle: 'Overall Improvements',
  /** Description of an opportunity sub-section of the Performance category. Within this section are audits with imperative titles that suggest actions the user can take to improve the overall loading performance of their web page. */
  overallImprovementsGroupDescription: 'Enhance the overall loading experience, so the page is responsive and ready to use as soon as possible. Key metrics: Time to Interactive, Speed Index',
  /** Title of the diagnostics section of the Performance category. Within this section are audits with non-imperative titles that provide more detail on the page's page load performance characteristics. Whereas the 'Opportunities' suggest an action along with expected time savings, diagnostics do not. Within this section, the user may read the details and deduce additional actions they could take. */
  diagnosticsGroupTitle: 'Diagnostics',
  /** Description of the diagnostics section of the Performance category. Within this section are audits with non-imperative titles that provide more detail on a web page's load performance characteristics. Within this section, the user may read the details and deduce additional actions they could take to improve performance. */
  diagnosticsGroupDescription: 'More information about the performance of your application. These numbers don\'t [directly affect](https://developer.chrome.com/docs/lighthouse/performance/performance-scoring/) the Performance score.',
  /** Title of the Accessibility category of audits. This section contains audits focused on making web content accessible to all users. Also used as a label of a score gauge; try to limit to 20 characters. */
  a11yCategoryTitle: 'Accessibility',
  /** Description of the Accessibility category. This is displayed at the top of a list of audits focused on making web content accessible to all users. No character length limits. 'improve the accessibility of your web app' becomes link text to additional documentation. */
  a11yCategoryDescription: 'These checks highlight opportunities to [improve the accessibility of your web app](https://developer.chrome.com/docs/lighthouse/accessibility/). Only a subset of accessibility issues can be automatically detected so manual testing is also encouraged.',
  /** Description of the Accessibility manual checks category. This description is displayed above a list of accessibility audits that currently have no automated test and so must be verified manually by the user. No character length limits. 'conducting an accessibility review' becomes link text to additional documentation. */
  a11yCategoryManualDescription: 'These items address areas which an automated testing tool cannot cover. Learn more in our guide on [conducting an accessibility review](https://web.dev/how-to-review/).',
  /** Title of the best practices section of the Accessibility category. Within this section are audits with descriptive titles that highlight common accessibility best practices. */
  a11yBestPracticesGroupTitle: 'Best practices',
  /** Description of the best practices section within the Accessibility category. Within this section are audits with descriptive titles that highlight common accessibility best practices. */
  a11yBestPracticesGroupDescription: 'These items highlight common accessibility best practices.',
  /** Title of the color contrast section within the Accessibility category. Within this section are audits with descriptive titles that highlight the color and vision aspects of the page's accessibility that are passing or failing. */
  a11yColorContrastGroupTitle: 'Contrast',
  /** Description of the color contrast section within the Accessibility category. Within this section are audits with descriptive titles that highlight the color and vision aspects of the page's accessibility that are passing or failing. */
  a11yColorContrastGroupDescription: 'These are opportunities to improve the legibility of your content.',
  /** Title of the HTML element naming section within the Accessibility category. Within this section are audits with descriptive titles that highlight if the non-textual HTML elements on the page have names discernible by a screen reader. */
  a11yNamesLabelsGroupTitle: 'Names and labels',
  /** Description of the HTML element naming section within the Accessibility category. Within this section are audits with descriptive titles that highlight if the non-textual HTML elements on the page have names discernible by a screen reader. */
  a11yNamesLabelsGroupDescription: 'These are opportunities to improve the semantics of the controls in your application. This may enhance the experience for users of assistive technology, like a screen reader.',
  /** Title of the navigation section within the Accessibility category. Within this section are audits with descriptive titles that highlight opportunities to improve keyboard navigation. */
  a11yNavigationGroupTitle: 'Navigation',
  /** Description of the navigation section within the Accessibility category. Within this section are audits with descriptive titles that highlight opportunities to improve keyboard navigation. */
  a11yNavigationGroupDescription: 'These are opportunities to improve keyboard navigation in your application.',
  /** Title of the ARIA validity section within the Accessibility category. Within this section are audits with descriptive titles that highlight if whether all the aria-* HTML attributes have been used properly. */
  a11yAriaGroupTitle: 'ARIA',
  /** Description of the ARIA validity section within the Accessibility category. Within this section are audits with descriptive titles that highlight if whether all the aria-* HTML attributes have been used properly. */
  a11yAriaGroupDescription: 'These are opportunities to improve the usage of ARIA in your application which may enhance the experience for users of assistive technology, like a screen reader.',
  /** Title of the language section within the Accessibility category. Within this section are audits with descriptive titles that highlight if the language has been annotated in the correct HTML attributes on the page. */
  a11yLanguageGroupTitle: 'Internationalization and localization',
  /** Description of the language section within the Accessibility category. Within this section are audits with descriptive titles that highlight if the language has been annotated in the correct HTML attributes on the page. */
  a11yLanguageGroupDescription: 'These are opportunities to improve the interpretation of your content by users in different locales.',
  /** Title of the navigation section within the Accessibility category. Within this section are audits with descriptive titles that highlight opportunities to provide alternative content for audio and video. */
  a11yAudioVideoGroupTitle: 'Audio and video',
  /** Description of the navigation section within the Accessibility category. Within this section are audits with descriptive titles that highlight opportunities to provide alternative content for audio and video. */
  a11yAudioVideoGroupDescription: 'These are opportunities to provide alternative content for audio and video. This may improve the experience for users with hearing or vision impairments.',
  /** Title of the navigation section within the Accessibility category. Within this section are audits with descriptive titles that highlight opportunities to improve the experience of reading tabular or list data using assistive technology. */
  a11yTablesListsVideoGroupTitle: 'Tables and lists',
  /** Description of the navigation section within the Accessibility category. Within this section are audits with descriptive titles that highlight opportunities to improve the experience of reading tabular or list data using assistive technology. */
  a11yTablesListsVideoGroupDescription: 'These are opportunities to improve the experience of reading tabular or list data using assistive technology, like a screen reader.',
  /** Title of the Search Engine Optimization (SEO) category of audits. This is displayed at the top of a list of audits focused on topics related to optimizing a website for indexing by search engines. Also used as a label of a score gauge; try to limit to 20 characters. */
  seoCategoryTitle: 'SEO',
  /** Description of the Search Engine Optimization (SEO) category. This is displayed at the top of a list of audits focused on optimizing a website for indexing by search engines. No character length limits. The last sentence starting with 'Learn' becomes link text to additional documentation. */
  seoCategoryDescription: 'These checks ensure that your page is following basic search engine optimization advice. ' +
  'There are many additional factors Lighthouse does not score here that may affect your search ranking, ' +
  'including performance on [Core Web Vitals](https://web.dev/learn-core-web-vitals/). [Learn more about Google Search Essentials](https://support.google.com/webmasters/answer/35769).',
  /** Description of the Search Engine Optimization (SEO) manual checks category, the additional validators must be run by hand in order to check all SEO best practices. This is displayed at the top of a list of manually run audits focused on optimizing a website for indexing by search engines. No character length limits. */
  seoCategoryManualDescription: 'Run these additional validators on your site to check additional SEO best practices.',
  /** Title of the navigation section within the Search Engine Optimization (SEO) category. Within this section are audits with descriptive titles that highlight opportunities to make a page more usable on mobile devices. */
  seoMobileGroupTitle: 'Mobile Friendly',
  /** Description of the navigation section within the Search Engine Optimization (SEO) category. Within this section are audits with descriptive titles that highlight opportunities to make a page more usable on mobile devices. */
  seoMobileGroupDescription: 'Make sure your pages are mobile friendly so users don’t have to pinch or zoom ' +
  'in order to read the content pages. [Learn how to make pages mobile-friendly](https://developers.google.com/search/mobile-sites/).',
  /** Title of the navigation section within the Search Engine Optimization (SEO) category. Within this section are audits with descriptive titles that highlight ways to make a website content more easily understood by search engine crawler bots. */
  seoContentGroupTitle: 'Content Best Practices',
  /** Description of the navigation section within the Search Engine Optimization (SEO) category. Within this section are audits with descriptive titles that highlight ways to make a website content more easily understood by search engine crawler bots. */
  seoContentGroupDescription: 'Format your HTML in a way that enables crawlers to better understand your app’s content.',
  /** Title of the navigation section within the Search Engine Optimization (SEO) category. Within this section are audits with descriptive titles that highlight ways to make a website accessible to search engine crawlers. */
  seoCrawlingGroupTitle: 'Crawling and Indexing',
  /** Description of the navigation section within the Search Engine Optimization (SEO) category. Within this section are audits with descriptive titles that highlight ways to make a website accessible to search engine crawlers. */
  seoCrawlingGroupDescription: 'To appear in search results, crawlers need access to your app.',
  /** Title of the Progressive Web Application (PWA) category of audits. This is displayed at the top of a list of audits focused on topics related to whether or not a site is a progressive web app, e.g. responds offline, uses a service worker, is on https, etc. Also used as a label of a score gauge. */
  pwaCategoryTitle: 'PWA',
  /** Description of the Progressive Web Application (PWA) category. This is displayed at the top of a list of audits focused on topics related to whether or not a site is a progressive web app, e.g. responds offline, uses a service worker, is on https, etc. No character length limits. The last sentence starting with 'Learn' becomes link text to additional documentation. */
  pwaCategoryDescription: 'These checks validate the aspects of a Progressive Web App. ' +
  '[Learn what makes a good Progressive Web App](https://web.dev/pwa-checklist/).',
  /** Description of the Progressive Web Application (PWA) manual checks category, containing a list of additional validators must be run by hand in order to check all PWA best practices. This is displayed at the top of a list of manually run audits focused on topics related to whether or not a site is a progressive web app, e.g. responds offline, uses a service worker, is on https, etc.. No character length limits. */
  pwaCategoryManualDescription: 'These checks are required by the baseline ' +
  '[PWA Checklist](https://web.dev/pwa-checklist/) but are ' +
  'not automatically checked by Lighthouse. They do not affect your score but it\'s important that you verify them manually.',
  /** Title of the Best Practices category of audits. This is displayed at the top of a list of audits focused on topics related to following web development best practices and accepted guidelines. Also used as a label of a score gauge; try to limit to 20 characters. */
  bestPracticesCategoryTitle: 'Best Practices',
  /** Title of the Trust & Safety group of audits. This is displayed at the top of a list of audits focused on maintaining user trust and protecting security in web development. */
  bestPracticesTrustSafetyGroupTitle: 'Trust and Safety',
  /** Title of the User Experience group of the Best Practices category. Within this section are the audits related to the end user's experience of the webpage. */
  bestPracticesUXGroupTitle: 'User Experience',
  /** Title of the Browser Compatibility group of the Best Practices category. Within this section are the audits related to whether the page is interpreted consistently by browsers. */
  bestPracticesBrowserCompatGroupTitle: 'Browser Compatibility',
  /** Title of the General group of the Best Practices category. Within this section are the audits that don't belong to a specific group but are of general interest. */
  bestPracticesGeneralGroupTitle: 'General',
  /** Title of the Installable section of the web app category. Within this section are audits that check if Chrome supports installing the web site as an app on their device. */
  pwaInstallableGroupTitle: 'Installable',
  /** Title of the "PWA Optimized" section of the web app category. Within this section are audits that check if the developer has taken advantage of features to make their web page more enjoyable and engaging for the user. */
  pwaOptimizedGroupTitle: 'PWA Optimized',
};

const default_config_str_ = createIcuMessageFn(import.meta.url, default_config_UIStrings);

/** @type {LH.Config} */
const defaultConfig = {
  settings: defaultSettings,
  artifacts: [
    // Artifacts which can be depended on come first.
    {id: 'DevtoolsLog', gatherer: 'devtools-log'},
    {id: 'Trace', gatherer: 'trace'},

    {id: 'Accessibility', gatherer: 'accessibility'},
    {id: 'AnchorElements', gatherer: 'anchor-elements'},
    {id: 'CacheContents', gatherer: 'cache-contents'},
    {id: 'ConsoleMessages', gatherer: 'console-messages'},
    {id: 'CSSUsage', gatherer: 'css-usage'},
    {id: 'Doctype', gatherer: 'dobetterweb/doctype'},
    {id: 'DOMStats', gatherer: 'dobetterweb/domstats'},
    {id: 'EmbeddedContent', gatherer: 'seo/embedded-content'},
    {id: 'FontSize', gatherer: 'seo/font-size'},
    {id: 'Inputs', gatherer: 'inputs'},
    {id: 'GlobalListeners', gatherer: 'global-listeners'},
    {id: 'IFrameElements', gatherer: 'iframe-elements'},
    {id: 'ImageElements', gatherer: 'image-elements'},
    {id: 'InstallabilityErrors', gatherer: 'installability-errors'},
    {id: 'InspectorIssues', gatherer: 'inspector-issues'},
    {id: 'JsUsage', gatherer: 'js-usage'},
    {id: 'LinkElements', gatherer: 'link-elements'},
    {id: 'MainDocumentContent', gatherer: 'main-document-content'},
    {id: 'MetaElements', gatherer: 'meta-elements'},
    {id: 'NetworkUserAgent', gatherer: 'network-user-agent'},
    {id: 'OptimizedImages', gatherer: 'dobetterweb/optimized-images'},
    {id: 'ResponseCompression', gatherer: 'dobetterweb/response-compression'},
    {id: 'RobotsTxt', gatherer: 'seo/robots-txt'},
    {id: 'ServiceWorker', gatherer: 'service-worker'},
    {id: 'ScriptElements', gatherer: 'script-elements'},
    {id: 'Scripts', gatherer: 'scripts'},
    {id: 'SourceMaps', gatherer: 'source-maps'},
    {id: 'Stacks', gatherer: 'stacks'},
    {id: 'TagsBlockingFirstPaint', gatherer: 'dobetterweb/tags-blocking-first-paint'},
    {id: 'TapTargets', gatherer: 'seo/tap-targets'},
    {id: 'TraceElements', gatherer: 'trace-elements'},
    {id: 'ViewportDimensions', gatherer: 'viewport-dimensions'},
    {id: 'WebAppManifest', gatherer: 'web-app-manifest'},

    // Artifact copies are renamed for compatibility with legacy artifacts.
    {id: 'devtoolsLogs', gatherer: 'devtools-log-compat'},
    {id: 'traces', gatherer: 'trace-compat'},

    // FullPageScreenshot comes at the end so all other node analysis is captured.
    {id: 'FullPageScreenshot', gatherer: 'full-page-screenshot'},

    // BFCacheFailures comes at the very end because it can perform a page navigation.
    {id: 'BFCacheFailures', gatherer: 'bf-cache-failures'},
  ],
  audits: [
    'is-on-https',
    'service-worker',
    'viewport',
    'metrics/first-contentful-paint',
    'metrics/largest-contentful-paint',
    'metrics/first-meaningful-paint',
    'metrics/speed-index',
    'screenshot-thumbnails',
    'final-screenshot',
    'metrics/total-blocking-time',
    'metrics/max-potential-fid',
    'metrics/cumulative-layout-shift',
    'metrics/experimental-interaction-to-next-paint',
    'errors-in-console',
    'server-response-time',
    'metrics/interactive',
    'user-timings',
    'critical-request-chains',
    'redirects',
    'installable-manifest',
    'splash-screen',
    'themed-omnibox',
    'maskable-icon',
    'content-width',
    'image-aspect-ratio',
    'image-size-responsive',
    'preload-fonts',
    'deprecations',
    'mainthread-work-breakdown',
    'bootup-time',
    'uses-rel-preload',
    'uses-rel-preconnect',
    'font-display',
    'diagnostics',
    'network-requests',
    'network-rtt',
    'network-server-latency',
    'main-thread-tasks',
    'metrics',
    'performance-budget',
    'timing-budget',
    'resource-summary',
    'third-party-summary',
    'third-party-facades',
    'largest-contentful-paint-element',
    'lcp-lazy-loaded',
    'layout-shift-elements',
    'long-tasks',
    'no-unload-listeners',
    'non-composited-animations',
    'unsized-images',
    'valid-source-maps',
    'prioritize-lcp-image',
    'csp-xss',
    'script-treemap-data',
    'manual/pwa-cross-browser',
    'manual/pwa-page-transitions',
    'manual/pwa-each-page-has-url',
    'accessibility/accesskeys',
    'accessibility/aria-allowed-attr',
    'accessibility/aria-command-name',
    'accessibility/aria-hidden-body',
    'accessibility/aria-hidden-focus',
    'accessibility/aria-input-field-name',
    'accessibility/aria-meter-name',
    'accessibility/aria-progressbar-name',
    'accessibility/aria-required-attr',
    'accessibility/aria-required-children',
    'accessibility/aria-required-parent',
    'accessibility/aria-roles',
    'accessibility/aria-toggle-field-name',
    'accessibility/aria-tooltip-name',
    'accessibility/aria-treeitem-name',
    'accessibility/aria-valid-attr-value',
    'accessibility/aria-valid-attr',
    'accessibility/button-name',
    'accessibility/bypass',
    'accessibility/color-contrast',
    'accessibility/definition-list',
    'accessibility/dlitem',
    'accessibility/document-title',
    'accessibility/duplicate-id-active',
    'accessibility/duplicate-id-aria',
    'accessibility/form-field-multiple-labels',
    'accessibility/frame-title',
    'accessibility/heading-order',
    'accessibility/html-has-lang',
    'accessibility/html-lang-valid',
    'accessibility/image-alt',
    'accessibility/input-image-alt',
    'accessibility/label',
    'accessibility/link-name',
    'accessibility/list',
    'accessibility/listitem',
    'accessibility/meta-refresh',
    'accessibility/meta-viewport',
    'accessibility/object-alt',
    'accessibility/tabindex',
    'accessibility/td-headers-attr',
    'accessibility/th-has-data-cells',
    'accessibility/valid-lang',
    'accessibility/video-caption',
    'accessibility/manual/custom-controls-labels',
    'accessibility/manual/custom-controls-roles',
    'accessibility/manual/focus-traps',
    'accessibility/manual/focusable-controls',
    'accessibility/manual/interactive-element-affordance',
    'accessibility/manual/logical-tab-order',
    'accessibility/manual/managed-focus',
    'accessibility/manual/offscreen-content-hidden',
    'accessibility/manual/use-landmarks',
    'accessibility/manual/visual-order-follows-dom',
    'byte-efficiency/uses-long-cache-ttl',
    'byte-efficiency/total-byte-weight',
    'byte-efficiency/offscreen-images',
    'byte-efficiency/render-blocking-resources',
    'byte-efficiency/unminified-css',
    'byte-efficiency/unminified-javascript',
    'byte-efficiency/unused-css-rules',
    'byte-efficiency/unused-javascript',
    'byte-efficiency/modern-image-formats',
    'byte-efficiency/uses-optimized-images',
    'byte-efficiency/uses-text-compression',
    'byte-efficiency/uses-responsive-images',
    'byte-efficiency/efficient-animated-content',
    'byte-efficiency/duplicated-javascript',
    'byte-efficiency/legacy-javascript',
    'byte-efficiency/uses-responsive-images-snapshot',
    'dobetterweb/doctype',
    'dobetterweb/charset',
    'dobetterweb/dom-size',
    'dobetterweb/geolocation-on-start',
    'dobetterweb/inspector-issues',
    'dobetterweb/no-document-write',
    'dobetterweb/js-libraries',
    'dobetterweb/notification-on-start',
    'dobetterweb/paste-preventing-inputs',
    'dobetterweb/uses-http2',
    'dobetterweb/uses-passive-event-listeners',
    'seo/meta-description',
    'seo/http-status-code',
    'seo/font-size',
    'seo/link-text',
    'seo/crawlable-anchors',
    'seo/is-crawlable',
    'seo/robots-txt',
    'seo/tap-targets',
    'seo/hreflang',
    'seo/plugins',
    'seo/canonical',
    'seo/manual/structured-data',
    'work-during-interaction',
    'bf-cache',
  ],
  groups: {
    'metrics': {
      title: default_config_str_(default_config_UIStrings.metricGroupTitle),
    },
    'load-opportunities': {
      title: default_config_str_(default_config_UIStrings.loadOpportunitiesGroupTitle),
      description: default_config_str_(default_config_UIStrings.loadOpportunitiesGroupDescription),
    },
    'budgets': {
      title: default_config_str_(default_config_UIStrings.budgetsGroupTitle),
      description: default_config_str_(default_config_UIStrings.budgetsGroupDescription),
    },
    'diagnostics': {
      title: default_config_str_(default_config_UIStrings.diagnosticsGroupTitle),
      description: default_config_str_(default_config_UIStrings.diagnosticsGroupDescription),
    },
    'pwa-installable': {
      title: default_config_str_(default_config_UIStrings.pwaInstallableGroupTitle),
    },
    'pwa-optimized': {
      title: default_config_str_(default_config_UIStrings.pwaOptimizedGroupTitle),
    },
    'a11y-best-practices': {
      title: default_config_str_(default_config_UIStrings.a11yBestPracticesGroupTitle),
      description: default_config_str_(default_config_UIStrings.a11yBestPracticesGroupDescription),
    },
    'a11y-color-contrast': {
      title: default_config_str_(default_config_UIStrings.a11yColorContrastGroupTitle),
      description: default_config_str_(default_config_UIStrings.a11yColorContrastGroupDescription),
    },
    'a11y-names-labels': {
      title: default_config_str_(default_config_UIStrings.a11yNamesLabelsGroupTitle),
      description: default_config_str_(default_config_UIStrings.a11yNamesLabelsGroupDescription),
    },
    'a11y-navigation': {
      title: default_config_str_(default_config_UIStrings.a11yNavigationGroupTitle),
      description: default_config_str_(default_config_UIStrings.a11yNavigationGroupDescription),
    },
    'a11y-aria': {
      title: default_config_str_(default_config_UIStrings.a11yAriaGroupTitle),
      description: default_config_str_(default_config_UIStrings.a11yAriaGroupDescription),
    },
    'a11y-language': {
      title: default_config_str_(default_config_UIStrings.a11yLanguageGroupTitle),
      description: default_config_str_(default_config_UIStrings.a11yLanguageGroupDescription),
    },
    'a11y-audio-video': {
      title: default_config_str_(default_config_UIStrings.a11yAudioVideoGroupTitle),
      description: default_config_str_(default_config_UIStrings.a11yAudioVideoGroupDescription),
    },
    'a11y-tables-lists': {
      title: default_config_str_(default_config_UIStrings.a11yTablesListsVideoGroupTitle),
      description: default_config_str_(default_config_UIStrings.a11yTablesListsVideoGroupDescription),
    },
    'seo-mobile': {
      title: default_config_str_(default_config_UIStrings.seoMobileGroupTitle),
      description: default_config_str_(default_config_UIStrings.seoMobileGroupDescription),
    },
    'seo-content': {
      title: default_config_str_(default_config_UIStrings.seoContentGroupTitle),
      description: default_config_str_(default_config_UIStrings.seoContentGroupDescription),
    },
    'seo-crawl': {
      title: default_config_str_(default_config_UIStrings.seoCrawlingGroupTitle),
      description: default_config_str_(default_config_UIStrings.seoCrawlingGroupDescription),
    },
    'best-practices-trust-safety': {
      title: default_config_str_(default_config_UIStrings.bestPracticesTrustSafetyGroupTitle),
    },
    'best-practices-ux': {
      title: default_config_str_(default_config_UIStrings.bestPracticesUXGroupTitle),
    },
    'best-practices-browser-compat': {
      title: default_config_str_(default_config_UIStrings.bestPracticesBrowserCompatGroupTitle),
    },
    'best-practices-general': {
      title: default_config_str_(default_config_UIStrings.bestPracticesGeneralGroupTitle),
    },
    // Group for audits that should not be displayed.
    'hidden': {title: ''},
  },
  categories: {
    'performance': {
      title: default_config_str_(default_config_UIStrings.performanceCategoryTitle),
      supportedModes: ['navigation', 'timespan', 'snapshot'],
      auditRefs: [
        {id: 'first-contentful-paint', weight: 10, group: 'metrics', acronym: 'FCP', relevantAudits: metricsToAudits.fcpRelevantAudits},
        {id: 'largest-contentful-paint', weight: 25, group: 'metrics', acronym: 'LCP', relevantAudits: metricsToAudits.lcpRelevantAudits},
        {id: 'total-blocking-time', weight: 30, group: 'metrics', acronym: 'TBT', relevantAudits: metricsToAudits.tbtRelevantAudits},
        {id: 'cumulative-layout-shift', weight: 25, group: 'metrics', acronym: 'CLS', relevantAudits: metricsToAudits.clsRelevantAudits},
        {id: 'speed-index', weight: 10, group: 'metrics', acronym: 'SI'},
        {id: 'experimental-interaction-to-next-paint', weight: 0, group: 'metrics', acronym: 'INP', relevantAudits: metricsToAudits.inpRelevantAudits},

        // These are our "invisible" metrics. Not displayed, but still in the LHR.
        {id: 'interactive', weight: 0, group: 'hidden', acronym: 'TTI'},
        {id: 'max-potential-fid', weight: 0, group: 'hidden'},
        {id: 'first-meaningful-paint', weight: 0, acronym: 'FMP', group: 'hidden'},

        // These audits will be put in "load-opportunities" or "diagnostics" based on their details type.
        {id: 'render-blocking-resources', weight: 0},
        {id: 'uses-responsive-images', weight: 0},
        {id: 'offscreen-images', weight: 0},
        {id: 'unminified-css', weight: 0},
        {id: 'unminified-javascript', weight: 0},
        {id: 'unused-css-rules', weight: 0},
        {id: 'unused-javascript', weight: 0},
        {id: 'uses-optimized-images', weight: 0},
        {id: 'modern-image-formats', weight: 0},
        {id: 'uses-text-compression', weight: 0},
        {id: 'uses-rel-preconnect', weight: 0},
        {id: 'server-response-time', weight: 0},
        {id: 'redirects', weight: 0},
        {id: 'uses-rel-preload', weight: 0},
        {id: 'uses-http2', weight: 0},
        {id: 'efficient-animated-content', weight: 0},
        {id: 'duplicated-javascript', weight: 0},
        {id: 'legacy-javascript', weight: 0},
        {id: 'prioritize-lcp-image', weight: 0},
        {id: 'total-byte-weight', weight: 0},
        {id: 'uses-long-cache-ttl', weight: 0},
        {id: 'dom-size', weight: 0},
        {id: 'critical-request-chains', weight: 0},
        {id: 'user-timings', weight: 0},
        {id: 'bootup-time', weight: 0},
        {id: 'mainthread-work-breakdown', weight: 0},
        {id: 'font-display', weight: 0},
        {id: 'resource-summary', weight: 0},
        {id: 'third-party-summary', weight: 0},
        {id: 'third-party-facades', weight: 0},
        {id: 'largest-contentful-paint-element', weight: 0},
        {id: 'lcp-lazy-loaded', weight: 0},
        {id: 'layout-shift-elements', weight: 0},
        {id: 'uses-passive-event-listeners', weight: 0},
        {id: 'no-document-write', weight: 0},
        {id: 'long-tasks', weight: 0},
        {id: 'non-composited-animations', weight: 0},
        {id: 'unsized-images', weight: 0},
        {id: 'viewport', weight: 0},
        {id: 'uses-responsive-images-snapshot', weight: 0},
        {id: 'work-during-interaction', weight: 0},
        {id: 'bf-cache', weight: 0},

        // Budget audits.
        {id: 'performance-budget', weight: 0, group: 'budgets'},
        {id: 'timing-budget', weight: 0, group: 'budgets'},

        // Audits past this point contain useful data but are not displayed with other audits.
        {id: 'network-requests', weight: 0, group: 'hidden'},
        {id: 'network-rtt', weight: 0, group: 'hidden'},
        {id: 'network-server-latency', weight: 0, group: 'hidden'},
        {id: 'main-thread-tasks', weight: 0, group: 'hidden'},
        {id: 'diagnostics', weight: 0, group: 'hidden'},
        {id: 'metrics', weight: 0, group: 'hidden'},
        {id: 'screenshot-thumbnails', weight: 0, group: 'hidden'},
        {id: 'final-screenshot', weight: 0, group: 'hidden'},
        {id: 'script-treemap-data', weight: 0, group: 'hidden'},
      ],
    },
    'accessibility': {
      title: default_config_str_(default_config_UIStrings.a11yCategoryTitle),
      description: default_config_str_(default_config_UIStrings.a11yCategoryDescription),
      manualDescription: default_config_str_(default_config_UIStrings.a11yCategoryManualDescription),
      supportedModes: ['navigation', 'snapshot'],
      // Audit weights are meant to match the aXe scoring system of
      // minor, moderate, serious, and critical.
      // See the audits listed at dequeuniversity.com/rules/axe/4.1.
      // Click on an audit and check the right hand column to see its severity.
      auditRefs: [
        {id: 'accesskeys', weight: 3, group: 'a11y-navigation'},
        {id: 'aria-allowed-attr', weight: 10, group: 'a11y-aria'},
        {id: 'aria-command-name', weight: 3, group: 'a11y-aria'},
        {id: 'aria-hidden-body', weight: 10, group: 'a11y-aria'},
        {id: 'aria-hidden-focus', weight: 3, group: 'a11y-aria'},
        {id: 'aria-input-field-name', weight: 3, group: 'a11y-aria'},
        {id: 'aria-meter-name', weight: 3, group: 'a11y-aria'},
        {id: 'aria-progressbar-name', weight: 3, group: 'a11y-aria'},
        {id: 'aria-required-attr', weight: 10, group: 'a11y-aria'},
        {id: 'aria-required-children', weight: 10, group: 'a11y-aria'},
        {id: 'aria-required-parent', weight: 10, group: 'a11y-aria'},
        {id: 'aria-roles', weight: 10, group: 'a11y-aria'},
        {id: 'aria-toggle-field-name', weight: 3, group: 'a11y-aria'},
        {id: 'aria-tooltip-name', weight: 3, group: 'a11y-aria'},
        {id: 'aria-treeitem-name', weight: 3, group: 'a11y-aria'},
        {id: 'aria-valid-attr-value', weight: 10, group: 'a11y-aria'},
        {id: 'aria-valid-attr', weight: 10, group: 'a11y-aria'},
        {id: 'button-name', weight: 10, group: 'a11y-names-labels'},
        {id: 'bypass', weight: 3, group: 'a11y-navigation'},
        {id: 'color-contrast', weight: 3, group: 'a11y-color-contrast'},
        {id: 'definition-list', weight: 3, group: 'a11y-tables-lists'},
        {id: 'dlitem', weight: 3, group: 'a11y-tables-lists'},
        {id: 'document-title', weight: 3, group: 'a11y-names-labels'},
        {id: 'duplicate-id-active', weight: 3, group: 'a11y-navigation'},
        {id: 'duplicate-id-aria', weight: 10, group: 'a11y-aria'},
        {id: 'form-field-multiple-labels', weight: 2, group: 'a11y-names-labels'},
        {id: 'frame-title', weight: 3, group: 'a11y-names-labels'},
        {id: 'heading-order', weight: 2, group: 'a11y-navigation'},
        {id: 'html-has-lang', weight: 3, group: 'a11y-language'},
        {id: 'html-lang-valid', weight: 3, group: 'a11y-language'},
        {id: 'image-alt', weight: 10, group: 'a11y-names-labels'},
        {id: 'input-image-alt', weight: 10, group: 'a11y-names-labels'},
        {id: 'label', weight: 10, group: 'a11y-names-labels'},
        {id: 'link-name', weight: 3, group: 'a11y-names-labels'},
        {id: 'list', weight: 3, group: 'a11y-tables-lists'},
        {id: 'listitem', weight: 3, group: 'a11y-tables-lists'},
        {id: 'meta-refresh', weight: 10, group: 'a11y-best-practices'},
        {id: 'meta-viewport', weight: 10, group: 'a11y-best-practices'},
        {id: 'object-alt', weight: 3, group: 'a11y-names-labels'},
        {id: 'tabindex', weight: 3, group: 'a11y-navigation'},
        {id: 'td-headers-attr', weight: 3, group: 'a11y-tables-lists'},
        {id: 'th-has-data-cells', weight: 3, group: 'a11y-tables-lists'},
        {id: 'valid-lang', weight: 3, group: 'a11y-language'},
        {id: 'video-caption', weight: 10, group: 'a11y-audio-video'},
        // Manual audits
        {id: 'logical-tab-order', weight: 0},
        {id: 'focusable-controls', weight: 0},
        {id: 'interactive-element-affordance', weight: 0},
        {id: 'managed-focus', weight: 0},
        {id: 'focus-traps', weight: 0},
        {id: 'custom-controls-labels', weight: 0},
        {id: 'custom-controls-roles', weight: 0},
        {id: 'visual-order-follows-dom', weight: 0},
        {id: 'offscreen-content-hidden', weight: 0},
        {id: 'use-landmarks', weight: 0},
      ],
    },
    'best-practices': {
      title: default_config_str_(default_config_UIStrings.bestPracticesCategoryTitle),
      supportedModes: ['navigation', 'timespan', 'snapshot'],
      auditRefs: [
        // Trust & Safety
        {id: 'is-on-https', weight: 1, group: 'best-practices-trust-safety'},
        {id: 'geolocation-on-start', weight: 1, group: 'best-practices-trust-safety'},
        {id: 'notification-on-start', weight: 1, group: 'best-practices-trust-safety'},
        {id: 'csp-xss', weight: 0, group: 'best-practices-trust-safety'},
        // User Experience
        {id: 'paste-preventing-inputs', weight: 1, group: 'best-practices-ux'},
        {id: 'image-aspect-ratio', weight: 1, group: 'best-practices-ux'},
        {id: 'image-size-responsive', weight: 1, group: 'best-practices-ux'},
        {id: 'preload-fonts', weight: 1, group: 'best-practices-ux'},
        // Browser Compatibility
        {id: 'doctype', weight: 1, group: 'best-practices-browser-compat'},
        {id: 'charset', weight: 1, group: 'best-practices-browser-compat'},
        // General Group
        {id: 'no-unload-listeners', weight: 1, group: 'best-practices-general'},
        {id: 'js-libraries', weight: 0, group: 'best-practices-general'},
        {id: 'deprecations', weight: 1, group: 'best-practices-general'},
        {id: 'errors-in-console', weight: 1, group: 'best-practices-general'},
        {id: 'valid-source-maps', weight: 0, group: 'best-practices-general'},
        {id: 'inspector-issues', weight: 1, group: 'best-practices-general'},
      ],
    },
    'seo': {
      title: default_config_str_(default_config_UIStrings.seoCategoryTitle),
      description: default_config_str_(default_config_UIStrings.seoCategoryDescription),
      manualDescription: default_config_str_(default_config_UIStrings.seoCategoryManualDescription),
      supportedModes: ['navigation', 'snapshot'],
      auditRefs: [
        {id: 'viewport', weight: 1, group: 'seo-mobile'},
        {id: 'document-title', weight: 1, group: 'seo-content'},
        {id: 'meta-description', weight: 1, group: 'seo-content'},
        {id: 'http-status-code', weight: 1, group: 'seo-crawl'},
        {id: 'link-text', weight: 1, group: 'seo-content'},
        {id: 'crawlable-anchors', weight: 1, group: 'seo-crawl'},
        {id: 'is-crawlable', weight: 1, group: 'seo-crawl'},
        {id: 'robots-txt', weight: 1, group: 'seo-crawl'},
        {id: 'image-alt', weight: 1, group: 'seo-content'},
        {id: 'hreflang', weight: 1, group: 'seo-content'},
        {id: 'canonical', weight: 1, group: 'seo-content'},
        {id: 'font-size', weight: 1, group: 'seo-mobile'},
        {id: 'plugins', weight: 1, group: 'seo-content'},
        {id: 'tap-targets', weight: 1, group: 'seo-mobile'},
        // Manual audits
        {id: 'structured-data', weight: 0},
      ],
    },
    'pwa': {
      title: default_config_str_(default_config_UIStrings.pwaCategoryTitle),
      description: default_config_str_(default_config_UIStrings.pwaCategoryDescription),
      manualDescription: default_config_str_(default_config_UIStrings.pwaCategoryManualDescription),
      supportedModes: ['navigation'],
      auditRefs: [
        // Installable
        {id: 'installable-manifest', weight: 2, group: 'pwa-installable'},
        // PWA Optimized
        {id: 'service-worker', weight: 1, group: 'pwa-optimized'},
        {id: 'splash-screen', weight: 1, group: 'pwa-optimized'},
        {id: 'themed-omnibox', weight: 1, group: 'pwa-optimized'},
        {id: 'content-width', weight: 1, group: 'pwa-optimized'},
        {id: 'viewport', weight: 2, group: 'pwa-optimized'},
        {id: 'maskable-icon', weight: 1, group: 'pwa-optimized'},
        // Manual audits
        {id: 'pwa-cross-browser', weight: 0},
        {id: 'pwa-page-transitions', weight: 0},
        {id: 'pwa-each-page-has-url', weight: 0},
      ],
    },
  },
};

// Use `defineProperty` so that the strings are accesible from original but ignored when we copy it
Object.defineProperty(defaultConfig, 'UIStrings', {
  enumerable: false,
  get: () => default_config_UIStrings,
});

/* harmony default export */ const default_config = (defaultConfig);

;// CONCATENATED MODULE: ./node_modules/lighthouse/core/legacy/config/legacy-default-config.js
/**
 * @license Copyright 2018 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

/**
 * @fileoverview Construct the legacy default config from the standard default config.
 */



/** @type {LH.Config} */
const legacy_default_config_legacyDefaultConfig = JSON.parse(JSON.stringify(default_config));
if (!legacy_default_config_legacyDefaultConfig.categories) {
  throw new Error('Default config should always have categories');
}

// These properties are ignored in Legacy navigations.
delete legacy_default_config_legacyDefaultConfig.artifacts;

// These audits don't work in Legacy navigation mode so we remove them.
const unsupportedAuditIds = [
  'experimental-interaction-to-next-paint',
  'uses-responsive-images-snapshot',
  'work-during-interaction',
];

legacy_default_config_legacyDefaultConfig.audits = legacy_default_config_legacyDefaultConfig.audits?.filter(audit =>
  !unsupportedAuditIds.find(auditId => audit.toString().endsWith(auditId)));

legacy_default_config_legacyDefaultConfig.categories['performance'].auditRefs =
  legacy_default_config_legacyDefaultConfig.categories['performance'].auditRefs.filter(auditRef =>
    !unsupportedAuditIds.includes(auditRef.id));

legacy_default_config_legacyDefaultConfig.passes = [{
  passName: 'defaultPass',
  recordTrace: true,
  useThrottling: true,
  pauseAfterFcpMs: 1000,
  pauseAfterLoadMs: 1000,
  networkQuietThresholdMs: 1000,
  cpuQuietThresholdMs: 1000,
  gatherers: [
    'css-usage',
    'js-usage',
    'viewport-dimensions',
    'console-messages',
    'anchor-elements',
    'image-elements',
    'link-elements',
    'meta-elements',
    'script-elements',
    'scripts',
    'iframe-elements',
    'inputs',
    'main-document-content',
    'global-listeners',
    'dobetterweb/doctype',
    'dobetterweb/domstats',
    'dobetterweb/optimized-images',
    'dobetterweb/response-compression',
    'dobetterweb/tags-blocking-first-paint',
    'seo/font-size',
    'seo/embedded-content',
    'seo/robots-txt',
    'seo/tap-targets',
    'accessibility',
    'trace-elements',
    'inspector-issues',
    'source-maps',
    'web-app-manifest',
    'installability-errors',
    'stacks',
    'full-page-screenshot',
    'bf-cache-failures',
  ],
},
{
  passName: 'offlinePass',
  loadFailureMode: 'ignore',
  gatherers: [
    'service-worker',
  ],
}];

/* harmony default export */ const legacy_default_config = ((/* unused pure expression or super */ null && (legacy_default_config_legacyDefaultConfig)));

;// CONCATENATED MODULE: ./node_modules/lighthouse/core/config/validation.js
/**
 * @license Copyright 2021 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */





/**
 * @param {LH.Config.GathererDefn | LH.Config.AnyFRGathererDefn} gathererDefn
 * @return {gathererDefn is LH.Config.AnyFRGathererDefn}
 */
function isFRGathererDefn(gathererDefn) {
  return 'meta' in gathererDefn.instance;
}

/**
 * Determines if the artifact dependency direction is valid. The dependency's minimum supported mode
 * must be less than or equal to the dependent's.
 *
 * @param {LH.Config.AnyFRGathererDefn} dependent The artifact that depends on the other.
 * @param {LH.Config.AnyFRGathererDefn} dependency The artifact that is being depended on by the other.
 * @return {boolean}
 */
function isValidArtifactDependency(dependent, dependency) {
  const levels = {timespan: 0, snapshot: 1, navigation: 2};
  const dependentLevel = Math.min(...dependent.instance.meta.supportedModes.map(l => levels[l]));
  const dependencyLevel = Math.min(...dependency.instance.meta.supportedModes.map(l => levels[l]));

  // A timespan artifact cannot depend on a snapshot/navigation artifact because it might run without a snapshot.
  if (dependentLevel === levels.timespan) return dependencyLevel === levels.timespan;
  // A snapshot artifact cannot depend on a timespan/navigation artifact because it might run without a timespan.
  if (dependentLevel === levels.snapshot) return dependencyLevel === levels.snapshot;
  // A navigation artifact can depend on anything.
  return true;
}

/**
 * Throws if pluginName is invalid or (somehow) collides with a category in the
 * config being added to.
 * @param {LH.Config} config
 * @param {string} pluginName
 */
function assertValidPluginName(config, pluginName) {
  if (!pluginName.startsWith('lighthouse-plugin-')) {
    throw new Error(`plugin name '${pluginName}' does not start with 'lighthouse-plugin-'`);
  }

  if (config.categories?.[pluginName]) {
    throw new Error(`plugin name '${pluginName}' not allowed because it is the id of a category already found in config`); // eslint-disable-line max-len
  }
}

/**
 * Throws an error if the provided object does not implement the required Fraggle Rock gatherer interface.
 * @param {LH.Config.AnyFRGathererDefn} gathererDefn
 */
function assertValidFRGatherer(gathererDefn) {
  const gatherer = gathererDefn.instance;
  const gathererName = gatherer.name;

  if (typeof gatherer.meta !== 'object') {
    throw new Error(`${gathererName} gatherer did not provide a meta object.`);
  }

  if (gatherer.meta.supportedModes.length === 0) {
    throw new Error(`${gathererName} gatherer did not support any gather modes.`);
  }

  if (
    typeof gatherer.getArtifact !== 'function' ||
    gatherer.getArtifact === base_gatherer.prototype.getArtifact
  ) {
    throw new Error(`${gathererName} gatherer did not define a "getArtifact" method.`);
  }
}

/**
 * Throws an error if the provided object does not implement the required navigations interface.
 * @param {LH.Config.ResolvedConfig['navigations']} navigationsDefn
 * @return {{warnings: string[]}}
 */
function assertValidFRNavigations(navigationsDefn) {
  if (!navigationsDefn || !navigationsDefn.length) return {warnings: []};

  /** @type {string[]} */
  const warnings = [];

  // Assert that the first navigation has loadFailureMode fatal.
  const firstNavigation = navigationsDefn[0];
  if (firstNavigation.loadFailureMode !== 'fatal') {
    const currentMode = firstNavigation.loadFailureMode;
    const warning = [
      `"${firstNavigation.id}" is the first navigation but had a failure mode of ${currentMode}.`,
      `The first navigation will always be treated as loadFailureMode=fatal.`,
    ].join(' ');

    warnings.push(warning);
    firstNavigation.loadFailureMode = 'fatal';
  }

  // Assert that navigations have unique IDs.
  const navigationIds = navigationsDefn.map(navigation => navigation.id);
  const duplicateId = navigationIds.find(
    (id, i) => navigationIds.slice(i + 1).some(other => id === other)
  );

  if (duplicateId) {
    throw new Error(`Navigation must have unique identifiers, but "${duplicateId}" was repeated.`);
  }

  return {warnings};
}

/**
 * Throws an error if the provided object does not implement the required properties of an audit
 * definition.
 * @param {LH.Config.AuditDefn} auditDefinition
 */
function assertValidAudit(auditDefinition) {
  const {implementation, path: auditPath} = auditDefinition;
  const auditName = auditPath ||
    implementation?.meta?.id ||
    'Unknown audit';

  if (typeof implementation.audit !== 'function' || implementation.audit === Audit.audit) {
    throw new Error(`${auditName} has no audit() method.`);
  }

  if (typeof implementation.meta.id !== 'string') {
    throw new Error(`${auditName} has no meta.id property, or the property is not a string.`);
  }

  if (!isStringOrIcuMessage(implementation.meta.title)) {
    throw new Error(`${auditName} has no meta.title property, or the property is not a string.`);
  }

  // If it'll have a ✔ or ✖ displayed alongside the result, it should have failureTitle
  const scoreDisplayMode = implementation.meta.scoreDisplayMode || Audit.SCORING_MODES.BINARY;
  if (
    !isStringOrIcuMessage(implementation.meta.failureTitle) &&
    scoreDisplayMode === Audit.SCORING_MODES.BINARY
  ) {
    throw new Error(`${auditName} has no meta.failureTitle and should.`);
  }

  if (!isStringOrIcuMessage(implementation.meta.description)) {
    throw new Error(
      `${auditName} has no meta.description property, or the property is not a string.`
    );
  } else if (implementation.meta.description === '') {
    throw new Error(
      `${auditName} has an empty meta.description string. Please add a description for the UI.`
    );
  }

  if (!Array.isArray(implementation.meta.requiredArtifacts)) {
    throw new Error(
      `${auditName} has no meta.requiredArtifacts property, or the property is not an array.`
    );
  }
}

/**
 * @param {LH.Config.ResolvedConfig['categories']} categories
 * @param {LH.Config.ResolvedConfig['audits']} audits
 * @param {LH.Config.ResolvedConfig['groups']} groups
 */
function assertValidCategories(categories, audits, groups) {
  if (!categories) {
    return;
  }

  /** @type {Map<string, LH.Config.AuditDefn>} */
  const auditsKeyedById = new Map((audits || []).map(audit => {
    return [audit.implementation.meta.id, audit];
  }));

  Object.keys(categories).forEach(categoryId => {
    categories[categoryId].auditRefs.forEach((auditRef, index) => {
      if (!auditRef.id) {
        throw new Error(`missing an audit id at ${categoryId}[${index}]`);
      }

      const audit = auditsKeyedById.get(auditRef.id);
      if (!audit) {
        throw new Error(`could not find ${auditRef.id} audit for category ${categoryId}`);
      }

      const auditImpl = audit.implementation;
      const isManual = auditImpl.meta.scoreDisplayMode === 'manual';
      if (categoryId === 'accessibility' && !auditRef.group && !isManual) {
        throw new Error(`${auditRef.id} accessibility audit does not have a group`);
      }

      if (auditRef.weight > 0 && isManual) {
        throw new Error(`${auditRef.id} is manual but has a positive weight`);
      }

      if (auditRef.group && (!groups || !groups[auditRef.group])) {
        throw new Error(`${auditRef.id} references unknown group ${auditRef.group}`);
      }
    });
  });
}

/**
 * Validate the settings after they've been built.
 * @param {LH.Config.Settings} settings
 */
function assertValidSettings(settings) {
  if (!settings.formFactor) {
    throw new Error(`\`settings.formFactor\` must be defined as 'mobile' or 'desktop'. See https://github.com/GoogleChrome/lighthouse/blob/main/docs/emulation.md`);
  }

  if (!settings.screenEmulation.disabled) {
    // formFactor doesn't control emulation. So we don't want a mismatch:
    //   Bad mismatch A: user wants mobile emulation but scoring is configured for desktop
    //   Bad mismtach B: user wants everything desktop and set formFactor, but accidentally not screenEmulation
    if (settings.screenEmulation.mobile !== (settings.formFactor === 'mobile')) {
      throw new Error(`Screen emulation mobile setting (${settings.screenEmulation.mobile}) does not match formFactor setting (${settings.formFactor}). See https://github.com/GoogleChrome/lighthouse/blob/main/docs/emulation.md`);
    }
  }
}

/**
 * Asserts that artifacts are in a valid dependency order that can be computed.
 *
 * @param {Array<LH.Config.NavigationDefn>} navigations
 */
function assertArtifactTopologicalOrder(navigations) {
  const availableArtifacts = new Set();

  for (const navigation of navigations) {
    for (const artifact of navigation.artifacts) {
      availableArtifacts.add(artifact.id);
      if (!artifact.dependencies) continue;

      for (const [dependencyKey, {id: dependencyId}] of Object.entries(artifact.dependencies)) {
        if (availableArtifacts.has(dependencyId)) continue;
        throwInvalidDependencyOrder(artifact.id, dependencyKey);
      }
    }
  }
}

/**
 * @param {LH.Config.ResolvedConfig} resolvedConfig
 * @return {{warnings: string[]}}
 */
function assertValidConfig(resolvedConfig) {
  const {warnings} = assertValidFRNavigations(resolvedConfig.navigations);

  for (const artifactDefn of resolvedConfig.artifacts || []) {
    assertValidFRGatherer(artifactDefn.gatherer);
  }

  for (const auditDefn of resolvedConfig.audits || []) {
    assertValidAudit(auditDefn);
  }

  assertValidCategories(resolvedConfig.categories, resolvedConfig.audits, resolvedConfig.groups);
  assertValidSettings(resolvedConfig.settings);
  return {warnings};
}

/**
 * @param {string} artifactId
 * @param {string} dependencyKey
 * @return {never}
 */
function throwInvalidDependencyOrder(artifactId, dependencyKey) {
  throw new Error(
    [
      `Failed to find dependency "${dependencyKey}" for "${artifactId}" artifact`,
      `Check that...`,
      `  1. A gatherer exposes a matching Symbol that satisfies "${dependencyKey}".`,
      `  2. "${dependencyKey}" is configured to run before "${artifactId}"`,
    ].join('\n')
  );
}

/**
 * @param {string} artifactId
 * @param {string} dependencyKey
 * @return {never}
 */
function throwInvalidArtifactDependency(artifactId, dependencyKey) {
  throw new Error(
    [
      `Dependency "${dependencyKey}" for "${artifactId}" artifact is invalid.`,
      `The dependency must be collected before the dependent.`,
    ].join('\n')
  );
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/config/budget.js
/**
 * @license Copyright 2019 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

/**
 * @param {unknown} arr
 * @return {arr is Array<Record<string, unknown>>}
 */
function isArrayOfUnknownObjects(arr) {
  return Array.isArray(arr) && arr.every(isObjectOfUnknownProperties);
}

/**
 * @param {unknown} val
 * @return {val is Record<string, unknown>}
 */
function isObjectOfUnknownProperties(val) {
  return typeof val === 'object' && val !== null && !Array.isArray(val);
}

/**
 * Returns whether `val` is numeric. Will not coerce to a number. `NaN` will
 * return false, however ±Infinity will return true.
 * @param {unknown} val
 * @return {val is number}
 */
function isNumber(val) {
  return typeof val === 'number' && !isNaN(val);
}

class Budget {
  /**
   * Asserts that obj has no own properties, throwing a nice error message if it does.
   * `objectName` is included for nicer logging.
   * @param {Record<string, unknown>} obj
   * @param {string} objectName
   */
  static assertNoExcessProperties(obj, objectName) {
    const invalidKeys = Object.keys(obj);
    if (invalidKeys.length > 0) {
      const keys = invalidKeys.join(', ');
      throw new Error(`${objectName} has unrecognized properties: [${keys}]`);
    }
  }

  /**
   * Asserts that `strings` has no duplicate strings in it, throwing an error if
   * it does. `arrayName` is included for nicer logging.
   * @param {Array<string>} strings
   * @param {string} arrayName
   */
  static assertNoDuplicateStrings(strings, arrayName) {
    const foundStrings = new Set();
    for (const string of strings) {
      if (foundStrings.has(string)) {
        throw new Error(`${arrayName} has duplicate entry of type '${string}'`);
      }
      foundStrings.add(string);
    }
  }

  /**
   * @param {Record<string, unknown>} resourceBudget
   * @return {LH.Budget.ResourceBudget}
   */
  static validateResourceBudget(resourceBudget) {
    const {resourceType, budget, ...invalidRest} = resourceBudget;
    Budget.assertNoExcessProperties(invalidRest, 'Resource Budget');

    /** @type {Array<LH.Budget.ResourceType>} */
    const validResourceTypes = [
      'total',
      'document',
      'script',
      'stylesheet',
      'image',
      'media',
      'font',
      'other',
      'third-party',
    ];
    // Assume resourceType is an allowed string, throw if not.
    if (!validResourceTypes.includes(/** @type {LH.Budget.ResourceType} */ (resourceType))) {
      throw new Error(`Invalid resource type: ${resourceType}. \n` +
        `Valid resource types are: ${validResourceTypes.join(', ') }`);
    }
    if (!isNumber(budget)) {
      throw new Error(`Invalid budget: ${budget}`);
    }
    return {
      resourceType: /** @type {LH.Budget.ResourceType} */ (resourceType),
      budget,
    };
  }

  /**
   * @param {unknown} path
   * @param {string} error
   */
  static throwInvalidPathError(path, error) {
    throw new Error(`Invalid path ${path}. ${error}\n` +
      `'Path' should be specified using the 'robots.txt' format.\n` +
      `Learn more about the 'robots.txt' format here:\n` +
      `https://developers.google.com/search/reference/robots_txt#url-matching-based-on-path-values`);
  }


  /**
   * Validates that path is either: a) undefined or ) properly formed.
   * Verifies the quantity and location of the two robot.txt regex characters: $, *
   * @param {unknown} path
   * @return {undefined|string}
   */
  static validatePath(path) {
    if (path === undefined) {
      return undefined;
    } else if (typeof path !== 'string') {
      this.throwInvalidPathError(path, `Path should be a string.`);
      return;
    } else if (!path.startsWith('/')) {
      this.throwInvalidPathError(path, `Path should start with '/'.`);
    } else if ((path.match(/\*/g) || []).length > 1) {
      this.throwInvalidPathError(path, `Path should only contain one '*'.`);
    } else if ((path.match(/\$/g) || []).length > 1) {
      this.throwInvalidPathError(path, `Path should only contain one '$' character.`);
    } else if (path.includes('$') && !path.endsWith('$')) {
      this.throwInvalidPathError(path, `'$' character should only occur at end of path.`);
    }
    return path;
  }

  /**
   * Returns the budget that applies to a given URL.
   * If multiple budgets match based on thier 'path' property,
   * then the last-listed of those budgets is returned.
   * @param {LH.Util.Immutable<Array<LH.Budget>>|null} budgets
   * @param {string|undefined} url
   * @return {LH.Util.Immutable<LH.Budget> | undefined} budget
   */
  static getMatchingBudget(budgets, url) {
    if (budgets === null || url === undefined) return;

    // Applies the LAST matching budget.
    for (let i = budgets.length - 1; i >= 0; i--) {
      const budget = budgets[i];
      if (this.urlMatchesPattern(url, budget.path)) {
        return budget;
      }
    }
  }

  /**
   * Determines whether a URL matches against a robots.txt-style "path".
   * Pattern should use the robots.txt format. E.g. "/*-article.html" or "/". Reference:
   * https://developers.google.com/search/reference/robots_txt#url-matching-based-on-path-values
   * @param {string} url
   * @param {string=} pattern
   * @return {boolean}
   */
  static urlMatchesPattern(url, pattern = '/') {
    const urlObj = new URL(url);
    const urlPath = urlObj.pathname + urlObj.search;

    const hasWildcard = pattern.includes('*');
    const hasDollarSign = pattern.includes('$');

    /**
     * There are 4 different cases of path strings.
     * Paths should have already been validated with #validatePath.
     *
     * Case #1: No special characters
     * Example: "/cat"
     * Behavior: URL should start with given pattern.
     */
    if (!hasWildcard && !hasDollarSign) {
      return urlPath.startsWith(pattern);
    /**
     * Case #2: $ only
     * Example: "/js$"
     * Behavior: URL should be identical to pattern.
     */
    } else if (!hasWildcard && hasDollarSign) {
      return urlPath === pattern.slice(0, -1);
    /**
     * Case #3: * only
     * Example: "/vendor*chunk"
     * Behavior: URL should start with the string pattern that comes before the wildcard
     * & later in the string contain the string pattern that comes after the wildcard.
     */
    } else if (hasWildcard && !hasDollarSign) {
      const [beforeWildcard, afterWildcard] = pattern.split('*');
      const remainingUrl = urlPath.slice(beforeWildcard.length);
      return urlPath.startsWith(beforeWildcard) && remainingUrl.includes(afterWildcard);
    /**
     * Case #4: $ and *
     * Example: "/vendor*chunk.js$"
     * Behavior: URL should start with the string pattern that comes before the wildcard
     * & later in the string end with the string pattern that comes after the wildcard.
     */
    } else if (hasWildcard && hasDollarSign) {
      const [beforeWildcard, afterWildcard] = pattern.split('*');
      const urlEnd = urlPath.slice(beforeWildcard.length);
      return urlPath.startsWith(beforeWildcard) && urlEnd.endsWith(afterWildcard.slice(0, -1));
    }
    return false;
  }

  /**
   * @param {Record<string, unknown>} timingBudget
   * @return {LH.Budget.TimingBudget}
   */
  static validateTimingBudget(timingBudget) {
    const {metric, budget, ...invalidRest} = timingBudget;
    Budget.assertNoExcessProperties(invalidRest, 'Timing Budget');

    /** @type {Array<LH.Budget.TimingMetric>} */
    const validTimingMetrics = [
      'first-contentful-paint',
      'interactive',
      'first-meaningful-paint',
      'max-potential-fid',
      'total-blocking-time',
      'speed-index',
      'largest-contentful-paint',
      'cumulative-layout-shift',
    ];
    // Assume metric is an allowed string, throw if not.
    if (!validTimingMetrics.includes(/** @type {LH.Budget.TimingMetric} */ (metric))) {
      throw new Error(`Invalid timing metric: ${metric}. \n` +
        `Valid timing metrics are: ${validTimingMetrics.join(', ')}`);
    }
    if (!isNumber(budget)) {
      throw new Error(`Invalid budget: ${budget}`);
    }
    return {
      metric: /** @type {LH.Budget.TimingMetric} */ (metric),
      budget,
    };
  }

  /**
   * @param {string} hostname
   * @return {string}
   */
  static validateHostname(hostname) {
    const errMsg = `${hostname} is not a valid hostname.`;
    if (hostname.length === 0) {
      throw new Error(errMsg);
    }
    if (hostname.includes('/')) {
      throw new Error(errMsg);
    }
    if (hostname.includes(':')) {
      throw new Error(errMsg);
    }
    if (hostname.includes('*')) {
      if (!hostname.startsWith('*.') || hostname.lastIndexOf('*') > 0) {
        throw new Error(errMsg);
      }
    }
    return hostname;
  }

  /**
   * @param {unknown} hostnames
   * @return {undefined|Array<string>}
   */
  static validateHostnames(hostnames) {
    if (Array.isArray(hostnames) && hostnames.every(host => typeof host === 'string')) {
      return hostnames.map(Budget.validateHostname);
    } else if (hostnames !== undefined) {
      throw new Error(`firstPartyHostnames should be defined as an array of strings.`);
    }
  }

  /**
   * More info on the Budget format:
   * https://github.com/GoogleChrome/lighthouse/issues/6053#issuecomment-428385930
   * @param {unknown} budgetJson
   * @return {Array<LH.Budget>}
   */
  static initializeBudget(budgetJson) {
    // Clone to prevent modifications of original and to deactivate any live properties.
    budgetJson = JSON.parse(JSON.stringify(budgetJson));
    if (!isArrayOfUnknownObjects(budgetJson)) {
      throw new Error('Budget file is not defined as an array of budgets.');
    }

    const budgets = budgetJson.map((b, index) => {
      /** @type {LH.Budget} */
      const budget = {};

      const {path, options, resourceSizes, resourceCounts, timings, ...invalidRest} = b;
      Budget.assertNoExcessProperties(invalidRest, 'Budget');

      budget.path = Budget.validatePath(path);

      if (isObjectOfUnknownProperties(options)) {
        const {firstPartyHostnames, ...invalidRest} = options;
        Budget.assertNoExcessProperties(invalidRest, 'Options property');
        budget.options = {};
        budget.options.firstPartyHostnames = Budget.validateHostnames(firstPartyHostnames);
      } else if (options !== undefined) {
        throw new Error(`Invalid options property in budget at index ${index}`);
      }

      if (isArrayOfUnknownObjects(resourceSizes)) {
        budget.resourceSizes = resourceSizes.map(Budget.validateResourceBudget);
        Budget.assertNoDuplicateStrings(budget.resourceSizes.map(r => r.resourceType),
          `budgets[${index}].resourceSizes`);
      } else if (resourceSizes !== undefined) {
        throw new Error(`Invalid resourceSizes entry in budget at index ${index}`);
      }

      if (isArrayOfUnknownObjects(resourceCounts)) {
        budget.resourceCounts = resourceCounts.map(Budget.validateResourceBudget);
        Budget.assertNoDuplicateStrings(budget.resourceCounts.map(r => r.resourceType),
          `budgets[${index}].resourceCounts`);
      } else if (resourceCounts !== undefined) {
        throw new Error(`Invalid resourceCounts entry in budget at index ${index}`);
      }

      if (isArrayOfUnknownObjects(timings)) {
        budget.timings = timings.map(Budget.validateTimingBudget);
        Budget.assertNoDuplicateStrings(budget.timings.map(r => r.metric),
          `budgets[${index}].timings`);
      } else if (timings !== undefined) {
        throw new Error(`Invalid timings entry in budget at index ${index}`);
      }

      return budget;
    });

    return budgets;
  }
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/config/config-plugin.js
/**
 * @license Copyright 2019 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */



/**
 * @param {unknown} arr
 * @return {arr is Array<Record<string, unknown>>}
 */
function config_plugin_isArrayOfUnknownObjects(arr) {
  return Array.isArray(arr) && arr.every(config_plugin_isObjectOfUnknownProperties);
}

/**
 * @param {unknown} val
 * @return {val is Record<string, unknown>}
 */
function config_plugin_isObjectOfUnknownProperties(val) {
  return typeof val === 'object' && val !== null && !Array.isArray(val);
}

/**
 * @param {unknown} str
 * @return {str is LH.Gatherer.GatherMode}
 */
function objectIsGatherMode(str) {
  if (typeof str !== 'string') return false;
  return str === 'navigation' || str === 'timespan' || str === 'snapshot';
}

/**
 * @param {unknown} arr
 * @return {arr is Array<LH.Gatherer.GatherMode>}
 */
function isArrayOfGatherModes(arr) {
  if (!Array.isArray(arr)) return false;
  return arr.every(objectIsGatherMode);
}

/**
 * Asserts that obj has no own properties, throwing a nice error message if it does.
 * Plugin and object name are included for nicer logging.
 * @param {Record<string, unknown>} obj
 * @param {string} pluginName
 * @param {string=} objectName
 */
function assertNoExcessProperties(obj, pluginName, objectName = '') {
  if (objectName) {
    objectName += ' ';
  }

  const invalidKeys = Object.keys(obj);
  if (invalidKeys.length > 0) {
    const keys = invalidKeys.join(', ');
    throw new Error(`${pluginName} has unrecognized ${objectName}properties: [${keys}]`);
  }
}

/**
 * A set of methods for extracting and validating a Lighthouse plugin config.
 */
class ConfigPlugin {
  /**
   * Extract and validate the list of AuditDefns added by the plugin (or undefined
   * if no additional audits are being added by the plugin).
   * @param {unknown} auditsJson
   * @param {string} pluginName
   * @return {Array<{path: string}>|undefined}
   */
  static _parseAuditsList(auditsJson, pluginName) {
    // Plugin audits aren't required (relying on LH default audits) so fall back to [].
    if (auditsJson === undefined) {
      return undefined;
    } else if (!config_plugin_isArrayOfUnknownObjects(auditsJson)) {
      throw new Error(`${pluginName} has an invalid audits array.`);
    }

    return auditsJson.map(auditDefnJson => {
      const {path, ...invalidRest} = auditDefnJson;
      assertNoExcessProperties(invalidRest, pluginName, 'audit');

      if (typeof path !== 'string') {
        throw new Error(`${pluginName} has a missing audit path.`);
      }
      return {
        path,
      };
    });
  }

  /**
   * Extract and validate the list of category AuditRefs added by the plugin.
   * @param {unknown} auditRefsJson
   * @param {string} pluginName
   * @return {Array<LH.Config.AuditRefJson>}
   */
  static _parseAuditRefsList(auditRefsJson, pluginName) {
    if (!config_plugin_isArrayOfUnknownObjects(auditRefsJson)) {
      throw new Error(`${pluginName} has no valid auditsRefs.`);
    }

    return auditRefsJson.map(auditRefJson => {
      const {id, weight, group, ...invalidRest} = auditRefJson;
      assertNoExcessProperties(invalidRest, pluginName, 'auditRef');

      if (typeof id !== 'string') {
        throw new Error(`${pluginName} has an invalid auditRef id.`);
      }
      if (typeof weight !== 'number') {
        throw new Error(`${pluginName} has an invalid auditRef weight.`);
      }
      if (typeof group !== 'string' && typeof group !== 'undefined') {
        throw new Error(`${pluginName} has an invalid auditRef group.`);
      }

      const prependedGroup = group ? `${pluginName}-${group}` : group;
      return {
        id,
        weight,
        group: prependedGroup,
      };
    });
  }

  /**
   * Extract and validate the category added by the plugin.
   * @param {unknown} categoryJson
   * @param {string} pluginName
   * @return {LH.Config.CategoryJson}
   */
  static _parseCategory(categoryJson, pluginName) {
    if (!config_plugin_isObjectOfUnknownProperties(categoryJson)) {
      throw new Error(`${pluginName} has no valid category.`);
    }

    const {
      title,
      description,
      manualDescription,
      auditRefs: auditRefsJson,
      supportedModes,
      ...invalidRest
    } = categoryJson;

    assertNoExcessProperties(invalidRest, pluginName, 'category');

    if (!isStringOrIcuMessage(title)) {
      throw new Error(`${pluginName} has an invalid category tile.`);
    }
    if (!isStringOrIcuMessage(description) && description !== undefined) {
      throw new Error(`${pluginName} has an invalid category description.`);
    }
    if (!isStringOrIcuMessage(manualDescription) && manualDescription !== undefined) {
      throw new Error(`${pluginName} has an invalid category manualDescription.`);
    }
    if (!isArrayOfGatherModes(supportedModes) && supportedModes !== undefined) {
      throw new Error(
        `${pluginName} supportedModes must be an array, ` +
        `valid array values are "navigation", "timespan", and "snapshot".`
      );
    }
    const auditRefs = ConfigPlugin._parseAuditRefsList(auditRefsJson, pluginName);

    return {
      title,
      auditRefs,
      description: description,
      manualDescription: manualDescription,
      supportedModes,
    };
  }


  /**
   * Extract and validate groups JSON added by the plugin.
   * @param {unknown} groupsJson
   * @param {string} pluginName
   * @return {Record<string, LH.Config.GroupJson>|undefined}
   */
  static _parseGroups(groupsJson, pluginName) {
    if (groupsJson === undefined) {
      return undefined;
    }

    if (!config_plugin_isObjectOfUnknownProperties(groupsJson)) {
      throw new Error(`${pluginName} groups json is not defined as an object.`);
    }

    const groups = Object.entries(groupsJson);

    /** @type {Record<string, LH.Config.GroupJson>} */
    const parsedGroupsJson = {};
    groups.forEach(([groupId, groupJson]) => {
      if (!config_plugin_isObjectOfUnknownProperties(groupJson)) {
        throw new Error(`${pluginName} has a group not defined as an object.`);
      }
      const {title, description, ...invalidRest} = groupJson;
      assertNoExcessProperties(invalidRest, pluginName, 'group');

      if (!isStringOrIcuMessage(title)) {
        throw new Error(`${pluginName} has an invalid group title.`);
      }
      if (!isStringOrIcuMessage(description) && description !== undefined) {
        throw new Error(`${pluginName} has an invalid group description.`);
      }
      parsedGroupsJson[`${pluginName}-${groupId}`] = {
        title,
        description,
      };
    });
    return parsedGroupsJson;
  }

  /**
   * Extracts and validates a config from the provided plugin input, throwing
   * if it deviates from the expected object shape.
   * @param {unknown} pluginJson
   * @param {string} pluginName
   * @return {LH.Config}
   */
  static parsePlugin(pluginJson, pluginName) {
    // Clone to prevent modifications of original and to deactivate any live properties.
    pluginJson = JSON.parse(JSON.stringify(pluginJson));
    if (!config_plugin_isObjectOfUnknownProperties(pluginJson)) {
      throw new Error(`${pluginName} is not defined as an object.`);
    }

    const {
      audits: pluginAuditsJson,
      category: pluginCategoryJson,
      groups: pluginGroupsJson,
      ...invalidRest
    } = pluginJson;

    assertNoExcessProperties(invalidRest, pluginName);

    return {
      audits: ConfigPlugin._parseAuditsList(pluginAuditsJson, pluginName),
      categories: {
        [pluginName]: ConfigPlugin._parseCategory(pluginCategoryJson, pluginName),
      },
      groups: ConfigPlugin._parseGroups(pluginGroupsJson, pluginName),
    };
  }
}

/* harmony default export */ const config_plugin = (ConfigPlugin);

;// CONCATENATED MODULE: ./node_modules/lighthouse/core/config/config-helpers.js
/**
 * @license Copyright 2019 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */















const config_helpers_require = (0,external_module_namespaceObject.createRequire)(import.meta.url);

/** @typedef {typeof import('../gather/gatherers/gatherer.js').Gatherer} GathererConstructor */
/** @typedef {typeof import('../audits/audit.js')['Audit']} Audit */
/** @typedef {InstanceType<GathererConstructor>} Gatherer */

function isBundledEnvironment() {
  // If we're in DevTools or LightRider, we are definitely bundled.
  // TODO: refactor and delete `global.isDevtools`.
  if (global.isDevtools || global.isLightrider) return true;

  try {
    // Not foolproof, but `lighthouse-logger` is a dependency of lighthouse that should always be resolvable.
    // `require.resolve` will only throw in atypical/bundled environments.
    config_helpers_require.resolve('lighthouse-logger');
    return false;
  } catch (err) {
    return true;
  }
}

/**
 * If any items with identical `path` properties are found in the input array,
 * merge their `options` properties into the first instance and then discard any
 * other instances.
 * @template {{path?: string, options: Record<string, unknown>}} T
 * @param {T[]} items
 * @return T[]
 */
const mergeOptionsOfItems = function(items) {
  /** @type {T[]} */
  const mergedItems = [];

  for (const item of items) {
    const existingItem = item.path && mergedItems.find(candidate => candidate.path === item.path);
    if (!existingItem) {
      mergedItems.push(item);
      continue;
    }

    existingItem.options = Object.assign({}, existingItem.options, item.options);
  }

  return mergedItems;
};

/**
 * Recursively merges config fragment objects in a somewhat Lighthouse-specific way.
 *
 *    - `null` is treated similarly to `undefined` for whether a value should be overridden.
 *    - `overwriteArrays` controls array extension behavior:
 *        - true: Arrays are overwritten without any merging or concatenation.
 *        - false: Arrays are concatenated and de-duped by isDeepEqual.
 *    - Objects are recursively merged.
 *    - If the `settings` key is encountered while traversing an object, its arrays are *always*
 *      overridden, not concatenated. (`overwriteArrays` is flipped to `true`)
 *
 * More widely typed than exposed merge() function, below.
 * @param {Object<string, any>|Array<any>|undefined|null} base
 * @param {Object<string, any>|Array<any>} extension
 * @param {boolean=} overwriteArrays
 */
function _mergeConfigFragment(base, extension, overwriteArrays = false) {
  // If the default value doesn't exist or is explicitly null, defer to the extending value
  if (typeof base === 'undefined' || base === null) {
    return extension;
  } else if (typeof extension === 'undefined') {
    return base;
  } else if (Array.isArray(extension)) {
    if (overwriteArrays) return extension;
    if (!Array.isArray(base)) throw new TypeError(`Expected array but got ${typeof base}`);
    const merged = base.slice();
    extension.forEach(item => {
      if (!merged.some(candidate => isEqual(candidate, item))) merged.push(item);
    });

    return merged;
  } else if (typeof extension === 'object') {
    if (typeof base !== 'object') throw new TypeError(`Expected object but got ${typeof base}`);
    if (Array.isArray(base)) throw new TypeError('Expected object but got Array');
    Object.keys(extension).forEach(key => {
      const localOverwriteArrays = overwriteArrays ||
        (key === 'settings' && typeof base[key] === 'object');
      base[key] = _mergeConfigFragment(base[key], extension[key], localOverwriteArrays);
    });
    return base;
  }

  return extension;
}

/**
 * Until support of jsdoc templates with constraints, type in config.d.ts.
 * See https://github.com/Microsoft/TypeScript/issues/24283
 * @type {LH.Config.Merge}
 */
const config_helpers_mergeConfigFragment = _mergeConfigFragment;

/**
 * Merge an array of items by a caller-defined key. `mergeConfigFragment` is used to merge any items
 * with a matching key.
 *
 * @template {Record<string, any>} T
 * @param {Array<T>|null|undefined} baseArray
 * @param {Array<T>|null|undefined} extensionArray
 * @param {(item: T) => string} keyFn
 * @return {Array<T>}
 */
function mergeConfigFragmentArrayByKey(baseArray, extensionArray, keyFn) {
  /** @type {Map<string, {index: number, item: T}>} */
  const itemsByKey = new Map();
  const mergedArray = baseArray || [];
  for (let i = 0; i < mergedArray.length; i++) {
    const item = mergedArray[i];
    itemsByKey.set(keyFn(item), {index: i, item});
  }

  for (const item of extensionArray || []) {
    const baseItemEntry = itemsByKey.get(keyFn(item));
    if (baseItemEntry) {
      const baseItem = baseItemEntry.item;
      const merged = typeof item === 'object' && typeof baseItem === 'object' ?
        config_helpers_mergeConfigFragment(baseItem, item, true) :
        item;
      mergedArray[baseItemEntry.index] = merged;
    } else {
      mergedArray.push(item);
    }
  }

  return mergedArray;
}

/**
 * Expands a gatherer from user-specified to an internal gatherer definition format.
 *
 * Input Examples:
 *  - 'my-gatherer'
 *  - class MyGatherer extends Gatherer { }
 *  - {instance: myGathererInstance}
 *
 * @param {LH.Config.GathererJson} gatherer
 * @return {{instance?: Gatherer, implementation?: GathererConstructor, path?: string}} passes
 */
function expandGathererShorthand(gatherer) {
  if (typeof gatherer === 'string') {
    // just 'path/to/gatherer'
    return {path: gatherer};
  } else if ('implementation' in gatherer || 'instance' in gatherer) {
    // {implementation: GathererConstructor, ...} or {instance: GathererInstance, ...}
    return gatherer;
  } else if ('path' in gatherer) {
    // {path: 'path/to/gatherer', ...}
    if (typeof gatherer.path !== 'string') {
      throw new Error('Invalid Gatherer type ' + JSON.stringify(gatherer));
    }
    return gatherer;
  } else if (typeof gatherer === 'function') {
    // just GathererConstructor
    return {implementation: gatherer};
  } else if (gatherer && typeof gatherer.beforePass === 'function') {
    // just GathererInstance
    return {instance: gatherer};
  } else {
    throw new Error('Invalid Gatherer type ' + JSON.stringify(gatherer));
  }
}

/**
 * Expands the audits from user-specified JSON to an internal audit definition format.
 * @param {LH.Config.AuditJson} audit
 * @return {{id?: string, path: string, options?: {}} | {id?: string, implementation: Audit, path?: string, options?: {}}}
 */
function expandAuditShorthand(audit) {
  if (typeof audit === 'string') {
    // just 'path/to/audit'
    return {path: audit, options: {}};
  } else if ('implementation' in audit && typeof audit.implementation.audit === 'function') {
    // {implementation: AuditClass, ...}
    return audit;
  } else if ('path' in audit && typeof audit.path === 'string') {
    // {path: 'path/to/audit', ...}
    return audit;
  } else if ('audit' in audit && typeof audit.audit === 'function') {
    // just AuditClass
    return {implementation: audit, options: {}};
  } else {
    throw new Error('Invalid Audit type ' + JSON.stringify(audit));
  }
}

/** @type {Map<string, Promise<any>>} */
const bundledModules = new Map(/* BUILD_REPLACE_BUNDLED_MODULES */);

/**
 * Wraps `import`/`require` with an entrypoint for bundled dynamic modules.
 * See build-bundle.js
 * @param {string} requirePath
 */
async function requireWrapper(requirePath) {
  // For windows.
  if (external_path_.isAbsolute(requirePath)) {
    requirePath = external_url_.pathToFileURL(requirePath).href;
  }

  /** @type {any} */
  let module;
  if (bundledModules.has(requirePath)) {
    module = await bundledModules.get(requirePath);
  } else if (requirePath.match(/\.(js|mjs|cjs)$/)) {
    module = await __nccwpck_require__(6141)(requirePath);
  } else {
    requirePath += '.js';
    module = await __nccwpck_require__(6141)(requirePath);
  }

  if (module.default) return module.default;

  // Find a valid named export.
  const methods = new Set(['meta']);
  const possibleNamedExports = Object.keys(module).filter(key => {
    if (!(module[key] && module[key] instanceof Object)) return false;
    return Object.getOwnPropertyNames(module[key]).some(method => methods.has(method));
  });
  if (possibleNamedExports.length === 1) return possibleNamedExports[0];
  if (possibleNamedExports.length > 1) {
    throw new Error(`module '${requirePath}' has too many possible exports`);
  }

  throw new Error(`module '${requirePath}' missing default export`);
}

/**
 * @param {string} gathererPath
 * @param {Array<string>} coreGathererList
 * @param {string=} configDir
 * @return {Promise<LH.Config.GathererDefn>}
 */
async function requireGatherer(gathererPath, coreGathererList, configDir) {
  const coreGatherer = coreGathererList.find(a => a === `${gathererPath}.js`);

  let requirePath = `../gather/gatherers/${gathererPath}`;
  if (!coreGatherer) {
    // Otherwise, attempt to find it elsewhere. This throws if not found.
    requirePath = config_helpers_resolveModulePath(gathererPath, configDir, 'gatherer');
  }

  const GathererClass = /** @type {GathererConstructor} */ (await requireWrapper(requirePath));

  return {
    instance: new GathererClass(),
    implementation: GathererClass,
    path: gathererPath,
  };
}

/**
 * @param {string} auditPath
 * @param {Array<string>} coreAuditList
 * @param {string=} configDir
 * @return {Promise<LH.Config.AuditDefn['implementation']>}
 */
function requireAudit(auditPath, coreAuditList, configDir) {
  // See if the audit is a Lighthouse core audit.
  const auditPathJs = `${auditPath}.js`;
  const coreAudit = coreAuditList.find(a => a === auditPathJs);
  let requirePath = `../audits/${auditPath}`;
  if (!coreAudit) {
    if (isBundledEnvironment()) {
      // This is for pubads bundling.
      requirePath = auditPath;
    } else {
      // Otherwise, attempt to find it elsewhere. This throws if not found.
      const absolutePath = config_helpers_resolveModulePath(auditPath, configDir, 'audit');
      if (isBundledEnvironment()) {
        // Use a relative path so bundler can easily expose it.
        requirePath = external_path_.relative(esm_utils_getModuleDirectory(import.meta), absolutePath);
      } else {
        requirePath = absolutePath;
      }
    }
  }

  return requireWrapper(requirePath);
}

/**
 * Creates a settings object from potential flags object by dropping all the properties
 * that don't exist on Config.Settings.
 * @param {Partial<LH.Flags>=} flags
 * @return {LH.Util.RecursivePartial<LH.Config.Settings>}
*/
function cleanFlagsForSettings(flags = {}) {
  /** @type {LH.Util.RecursivePartial<LH.Config.Settings>} */
  const settings = {};

  for (const key of Object.keys(flags)) {
    if (key in defaultSettings) {
      // @ts-expect-error tsc can't yet express that key is only a single type in each iteration, not a union of types.
      settings[key] = flags[key];
    }
  }

  return settings;
}

/**
 * @param {LH.SharedFlagsSettings} settingsJson
 * @param {LH.Flags|undefined} overrides
 * @return {LH.Config.Settings}
 */
function config_helpers_resolveSettings(settingsJson = {}, overrides = undefined) {
  // If a locale is requested in flags or settings, use it. A typical CLI run will not have one,
  // however `lookupLocale` will always determine which of our supported locales to use (falling
  // back if necessary).
  // TODO: could do more work to sniff out the user's locale
  const locale = lookupLocale(overrides?.locale || settingsJson.locale);

  // Fill in missing settings with defaults
  const {defaultSettings} = constants_namespaceObject;
  const settingWithDefaults = config_helpers_mergeConfigFragment(config_helpers_deepClone(defaultSettings), settingsJson, true);

  // Override any applicable settings with CLI flags
  const settingsWithFlags = config_helpers_mergeConfigFragment(
    settingWithDefaults,
    cleanFlagsForSettings(overrides),
    true
  );

  if (settingsWithFlags.budgets) {
    settingsWithFlags.budgets = Budget.initializeBudget(settingsWithFlags.budgets);
  }
  // Locale is special and comes only from flags/settings/lookupLocale.
  settingsWithFlags.locale = locale;

  // Default constants uses the mobile UA. Explicitly stating to true asks LH to use the associated UA.
  // It's a little awkward, but the alternatives are not allowing `true` or a dedicated `disableUAEmulation` setting.
  if (settingsWithFlags.emulatedUserAgent === true) {
    settingsWithFlags.emulatedUserAgent = userAgents[settingsWithFlags.formFactor];
  }

  assertValidSettings(settingsWithFlags);
  return settingsWithFlags;
}

/**
 * @param {LH.Config} config
 * @param {string | undefined} configDir
 * @param {{plugins?: string[]} | undefined} flags
 * @return {Promise<LH.Config>}
 */
async function config_helpers_mergePlugins(config, configDir, flags) {
  const configPlugins = config.plugins || [];
  const flagPlugins = flags?.plugins || [];
  const pluginNames = new Set([...configPlugins, ...flagPlugins]);

  for (const pluginName of pluginNames) {
    assertValidPluginName(config, pluginName);

    // In bundled contexts, `resolveModulePath` will fail, so use the raw pluginName directly.
    const pluginPath = isBundledEnvironment() ?
        pluginName :
        config_helpers_resolveModulePath(pluginName, configDir, 'plugin');
    const rawPluginJson = await requireWrapper(pluginPath);
    const pluginJson = config_plugin.parsePlugin(rawPluginJson, pluginName);

    config = config_helpers_mergeConfigFragment(config, pluginJson);
  }

  return config;
}


/**
 * Turns a GathererJson into a GathererDefn which involves a few main steps:
 *    - Expanding the JSON shorthand the full definition format.
 *    - `require`ing in the implementation.
 *    - Creating a gatherer instance from the implementation.
 * @param {LH.Config.GathererJson} gathererJson
 * @param {Array<string>} coreGathererList
 * @param {string=} configDir
 * @return {Promise<LH.Config.GathererDefn>}
 */
async function config_helpers_resolveGathererToDefn(gathererJson, coreGathererList, configDir) {
  const gathererDefn = expandGathererShorthand(gathererJson);
  if (gathererDefn.instance) {
    return {
      instance: gathererDefn.instance,
      implementation: gathererDefn.implementation,
      path: gathererDefn.path,
    };
  } else if (gathererDefn.implementation) {
    const GathererClass = gathererDefn.implementation;
    return {
      instance: new GathererClass(),
      implementation: gathererDefn.implementation,
      path: gathererDefn.path,
    };
  } else if (gathererDefn.path) {
    const path = gathererDefn.path;
    return requireGatherer(path, coreGathererList, configDir);
  } else {
    throw new Error('Invalid expanded Gatherer: ' + JSON.stringify(gathererDefn));
  }
}

/**
 * Take an array of audits and audit paths and require any paths (possibly
 * relative to the optional `configDir`) using `resolveModule`,
 * leaving only an array of AuditDefns.
 * @param {LH.Config['audits']} audits
 * @param {string=} configDir
 * @return {Promise<Array<LH.Config.AuditDefn>|null>}
 */
async function config_helpers_resolveAuditsToDefns(audits, configDir) {
  if (!audits) {
    return null;
  }

  const coreList = runner_Runner.getAuditList();
  const auditDefnsPromises = audits.map(async (auditJson) => {
    const auditDefn = expandAuditShorthand(auditJson);
    let implementation;
    if ('implementation' in auditDefn) {
      implementation = auditDefn.implementation;
    } else {
      implementation = await requireAudit(auditDefn.path, coreList, configDir);
    }

    return {
      implementation,
      path: auditDefn.path,
      options: auditDefn.options || {},
    };
  });
  const auditDefns = await Promise.all(auditDefnsPromises);

  const mergedAuditDefns = mergeOptionsOfItems(auditDefns);
  mergedAuditDefns.forEach(audit => assertValidAudit(audit));
  return mergedAuditDefns;
}

/**
 * Resolves the location of the specified module and returns an absolute
 * string path to the file. Used for loading custom audits and gatherers.
 * Throws an error if no module is found.
 * @param {string} moduleIdentifier
 * @param {string=} configDir The absolute path to the directory of the config file, if there is one.
 * @param {string=} category Optional plugin category (e.g. 'audit') for better error messages.
 * @return {string}
 * @throws {Error}
 */
function config_helpers_resolveModulePath(moduleIdentifier, configDir, category) {
  // module in a node_modules/ that is...
  // |                                | Lighthouse globally installed | Lighthouse locally installed |
  // |--------------------------------|-------------------------------|------------------------------|
  // | global                         |   1.                          |   1.                         |
  // | in current working directory   |   2.                          |   1.                         |
  // | relative to config.js file     |   5.                          |   -                          |

  // module given by a path that is...
  // |                                           | Lighthouse globally/locally installed |
  // |-------------------------------------------|---------------------------------------|
  // | absolute                                  |   1.                                  |
  // | relative to the current working directory |   3.                                  |
  // | relative to the config.js file            |   4.                                  |

  // 1.
  // First try straight `require()`. Unlikely to be specified relative to this
  // file, but adds support for Lighthouse modules from npm since
  // `require()` walks up parent directories looking inside any node_modules/
  // present. Also handles absolute paths.
  try {
    return config_helpers_require.resolve(moduleIdentifier);
  } catch (e) {}

  // 2.
  // Lighthouse globally installed, node_modules/ in current working directory.
  // ex: lighthouse https://test.com
  //
  // working directory/
  //   |-- node_modules/
  //   |-- package.json
  try {
    return config_helpers_require.resolve(moduleIdentifier, {paths: [process.cwd()]});
  } catch (e) {}

  // 3.
  // See if the module resolves relative to the current working directory.
  // Most useful to handle the case of invoking Lighthouse as a module, since
  // then the config is an object and so has no path.
  const cwdPath = external_path_.resolve(process.cwd(), moduleIdentifier);
  try {
    return config_helpers_require.resolve(cwdPath);
  } catch (e) {}

  const errorString = 'Unable to locate ' + (category ? `${category}: ` : '') +
    `\`${moduleIdentifier}\`.
     Tried to resolve the module from these locations:
       ${esm_utils_getModuleDirectory(import.meta)}
       ${cwdPath}`;

  if (!configDir) {
    throw new Error(errorString);
  }

  // 4.
  // Try looking up relative to the config file path. Just like the
  // relative path passed to `require()` is found relative to the file it's
  // in, this allows module paths to be specified relative to the config file.
  const relativePath = external_path_.resolve(configDir, moduleIdentifier);
  try {
    return config_helpers_require.resolve(relativePath);
  } catch (requireError) {}

  // 5.
  // Lighthouse globally installed, node_modules/ in config directory.
  // ex: lighthouse https://test.com --config-path=./config/config.js
  //
  // working directory/
  //   |-- config/
  //     |-- node_modules/
  //     |-- config.js
  //     |-- package.json
  try {
    return config_helpers_require.resolve(moduleIdentifier, {paths: [configDir]});
  } catch (requireError) {}

  throw new Error(errorString + `
       ${relativePath}`);
}

/**
 * Many objects in the config can be an object whose properties are not serializable.
 * We use a shallow clone for these objects instead.
 * Any value that isn't an object will not be cloned.
 *
 * @template T
 * @param {T} item
 * @return {T}
 */
function shallowClone(item) {
  if (typeof item === 'object') {
    // Return copy of instance and prototype chain (in case item is instantiated class).
    return Object.assign(
      Object.create(
        Object.getPrototypeOf(item)
      ),
      item
    );
  }

  return item;
}

/**
 * // TODO(bckenny): could adopt "jsonified" type to ensure T will survive JSON
 * round trip: https://github.com/Microsoft/TypeScript/issues/21838
 * @template T
 * @param {T} json
 * @return {T}
 */
function config_helpers_deepClone(json) {
  return JSON.parse(JSON.stringify(json));
}

/**
 * Deep clone a config, copying over any "live" gatherer or audit that
 * wouldn't make the JSON round trip.
 * @param {LH.Config} json
 * @return {LH.Config}
 */
function config_helpers_deepCloneConfigJson(json) {
  const cloned = config_helpers_deepClone(json);

  // Copy arrays that could contain non-serializable properties to allow for programmatic
  // injection of audit and gatherer implementations.
  if (Array.isArray(cloned.passes) && Array.isArray(json.passes)) {
    for (let i = 0; i < cloned.passes.length; i++) {
      const pass = cloned.passes[i];
      pass.gatherers = (json.passes[i].gatherers || []).map(gatherer => shallowClone(gatherer));
    }
  }

  if (Array.isArray(json.audits)) {
    cloned.audits = json.audits.map(audit => shallowClone(audit));
  }

  if (Array.isArray(json.artifacts)) {
    cloned.artifacts = json.artifacts.map(artifact => ({
      ...artifact,
      gatherer: shallowClone(artifact.gatherer),
    }));
  }

  return cloned;
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/legacy/config/config.js
/**
 * @license Copyright 2016 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */













const defaultConfigPath = './legacy-default-config.js';

/** @typedef {typeof import('../../gather/gatherers/gatherer.js').Gatherer} GathererConstructor */
/** @typedef {InstanceType<GathererConstructor>} Gatherer */

/**
 * Define with object literal so that tsc will require it to stay updated.
 * @type {Record<keyof LH.BaseArtifacts, ''>}
 */
const BASE_ARTIFACT_BLANKS = {
  fetchTime: '',
  LighthouseRunWarnings: '',
  HostFormFactor: '',
  HostUserAgent: '',
  NetworkUserAgent: '',
  BenchmarkIndex: '',
  BenchmarkIndexes: '',
  GatherContext: '',
  traces: '',
  devtoolsLogs: '',
  settings: '',
  URL: '',
  Timing: '',
  PageLoadError: '',
};
const BASE_ARTIFACT_NAMES = Object.keys(BASE_ARTIFACT_BLANKS);

// These were legacy base artifacts, but we need certain gatherers (e.g. bfcache) to run after them.
// The order is controlled by the config, but still need to force them to run every time.
const alwaysRunArtifactIds = (/* unused pure expression or super */ null && ([
  'WebAppManifest',
  'InstallabilityErrors',
  'Stacks',
  'FullPageScreenshot',
]));

/**
 * Certain gatherers are destructive to the page state.
 * We should ensure that these gatherers run after any custom gatherers.
 * The default priority should be 0.
 * TODO: Make this an official part of the config or design a different solution.
 * @type {Record<string, number|undefined>}
 */
const internalGathererPriorities = {
  FullPageScreenshot: 1,
  BFCacheFailures: 1,
};

/**
 * @param {LegacyResolvedConfig['passes']} passes
 * @param {LegacyResolvedConfig['audits']} audits
 */
function assertValidPasses(passes, audits) {
  if (!Array.isArray(passes)) {
    return;
  }

  const requestedGatherers = config_LegacyResolvedConfig.getGatherersRequestedByAudits(audits);
  // Base artifacts are provided by GatherRunner, so start foundGatherers with them.
  const foundGatherers = new Set(BASE_ARTIFACT_NAMES);

  // Log if we are running gathers that are not needed by the audits listed in the config
  passes.forEach((pass, passIndex) => {
    if (passIndex === 0 && pass.loadFailureMode !== 'fatal') {
      log.warn(`"${pass.passName}" is the first pass but was marked as non-fatal. ` +
        `The first pass will always be treated as loadFailureMode=fatal.`);
      pass.loadFailureMode = 'fatal';
    }

    pass.gatherers.forEach(gathererDefn => {
      const gatherer = gathererDefn.instance;
      foundGatherers.add(gatherer.name);
      const isGatherRequiredByAudits = requestedGatherers.has(gatherer.name);
      const isAlwaysRunArtifact = alwaysRunArtifactIds.includes(gatherer.name);
      if (!isGatherRequiredByAudits && !isAlwaysRunArtifact) {
        const msg = `${gatherer.name} gatherer requested, however no audit requires it.`;
        log.warn('config', msg);
      }
    });
  });

  // All required gatherers must be found in the config. Throw otherwise.
  for (const auditDefn of audits || []) {
    const auditMeta = auditDefn.implementation.meta;
    for (const requiredArtifact of auditMeta.requiredArtifacts) {
      if (!foundGatherers.has(requiredArtifact)) {
        throw new Error(`${requiredArtifact} gatherer, required by audit ${auditMeta.id}, ` +
            'was not found in config.');
      }
    }
  }

  // Passes must have unique `passName`s. Throw otherwise.
  const usedNames = new Set();
  passes.forEach(pass => {
    const passName = pass.passName;
    if (usedNames.has(passName)) {
      throw new Error(`Passes must have unique names (repeated passName: ${passName}.`);
    }
    usedNames.add(passName);
  });
}

/**
 * @param {Gatherer} gathererInstance
 * @param {string=} gathererName
 */
function assertValidGatherer(gathererInstance, gathererName) {
  gathererName = gathererName || gathererInstance.name || 'gatherer';

  if (typeof gathererInstance.beforePass !== 'function') {
    throw new Error(`${gathererName} has no beforePass() method.`);
  }

  if (typeof gathererInstance.pass !== 'function') {
    throw new Error(`${gathererName} has no pass() method.`);
  }

  if (typeof gathererInstance.afterPass !== 'function') {
    throw new Error(`${gathererName} has no afterPass() method.`);
  }
}

/**
 * @implements {LH.Config.LegacyResolvedConfig}
 */
class config_LegacyResolvedConfig {
  /**
   * Resolves the provided config (inherits from extended config, if set), resolves
   * all referenced modules, and validates.
   * @param {LH.Config=} config If not provided, uses the default config.
   * @param {LH.Flags=} flags
   * @return {Promise<LegacyResolvedConfig>}
   */
  static async fromJson(config, flags) {
    const status = {msg: 'Create config', id: 'lh:init:config'};
    log.time(status, 'verbose');
    let configPath = flags?.configPath;

    if (!config) {
      config = legacyDefaultConfig;
      configPath = path.resolve(getModuleDirectory(import.meta), defaultConfigPath);
    }

    if (configPath && !path.isAbsolute(configPath)) {
      throw new Error('configPath must be an absolute path.');
    }

    // We don't want to mutate the original config object
    config = deepCloneConfigJson(config);

    // Extend the default config if specified
    if (config.extends) {
      if (config.extends !== 'lighthouse:default') {
        throw new Error('`lighthouse:default` is the only valid extension method.');
      }
      config = config_LegacyResolvedConfig.extendConfigJSON(
        deepCloneConfigJson(legacyDefaultConfig), config);
    }

    // The directory of the config path, if one was provided.
    const configDir = configPath ? path.dirname(configPath) : undefined;

    // Validate and merge in plugins (if any).
    config = await mergePlugins(config, configDir, flags);

    const settings = resolveSettings(config.settings || {}, flags);

    // Augment passes with necessary defaults and require gatherers.
    const passesWithDefaults = config_LegacyResolvedConfig.augmentPassesWithDefaults(config.passes);
    config_LegacyResolvedConfig.adjustDefaultPassForThrottling(settings, passesWithDefaults);
    const passes = await config_LegacyResolvedConfig.requireGatherers(passesWithDefaults, configDir);

    const audits = await config_LegacyResolvedConfig.requireAudits(config.audits, configDir);

    const resolvedConfig = new config_LegacyResolvedConfig(config, {settings, passes, audits});
    log.timeEnd(status);
    return resolvedConfig;
  }

  /**
   * @deprecated `Config.fromJson` should be used instead.
   * @constructor
   * @param {LH.Config} config
   * @param {{settings: LH.Config.Settings, passes: ?LH.Config.Pass[], audits: ?LH.Config.AuditDefn[]}} opts
   */
  constructor(config, opts) {
    /** @type {LH.Config.Settings} */
    this.settings = opts.settings;
    /** @type {?Array<LH.Config.Pass>} */
    this.passes = opts.passes;
    /** @type {?Array<LH.Config.AuditDefn>} */
    this.audits = opts.audits;
    /** @type {?Record<string, LH.Config.Category>} */
    this.categories = config.categories || null;
    /** @type {?Record<string, LH.Config.Group>} */
    this.groups = config.groups || null;

    config_LegacyResolvedConfig.filterConfigIfNeeded(this);

    assertValidPasses(this.passes, this.audits);
    validation.assertValidCategories(this.categories, this.audits, this.groups);
  }

  /**
   * Provides a cleaned-up, stringified version of this config. Gatherer and
   * Audit `implementation` and `instance` do not survive this process.
   * @return {string}
   */
  getPrintString() {
    const jsonConfig = deepClone(this);

    if (jsonConfig.passes) {
      for (const pass of jsonConfig.passes) {
        for (const gathererDefn of pass.gatherers) {
          gathererDefn.implementation = undefined;
          // @ts-expect-error Breaking the Config.GathererDefn type.
          gathererDefn.instance = undefined;
        }
      }
    }

    if (jsonConfig.audits) {
      for (const auditDefn of jsonConfig.audits) {
        // @ts-expect-error Breaking the Config.AuditDefn type.
        auditDefn.implementation = undefined;
        if (Object.keys(auditDefn.options).length === 0) {
          // @ts-expect-error Breaking the Config.AuditDefn type.
          auditDefn.options = undefined;
        }
      }
    }

    // Printed config is more useful with localized strings.
    format.replaceIcuMessages(jsonConfig, jsonConfig.settings.locale);

    return JSON.stringify(jsonConfig, null, 2);
  }

  /**
   * @param {LH.Config} baseJSON The JSON of the configuration to extend
   * @param {LH.Config} extendJSON The JSON of the extensions
   * @return {LH.Config}
   */
  static extendConfigJSON(baseJSON, extendJSON) {
    if (extendJSON.passes && baseJSON.passes) {
      for (const pass of extendJSON.passes) {
        // use the default pass name if one is not specified
        const passName = pass.passName || constants.defaultPassConfig.passName;
        const basePass = baseJSON.passes.find(candidate => candidate.passName === passName);

        if (!basePass) {
          baseJSON.passes.push(pass);
        } else {
          mergeConfigFragment(basePass, pass);
        }
      }

      delete extendJSON.passes;
    }

    return mergeConfigFragment(baseJSON, extendJSON);
  }

  /**
   * @param {LH.Config['passes']} passes
   * @return {?Array<Required<LH.Config.PassJson>>}
   */
  static augmentPassesWithDefaults(passes) {
    if (!passes) {
      return null;
    }

    const {defaultPassConfig} = constants;
    return passes.map(pass => mergeConfigFragment(deepClone(defaultPassConfig), pass));
  }

  /**
   * Observed throttling methods (devtools/provided) require at least 5s of quiet for the metrics to
   * be computed. This method adjusts the quiet thresholds to the required minimums if necessary.
   * @param {LH.Config.Settings} settings
   * @param {?Array<Required<LH.Config.PassJson>>} passes
   */
  static adjustDefaultPassForThrottling(settings, passes) {
    if (!passes ||
        (settings.throttlingMethod !== 'devtools' && settings.throttlingMethod !== 'provided')) {
      return;
    }

    const defaultPass = passes.find(pass => pass.passName === 'defaultPass');
    if (!defaultPass) return;
    const overrides = constants.nonSimulatedPassConfigOverrides;
    defaultPass.pauseAfterFcpMs =
      Math.max(overrides.pauseAfterFcpMs, defaultPass.pauseAfterFcpMs);
    defaultPass.pauseAfterLoadMs =
      Math.max(overrides.pauseAfterLoadMs, defaultPass.pauseAfterLoadMs);
    defaultPass.cpuQuietThresholdMs =
      Math.max(overrides.cpuQuietThresholdMs, defaultPass.cpuQuietThresholdMs);
    defaultPass.networkQuietThresholdMs =
      Math.max(overrides.networkQuietThresholdMs, defaultPass.networkQuietThresholdMs);
  }

  /**
   * Filter out any unrequested items from the config, based on requested categories or audits.
   * @param {LegacyResolvedConfig} config
   */
  static filterConfigIfNeeded(config) {
    const settings = config.settings;
    // eslint-disable-next-line max-len
    if (!settings.onlyCategories && !settings.onlyAudits && !settings.skipAudits && !settings.disableFullPageScreenshot) {
      return;
    }

    // 1. Filter to just the chosen categories/audits
    const {categories, requestedAuditNames} =
      config_LegacyResolvedConfig.filterCategoriesAndAudits(config.categories, settings);

    // 2. Resolve which audits will need to run
    const audits = config.audits && config.audits.filter(auditDefn =>
        requestedAuditNames.has(auditDefn.implementation.meta.id));

    // 3. Resolve which gatherers will need to run
    const requestedGathererIds = config_LegacyResolvedConfig.getGatherersRequestedByAudits(audits);
    for (const gathererId of alwaysRunArtifactIds) {
      requestedGathererIds.add(gathererId);
    }

    // Remove FullPageScreenshot if we explicitly exclude it.
    if (settings.disableFullPageScreenshot) {
      requestedGathererIds.delete('FullPageScreenshot');
    }

    // 4. Filter to only the neccessary passes
    const passes =
      config_LegacyResolvedConfig.generatePassesNeededByGatherers(config.passes, requestedGathererIds);

    config.categories = categories;
    config.audits = audits;
    config.passes = passes;
  }

  /**
   * Filter out any unrequested categories or audits from the categories object.
   * @param {LegacyResolvedConfig['categories']} oldCategories
   * @param {LH.Config.Settings} settings
   * @return {{categories: LegacyResolvedConfig['categories'], requestedAuditNames: Set<string>}}
   */
  static filterCategoriesAndAudits(oldCategories, settings) {
    if (!oldCategories) {
      return {categories: null, requestedAuditNames: new Set()};
    }

    if (settings.onlyAudits && settings.skipAudits) {
      throw new Error('Cannot set both skipAudits and onlyAudits');
    }

    /** @type {NonNullable<LegacyResolvedConfig['categories']>} */
    const categories = {};
    const filterByIncludedCategory = !!settings.onlyCategories;
    const filterByIncludedAudit = !!settings.onlyAudits;
    const categoryIds = settings.onlyCategories || [];
    const auditIds = settings.onlyAudits || [];
    const skipAuditIds = settings.skipAudits || [];

    // warn if the category is not found
    categoryIds.forEach(categoryId => {
      if (!oldCategories[categoryId]) {
        log.warn('config', `unrecognized category in 'onlyCategories': ${categoryId}`);
      }
    });

    // warn if the audit is not found in a category or there are overlaps
    const auditsToValidate = new Set(auditIds.concat(skipAuditIds));
    for (const auditId of auditsToValidate) {
      const foundCategory = Object.keys(oldCategories).find(categoryId => {
        const auditRefs = oldCategories[categoryId].auditRefs;
        return !!auditRefs.find(candidate => candidate.id === auditId);
      });

      if (!foundCategory) {
        const parentKeyName = skipAuditIds.includes(auditId) ? 'skipAudits' : 'onlyAudits';
        log.warn('config', `unrecognized audit in '${parentKeyName}': ${auditId}`);
      } else if (auditIds.includes(auditId) && categoryIds.includes(foundCategory)) {
        log.warn('config', `${auditId} in 'onlyAudits' is already included by ` +
            `${foundCategory} in 'onlyCategories'`);
      }
    }

    const includedAudits = new Set(auditIds);
    skipAuditIds.forEach(id => includedAudits.delete(id));

    Object.keys(oldCategories).forEach(categoryId => {
      const category = deepClone(oldCategories[categoryId]);

      if (filterByIncludedCategory && filterByIncludedAudit) {
        // If we're filtering by category and audit, include the union of the two
        if (!categoryIds.includes(categoryId)) {
          category.auditRefs = category.auditRefs.filter(audit => auditIds.includes(audit.id));
        }
      } else if (filterByIncludedCategory) {
        // If we're filtering by just category, and the category is not included, skip it
        if (!categoryIds.includes(categoryId)) {
          return;
        }
      } else if (filterByIncludedAudit) {
        category.auditRefs = category.auditRefs.filter(audit => auditIds.includes(audit.id));
      }

      // always filter based on skipAuditIds
      category.auditRefs = category.auditRefs.filter(audit => !skipAuditIds.includes(audit.id));

      if (category.auditRefs.length) {
        categories[categoryId] = category;
        category.auditRefs.forEach(audit => includedAudits.add(audit.id));
      }
    });

    return {categories, requestedAuditNames: includedAudits};
  }

  /**
   * From some requested audits, return names of all required and optional artifacts
   * @param {LegacyResolvedConfig['audits']} audits
   * @return {Set<string>}
   */
  static getGatherersRequestedByAudits(audits) {
    // It's possible we weren't given any audits (but existing audit results), in which case
    // there is no need to do any work here.
    if (!audits) {
      return new Set();
    }

    const gatherers = new Set();
    for (const auditDefn of audits) {
      const {requiredArtifacts, __internalOptionalArtifacts} = auditDefn.implementation.meta;
      requiredArtifacts.forEach(artifact => gatherers.add(artifact));
      if (__internalOptionalArtifacts) {
        __internalOptionalArtifacts.forEach(artifact => gatherers.add(artifact));
      }
    }
    return gatherers;
  }

  /**
   * Filters to only requested passes and gatherers, returning a new passes array.
   * @param {LegacyResolvedConfig['passes']} passes
   * @param {Set<string>} requestedGatherers
   * @return {LegacyResolvedConfig['passes']}
   */
  static generatePassesNeededByGatherers(passes, requestedGatherers) {
    if (!passes) {
      return null;
    }

    const auditsNeedTrace = requestedGatherers.has('traces');
    const filteredPasses = passes.map(pass => {
      // remove any unncessary gatherers from within the passes
      pass.gatherers = pass.gatherers.filter(gathererDefn => {
        const gatherer = gathererDefn.instance;
        return requestedGatherers.has(gatherer.name);
      });

      // disable the trace if no audit requires a trace
      if (pass.recordTrace && !auditsNeedTrace) {
        const passName = pass.passName || 'unknown pass';
        log.warn('config', `Trace not requested by an audit, dropping trace in ${passName}`);
        pass.recordTrace = false;
      }

      return pass;
    }).filter(pass => {
      // remove any passes lacking concrete gatherers, unless they are dependent on the trace
      if (pass.recordTrace) return true;
      // Always keep defaultPass
      if (pass.passName === 'defaultPass') return true;
      return pass.gatherers.length > 0;
    });
    return filteredPasses;
  }

  /**
   * Take an array of audits and audit paths and require any paths (possibly
   * relative to the optional `configDir`) using `resolveModulePath`,
   * leaving only an array of AuditDefns.
   * @param {LH.Config['audits']} audits
   * @param {string=} configDir
   * @return {Promise<LegacyResolvedConfig['audits']>}
   */
  static async requireAudits(audits, configDir) {
    const status = {msg: 'Requiring audits', id: 'lh:config:requireAudits'};
    log.time(status, 'verbose');
    const auditDefns = await resolveAuditsToDefns(audits, configDir);
    log.timeEnd(status);
    return auditDefns;
  }

  /**
   * Takes an array of passes with every property now initialized except the
   * gatherers and requires them, (relative to the optional `configDir` if
   * provided) using `resolveModulePath`, returning an array of full Passes.
   * @param {?Array<Required<LH.Config.PassJson>>} passes
   * @param {string=} configDir
   * @return {Promise<LegacyResolvedConfig['passes']>}
   */
  static async requireGatherers(passes, configDir) {
    if (!passes) {
      return null;
    }
    const status = {msg: 'Requiring gatherers', id: 'lh:config:requireGatherers'};
    log.time(status, 'verbose');

    const coreList = Runner.getGathererList();
    const fullPassesPromises = passes.map(async (pass) => {
      const gathererDefns = await Promise.all(
        pass.gatherers
          .map(gatherer => resolveGathererToDefn(gatherer, coreList, configDir))
      );

      // De-dupe gatherers by artifact name because artifact IDs must be unique at runtime.
      const uniqueDefns = Array.from(
        new Map(gathererDefns.map(defn => [defn.instance.name, defn])).values()
      );
      uniqueDefns.forEach(gatherer => assertValidGatherer(gatherer.instance, gatherer.path));

      uniqueDefns.sort((a, b) => {
        const aPriority = internalGathererPriorities[a.instance.name] || 0;
        const bPriority = internalGathererPriorities[b.instance.name] || 0;
        return aPriority - bPriority;
      });

      return Object.assign(pass, {gatherers: uniqueDefns});
    });
    const fullPasses = await Promise.all(fullPassesPromises);

    log.timeEnd(status);
    return fullPasses;
  }
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/gather/session.js
/**
 * @license Copyright 2020 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */





// Controls how long to wait for a response after sending a DevTools protocol command.
const session_DEFAULT_PROTOCOL_TIMEOUT = 30000;

/** @typedef {LH.Protocol.StrictEventEmitterClass<LH.CrdpEvents>} CrdpEventMessageEmitter */
const CrdpEventEmitter = /** @type {CrdpEventMessageEmitter} */ (external_events_);

/** @implements {LH.Gatherer.FRProtocolSession} */
class ProtocolSession extends CrdpEventEmitter {
  /**
   * @param {LH.Puppeteer.CDPSession} cdpSession
   */
  constructor(cdpSession) {
    super();

    this._cdpSession = cdpSession;
    /** @type {LH.Crdp.Target.TargetInfo|undefined} */
    this._targetInfo = undefined;
    /** @type {number|undefined} */
    this._nextProtocolTimeout = undefined;

    this._handleProtocolEvent = this._handleProtocolEvent.bind(this);
    this._cdpSession.on('*', this._handleProtocolEvent);
  }

  id() {
    return this._cdpSession.id();
  }

  /**
   * Re-emit protocol events from the underlying CDPSession.
   * @template {keyof LH.CrdpEvents} E
   * @param {E} method
   * @param {LH.CrdpEvents[E]} params
   */
  _handleProtocolEvent(method, ...params) {
    this.emit(method, ...params);
  }

  /** @param {LH.Crdp.Target.TargetInfo} targetInfo */
  setTargetInfo(targetInfo) {
    this._targetInfo = targetInfo;
  }

  /**
   * @return {boolean}
   */
  hasNextProtocolTimeout() {
    return this._nextProtocolTimeout !== undefined;
  }

  /**
   * @return {number}
   */
  getNextProtocolTimeout() {
    return this._nextProtocolTimeout || session_DEFAULT_PROTOCOL_TIMEOUT;
  }

  /**
   * @param {number} ms
   */
  setNextProtocolTimeout(ms) {
    this._nextProtocolTimeout = ms;
  }

  /**
   * @template {keyof LH.CrdpCommands} C
   * @param {C} method
   * @param {LH.CrdpCommands[C]['paramsType']} params
   * @return {Promise<LH.CrdpCommands[C]['returnType']>}
   */
  sendCommand(method, ...params) {
    const timeoutMs = this.getNextProtocolTimeout();
    this._nextProtocolTimeout = undefined;

    /** @type {NodeJS.Timer|undefined} */
    let timeout;
    const timeoutPromise = new Promise((resolve, reject) => {
      if (timeoutMs === Infinity) return;

      // eslint-disable-next-line max-len
      timeout = setTimeout(reject, timeoutMs, new lh_error_LighthouseError(lh_error_LighthouseError.errors.PROTOCOL_TIMEOUT, {
        protocolMethod: method,
      }));
    });

    const resultPromise = this._cdpSession.send(method, ...params);
    const resultWithTimeoutPromise = Promise.race([resultPromise, timeoutPromise]);

    return resultWithTimeoutPromise.finally(() => {
      if (timeout) clearTimeout(timeout);
    });
  }

  /**
   * Disposes of a session so that it can no longer talk to Chrome.
   * @return {Promise<void>}
   */
  async dispose() {
    this._cdpSession.off('*', this._handleProtocolEvent);
    await this._cdpSession.detach();
  }
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/gather/driver/target-manager.js
/**
 * @license Copyright 2021 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

/**
 * @fileoverview This class tracks multiple targets (the page itself and its OOPIFs) and allows consumers to
 * listen for protocol events before each target is resumed.
 */







/**
 * @typedef {{
 *   target: LH.Crdp.Target.TargetInfo,
 *   cdpSession: LH.Puppeteer.CDPSession,
 *   session: LH.Gatherer.FRProtocolSession,
 *   protocolListener: (event: unknown) => void,
 * }} TargetWithSession
 */

// Add protocol event types to EventEmitter.
/** @typedef {{'protocolevent': [LH.Protocol.RawEventMessage]}} ProtocolEventMap */
/** @typedef {LH.Protocol.StrictEventEmitterClass<ProtocolEventMap>} ProtocolEventMessageEmitter */
const ProtocolEventEmitter = /** @type {ProtocolEventMessageEmitter} */ (external_events_);

/**
 * Tracks targets (the page itself, its iframes, their iframes, etc) as they
 * appear and allows listeners to the flattened protocol events from all targets.
 */
class TargetManager extends ProtocolEventEmitter {
  /** @param {LH.Puppeteer.CDPSession} cdpSession */
  constructor(cdpSession) {
    super();

    this._enabled = false;
    this._rootCdpSession = cdpSession;

    /**
     * A map of target id to target/session information. Used to ensure unique
     * attached targets.
     * @type {Map<string, TargetWithSession>}
     */
    this._targetIdToTargets = new Map();

    this._onSessionAttached = this._onSessionAttached.bind(this);
    this._onFrameNavigated = this._onFrameNavigated.bind(this);
  }

  /**
   * @param {LH.Crdp.Page.FrameNavigatedEvent} frameNavigatedEvent
   */
  async _onFrameNavigated(frameNavigatedEvent) {
    // Child frames are handled in `_onSessionAttached`.
    if (frameNavigatedEvent.frame.parentId) return;
    if (!this._enabled) return;

    // It's not entirely clear when this is necessary, but when the page switches processes on
    // navigating from about:blank to the `requestedUrl`, resetting `setAutoAttach` has been
    // necessary in the past.
    try {
      await this._rootCdpSession.send('Target.setAutoAttach', {
        autoAttach: true,
        flatten: true,
        waitForDebuggerOnStart: true,
      });
    } catch (err) {
      // The page can be closed at the end of the run before this CDP function returns.
      // In these cases, just ignore the error since we won't need the page anyway.
      if (this._enabled) throw err;
    }
  }

  /**
   * @param {string} sessionId
   * @return {LH.Gatherer.FRProtocolSession}
   */
  _findSession(sessionId) {
    for (const {session, cdpSession} of this._targetIdToTargets.values()) {
      if (cdpSession.id() === sessionId) return session;
    }

    throw new Error(`session ${sessionId} not found`);
  }

  /**
   * Returns the root session.
   * @return {LH.Gatherer.FRProtocolSession}
   */
  rootSession() {
    const rootSessionId = this._rootCdpSession.id();
    return this._findSession(rootSessionId);
  }

  /**
   * @param {LH.Puppeteer.CDPSession} cdpSession
   */
  async _onSessionAttached(cdpSession) {
    const newSession = new ProtocolSession(cdpSession);

    try {
      const target = await newSession.sendCommand('Target.getTargetInfo').catch(() => null);
      const targetType = target?.targetInfo?.type;
      const hasValidTargetType = targetType === 'page' || targetType === 'iframe';
      // TODO: should detach from target in this case?
      // See pptr: https://github.com/puppeteer/puppeteer/blob/733cbecf487c71483bee8350e37030edb24bc021/src/common/Page.ts#L495-L526
      if (!target || !hasValidTargetType) return;

      // No need to continue if target has already been seen.
      const targetId = target.targetInfo.targetId;
      if (this._targetIdToTargets.has(targetId)) return;

      newSession.setTargetInfo(target.targetInfo);
      const targetName = target.targetInfo.url || target.targetInfo.targetId;
      lighthouse_logger.verbose('target-manager', `target ${targetName} attached`);

      const trueProtocolListener = this._getProtocolEventListener(newSession.id());
      /** @type {(event: unknown) => void} */
      // @ts-expect-error - pptr currently typed only for single arg emits.
      const protocolListener = trueProtocolListener;
      cdpSession.on('*', protocolListener);
      cdpSession.on('sessionattached', this._onSessionAttached);

      const targetWithSession = {
        target: target.targetInfo,
        cdpSession,
        session: newSession,
        protocolListener,
      };
      this._targetIdToTargets.set(targetId, targetWithSession);

      // We want to receive information about network requests from iframes, so enable the Network domain.
      await newSession.sendCommand('Network.enable');
      // We also want to receive information about subtargets of subtargets, so make sure we autoattach recursively.
      await newSession.sendCommand('Target.setAutoAttach', {
        autoAttach: true,
        flatten: true,
        waitForDebuggerOnStart: true,
      });
    } catch (err) {
      // Sometimes targets can be closed before we even have a chance to listen to their network activity.
      if (/Target closed/.test(err.message)) return;

      throw err;
    } finally {
      // Resume the target if it was paused, but if it's unnecessary, we don't care about the error.
      await newSession.sendCommand('Runtime.runIfWaitingForDebugger').catch(() => {});
    }
  }

  /**
   * Returns a listener for all protocol events from session, and augments the
   * event with the sessionId.
   * @param {string} sessionId
   */
  _getProtocolEventListener(sessionId) {
    /**
     * @template {keyof LH.Protocol.RawEventMessageRecord} EventName
     * @param {EventName} method
     * @param {LH.Protocol.RawEventMessageRecord[EventName]['params']} params
     */
    const onProtocolEvent = (method, params) => {
      // Cast because tsc 4.7 still can't quite track the dependent parameters.
      const payload = /** @type {LH.Protocol.RawEventMessage} */ ({method, params, sessionId});
      this.emit('protocolevent', payload);
    };

    return onProtocolEvent;
  }

  /**
   * @return {Promise<void>}
   */
  async enable() {
    if (this._enabled) return;

    this._enabled = true;
    this._targetIdToTargets = new Map();

    this._rootCdpSession.on('Page.frameNavigated', this._onFrameNavigated);

    await this._rootCdpSession.send('Page.enable');

    // Start with the already attached root session.
    await this._onSessionAttached(this._rootCdpSession);
  }

  /**
   * @return {Promise<void>}
   */
  async disable() {
    this._rootCdpSession.off('Page.frameNavigated', this._onFrameNavigated);

    for (const {cdpSession, protocolListener} of this._targetIdToTargets.values()) {
      cdpSession.off('*', protocolListener);
      cdpSession.off('sessionattached', this._onSessionAttached);
    }

    this._enabled = false;
    this._targetIdToTargets = new Map();
  }
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/gather/driver.js
/**
 * @license Copyright 2020 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */







/** @return {*} */
const throwNotConnectedFn = () => {
  throw new Error('Session not connected');
};

/** @type {LH.Gatherer.FRProtocolSession} */
const throwingSession = {
  setTargetInfo: throwNotConnectedFn,
  hasNextProtocolTimeout: throwNotConnectedFn,
  getNextProtocolTimeout: throwNotConnectedFn,
  setNextProtocolTimeout: throwNotConnectedFn,
  on: throwNotConnectedFn,
  once: throwNotConnectedFn,
  off: throwNotConnectedFn,
  sendCommand: throwNotConnectedFn,
  dispose: throwNotConnectedFn,
};

/** @implements {LH.Gatherer.FRTransitionalDriver} */
class gather_driver_Driver {
  /**
   * @param {LH.Puppeteer.Page} page
   */
  constructor(page) {
    this._page = page;
    /** @type {TargetManager|undefined} */
    this._targetManager = undefined;
    /** @type {ExecutionContext|undefined} */
    this._executionContext = undefined;
    /** @type {Fetcher|undefined} */
    this._fetcher = undefined;

    this.defaultSession = throwingSession;
  }

  /** @return {LH.Gatherer.FRTransitionalDriver['executionContext']} */
  get executionContext() {
    if (!this._executionContext) return throwNotConnectedFn();
    return this._executionContext;
  }

  /** @return {Fetcher} */
  get fetcher() {
    if (!this._fetcher) return throwNotConnectedFn();
    return this._fetcher;
  }

  get targetManager() {
    if (!this._targetManager) return throwNotConnectedFn();
    return this._targetManager;
  }

  /** @return {Promise<string>} */
  async url() {
    return this._page.url();
  }

  /** @return {Promise<void>} */
  async connect() {
    if (this.defaultSession !== throwingSession) return;
    const status = {msg: 'Connecting to browser', id: 'lh:driver:connect'};
    lighthouse_logger.time(status);
    const cdpSession = await this._page.target().createCDPSession();
    this._targetManager = new TargetManager(cdpSession);
    await this._targetManager.enable();
    this.defaultSession = this._targetManager.rootSession();
    this._executionContext = new ExecutionContext(this.defaultSession);
    this._fetcher = new Fetcher(this.defaultSession);
    lighthouse_logger.timeEnd(status);
  }

  /** @return {Promise<void>} */
  async disconnect() {
    if (this.defaultSession === throwingSession) return;
    await this._targetManager?.disable();
    await this.defaultSession.dispose();
  }
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/gather/runner-helpers.js
/**
 * @license Copyright 2021 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

/**
 * @typedef CollectPhaseArtifactOptions
 * @property {import('./driver.js').Driver} driver
 * @property {LH.Puppeteer.Page} page
 * @property {Array<LH.Config.AnyArtifactDefn>} artifactDefinitions
 * @property {ArtifactState} artifactState
 * @property {LH.FRBaseArtifacts} baseArtifacts
 * @property {LH.Gatherer.FRGatherPhase} phase
 * @property {LH.Gatherer.GatherMode} gatherMode
 * @property {Map<string, LH.ArbitraryEqualityMap>} computedCache
 * @property {LH.Config.Settings} settings
 */

/** @typedef {Record<string, Promise<any>>} IntermediateArtifacts */

/** @typedef {Record<CollectPhaseArtifactOptions['phase'], IntermediateArtifacts>} ArtifactState */

/** @typedef {LH.Gatherer.FRTransitionalContext<LH.Gatherer.DependencyKey>['dependencies']} Dependencies */



/**
 *
 * @param {{id: string}} dependency
 * @param {Error} error
 */
function createDependencyError(dependency, error) {
  return new Error(`Dependency "${dependency.id}" failed with exception: ${error.message}`);
}

/** @return {ArtifactState} */
function runner_helpers_getEmptyArtifactState() {
  return {
    startInstrumentation: {},
    startSensitiveInstrumentation: {},
    stopSensitiveInstrumentation: {},
    stopInstrumentation: {},
    getArtifact: {},
  };
}


// We make this an explicit record instead of array, so it's easily type checked.
/** @type {Record<CollectPhaseArtifactOptions['phase'], CollectPhaseArtifactOptions['phase'] | undefined>} */
const phaseToPriorPhase = {
  startInstrumentation: undefined,
  startSensitiveInstrumentation: 'startInstrumentation',
  stopSensitiveInstrumentation: 'startSensitiveInstrumentation',
  stopInstrumentation: 'stopSensitiveInstrumentation',
  getArtifact: 'stopInstrumentation',
};

/**
 * Runs the gatherer methods for a particular navigation phase (startInstrumentation/getArtifact/etc).
 * All gatherer method return values are stored on the artifact state object, organized by phase.
 * This method collects required dependencies, runs the applicable gatherer methods, and saves the
 * result on the artifact state object that was passed as part of `options`.
 *
 * @param {CollectPhaseArtifactOptions} options
 */
async function runner_helpers_collectPhaseArtifacts(options) {
  const {
    driver,
    page,
    artifactDefinitions,
    artifactState,
    baseArtifacts,
    phase,
    gatherMode,
    computedCache,
    settings,
  } = options;
  const priorPhase = phaseToPriorPhase[phase];
  const priorPhaseArtifacts = (priorPhase && artifactState[priorPhase]) || {};

  for (const artifactDefn of artifactDefinitions) {
    const logLevel = phase === 'getArtifact' ? 'log' : 'verbose';
    lighthouse_logger[logLevel](`artifacts:${phase}`, artifactDefn.id);
    const gatherer = artifactDefn.gatherer.instance;

    const priorArtifactPromise = priorPhaseArtifacts[artifactDefn.id] || Promise.resolve();
    const artifactPromise = priorArtifactPromise.then(async () => {
      const dependencies = phase === 'getArtifact'
        ? await collectArtifactDependencies(artifactDefn, artifactState.getArtifact)
        : /** @type {Dependencies} */ ({});

      return gatherer[phase]({
        gatherMode,
        driver,
        page,
        baseArtifacts,
        dependencies,
        computedCache,
        settings,
      });
    });

    await artifactPromise.catch(() => {});
    artifactState[phase][artifactDefn.id] = artifactPromise;
  }
}

/**
 * @param {LH.Config.AnyArtifactDefn} artifact
 * @param {Record<string, LH.Gatherer.PhaseResult>} artifactsById
 * @return {Promise<Dependencies>}
 */
async function collectArtifactDependencies(artifact, artifactsById) {
  if (!artifact.dependencies) return /** @type {Dependencies} */ ({});

  const dependencyPromises = Object.entries(artifact.dependencies).map(
    async ([dependencyName, dependency]) => {
      const dependencyArtifact = artifactsById[dependency.id];
      if (dependencyArtifact === undefined) throw new Error(`"${dependency.id}" did not run`);
      if (dependencyArtifact instanceof Error) {
        throw createDependencyError(dependency, dependencyArtifact);
      }

      const dependencyPromise = Promise.resolve()
        .then(() => dependencyArtifact)
        .catch(err => Promise.reject(createDependencyError(dependency, err)));

      return [dependencyName, await dependencyPromise];
    }
  );

  return Object.fromEntries(await Promise.all(dependencyPromises));
}

/**
 * Awaits the result of artifact, catching errors to set the artifact to an error instead.
 *
 * @param {ArtifactState} artifactState
 * @return {Promise<Partial<LH.GathererArtifacts>>}
 */
async function runner_helpers_awaitArtifacts(artifactState) {
  /** @type {IntermediateArtifacts} */
  const artifacts = {};

  for (const [id, promise] of Object.entries(artifactState.getArtifact)) {
    const artifact = await promise.catch(err => err);
    if (artifact !== undefined) artifacts[id] = artifact;
  }

  return artifacts;
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/config/filters.js
/**
 * @license Copyright 2021 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */





/** @type {Record<keyof LH.FRBaseArtifacts, string>} */
const baseArtifactKeySource = {
  fetchTime: '',
  LighthouseRunWarnings: '',
  BenchmarkIndex: '',
  BenchmarkIndexes: '',
  settings: '',
  Timing: '',
  URL: '',
  PageLoadError: '',
  HostFormFactor: '',
  HostUserAgent: '',
  GatherContext: '',
};

const baseArtifactKeys = Object.keys(baseArtifactKeySource);

// Some audits are used by the report for additional information.
// Keep these audits unless they are *directly* skipped with `skipAudits`.
/** @type {string[]} */
const filterResistantAuditIds = [];

// Some artifacts are used by the report for additional information.
// Always run these artifacts even if audits do not request them.
// These are similar to base artifacts but they cannot be run in all 3 modes.
const filterResistantArtifactIds = ['Stacks', 'NetworkUserAgent', 'FullPageScreenshot'];

/**
 * Returns the set of audit IDs used in the list of categories.
 * If `onlyCategories` is not set, this function returns the list of all audit IDs across all
 * categories.
 *
 * @param {LH.Config.ResolvedConfig['categories']} allCategories
 * @param {string[] | undefined} onlyCategories
 * @return {Set<string>}
 */
function getAuditIdsInCategories(allCategories, onlyCategories) {
  if (!allCategories) return new Set();

  onlyCategories = onlyCategories || Object.keys(allCategories);
  const categories = onlyCategories.map(categoryId => allCategories[categoryId]);
  const auditRefs = categories.flatMap(category => category?.auditRefs || []);
  return new Set(auditRefs.map(auditRef => auditRef.id));
}

/**
 * Filters an array of artifacts down to the set that's required by the specified audits.
 *
 * @param {LH.Config.ResolvedConfig['artifacts']} artifacts
 * @param {LH.Config.ResolvedConfig['audits']} audits
 * @return {LH.Config.ResolvedConfig['artifacts']}
 */
function filterArtifactsByAvailableAudits(artifacts, audits) {
  if (!artifacts) return null;
  if (!audits) return artifacts;

  const artifactsById = new Map(artifacts.map(artifact => [artifact.id, artifact]));

  /** @type {Set<string>} */
  const artifactIdsToKeep = new Set([
    ...filterResistantArtifactIds,
    ...audits.flatMap(audit => audit.implementation.meta.requiredArtifacts),
  ]);

  // Keep all artifacts in the dependency tree of required artifacts.
  // Iterate through all kept artifacts, adding their dependencies along the way, until the set does not change.
  let previousSize = 0;
  while (previousSize !== artifactIdsToKeep.size) {
    previousSize = artifactIdsToKeep.size;
    for (const artifactId of artifactIdsToKeep) {
      const artifact = artifactsById.get(artifactId);
      // This shouldn't happen because the config has passed validation by this point.
      if (!artifact) continue;
      // If the artifact doesn't have any dependencies, we can move on.
      if (!artifact.dependencies) continue;
      // Add all of the artifact's dependencies to our set.
      for (const dep of Object.values(artifact.dependencies)) {
        artifactIdsToKeep.add(dep.id);
      }
    }
  }

  return artifacts.filter(artifact => artifactIdsToKeep.has(artifact.id));
}

/**
 * Filters an array of artifacts down to the set that supports the specified gather mode.
 *
 * @param {LH.Config.ResolvedConfig['artifacts']} artifacts
 * @param {LH.Gatherer.GatherMode} mode
 * @return {LH.Config.ResolvedConfig['artifacts']}
 */
function filterArtifactsByGatherMode(artifacts, mode) {
  if (!artifacts) return null;
  return artifacts.filter(artifact => {
    return artifact.gatherer.instance.meta.supportedModes.includes(mode);
  });
}

/**
 * Filters an array of navigations down to the set supported by the available artifacts.
 *
 * @param {LH.Config.ResolvedConfig['navigations']} navigations
 * @param {Array<LH.Config.AnyArtifactDefn>} availableArtifacts
 * @return {LH.Config.ResolvedConfig['navigations']}
 */
function filterNavigationsByAvailableArtifacts(navigations, availableArtifacts) {
  if (!navigations) return navigations;

  const availableArtifactIds = new Set(
    availableArtifacts.map(artifact => artifact.id).concat(baseArtifactKeys)
  );

  return navigations
    .map(navigation => {
      return {
        ...navigation,
        artifacts: navigation.artifacts.filter((artifact) => availableArtifactIds.has(artifact.id)),
      };
    })
    .filter(navigation => navigation.artifacts.length);
}

/**
 * Filters an array of audits down to the set that can be computed using only the specified artifacts.
 *
 * @param {LH.Config.ResolvedConfig['audits']} audits
 * @param {Array<LH.Config.AnyArtifactDefn>} availableArtifacts
 * @return {LH.Config.ResolvedConfig['audits']}
 */
function filterAuditsByAvailableArtifacts(audits, availableArtifacts) {
  if (!audits) return null;

  const availableArtifactIds = new Set(
    availableArtifacts.map(artifact => artifact.id).concat(baseArtifactKeys)
  );
  return audits.filter(audit => {
    const meta = audit.implementation.meta;
    return meta.requiredArtifacts.every(id => availableArtifactIds.has(id));
  });
}

/**
 * Optional `supportedModes` property can explicitly exclude an audit even if all required artifacts are available.
 *
 * @param {LH.Config.ResolvedConfig['audits']} audits
 * @param {LH.Gatherer.GatherMode} mode
 * @return {LH.Config.ResolvedConfig['audits']}
 */
function filterAuditsByGatherMode(audits, mode) {
  if (!audits) return null;

  return audits.filter(audit => {
    const meta = audit.implementation.meta;
    return !meta.supportedModes || meta.supportedModes.includes(mode);
  });
}

/**
 * Optional `supportedModes` property can explicitly exclude a category even if some audits are available.
 *
 * @param {LH.Config.LegacyResolvedConfig['categories']} categories
 * @param {LH.Gatherer.GatherMode} mode
 * @return {LH.Config.LegacyResolvedConfig['categories']}
 */
function filterCategoriesByGatherMode(categories, mode) {
  if (!categories) return null;

  const categoriesToKeep = Object.entries(categories)
    .filter(([_, category]) => {
      return !category.supportedModes || category.supportedModes.includes(mode);
    });
  return Object.fromEntries(categoriesToKeep);
}

/**
 * Filters a categories object and their auditRefs down to the specified category ids.
 *
 * @param {LH.Config.LegacyResolvedConfig['categories']} categories
 * @param {string[] | null | undefined} onlyCategories
 * @return {LH.Config.LegacyResolvedConfig['categories']}
 */
function filterCategoriesByExplicitFilters(categories, onlyCategories) {
  if (!categories || !onlyCategories) return categories;

  const categoriesToKeep = Object.entries(categories)
    .filter(([categoryId]) => onlyCategories.includes(categoryId));
  return Object.fromEntries(categoriesToKeep);
}

/**
 * Logs a warning if any specified onlyCategory is not a known category that can
 * be included.
 *
 * @param {LH.Config.LegacyResolvedConfig['categories']} allCategories
 * @param {string[] | null} onlyCategories
 * @return {void}
 */
function warnOnUnknownOnlyCategories(allCategories, onlyCategories) {
  if (!onlyCategories) return;

  for (const onlyCategoryId of onlyCategories) {
    if (!allCategories?.[onlyCategoryId]) {
      lighthouse_logger.warn('config', `unrecognized category in 'onlyCategories': ${onlyCategoryId}`);
    }
  }
}

/**
 * Filters a categories object and their auditRefs down to the set that can be computed using
 * only the specified audits.
 *
 * @param {LH.Config.LegacyResolvedConfig['categories']} categories
 * @param {Array<LH.Config.AuditDefn>} availableAudits
 * @return {LH.Config.LegacyResolvedConfig['categories']}
 */
function filterCategoriesByAvailableAudits(categories, availableAudits) {
  if (!categories) return categories;

  const availableAuditIdToMeta = new Map(
    availableAudits.map(audit => [audit.implementation.meta.id, audit.implementation.meta])
  );

  const categoryEntries = Object.entries(categories)
    .map(([categoryId, category]) => {
      const filteredCategory = {
        ...category,
        auditRefs: category.auditRefs.filter(ref => availableAuditIdToMeta.has(ref.id)),
      };

      const didFilter = filteredCategory.auditRefs.length < category.auditRefs.length;
      const hasOnlyManualAudits = filteredCategory.auditRefs.every(ref => {
        const meta = availableAuditIdToMeta.get(ref.id);
        if (!meta) return false;
        return meta.scoreDisplayMode === Audit.SCORING_MODES.MANUAL;
      });

      // If we filtered out audits and the only ones left are manual, remove them too.
      if (didFilter && hasOnlyManualAudits) filteredCategory.auditRefs = [];

      return [categoryId, filteredCategory];
    })
    .filter(entry => typeof entry[1] === 'object' && entry[1].auditRefs.length);

  return Object.fromEntries(categoryEntries);
}

/**
 * Filters a config's artifacts, audits, and categories down to the set that supports the specified gather mode.
 *
 * @param {LH.Config.ResolvedConfig} resolvedConfig
 * @param {LH.Gatherer.GatherMode} mode
 * @return {LH.Config.ResolvedConfig}
 */
function filterConfigByGatherMode(resolvedConfig, mode) {
  const artifacts = filterArtifactsByGatherMode(resolvedConfig.artifacts, mode);
  const supportedAudits = filterAuditsByGatherMode(resolvedConfig.audits, mode);
  const audits = filterAuditsByAvailableArtifacts(supportedAudits, artifacts || []);
  const supportedCategories = filterCategoriesByGatherMode(resolvedConfig.categories, mode);
  const categories = filterCategoriesByAvailableAudits(supportedCategories, audits || []);

  return {
    ...resolvedConfig,
    artifacts,
    audits,
    categories,
  };
}

/**
 * Filters a config's artifacts, audits, and categories down to the requested set.
 * Skip audits overrides inclusion via `onlyAudits`/`onlyCategories`.
 *
 * @param {LH.Config.ResolvedConfig} resolvedConfig
 * @param {Pick<LH.Config.Settings, 'onlyAudits'|'onlyCategories'|'skipAudits'>} filters
 * @return {LH.Config.ResolvedConfig}
 */
function filterConfigByExplicitFilters(resolvedConfig, filters) {
  const {onlyAudits, onlyCategories, skipAudits} = filters;

  warnOnUnknownOnlyCategories(resolvedConfig.categories, onlyCategories);

  let baseAuditIds = getAuditIdsInCategories(resolvedConfig.categories, undefined);
  if (onlyCategories) {
    baseAuditIds = getAuditIdsInCategories(resolvedConfig.categories, onlyCategories);
  } else if (onlyAudits) {
    baseAuditIds = new Set();
  } else if (!resolvedConfig.categories || !Object.keys(resolvedConfig.categories).length) {
    baseAuditIds = new Set(resolvedConfig.audits?.map(audit => audit.implementation.meta.id));
  }

  const auditIdsToKeep = new Set(
    [
      ...baseAuditIds, // Start with our base audits.
      ...(onlyAudits || []), // Additionally include the opt-in audits from `onlyAudits`.
      ...filterResistantAuditIds, // Always include any filter-resistant audits.
    ].filter(auditId => !skipAudits || !skipAudits.includes(auditId))
  );

  const audits = auditIdsToKeep.size && resolvedConfig.audits ?
    resolvedConfig.audits.filter(audit => auditIdsToKeep.has(audit.implementation.meta.id)) :
    resolvedConfig.audits;

  const availableCategories =
    filterCategoriesByAvailableAudits(resolvedConfig.categories, audits || []);
  const categories = filterCategoriesByExplicitFilters(availableCategories, onlyCategories);
  let artifacts = filterArtifactsByAvailableAudits(resolvedConfig.artifacts, audits);
  if (artifacts && resolvedConfig.settings.disableFullPageScreenshot) {
    artifacts = artifacts.filter(({id}) => id !== 'FullPageScreenshot');
  }
  const navigations =
    filterNavigationsByAvailableArtifacts(resolvedConfig.navigations, artifacts || []);

  return {
    ...resolvedConfig,
    artifacts,
    navigations,
    audits,
    categories,
  };
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/config/config.js
/**
 * @license Copyright 2020 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */







 // eslint-disable-line max-len






const config_defaultConfigPath = external_path_.join(
  esm_utils_getModuleDirectory(import.meta),
  '../../config/default-config.js'
);

/**
 * Certain gatherers are destructive to the page state.
 * We should ensure that these gatherers run after any custom gatherers.
 * The default priority should be 0.
 * TODO: Make this an official part of the config or design a different solution.
 * @type {Record<string, number|undefined>}
 */
const internalArtifactPriorities = {
  FullPageScreenshot: 1,
  BFCacheFailures: 1,
};

/**
 * @param {LH.Config|undefined} config
 * @param {{configPath?: string}} context
 * @return {{configWorkingCopy: LH.Config, configDir?: string, configPath?: string}}
 */
function resolveWorkingCopy(config, context) {
  let {configPath} = context;

  if (configPath && !external_path_.isAbsolute(configPath)) {
    throw new Error('configPath must be an absolute path');
  }

  if (!config) {
    config = default_config;
    configPath = config_defaultConfigPath;
  }

  // The directory of the config path, if one was provided.
  const configDir = configPath ? external_path_.dirname(configPath) : undefined;

  return {
    configWorkingCopy: config_helpers_deepCloneConfigJson(config),
    configPath,
    configDir,
  };
}

/**
 * @param {LH.Config} config
 * @return {LH.Config}
 */
function resolveExtensions(config) {
  if (!config.extends) return config;

  if (config.extends !== 'lighthouse:default') {
    throw new Error('`lighthouse:default` is the only valid extension method.');
  }

  const {artifacts, ...extensionJSON} = config;
  const defaultClone = config_helpers_deepCloneConfigJson(default_config);
  const mergedConfig = config_helpers_mergeConfigFragment(defaultClone, extensionJSON);

  mergedConfig.artifacts = mergeConfigFragmentArrayByKey(
    defaultClone.artifacts,
    artifacts,
    artifact => artifact.id
  );

  return mergedConfig;
}

/**
 * Looks up the required artifact IDs for each dependency, throwing if no earlier artifact satisfies the dependency.
 *
 * @param {LH.Config.ArtifactJson} artifact
 * @param {LH.Config.AnyFRGathererDefn} gatherer
 * @param {Map<Symbol, LH.Config.AnyArtifactDefn>} artifactDefnsBySymbol
 * @return {LH.Config.AnyArtifactDefn['dependencies']}
 */
function resolveArtifactDependencies(artifact, gatherer, artifactDefnsBySymbol) {
  if (!('dependencies' in gatherer.instance.meta)) return undefined;

  const dependencies = Object.entries(gatherer.instance.meta.dependencies).map(
      ([dependencyName, artifactSymbol]) => {
        const dependency = artifactDefnsBySymbol.get(artifactSymbol);

        // Check that dependency was defined before us.
        if (!dependency) throwInvalidDependencyOrder(artifact.id, dependencyName);

        // Check that the phase relationship is OK too.
        const validDependency = isValidArtifactDependency(gatherer, dependency.gatherer);
        if (!validDependency) throwInvalidArtifactDependency(artifact.id, dependencyName);

        return [dependencyName, {id: dependency.id}];
      }
  );

  return Object.fromEntries(dependencies);
}

/**
 *
 * @param {LH.Config.ArtifactJson[]|null|undefined} artifacts
 * @param {string|undefined} configDir
 * @return {Promise<LH.Config.AnyArtifactDefn[] | null>}
 */
async function resolveArtifactsToDefns(artifacts, configDir) {
  if (!artifacts) return null;

  const status = {msg: 'Resolve artifact definitions', id: 'lh:config:resolveArtifactsToDefns'};
  lighthouse_logger.time(status, 'verbose');

  const sortedArtifacts = [...artifacts];
  sortedArtifacts.sort((a, b) => {
    const aPriority = internalArtifactPriorities[a.id] || 0;
    const bPriority = internalArtifactPriorities[b.id] || 0;
    return aPriority - bPriority;
  });

  /** @type {Map<Symbol, LH.Config.AnyArtifactDefn>} */
  const artifactDefnsBySymbol = new Map();

  const coreGathererList = runner_Runner.getGathererList();
  const artifactDefns = [];
  for (const artifactJson of sortedArtifacts) {
    /** @type {LH.Config.GathererJson} */
    // @ts-expect-error - remove when legacy runner path is removed.
    const gathererJson = artifactJson.gatherer;

    const gatherer = await config_helpers_resolveGathererToDefn(gathererJson, coreGathererList, configDir);
    if (!isFRGathererDefn(gatherer)) {
      throw new Error(`${gatherer.instance.name} gatherer does not have a Fraggle Rock meta obj`);
    }

    /** @type {LH.Config.AnyArtifactDefn} */
    // @ts-expect-error - Typescript can't validate the gatherer and dependencies match
    // even though it knows that they're each valid on their own.
    const artifact = {
      id: artifactJson.id,
      gatherer,
      dependencies: resolveArtifactDependencies(artifactJson, gatherer, artifactDefnsBySymbol),
    };

    const symbol = artifact.gatherer.instance.meta.symbol;
    if (symbol) artifactDefnsBySymbol.set(symbol, artifact);
    artifactDefns.push(artifact);
  }

  lighthouse_logger.timeEnd(status);
  return artifactDefns;
}

/**
 * Overrides the settings that may not apply to the chosen gather mode.
 *
 * @param {LH.Config.Settings} settings
 * @param {LH.Gatherer.GatherMode} gatherMode
 */
function overrideSettingsForGatherMode(settings, gatherMode) {
  if (gatherMode === 'timespan') {
    if (settings.throttlingMethod === 'simulate') {
      settings.throttlingMethod = 'devtools';
    }
  }
}

/**
 * Overrides the quiet windows when throttlingMethod requires observation.
 *
 * @param {LH.Config.NavigationDefn} navigation
 * @param {LH.Config.Settings} settings
 */
function overrideNavigationThrottlingWindows(navigation, settings) {
  if (navigation.disableThrottling) return;
  if (settings.throttlingMethod === 'simulate') return;

  navigation.cpuQuietThresholdMs = Math.max(
    navigation.cpuQuietThresholdMs || 0,
    nonSimulatedPassConfigOverrides.cpuQuietThresholdMs
  );
  navigation.networkQuietThresholdMs = Math.max(
    navigation.networkQuietThresholdMs || 0,
    nonSimulatedPassConfigOverrides.networkQuietThresholdMs
  );
  navigation.pauseAfterFcpMs = Math.max(
    navigation.pauseAfterFcpMs || 0,
    nonSimulatedPassConfigOverrides.pauseAfterFcpMs
  );
  navigation.pauseAfterLoadMs = Math.max(
    navigation.pauseAfterLoadMs || 0,
    nonSimulatedPassConfigOverrides.pauseAfterLoadMs
  );
}

/**
 * @param {LH.Config.AnyArtifactDefn[]|null|undefined} artifactDefns
 * @param {LH.Config.Settings} settings
 * @return {LH.Config.NavigationDefn[] | null}
 */
function resolveFakeNavigations(artifactDefns, settings) {
  if (!artifactDefns) return null;

  const status = {msg: 'Resolve navigation definitions', id: 'lh:config:resolveNavigationsToDefns'};
  lighthouse_logger.time(status, 'verbose');

  const resolvedNavigation = {
    ...defaultNavigationConfig,
    artifacts: artifactDefns,
    pauseAfterFcpMs: settings.pauseAfterFcpMs,
    pauseAfterLoadMs: settings.pauseAfterLoadMs,
    networkQuietThresholdMs: settings.networkQuietThresholdMs,
    cpuQuietThresholdMs: settings.cpuQuietThresholdMs,
    blankPage: settings.blankPage,
  };

  overrideNavigationThrottlingWindows(resolvedNavigation, settings);

  const navigations = [resolvedNavigation];
  assertArtifactTopologicalOrder(navigations);

  lighthouse_logger.timeEnd(status);
  return navigations;
}

/**
 * @param {LH.Gatherer.GatherMode} gatherMode
 * @param {LH.Config=} config
 * @param {LH.Flags=} flags
 * @return {Promise<{resolvedConfig: LH.Config.ResolvedConfig, warnings: string[]}>}
 */
async function config_initializeConfig(gatherMode, config, flags = {}) {
  const status = {msg: 'Initialize config', id: 'lh:config'};
  lighthouse_logger.time(status, 'verbose');

  let {configWorkingCopy, configDir} = resolveWorkingCopy(config, flags);

  configWorkingCopy = resolveExtensions(configWorkingCopy);
  configWorkingCopy = await config_helpers_mergePlugins(configWorkingCopy, configDir, flags);

  const settings = config_helpers_resolveSettings(configWorkingCopy.settings || {}, flags);
  overrideSettingsForGatherMode(settings, gatherMode);

  const artifacts = await resolveArtifactsToDefns(configWorkingCopy.artifacts, configDir);

  const navigations = resolveFakeNavigations(artifacts, settings);

  /** @type {LH.Config.ResolvedConfig} */
  let resolvedConfig = {
    artifacts,
    navigations,
    audits: await config_helpers_resolveAuditsToDefns(configWorkingCopy.audits, configDir),
    categories: configWorkingCopy.categories || null,
    groups: configWorkingCopy.groups || null,
    settings,
  };

  const {warnings} = assertValidConfig(resolvedConfig);

  resolvedConfig = filterConfigByGatherMode(resolvedConfig, gatherMode);
  resolvedConfig = filterConfigByExplicitFilters(resolvedConfig, settings);

  lighthouse_logger.timeEnd(status);
  return {resolvedConfig, warnings};
}

/**
 * @param {LH.Config.ResolvedConfig} resolvedConfig
 * @return {string}
 */
function getConfigDisplayString(resolvedConfig) {
  /** @type {LH.Config.ResolvedConfig} */
  const resolvedConfigCopy = JSON.parse(JSON.stringify(resolvedConfig));

  if (resolvedConfigCopy.navigations) {
    for (const navigation of resolvedConfigCopy.navigations) {
      for (let i = 0; i < navigation.artifacts.length; ++i) {
        // @ts-expect-error Breaking the Config.AnyArtifactDefn type.
        navigation.artifacts[i] = navigation.artifacts[i].id;
      }
    }
  }

  if (resolvedConfigCopy.artifacts) {
    for (const artifactDefn of resolvedConfigCopy.artifacts) {
      // @ts-expect-error Breaking the Config.AnyArtifactDefn type.
      artifactDefn.gatherer = artifactDefn.gatherer.path;
      // Dependencies are not declared on Config JSON
      artifactDefn.dependencies = undefined;
    }
  }

  if (resolvedConfigCopy.audits) {
    for (const auditDefn of resolvedConfigCopy.audits) {
      // @ts-expect-error Breaking the Config.AuditDefn type.
      auditDefn.implementation = undefined;
      if (Object.keys(auditDefn.options).length === 0) {
        // @ts-expect-error Breaking the Config.AuditDefn type.
        auditDefn.options = undefined;
      }
    }
  }

  // Printed config is more useful with localized strings.
  format.replaceIcuMessages(resolvedConfigCopy, resolvedConfigCopy.settings.locale);

  return JSON.stringify(resolvedConfigCopy, null, 2);
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/gather/snapshot-runner.js
/**
 * @license Copyright 2020 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */









/**
 * @param {LH.Puppeteer.Page} page
 * @param {{config?: LH.Config, flags?: LH.Flags}} [options]
 * @return {Promise<LH.Gatherer.FRGatherResult>}
 */
async function snapshot_runner_snapshotGather(page, options = {}) {
  const {flags = {}, config} = options;
  log.setLevel(flags.logLevel || 'error');

  const {resolvedConfig} = await initializeConfig('snapshot', config, flags);
  const driver = new Driver(page);
  await driver.connect();

  /** @type {Map<string, LH.ArbitraryEqualityMap>} */
  const computedCache = new Map();
  const url = await driver.url();

  const runnerOptions = {resolvedConfig, computedCache};
  const artifacts = await Runner.gather(
    async () => {
      const baseArtifacts =
        await getBaseArtifacts(resolvedConfig, driver, {gatherMode: 'snapshot'});
      baseArtifacts.URL = {
        finalDisplayedUrl: url,
      };

      const artifactDefinitions = resolvedConfig.artifacts || [];
      const artifactState = getEmptyArtifactState();
      await collectPhaseArtifacts({
        phase: 'getArtifact',
        gatherMode: 'snapshot',
        driver,
        page,
        baseArtifacts,
        artifactDefinitions,
        artifactState,
        computedCache,
        settings: resolvedConfig.settings,
      });

      await driver.disconnect();

      const artifacts = await awaitArtifacts(artifactState);
      return finalizeArtifacts(baseArtifacts, artifacts);
    },
    runnerOptions
  );
  return {artifacts, runnerOptions};
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/gather/timespan-runner.js
/**
 * @license Copyright 2021 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */










/**
 * @param {LH.Puppeteer.Page} page
 * @param {{config?: LH.Config, flags?: LH.Flags}} [options]
 * @return {Promise<{endTimespanGather(): Promise<LH.Gatherer.FRGatherResult>}>}
 */
async function timespan_runner_startTimespanGather(page, options = {}) {
  const {flags = {}, config} = options;
  log.setLevel(flags.logLevel || 'error');

  const {resolvedConfig} = await initializeConfig('timespan', config, flags);
  const driver = new Driver(page);
  await driver.connect();

  /** @type {Map<string, LH.ArbitraryEqualityMap>} */
  const computedCache = new Map();
  const artifactDefinitions = resolvedConfig.artifacts || [];
  const baseArtifacts = await getBaseArtifacts(resolvedConfig, driver, {gatherMode: 'timespan'});
  const artifactState = getEmptyArtifactState();
  /** @type {Omit<import('./runner-helpers.js').CollectPhaseArtifactOptions, 'phase'>} */
  const phaseOptions = {
    driver,
    page,
    artifactDefinitions,
    artifactState,
    baseArtifacts,
    computedCache,
    gatherMode: 'timespan',
    settings: resolvedConfig.settings,
  };

  await prepareTargetForTimespanMode(driver, resolvedConfig.settings);

  const disableAsyncStacks = await enableAsyncStacks(driver.defaultSession);

  await collectPhaseArtifacts({phase: 'startInstrumentation', ...phaseOptions});
  await collectPhaseArtifacts({phase: 'startSensitiveInstrumentation', ...phaseOptions});

  return {
    async endTimespanGather() {
      const finalDisplayedUrl = await driver.url();

      const runnerOptions = {resolvedConfig, computedCache};
      const artifacts = await Runner.gather(
        async () => {
          baseArtifacts.URL = {finalDisplayedUrl};

          await collectPhaseArtifacts({phase: 'stopSensitiveInstrumentation', ...phaseOptions});
          await collectPhaseArtifacts({phase: 'stopInstrumentation', ...phaseOptions});

          // bf-cache-failures can emit `Page.frameNavigated` at the end of the run.
          // This can cause us to issue protocol commands after the target closes.
          // We should disable our `Page.frameNavigated` handlers before that.
          await disableAsyncStacks();

          await collectPhaseArtifacts({phase: 'getArtifact', ...phaseOptions});
          await driver.disconnect();

          const artifacts = await awaitArtifacts(artifactState);
          return finalizeArtifacts(baseArtifacts, artifacts);
        },
        runnerOptions
      );
      return {artifacts, runnerOptions};
    },
  };
}



// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/api/Browser.js
var Browser = __nccwpck_require__(6468);
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/api/Page.js
var Page = __nccwpck_require__(3297);
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/api/api.js
/**
 * Copyright 2022 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */





//# sourceMappingURL=api.js.map
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/Accessibility.js
/**
 * Copyright 2018 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _Accessibility_client, _AXNode_instances, _AXNode_richlyEditable, _AXNode_editable, _AXNode_focusable, _AXNode_hidden, _AXNode_name, _AXNode_role, _AXNode_ignored, _AXNode_cachedHasFocusableChild, _AXNode_isPlainTextField, _AXNode_isTextOnlyObject, _AXNode_hasFocusableChild;
/**
 * The Accessibility class provides methods for inspecting Chromium's
 * accessibility tree. The accessibility tree is used by assistive technology
 * such as {@link https://en.wikipedia.org/wiki/Screen_reader | screen readers} or
 * {@link https://en.wikipedia.org/wiki/Switch_access | switches}.
 *
 * @remarks
 *
 * Accessibility is a very platform-specific thing. On different platforms,
 * there are different screen readers that might have wildly different output.
 *
 * Blink - Chrome's rendering engine - has a concept of "accessibility tree",
 * which is then translated into different platform-specific APIs. Accessibility
 * namespace gives users access to the Blink Accessibility Tree.
 *
 * Most of the accessibility tree gets filtered out when converting from Blink
 * AX Tree to Platform-specific AX-Tree or by assistive technologies themselves.
 * By default, Puppeteer tries to approximate this filtering, exposing only
 * the "interesting" nodes of the tree.
 *
 * @public
 */
class Accessibility {
    /**
     * @internal
     */
    constructor(client) {
        _Accessibility_client.set(this, void 0);
        __classPrivateFieldSet(this, _Accessibility_client, client, "f");
    }
    /**
     * Captures the current state of the accessibility tree.
     * The returned object represents the root accessible node of the page.
     *
     * @remarks
     *
     * **NOTE** The Chromium accessibility tree contains nodes that go unused on
     * most platforms and by most screen readers. Puppeteer will discard them as
     * well for an easier to process tree, unless `interestingOnly` is set to
     * `false`.
     *
     * @example
     * An example of dumping the entire accessibility tree:
     *
     * ```ts
     * const snapshot = await page.accessibility.snapshot();
     * console.log(snapshot);
     * ```
     *
     * @example
     * An example of logging the focused node's name:
     *
     * ```ts
     * const snapshot = await page.accessibility.snapshot();
     * const node = findFocusedNode(snapshot);
     * console.log(node && node.name);
     *
     * function findFocusedNode(node) {
     *   if (node.focused) return node;
     *   for (const child of node.children || []) {
     *     const foundNode = findFocusedNode(child);
     *     return foundNode;
     *   }
     *   return null;
     * }
     * ```
     *
     * @returns An AXNode object representing the snapshot.
     */
    async snapshot(options = {}) {
        var _a, _b;
        const { interestingOnly = true, root = null } = options;
        const { nodes } = await __classPrivateFieldGet(this, _Accessibility_client, "f").send('Accessibility.getFullAXTree');
        let backendNodeId;
        if (root) {
            const { node } = await __classPrivateFieldGet(this, _Accessibility_client, "f").send('DOM.describeNode', {
                objectId: root.remoteObject().objectId,
            });
            backendNodeId = node.backendNodeId;
        }
        const defaultRoot = AXNode.createTree(nodes);
        let needle = defaultRoot;
        if (backendNodeId) {
            needle = defaultRoot.find(node => {
                return node.payload.backendDOMNodeId === backendNodeId;
            });
            if (!needle) {
                return null;
            }
        }
        if (!interestingOnly) {
            return (_a = this.serializeTree(needle)[0]) !== null && _a !== void 0 ? _a : null;
        }
        const interestingNodes = new Set();
        this.collectInterestingNodes(interestingNodes, defaultRoot, false);
        if (!interestingNodes.has(needle)) {
            return null;
        }
        return (_b = this.serializeTree(needle, interestingNodes)[0]) !== null && _b !== void 0 ? _b : null;
    }
    serializeTree(node, interestingNodes) {
        const children = [];
        for (const child of node.children) {
            children.push(...this.serializeTree(child, interestingNodes));
        }
        if (interestingNodes && !interestingNodes.has(node)) {
            return children;
        }
        const serializedNode = node.serialize();
        if (children.length) {
            serializedNode.children = children;
        }
        return [serializedNode];
    }
    collectInterestingNodes(collection, node, insideControl) {
        if (node.isInteresting(insideControl)) {
            collection.add(node);
        }
        if (node.isLeafNode()) {
            return;
        }
        insideControl = insideControl || node.isControl();
        for (const child of node.children) {
            this.collectInterestingNodes(collection, child, insideControl);
        }
    }
}
_Accessibility_client = new WeakMap();
class AXNode {
    constructor(payload) {
        _AXNode_instances.add(this);
        this.children = [];
        _AXNode_richlyEditable.set(this, false);
        _AXNode_editable.set(this, false);
        _AXNode_focusable.set(this, false);
        _AXNode_hidden.set(this, false);
        _AXNode_name.set(this, void 0);
        _AXNode_role.set(this, void 0);
        _AXNode_ignored.set(this, void 0);
        _AXNode_cachedHasFocusableChild.set(this, void 0);
        this.payload = payload;
        __classPrivateFieldSet(this, _AXNode_name, this.payload.name ? this.payload.name.value : '', "f");
        __classPrivateFieldSet(this, _AXNode_role, this.payload.role ? this.payload.role.value : 'Unknown', "f");
        __classPrivateFieldSet(this, _AXNode_ignored, this.payload.ignored, "f");
        for (const property of this.payload.properties || []) {
            if (property.name === 'editable') {
                __classPrivateFieldSet(this, _AXNode_richlyEditable, property.value.value === 'richtext', "f");
                __classPrivateFieldSet(this, _AXNode_editable, true, "f");
            }
            if (property.name === 'focusable') {
                __classPrivateFieldSet(this, _AXNode_focusable, property.value.value, "f");
            }
            if (property.name === 'hidden') {
                __classPrivateFieldSet(this, _AXNode_hidden, property.value.value, "f");
            }
        }
    }
    find(predicate) {
        if (predicate(this)) {
            return this;
        }
        for (const child of this.children) {
            const result = child.find(predicate);
            if (result) {
                return result;
            }
        }
        return null;
    }
    isLeafNode() {
        if (!this.children.length) {
            return true;
        }
        // These types of objects may have children that we use as internal
        // implementation details, but we want to expose them as leaves to platform
        // accessibility APIs because screen readers might be confused if they find
        // any children.
        if (__classPrivateFieldGet(this, _AXNode_instances, "m", _AXNode_isPlainTextField).call(this) || __classPrivateFieldGet(this, _AXNode_instances, "m", _AXNode_isTextOnlyObject).call(this)) {
            return true;
        }
        // Roles whose children are only presentational according to the ARIA and
        // HTML5 Specs should be hidden from screen readers.
        // (Note that whilst ARIA buttons can have only presentational children, HTML5
        // buttons are allowed to have content.)
        switch (__classPrivateFieldGet(this, _AXNode_role, "f")) {
            case 'doc-cover':
            case 'graphics-symbol':
            case 'img':
            case 'Meter':
            case 'scrollbar':
            case 'slider':
            case 'separator':
            case 'progressbar':
                return true;
            default:
                break;
        }
        // Here and below: Android heuristics
        if (__classPrivateFieldGet(this, _AXNode_instances, "m", _AXNode_hasFocusableChild).call(this)) {
            return false;
        }
        if (__classPrivateFieldGet(this, _AXNode_focusable, "f") && __classPrivateFieldGet(this, _AXNode_name, "f")) {
            return true;
        }
        if (__classPrivateFieldGet(this, _AXNode_role, "f") === 'heading' && __classPrivateFieldGet(this, _AXNode_name, "f")) {
            return true;
        }
        return false;
    }
    isControl() {
        switch (__classPrivateFieldGet(this, _AXNode_role, "f")) {
            case 'button':
            case 'checkbox':
            case 'ColorWell':
            case 'combobox':
            case 'DisclosureTriangle':
            case 'listbox':
            case 'menu':
            case 'menubar':
            case 'menuitem':
            case 'menuitemcheckbox':
            case 'menuitemradio':
            case 'radio':
            case 'scrollbar':
            case 'searchbox':
            case 'slider':
            case 'spinbutton':
            case 'switch':
            case 'tab':
            case 'textbox':
            case 'tree':
            case 'treeitem':
                return true;
            default:
                return false;
        }
    }
    isInteresting(insideControl) {
        const role = __classPrivateFieldGet(this, _AXNode_role, "f");
        if (role === 'Ignored' || __classPrivateFieldGet(this, _AXNode_hidden, "f") || __classPrivateFieldGet(this, _AXNode_ignored, "f")) {
            return false;
        }
        if (__classPrivateFieldGet(this, _AXNode_focusable, "f") || __classPrivateFieldGet(this, _AXNode_richlyEditable, "f")) {
            return true;
        }
        // If it's not focusable but has a control role, then it's interesting.
        if (this.isControl()) {
            return true;
        }
        // A non focusable child of a control is not interesting
        if (insideControl) {
            return false;
        }
        return this.isLeafNode() && !!__classPrivateFieldGet(this, _AXNode_name, "f");
    }
    serialize() {
        const properties = new Map();
        for (const property of this.payload.properties || []) {
            properties.set(property.name.toLowerCase(), property.value.value);
        }
        if (this.payload.name) {
            properties.set('name', this.payload.name.value);
        }
        if (this.payload.value) {
            properties.set('value', this.payload.value.value);
        }
        if (this.payload.description) {
            properties.set('description', this.payload.description.value);
        }
        const node = {
            role: __classPrivateFieldGet(this, _AXNode_role, "f"),
        };
        const userStringProperties = [
            'name',
            'value',
            'description',
            'keyshortcuts',
            'roledescription',
            'valuetext',
        ];
        const getUserStringPropertyValue = (key) => {
            return properties.get(key);
        };
        for (const userStringProperty of userStringProperties) {
            if (!properties.has(userStringProperty)) {
                continue;
            }
            node[userStringProperty] = getUserStringPropertyValue(userStringProperty);
        }
        const booleanProperties = [
            'disabled',
            'expanded',
            'focused',
            'modal',
            'multiline',
            'multiselectable',
            'readonly',
            'required',
            'selected',
        ];
        const getBooleanPropertyValue = (key) => {
            return properties.get(key);
        };
        for (const booleanProperty of booleanProperties) {
            // RootWebArea's treat focus differently than other nodes. They report whether
            // their frame  has focus, not whether focus is specifically on the root
            // node.
            if (booleanProperty === 'focused' && __classPrivateFieldGet(this, _AXNode_role, "f") === 'RootWebArea') {
                continue;
            }
            const value = getBooleanPropertyValue(booleanProperty);
            if (!value) {
                continue;
            }
            node[booleanProperty] = getBooleanPropertyValue(booleanProperty);
        }
        const tristateProperties = ['checked', 'pressed'];
        for (const tristateProperty of tristateProperties) {
            if (!properties.has(tristateProperty)) {
                continue;
            }
            const value = properties.get(tristateProperty);
            node[tristateProperty] =
                value === 'mixed' ? 'mixed' : value === 'true' ? true : false;
        }
        const numericalProperties = [
            'level',
            'valuemax',
            'valuemin',
        ];
        const getNumericalPropertyValue = (key) => {
            return properties.get(key);
        };
        for (const numericalProperty of numericalProperties) {
            if (!properties.has(numericalProperty)) {
                continue;
            }
            node[numericalProperty] = getNumericalPropertyValue(numericalProperty);
        }
        const tokenProperties = [
            'autocomplete',
            'haspopup',
            'invalid',
            'orientation',
        ];
        const getTokenPropertyValue = (key) => {
            return properties.get(key);
        };
        for (const tokenProperty of tokenProperties) {
            const value = getTokenPropertyValue(tokenProperty);
            if (!value || value === 'false') {
                continue;
            }
            node[tokenProperty] = getTokenPropertyValue(tokenProperty);
        }
        return node;
    }
    static createTree(payloads) {
        const nodeById = new Map();
        for (const payload of payloads) {
            nodeById.set(payload.nodeId, new AXNode(payload));
        }
        for (const node of nodeById.values()) {
            for (const childId of node.payload.childIds || []) {
                const child = nodeById.get(childId);
                if (child) {
                    node.children.push(child);
                }
            }
        }
        return nodeById.values().next().value;
    }
}
_AXNode_richlyEditable = new WeakMap(), _AXNode_editable = new WeakMap(), _AXNode_focusable = new WeakMap(), _AXNode_hidden = new WeakMap(), _AXNode_name = new WeakMap(), _AXNode_role = new WeakMap(), _AXNode_ignored = new WeakMap(), _AXNode_cachedHasFocusableChild = new WeakMap(), _AXNode_instances = new WeakSet(), _AXNode_isPlainTextField = function _AXNode_isPlainTextField() {
    if (__classPrivateFieldGet(this, _AXNode_richlyEditable, "f")) {
        return false;
    }
    if (__classPrivateFieldGet(this, _AXNode_editable, "f")) {
        return true;
    }
    return __classPrivateFieldGet(this, _AXNode_role, "f") === 'textbox' || __classPrivateFieldGet(this, _AXNode_role, "f") === 'searchbox';
}, _AXNode_isTextOnlyObject = function _AXNode_isTextOnlyObject() {
    const role = __classPrivateFieldGet(this, _AXNode_role, "f");
    return role === 'LineBreak' || role === 'text' || role === 'InlineTextBox';
}, _AXNode_hasFocusableChild = function _AXNode_hasFocusableChild() {
    if (__classPrivateFieldGet(this, _AXNode_cachedHasFocusableChild, "f") === undefined) {
        __classPrivateFieldSet(this, _AXNode_cachedHasFocusableChild, false, "f");
        for (const child of this.children) {
            if (__classPrivateFieldGet(child, _AXNode_focusable, "f") || __classPrivateFieldGet(child, _AXNode_instances, "m", _AXNode_hasFocusableChild).call(child)) {
                __classPrivateFieldSet(this, _AXNode_cachedHasFocusableChild, true, "f");
                break;
            }
        }
    }
    return __classPrivateFieldGet(this, _AXNode_cachedHasFocusableChild, "f");
};
//# sourceMappingURL=Accessibility.js.map
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/AriaQueryHandler.js
var AriaQueryHandler = __nccwpck_require__(3503);
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/util/assert.js
var assert = __nccwpck_require__(5172);
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/Connection.js
var common_Connection = __nccwpck_require__(9432);
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/util.js
var util = __nccwpck_require__(1823);
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/EventEmitter.js + 1 modules
var common_EventEmitter = __nccwpck_require__(8856);
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/ExecutionContext.js + 1 modules
var common_ExecutionContext = __nccwpck_require__(7365);
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/JSHandle.js
var JSHandle = __nccwpck_require__(7979);
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/util/DeferredPromise.js
var DeferredPromise = __nccwpck_require__(761);
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/WebWorker.js
var WebWorker_classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var WebWorker_classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _WebWorker_executionContext, _WebWorker_client, _WebWorker_url;





/**
 * This class represents a
 * {@link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API | WebWorker}.
 *
 * @remarks
 * The events `workercreated` and `workerdestroyed` are emitted on the page
 * object to signal the worker lifecycle.
 *
 * @example
 *
 * ```ts
 * page.on('workercreated', worker =>
 *   console.log('Worker created: ' + worker.url())
 * );
 * page.on('workerdestroyed', worker =>
 *   console.log('Worker destroyed: ' + worker.url())
 * );
 *
 * console.log('Current workers:');
 * for (const worker of page.workers()) {
 *   console.log('  ' + worker.url());
 * }
 * ```
 *
 * @public
 */
class WebWorker extends common_EventEmitter/* EventEmitter */.v {
    /**
     * @internal
     */
    constructor(client, url, consoleAPICalled, exceptionThrown) {
        super();
        _WebWorker_executionContext.set(this, (0,DeferredPromise/* createDeferredPromise */.W)());
        _WebWorker_client.set(this, void 0);
        _WebWorker_url.set(this, void 0);
        WebWorker_classPrivateFieldSet(this, _WebWorker_client, client, "f");
        WebWorker_classPrivateFieldSet(this, _WebWorker_url, url, "f");
        WebWorker_classPrivateFieldGet(this, _WebWorker_client, "f").once('Runtime.executionContextCreated', async (event) => {
            const context = new common_ExecutionContext/* ExecutionContext */.r(client, event.context);
            WebWorker_classPrivateFieldGet(this, _WebWorker_executionContext, "f").resolve(context);
        });
        WebWorker_classPrivateFieldGet(this, _WebWorker_client, "f").on('Runtime.consoleAPICalled', async (event) => {
            const context = await WebWorker_classPrivateFieldGet(this, _WebWorker_executionContext, "f");
            return consoleAPICalled(event.type, event.args.map((object) => {
                return new JSHandle/* CDPJSHandle */.U(context, object);
            }), event.stackTrace);
        });
        WebWorker_classPrivateFieldGet(this, _WebWorker_client, "f").on('Runtime.exceptionThrown', exception => {
            return exceptionThrown(exception.exceptionDetails);
        });
        // This might fail if the target is closed before we receive all execution contexts.
        WebWorker_classPrivateFieldGet(this, _WebWorker_client, "f").send('Runtime.enable').catch(util/* debugError */.ur);
    }
    /**
     * @internal
     */
    async executionContext() {
        return WebWorker_classPrivateFieldGet(this, _WebWorker_executionContext, "f");
    }
    /**
     * @returns The URL of this web worker.
     */
    url() {
        return WebWorker_classPrivateFieldGet(this, _WebWorker_url, "f");
    }
    /**
     * If the function passed to the `worker.evaluate` returns a Promise, then
     * `worker.evaluate` would wait for the promise to resolve and return its
     * value. If the function passed to the `worker.evaluate` returns a
     * non-serializable value, then `worker.evaluate` resolves to `undefined`.
     * DevTools Protocol also supports transferring some additional values that
     * are not serializable by `JSON`: `-0`, `NaN`, `Infinity`, `-Infinity`, and
     * bigint literals.
     * Shortcut for `await worker.executionContext()).evaluate(pageFunction, ...args)`.
     *
     * @param pageFunction - Function to be evaluated in the worker context.
     * @param args - Arguments to pass to `pageFunction`.
     * @returns Promise which resolves to the return value of `pageFunction`.
     */
    async evaluate(pageFunction, ...args) {
        const context = await WebWorker_classPrivateFieldGet(this, _WebWorker_executionContext, "f");
        return context.evaluate(pageFunction, ...args);
    }
    /**
     * The only difference between `worker.evaluate` and `worker.evaluateHandle`
     * is that `worker.evaluateHandle` returns in-page object (JSHandle). If the
     * function passed to the `worker.evaluateHandle` returns a `Promise`, then
     * `worker.evaluateHandle` would wait for the promise to resolve and return
     * its value. Shortcut for
     * `await worker.executionContext()).evaluateHandle(pageFunction, ...args)`
     *
     * @param pageFunction - Function to be evaluated in the page context.
     * @param args - Arguments to pass to `pageFunction`.
     * @returns Promise which resolves to the return value of `pageFunction`.
     */
    async evaluateHandle(pageFunction, ...args) {
        const context = await WebWorker_classPrivateFieldGet(this, _WebWorker_executionContext, "f");
        return context.evaluateHandle(pageFunction, ...args);
    }
}
_WebWorker_executionContext = new WeakMap(), _WebWorker_client = new WeakMap(), _WebWorker_url = new WeakMap();
//# sourceMappingURL=WebWorker.js.map
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/util/ErrorLike.js
var ErrorLike = __nccwpck_require__(9713);
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/ConsoleMessage.js
/**
 * Copyright 2020 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var ConsoleMessage_classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var ConsoleMessage_classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _ConsoleMessage_type, _ConsoleMessage_text, _ConsoleMessage_args, _ConsoleMessage_stackTraceLocations;
/**
 * ConsoleMessage objects are dispatched by page via the 'console' event.
 * @public
 */
class ConsoleMessage {
    /**
     * @public
     */
    constructor(type, text, args, stackTraceLocations) {
        _ConsoleMessage_type.set(this, void 0);
        _ConsoleMessage_text.set(this, void 0);
        _ConsoleMessage_args.set(this, void 0);
        _ConsoleMessage_stackTraceLocations.set(this, void 0);
        ConsoleMessage_classPrivateFieldSet(this, _ConsoleMessage_type, type, "f");
        ConsoleMessage_classPrivateFieldSet(this, _ConsoleMessage_text, text, "f");
        ConsoleMessage_classPrivateFieldSet(this, _ConsoleMessage_args, args, "f");
        ConsoleMessage_classPrivateFieldSet(this, _ConsoleMessage_stackTraceLocations, stackTraceLocations, "f");
    }
    /**
     * @returns The type of the console message.
     */
    type() {
        return ConsoleMessage_classPrivateFieldGet(this, _ConsoleMessage_type, "f");
    }
    /**
     * @returns The text of the console message.
     */
    text() {
        return ConsoleMessage_classPrivateFieldGet(this, _ConsoleMessage_text, "f");
    }
    /**
     * @returns An array of arguments passed to the console.
     */
    args() {
        return ConsoleMessage_classPrivateFieldGet(this, _ConsoleMessage_args, "f");
    }
    /**
     * @returns The location of the console message.
     */
    location() {
        var _a;
        return (_a = ConsoleMessage_classPrivateFieldGet(this, _ConsoleMessage_stackTraceLocations, "f")[0]) !== null && _a !== void 0 ? _a : {};
    }
    /**
     * @returns The array of locations on the stack of the console message.
     */
    stackTrace() {
        return ConsoleMessage_classPrivateFieldGet(this, _ConsoleMessage_stackTraceLocations, "f");
    }
}
_ConsoleMessage_type = new WeakMap(), _ConsoleMessage_text = new WeakMap(), _ConsoleMessage_args = new WeakMap(), _ConsoleMessage_stackTraceLocations = new WeakMap();
//# sourceMappingURL=ConsoleMessage.js.map
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/Coverage.js
/**
 * Copyright 2017 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Coverage_classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var Coverage_classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _Coverage_jsCoverage, _Coverage_cssCoverage, _JSCoverage_instances, _JSCoverage_client, _JSCoverage_enabled, _JSCoverage_scriptURLs, _JSCoverage_scriptSources, _JSCoverage_eventListeners, _JSCoverage_resetOnNavigation, _JSCoverage_reportAnonymousScripts, _JSCoverage_includeRawScriptCoverage, _JSCoverage_onExecutionContextsCleared, _JSCoverage_onScriptParsed, _CSSCoverage_instances, _CSSCoverage_client, _CSSCoverage_enabled, _CSSCoverage_stylesheetURLs, _CSSCoverage_stylesheetSources, _CSSCoverage_eventListeners, _CSSCoverage_resetOnNavigation, _CSSCoverage_onExecutionContextsCleared, _CSSCoverage_onStyleSheet;




/**
 * The Coverage class provides methods to gathers information about parts of
 * JavaScript and CSS that were used by the page.
 *
 * @remarks
 * To output coverage in a form consumable by {@link https://github.com/istanbuljs | Istanbul},
 * see {@link https://github.com/istanbuljs/puppeteer-to-istanbul | puppeteer-to-istanbul}.
 *
 * @example
 * An example of using JavaScript and CSS coverage to get percentage of initially
 * executed code:
 *
 * ```ts
 * // Enable both JavaScript and CSS coverage
 * await Promise.all([
 *   page.coverage.startJSCoverage(),
 *   page.coverage.startCSSCoverage(),
 * ]);
 * // Navigate to page
 * await page.goto('https://example.com');
 * // Disable both JavaScript and CSS coverage
 * const [jsCoverage, cssCoverage] = await Promise.all([
 *   page.coverage.stopJSCoverage(),
 *   page.coverage.stopCSSCoverage(),
 * ]);
 * let totalBytes = 0;
 * let usedBytes = 0;
 * const coverage = [...jsCoverage, ...cssCoverage];
 * for (const entry of coverage) {
 *   totalBytes += entry.text.length;
 *   for (const range of entry.ranges) usedBytes += range.end - range.start - 1;
 * }
 * console.log(`Bytes used: ${(usedBytes / totalBytes) * 100}%`);
 * ```
 *
 * @public
 */
class Coverage {
    constructor(client) {
        _Coverage_jsCoverage.set(this, void 0);
        _Coverage_cssCoverage.set(this, void 0);
        Coverage_classPrivateFieldSet(this, _Coverage_jsCoverage, new JSCoverage(client), "f");
        Coverage_classPrivateFieldSet(this, _Coverage_cssCoverage, new CSSCoverage(client), "f");
    }
    /**
     * @param options - Set of configurable options for coverage defaults to
     * `resetOnNavigation : true, reportAnonymousScripts : false,`
     * `includeRawScriptCoverage : false, useBlockCoverage : true`
     * @returns Promise that resolves when coverage is started.
     *
     * @remarks
     * Anonymous scripts are ones that don't have an associated url. These are
     * scripts that are dynamically created on the page using `eval` or
     * `new Function`. If `reportAnonymousScripts` is set to `true`, anonymous
     * scripts URL will start with `debugger://VM` (unless a magic //# sourceURL
     * comment is present, in which case that will the be URL).
     */
    async startJSCoverage(options = {}) {
        return await Coverage_classPrivateFieldGet(this, _Coverage_jsCoverage, "f").start(options);
    }
    /**
     * @returns Promise that resolves to the array of coverage reports for
     * all scripts.
     *
     * @remarks
     * JavaScript Coverage doesn't include anonymous scripts by default.
     * However, scripts with sourceURLs are reported.
     */
    async stopJSCoverage() {
        return await Coverage_classPrivateFieldGet(this, _Coverage_jsCoverage, "f").stop();
    }
    /**
     * @param options - Set of configurable options for coverage, defaults to
     * `resetOnNavigation : true`
     * @returns Promise that resolves when coverage is started.
     */
    async startCSSCoverage(options = {}) {
        return await Coverage_classPrivateFieldGet(this, _Coverage_cssCoverage, "f").start(options);
    }
    /**
     * @returns Promise that resolves to the array of coverage reports
     * for all stylesheets.
     * @remarks
     * CSS Coverage doesn't include dynamically injected style tags
     * without sourceURLs.
     */
    async stopCSSCoverage() {
        return await Coverage_classPrivateFieldGet(this, _Coverage_cssCoverage, "f").stop();
    }
}
_Coverage_jsCoverage = new WeakMap(), _Coverage_cssCoverage = new WeakMap();
/**
 * @public
 */
class JSCoverage {
    constructor(client) {
        _JSCoverage_instances.add(this);
        _JSCoverage_client.set(this, void 0);
        _JSCoverage_enabled.set(this, false);
        _JSCoverage_scriptURLs.set(this, new Map());
        _JSCoverage_scriptSources.set(this, new Map());
        _JSCoverage_eventListeners.set(this, []);
        _JSCoverage_resetOnNavigation.set(this, false);
        _JSCoverage_reportAnonymousScripts.set(this, false);
        _JSCoverage_includeRawScriptCoverage.set(this, false);
        Coverage_classPrivateFieldSet(this, _JSCoverage_client, client, "f");
    }
    async start(options = {}) {
        (0,assert/* assert */.h)(!Coverage_classPrivateFieldGet(this, _JSCoverage_enabled, "f"), 'JSCoverage is already enabled');
        const { resetOnNavigation = true, reportAnonymousScripts = false, includeRawScriptCoverage = false, useBlockCoverage = true, } = options;
        Coverage_classPrivateFieldSet(this, _JSCoverage_resetOnNavigation, resetOnNavigation, "f");
        Coverage_classPrivateFieldSet(this, _JSCoverage_reportAnonymousScripts, reportAnonymousScripts, "f");
        Coverage_classPrivateFieldSet(this, _JSCoverage_includeRawScriptCoverage, includeRawScriptCoverage, "f");
        Coverage_classPrivateFieldSet(this, _JSCoverage_enabled, true, "f");
        Coverage_classPrivateFieldGet(this, _JSCoverage_scriptURLs, "f").clear();
        Coverage_classPrivateFieldGet(this, _JSCoverage_scriptSources, "f").clear();
        Coverage_classPrivateFieldSet(this, _JSCoverage_eventListeners, [
            (0,util/* addEventListener */.Oo)(Coverage_classPrivateFieldGet(this, _JSCoverage_client, "f"), 'Debugger.scriptParsed', Coverage_classPrivateFieldGet(this, _JSCoverage_instances, "m", _JSCoverage_onScriptParsed).bind(this)),
            (0,util/* addEventListener */.Oo)(Coverage_classPrivateFieldGet(this, _JSCoverage_client, "f"), 'Runtime.executionContextsCleared', Coverage_classPrivateFieldGet(this, _JSCoverage_instances, "m", _JSCoverage_onExecutionContextsCleared).bind(this)),
        ], "f");
        await Promise.all([
            Coverage_classPrivateFieldGet(this, _JSCoverage_client, "f").send('Profiler.enable'),
            Coverage_classPrivateFieldGet(this, _JSCoverage_client, "f").send('Profiler.startPreciseCoverage', {
                callCount: Coverage_classPrivateFieldGet(this, _JSCoverage_includeRawScriptCoverage, "f"),
                detailed: useBlockCoverage,
            }),
            Coverage_classPrivateFieldGet(this, _JSCoverage_client, "f").send('Debugger.enable'),
            Coverage_classPrivateFieldGet(this, _JSCoverage_client, "f").send('Debugger.setSkipAllPauses', { skip: true }),
        ]);
    }
    async stop() {
        (0,assert/* assert */.h)(Coverage_classPrivateFieldGet(this, _JSCoverage_enabled, "f"), 'JSCoverage is not enabled');
        Coverage_classPrivateFieldSet(this, _JSCoverage_enabled, false, "f");
        const result = await Promise.all([
            Coverage_classPrivateFieldGet(this, _JSCoverage_client, "f").send('Profiler.takePreciseCoverage'),
            Coverage_classPrivateFieldGet(this, _JSCoverage_client, "f").send('Profiler.stopPreciseCoverage'),
            Coverage_classPrivateFieldGet(this, _JSCoverage_client, "f").send('Profiler.disable'),
            Coverage_classPrivateFieldGet(this, _JSCoverage_client, "f").send('Debugger.disable'),
        ]);
        (0,util/* removeEventListeners */.nJ)(Coverage_classPrivateFieldGet(this, _JSCoverage_eventListeners, "f"));
        const coverage = [];
        const profileResponse = result[0];
        for (const entry of profileResponse.result) {
            let url = Coverage_classPrivateFieldGet(this, _JSCoverage_scriptURLs, "f").get(entry.scriptId);
            if (!url && Coverage_classPrivateFieldGet(this, _JSCoverage_reportAnonymousScripts, "f")) {
                url = 'debugger://VM' + entry.scriptId;
            }
            const text = Coverage_classPrivateFieldGet(this, _JSCoverage_scriptSources, "f").get(entry.scriptId);
            if (text === undefined || url === undefined) {
                continue;
            }
            const flattenRanges = [];
            for (const func of entry.functions) {
                flattenRanges.push(...func.ranges);
            }
            const ranges = convertToDisjointRanges(flattenRanges);
            if (!Coverage_classPrivateFieldGet(this, _JSCoverage_includeRawScriptCoverage, "f")) {
                coverage.push({ url, ranges, text });
            }
            else {
                coverage.push({ url, ranges, text, rawScriptCoverage: entry });
            }
        }
        return coverage;
    }
}
_JSCoverage_client = new WeakMap(), _JSCoverage_enabled = new WeakMap(), _JSCoverage_scriptURLs = new WeakMap(), _JSCoverage_scriptSources = new WeakMap(), _JSCoverage_eventListeners = new WeakMap(), _JSCoverage_resetOnNavigation = new WeakMap(), _JSCoverage_reportAnonymousScripts = new WeakMap(), _JSCoverage_includeRawScriptCoverage = new WeakMap(), _JSCoverage_instances = new WeakSet(), _JSCoverage_onExecutionContextsCleared = function _JSCoverage_onExecutionContextsCleared() {
    if (!Coverage_classPrivateFieldGet(this, _JSCoverage_resetOnNavigation, "f")) {
        return;
    }
    Coverage_classPrivateFieldGet(this, _JSCoverage_scriptURLs, "f").clear();
    Coverage_classPrivateFieldGet(this, _JSCoverage_scriptSources, "f").clear();
}, _JSCoverage_onScriptParsed = async function _JSCoverage_onScriptParsed(event) {
    // Ignore puppeteer-injected scripts
    if (event.url === common_ExecutionContext/* EVALUATION_SCRIPT_URL */.z) {
        return;
    }
    // Ignore other anonymous scripts unless the reportAnonymousScripts option is true.
    if (!event.url && !Coverage_classPrivateFieldGet(this, _JSCoverage_reportAnonymousScripts, "f")) {
        return;
    }
    try {
        const response = await Coverage_classPrivateFieldGet(this, _JSCoverage_client, "f").send('Debugger.getScriptSource', {
            scriptId: event.scriptId,
        });
        Coverage_classPrivateFieldGet(this, _JSCoverage_scriptURLs, "f").set(event.scriptId, event.url);
        Coverage_classPrivateFieldGet(this, _JSCoverage_scriptSources, "f").set(event.scriptId, response.scriptSource);
    }
    catch (error) {
        // This might happen if the page has already navigated away.
        (0,util/* debugError */.ur)(error);
    }
};
/**
 * @public
 */
class CSSCoverage {
    constructor(client) {
        _CSSCoverage_instances.add(this);
        _CSSCoverage_client.set(this, void 0);
        _CSSCoverage_enabled.set(this, false);
        _CSSCoverage_stylesheetURLs.set(this, new Map());
        _CSSCoverage_stylesheetSources.set(this, new Map());
        _CSSCoverage_eventListeners.set(this, []);
        _CSSCoverage_resetOnNavigation.set(this, false);
        Coverage_classPrivateFieldSet(this, _CSSCoverage_client, client, "f");
    }
    async start(options = {}) {
        (0,assert/* assert */.h)(!Coverage_classPrivateFieldGet(this, _CSSCoverage_enabled, "f"), 'CSSCoverage is already enabled');
        const { resetOnNavigation = true } = options;
        Coverage_classPrivateFieldSet(this, _CSSCoverage_resetOnNavigation, resetOnNavigation, "f");
        Coverage_classPrivateFieldSet(this, _CSSCoverage_enabled, true, "f");
        Coverage_classPrivateFieldGet(this, _CSSCoverage_stylesheetURLs, "f").clear();
        Coverage_classPrivateFieldGet(this, _CSSCoverage_stylesheetSources, "f").clear();
        Coverage_classPrivateFieldSet(this, _CSSCoverage_eventListeners, [
            (0,util/* addEventListener */.Oo)(Coverage_classPrivateFieldGet(this, _CSSCoverage_client, "f"), 'CSS.styleSheetAdded', Coverage_classPrivateFieldGet(this, _CSSCoverage_instances, "m", _CSSCoverage_onStyleSheet).bind(this)),
            (0,util/* addEventListener */.Oo)(Coverage_classPrivateFieldGet(this, _CSSCoverage_client, "f"), 'Runtime.executionContextsCleared', Coverage_classPrivateFieldGet(this, _CSSCoverage_instances, "m", _CSSCoverage_onExecutionContextsCleared).bind(this)),
        ], "f");
        await Promise.all([
            Coverage_classPrivateFieldGet(this, _CSSCoverage_client, "f").send('DOM.enable'),
            Coverage_classPrivateFieldGet(this, _CSSCoverage_client, "f").send('CSS.enable'),
            Coverage_classPrivateFieldGet(this, _CSSCoverage_client, "f").send('CSS.startRuleUsageTracking'),
        ]);
    }
    async stop() {
        (0,assert/* assert */.h)(Coverage_classPrivateFieldGet(this, _CSSCoverage_enabled, "f"), 'CSSCoverage is not enabled');
        Coverage_classPrivateFieldSet(this, _CSSCoverage_enabled, false, "f");
        const ruleTrackingResponse = await Coverage_classPrivateFieldGet(this, _CSSCoverage_client, "f").send('CSS.stopRuleUsageTracking');
        await Promise.all([
            Coverage_classPrivateFieldGet(this, _CSSCoverage_client, "f").send('CSS.disable'),
            Coverage_classPrivateFieldGet(this, _CSSCoverage_client, "f").send('DOM.disable'),
        ]);
        (0,util/* removeEventListeners */.nJ)(Coverage_classPrivateFieldGet(this, _CSSCoverage_eventListeners, "f"));
        // aggregate by styleSheetId
        const styleSheetIdToCoverage = new Map();
        for (const entry of ruleTrackingResponse.ruleUsage) {
            let ranges = styleSheetIdToCoverage.get(entry.styleSheetId);
            if (!ranges) {
                ranges = [];
                styleSheetIdToCoverage.set(entry.styleSheetId, ranges);
            }
            ranges.push({
                startOffset: entry.startOffset,
                endOffset: entry.endOffset,
                count: entry.used ? 1 : 0,
            });
        }
        const coverage = [];
        for (const styleSheetId of Coverage_classPrivateFieldGet(this, _CSSCoverage_stylesheetURLs, "f").keys()) {
            const url = Coverage_classPrivateFieldGet(this, _CSSCoverage_stylesheetURLs, "f").get(styleSheetId);
            (0,assert/* assert */.h)(typeof url !== 'undefined', `Stylesheet URL is undefined (styleSheetId=${styleSheetId})`);
            const text = Coverage_classPrivateFieldGet(this, _CSSCoverage_stylesheetSources, "f").get(styleSheetId);
            (0,assert/* assert */.h)(typeof text !== 'undefined', `Stylesheet text is undefined (styleSheetId=${styleSheetId})`);
            const ranges = convertToDisjointRanges(styleSheetIdToCoverage.get(styleSheetId) || []);
            coverage.push({ url, ranges, text });
        }
        return coverage;
    }
}
_CSSCoverage_client = new WeakMap(), _CSSCoverage_enabled = new WeakMap(), _CSSCoverage_stylesheetURLs = new WeakMap(), _CSSCoverage_stylesheetSources = new WeakMap(), _CSSCoverage_eventListeners = new WeakMap(), _CSSCoverage_resetOnNavigation = new WeakMap(), _CSSCoverage_instances = new WeakSet(), _CSSCoverage_onExecutionContextsCleared = function _CSSCoverage_onExecutionContextsCleared() {
    if (!Coverage_classPrivateFieldGet(this, _CSSCoverage_resetOnNavigation, "f")) {
        return;
    }
    Coverage_classPrivateFieldGet(this, _CSSCoverage_stylesheetURLs, "f").clear();
    Coverage_classPrivateFieldGet(this, _CSSCoverage_stylesheetSources, "f").clear();
}, _CSSCoverage_onStyleSheet = async function _CSSCoverage_onStyleSheet(event) {
    const header = event.header;
    // Ignore anonymous scripts
    if (!header.sourceURL) {
        return;
    }
    try {
        const response = await Coverage_classPrivateFieldGet(this, _CSSCoverage_client, "f").send('CSS.getStyleSheetText', {
            styleSheetId: header.styleSheetId,
        });
        Coverage_classPrivateFieldGet(this, _CSSCoverage_stylesheetURLs, "f").set(header.styleSheetId, header.sourceURL);
        Coverage_classPrivateFieldGet(this, _CSSCoverage_stylesheetSources, "f").set(header.styleSheetId, response.text);
    }
    catch (error) {
        // This might happen if the page has already navigated away.
        (0,util/* debugError */.ur)(error);
    }
};
function convertToDisjointRanges(nestedRanges) {
    const points = [];
    for (const range of nestedRanges) {
        points.push({ offset: range.startOffset, type: 0, range });
        points.push({ offset: range.endOffset, type: 1, range });
    }
    // Sort points to form a valid parenthesis sequence.
    points.sort((a, b) => {
        // Sort with increasing offsets.
        if (a.offset !== b.offset) {
            return a.offset - b.offset;
        }
        // All "end" points should go before "start" points.
        if (a.type !== b.type) {
            return b.type - a.type;
        }
        const aLength = a.range.endOffset - a.range.startOffset;
        const bLength = b.range.endOffset - b.range.startOffset;
        // For two "start" points, the one with longer range goes first.
        if (a.type === 0) {
            return bLength - aLength;
        }
        // For two "end" points, the one with shorter range goes first.
        return aLength - bLength;
    });
    const hitCountStack = [];
    const results = [];
    let lastOffset = 0;
    // Run scanning line to intersect all ranges.
    for (const point of points) {
        if (hitCountStack.length &&
            lastOffset < point.offset &&
            hitCountStack[hitCountStack.length - 1] > 0) {
            const lastResult = results[results.length - 1];
            if (lastResult && lastResult.end === lastOffset) {
                lastResult.end = point.offset;
            }
            else {
                results.push({ start: lastOffset, end: point.offset });
            }
        }
        lastOffset = point.offset;
        if (point.type === 0) {
            hitCountStack.push(point.range.count);
        }
        else {
            hitCountStack.pop();
        }
    }
    // Filter out empty ranges.
    return results.filter(range => {
        return range.end - range.start > 0;
    });
}
//# sourceMappingURL=Coverage.js.map
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/Dialog.js
/**
 * Copyright 2017 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Dialog_classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var Dialog_classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _Dialog_client, _Dialog_type, _Dialog_message, _Dialog_defaultValue, _Dialog_handled;

/**
 * Dialog instances are dispatched by the {@link Page} via the `dialog` event.
 *
 * @remarks
 *
 * @example
 *
 * ```ts
 * import puppeteer from 'puppeteer';
 *
 * (async () => {
 *   const browser = await puppeteer.launch();
 *   const page = await browser.newPage();
 *   page.on('dialog', async dialog => {
 *     console.log(dialog.message());
 *     await dialog.dismiss();
 *     await browser.close();
 *   });
 *   page.evaluate(() => alert('1'));
 * })();
 * ```
 *
 * @public
 */
class Dialog {
    /**
     * @internal
     */
    constructor(client, type, message, defaultValue = '') {
        _Dialog_client.set(this, void 0);
        _Dialog_type.set(this, void 0);
        _Dialog_message.set(this, void 0);
        _Dialog_defaultValue.set(this, void 0);
        _Dialog_handled.set(this, false);
        Dialog_classPrivateFieldSet(this, _Dialog_client, client, "f");
        Dialog_classPrivateFieldSet(this, _Dialog_type, type, "f");
        Dialog_classPrivateFieldSet(this, _Dialog_message, message, "f");
        Dialog_classPrivateFieldSet(this, _Dialog_defaultValue, defaultValue, "f");
    }
    /**
     * @returns The type of the dialog.
     */
    type() {
        return Dialog_classPrivateFieldGet(this, _Dialog_type, "f");
    }
    /**
     * @returns The message displayed in the dialog.
     */
    message() {
        return Dialog_classPrivateFieldGet(this, _Dialog_message, "f");
    }
    /**
     * @returns The default value of the prompt, or an empty string if the dialog
     * is not a `prompt`.
     */
    defaultValue() {
        return Dialog_classPrivateFieldGet(this, _Dialog_defaultValue, "f");
    }
    /**
     * @param promptText - optional text that will be entered in the dialog
     * prompt. Has no effect if the dialog's type is not `prompt`.
     *
     * @returns A promise that resolves when the dialog has been accepted.
     */
    async accept(promptText) {
        (0,assert/* assert */.h)(!Dialog_classPrivateFieldGet(this, _Dialog_handled, "f"), 'Cannot accept dialog which is already handled!');
        Dialog_classPrivateFieldSet(this, _Dialog_handled, true, "f");
        await Dialog_classPrivateFieldGet(this, _Dialog_client, "f").send('Page.handleJavaScriptDialog', {
            accept: true,
            promptText: promptText,
        });
    }
    /**
     * @returns A promise which will resolve once the dialog has been dismissed
     */
    async dismiss() {
        (0,assert/* assert */.h)(!Dialog_classPrivateFieldGet(this, _Dialog_handled, "f"), 'Cannot dismiss dialog which is already handled!');
        Dialog_classPrivateFieldSet(this, _Dialog_handled, true, "f");
        await Dialog_classPrivateFieldGet(this, _Dialog_client, "f").send('Page.handleJavaScriptDialog', {
            accept: false,
        });
    }
}
_Dialog_client = new WeakMap(), _Dialog_type = new WeakMap(), _Dialog_message = new WeakMap(), _Dialog_defaultValue = new WeakMap(), _Dialog_handled = new WeakMap();
//# sourceMappingURL=Dialog.js.map
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/EmulationManager.js
var EmulationManager_classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var EmulationManager_classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _EmulationManager_client, _EmulationManager_emulatingMobile, _EmulationManager_hasTouch;
/**
 * @internal
 */
class EmulationManager {
    constructor(client) {
        _EmulationManager_client.set(this, void 0);
        _EmulationManager_emulatingMobile.set(this, false);
        _EmulationManager_hasTouch.set(this, false);
        EmulationManager_classPrivateFieldSet(this, _EmulationManager_client, client, "f");
    }
    async emulateViewport(viewport) {
        const mobile = viewport.isMobile || false;
        const width = viewport.width;
        const height = viewport.height;
        const deviceScaleFactor = viewport.deviceScaleFactor || 1;
        const screenOrientation = viewport.isLandscape
            ? { angle: 90, type: 'landscapePrimary' }
            : { angle: 0, type: 'portraitPrimary' };
        const hasTouch = viewport.hasTouch || false;
        await Promise.all([
            EmulationManager_classPrivateFieldGet(this, _EmulationManager_client, "f").send('Emulation.setDeviceMetricsOverride', {
                mobile,
                width,
                height,
                deviceScaleFactor,
                screenOrientation,
            }),
            EmulationManager_classPrivateFieldGet(this, _EmulationManager_client, "f").send('Emulation.setTouchEmulationEnabled', {
                enabled: hasTouch,
            }),
        ]);
        const reloadNeeded = EmulationManager_classPrivateFieldGet(this, _EmulationManager_emulatingMobile, "f") !== mobile || EmulationManager_classPrivateFieldGet(this, _EmulationManager_hasTouch, "f") !== hasTouch;
        EmulationManager_classPrivateFieldSet(this, _EmulationManager_emulatingMobile, mobile, "f");
        EmulationManager_classPrivateFieldSet(this, _EmulationManager_hasTouch, hasTouch, "f");
        return reloadNeeded;
    }
}
_EmulationManager_client = new WeakMap(), _EmulationManager_emulatingMobile = new WeakMap(), _EmulationManager_hasTouch = new WeakMap();
//# sourceMappingURL=EmulationManager.js.map
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/FileChooser.js
/**
 * Copyright 2020 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var FileChooser_classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var FileChooser_classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _FileChooser_element, _FileChooser_multiple, _FileChooser_handled;

/**
 * File choosers let you react to the page requesting for a file.
 *
 * @remarks
 * `FileChooser` instances are returned via the {@link Page.waitForFileChooser} method.
 *
 * In browsers, only one file chooser can be opened at a time.
 * All file choosers must be accepted or canceled. Not doing so will prevent
 * subsequent file choosers from appearing.
 *
 * @example
 *
 * ```ts
 * const [fileChooser] = await Promise.all([
 *   page.waitForFileChooser(),
 *   page.click('#upload-file-button'), // some button that triggers file selection
 * ]);
 * await fileChooser.accept(['/tmp/myfile.pdf']);
 * ```
 *
 * @public
 */
class FileChooser {
    /**
     * @internal
     */
    constructor(element, event) {
        _FileChooser_element.set(this, void 0);
        _FileChooser_multiple.set(this, void 0);
        _FileChooser_handled.set(this, false);
        FileChooser_classPrivateFieldSet(this, _FileChooser_element, element, "f");
        FileChooser_classPrivateFieldSet(this, _FileChooser_multiple, event.mode !== 'selectSingle', "f");
    }
    /**
     * Whether file chooser allow for
     * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#attr-multiple | multiple}
     * file selection.
     */
    isMultiple() {
        return FileChooser_classPrivateFieldGet(this, _FileChooser_multiple, "f");
    }
    /**
     * Accept the file chooser request with given paths.
     *
     * @param filePaths - If some of the `filePaths` are relative paths, then
     * they are resolved relative to the
     * {@link https://nodejs.org/api/process.html#process_process_cwd | current working directory}.
     */
    async accept(filePaths) {
        (0,assert/* assert */.h)(!FileChooser_classPrivateFieldGet(this, _FileChooser_handled, "f"), 'Cannot accept FileChooser which is already handled!');
        FileChooser_classPrivateFieldSet(this, _FileChooser_handled, true, "f");
        await FileChooser_classPrivateFieldGet(this, _FileChooser_element, "f").uploadFile(...filePaths);
    }
    /**
     * Closes the file chooser without selecting any files.
     */
    cancel() {
        (0,assert/* assert */.h)(!FileChooser_classPrivateFieldGet(this, _FileChooser_handled, "f"), 'Cannot cancel FileChooser which is already handled!');
        FileChooser_classPrivateFieldSet(this, _FileChooser_handled, true, "f");
    }
}
_FileChooser_element = new WeakMap(), _FileChooser_multiple = new WeakMap(), _FileChooser_handled = new WeakMap();
//# sourceMappingURL=FileChooser.js.map
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/FrameManager.js
var FrameManager = __nccwpck_require__(3918);
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/USKeyboardLayout.js
/**
 * Copyright 2017 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @internal
 */
const _keyDefinitions = {
    '0': { keyCode: 48, key: '0', code: 'Digit0' },
    '1': { keyCode: 49, key: '1', code: 'Digit1' },
    '2': { keyCode: 50, key: '2', code: 'Digit2' },
    '3': { keyCode: 51, key: '3', code: 'Digit3' },
    '4': { keyCode: 52, key: '4', code: 'Digit4' },
    '5': { keyCode: 53, key: '5', code: 'Digit5' },
    '6': { keyCode: 54, key: '6', code: 'Digit6' },
    '7': { keyCode: 55, key: '7', code: 'Digit7' },
    '8': { keyCode: 56, key: '8', code: 'Digit8' },
    '9': { keyCode: 57, key: '9', code: 'Digit9' },
    Power: { key: 'Power', code: 'Power' },
    Eject: { key: 'Eject', code: 'Eject' },
    Abort: { keyCode: 3, code: 'Abort', key: 'Cancel' },
    Help: { keyCode: 6, code: 'Help', key: 'Help' },
    Backspace: { keyCode: 8, code: 'Backspace', key: 'Backspace' },
    Tab: { keyCode: 9, code: 'Tab', key: 'Tab' },
    Numpad5: {
        keyCode: 12,
        shiftKeyCode: 101,
        key: 'Clear',
        code: 'Numpad5',
        shiftKey: '5',
        location: 3,
    },
    NumpadEnter: {
        keyCode: 13,
        code: 'NumpadEnter',
        key: 'Enter',
        text: '\r',
        location: 3,
    },
    Enter: { keyCode: 13, code: 'Enter', key: 'Enter', text: '\r' },
    '\r': { keyCode: 13, code: 'Enter', key: 'Enter', text: '\r' },
    '\n': { keyCode: 13, code: 'Enter', key: 'Enter', text: '\r' },
    ShiftLeft: { keyCode: 16, code: 'ShiftLeft', key: 'Shift', location: 1 },
    ShiftRight: { keyCode: 16, code: 'ShiftRight', key: 'Shift', location: 2 },
    ControlLeft: {
        keyCode: 17,
        code: 'ControlLeft',
        key: 'Control',
        location: 1,
    },
    ControlRight: {
        keyCode: 17,
        code: 'ControlRight',
        key: 'Control',
        location: 2,
    },
    AltLeft: { keyCode: 18, code: 'AltLeft', key: 'Alt', location: 1 },
    AltRight: { keyCode: 18, code: 'AltRight', key: 'Alt', location: 2 },
    Pause: { keyCode: 19, code: 'Pause', key: 'Pause' },
    CapsLock: { keyCode: 20, code: 'CapsLock', key: 'CapsLock' },
    Escape: { keyCode: 27, code: 'Escape', key: 'Escape' },
    Convert: { keyCode: 28, code: 'Convert', key: 'Convert' },
    NonConvert: { keyCode: 29, code: 'NonConvert', key: 'NonConvert' },
    Space: { keyCode: 32, code: 'Space', key: ' ' },
    Numpad9: {
        keyCode: 33,
        shiftKeyCode: 105,
        key: 'PageUp',
        code: 'Numpad9',
        shiftKey: '9',
        location: 3,
    },
    PageUp: { keyCode: 33, code: 'PageUp', key: 'PageUp' },
    Numpad3: {
        keyCode: 34,
        shiftKeyCode: 99,
        key: 'PageDown',
        code: 'Numpad3',
        shiftKey: '3',
        location: 3,
    },
    PageDown: { keyCode: 34, code: 'PageDown', key: 'PageDown' },
    End: { keyCode: 35, code: 'End', key: 'End' },
    Numpad1: {
        keyCode: 35,
        shiftKeyCode: 97,
        key: 'End',
        code: 'Numpad1',
        shiftKey: '1',
        location: 3,
    },
    Home: { keyCode: 36, code: 'Home', key: 'Home' },
    Numpad7: {
        keyCode: 36,
        shiftKeyCode: 103,
        key: 'Home',
        code: 'Numpad7',
        shiftKey: '7',
        location: 3,
    },
    ArrowLeft: { keyCode: 37, code: 'ArrowLeft', key: 'ArrowLeft' },
    Numpad4: {
        keyCode: 37,
        shiftKeyCode: 100,
        key: 'ArrowLeft',
        code: 'Numpad4',
        shiftKey: '4',
        location: 3,
    },
    Numpad8: {
        keyCode: 38,
        shiftKeyCode: 104,
        key: 'ArrowUp',
        code: 'Numpad8',
        shiftKey: '8',
        location: 3,
    },
    ArrowUp: { keyCode: 38, code: 'ArrowUp', key: 'ArrowUp' },
    ArrowRight: { keyCode: 39, code: 'ArrowRight', key: 'ArrowRight' },
    Numpad6: {
        keyCode: 39,
        shiftKeyCode: 102,
        key: 'ArrowRight',
        code: 'Numpad6',
        shiftKey: '6',
        location: 3,
    },
    Numpad2: {
        keyCode: 40,
        shiftKeyCode: 98,
        key: 'ArrowDown',
        code: 'Numpad2',
        shiftKey: '2',
        location: 3,
    },
    ArrowDown: { keyCode: 40, code: 'ArrowDown', key: 'ArrowDown' },
    Select: { keyCode: 41, code: 'Select', key: 'Select' },
    Open: { keyCode: 43, code: 'Open', key: 'Execute' },
    PrintScreen: { keyCode: 44, code: 'PrintScreen', key: 'PrintScreen' },
    Insert: { keyCode: 45, code: 'Insert', key: 'Insert' },
    Numpad0: {
        keyCode: 45,
        shiftKeyCode: 96,
        key: 'Insert',
        code: 'Numpad0',
        shiftKey: '0',
        location: 3,
    },
    Delete: { keyCode: 46, code: 'Delete', key: 'Delete' },
    NumpadDecimal: {
        keyCode: 46,
        shiftKeyCode: 110,
        code: 'NumpadDecimal',
        key: '\u0000',
        shiftKey: '.',
        location: 3,
    },
    Digit0: { keyCode: 48, code: 'Digit0', shiftKey: ')', key: '0' },
    Digit1: { keyCode: 49, code: 'Digit1', shiftKey: '!', key: '1' },
    Digit2: { keyCode: 50, code: 'Digit2', shiftKey: '@', key: '2' },
    Digit3: { keyCode: 51, code: 'Digit3', shiftKey: '#', key: '3' },
    Digit4: { keyCode: 52, code: 'Digit4', shiftKey: '$', key: '4' },
    Digit5: { keyCode: 53, code: 'Digit5', shiftKey: '%', key: '5' },
    Digit6: { keyCode: 54, code: 'Digit6', shiftKey: '^', key: '6' },
    Digit7: { keyCode: 55, code: 'Digit7', shiftKey: '&', key: '7' },
    Digit8: { keyCode: 56, code: 'Digit8', shiftKey: '*', key: '8' },
    Digit9: { keyCode: 57, code: 'Digit9', shiftKey: '(', key: '9' },
    KeyA: { keyCode: 65, code: 'KeyA', shiftKey: 'A', key: 'a' },
    KeyB: { keyCode: 66, code: 'KeyB', shiftKey: 'B', key: 'b' },
    KeyC: { keyCode: 67, code: 'KeyC', shiftKey: 'C', key: 'c' },
    KeyD: { keyCode: 68, code: 'KeyD', shiftKey: 'D', key: 'd' },
    KeyE: { keyCode: 69, code: 'KeyE', shiftKey: 'E', key: 'e' },
    KeyF: { keyCode: 70, code: 'KeyF', shiftKey: 'F', key: 'f' },
    KeyG: { keyCode: 71, code: 'KeyG', shiftKey: 'G', key: 'g' },
    KeyH: { keyCode: 72, code: 'KeyH', shiftKey: 'H', key: 'h' },
    KeyI: { keyCode: 73, code: 'KeyI', shiftKey: 'I', key: 'i' },
    KeyJ: { keyCode: 74, code: 'KeyJ', shiftKey: 'J', key: 'j' },
    KeyK: { keyCode: 75, code: 'KeyK', shiftKey: 'K', key: 'k' },
    KeyL: { keyCode: 76, code: 'KeyL', shiftKey: 'L', key: 'l' },
    KeyM: { keyCode: 77, code: 'KeyM', shiftKey: 'M', key: 'm' },
    KeyN: { keyCode: 78, code: 'KeyN', shiftKey: 'N', key: 'n' },
    KeyO: { keyCode: 79, code: 'KeyO', shiftKey: 'O', key: 'o' },
    KeyP: { keyCode: 80, code: 'KeyP', shiftKey: 'P', key: 'p' },
    KeyQ: { keyCode: 81, code: 'KeyQ', shiftKey: 'Q', key: 'q' },
    KeyR: { keyCode: 82, code: 'KeyR', shiftKey: 'R', key: 'r' },
    KeyS: { keyCode: 83, code: 'KeyS', shiftKey: 'S', key: 's' },
    KeyT: { keyCode: 84, code: 'KeyT', shiftKey: 'T', key: 't' },
    KeyU: { keyCode: 85, code: 'KeyU', shiftKey: 'U', key: 'u' },
    KeyV: { keyCode: 86, code: 'KeyV', shiftKey: 'V', key: 'v' },
    KeyW: { keyCode: 87, code: 'KeyW', shiftKey: 'W', key: 'w' },
    KeyX: { keyCode: 88, code: 'KeyX', shiftKey: 'X', key: 'x' },
    KeyY: { keyCode: 89, code: 'KeyY', shiftKey: 'Y', key: 'y' },
    KeyZ: { keyCode: 90, code: 'KeyZ', shiftKey: 'Z', key: 'z' },
    MetaLeft: { keyCode: 91, code: 'MetaLeft', key: 'Meta', location: 1 },
    MetaRight: { keyCode: 92, code: 'MetaRight', key: 'Meta', location: 2 },
    ContextMenu: { keyCode: 93, code: 'ContextMenu', key: 'ContextMenu' },
    NumpadMultiply: {
        keyCode: 106,
        code: 'NumpadMultiply',
        key: '*',
        location: 3,
    },
    NumpadAdd: { keyCode: 107, code: 'NumpadAdd', key: '+', location: 3 },
    NumpadSubtract: {
        keyCode: 109,
        code: 'NumpadSubtract',
        key: '-',
        location: 3,
    },
    NumpadDivide: { keyCode: 111, code: 'NumpadDivide', key: '/', location: 3 },
    F1: { keyCode: 112, code: 'F1', key: 'F1' },
    F2: { keyCode: 113, code: 'F2', key: 'F2' },
    F3: { keyCode: 114, code: 'F3', key: 'F3' },
    F4: { keyCode: 115, code: 'F4', key: 'F4' },
    F5: { keyCode: 116, code: 'F5', key: 'F5' },
    F6: { keyCode: 117, code: 'F6', key: 'F6' },
    F7: { keyCode: 118, code: 'F7', key: 'F7' },
    F8: { keyCode: 119, code: 'F8', key: 'F8' },
    F9: { keyCode: 120, code: 'F9', key: 'F9' },
    F10: { keyCode: 121, code: 'F10', key: 'F10' },
    F11: { keyCode: 122, code: 'F11', key: 'F11' },
    F12: { keyCode: 123, code: 'F12', key: 'F12' },
    F13: { keyCode: 124, code: 'F13', key: 'F13' },
    F14: { keyCode: 125, code: 'F14', key: 'F14' },
    F15: { keyCode: 126, code: 'F15', key: 'F15' },
    F16: { keyCode: 127, code: 'F16', key: 'F16' },
    F17: { keyCode: 128, code: 'F17', key: 'F17' },
    F18: { keyCode: 129, code: 'F18', key: 'F18' },
    F19: { keyCode: 130, code: 'F19', key: 'F19' },
    F20: { keyCode: 131, code: 'F20', key: 'F20' },
    F21: { keyCode: 132, code: 'F21', key: 'F21' },
    F22: { keyCode: 133, code: 'F22', key: 'F22' },
    F23: { keyCode: 134, code: 'F23', key: 'F23' },
    F24: { keyCode: 135, code: 'F24', key: 'F24' },
    NumLock: { keyCode: 144, code: 'NumLock', key: 'NumLock' },
    ScrollLock: { keyCode: 145, code: 'ScrollLock', key: 'ScrollLock' },
    AudioVolumeMute: {
        keyCode: 173,
        code: 'AudioVolumeMute',
        key: 'AudioVolumeMute',
    },
    AudioVolumeDown: {
        keyCode: 174,
        code: 'AudioVolumeDown',
        key: 'AudioVolumeDown',
    },
    AudioVolumeUp: { keyCode: 175, code: 'AudioVolumeUp', key: 'AudioVolumeUp' },
    MediaTrackNext: {
        keyCode: 176,
        code: 'MediaTrackNext',
        key: 'MediaTrackNext',
    },
    MediaTrackPrevious: {
        keyCode: 177,
        code: 'MediaTrackPrevious',
        key: 'MediaTrackPrevious',
    },
    MediaStop: { keyCode: 178, code: 'MediaStop', key: 'MediaStop' },
    MediaPlayPause: {
        keyCode: 179,
        code: 'MediaPlayPause',
        key: 'MediaPlayPause',
    },
    Semicolon: { keyCode: 186, code: 'Semicolon', shiftKey: ':', key: ';' },
    Equal: { keyCode: 187, code: 'Equal', shiftKey: '+', key: '=' },
    NumpadEqual: { keyCode: 187, code: 'NumpadEqual', key: '=', location: 3 },
    Comma: { keyCode: 188, code: 'Comma', shiftKey: '<', key: ',' },
    Minus: { keyCode: 189, code: 'Minus', shiftKey: '_', key: '-' },
    Period: { keyCode: 190, code: 'Period', shiftKey: '>', key: '.' },
    Slash: { keyCode: 191, code: 'Slash', shiftKey: '?', key: '/' },
    Backquote: { keyCode: 192, code: 'Backquote', shiftKey: '~', key: '`' },
    BracketLeft: { keyCode: 219, code: 'BracketLeft', shiftKey: '{', key: '[' },
    Backslash: { keyCode: 220, code: 'Backslash', shiftKey: '|', key: '\\' },
    BracketRight: { keyCode: 221, code: 'BracketRight', shiftKey: '}', key: ']' },
    Quote: { keyCode: 222, code: 'Quote', shiftKey: '"', key: "'" },
    AltGraph: { keyCode: 225, code: 'AltGraph', key: 'AltGraph' },
    Props: { keyCode: 247, code: 'Props', key: 'CrSel' },
    Cancel: { keyCode: 3, key: 'Cancel', code: 'Abort' },
    Clear: { keyCode: 12, key: 'Clear', code: 'Numpad5', location: 3 },
    Shift: { keyCode: 16, key: 'Shift', code: 'ShiftLeft', location: 1 },
    Control: { keyCode: 17, key: 'Control', code: 'ControlLeft', location: 1 },
    Alt: { keyCode: 18, key: 'Alt', code: 'AltLeft', location: 1 },
    Accept: { keyCode: 30, key: 'Accept' },
    ModeChange: { keyCode: 31, key: 'ModeChange' },
    ' ': { keyCode: 32, key: ' ', code: 'Space' },
    Print: { keyCode: 42, key: 'Print' },
    Execute: { keyCode: 43, key: 'Execute', code: 'Open' },
    '\u0000': { keyCode: 46, key: '\u0000', code: 'NumpadDecimal', location: 3 },
    a: { keyCode: 65, key: 'a', code: 'KeyA' },
    b: { keyCode: 66, key: 'b', code: 'KeyB' },
    c: { keyCode: 67, key: 'c', code: 'KeyC' },
    d: { keyCode: 68, key: 'd', code: 'KeyD' },
    e: { keyCode: 69, key: 'e', code: 'KeyE' },
    f: { keyCode: 70, key: 'f', code: 'KeyF' },
    g: { keyCode: 71, key: 'g', code: 'KeyG' },
    h: { keyCode: 72, key: 'h', code: 'KeyH' },
    i: { keyCode: 73, key: 'i', code: 'KeyI' },
    j: { keyCode: 74, key: 'j', code: 'KeyJ' },
    k: { keyCode: 75, key: 'k', code: 'KeyK' },
    l: { keyCode: 76, key: 'l', code: 'KeyL' },
    m: { keyCode: 77, key: 'm', code: 'KeyM' },
    n: { keyCode: 78, key: 'n', code: 'KeyN' },
    o: { keyCode: 79, key: 'o', code: 'KeyO' },
    p: { keyCode: 80, key: 'p', code: 'KeyP' },
    q: { keyCode: 81, key: 'q', code: 'KeyQ' },
    r: { keyCode: 82, key: 'r', code: 'KeyR' },
    s: { keyCode: 83, key: 's', code: 'KeyS' },
    t: { keyCode: 84, key: 't', code: 'KeyT' },
    u: { keyCode: 85, key: 'u', code: 'KeyU' },
    v: { keyCode: 86, key: 'v', code: 'KeyV' },
    w: { keyCode: 87, key: 'w', code: 'KeyW' },
    x: { keyCode: 88, key: 'x', code: 'KeyX' },
    y: { keyCode: 89, key: 'y', code: 'KeyY' },
    z: { keyCode: 90, key: 'z', code: 'KeyZ' },
    Meta: { keyCode: 91, key: 'Meta', code: 'MetaLeft', location: 1 },
    '*': { keyCode: 106, key: '*', code: 'NumpadMultiply', location: 3 },
    '+': { keyCode: 107, key: '+', code: 'NumpadAdd', location: 3 },
    '-': { keyCode: 109, key: '-', code: 'NumpadSubtract', location: 3 },
    '/': { keyCode: 111, key: '/', code: 'NumpadDivide', location: 3 },
    ';': { keyCode: 186, key: ';', code: 'Semicolon' },
    '=': { keyCode: 187, key: '=', code: 'Equal' },
    ',': { keyCode: 188, key: ',', code: 'Comma' },
    '.': { keyCode: 190, key: '.', code: 'Period' },
    '`': { keyCode: 192, key: '`', code: 'Backquote' },
    '[': { keyCode: 219, key: '[', code: 'BracketLeft' },
    '\\': { keyCode: 220, key: '\\', code: 'Backslash' },
    ']': { keyCode: 221, key: ']', code: 'BracketRight' },
    "'": { keyCode: 222, key: "'", code: 'Quote' },
    Attn: { keyCode: 246, key: 'Attn' },
    CrSel: { keyCode: 247, key: 'CrSel', code: 'Props' },
    ExSel: { keyCode: 248, key: 'ExSel' },
    EraseEof: { keyCode: 249, key: 'EraseEof' },
    Play: { keyCode: 250, key: 'Play' },
    ZoomOut: { keyCode: 251, key: 'ZoomOut' },
    ')': { keyCode: 48, key: ')', code: 'Digit0' },
    '!': { keyCode: 49, key: '!', code: 'Digit1' },
    '@': { keyCode: 50, key: '@', code: 'Digit2' },
    '#': { keyCode: 51, key: '#', code: 'Digit3' },
    $: { keyCode: 52, key: '$', code: 'Digit4' },
    '%': { keyCode: 53, key: '%', code: 'Digit5' },
    '^': { keyCode: 54, key: '^', code: 'Digit6' },
    '&': { keyCode: 55, key: '&', code: 'Digit7' },
    '(': { keyCode: 57, key: '(', code: 'Digit9' },
    A: { keyCode: 65, key: 'A', code: 'KeyA' },
    B: { keyCode: 66, key: 'B', code: 'KeyB' },
    C: { keyCode: 67, key: 'C', code: 'KeyC' },
    D: { keyCode: 68, key: 'D', code: 'KeyD' },
    E: { keyCode: 69, key: 'E', code: 'KeyE' },
    F: { keyCode: 70, key: 'F', code: 'KeyF' },
    G: { keyCode: 71, key: 'G', code: 'KeyG' },
    H: { keyCode: 72, key: 'H', code: 'KeyH' },
    I: { keyCode: 73, key: 'I', code: 'KeyI' },
    J: { keyCode: 74, key: 'J', code: 'KeyJ' },
    K: { keyCode: 75, key: 'K', code: 'KeyK' },
    L: { keyCode: 76, key: 'L', code: 'KeyL' },
    M: { keyCode: 77, key: 'M', code: 'KeyM' },
    N: { keyCode: 78, key: 'N', code: 'KeyN' },
    O: { keyCode: 79, key: 'O', code: 'KeyO' },
    P: { keyCode: 80, key: 'P', code: 'KeyP' },
    Q: { keyCode: 81, key: 'Q', code: 'KeyQ' },
    R: { keyCode: 82, key: 'R', code: 'KeyR' },
    S: { keyCode: 83, key: 'S', code: 'KeyS' },
    T: { keyCode: 84, key: 'T', code: 'KeyT' },
    U: { keyCode: 85, key: 'U', code: 'KeyU' },
    V: { keyCode: 86, key: 'V', code: 'KeyV' },
    W: { keyCode: 87, key: 'W', code: 'KeyW' },
    X: { keyCode: 88, key: 'X', code: 'KeyX' },
    Y: { keyCode: 89, key: 'Y', code: 'KeyY' },
    Z: { keyCode: 90, key: 'Z', code: 'KeyZ' },
    ':': { keyCode: 186, key: ':', code: 'Semicolon' },
    '<': { keyCode: 188, key: '<', code: 'Comma' },
    _: { keyCode: 189, key: '_', code: 'Minus' },
    '>': { keyCode: 190, key: '>', code: 'Period' },
    '?': { keyCode: 191, key: '?', code: 'Slash' },
    '~': { keyCode: 192, key: '~', code: 'Backquote' },
    '{': { keyCode: 219, key: '{', code: 'BracketLeft' },
    '|': { keyCode: 220, key: '|', code: 'Backslash' },
    '}': { keyCode: 221, key: '}', code: 'BracketRight' },
    '"': { keyCode: 222, key: '"', code: 'Quote' },
    SoftLeft: { key: 'SoftLeft', code: 'SoftLeft', location: 4 },
    SoftRight: { key: 'SoftRight', code: 'SoftRight', location: 4 },
    Camera: { keyCode: 44, key: 'Camera', code: 'Camera', location: 4 },
    Call: { key: 'Call', code: 'Call', location: 4 },
    EndCall: { keyCode: 95, key: 'EndCall', code: 'EndCall', location: 4 },
    VolumeDown: {
        keyCode: 182,
        key: 'VolumeDown',
        code: 'VolumeDown',
        location: 4,
    },
    VolumeUp: { keyCode: 183, key: 'VolumeUp', code: 'VolumeUp', location: 4 },
};
//# sourceMappingURL=USKeyboardLayout.js.map
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/Input.js
/**
 * Copyright 2017 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Input_classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var Input_classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _Keyboard_instances, _Keyboard_client, _Keyboard_pressedKeys, _Keyboard_modifierBit, _Keyboard_keyDescriptionForString, _Mouse_client, _Mouse_keyboard, _Mouse_x, _Mouse_y, _Mouse_button, _Touchscreen_client, _Touchscreen_keyboard;


/**
 * Keyboard provides an api for managing a virtual keyboard.
 * The high level api is {@link Keyboard."type"},
 * which takes raw characters and generates proper keydown, keypress/input,
 * and keyup events on your page.
 *
 * @remarks
 * For finer control, you can use {@link Keyboard.down},
 * {@link Keyboard.up}, and {@link Keyboard.sendCharacter}
 * to manually fire events as if they were generated from a real keyboard.
 *
 * On macOS, keyboard shortcuts like `⌘ A` -\> Select All do not work.
 * See {@link https://github.com/puppeteer/puppeteer/issues/1313 | #1313}.
 *
 * @example
 * An example of holding down `Shift` in order to select and delete some text:
 *
 * ```ts
 * await page.keyboard.type('Hello World!');
 * await page.keyboard.press('ArrowLeft');
 *
 * await page.keyboard.down('Shift');
 * for (let i = 0; i < ' World'.length; i++)
 *   await page.keyboard.press('ArrowLeft');
 * await page.keyboard.up('Shift');
 *
 * await page.keyboard.press('Backspace');
 * // Result text will end up saying 'Hello!'
 * ```
 *
 * @example
 * An example of pressing `A`
 *
 * ```ts
 * await page.keyboard.down('Shift');
 * await page.keyboard.press('KeyA');
 * await page.keyboard.up('Shift');
 * ```
 *
 * @public
 */
class Keyboard {
    /**
     * @internal
     */
    constructor(client) {
        _Keyboard_instances.add(this);
        _Keyboard_client.set(this, void 0);
        _Keyboard_pressedKeys.set(this, new Set());
        /**
         * @internal
         */
        this._modifiers = 0;
        Input_classPrivateFieldSet(this, _Keyboard_client, client, "f");
    }
    /**
     * Dispatches a `keydown` event.
     *
     * @remarks
     * If `key` is a single character and no modifier keys besides `Shift`
     * are being held down, a `keypress`/`input` event will also generated.
     * The `text` option can be specified to force an input event to be generated.
     * If `key` is a modifier key, `Shift`, `Meta`, `Control`, or `Alt`,
     * subsequent key presses will be sent with that modifier active.
     * To release the modifier key, use {@link Keyboard.up}.
     *
     * After the key is pressed once, subsequent calls to
     * {@link Keyboard.down} will have
     * {@link https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat | repeat}
     * set to true. To release the key, use {@link Keyboard.up}.
     *
     * Modifier keys DO influence {@link Keyboard.down}.
     * Holding down `Shift` will type the text in upper case.
     *
     * @param key - Name of key to press, such as `ArrowLeft`.
     * See {@link KeyInput} for a list of all key names.
     *
     * @param options - An object of options. Accepts text which, if specified,
     * generates an input event with this text. Accepts commands which, if specified,
     * is the commands of keyboard shortcuts,
     * see {@link https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/editing/commands/editor_command_names.h | Chromium Source Code} for valid command names.
     */
    async down(key, options = {
        text: undefined,
        commands: [],
    }) {
        const description = Input_classPrivateFieldGet(this, _Keyboard_instances, "m", _Keyboard_keyDescriptionForString).call(this, key);
        const autoRepeat = Input_classPrivateFieldGet(this, _Keyboard_pressedKeys, "f").has(description.code);
        Input_classPrivateFieldGet(this, _Keyboard_pressedKeys, "f").add(description.code);
        this._modifiers |= Input_classPrivateFieldGet(this, _Keyboard_instances, "m", _Keyboard_modifierBit).call(this, description.key);
        const text = options.text === undefined ? description.text : options.text;
        await Input_classPrivateFieldGet(this, _Keyboard_client, "f").send('Input.dispatchKeyEvent', {
            type: text ? 'keyDown' : 'rawKeyDown',
            modifiers: this._modifiers,
            windowsVirtualKeyCode: description.keyCode,
            code: description.code,
            key: description.key,
            text: text,
            unmodifiedText: text,
            autoRepeat,
            location: description.location,
            isKeypad: description.location === 3,
            commands: options.commands,
        });
    }
    /**
     * Dispatches a `keyup` event.
     *
     * @param key - Name of key to release, such as `ArrowLeft`.
     * See {@link KeyInput | KeyInput}
     * for a list of all key names.
     */
    async up(key) {
        const description = Input_classPrivateFieldGet(this, _Keyboard_instances, "m", _Keyboard_keyDescriptionForString).call(this, key);
        this._modifiers &= ~Input_classPrivateFieldGet(this, _Keyboard_instances, "m", _Keyboard_modifierBit).call(this, description.key);
        Input_classPrivateFieldGet(this, _Keyboard_pressedKeys, "f").delete(description.code);
        await Input_classPrivateFieldGet(this, _Keyboard_client, "f").send('Input.dispatchKeyEvent', {
            type: 'keyUp',
            modifiers: this._modifiers,
            key: description.key,
            windowsVirtualKeyCode: description.keyCode,
            code: description.code,
            location: description.location,
        });
    }
    /**
     * Dispatches a `keypress` and `input` event.
     * This does not send a `keydown` or `keyup` event.
     *
     * @remarks
     * Modifier keys DO NOT effect {@link Keyboard.sendCharacter | Keyboard.sendCharacter}.
     * Holding down `Shift` will not type the text in upper case.
     *
     * @example
     *
     * ```ts
     * page.keyboard.sendCharacter('嗨');
     * ```
     *
     * @param char - Character to send into the page.
     */
    async sendCharacter(char) {
        await Input_classPrivateFieldGet(this, _Keyboard_client, "f").send('Input.insertText', { text: char });
    }
    charIsKey(char) {
        return !!_keyDefinitions[char];
    }
    /**
     * Sends a `keydown`, `keypress`/`input`,
     * and `keyup` event for each character in the text.
     *
     * @remarks
     * To press a special key, like `Control` or `ArrowDown`,
     * use {@link Keyboard.press}.
     *
     * Modifier keys DO NOT effect `keyboard.type`.
     * Holding down `Shift` will not type the text in upper case.
     *
     * @example
     *
     * ```ts
     * await page.keyboard.type('Hello'); // Types instantly
     * await page.keyboard.type('World', {delay: 100}); // Types slower, like a user
     * ```
     *
     * @param text - A text to type into a focused element.
     * @param options - An object of options. Accepts delay which,
     * if specified, is the time to wait between `keydown` and `keyup` in milliseconds.
     * Defaults to 0.
     */
    async type(text, options = {}) {
        const delay = options.delay || undefined;
        for (const char of text) {
            if (this.charIsKey(char)) {
                await this.press(char, { delay });
            }
            else {
                if (delay) {
                    await new Promise(f => {
                        return setTimeout(f, delay);
                    });
                }
                await this.sendCharacter(char);
            }
        }
    }
    /**
     * Shortcut for {@link Keyboard.down}
     * and {@link Keyboard.up}.
     *
     * @remarks
     * If `key` is a single character and no modifier keys besides `Shift`
     * are being held down, a `keypress`/`input` event will also generated.
     * The `text` option can be specified to force an input event to be generated.
     *
     * Modifier keys DO effect {@link Keyboard.press}.
     * Holding down `Shift` will type the text in upper case.
     *
     * @param key - Name of key to press, such as `ArrowLeft`.
     * See {@link KeyInput} for a list of all key names.
     *
     * @param options - An object of options. Accepts text which, if specified,
     * generates an input event with this text. Accepts delay which,
     * if specified, is the time to wait between `keydown` and `keyup` in milliseconds.
     * Defaults to 0. Accepts commands which, if specified,
     * is the commands of keyboard shortcuts,
     * see {@link https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/editing/commands/editor_command_names.h | Chromium Source Code} for valid command names.
     */
    async press(key, options = {}) {
        const { delay = null } = options;
        await this.down(key, options);
        if (delay) {
            await new Promise(f => {
                return setTimeout(f, options.delay);
            });
        }
        await this.up(key);
    }
}
_Keyboard_client = new WeakMap(), _Keyboard_pressedKeys = new WeakMap(), _Keyboard_instances = new WeakSet(), _Keyboard_modifierBit = function _Keyboard_modifierBit(key) {
    if (key === 'Alt') {
        return 1;
    }
    if (key === 'Control') {
        return 2;
    }
    if (key === 'Meta') {
        return 4;
    }
    if (key === 'Shift') {
        return 8;
    }
    return 0;
}, _Keyboard_keyDescriptionForString = function _Keyboard_keyDescriptionForString(keyString) {
    const shift = this._modifiers & 8;
    const description = {
        key: '',
        keyCode: 0,
        code: '',
        text: '',
        location: 0,
    };
    const definition = _keyDefinitions[keyString];
    (0,assert/* assert */.h)(definition, `Unknown key: "${keyString}"`);
    if (definition.key) {
        description.key = definition.key;
    }
    if (shift && definition.shiftKey) {
        description.key = definition.shiftKey;
    }
    if (definition.keyCode) {
        description.keyCode = definition.keyCode;
    }
    if (shift && definition.shiftKeyCode) {
        description.keyCode = definition.shiftKeyCode;
    }
    if (definition.code) {
        description.code = definition.code;
    }
    if (definition.location) {
        description.location = definition.location;
    }
    if (description.key.length === 1) {
        description.text = description.key;
    }
    if (definition.text) {
        description.text = definition.text;
    }
    if (shift && definition.shiftText) {
        description.text = definition.shiftText;
    }
    // if any modifiers besides shift are pressed, no text should be sent
    if (this._modifiers & ~8) {
        description.text = '';
    }
    return description;
};
/**
 * The Mouse class operates in main-frame CSS pixels
 * relative to the top-left corner of the viewport.
 * @remarks
 * Every `page` object has its own Mouse, accessible with [`page.mouse`](#pagemouse).
 *
 * @example
 *
 * ```ts
 * // Using ‘page.mouse’ to trace a 100x100 square.
 * await page.mouse.move(0, 0);
 * await page.mouse.down();
 * await page.mouse.move(0, 100);
 * await page.mouse.move(100, 100);
 * await page.mouse.move(100, 0);
 * await page.mouse.move(0, 0);
 * await page.mouse.up();
 * ```
 *
 * **Note**: The mouse events trigger synthetic `MouseEvent`s.
 * This means that it does not fully replicate the functionality of what a normal user
 * would be able to do with their mouse.
 *
 * For example, dragging and selecting text is not possible using `page.mouse`.
 * Instead, you can use the {@link https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/getSelection | `DocumentOrShadowRoot.getSelection()`} functionality implemented in the platform.
 *
 * @example
 * For example, if you want to select all content between nodes:
 *
 * ```ts
 * await page.evaluate(
 *   (from, to) => {
 *     const selection = from.getRootNode().getSelection();
 *     const range = document.createRange();
 *     range.setStartBefore(from);
 *     range.setEndAfter(to);
 *     selection.removeAllRanges();
 *     selection.addRange(range);
 *   },
 *   fromJSHandle,
 *   toJSHandle
 * );
 * ```
 *
 * If you then would want to copy-paste your selection, you can use the clipboard api:
 *
 * ```ts
 * // The clipboard api does not allow you to copy, unless the tab is focused.
 * await page.bringToFront();
 * await page.evaluate(() => {
 *   // Copy the selected content to the clipboard
 *   document.execCommand('copy');
 *   // Obtain the content of the clipboard as a string
 *   return navigator.clipboard.readText();
 * });
 * ```
 *
 * **Note**: If you want access to the clipboard API,
 * you have to give it permission to do so:
 *
 * ```ts
 * await browser
 *   .defaultBrowserContext()
 *   .overridePermissions('<your origin>', [
 *     'clipboard-read',
 *     'clipboard-write',
 *   ]);
 * ```
 *
 * @public
 */
class Mouse {
    /**
     * @internal
     */
    constructor(client, keyboard) {
        _Mouse_client.set(this, void 0);
        _Mouse_keyboard.set(this, void 0);
        _Mouse_x.set(this, 0);
        _Mouse_y.set(this, 0);
        _Mouse_button.set(this, 'none');
        Input_classPrivateFieldSet(this, _Mouse_client, client, "f");
        Input_classPrivateFieldSet(this, _Mouse_keyboard, keyboard, "f");
    }
    /**
     * Dispatches a `mousemove` event.
     * @param x - Horizontal position of the mouse.
     * @param y - Vertical position of the mouse.
     * @param options - Optional object. If specified, the `steps` property
     * sends intermediate `mousemove` events when set to `1` (default).
     */
    async move(x, y, options = {}) {
        const { steps = 1 } = options;
        const fromX = Input_classPrivateFieldGet(this, _Mouse_x, "f"), fromY = Input_classPrivateFieldGet(this, _Mouse_y, "f");
        Input_classPrivateFieldSet(this, _Mouse_x, x, "f");
        Input_classPrivateFieldSet(this, _Mouse_y, y, "f");
        for (let i = 1; i <= steps; i++) {
            await Input_classPrivateFieldGet(this, _Mouse_client, "f").send('Input.dispatchMouseEvent', {
                type: 'mouseMoved',
                button: Input_classPrivateFieldGet(this, _Mouse_button, "f"),
                x: fromX + (Input_classPrivateFieldGet(this, _Mouse_x, "f") - fromX) * (i / steps),
                y: fromY + (Input_classPrivateFieldGet(this, _Mouse_y, "f") - fromY) * (i / steps),
                modifiers: Input_classPrivateFieldGet(this, _Mouse_keyboard, "f")._modifiers,
            });
        }
    }
    /**
     * Shortcut for `mouse.move`, `mouse.down` and `mouse.up`.
     * @param x - Horizontal position of the mouse.
     * @param y - Vertical position of the mouse.
     * @param options - Optional `MouseOptions`.
     */
    async click(x, y, options = {}) {
        const { delay = null } = options;
        if (delay !== null) {
            await this.move(x, y);
            await this.down(options);
            await new Promise(f => {
                return setTimeout(f, delay);
            });
            await this.up(options);
        }
        else {
            await this.move(x, y);
            await this.down(options);
            await this.up(options);
        }
    }
    /**
     * Dispatches a `mousedown` event.
     * @param options - Optional `MouseOptions`.
     */
    async down(options = {}) {
        const { button = 'left', clickCount = 1 } = options;
        Input_classPrivateFieldSet(this, _Mouse_button, button, "f");
        await Input_classPrivateFieldGet(this, _Mouse_client, "f").send('Input.dispatchMouseEvent', {
            type: 'mousePressed',
            button,
            x: Input_classPrivateFieldGet(this, _Mouse_x, "f"),
            y: Input_classPrivateFieldGet(this, _Mouse_y, "f"),
            modifiers: Input_classPrivateFieldGet(this, _Mouse_keyboard, "f")._modifiers,
            clickCount,
        });
    }
    /**
     * Dispatches a `mouseup` event.
     * @param options - Optional `MouseOptions`.
     */
    async up(options = {}) {
        const { button = 'left', clickCount = 1 } = options;
        Input_classPrivateFieldSet(this, _Mouse_button, 'none', "f");
        await Input_classPrivateFieldGet(this, _Mouse_client, "f").send('Input.dispatchMouseEvent', {
            type: 'mouseReleased',
            button,
            x: Input_classPrivateFieldGet(this, _Mouse_x, "f"),
            y: Input_classPrivateFieldGet(this, _Mouse_y, "f"),
            modifiers: Input_classPrivateFieldGet(this, _Mouse_keyboard, "f")._modifiers,
            clickCount,
        });
    }
    /**
     * Dispatches a `mousewheel` event.
     * @param options - Optional: `MouseWheelOptions`.
     *
     * @example
     * An example of zooming into an element:
     *
     * ```ts
     * await page.goto(
     *   'https://mdn.mozillademos.org/en-US/docs/Web/API/Element/wheel_event$samples/Scaling_an_element_via_the_wheel?revision=1587366'
     * );
     *
     * const elem = await page.$('div');
     * const boundingBox = await elem.boundingBox();
     * await page.mouse.move(
     *   boundingBox.x + boundingBox.width / 2,
     *   boundingBox.y + boundingBox.height / 2
     * );
     *
     * await page.mouse.wheel({deltaY: -100});
     * ```
     */
    async wheel(options = {}) {
        const { deltaX = 0, deltaY = 0 } = options;
        await Input_classPrivateFieldGet(this, _Mouse_client, "f").send('Input.dispatchMouseEvent', {
            type: 'mouseWheel',
            x: Input_classPrivateFieldGet(this, _Mouse_x, "f"),
            y: Input_classPrivateFieldGet(this, _Mouse_y, "f"),
            deltaX,
            deltaY,
            modifiers: Input_classPrivateFieldGet(this, _Mouse_keyboard, "f")._modifiers,
            pointerType: 'mouse',
        });
    }
    /**
     * Dispatches a `drag` event.
     * @param start - starting point for drag
     * @param target - point to drag to
     */
    async drag(start, target) {
        const promise = new Promise(resolve => {
            Input_classPrivateFieldGet(this, _Mouse_client, "f").once('Input.dragIntercepted', event => {
                return resolve(event.data);
            });
        });
        await this.move(start.x, start.y);
        await this.down();
        await this.move(target.x, target.y);
        return promise;
    }
    /**
     * Dispatches a `dragenter` event.
     * @param target - point for emitting `dragenter` event
     * @param data - drag data containing items and operations mask
     */
    async dragEnter(target, data) {
        await Input_classPrivateFieldGet(this, _Mouse_client, "f").send('Input.dispatchDragEvent', {
            type: 'dragEnter',
            x: target.x,
            y: target.y,
            modifiers: Input_classPrivateFieldGet(this, _Mouse_keyboard, "f")._modifiers,
            data,
        });
    }
    /**
     * Dispatches a `dragover` event.
     * @param target - point for emitting `dragover` event
     * @param data - drag data containing items and operations mask
     */
    async dragOver(target, data) {
        await Input_classPrivateFieldGet(this, _Mouse_client, "f").send('Input.dispatchDragEvent', {
            type: 'dragOver',
            x: target.x,
            y: target.y,
            modifiers: Input_classPrivateFieldGet(this, _Mouse_keyboard, "f")._modifiers,
            data,
        });
    }
    /**
     * Performs a dragenter, dragover, and drop in sequence.
     * @param target - point to drop on
     * @param data - drag data containing items and operations mask
     */
    async drop(target, data) {
        await Input_classPrivateFieldGet(this, _Mouse_client, "f").send('Input.dispatchDragEvent', {
            type: 'drop',
            x: target.x,
            y: target.y,
            modifiers: Input_classPrivateFieldGet(this, _Mouse_keyboard, "f")._modifiers,
            data,
        });
    }
    /**
     * Performs a drag, dragenter, dragover, and drop in sequence.
     * @param start - point to drag from
     * @param target - point to drop on
     * @param options - An object of options. Accepts delay which,
     * if specified, is the time to wait between `dragover` and `drop` in milliseconds.
     * Defaults to 0.
     */
    async dragAndDrop(start, target, options = {}) {
        const { delay = null } = options;
        const data = await this.drag(start, target);
        await this.dragEnter(target, data);
        await this.dragOver(target, data);
        if (delay) {
            await new Promise(resolve => {
                return setTimeout(resolve, delay);
            });
        }
        await this.drop(target, data);
        await this.up();
    }
}
_Mouse_client = new WeakMap(), _Mouse_keyboard = new WeakMap(), _Mouse_x = new WeakMap(), _Mouse_y = new WeakMap(), _Mouse_button = new WeakMap();
/**
 * The Touchscreen class exposes touchscreen events.
 * @public
 */
class Touchscreen {
    /**
     * @internal
     */
    constructor(client, keyboard) {
        _Touchscreen_client.set(this, void 0);
        _Touchscreen_keyboard.set(this, void 0);
        Input_classPrivateFieldSet(this, _Touchscreen_client, client, "f");
        Input_classPrivateFieldSet(this, _Touchscreen_keyboard, keyboard, "f");
    }
    /**
     * Dispatches a `touchstart` and `touchend` event.
     * @param x - Horizontal position of the tap.
     * @param y - Vertical position of the tap.
     */
    async tap(x, y) {
        await this.touchStart(x, y);
        await this.touchEnd();
    }
    /**
     * Dispatches a `touchstart` event.
     * @param x - Horizontal position of the tap.
     * @param y - Vertical position of the tap.
     */
    async touchStart(x, y) {
        const touchPoints = [{ x: Math.round(x), y: Math.round(y) }];
        await Input_classPrivateFieldGet(this, _Touchscreen_client, "f").send('Input.dispatchTouchEvent', {
            type: 'touchStart',
            touchPoints,
            modifiers: Input_classPrivateFieldGet(this, _Touchscreen_keyboard, "f")._modifiers,
        });
    }
    /**
     * Dispatches a `touchMove` event.
     * @param x - Horizontal position of the move.
     * @param y - Vertical position of the move.
     */
    async touchMove(x, y) {
        const movePoints = [{ x: Math.round(x), y: Math.round(y) }];
        await Input_classPrivateFieldGet(this, _Touchscreen_client, "f").send('Input.dispatchTouchEvent', {
            type: 'touchMove',
            touchPoints: movePoints,
            modifiers: Input_classPrivateFieldGet(this, _Touchscreen_keyboard, "f")._modifiers,
        });
    }
    /**
     * Dispatches a `touchend` event.
     */
    async touchEnd() {
        await Input_classPrivateFieldGet(this, _Touchscreen_client, "f").send('Input.dispatchTouchEvent', {
            type: 'touchEnd',
            touchPoints: [],
            modifiers: Input_classPrivateFieldGet(this, _Touchscreen_keyboard, "f")._modifiers,
        });
    }
}
_Touchscreen_client = new WeakMap(), _Touchscreen_keyboard = new WeakMap();
//# sourceMappingURL=Input.js.map
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/IsolatedWorlds.js
var IsolatedWorlds = __nccwpck_require__(6356);
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/NetworkManager.js
var NetworkManager = __nccwpck_require__(2765);
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/PDFOptions.js
/**
 * Copyright 2020 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @internal
 */
const _paperFormats = {
    letter: { width: 8.5, height: 11 },
    legal: { width: 8.5, height: 14 },
    tabloid: { width: 11, height: 17 },
    ledger: { width: 17, height: 11 },
    a0: { width: 33.1, height: 46.8 },
    a1: { width: 23.4, height: 33.1 },
    a2: { width: 16.54, height: 23.4 },
    a3: { width: 11.7, height: 16.54 },
    a4: { width: 8.27, height: 11.7 },
    a5: { width: 5.83, height: 8.27 },
    a6: { width: 4.13, height: 5.83 },
};
//# sourceMappingURL=PDFOptions.js.map
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/TimeoutSettings.js
/**
 * Copyright 2019 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var TimeoutSettings_classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var TimeoutSettings_classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _TimeoutSettings_defaultTimeout, _TimeoutSettings_defaultNavigationTimeout;
const DEFAULT_TIMEOUT = 30000;
/**
 * @internal
 */
class TimeoutSettings {
    constructor() {
        _TimeoutSettings_defaultTimeout.set(this, void 0);
        _TimeoutSettings_defaultNavigationTimeout.set(this, void 0);
        TimeoutSettings_classPrivateFieldSet(this, _TimeoutSettings_defaultTimeout, null, "f");
        TimeoutSettings_classPrivateFieldSet(this, _TimeoutSettings_defaultNavigationTimeout, null, "f");
    }
    setDefaultTimeout(timeout) {
        TimeoutSettings_classPrivateFieldSet(this, _TimeoutSettings_defaultTimeout, timeout, "f");
    }
    setDefaultNavigationTimeout(timeout) {
        TimeoutSettings_classPrivateFieldSet(this, _TimeoutSettings_defaultNavigationTimeout, timeout, "f");
    }
    navigationTimeout() {
        if (TimeoutSettings_classPrivateFieldGet(this, _TimeoutSettings_defaultNavigationTimeout, "f") !== null) {
            return TimeoutSettings_classPrivateFieldGet(this, _TimeoutSettings_defaultNavigationTimeout, "f");
        }
        if (TimeoutSettings_classPrivateFieldGet(this, _TimeoutSettings_defaultTimeout, "f") !== null) {
            return TimeoutSettings_classPrivateFieldGet(this, _TimeoutSettings_defaultTimeout, "f");
        }
        return DEFAULT_TIMEOUT;
    }
    timeout() {
        if (TimeoutSettings_classPrivateFieldGet(this, _TimeoutSettings_defaultTimeout, "f") !== null) {
            return TimeoutSettings_classPrivateFieldGet(this, _TimeoutSettings_defaultTimeout, "f");
        }
        return DEFAULT_TIMEOUT;
    }
}
_TimeoutSettings_defaultTimeout = new WeakMap(), _TimeoutSettings_defaultNavigationTimeout = new WeakMap();
//# sourceMappingURL=TimeoutSettings.js.map
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/Tracing.js
var Tracing_classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var Tracing_classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _Tracing_client, _Tracing_recording, _Tracing_path;
/**
 * Copyright 2017 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */



/**
 * The Tracing class exposes the tracing audit interface.
 * @remarks
 * You can use `tracing.start` and `tracing.stop` to create a trace file
 * which can be opened in Chrome DevTools or {@link https://chromedevtools.github.io/timeline-viewer/ | timeline viewer}.
 *
 * @example
 *
 * ```ts
 * await page.tracing.start({path: 'trace.json'});
 * await page.goto('https://www.google.com');
 * await page.tracing.stop();
 * ```
 *
 * @public
 */
class Tracing {
    /**
     * @internal
     */
    constructor(client) {
        _Tracing_client.set(this, void 0);
        _Tracing_recording.set(this, false);
        _Tracing_path.set(this, void 0);
        Tracing_classPrivateFieldSet(this, _Tracing_client, client, "f");
    }
    /**
     * Starts a trace for the current page.
     * @remarks
     * Only one trace can be active at a time per browser.
     *
     * @param options - Optional `TracingOptions`.
     */
    async start(options = {}) {
        (0,assert/* assert */.h)(!Tracing_classPrivateFieldGet(this, _Tracing_recording, "f"), 'Cannot start recording trace while already recording trace.');
        const defaultCategories = [
            '-*',
            'devtools.timeline',
            'v8.execute',
            'disabled-by-default-devtools.timeline',
            'disabled-by-default-devtools.timeline.frame',
            'toplevel',
            'blink.console',
            'blink.user_timing',
            'latencyInfo',
            'disabled-by-default-devtools.timeline.stack',
            'disabled-by-default-v8.cpu_profiler',
        ];
        const { path, screenshots = false, categories = defaultCategories } = options;
        if (screenshots) {
            categories.push('disabled-by-default-devtools.screenshot');
        }
        const excludedCategories = categories
            .filter(cat => {
            return cat.startsWith('-');
        })
            .map(cat => {
            return cat.slice(1);
        });
        const includedCategories = categories.filter(cat => {
            return !cat.startsWith('-');
        });
        Tracing_classPrivateFieldSet(this, _Tracing_path, path, "f");
        Tracing_classPrivateFieldSet(this, _Tracing_recording, true, "f");
        await Tracing_classPrivateFieldGet(this, _Tracing_client, "f").send('Tracing.start', {
            transferMode: 'ReturnAsStream',
            traceConfig: {
                excludedCategories,
                includedCategories,
            },
        });
    }
    /**
     * Stops a trace started with the `start` method.
     * @returns Promise which resolves to buffer with trace data.
     */
    async stop() {
        let resolve;
        let reject;
        const contentPromise = new Promise((x, y) => {
            resolve = x;
            reject = y;
        });
        Tracing_classPrivateFieldGet(this, _Tracing_client, "f").once('Tracing.tracingComplete', async (event) => {
            try {
                const readable = await (0,util/* getReadableFromProtocolStream */.xA)(Tracing_classPrivateFieldGet(this, _Tracing_client, "f"), event.stream);
                const buffer = await (0,util/* getReadableAsBuffer */.ze)(readable, Tracing_classPrivateFieldGet(this, _Tracing_path, "f"));
                resolve(buffer !== null && buffer !== void 0 ? buffer : undefined);
            }
            catch (error) {
                if ((0,ErrorLike/* isErrorLike */.x)(error)) {
                    reject(error);
                }
                else {
                    reject(new Error(`Unknown error: ${error}`));
                }
            }
        });
        await Tracing_classPrivateFieldGet(this, _Tracing_client, "f").send('Tracing.end');
        Tracing_classPrivateFieldSet(this, _Tracing_recording, false, "f");
        return contentPromise;
    }
}
_Tracing_client = new WeakMap(), _Tracing_recording = new WeakMap(), _Tracing_path = new WeakMap();
//# sourceMappingURL=Tracing.js.map
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/Page.js
/**
 * Copyright 2017 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Page_classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var Page_classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var _CDPPage_instances, _CDPPage_closed, _CDPPage_client, _CDPPage_target, _CDPPage_keyboard, _CDPPage_mouse, _CDPPage_timeoutSettings, _CDPPage_touchscreen, _CDPPage_accessibility, _CDPPage_frameManager, _CDPPage_emulationManager, _CDPPage_tracing, _CDPPage_pageBindings, _CDPPage_coverage, _CDPPage_javascriptEnabled, _CDPPage_viewport, _CDPPage_screenshotTaskQueue, _CDPPage_workers, _CDPPage_fileChooserPromises, _CDPPage_disconnectPromise, _CDPPage_userDragInterceptionEnabled, _CDPPage_onDetachedFromTarget, _CDPPage_onAttachedToTarget, _CDPPage_initialize, _CDPPage_onFileChooser, _CDPPage_onTargetCrashed, _CDPPage_onLogEntryAdded, _CDPPage_emitMetrics, _CDPPage_buildMetricsObject, _CDPPage_handleException, _CDPPage_onConsoleAPI, _CDPPage_onBindingCalled, _CDPPage_addConsoleMessage, _CDPPage_onDialog, _CDPPage_resetDefaultBackgroundColor, _CDPPage_setTransparentBackgroundColor, _CDPPage_sessionClosePromise, _CDPPage_go, _CDPPage_screenshotTask;




















/**
 * @internal
 */
class CDPPage extends Page/* Page */.T3 {
    /**
     * @internal
     */
    static async _create(client, target, ignoreHTTPSErrors, defaultViewport, screenshotTaskQueue) {
        const page = new CDPPage(client, target, ignoreHTTPSErrors, screenshotTaskQueue);
        await Page_classPrivateFieldGet(page, _CDPPage_instances, "m", _CDPPage_initialize).call(page);
        if (defaultViewport) {
            try {
                await page.setViewport(defaultViewport);
            }
            catch (err) {
                if ((0,ErrorLike/* isErrorLike */.x)(err) && (0,common_Connection/* isTargetClosedError */.lK)(err)) {
                    (0,util/* debugError */.ur)(err);
                }
                else {
                    throw err;
                }
            }
        }
        return page;
    }
    /**
     * @internal
     */
    constructor(client, target, ignoreHTTPSErrors, screenshotTaskQueue) {
        super();
        _CDPPage_instances.add(this);
        _CDPPage_closed.set(this, false);
        _CDPPage_client.set(this, void 0);
        _CDPPage_target.set(this, void 0);
        _CDPPage_keyboard.set(this, void 0);
        _CDPPage_mouse.set(this, void 0);
        _CDPPage_timeoutSettings.set(this, new TimeoutSettings());
        _CDPPage_touchscreen.set(this, void 0);
        _CDPPage_accessibility.set(this, void 0);
        _CDPPage_frameManager.set(this, void 0);
        _CDPPage_emulationManager.set(this, void 0);
        _CDPPage_tracing.set(this, void 0);
        _CDPPage_pageBindings.set(this, new Map());
        _CDPPage_coverage.set(this, void 0);
        _CDPPage_javascriptEnabled.set(this, true);
        _CDPPage_viewport.set(this, void 0);
        _CDPPage_screenshotTaskQueue.set(this, void 0);
        _CDPPage_workers.set(this, new Map());
        _CDPPage_fileChooserPromises.set(this, new Set());
        _CDPPage_disconnectPromise.set(this, void 0);
        _CDPPage_userDragInterceptionEnabled.set(this, false);
        _CDPPage_onDetachedFromTarget.set(this, (target) => {
            var _a;
            const sessionId = (_a = target._session()) === null || _a === void 0 ? void 0 : _a.id();
            const worker = Page_classPrivateFieldGet(this, _CDPPage_workers, "f").get(sessionId);
            if (!worker) {
                return;
            }
            Page_classPrivateFieldGet(this, _CDPPage_workers, "f").delete(sessionId);
            this.emit("workerdestroyed" /* PageEmittedEvents.WorkerDestroyed */, worker);
        });
        _CDPPage_onAttachedToTarget.set(this, (createdTarget) => {
            Page_classPrivateFieldGet(this, _CDPPage_frameManager, "f").onAttachedToTarget(createdTarget);
            if (createdTarget._getTargetInfo().type === 'worker') {
                const session = createdTarget._session();
                (0,assert/* assert */.h)(session);
                const worker = new WebWorker(session, createdTarget.url(), Page_classPrivateFieldGet(this, _CDPPage_instances, "m", _CDPPage_addConsoleMessage).bind(this), Page_classPrivateFieldGet(this, _CDPPage_instances, "m", _CDPPage_handleException).bind(this));
                Page_classPrivateFieldGet(this, _CDPPage_workers, "f").set(session.id(), worker);
                this.emit("workercreated" /* PageEmittedEvents.WorkerCreated */, worker);
            }
            if (createdTarget._session()) {
                Page_classPrivateFieldGet(this, _CDPPage_target, "f")
                    ._targetManager()
                    .addTargetInterceptor(createdTarget._session(), Page_classPrivateFieldGet(this, _CDPPage_onAttachedToTarget, "f"));
            }
        });
        Page_classPrivateFieldSet(this, _CDPPage_client, client, "f");
        Page_classPrivateFieldSet(this, _CDPPage_target, target, "f");
        Page_classPrivateFieldSet(this, _CDPPage_keyboard, new Keyboard(client), "f");
        Page_classPrivateFieldSet(this, _CDPPage_mouse, new Mouse(client, Page_classPrivateFieldGet(this, _CDPPage_keyboard, "f")), "f");
        Page_classPrivateFieldSet(this, _CDPPage_touchscreen, new Touchscreen(client, Page_classPrivateFieldGet(this, _CDPPage_keyboard, "f")), "f");
        Page_classPrivateFieldSet(this, _CDPPage_accessibility, new Accessibility(client), "f");
        Page_classPrivateFieldSet(this, _CDPPage_frameManager, new FrameManager/* FrameManager */.R(client, this, ignoreHTTPSErrors, Page_classPrivateFieldGet(this, _CDPPage_timeoutSettings, "f")), "f");
        Page_classPrivateFieldSet(this, _CDPPage_emulationManager, new EmulationManager(client), "f");
        Page_classPrivateFieldSet(this, _CDPPage_tracing, new Tracing(client), "f");
        Page_classPrivateFieldSet(this, _CDPPage_coverage, new Coverage(client), "f");
        Page_classPrivateFieldSet(this, _CDPPage_screenshotTaskQueue, screenshotTaskQueue, "f");
        Page_classPrivateFieldSet(this, _CDPPage_viewport, null, "f");
        Page_classPrivateFieldGet(this, _CDPPage_target, "f")
            ._targetManager()
            .addTargetInterceptor(Page_classPrivateFieldGet(this, _CDPPage_client, "f"), Page_classPrivateFieldGet(this, _CDPPage_onAttachedToTarget, "f"));
        Page_classPrivateFieldGet(this, _CDPPage_target, "f")
            ._targetManager()
            .on("targetGone" /* TargetManagerEmittedEvents.TargetGone */, Page_classPrivateFieldGet(this, _CDPPage_onDetachedFromTarget, "f"));
        Page_classPrivateFieldGet(this, _CDPPage_frameManager, "f").on(FrameManager/* FrameManagerEmittedEvents.FrameAttached */.G.FrameAttached, event => {
            return this.emit("frameattached" /* PageEmittedEvents.FrameAttached */, event);
        });
        Page_classPrivateFieldGet(this, _CDPPage_frameManager, "f").on(FrameManager/* FrameManagerEmittedEvents.FrameDetached */.G.FrameDetached, event => {
            return this.emit("framedetached" /* PageEmittedEvents.FrameDetached */, event);
        });
        Page_classPrivateFieldGet(this, _CDPPage_frameManager, "f").on(FrameManager/* FrameManagerEmittedEvents.FrameNavigated */.G.FrameNavigated, event => {
            return this.emit("framenavigated" /* PageEmittedEvents.FrameNavigated */, event);
        });
        const networkManager = Page_classPrivateFieldGet(this, _CDPPage_frameManager, "f").networkManager;
        networkManager.on(NetworkManager/* NetworkManagerEmittedEvents.Request */.x.Request, event => {
            return this.emit("request" /* PageEmittedEvents.Request */, event);
        });
        networkManager.on(NetworkManager/* NetworkManagerEmittedEvents.RequestServedFromCache */.x.RequestServedFromCache, event => {
            return this.emit("requestservedfromcache" /* PageEmittedEvents.RequestServedFromCache */, event);
        });
        networkManager.on(NetworkManager/* NetworkManagerEmittedEvents.Response */.x.Response, event => {
            return this.emit("response" /* PageEmittedEvents.Response */, event);
        });
        networkManager.on(NetworkManager/* NetworkManagerEmittedEvents.RequestFailed */.x.RequestFailed, event => {
            return this.emit("requestfailed" /* PageEmittedEvents.RequestFailed */, event);
        });
        networkManager.on(NetworkManager/* NetworkManagerEmittedEvents.RequestFinished */.x.RequestFinished, event => {
            return this.emit("requestfinished" /* PageEmittedEvents.RequestFinished */, event);
        });
        client.on('Page.domContentEventFired', () => {
            return this.emit("domcontentloaded" /* PageEmittedEvents.DOMContentLoaded */);
        });
        client.on('Page.loadEventFired', () => {
            return this.emit("load" /* PageEmittedEvents.Load */);
        });
        client.on('Runtime.consoleAPICalled', event => {
            return Page_classPrivateFieldGet(this, _CDPPage_instances, "m", _CDPPage_onConsoleAPI).call(this, event);
        });
        client.on('Runtime.bindingCalled', event => {
            return Page_classPrivateFieldGet(this, _CDPPage_instances, "m", _CDPPage_onBindingCalled).call(this, event);
        });
        client.on('Page.javascriptDialogOpening', event => {
            return Page_classPrivateFieldGet(this, _CDPPage_instances, "m", _CDPPage_onDialog).call(this, event);
        });
        client.on('Runtime.exceptionThrown', exception => {
            return Page_classPrivateFieldGet(this, _CDPPage_instances, "m", _CDPPage_handleException).call(this, exception.exceptionDetails);
        });
        client.on('Inspector.targetCrashed', () => {
            return Page_classPrivateFieldGet(this, _CDPPage_instances, "m", _CDPPage_onTargetCrashed).call(this);
        });
        client.on('Performance.metrics', event => {
            return Page_classPrivateFieldGet(this, _CDPPage_instances, "m", _CDPPage_emitMetrics).call(this, event);
        });
        client.on('Log.entryAdded', event => {
            return Page_classPrivateFieldGet(this, _CDPPage_instances, "m", _CDPPage_onLogEntryAdded).call(this, event);
        });
        client.on('Page.fileChooserOpened', event => {
            return Page_classPrivateFieldGet(this, _CDPPage_instances, "m", _CDPPage_onFileChooser).call(this, event);
        });
        Page_classPrivateFieldGet(this, _CDPPage_target, "f")._isClosedPromise.then(() => {
            Page_classPrivateFieldGet(this, _CDPPage_target, "f")
                ._targetManager()
                .removeTargetInterceptor(Page_classPrivateFieldGet(this, _CDPPage_client, "f"), Page_classPrivateFieldGet(this, _CDPPage_onAttachedToTarget, "f"));
            Page_classPrivateFieldGet(this, _CDPPage_target, "f")
                ._targetManager()
                .off("targetGone" /* TargetManagerEmittedEvents.TargetGone */, Page_classPrivateFieldGet(this, _CDPPage_onDetachedFromTarget, "f"));
            this.emit("close" /* PageEmittedEvents.Close */);
            Page_classPrivateFieldSet(this, _CDPPage_closed, true, "f");
        });
    }
    /**
     * @internal
     */
    _client() {
        return Page_classPrivateFieldGet(this, _CDPPage_client, "f");
    }
    isDragInterceptionEnabled() {
        return Page_classPrivateFieldGet(this, _CDPPage_userDragInterceptionEnabled, "f");
    }
    isJavaScriptEnabled() {
        return Page_classPrivateFieldGet(this, _CDPPage_javascriptEnabled, "f");
    }
    waitForFileChooser(options = {}) {
        const needsEnable = Page_classPrivateFieldGet(this, _CDPPage_fileChooserPromises, "f").size === 0;
        const { timeout = Page_classPrivateFieldGet(this, _CDPPage_timeoutSettings, "f").timeout() } = options;
        const promise = (0,DeferredPromise/* createDeferredPromise */.W)({
            message: `Waiting for \`FileChooser\` failed: ${timeout}ms exceeded`,
            timeout,
        });
        Page_classPrivateFieldGet(this, _CDPPage_fileChooserPromises, "f").add(promise);
        let enablePromise;
        if (needsEnable) {
            enablePromise = Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Page.setInterceptFileChooserDialog', {
                enabled: true,
            });
        }
        return Promise.all([promise, enablePromise])
            .then(([result]) => {
            return result;
        })
            .catch(error => {
            Page_classPrivateFieldGet(this, _CDPPage_fileChooserPromises, "f").delete(promise);
            throw error;
        });
    }
    async setGeolocation(options) {
        const { longitude, latitude, accuracy = 0 } = options;
        if (longitude < -180 || longitude > 180) {
            throw new Error(`Invalid longitude "${longitude}": precondition -180 <= LONGITUDE <= 180 failed.`);
        }
        if (latitude < -90 || latitude > 90) {
            throw new Error(`Invalid latitude "${latitude}": precondition -90 <= LATITUDE <= 90 failed.`);
        }
        if (accuracy < 0) {
            throw new Error(`Invalid accuracy "${accuracy}": precondition 0 <= ACCURACY failed.`);
        }
        await Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Emulation.setGeolocationOverride', {
            longitude,
            latitude,
            accuracy,
        });
    }
    target() {
        return Page_classPrivateFieldGet(this, _CDPPage_target, "f");
    }
    browser() {
        return Page_classPrivateFieldGet(this, _CDPPage_target, "f").browser();
    }
    browserContext() {
        return Page_classPrivateFieldGet(this, _CDPPage_target, "f").browserContext();
    }
    mainFrame() {
        return Page_classPrivateFieldGet(this, _CDPPage_frameManager, "f").mainFrame();
    }
    get keyboard() {
        return Page_classPrivateFieldGet(this, _CDPPage_keyboard, "f");
    }
    get touchscreen() {
        return Page_classPrivateFieldGet(this, _CDPPage_touchscreen, "f");
    }
    get coverage() {
        return Page_classPrivateFieldGet(this, _CDPPage_coverage, "f");
    }
    get tracing() {
        return Page_classPrivateFieldGet(this, _CDPPage_tracing, "f");
    }
    get accessibility() {
        return Page_classPrivateFieldGet(this, _CDPPage_accessibility, "f");
    }
    frames() {
        return Page_classPrivateFieldGet(this, _CDPPage_frameManager, "f").frames();
    }
    workers() {
        return Array.from(Page_classPrivateFieldGet(this, _CDPPage_workers, "f").values());
    }
    async setRequestInterception(value) {
        return Page_classPrivateFieldGet(this, _CDPPage_frameManager, "f").networkManager.setRequestInterception(value);
    }
    async setDragInterception(enabled) {
        Page_classPrivateFieldSet(this, _CDPPage_userDragInterceptionEnabled, enabled, "f");
        return Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Input.setInterceptDrags', { enabled });
    }
    setOfflineMode(enabled) {
        return Page_classPrivateFieldGet(this, _CDPPage_frameManager, "f").networkManager.setOfflineMode(enabled);
    }
    emulateNetworkConditions(networkConditions) {
        return Page_classPrivateFieldGet(this, _CDPPage_frameManager, "f").networkManager.emulateNetworkConditions(networkConditions);
    }
    setDefaultNavigationTimeout(timeout) {
        Page_classPrivateFieldGet(this, _CDPPage_timeoutSettings, "f").setDefaultNavigationTimeout(timeout);
    }
    setDefaultTimeout(timeout) {
        Page_classPrivateFieldGet(this, _CDPPage_timeoutSettings, "f").setDefaultTimeout(timeout);
    }
    getDefaultTimeout() {
        return Page_classPrivateFieldGet(this, _CDPPage_timeoutSettings, "f").timeout();
    }
    async $(selector) {
        return this.mainFrame().$(selector);
    }
    async $$(selector) {
        return this.mainFrame().$$(selector);
    }
    async evaluateHandle(pageFunction, ...args) {
        const context = await this.mainFrame().executionContext();
        return context.evaluateHandle(pageFunction, ...args);
    }
    async queryObjects(prototypeHandle) {
        const context = await this.mainFrame().executionContext();
        (0,assert/* assert */.h)(!prototypeHandle.disposed, 'Prototype JSHandle is disposed!');
        const remoteObject = prototypeHandle.remoteObject();
        (0,assert/* assert */.h)(remoteObject.objectId, 'Prototype JSHandle must not be referencing primitive value');
        const response = await context._client.send('Runtime.queryObjects', {
            prototypeObjectId: remoteObject.objectId,
        });
        return (0,util/* createJSHandle */.tB)(context, response.objects);
    }
    async $eval(selector, pageFunction, ...args) {
        return this.mainFrame().$eval(selector, pageFunction, ...args);
    }
    async $$eval(selector, pageFunction, ...args) {
        return this.mainFrame().$$eval(selector, pageFunction, ...args);
    }
    async $x(expression) {
        return this.mainFrame().$x(expression);
    }
    async cookies(...urls) {
        const originalCookies = (await Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Network.getCookies', {
            urls: urls.length ? urls : [this.url()],
        })).cookies;
        const unsupportedCookieAttributes = ['priority'];
        const filterUnsupportedAttributes = (cookie) => {
            for (const attr of unsupportedCookieAttributes) {
                delete cookie[attr];
            }
            return cookie;
        };
        return originalCookies.map(filterUnsupportedAttributes);
    }
    async deleteCookie(...cookies) {
        const pageURL = this.url();
        for (const cookie of cookies) {
            const item = Object.assign({}, cookie);
            if (!cookie.url && pageURL.startsWith('http')) {
                item.url = pageURL;
            }
            await Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Network.deleteCookies', item);
        }
    }
    async setCookie(...cookies) {
        const pageURL = this.url();
        const startsWithHTTP = pageURL.startsWith('http');
        const items = cookies.map(cookie => {
            const item = Object.assign({}, cookie);
            if (!item.url && startsWithHTTP) {
                item.url = pageURL;
            }
            (0,assert/* assert */.h)(item.url !== 'about:blank', `Blank page can not have cookie "${item.name}"`);
            (0,assert/* assert */.h)(!String.prototype.startsWith.call(item.url || '', 'data:'), `Data URL page can not have cookie "${item.name}"`);
            return item;
        });
        await this.deleteCookie(...items);
        if (items.length) {
            await Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Network.setCookies', { cookies: items });
        }
    }
    async addScriptTag(options) {
        return this.mainFrame().addScriptTag(options);
    }
    async addStyleTag(options) {
        return this.mainFrame().addStyleTag(options);
    }
    async exposeFunction(name, pptrFunction) {
        if (Page_classPrivateFieldGet(this, _CDPPage_pageBindings, "f").has(name)) {
            throw new Error(`Failed to add page binding with name ${name}: window['${name}'] already exists!`);
        }
        let exposedFunction;
        switch (typeof pptrFunction) {
            case 'function':
                exposedFunction = pptrFunction;
                break;
            default:
                exposedFunction = pptrFunction.default;
                break;
        }
        Page_classPrivateFieldGet(this, _CDPPage_pageBindings, "f").set(name, exposedFunction);
        const expression = (0,util/* pageBindingInitString */.TF)('exposedFun', name);
        await Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Runtime.addBinding', { name: name });
        await Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Page.addScriptToEvaluateOnNewDocument', {
            source: expression,
        });
        await Promise.all(this.frames().map(frame => {
            return frame.evaluate(expression).catch(util/* debugError */.ur);
        }));
    }
    async authenticate(credentials) {
        return Page_classPrivateFieldGet(this, _CDPPage_frameManager, "f").networkManager.authenticate(credentials);
    }
    async setExtraHTTPHeaders(headers) {
        return Page_classPrivateFieldGet(this, _CDPPage_frameManager, "f").networkManager.setExtraHTTPHeaders(headers);
    }
    async setUserAgent(userAgent, userAgentMetadata) {
        return Page_classPrivateFieldGet(this, _CDPPage_frameManager, "f").networkManager.setUserAgent(userAgent, userAgentMetadata);
    }
    async metrics() {
        const response = await Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Performance.getMetrics');
        return Page_classPrivateFieldGet(this, _CDPPage_instances, "m", _CDPPage_buildMetricsObject).call(this, response.metrics);
    }
    url() {
        return this.mainFrame().url();
    }
    async content() {
        return await Page_classPrivateFieldGet(this, _CDPPage_frameManager, "f").mainFrame().content();
    }
    async setContent(html, options = {}) {
        await Page_classPrivateFieldGet(this, _CDPPage_frameManager, "f").mainFrame().setContent(html, options);
    }
    async goto(url, options = {}) {
        return await Page_classPrivateFieldGet(this, _CDPPage_frameManager, "f").mainFrame().goto(url, options);
    }
    async reload(options) {
        const result = await Promise.all([
            this.waitForNavigation(options),
            Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Page.reload'),
        ]);
        return result[0];
    }
    async waitForNavigation(options = {}) {
        return await Page_classPrivateFieldGet(this, _CDPPage_frameManager, "f").mainFrame().waitForNavigation(options);
    }
    async waitForRequest(urlOrPredicate, options = {}) {
        const { timeout = Page_classPrivateFieldGet(this, _CDPPage_timeoutSettings, "f").timeout() } = options;
        return (0,util/* waitForEvent */.mA)(Page_classPrivateFieldGet(this, _CDPPage_frameManager, "f").networkManager, NetworkManager/* NetworkManagerEmittedEvents.Request */.x.Request, async (request) => {
            if ((0,util/* isString */.HD)(urlOrPredicate)) {
                return urlOrPredicate === request.url();
            }
            if (typeof urlOrPredicate === 'function') {
                return !!(await urlOrPredicate(request));
            }
            return false;
        }, timeout, Page_classPrivateFieldGet(this, _CDPPage_instances, "m", _CDPPage_sessionClosePromise).call(this));
    }
    async waitForResponse(urlOrPredicate, options = {}) {
        const { timeout = Page_classPrivateFieldGet(this, _CDPPage_timeoutSettings, "f").timeout() } = options;
        return (0,util/* waitForEvent */.mA)(Page_classPrivateFieldGet(this, _CDPPage_frameManager, "f").networkManager, NetworkManager/* NetworkManagerEmittedEvents.Response */.x.Response, async (response) => {
            if ((0,util/* isString */.HD)(urlOrPredicate)) {
                return urlOrPredicate === response.url();
            }
            if (typeof urlOrPredicate === 'function') {
                return !!(await urlOrPredicate(response));
            }
            return false;
        }, timeout, Page_classPrivateFieldGet(this, _CDPPage_instances, "m", _CDPPage_sessionClosePromise).call(this));
    }
    async waitForNetworkIdle(options = {}) {
        const { idleTime = 500, timeout = Page_classPrivateFieldGet(this, _CDPPage_timeoutSettings, "f").timeout() } = options;
        const networkManager = Page_classPrivateFieldGet(this, _CDPPage_frameManager, "f").networkManager;
        let idleResolveCallback;
        const idlePromise = new Promise(resolve => {
            idleResolveCallback = resolve;
        });
        let abortRejectCallback;
        const abortPromise = new Promise((_, reject) => {
            abortRejectCallback = reject;
        });
        let idleTimer;
        const onIdle = () => {
            return idleResolveCallback();
        };
        const cleanup = () => {
            idleTimer && clearTimeout(idleTimer);
            abortRejectCallback(new Error('abort'));
        };
        const evaluate = () => {
            idleTimer && clearTimeout(idleTimer);
            if (networkManager.numRequestsInProgress() === 0) {
                idleTimer = setTimeout(onIdle, idleTime);
            }
        };
        evaluate();
        const eventHandler = () => {
            evaluate();
            return false;
        };
        const listenToEvent = (event) => {
            return (0,util/* waitForEvent */.mA)(networkManager, event, eventHandler, timeout, abortPromise);
        };
        const eventPromises = [
            listenToEvent(NetworkManager/* NetworkManagerEmittedEvents.Request */.x.Request),
            listenToEvent(NetworkManager/* NetworkManagerEmittedEvents.Response */.x.Response),
        ];
        await Promise.race([
            idlePromise,
            ...eventPromises,
            Page_classPrivateFieldGet(this, _CDPPage_instances, "m", _CDPPage_sessionClosePromise).call(this),
        ]).then(r => {
            cleanup();
            return r;
        }, error => {
            cleanup();
            throw error;
        });
    }
    async waitForFrame(urlOrPredicate, options = {}) {
        const { timeout = Page_classPrivateFieldGet(this, _CDPPage_timeoutSettings, "f").timeout() } = options;
        let predicate;
        if ((0,util/* isString */.HD)(urlOrPredicate)) {
            predicate = (frame) => {
                return Promise.resolve(urlOrPredicate === frame.url());
            };
        }
        else {
            predicate = (frame) => {
                const value = urlOrPredicate(frame);
                if (typeof value === 'boolean') {
                    return Promise.resolve(value);
                }
                return value;
            };
        }
        const eventRace = Promise.race([
            (0,util/* waitForEvent */.mA)(Page_classPrivateFieldGet(this, _CDPPage_frameManager, "f"), FrameManager/* FrameManagerEmittedEvents.FrameAttached */.G.FrameAttached, predicate, timeout, Page_classPrivateFieldGet(this, _CDPPage_instances, "m", _CDPPage_sessionClosePromise).call(this)),
            (0,util/* waitForEvent */.mA)(Page_classPrivateFieldGet(this, _CDPPage_frameManager, "f"), FrameManager/* FrameManagerEmittedEvents.FrameNavigated */.G.FrameNavigated, predicate, timeout, Page_classPrivateFieldGet(this, _CDPPage_instances, "m", _CDPPage_sessionClosePromise).call(this)),
            ...this.frames().map(async (frame) => {
                if (await predicate(frame)) {
                    return frame;
                }
                return await eventRace;
            }),
        ]);
        return eventRace;
    }
    async goBack(options = {}) {
        return Page_classPrivateFieldGet(this, _CDPPage_instances, "m", _CDPPage_go).call(this, -1, options);
    }
    async goForward(options = {}) {
        return Page_classPrivateFieldGet(this, _CDPPage_instances, "m", _CDPPage_go).call(this, +1, options);
    }
    async bringToFront() {
        await Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Page.bringToFront');
    }
    async setJavaScriptEnabled(enabled) {
        if (Page_classPrivateFieldGet(this, _CDPPage_javascriptEnabled, "f") === enabled) {
            return;
        }
        Page_classPrivateFieldSet(this, _CDPPage_javascriptEnabled, enabled, "f");
        await Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Emulation.setScriptExecutionDisabled', {
            value: !enabled,
        });
    }
    async setBypassCSP(enabled) {
        await Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Page.setBypassCSP', { enabled });
    }
    async emulateMediaType(type) {
        (0,assert/* assert */.h)(type === 'screen' ||
            type === 'print' ||
            (type !== null && type !== void 0 ? type : undefined) === undefined, 'Unsupported media type: ' + type);
        await Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Emulation.setEmulatedMedia', {
            media: type || '',
        });
    }
    async emulateCPUThrottling(factor) {
        (0,assert/* assert */.h)(factor === null || factor >= 1, 'Throttling rate should be greater or equal to 1');
        await Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Emulation.setCPUThrottlingRate', {
            rate: factor !== null ? factor : 1,
        });
    }
    async emulateMediaFeatures(features) {
        if (!features) {
            await Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Emulation.setEmulatedMedia', {});
        }
        if (Array.isArray(features)) {
            for (const mediaFeature of features) {
                const name = mediaFeature.name;
                (0,assert/* assert */.h)(/^(?:prefers-(?:color-scheme|reduced-motion)|color-gamut)$/.test(name), 'Unsupported media feature: ' + name);
            }
            await Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Emulation.setEmulatedMedia', {
                features: features,
            });
        }
    }
    async emulateTimezone(timezoneId) {
        try {
            await Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Emulation.setTimezoneOverride', {
                timezoneId: timezoneId || '',
            });
        }
        catch (error) {
            if ((0,ErrorLike/* isErrorLike */.x)(error) && error.message.includes('Invalid timezone')) {
                throw new Error(`Invalid timezone ID: ${timezoneId}`);
            }
            throw error;
        }
    }
    async emulateIdleState(overrides) {
        if (overrides) {
            await Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Emulation.setIdleOverride', {
                isUserActive: overrides.isUserActive,
                isScreenUnlocked: overrides.isScreenUnlocked,
            });
        }
        else {
            await Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Emulation.clearIdleOverride');
        }
    }
    async emulateVisionDeficiency(type) {
        const visionDeficiencies = new Set([
            'none',
            'achromatopsia',
            'blurredVision',
            'deuteranopia',
            'protanopia',
            'tritanopia',
        ]);
        try {
            (0,assert/* assert */.h)(!type || visionDeficiencies.has(type), `Unsupported vision deficiency: ${type}`);
            await Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Emulation.setEmulatedVisionDeficiency', {
                type: type || 'none',
            });
        }
        catch (error) {
            throw error;
        }
    }
    async setViewport(viewport) {
        const needsReload = await Page_classPrivateFieldGet(this, _CDPPage_emulationManager, "f").emulateViewport(viewport);
        Page_classPrivateFieldSet(this, _CDPPage_viewport, viewport, "f");
        if (needsReload) {
            await this.reload();
        }
    }
    viewport() {
        return Page_classPrivateFieldGet(this, _CDPPage_viewport, "f");
    }
    async evaluate(pageFunction, ...args) {
        return Page_classPrivateFieldGet(this, _CDPPage_frameManager, "f").mainFrame().evaluate(pageFunction, ...args);
    }
    async evaluateOnNewDocument(pageFunction, ...args) {
        const source = (0,util/* evaluationString */.Hz)(pageFunction, ...args);
        await Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Page.addScriptToEvaluateOnNewDocument', {
            source,
        });
    }
    async setCacheEnabled(enabled = true) {
        await Page_classPrivateFieldGet(this, _CDPPage_frameManager, "f").networkManager.setCacheEnabled(enabled);
    }
    async screenshot(options = {}) {
        let screenshotType = "png" /* Protocol.Page.CaptureScreenshotRequestFormat.Png */;
        // options.type takes precedence over inferring the type from options.path
        // because it may be a 0-length file with no extension created beforehand
        // (i.e. as a temp file).
        if (options.type) {
            screenshotType =
                options.type;
        }
        else if (options.path) {
            const filePath = options.path;
            const extension = filePath
                .slice(filePath.lastIndexOf('.') + 1)
                .toLowerCase();
            switch (extension) {
                case 'png':
                    screenshotType = "png" /* Protocol.Page.CaptureScreenshotRequestFormat.Png */;
                    break;
                case 'jpeg':
                case 'jpg':
                    screenshotType = "jpeg" /* Protocol.Page.CaptureScreenshotRequestFormat.Jpeg */;
                    break;
                case 'webp':
                    screenshotType = "webp" /* Protocol.Page.CaptureScreenshotRequestFormat.Webp */;
                    break;
                default:
                    throw new Error(`Unsupported screenshot type for extension \`.${extension}\``);
            }
        }
        if (options.quality) {
            (0,assert/* assert */.h)(screenshotType === "jpeg" /* Protocol.Page.CaptureScreenshotRequestFormat.Jpeg */ ||
                screenshotType === "webp" /* Protocol.Page.CaptureScreenshotRequestFormat.Webp */, 'options.quality is unsupported for the ' +
                screenshotType +
                ' screenshots');
            (0,assert/* assert */.h)(typeof options.quality === 'number', 'Expected options.quality to be a number but found ' +
                typeof options.quality);
            (0,assert/* assert */.h)(Number.isInteger(options.quality), 'Expected options.quality to be an integer');
            (0,assert/* assert */.h)(options.quality >= 0 && options.quality <= 100, 'Expected options.quality to be between 0 and 100 (inclusive), got ' +
                options.quality);
        }
        (0,assert/* assert */.h)(!options.clip || !options.fullPage, 'options.clip and options.fullPage are exclusive');
        if (options.clip) {
            (0,assert/* assert */.h)(typeof options.clip.x === 'number', 'Expected options.clip.x to be a number but found ' +
                typeof options.clip.x);
            (0,assert/* assert */.h)(typeof options.clip.y === 'number', 'Expected options.clip.y to be a number but found ' +
                typeof options.clip.y);
            (0,assert/* assert */.h)(typeof options.clip.width === 'number', 'Expected options.clip.width to be a number but found ' +
                typeof options.clip.width);
            (0,assert/* assert */.h)(typeof options.clip.height === 'number', 'Expected options.clip.height to be a number but found ' +
                typeof options.clip.height);
            (0,assert/* assert */.h)(options.clip.width !== 0, 'Expected options.clip.width not to be 0.');
            (0,assert/* assert */.h)(options.clip.height !== 0, 'Expected options.clip.height not to be 0.');
        }
        return Page_classPrivateFieldGet(this, _CDPPage_screenshotTaskQueue, "f").postTask(() => {
            return Page_classPrivateFieldGet(this, _CDPPage_instances, "m", _CDPPage_screenshotTask).call(this, screenshotType, options);
        });
    }
    async createPDFStream(options = {}) {
        const { scale = 1, displayHeaderFooter = false, headerTemplate = '', footerTemplate = '', printBackground = false, landscape = false, pageRanges = '', preferCSSPageSize = false, margin = {}, omitBackground = false, timeout = 30000, } = options;
        let paperWidth = 8.5;
        let paperHeight = 11;
        if (options.format) {
            const format = _paperFormats[options.format.toLowerCase()];
            (0,assert/* assert */.h)(format, 'Unknown paper format: ' + options.format);
            paperWidth = format.width;
            paperHeight = format.height;
        }
        else {
            paperWidth = convertPrintParameterToInches(options.width) || paperWidth;
            paperHeight =
                convertPrintParameterToInches(options.height) || paperHeight;
        }
        const marginTop = convertPrintParameterToInches(margin.top) || 0;
        const marginLeft = convertPrintParameterToInches(margin.left) || 0;
        const marginBottom = convertPrintParameterToInches(margin.bottom) || 0;
        const marginRight = convertPrintParameterToInches(margin.right) || 0;
        if (omitBackground) {
            await Page_classPrivateFieldGet(this, _CDPPage_instances, "m", _CDPPage_setTransparentBackgroundColor).call(this);
        }
        const printCommandPromise = Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Page.printToPDF', {
            transferMode: 'ReturnAsStream',
            landscape,
            displayHeaderFooter,
            headerTemplate,
            footerTemplate,
            printBackground,
            scale,
            paperWidth,
            paperHeight,
            marginTop,
            marginBottom,
            marginLeft,
            marginRight,
            pageRanges,
            preferCSSPageSize,
        });
        const result = await (0,util/* waitWithTimeout */.CS)(printCommandPromise, 'Page.printToPDF', timeout);
        if (omitBackground) {
            await Page_classPrivateFieldGet(this, _CDPPage_instances, "m", _CDPPage_resetDefaultBackgroundColor).call(this);
        }
        (0,assert/* assert */.h)(result.stream, '`stream` is missing from `Page.printToPDF');
        return (0,util/* getReadableFromProtocolStream */.xA)(Page_classPrivateFieldGet(this, _CDPPage_client, "f"), result.stream);
    }
    async pdf(options = {}) {
        const { path = undefined } = options;
        const readable = await this.createPDFStream(options);
        const buffer = await (0,util/* getReadableAsBuffer */.ze)(readable, path);
        (0,assert/* assert */.h)(buffer, 'Could not create buffer');
        return buffer;
    }
    async title() {
        return this.mainFrame().title();
    }
    async close(options = { runBeforeUnload: undefined }) {
        const connection = Page_classPrivateFieldGet(this, _CDPPage_client, "f").connection();
        (0,assert/* assert */.h)(connection, 'Protocol error: Connection closed. Most likely the page has been closed.');
        const runBeforeUnload = !!options.runBeforeUnload;
        if (runBeforeUnload) {
            await Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Page.close');
        }
        else {
            await connection.send('Target.closeTarget', {
                targetId: Page_classPrivateFieldGet(this, _CDPPage_target, "f")._targetId,
            });
            await Page_classPrivateFieldGet(this, _CDPPage_target, "f")._isClosedPromise;
        }
    }
    isClosed() {
        return Page_classPrivateFieldGet(this, _CDPPage_closed, "f");
    }
    get mouse() {
        return Page_classPrivateFieldGet(this, _CDPPage_mouse, "f");
    }
    click(selector, options = {}) {
        return this.mainFrame().click(selector, options);
    }
    focus(selector) {
        return this.mainFrame().focus(selector);
    }
    hover(selector) {
        return this.mainFrame().hover(selector);
    }
    select(selector, ...values) {
        return this.mainFrame().select(selector, ...values);
    }
    tap(selector) {
        return this.mainFrame().tap(selector);
    }
    type(selector, text, options) {
        return this.mainFrame().type(selector, text, options);
    }
    waitForTimeout(milliseconds) {
        return this.mainFrame().waitForTimeout(milliseconds);
    }
    async waitForSelector(selector, options = {}) {
        return await this.mainFrame().waitForSelector(selector, options);
    }
    waitForXPath(xpath, options = {}) {
        return this.mainFrame().waitForXPath(xpath, options);
    }
    waitForFunction(pageFunction, options = {}, ...args) {
        return this.mainFrame().waitForFunction(pageFunction, options, ...args);
    }
}
_CDPPage_closed = new WeakMap(), _CDPPage_client = new WeakMap(), _CDPPage_target = new WeakMap(), _CDPPage_keyboard = new WeakMap(), _CDPPage_mouse = new WeakMap(), _CDPPage_timeoutSettings = new WeakMap(), _CDPPage_touchscreen = new WeakMap(), _CDPPage_accessibility = new WeakMap(), _CDPPage_frameManager = new WeakMap(), _CDPPage_emulationManager = new WeakMap(), _CDPPage_tracing = new WeakMap(), _CDPPage_pageBindings = new WeakMap(), _CDPPage_coverage = new WeakMap(), _CDPPage_javascriptEnabled = new WeakMap(), _CDPPage_viewport = new WeakMap(), _CDPPage_screenshotTaskQueue = new WeakMap(), _CDPPage_workers = new WeakMap(), _CDPPage_fileChooserPromises = new WeakMap(), _CDPPage_disconnectPromise = new WeakMap(), _CDPPage_userDragInterceptionEnabled = new WeakMap(), _CDPPage_onDetachedFromTarget = new WeakMap(), _CDPPage_onAttachedToTarget = new WeakMap(), _CDPPage_instances = new WeakSet(), _CDPPage_initialize = async function _CDPPage_initialize() {
    try {
        await Promise.all([
            Page_classPrivateFieldGet(this, _CDPPage_frameManager, "f").initialize(),
            Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Performance.enable'),
            Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Log.enable'),
        ]);
    }
    catch (err) {
        if ((0,ErrorLike/* isErrorLike */.x)(err) && (0,common_Connection/* isTargetClosedError */.lK)(err)) {
            (0,util/* debugError */.ur)(err);
        }
        else {
            throw err;
        }
    }
}, _CDPPage_onFileChooser = async function _CDPPage_onFileChooser(event) {
    if (!Page_classPrivateFieldGet(this, _CDPPage_fileChooserPromises, "f").size) {
        return;
    }
    const frame = Page_classPrivateFieldGet(this, _CDPPage_frameManager, "f").frame(event.frameId);
    (0,assert/* assert */.h)(frame, 'This should never happen.');
    // This is guaranteed to be an HTMLInputElement handle by the event.
    const handle = (await frame.worlds[IsolatedWorlds/* MAIN_WORLD */.H].adoptBackendNode(event.backendNodeId));
    const fileChooser = new FileChooser(handle, event);
    for (const promise of Page_classPrivateFieldGet(this, _CDPPage_fileChooserPromises, "f")) {
        promise.resolve(fileChooser);
    }
    Page_classPrivateFieldGet(this, _CDPPage_fileChooserPromises, "f").clear();
}, _CDPPage_onTargetCrashed = function _CDPPage_onTargetCrashed() {
    this.emit('error', new Error('Page crashed!'));
}, _CDPPage_onLogEntryAdded = function _CDPPage_onLogEntryAdded(event) {
    const { level, text, args, source, url, lineNumber } = event.entry;
    if (args) {
        args.map(arg => {
            return (0,util/* releaseObject */.M9)(Page_classPrivateFieldGet(this, _CDPPage_client, "f"), arg);
        });
    }
    if (source !== 'worker') {
        this.emit("console" /* PageEmittedEvents.Console */, new ConsoleMessage(level, text, [], [{ url, lineNumber }]));
    }
}, _CDPPage_emitMetrics = function _CDPPage_emitMetrics(event) {
    this.emit("metrics" /* PageEmittedEvents.Metrics */, {
        title: event.title,
        metrics: Page_classPrivateFieldGet(this, _CDPPage_instances, "m", _CDPPage_buildMetricsObject).call(this, event.metrics),
    });
}, _CDPPage_buildMetricsObject = function _CDPPage_buildMetricsObject(metrics) {
    const result = {};
    for (const metric of metrics || []) {
        if (supportedMetrics.has(metric.name)) {
            result[metric.name] = metric.value;
        }
    }
    return result;
}, _CDPPage_handleException = function _CDPPage_handleException(exceptionDetails) {
    const message = (0,util/* getExceptionMessage */.is)(exceptionDetails);
    const err = new Error(message);
    err.stack = ''; // Don't report clientside error with a node stack attached
    this.emit("pageerror" /* PageEmittedEvents.PageError */, err);
}, _CDPPage_onConsoleAPI = async function _CDPPage_onConsoleAPI(event) {
    if (event.executionContextId === 0) {
        // DevTools protocol stores the last 1000 console messages. These
        // messages are always reported even for removed execution contexts. In
        // this case, they are marked with executionContextId = 0 and are
        // reported upon enabling Runtime agent.
        //
        // Ignore these messages since:
        // - there's no execution context we can use to operate with message
        //   arguments
        // - these messages are reported before Puppeteer clients can subscribe
        //   to the 'console'
        //   page event.
        //
        // @see https://github.com/puppeteer/puppeteer/issues/3865
        return;
    }
    const context = Page_classPrivateFieldGet(this, _CDPPage_frameManager, "f").getExecutionContextById(event.executionContextId, Page_classPrivateFieldGet(this, _CDPPage_client, "f"));
    if (!context) {
        (0,util/* debugError */.ur)(new Error(`ExecutionContext not found for a console message: ${JSON.stringify(event)}`));
        return;
    }
    const values = event.args.map(arg => {
        return (0,util/* createJSHandle */.tB)(context, arg);
    });
    Page_classPrivateFieldGet(this, _CDPPage_instances, "m", _CDPPage_addConsoleMessage).call(this, event.type, values, event.stackTrace);
}, _CDPPage_onBindingCalled = async function _CDPPage_onBindingCalled(event) {
    let payload;
    try {
        payload = JSON.parse(event.payload);
    }
    catch {
        // The binding was either called by something in the page or it was
        // called before our wrapper was initialized.
        return;
    }
    const { type, name, seq, args } = payload;
    if (type !== 'exposedFun' || !Page_classPrivateFieldGet(this, _CDPPage_pageBindings, "f").has(name)) {
        return;
    }
    let expression = null;
    try {
        const pageBinding = Page_classPrivateFieldGet(this, _CDPPage_pageBindings, "f").get(name);
        (0,assert/* assert */.h)(pageBinding);
        const result = await pageBinding(...args);
        expression = (0,util/* pageBindingDeliverResultString */.Mt)(name, seq, result);
    }
    catch (error) {
        if ((0,ErrorLike/* isErrorLike */.x)(error)) {
            expression = (0,util/* pageBindingDeliverErrorString */.FP)(name, seq, error.message, error.stack);
        }
        else {
            expression = (0,util/* pageBindingDeliverErrorValueString */.st)(name, seq, error);
        }
    }
    Page_classPrivateFieldGet(this, _CDPPage_client, "f")
        .send('Runtime.evaluate', {
        expression,
        contextId: event.executionContextId,
    })
        .catch(util/* debugError */.ur);
}, _CDPPage_addConsoleMessage = function _CDPPage_addConsoleMessage(eventType, args, stackTrace) {
    if (!this.listenerCount("console" /* PageEmittedEvents.Console */)) {
        args.forEach(arg => {
            return arg.dispose();
        });
        return;
    }
    const textTokens = [];
    for (const arg of args) {
        const remoteObject = arg.remoteObject();
        if (remoteObject.objectId) {
            textTokens.push(arg.toString());
        }
        else {
            textTokens.push((0,util/* valueFromRemoteObject */.jV)(remoteObject));
        }
    }
    const stackTraceLocations = [];
    if (stackTrace) {
        for (const callFrame of stackTrace.callFrames) {
            stackTraceLocations.push({
                url: callFrame.url,
                lineNumber: callFrame.lineNumber,
                columnNumber: callFrame.columnNumber,
            });
        }
    }
    const message = new ConsoleMessage(eventType, textTokens.join(' '), args, stackTraceLocations);
    this.emit("console" /* PageEmittedEvents.Console */, message);
}, _CDPPage_onDialog = function _CDPPage_onDialog(event) {
    let dialogType = null;
    const validDialogTypes = new Set([
        'alert',
        'confirm',
        'prompt',
        'beforeunload',
    ]);
    if (validDialogTypes.has(event.type)) {
        dialogType = event.type;
    }
    (0,assert/* assert */.h)(dialogType, 'Unknown javascript dialog type: ' + event.type);
    const dialog = new Dialog(Page_classPrivateFieldGet(this, _CDPPage_client, "f"), dialogType, event.message, event.defaultPrompt);
    this.emit("dialog" /* PageEmittedEvents.Dialog */, dialog);
}, _CDPPage_resetDefaultBackgroundColor = 
/**
 * Resets default white background
 */
async function _CDPPage_resetDefaultBackgroundColor() {
    await Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Emulation.setDefaultBackgroundColorOverride');
}, _CDPPage_setTransparentBackgroundColor = 
/**
 * Hides default white background
 */
async function _CDPPage_setTransparentBackgroundColor() {
    await Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Emulation.setDefaultBackgroundColorOverride', {
        color: { r: 0, g: 0, b: 0, a: 0 },
    });
}, _CDPPage_sessionClosePromise = function _CDPPage_sessionClosePromise() {
    if (!Page_classPrivateFieldGet(this, _CDPPage_disconnectPromise, "f")) {
        Page_classPrivateFieldSet(this, _CDPPage_disconnectPromise, new Promise(fulfill => {
            return Page_classPrivateFieldGet(this, _CDPPage_client, "f").once(common_Connection/* CDPSessionEmittedEvents.Disconnected */.vG.Disconnected, () => {
                return fulfill(new Error('Target closed'));
            });
        }), "f");
    }
    return Page_classPrivateFieldGet(this, _CDPPage_disconnectPromise, "f");
}, _CDPPage_go = async function _CDPPage_go(delta, options) {
    const history = await Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Page.getNavigationHistory');
    const entry = history.entries[history.currentIndex + delta];
    if (!entry) {
        return null;
    }
    const result = await Promise.all([
        this.waitForNavigation(options),
        Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Page.navigateToHistoryEntry', { entryId: entry.id }),
    ]);
    return result[0];
}, _CDPPage_screenshotTask = async function _CDPPage_screenshotTask(format, options = {}) {
    var _a, _b;
    await Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Target.activateTarget', {
        targetId: Page_classPrivateFieldGet(this, _CDPPage_target, "f")._targetId,
    });
    let clip = options.clip ? processClip(options.clip) : undefined;
    let captureBeyondViewport = (_a = options.captureBeyondViewport) !== null && _a !== void 0 ? _a : true;
    const fromSurface = options.fromSurface;
    if (options.fullPage) {
        // Overwrite clip for full page.
        clip = undefined;
        if (!captureBeyondViewport) {
            const metrics = await Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Page.getLayoutMetrics');
            // Fallback to `contentSize` in case of using Firefox.
            const { width, height } = metrics.cssContentSize || metrics.contentSize;
            const { isMobile = false, deviceScaleFactor = 1, isLandscape = false, } = Page_classPrivateFieldGet(this, _CDPPage_viewport, "f") || {};
            const screenOrientation = isLandscape
                ? { angle: 90, type: 'landscapePrimary' }
                : { angle: 0, type: 'portraitPrimary' };
            await Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Emulation.setDeviceMetricsOverride', {
                mobile: isMobile,
                width,
                height,
                deviceScaleFactor,
                screenOrientation,
            });
        }
    }
    else if (!clip) {
        captureBeyondViewport = false;
    }
    const shouldSetDefaultBackground = options.omitBackground && (format === 'png' || format === 'webp');
    if (shouldSetDefaultBackground) {
        await Page_classPrivateFieldGet(this, _CDPPage_instances, "m", _CDPPage_setTransparentBackgroundColor).call(this);
    }
    const result = await Page_classPrivateFieldGet(this, _CDPPage_client, "f").send('Page.captureScreenshot', {
        format,
        quality: options.quality,
        clip: clip && {
            ...clip,
            scale: (_b = clip.scale) !== null && _b !== void 0 ? _b : 1,
        },
        captureBeyondViewport,
        fromSurface,
    });
    if (shouldSetDefaultBackground) {
        await Page_classPrivateFieldGet(this, _CDPPage_instances, "m", _CDPPage_resetDefaultBackgroundColor).call(this);
    }
    if (options.fullPage && Page_classPrivateFieldGet(this, _CDPPage_viewport, "f")) {
        await this.setViewport(Page_classPrivateFieldGet(this, _CDPPage_viewport, "f"));
    }
    const buffer = options.encoding === 'base64'
        ? result.data
        : Buffer.from(result.data, 'base64');
    if (options.path) {
        try {
            const fs = (await (0,util/* importFS */.FX)()).promises;
            await fs.writeFile(options.path, buffer);
        }
        catch (error) {
            if (error instanceof TypeError) {
                throw new Error('Screenshots can only be written to a file path in a Node-like environment.');
            }
            throw error;
        }
    }
    return buffer;
    function processClip(clip) {
        const x = Math.round(clip.x);
        const y = Math.round(clip.y);
        const width = Math.round(clip.width + clip.x - x);
        const height = Math.round(clip.height + clip.y - y);
        return { x, y, width, height, scale: clip.scale };
    }
};
const supportedMetrics = new Set([
    'Timestamp',
    'Documents',
    'Frames',
    'JSEventListeners',
    'Nodes',
    'LayoutCount',
    'RecalcStyleCount',
    'LayoutDuration',
    'RecalcStyleDuration',
    'ScriptDuration',
    'TaskDuration',
    'JSHeapUsedSize',
    'JSHeapTotalSize',
]);
const unitToPixels = {
    px: 1,
    in: 96,
    cm: 37.8,
    mm: 3.78,
};
function convertPrintParameterToInches(parameter) {
    if (typeof parameter === 'undefined') {
        return undefined;
    }
    let pixels;
    if ((0,util/* isNumber */.hj)(parameter)) {
        // Treat numbers as pixel values to be aligned with phantom's paperSize.
        pixels = parameter;
    }
    else if ((0,util/* isString */.HD)(parameter)) {
        const text = parameter;
        let unit = text.substring(text.length - 2).toLowerCase();
        let valueText = '';
        if (unit in unitToPixels) {
            valueText = text.substring(0, text.length - 2);
        }
        else {
            // In case of unknown unit try to parse the whole parameter as number of pixels.
            // This is consistent with phantom's paperSize behavior.
            unit = 'px';
            valueText = text;
        }
        const value = Number(valueText);
        (0,assert/* assert */.h)(!isNaN(value), 'Failed to parse parameter value: ' + text);
        pixels = value * unitToPixels[unit];
    }
    else {
        throw new Error('page.pdf() Cannot handle parameter type: ' + typeof parameter);
    }
    return pixels / 96;
}
//# sourceMappingURL=Page.js.map
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/Target.js
/**
 * Copyright 2019 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Target_classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var Target_classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _Target_browserContext, _Target_session, _Target_targetInfo, _Target_sessionFactory, _Target_ignoreHTTPSErrors, _Target_defaultViewport, _Target_pagePromise, _Target_workerPromise, _Target_screenshotTaskQueue, _Target_targetManager;


/**
 * Target represents a
 * {@link https://chromedevtools.github.io/devtools-protocol/tot/Target/ | CDP target}.
 * In CDP a target is something that can be debugged such a frame, a page or a
 * worker.
 *
 * @public
 */
class Target {
    /**
     * @internal
     */
    constructor(targetInfo, session, browserContext, targetManager, sessionFactory, ignoreHTTPSErrors, defaultViewport, screenshotTaskQueue, isPageTargetCallback) {
        _Target_browserContext.set(this, void 0);
        _Target_session.set(this, void 0);
        _Target_targetInfo.set(this, void 0);
        _Target_sessionFactory.set(this, void 0);
        _Target_ignoreHTTPSErrors.set(this, void 0);
        _Target_defaultViewport.set(this, void 0);
        _Target_pagePromise.set(this, void 0);
        _Target_workerPromise.set(this, void 0);
        _Target_screenshotTaskQueue.set(this, void 0);
        _Target_targetManager.set(this, void 0);
        Target_classPrivateFieldSet(this, _Target_session, session, "f");
        Target_classPrivateFieldSet(this, _Target_targetManager, targetManager, "f");
        Target_classPrivateFieldSet(this, _Target_targetInfo, targetInfo, "f");
        Target_classPrivateFieldSet(this, _Target_browserContext, browserContext, "f");
        this._targetId = targetInfo.targetId;
        Target_classPrivateFieldSet(this, _Target_sessionFactory, sessionFactory, "f");
        Target_classPrivateFieldSet(this, _Target_ignoreHTTPSErrors, ignoreHTTPSErrors, "f");
        Target_classPrivateFieldSet(this, _Target_defaultViewport, defaultViewport !== null && defaultViewport !== void 0 ? defaultViewport : undefined, "f");
        Target_classPrivateFieldSet(this, _Target_screenshotTaskQueue, screenshotTaskQueue, "f");
        this._isPageTargetCallback = isPageTargetCallback;
        this._initializedPromise = new Promise(fulfill => {
            return (this._initializedCallback = fulfill);
        }).then(async (success) => {
            if (!success) {
                return false;
            }
            const opener = this.opener();
            if (!opener || !Target_classPrivateFieldGet(opener, _Target_pagePromise, "f") || this.type() !== 'page') {
                return true;
            }
            const openerPage = await Target_classPrivateFieldGet(opener, _Target_pagePromise, "f");
            if (!openerPage.listenerCount("popup" /* PageEmittedEvents.Popup */)) {
                return true;
            }
            const popupPage = await this.page();
            openerPage.emit("popup" /* PageEmittedEvents.Popup */, popupPage);
            return true;
        });
        this._isClosedPromise = new Promise(fulfill => {
            return (this._closedCallback = fulfill);
        });
        this._isInitialized =
            !this._isPageTargetCallback(Target_classPrivateFieldGet(this, _Target_targetInfo, "f")) ||
                Target_classPrivateFieldGet(this, _Target_targetInfo, "f").url !== '';
        if (this._isInitialized) {
            this._initializedCallback(true);
        }
    }
    /**
     * @internal
     */
    _session() {
        return Target_classPrivateFieldGet(this, _Target_session, "f");
    }
    /**
     * Creates a Chrome Devtools Protocol session attached to the target.
     */
    createCDPSession() {
        return Target_classPrivateFieldGet(this, _Target_sessionFactory, "f").call(this, false);
    }
    /**
     * @internal
     */
    _targetManager() {
        return Target_classPrivateFieldGet(this, _Target_targetManager, "f");
    }
    /**
     * @internal
     */
    _getTargetInfo() {
        return Target_classPrivateFieldGet(this, _Target_targetInfo, "f");
    }
    /**
     * If the target is not of type `"page"` or `"background_page"`, returns `null`.
     */
    async page() {
        var _a;
        if (this._isPageTargetCallback(Target_classPrivateFieldGet(this, _Target_targetInfo, "f")) && !Target_classPrivateFieldGet(this, _Target_pagePromise, "f")) {
            Target_classPrivateFieldSet(this, _Target_pagePromise, (Target_classPrivateFieldGet(this, _Target_session, "f")
                ? Promise.resolve(Target_classPrivateFieldGet(this, _Target_session, "f"))
                : Target_classPrivateFieldGet(this, _Target_sessionFactory, "f").call(this, true)).then(client => {
                var _a;
                return CDPPage._create(client, this, Target_classPrivateFieldGet(this, _Target_ignoreHTTPSErrors, "f"), (_a = Target_classPrivateFieldGet(this, _Target_defaultViewport, "f")) !== null && _a !== void 0 ? _a : null, Target_classPrivateFieldGet(this, _Target_screenshotTaskQueue, "f"));
            }), "f");
        }
        return (_a = (await Target_classPrivateFieldGet(this, _Target_pagePromise, "f"))) !== null && _a !== void 0 ? _a : null;
    }
    /**
     * If the target is not of type `"service_worker"` or `"shared_worker"`, returns `null`.
     */
    async worker() {
        if (Target_classPrivateFieldGet(this, _Target_targetInfo, "f").type !== 'service_worker' &&
            Target_classPrivateFieldGet(this, _Target_targetInfo, "f").type !== 'shared_worker') {
            return null;
        }
        if (!Target_classPrivateFieldGet(this, _Target_workerPromise, "f")) {
            // TODO(einbinder): Make workers send their console logs.
            Target_classPrivateFieldSet(this, _Target_workerPromise, (Target_classPrivateFieldGet(this, _Target_session, "f")
                ? Promise.resolve(Target_classPrivateFieldGet(this, _Target_session, "f"))
                : Target_classPrivateFieldGet(this, _Target_sessionFactory, "f").call(this, false)).then(client => {
                return new WebWorker(client, Target_classPrivateFieldGet(this, _Target_targetInfo, "f").url, () => { } /* consoleAPICalled */, () => { } /* exceptionThrown */);
            }), "f");
        }
        return Target_classPrivateFieldGet(this, _Target_workerPromise, "f");
    }
    url() {
        return Target_classPrivateFieldGet(this, _Target_targetInfo, "f").url;
    }
    /**
     * Identifies what kind of target this is.
     *
     * @remarks
     *
     * See {@link https://developer.chrome.com/extensions/background_pages | docs} for more info about background pages.
     */
    type() {
        const type = Target_classPrivateFieldGet(this, _Target_targetInfo, "f").type;
        if (type === 'page' ||
            type === 'background_page' ||
            type === 'service_worker' ||
            type === 'shared_worker' ||
            type === 'browser' ||
            type === 'webview') {
            return type;
        }
        return 'other';
    }
    /**
     * Get the browser the target belongs to.
     */
    browser() {
        return Target_classPrivateFieldGet(this, _Target_browserContext, "f").browser();
    }
    /**
     * Get the browser context the target belongs to.
     */
    browserContext() {
        return Target_classPrivateFieldGet(this, _Target_browserContext, "f");
    }
    /**
     * Get the target that opened this target. Top-level targets return `null`.
     */
    opener() {
        const { openerId } = Target_classPrivateFieldGet(this, _Target_targetInfo, "f");
        if (!openerId) {
            return;
        }
        return this.browser()._targets.get(openerId);
    }
    /**
     * @internal
     */
    _targetInfoChanged(targetInfo) {
        Target_classPrivateFieldSet(this, _Target_targetInfo, targetInfo, "f");
        if (!this._isInitialized &&
            (!this._isPageTargetCallback(Target_classPrivateFieldGet(this, _Target_targetInfo, "f")) ||
                Target_classPrivateFieldGet(this, _Target_targetInfo, "f").url !== '')) {
            this._isInitialized = true;
            this._initializedCallback(true);
            return;
        }
    }
}
_Target_browserContext = new WeakMap(), _Target_session = new WeakMap(), _Target_targetInfo = new WeakMap(), _Target_sessionFactory = new WeakMap(), _Target_ignoreHTTPSErrors = new WeakMap(), _Target_defaultViewport = new WeakMap(), _Target_pagePromise = new WeakMap(), _Target_workerPromise = new WeakMap(), _Target_screenshotTaskQueue = new WeakMap(), _Target_targetManager = new WeakMap();
//# sourceMappingURL=Target.js.map
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/TaskQueue.js
/**
 * Copyright 2020 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var TaskQueue_classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var TaskQueue_classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _TaskQueue_chain;
/**
 * @internal
 */
class TaskQueue {
    constructor() {
        _TaskQueue_chain.set(this, void 0);
        TaskQueue_classPrivateFieldSet(this, _TaskQueue_chain, Promise.resolve(), "f");
    }
    postTask(task) {
        const result = TaskQueue_classPrivateFieldGet(this, _TaskQueue_chain, "f").then(task);
        TaskQueue_classPrivateFieldSet(this, _TaskQueue_chain, result.then(() => {
            return undefined;
        }, () => {
            return undefined;
        }), "f");
        return result;
    }
}
_TaskQueue_chain = new WeakMap();
//# sourceMappingURL=TaskQueue.js.map
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/ChromeTargetManager.js
/**
 * Copyright 2022 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var ChromeTargetManager_classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var ChromeTargetManager_classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _ChromeTargetManager_instances, _ChromeTargetManager_connection, _ChromeTargetManager_discoveredTargetsByTargetId, _ChromeTargetManager_attachedTargetsByTargetId, _ChromeTargetManager_attachedTargetsBySessionId, _ChromeTargetManager_ignoredTargets, _ChromeTargetManager_targetFilterCallback, _ChromeTargetManager_targetFactory, _ChromeTargetManager_targetInterceptors, _ChromeTargetManager_attachedToTargetListenersBySession, _ChromeTargetManager_detachedFromTargetListenersBySession, _ChromeTargetManager_initializeCallback, _ChromeTargetManager_initializePromise, _ChromeTargetManager_targetsIdsForInit, _ChromeTargetManager_storeExistingTargetsForInit, _ChromeTargetManager_setupAttachmentListeners, _ChromeTargetManager_removeAttachmentListeners, _ChromeTargetManager_onSessionDetached, _ChromeTargetManager_onTargetCreated, _ChromeTargetManager_onTargetDestroyed, _ChromeTargetManager_onTargetInfoChanged, _ChromeTargetManager_onAttachedToTarget, _ChromeTargetManager_finishInitializationIfReady, _ChromeTargetManager_onDetachedFromTarget;




/**
 * ChromeTargetManager uses the CDP's auto-attach mechanism to intercept
 * new targets and allow the rest of Puppeteer to configure listeners while
 * the target is paused.
 *
 * @internal
 */
class ChromeTargetManager extends common_EventEmitter/* EventEmitter */.v {
    constructor(connection, targetFactory, targetFilterCallback) {
        super();
        _ChromeTargetManager_instances.add(this);
        _ChromeTargetManager_connection.set(this, void 0);
        /**
         * Keeps track of the following events: 'Target.targetCreated',
         * 'Target.targetDestroyed', 'Target.targetInfoChanged'.
         *
         * A target becomes discovered when 'Target.targetCreated' is received.
         * A target is removed from this map once 'Target.targetDestroyed' is
         * received.
         *
         * `targetFilterCallback` has no effect on this map.
         */
        _ChromeTargetManager_discoveredTargetsByTargetId.set(this, new Map());
        /**
         * A target is added to this map once ChromeTargetManager has created
         * a Target and attached at least once to it.
         */
        _ChromeTargetManager_attachedTargetsByTargetId.set(this, new Map());
        /**
         *
         * Tracks which sessions attach to which target.
         */
        _ChromeTargetManager_attachedTargetsBySessionId.set(this, new Map());
        /**
         * If a target was filtered out by `targetFilterCallback`, we still receive
         * events about it from CDP, but we don't forward them to the rest of Puppeteer.
         */
        _ChromeTargetManager_ignoredTargets.set(this, new Set());
        _ChromeTargetManager_targetFilterCallback.set(this, void 0);
        _ChromeTargetManager_targetFactory.set(this, void 0);
        _ChromeTargetManager_targetInterceptors.set(this, new WeakMap());
        _ChromeTargetManager_attachedToTargetListenersBySession.set(this, new WeakMap());
        _ChromeTargetManager_detachedFromTargetListenersBySession.set(this, new WeakMap());
        _ChromeTargetManager_initializeCallback.set(this, () => { });
        _ChromeTargetManager_initializePromise.set(this, new Promise(resolve => {
            ChromeTargetManager_classPrivateFieldSet(this, _ChromeTargetManager_initializeCallback, resolve, "f");
        }));
        _ChromeTargetManager_targetsIdsForInit.set(this, new Set());
        _ChromeTargetManager_storeExistingTargetsForInit.set(this, () => {
            for (const [targetId, targetInfo,] of ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_discoveredTargetsByTargetId, "f").entries()) {
                if ((!ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_targetFilterCallback, "f") ||
                    ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_targetFilterCallback, "f").call(this, targetInfo)) &&
                    targetInfo.type !== 'browser') {
                    ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_targetsIdsForInit, "f").add(targetId);
                }
            }
        });
        _ChromeTargetManager_onSessionDetached.set(this, (session) => {
            ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_instances, "m", _ChromeTargetManager_removeAttachmentListeners).call(this, session);
            ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_targetInterceptors, "f").delete(session);
        });
        _ChromeTargetManager_onTargetCreated.set(this, async (event) => {
            ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_discoveredTargetsByTargetId, "f").set(event.targetInfo.targetId, event.targetInfo);
            this.emit("targetDiscovered" /* TargetManagerEmittedEvents.TargetDiscovered */, event.targetInfo);
            // The connection is already attached to the browser target implicitly,
            // therefore, no new CDPSession is created and we have special handling
            // here.
            if (event.targetInfo.type === 'browser' && event.targetInfo.attached) {
                if (ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsByTargetId, "f").has(event.targetInfo.targetId)) {
                    return;
                }
                const target = ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_targetFactory, "f").call(this, event.targetInfo, undefined);
                ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsByTargetId, "f").set(event.targetInfo.targetId, target);
            }
        });
        _ChromeTargetManager_onTargetDestroyed.set(this, (event) => {
            const targetInfo = ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_discoveredTargetsByTargetId, "f").get(event.targetId);
            ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_discoveredTargetsByTargetId, "f").delete(event.targetId);
            ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_instances, "m", _ChromeTargetManager_finishInitializationIfReady).call(this, event.targetId);
            if ((targetInfo === null || targetInfo === void 0 ? void 0 : targetInfo.type) === 'service_worker' &&
                ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsByTargetId, "f").has(event.targetId)) {
                // Special case for service workers: report TargetGone event when
                // the worker is destroyed.
                const target = ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsByTargetId, "f").get(event.targetId);
                this.emit("targetGone" /* TargetManagerEmittedEvents.TargetGone */, target);
                ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsByTargetId, "f").delete(event.targetId);
            }
        });
        _ChromeTargetManager_onTargetInfoChanged.set(this, (event) => {
            ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_discoveredTargetsByTargetId, "f").set(event.targetInfo.targetId, event.targetInfo);
            if (ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_ignoredTargets, "f").has(event.targetInfo.targetId) ||
                !ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsByTargetId, "f").has(event.targetInfo.targetId) ||
                !event.targetInfo.attached) {
                return;
            }
            const target = ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsByTargetId, "f").get(event.targetInfo.targetId);
            this.emit("targetChanged" /* TargetManagerEmittedEvents.TargetChanged */, {
                target: target,
                targetInfo: event.targetInfo,
            });
        });
        _ChromeTargetManager_onAttachedToTarget.set(this, async (parentSession, event) => {
            const targetInfo = event.targetInfo;
            const session = ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_connection, "f").session(event.sessionId);
            if (!session) {
                throw new Error(`Session ${event.sessionId} was not created.`);
            }
            const silentDetach = async () => {
                await session.send('Runtime.runIfWaitingForDebugger').catch(util/* debugError */.ur);
                // We don't use `session.detach()` because that dispatches all commands on
                // the connection instead of the parent session.
                await parentSession
                    .send('Target.detachFromTarget', {
                    sessionId: session.id(),
                })
                    .catch(util/* debugError */.ur);
            };
            if (!ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_connection, "f").isAutoAttached(targetInfo.targetId)) {
                return;
            }
            // Special case for service workers: being attached to service workers will
            // prevent them from ever being destroyed. Therefore, we silently detach
            // from service workers unless the connection was manually created via
            // `page.worker()`. To determine this, we use
            // `this.#connection.isAutoAttached(targetInfo.targetId)`. In the future, we
            // should determine if a target is auto-attached or not with the help of
            // CDP.
            if (targetInfo.type === 'service_worker' &&
                ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_connection, "f").isAutoAttached(targetInfo.targetId)) {
                ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_instances, "m", _ChromeTargetManager_finishInitializationIfReady).call(this, targetInfo.targetId);
                await silentDetach();
                if (ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsByTargetId, "f").has(targetInfo.targetId)) {
                    return;
                }
                const target = ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_targetFactory, "f").call(this, targetInfo);
                ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsByTargetId, "f").set(targetInfo.targetId, target);
                this.emit("targetAvailable" /* TargetManagerEmittedEvents.TargetAvailable */, target);
                return;
            }
            if (ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_targetFilterCallback, "f") && !ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_targetFilterCallback, "f").call(this, targetInfo)) {
                ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_ignoredTargets, "f").add(targetInfo.targetId);
                ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_instances, "m", _ChromeTargetManager_finishInitializationIfReady).call(this, targetInfo.targetId);
                await silentDetach();
                return;
            }
            const existingTarget = ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsByTargetId, "f").has(targetInfo.targetId);
            const target = existingTarget
                ? ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsByTargetId, "f").get(targetInfo.targetId)
                : ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_targetFactory, "f").call(this, targetInfo, session);
            ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_instances, "m", _ChromeTargetManager_setupAttachmentListeners).call(this, session);
            if (existingTarget) {
                ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsBySessionId, "f").set(session.id(), ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsByTargetId, "f").get(targetInfo.targetId));
            }
            else {
                ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsByTargetId, "f").set(targetInfo.targetId, target);
                ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsBySessionId, "f").set(session.id(), target);
            }
            for (const interceptor of ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_targetInterceptors, "f").get(parentSession) ||
                []) {
                if (!(parentSession instanceof common_Connection/* Connection */.ew)) {
                    // Sanity check: if parent session is not a connection, it should be
                    // present in #attachedTargetsBySessionId.
                    (0,assert/* assert */.h)(ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsBySessionId, "f").has(parentSession.id()));
                }
                interceptor(target, parentSession instanceof common_Connection/* Connection */.ew
                    ? null
                    : ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsBySessionId, "f").get(parentSession.id()));
            }
            ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_targetsIdsForInit, "f").delete(target._targetId);
            if (!existingTarget) {
                this.emit("targetAvailable" /* TargetManagerEmittedEvents.TargetAvailable */, target);
            }
            ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_instances, "m", _ChromeTargetManager_finishInitializationIfReady).call(this);
            // TODO: the browser might be shutting down here. What do we do with the
            // error?
            await Promise.all([
                session.send('Target.setAutoAttach', {
                    waitForDebuggerOnStart: true,
                    flatten: true,
                    autoAttach: true,
                }),
                session.send('Runtime.runIfWaitingForDebugger'),
            ]).catch(util/* debugError */.ur);
        });
        _ChromeTargetManager_onDetachedFromTarget.set(this, (_parentSession, event) => {
            const target = ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsBySessionId, "f").get(event.sessionId);
            ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsBySessionId, "f").delete(event.sessionId);
            if (!target) {
                return;
            }
            ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsByTargetId, "f").delete(target._targetId);
            this.emit("targetGone" /* TargetManagerEmittedEvents.TargetGone */, target);
        });
        ChromeTargetManager_classPrivateFieldSet(this, _ChromeTargetManager_connection, connection, "f");
        ChromeTargetManager_classPrivateFieldSet(this, _ChromeTargetManager_targetFilterCallback, targetFilterCallback, "f");
        ChromeTargetManager_classPrivateFieldSet(this, _ChromeTargetManager_targetFactory, targetFactory, "f");
        ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_connection, "f").on('Target.targetCreated', ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_onTargetCreated, "f"));
        ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_connection, "f").on('Target.targetDestroyed', ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_onTargetDestroyed, "f"));
        ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_connection, "f").on('Target.targetInfoChanged', ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_onTargetInfoChanged, "f"));
        ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_connection, "f").on('sessiondetached', ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_onSessionDetached, "f"));
        ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_instances, "m", _ChromeTargetManager_setupAttachmentListeners).call(this, ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_connection, "f"));
        // TODO: remove `as any` once the protocol definitions are updated with the
        // next Chromium roll.
        ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_connection, "f")
            .send('Target.setDiscoverTargets', {
            discover: true,
            filter: [{ type: 'tab', exclude: true }, {}],
        })
            .then(ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_storeExistingTargetsForInit, "f"))
            .catch(util/* debugError */.ur);
    }
    async initialize() {
        await ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_connection, "f").send('Target.setAutoAttach', {
            waitForDebuggerOnStart: true,
            flatten: true,
            autoAttach: true,
        });
        ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_instances, "m", _ChromeTargetManager_finishInitializationIfReady).call(this);
        await ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_initializePromise, "f");
    }
    dispose() {
        ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_connection, "f").off('Target.targetCreated', ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_onTargetCreated, "f"));
        ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_connection, "f").off('Target.targetDestroyed', ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_onTargetDestroyed, "f"));
        ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_connection, "f").off('Target.targetInfoChanged', ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_onTargetInfoChanged, "f"));
        ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_connection, "f").off('sessiondetached', ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_onSessionDetached, "f"));
        ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_instances, "m", _ChromeTargetManager_removeAttachmentListeners).call(this, ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_connection, "f"));
    }
    getAvailableTargets() {
        return ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsByTargetId, "f");
    }
    addTargetInterceptor(session, interceptor) {
        const interceptors = ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_targetInterceptors, "f").get(session) || [];
        interceptors.push(interceptor);
        ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_targetInterceptors, "f").set(session, interceptors);
    }
    removeTargetInterceptor(client, interceptor) {
        const interceptors = ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_targetInterceptors, "f").get(client) || [];
        ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_targetInterceptors, "f").set(client, interceptors.filter(currentInterceptor => {
            return currentInterceptor !== interceptor;
        }));
    }
}
_ChromeTargetManager_connection = new WeakMap(), _ChromeTargetManager_discoveredTargetsByTargetId = new WeakMap(), _ChromeTargetManager_attachedTargetsByTargetId = new WeakMap(), _ChromeTargetManager_attachedTargetsBySessionId = new WeakMap(), _ChromeTargetManager_ignoredTargets = new WeakMap(), _ChromeTargetManager_targetFilterCallback = new WeakMap(), _ChromeTargetManager_targetFactory = new WeakMap(), _ChromeTargetManager_targetInterceptors = new WeakMap(), _ChromeTargetManager_attachedToTargetListenersBySession = new WeakMap(), _ChromeTargetManager_detachedFromTargetListenersBySession = new WeakMap(), _ChromeTargetManager_initializeCallback = new WeakMap(), _ChromeTargetManager_initializePromise = new WeakMap(), _ChromeTargetManager_targetsIdsForInit = new WeakMap(), _ChromeTargetManager_storeExistingTargetsForInit = new WeakMap(), _ChromeTargetManager_onSessionDetached = new WeakMap(), _ChromeTargetManager_onTargetCreated = new WeakMap(), _ChromeTargetManager_onTargetDestroyed = new WeakMap(), _ChromeTargetManager_onTargetInfoChanged = new WeakMap(), _ChromeTargetManager_onAttachedToTarget = new WeakMap(), _ChromeTargetManager_onDetachedFromTarget = new WeakMap(), _ChromeTargetManager_instances = new WeakSet(), _ChromeTargetManager_setupAttachmentListeners = function _ChromeTargetManager_setupAttachmentListeners(session) {
    const listener = (event) => {
        return ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_onAttachedToTarget, "f").call(this, session, event);
    };
    (0,assert/* assert */.h)(!ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_attachedToTargetListenersBySession, "f").has(session));
    ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_attachedToTargetListenersBySession, "f").set(session, listener);
    session.on('Target.attachedToTarget', listener);
    const detachedListener = (event) => {
        return ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_onDetachedFromTarget, "f").call(this, session, event);
    };
    (0,assert/* assert */.h)(!ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_detachedFromTargetListenersBySession, "f").has(session));
    ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_detachedFromTargetListenersBySession, "f").set(session, detachedListener);
    session.on('Target.detachedFromTarget', detachedListener);
}, _ChromeTargetManager_removeAttachmentListeners = function _ChromeTargetManager_removeAttachmentListeners(session) {
    if (ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_attachedToTargetListenersBySession, "f").has(session)) {
        session.off('Target.attachedToTarget', ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_attachedToTargetListenersBySession, "f").get(session));
        ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_attachedToTargetListenersBySession, "f").delete(session);
    }
    if (ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_detachedFromTargetListenersBySession, "f").has(session)) {
        session.off('Target.detachedFromTarget', ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_detachedFromTargetListenersBySession, "f").get(session));
        ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_detachedFromTargetListenersBySession, "f").delete(session);
    }
}, _ChromeTargetManager_finishInitializationIfReady = function _ChromeTargetManager_finishInitializationIfReady(targetId) {
    targetId !== undefined && ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_targetsIdsForInit, "f").delete(targetId);
    if (ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_targetsIdsForInit, "f").size === 0) {
        ChromeTargetManager_classPrivateFieldGet(this, _ChromeTargetManager_initializeCallback, "f").call(this);
    }
};
//# sourceMappingURL=ChromeTargetManager.js.map
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/FirefoxTargetManager.js
/**
 * Copyright 2022 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var FirefoxTargetManager_classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var FirefoxTargetManager_classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _FirefoxTargetManager_instances, _FirefoxTargetManager_connection, _FirefoxTargetManager_discoveredTargetsByTargetId, _FirefoxTargetManager_availableTargetsByTargetId, _FirefoxTargetManager_availableTargetsBySessionId, _FirefoxTargetManager_ignoredTargets, _FirefoxTargetManager_targetFilterCallback, _FirefoxTargetManager_targetFactory, _FirefoxTargetManager_targetInterceptors, _FirefoxTargetManager_attachedToTargetListenersBySession, _FirefoxTargetManager_initializeCallback, _FirefoxTargetManager_initializePromise, _FirefoxTargetManager_targetsIdsForInit, _FirefoxTargetManager_onSessionDetached, _FirefoxTargetManager_onTargetCreated, _FirefoxTargetManager_onTargetDestroyed, _FirefoxTargetManager_onAttachedToTarget, _FirefoxTargetManager_finishInitializationIfReady;



/**
 * FirefoxTargetManager implements target management using
 * `Target.setDiscoverTargets` without using auto-attach. It, therefore, creates
 * targets that lazily establish their CDP sessions.
 *
 * Although the approach is potentially flaky, there is no other way for Firefox
 * because Firefox's CDP implementation does not support auto-attach.
 *
 * Firefox does not support targetInfoChanged and detachedFromTarget events:
 *
 * - https://bugzilla.mozilla.org/show_bug.cgi?id=1610855
 * - https://bugzilla.mozilla.org/show_bug.cgi?id=1636979
 *   @internal
 */
class FirefoxTargetManager extends common_EventEmitter/* EventEmitter */.v {
    constructor(connection, targetFactory, targetFilterCallback) {
        super();
        _FirefoxTargetManager_instances.add(this);
        _FirefoxTargetManager_connection.set(this, void 0);
        /**
         * Keeps track of the following events: 'Target.targetCreated',
         * 'Target.targetDestroyed'.
         *
         * A target becomes discovered when 'Target.targetCreated' is received.
         * A target is removed from this map once 'Target.targetDestroyed' is
         * received.
         *
         * `targetFilterCallback` has no effect on this map.
         */
        _FirefoxTargetManager_discoveredTargetsByTargetId.set(this, new Map());
        /**
         * Keeps track of targets that were created via 'Target.targetCreated'
         * and which one are not filtered out by `targetFilterCallback`.
         *
         * The target is removed from here once it's been destroyed.
         */
        _FirefoxTargetManager_availableTargetsByTargetId.set(this, new Map());
        /**
         * Tracks which sessions attach to which target.
         */
        _FirefoxTargetManager_availableTargetsBySessionId.set(this, new Map());
        /**
         * If a target was filtered out by `targetFilterCallback`, we still receive
         * events about it from CDP, but we don't forward them to the rest of Puppeteer.
         */
        _FirefoxTargetManager_ignoredTargets.set(this, new Set());
        _FirefoxTargetManager_targetFilterCallback.set(this, void 0);
        _FirefoxTargetManager_targetFactory.set(this, void 0);
        _FirefoxTargetManager_targetInterceptors.set(this, new WeakMap());
        _FirefoxTargetManager_attachedToTargetListenersBySession.set(this, new WeakMap());
        _FirefoxTargetManager_initializeCallback.set(this, () => { });
        _FirefoxTargetManager_initializePromise.set(this, new Promise(resolve => {
            FirefoxTargetManager_classPrivateFieldSet(this, _FirefoxTargetManager_initializeCallback, resolve, "f");
        }));
        _FirefoxTargetManager_targetsIdsForInit.set(this, new Set());
        _FirefoxTargetManager_onSessionDetached.set(this, (session) => {
            this.removeSessionListeners(session);
            FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_targetInterceptors, "f").delete(session);
            FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsBySessionId, "f").delete(session.id());
        });
        _FirefoxTargetManager_onTargetCreated.set(this, async (event) => {
            if (FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_discoveredTargetsByTargetId, "f").has(event.targetInfo.targetId)) {
                return;
            }
            FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_discoveredTargetsByTargetId, "f").set(event.targetInfo.targetId, event.targetInfo);
            if (event.targetInfo.type === 'browser' && event.targetInfo.attached) {
                const target = FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_targetFactory, "f").call(this, event.targetInfo, undefined);
                FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsByTargetId, "f").set(event.targetInfo.targetId, target);
                FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_instances, "m", _FirefoxTargetManager_finishInitializationIfReady).call(this, target._targetId);
                return;
            }
            if (FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_targetFilterCallback, "f") &&
                !FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_targetFilterCallback, "f").call(this, event.targetInfo)) {
                FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_ignoredTargets, "f").add(event.targetInfo.targetId);
                FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_instances, "m", _FirefoxTargetManager_finishInitializationIfReady).call(this, event.targetInfo.targetId);
                return;
            }
            const target = FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_targetFactory, "f").call(this, event.targetInfo, undefined);
            FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsByTargetId, "f").set(event.targetInfo.targetId, target);
            this.emit("targetAvailable" /* TargetManagerEmittedEvents.TargetAvailable */, target);
            FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_instances, "m", _FirefoxTargetManager_finishInitializationIfReady).call(this, target._targetId);
        });
        _FirefoxTargetManager_onTargetDestroyed.set(this, (event) => {
            FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_discoveredTargetsByTargetId, "f").delete(event.targetId);
            FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_instances, "m", _FirefoxTargetManager_finishInitializationIfReady).call(this, event.targetId);
            const target = FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsByTargetId, "f").get(event.targetId);
            if (target) {
                this.emit("targetGone" /* TargetManagerEmittedEvents.TargetGone */, target);
                FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsByTargetId, "f").delete(event.targetId);
            }
        });
        _FirefoxTargetManager_onAttachedToTarget.set(this, async (parentSession, event) => {
            const targetInfo = event.targetInfo;
            const session = FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_connection, "f").session(event.sessionId);
            if (!session) {
                throw new Error(`Session ${event.sessionId} was not created.`);
            }
            const target = FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsByTargetId, "f").get(targetInfo.targetId);
            (0,assert/* assert */.h)(target, `Target ${targetInfo.targetId} is missing`);
            this.setupAttachmentListeners(session);
            FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsBySessionId, "f").set(session.id(), FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsByTargetId, "f").get(targetInfo.targetId));
            for (const hook of FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_targetInterceptors, "f").get(parentSession) || []) {
                if (!(parentSession instanceof common_Connection/* Connection */.ew)) {
                    (0,assert/* assert */.h)(FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsBySessionId, "f").has(parentSession.id()));
                }
                await hook(target, parentSession instanceof common_Connection/* Connection */.ew
                    ? null
                    : FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsBySessionId, "f").get(parentSession.id()));
            }
        });
        FirefoxTargetManager_classPrivateFieldSet(this, _FirefoxTargetManager_connection, connection, "f");
        FirefoxTargetManager_classPrivateFieldSet(this, _FirefoxTargetManager_targetFilterCallback, targetFilterCallback, "f");
        FirefoxTargetManager_classPrivateFieldSet(this, _FirefoxTargetManager_targetFactory, targetFactory, "f");
        FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_connection, "f").on('Target.targetCreated', FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_onTargetCreated, "f"));
        FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_connection, "f").on('Target.targetDestroyed', FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_onTargetDestroyed, "f"));
        FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_connection, "f").on('sessiondetached', FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_onSessionDetached, "f"));
        this.setupAttachmentListeners(FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_connection, "f"));
    }
    addTargetInterceptor(client, interceptor) {
        const interceptors = FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_targetInterceptors, "f").get(client) || [];
        interceptors.push(interceptor);
        FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_targetInterceptors, "f").set(client, interceptors);
    }
    removeTargetInterceptor(client, interceptor) {
        const interceptors = FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_targetInterceptors, "f").get(client) || [];
        FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_targetInterceptors, "f").set(client, interceptors.filter(currentInterceptor => {
            return currentInterceptor !== interceptor;
        }));
    }
    setupAttachmentListeners(session) {
        const listener = (event) => {
            return FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_onAttachedToTarget, "f").call(this, session, event);
        };
        (0,assert/* assert */.h)(!FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_attachedToTargetListenersBySession, "f").has(session));
        FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_attachedToTargetListenersBySession, "f").set(session, listener);
        session.on('Target.attachedToTarget', listener);
    }
    removeSessionListeners(session) {
        if (FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_attachedToTargetListenersBySession, "f").has(session)) {
            session.off('Target.attachedToTarget', FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_attachedToTargetListenersBySession, "f").get(session));
            FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_attachedToTargetListenersBySession, "f").delete(session);
        }
    }
    getAvailableTargets() {
        return FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsByTargetId, "f");
    }
    dispose() {
        FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_connection, "f").off('Target.targetCreated', FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_onTargetCreated, "f"));
        FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_connection, "f").off('Target.targetDestroyed', FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_onTargetDestroyed, "f"));
    }
    async initialize() {
        await FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_connection, "f").send('Target.setDiscoverTargets', { discover: true });
        FirefoxTargetManager_classPrivateFieldSet(this, _FirefoxTargetManager_targetsIdsForInit, new Set(FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_discoveredTargetsByTargetId, "f").keys()), "f");
        await FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_initializePromise, "f");
    }
}
_FirefoxTargetManager_connection = new WeakMap(), _FirefoxTargetManager_discoveredTargetsByTargetId = new WeakMap(), _FirefoxTargetManager_availableTargetsByTargetId = new WeakMap(), _FirefoxTargetManager_availableTargetsBySessionId = new WeakMap(), _FirefoxTargetManager_ignoredTargets = new WeakMap(), _FirefoxTargetManager_targetFilterCallback = new WeakMap(), _FirefoxTargetManager_targetFactory = new WeakMap(), _FirefoxTargetManager_targetInterceptors = new WeakMap(), _FirefoxTargetManager_attachedToTargetListenersBySession = new WeakMap(), _FirefoxTargetManager_initializeCallback = new WeakMap(), _FirefoxTargetManager_initializePromise = new WeakMap(), _FirefoxTargetManager_targetsIdsForInit = new WeakMap(), _FirefoxTargetManager_onSessionDetached = new WeakMap(), _FirefoxTargetManager_onTargetCreated = new WeakMap(), _FirefoxTargetManager_onTargetDestroyed = new WeakMap(), _FirefoxTargetManager_onAttachedToTarget = new WeakMap(), _FirefoxTargetManager_instances = new WeakSet(), _FirefoxTargetManager_finishInitializationIfReady = function _FirefoxTargetManager_finishInitializationIfReady(targetId) {
    FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_targetsIdsForInit, "f").delete(targetId);
    if (FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_targetsIdsForInit, "f").size === 0) {
        FirefoxTargetManager_classPrivateFieldGet(this, _FirefoxTargetManager_initializeCallback, "f").call(this);
    }
};
//# sourceMappingURL=FirefoxTargetManager.js.map
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/api/BrowserContext.js
var BrowserContext = __nccwpck_require__(5786);
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/Browser.js
/**
 * Copyright 2017 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Browser_classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var Browser_classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var _CDPBrowser_instances, _CDPBrowser_ignoreHTTPSErrors, _CDPBrowser_defaultViewport, _CDPBrowser_process, _CDPBrowser_connection, _CDPBrowser_closeCallback, _CDPBrowser_targetFilterCallback, _CDPBrowser_isPageTargetCallback, _CDPBrowser_defaultContext, _CDPBrowser_contexts, _CDPBrowser_screenshotTaskQueue, _CDPBrowser_targetManager, _CDPBrowser_emitDisconnected, _CDPBrowser_setIsPageTargetCallback, _CDPBrowser_createTarget, _CDPBrowser_onAttachedToTarget, _CDPBrowser_onDetachedFromTarget, _CDPBrowser_onTargetChanged, _CDPBrowser_onTargetDiscovered, _CDPBrowser_getVersion, _CDPBrowserContext_connection, _CDPBrowserContext_browser, _CDPBrowserContext_id;









/**
 * @internal
 */
class CDPBrowser extends Browser/* Browser */.A {
    /**
     * @internal
     */
    static async _create(product, connection, contextIds, ignoreHTTPSErrors, defaultViewport, process, closeCallback, targetFilterCallback, isPageTargetCallback) {
        const browser = new CDPBrowser(product, connection, contextIds, ignoreHTTPSErrors, defaultViewport, process, closeCallback, targetFilterCallback, isPageTargetCallback);
        await browser._attach();
        return browser;
    }
    /**
     * @internal
     */
    get _targets() {
        return Browser_classPrivateFieldGet(this, _CDPBrowser_targetManager, "f").getAvailableTargets();
    }
    /**
     * @internal
     */
    constructor(product, connection, contextIds, ignoreHTTPSErrors, defaultViewport, process, closeCallback, targetFilterCallback, isPageTargetCallback) {
        super();
        _CDPBrowser_instances.add(this);
        _CDPBrowser_ignoreHTTPSErrors.set(this, void 0);
        _CDPBrowser_defaultViewport.set(this, void 0);
        _CDPBrowser_process.set(this, void 0);
        _CDPBrowser_connection.set(this, void 0);
        _CDPBrowser_closeCallback.set(this, void 0);
        _CDPBrowser_targetFilterCallback.set(this, void 0);
        _CDPBrowser_isPageTargetCallback.set(this, void 0);
        _CDPBrowser_defaultContext.set(this, void 0);
        _CDPBrowser_contexts.set(this, void 0);
        _CDPBrowser_screenshotTaskQueue.set(this, void 0);
        _CDPBrowser_targetManager.set(this, void 0);
        _CDPBrowser_emitDisconnected.set(this, () => {
            this.emit("disconnected" /* BrowserEmittedEvents.Disconnected */);
        });
        _CDPBrowser_createTarget.set(this, (targetInfo, session) => {
            var _a;
            const { browserContextId } = targetInfo;
            const context = browserContextId && Browser_classPrivateFieldGet(this, _CDPBrowser_contexts, "f").has(browserContextId)
                ? Browser_classPrivateFieldGet(this, _CDPBrowser_contexts, "f").get(browserContextId)
                : Browser_classPrivateFieldGet(this, _CDPBrowser_defaultContext, "f");
            if (!context) {
                throw new Error('Missing browser context');
            }
            return new Target(targetInfo, session, context, Browser_classPrivateFieldGet(this, _CDPBrowser_targetManager, "f"), (isAutoAttachEmulated) => {
                return Browser_classPrivateFieldGet(this, _CDPBrowser_connection, "f")._createSession(targetInfo, isAutoAttachEmulated);
            }, Browser_classPrivateFieldGet(this, _CDPBrowser_ignoreHTTPSErrors, "f"), (_a = Browser_classPrivateFieldGet(this, _CDPBrowser_defaultViewport, "f")) !== null && _a !== void 0 ? _a : null, Browser_classPrivateFieldGet(this, _CDPBrowser_screenshotTaskQueue, "f"), Browser_classPrivateFieldGet(this, _CDPBrowser_isPageTargetCallback, "f"));
        });
        _CDPBrowser_onAttachedToTarget.set(this, async (target) => {
            if (await target._initializedPromise) {
                this.emit("targetcreated" /* BrowserEmittedEvents.TargetCreated */, target);
                target
                    .browserContext()
                    .emit("targetcreated" /* BrowserContextEmittedEvents.TargetCreated */, target);
            }
        });
        _CDPBrowser_onDetachedFromTarget.set(this, async (target) => {
            target._initializedCallback(false);
            target._closedCallback();
            if (await target._initializedPromise) {
                this.emit("targetdestroyed" /* BrowserEmittedEvents.TargetDestroyed */, target);
                target
                    .browserContext()
                    .emit("targetdestroyed" /* BrowserContextEmittedEvents.TargetDestroyed */, target);
            }
        });
        _CDPBrowser_onTargetChanged.set(this, ({ target, targetInfo, }) => {
            const previousURL = target.url();
            const wasInitialized = target._isInitialized;
            target._targetInfoChanged(targetInfo);
            if (wasInitialized && previousURL !== target.url()) {
                this.emit("targetchanged" /* BrowserEmittedEvents.TargetChanged */, target);
                target
                    .browserContext()
                    .emit("targetchanged" /* BrowserContextEmittedEvents.TargetChanged */, target);
            }
        });
        _CDPBrowser_onTargetDiscovered.set(this, (targetInfo) => {
            this.emit('targetdiscovered', targetInfo);
        });
        product = product || 'chrome';
        Browser_classPrivateFieldSet(this, _CDPBrowser_ignoreHTTPSErrors, ignoreHTTPSErrors, "f");
        Browser_classPrivateFieldSet(this, _CDPBrowser_defaultViewport, defaultViewport, "f");
        Browser_classPrivateFieldSet(this, _CDPBrowser_process, process, "f");
        Browser_classPrivateFieldSet(this, _CDPBrowser_screenshotTaskQueue, new TaskQueue(), "f");
        Browser_classPrivateFieldSet(this, _CDPBrowser_connection, connection, "f");
        Browser_classPrivateFieldSet(this, _CDPBrowser_closeCallback, closeCallback || function () { }, "f");
        Browser_classPrivateFieldSet(this, _CDPBrowser_targetFilterCallback, targetFilterCallback ||
            (() => {
                return true;
            }), "f");
        Browser_classPrivateFieldGet(this, _CDPBrowser_instances, "m", _CDPBrowser_setIsPageTargetCallback).call(this, isPageTargetCallback);
        if (product === 'firefox') {
            Browser_classPrivateFieldSet(this, _CDPBrowser_targetManager, new FirefoxTargetManager(connection, Browser_classPrivateFieldGet(this, _CDPBrowser_createTarget, "f"), Browser_classPrivateFieldGet(this, _CDPBrowser_targetFilterCallback, "f")), "f");
        }
        else {
            Browser_classPrivateFieldSet(this, _CDPBrowser_targetManager, new ChromeTargetManager(connection, Browser_classPrivateFieldGet(this, _CDPBrowser_createTarget, "f"), Browser_classPrivateFieldGet(this, _CDPBrowser_targetFilterCallback, "f")), "f");
        }
        Browser_classPrivateFieldSet(this, _CDPBrowser_defaultContext, new CDPBrowserContext(Browser_classPrivateFieldGet(this, _CDPBrowser_connection, "f"), this), "f");
        Browser_classPrivateFieldSet(this, _CDPBrowser_contexts, new Map(), "f");
        for (const contextId of contextIds) {
            Browser_classPrivateFieldGet(this, _CDPBrowser_contexts, "f").set(contextId, new CDPBrowserContext(Browser_classPrivateFieldGet(this, _CDPBrowser_connection, "f"), this, contextId));
        }
    }
    /**
     * @internal
     */
    async _attach() {
        Browser_classPrivateFieldGet(this, _CDPBrowser_connection, "f").on(common_Connection/* ConnectionEmittedEvents.Disconnected */.vF.Disconnected, Browser_classPrivateFieldGet(this, _CDPBrowser_emitDisconnected, "f"));
        Browser_classPrivateFieldGet(this, _CDPBrowser_targetManager, "f").on("targetAvailable" /* TargetManagerEmittedEvents.TargetAvailable */, Browser_classPrivateFieldGet(this, _CDPBrowser_onAttachedToTarget, "f"));
        Browser_classPrivateFieldGet(this, _CDPBrowser_targetManager, "f").on("targetGone" /* TargetManagerEmittedEvents.TargetGone */, Browser_classPrivateFieldGet(this, _CDPBrowser_onDetachedFromTarget, "f"));
        Browser_classPrivateFieldGet(this, _CDPBrowser_targetManager, "f").on("targetChanged" /* TargetManagerEmittedEvents.TargetChanged */, Browser_classPrivateFieldGet(this, _CDPBrowser_onTargetChanged, "f"));
        Browser_classPrivateFieldGet(this, _CDPBrowser_targetManager, "f").on("targetDiscovered" /* TargetManagerEmittedEvents.TargetDiscovered */, Browser_classPrivateFieldGet(this, _CDPBrowser_onTargetDiscovered, "f"));
        await Browser_classPrivateFieldGet(this, _CDPBrowser_targetManager, "f").initialize();
    }
    /**
     * @internal
     */
    _detach() {
        Browser_classPrivateFieldGet(this, _CDPBrowser_connection, "f").off(common_Connection/* ConnectionEmittedEvents.Disconnected */.vF.Disconnected, Browser_classPrivateFieldGet(this, _CDPBrowser_emitDisconnected, "f"));
        Browser_classPrivateFieldGet(this, _CDPBrowser_targetManager, "f").off("targetAvailable" /* TargetManagerEmittedEvents.TargetAvailable */, Browser_classPrivateFieldGet(this, _CDPBrowser_onAttachedToTarget, "f"));
        Browser_classPrivateFieldGet(this, _CDPBrowser_targetManager, "f").off("targetGone" /* TargetManagerEmittedEvents.TargetGone */, Browser_classPrivateFieldGet(this, _CDPBrowser_onDetachedFromTarget, "f"));
        Browser_classPrivateFieldGet(this, _CDPBrowser_targetManager, "f").off("targetChanged" /* TargetManagerEmittedEvents.TargetChanged */, Browser_classPrivateFieldGet(this, _CDPBrowser_onTargetChanged, "f"));
        Browser_classPrivateFieldGet(this, _CDPBrowser_targetManager, "f").off("targetDiscovered" /* TargetManagerEmittedEvents.TargetDiscovered */, Browser_classPrivateFieldGet(this, _CDPBrowser_onTargetDiscovered, "f"));
    }
    /**
     * The spawned browser process. Returns `null` if the browser instance was created with
     * {@link Puppeteer.connect}.
     */
    process() {
        var _a;
        return (_a = Browser_classPrivateFieldGet(this, _CDPBrowser_process, "f")) !== null && _a !== void 0 ? _a : null;
    }
    /**
     * @internal
     */
    _targetManager() {
        return Browser_classPrivateFieldGet(this, _CDPBrowser_targetManager, "f");
    }
    /**
     * @internal
     */
    _getIsPageTargetCallback() {
        return Browser_classPrivateFieldGet(this, _CDPBrowser_isPageTargetCallback, "f");
    }
    /**
     * Creates a new incognito browser context. This won't share cookies/cache with other
     * browser contexts.
     *
     * @example
     *
     * ```ts
     * (async () => {
     *   const browser = await puppeteer.launch();
     *   // Create a new incognito browser context.
     *   const context = await browser.createIncognitoBrowserContext();
     *   // Create a new page in a pristine context.
     *   const page = await context.newPage();
     *   // Do stuff
     *   await page.goto('https://example.com');
     * })();
     * ```
     */
    async createIncognitoBrowserContext(options = {}) {
        const { proxyServer, proxyBypassList } = options;
        const { browserContextId } = await Browser_classPrivateFieldGet(this, _CDPBrowser_connection, "f").send('Target.createBrowserContext', {
            proxyServer,
            proxyBypassList: proxyBypassList && proxyBypassList.join(','),
        });
        const context = new CDPBrowserContext(Browser_classPrivateFieldGet(this, _CDPBrowser_connection, "f"), this, browserContextId);
        Browser_classPrivateFieldGet(this, _CDPBrowser_contexts, "f").set(browserContextId, context);
        return context;
    }
    /**
     * Returns an array of all open browser contexts. In a newly created browser, this will
     * return a single instance of {@link BrowserContext}.
     */
    browserContexts() {
        return [Browser_classPrivateFieldGet(this, _CDPBrowser_defaultContext, "f"), ...Array.from(Browser_classPrivateFieldGet(this, _CDPBrowser_contexts, "f").values())];
    }
    /**
     * Returns the default browser context. The default browser context cannot be closed.
     */
    defaultBrowserContext() {
        return Browser_classPrivateFieldGet(this, _CDPBrowser_defaultContext, "f");
    }
    /**
     * @internal
     */
    async _disposeContext(contextId) {
        if (!contextId) {
            return;
        }
        await Browser_classPrivateFieldGet(this, _CDPBrowser_connection, "f").send('Target.disposeBrowserContext', {
            browserContextId: contextId,
        });
        Browser_classPrivateFieldGet(this, _CDPBrowser_contexts, "f").delete(contextId);
    }
    /**
     * The browser websocket endpoint which can be used as an argument to
     * {@link Puppeteer.connect}.
     *
     * @returns The Browser websocket url.
     *
     * @remarks
     *
     * The format is `ws://${host}:${port}/devtools/browser/<id>`.
     *
     * You can find the `webSocketDebuggerUrl` from `http://${host}:${port}/json/version`.
     * Learn more about the
     * {@link https://chromedevtools.github.io/devtools-protocol | devtools protocol} and
     * the {@link
     * https://chromedevtools.github.io/devtools-protocol/#how-do-i-access-the-browser-target
     * | browser endpoint}.
     */
    wsEndpoint() {
        return Browser_classPrivateFieldGet(this, _CDPBrowser_connection, "f").url();
    }
    /**
     * Promise which resolves to a new {@link Page} object. The Page is created in
     * a default browser context.
     */
    async newPage() {
        return Browser_classPrivateFieldGet(this, _CDPBrowser_defaultContext, "f").newPage();
    }
    /**
     * @internal
     */
    async _createPageInContext(contextId) {
        const { targetId } = await Browser_classPrivateFieldGet(this, _CDPBrowser_connection, "f").send('Target.createTarget', {
            url: 'about:blank',
            browserContextId: contextId || undefined,
        });
        const target = Browser_classPrivateFieldGet(this, _CDPBrowser_targetManager, "f").getAvailableTargets().get(targetId);
        if (!target) {
            throw new Error(`Missing target for page (id = ${targetId})`);
        }
        const initialized = await target._initializedPromise;
        if (!initialized) {
            throw new Error(`Failed to create target for page (id = ${targetId})`);
        }
        const page = await target.page();
        if (!page) {
            throw new Error(`Failed to create a page for context (id = ${contextId})`);
        }
        return page;
    }
    /**
     * All active targets inside the Browser. In case of multiple browser contexts, returns
     * an array with all the targets in all browser contexts.
     */
    targets() {
        return Array.from(Browser_classPrivateFieldGet(this, _CDPBrowser_targetManager, "f").getAvailableTargets().values()).filter(target => {
            return target._isInitialized;
        });
    }
    /**
     * The target associated with the browser.
     */
    target() {
        const browserTarget = this.targets().find(target => {
            return target.type() === 'browser';
        });
        if (!browserTarget) {
            throw new Error('Browser target is not found');
        }
        return browserTarget;
    }
    /**
     * Searches for a target in all browser contexts.
     *
     * @param predicate - A function to be run for every target.
     * @returns The first target found that matches the `predicate` function.
     *
     * @example
     *
     * An example of finding a target for a page opened via `window.open`:
     *
     * ```ts
     * await page.evaluate(() => window.open('https://www.example.com/'));
     * const newWindowTarget = await browser.waitForTarget(
     *   target => target.url() === 'https://www.example.com/'
     * );
     * ```
     */
    async waitForTarget(predicate, options = {}) {
        const { timeout = 30000 } = options;
        let resolve;
        let isResolved = false;
        const targetPromise = new Promise(x => {
            return (resolve = x);
        });
        this.on("targetcreated" /* BrowserEmittedEvents.TargetCreated */, check);
        this.on("targetchanged" /* BrowserEmittedEvents.TargetChanged */, check);
        try {
            this.targets().forEach(check);
            if (!timeout) {
                return await targetPromise;
            }
            return await (0,util/* waitWithTimeout */.CS)(targetPromise, 'target', timeout);
        }
        finally {
            this.off("targetcreated" /* BrowserEmittedEvents.TargetCreated */, check);
            this.off("targetchanged" /* BrowserEmittedEvents.TargetChanged */, check);
        }
        async function check(target) {
            if ((await predicate(target)) && !isResolved) {
                isResolved = true;
                resolve(target);
            }
        }
    }
    /**
     * An array of all open pages inside the Browser.
     *
     * @remarks
     *
     * In case of multiple browser contexts, returns an array with all the pages in all
     * browser contexts. Non-visible pages, such as `"background_page"`, will not be listed
     * here. You can find them using {@link Target.page}.
     */
    async pages() {
        const contextPages = await Promise.all(this.browserContexts().map(context => {
            return context.pages();
        }));
        // Flatten array.
        return contextPages.reduce((acc, x) => {
            return acc.concat(x);
        }, []);
    }
    /**
     * A string representing the browser name and version.
     *
     * @remarks
     *
     * For headless Chromium, this is similar to `HeadlessChrome/61.0.3153.0`. For
     * non-headless, this is similar to `Chrome/61.0.3153.0`.
     *
     * The format of browser.version() might change with future releases of Chromium.
     */
    async version() {
        const version = await Browser_classPrivateFieldGet(this, _CDPBrowser_instances, "m", _CDPBrowser_getVersion).call(this);
        return version.product;
    }
    /**
     * The browser's original user agent. Pages can override the browser user agent with
     * {@link Page.setUserAgent}.
     */
    async userAgent() {
        const version = await Browser_classPrivateFieldGet(this, _CDPBrowser_instances, "m", _CDPBrowser_getVersion).call(this);
        return version.userAgent;
    }
    /**
     * Closes Chromium and all of its pages (if any were opened). The
     * {@link CDPBrowser} object itself is considered to be disposed and cannot be
     * used anymore.
     */
    async close() {
        await Browser_classPrivateFieldGet(this, _CDPBrowser_closeCallback, "f").call(null);
        this.disconnect();
    }
    /**
     * Disconnects Puppeteer from the browser, but leaves the Chromium process running.
     * After calling `disconnect`, the {@link CDPBrowser} object is considered disposed and
     * cannot be used anymore.
     */
    disconnect() {
        Browser_classPrivateFieldGet(this, _CDPBrowser_targetManager, "f").dispose();
        Browser_classPrivateFieldGet(this, _CDPBrowser_connection, "f").dispose();
    }
    /**
     * Indicates that the browser is connected.
     */
    isConnected() {
        return !Browser_classPrivateFieldGet(this, _CDPBrowser_connection, "f")._closed;
    }
}
_CDPBrowser_ignoreHTTPSErrors = new WeakMap(), _CDPBrowser_defaultViewport = new WeakMap(), _CDPBrowser_process = new WeakMap(), _CDPBrowser_connection = new WeakMap(), _CDPBrowser_closeCallback = new WeakMap(), _CDPBrowser_targetFilterCallback = new WeakMap(), _CDPBrowser_isPageTargetCallback = new WeakMap(), _CDPBrowser_defaultContext = new WeakMap(), _CDPBrowser_contexts = new WeakMap(), _CDPBrowser_screenshotTaskQueue = new WeakMap(), _CDPBrowser_targetManager = new WeakMap(), _CDPBrowser_emitDisconnected = new WeakMap(), _CDPBrowser_createTarget = new WeakMap(), _CDPBrowser_onAttachedToTarget = new WeakMap(), _CDPBrowser_onDetachedFromTarget = new WeakMap(), _CDPBrowser_onTargetChanged = new WeakMap(), _CDPBrowser_onTargetDiscovered = new WeakMap(), _CDPBrowser_instances = new WeakSet(), _CDPBrowser_setIsPageTargetCallback = function _CDPBrowser_setIsPageTargetCallback(isPageTargetCallback) {
    Browser_classPrivateFieldSet(this, _CDPBrowser_isPageTargetCallback, isPageTargetCallback ||
        ((target) => {
            return (target.type === 'page' ||
                target.type === 'background_page' ||
                target.type === 'webview');
        }), "f");
}, _CDPBrowser_getVersion = function _CDPBrowser_getVersion() {
    return Browser_classPrivateFieldGet(this, _CDPBrowser_connection, "f").send('Browser.getVersion');
};
/**
 * @internal
 */
class CDPBrowserContext extends BrowserContext/* BrowserContext */._ {
    /**
     * @internal
     */
    constructor(connection, browser, contextId) {
        super();
        _CDPBrowserContext_connection.set(this, void 0);
        _CDPBrowserContext_browser.set(this, void 0);
        _CDPBrowserContext_id.set(this, void 0);
        Browser_classPrivateFieldSet(this, _CDPBrowserContext_connection, connection, "f");
        Browser_classPrivateFieldSet(this, _CDPBrowserContext_browser, browser, "f");
        Browser_classPrivateFieldSet(this, _CDPBrowserContext_id, contextId, "f");
    }
    get id() {
        return Browser_classPrivateFieldGet(this, _CDPBrowserContext_id, "f");
    }
    /**
     * An array of all active targets inside the browser context.
     */
    targets() {
        return Browser_classPrivateFieldGet(this, _CDPBrowserContext_browser, "f").targets().filter(target => {
            return target.browserContext() === this;
        });
    }
    /**
     * This searches for a target in this specific browser context.
     *
     * @example
     * An example of finding a target for a page opened via `window.open`:
     *
     * ```ts
     * await page.evaluate(() => window.open('https://www.example.com/'));
     * const newWindowTarget = await browserContext.waitForTarget(
     *   target => target.url() === 'https://www.example.com/'
     * );
     * ```
     *
     * @param predicate - A function to be run for every target
     * @param options - An object of options. Accepts a timeout,
     * which is the maximum wait time in milliseconds.
     * Pass `0` to disable the timeout. Defaults to 30 seconds.
     * @returns Promise which resolves to the first target found
     * that matches the `predicate` function.
     */
    waitForTarget(predicate, options = {}) {
        return Browser_classPrivateFieldGet(this, _CDPBrowserContext_browser, "f").waitForTarget(target => {
            return target.browserContext() === this && predicate(target);
        }, options);
    }
    /**
     * An array of all pages inside the browser context.
     *
     * @returns Promise which resolves to an array of all open pages.
     * Non visible pages, such as `"background_page"`, will not be listed here.
     * You can find them using {@link Target.page | the target page}.
     */
    async pages() {
        const pages = await Promise.all(this.targets()
            .filter(target => {
            var _a;
            return (target.type() === 'page' ||
                (target.type() === 'other' &&
                    ((_a = Browser_classPrivateFieldGet(this, _CDPBrowserContext_browser, "f")._getIsPageTargetCallback()) === null || _a === void 0 ? void 0 : _a(target._getTargetInfo()))));
        })
            .map(target => {
            return target.page();
        }));
        return pages.filter((page) => {
            return !!page;
        });
    }
    /**
     * Returns whether BrowserContext is incognito.
     * The default browser context is the only non-incognito browser context.
     *
     * @remarks
     * The default browser context cannot be closed.
     */
    isIncognito() {
        return !!Browser_classPrivateFieldGet(this, _CDPBrowserContext_id, "f");
    }
    /**
     * @example
     *
     * ```ts
     * const context = browser.defaultBrowserContext();
     * await context.overridePermissions('https://html5demos.com', [
     *   'geolocation',
     * ]);
     * ```
     *
     * @param origin - The origin to grant permissions to, e.g. "https://example.com".
     * @param permissions - An array of permissions to grant.
     * All permissions that are not listed here will be automatically denied.
     */
    async overridePermissions(origin, permissions) {
        const protocolPermissions = permissions.map(permission => {
            const protocolPermission = Browser/* WEB_PERMISSION_TO_PROTOCOL_PERMISSION.get */.k.get(permission);
            if (!protocolPermission) {
                throw new Error('Unknown permission: ' + permission);
            }
            return protocolPermission;
        });
        await Browser_classPrivateFieldGet(this, _CDPBrowserContext_connection, "f").send('Browser.grantPermissions', {
            origin,
            browserContextId: Browser_classPrivateFieldGet(this, _CDPBrowserContext_id, "f") || undefined,
            permissions: protocolPermissions,
        });
    }
    /**
     * Clears all permission overrides for the browser context.
     *
     * @example
     *
     * ```ts
     * const context = browser.defaultBrowserContext();
     * context.overridePermissions('https://example.com', ['clipboard-read']);
     * // do stuff ..
     * context.clearPermissionOverrides();
     * ```
     */
    async clearPermissionOverrides() {
        await Browser_classPrivateFieldGet(this, _CDPBrowserContext_connection, "f").send('Browser.resetPermissions', {
            browserContextId: Browser_classPrivateFieldGet(this, _CDPBrowserContext_id, "f") || undefined,
        });
    }
    /**
     * Creates a new page in the browser context.
     */
    newPage() {
        return Browser_classPrivateFieldGet(this, _CDPBrowserContext_browser, "f")._createPageInContext(Browser_classPrivateFieldGet(this, _CDPBrowserContext_id, "f"));
    }
    /**
     * The browser this browser context belongs to.
     */
    browser() {
        return Browser_classPrivateFieldGet(this, _CDPBrowserContext_browser, "f");
    }
    /**
     * Closes the browser context. All the targets that belong to the browser context
     * will be closed.
     *
     * @remarks
     * Only incognito browser contexts can be closed.
     */
    async close() {
        (0,assert/* assert */.h)(Browser_classPrivateFieldGet(this, _CDPBrowserContext_id, "f"), 'Non-incognito profiles cannot be closed!');
        await Browser_classPrivateFieldGet(this, _CDPBrowserContext_browser, "f")._disposeContext(Browser_classPrivateFieldGet(this, _CDPBrowserContext_id, "f"));
    }
}
_CDPBrowserContext_connection = new WeakMap(), _CDPBrowserContext_browser = new WeakMap(), _CDPBrowserContext_id = new WeakMap();
//# sourceMappingURL=Browser.js.map
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/environment.js
var environment = __nccwpck_require__(2794);
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/fetch.js
/**
 * Copyright 2020 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Gets the global version if we're in the browser, else loads the node-fetch module.
 *
 * @internal
 */
const getFetch = async () => {
    return globalThis.fetch || (await __nccwpck_require__.e(/* import() */ 805).then(__nccwpck_require__.t.bind(__nccwpck_require__, 9805, 19))).fetch;
};
//# sourceMappingURL=fetch.js.map
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/BrowserConnector.js
/**
 * Copyright 2020 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */







const getWebSocketTransportClass = async () => {
    return environment/* isNode */.U
        ? (await Promise.resolve(/* import() */).then(__nccwpck_require__.bind(__nccwpck_require__, 2401))).NodeWebSocketTransport
        : (await Promise.resolve(/* import() */).then(__nccwpck_require__.bind(__nccwpck_require__, 1689)))
            .BrowserWebSocketTransport;
};
/**
 * Users should never call this directly; it's called when calling
 * `puppeteer.connect`.
 *
 * @internal
 */
async function _connectToCDPBrowser(options) {
    const { browserWSEndpoint, browserURL, ignoreHTTPSErrors = false, defaultViewport = { width: 800, height: 600 }, transport, headers = {}, slowMo = 0, targetFilter, _isPageTarget: isPageTarget, } = options;
    (0,assert/* assert */.h)(Number(!!browserWSEndpoint) + Number(!!browserURL) + Number(!!transport) ===
        1, 'Exactly one of browserWSEndpoint, browserURL or transport must be passed to puppeteer.connect');
    let connection;
    if (transport) {
        connection = new common_Connection/* Connection */.ew('', transport, slowMo);
    }
    else if (browserWSEndpoint) {
        const WebSocketClass = await getWebSocketTransportClass();
        const connectionTransport = await WebSocketClass.create(browserWSEndpoint, headers);
        connection = new common_Connection/* Connection */.ew(browserWSEndpoint, connectionTransport, slowMo);
    }
    else if (browserURL) {
        const connectionURL = await getWSEndpoint(browserURL);
        const WebSocketClass = await getWebSocketTransportClass();
        const connectionTransport = await WebSocketClass.create(connectionURL);
        connection = new common_Connection/* Connection */.ew(connectionURL, connectionTransport, slowMo);
    }
    const version = await connection.send('Browser.getVersion');
    const product = version.product.toLowerCase().includes('firefox')
        ? 'firefox'
        : 'chrome';
    const { browserContextIds } = await connection.send('Target.getBrowserContexts');
    const browser = await CDPBrowser._create(product || 'chrome', connection, browserContextIds, ignoreHTTPSErrors, defaultViewport, undefined, () => {
        return connection.send('Browser.close').catch(util/* debugError */.ur);
    }, targetFilter, isPageTarget);
    return browser;
}
async function getWSEndpoint(browserURL) {
    const endpointURL = new URL('/json/version', browserURL);
    const fetch = await getFetch();
    try {
        const result = await fetch(endpointURL.toString(), {
            method: 'GET',
        });
        if (!result.ok) {
            throw new Error(`HTTP ${result.statusText}`);
        }
        const data = await result.json();
        return data.webSocketDebuggerUrl;
    }
    catch (error) {
        if ((0,ErrorLike/* isErrorLike */.x)(error)) {
            error.message =
                `Failed to fetch browser webSocket URL from ${endpointURL}: ` +
                    error.message;
        }
        throw error;
    }
}
//# sourceMappingURL=BrowserConnector.js.map
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/BrowserWebSocketTransport.js
var BrowserWebSocketTransport = __nccwpck_require__(1689);
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/Debug.js
var Debug = __nccwpck_require__(8528);
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/Device.js
/**
 * Copyright 2017 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const knownDevices = [
    {
        name: 'Blackberry PlayBook',
        userAgent: 'Mozilla/5.0 (PlayBook; U; RIM Tablet OS 2.1.0; en-US) AppleWebKit/536.2+ (KHTML like Gecko) Version/7.2.1.0 Safari/536.2+',
        viewport: {
            width: 600,
            height: 1024,
            deviceScaleFactor: 1,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'Blackberry PlayBook landscape',
        userAgent: 'Mozilla/5.0 (PlayBook; U; RIM Tablet OS 2.1.0; en-US) AppleWebKit/536.2+ (KHTML like Gecko) Version/7.2.1.0 Safari/536.2+',
        viewport: {
            width: 1024,
            height: 600,
            deviceScaleFactor: 1,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'BlackBerry Z30',
        userAgent: 'Mozilla/5.0 (BB10; Touch) AppleWebKit/537.10+ (KHTML, like Gecko) Version/10.0.9.2372 Mobile Safari/537.10+',
        viewport: {
            width: 360,
            height: 640,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'BlackBerry Z30 landscape',
        userAgent: 'Mozilla/5.0 (BB10; Touch) AppleWebKit/537.10+ (KHTML, like Gecko) Version/10.0.9.2372 Mobile Safari/537.10+',
        viewport: {
            width: 640,
            height: 360,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'Galaxy Note 3',
        userAgent: 'Mozilla/5.0 (Linux; U; Android 4.3; en-us; SM-N900T Build/JSS15J) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30',
        viewport: {
            width: 360,
            height: 640,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'Galaxy Note 3 landscape',
        userAgent: 'Mozilla/5.0 (Linux; U; Android 4.3; en-us; SM-N900T Build/JSS15J) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30',
        viewport: {
            width: 640,
            height: 360,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'Galaxy Note II',
        userAgent: 'Mozilla/5.0 (Linux; U; Android 4.1; en-us; GT-N7100 Build/JRO03C) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30',
        viewport: {
            width: 360,
            height: 640,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'Galaxy Note II landscape',
        userAgent: 'Mozilla/5.0 (Linux; U; Android 4.1; en-us; GT-N7100 Build/JRO03C) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30',
        viewport: {
            width: 640,
            height: 360,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'Galaxy S III',
        userAgent: 'Mozilla/5.0 (Linux; U; Android 4.0; en-us; GT-I9300 Build/IMM76D) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30',
        viewport: {
            width: 360,
            height: 640,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'Galaxy S III landscape',
        userAgent: 'Mozilla/5.0 (Linux; U; Android 4.0; en-us; GT-I9300 Build/IMM76D) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30',
        viewport: {
            width: 640,
            height: 360,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'Galaxy S5',
        userAgent: 'Mozilla/5.0 (Linux; Android 5.0; SM-G900P Build/LRX21T) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3765.0 Mobile Safari/537.36',
        viewport: {
            width: 360,
            height: 640,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'Galaxy S5 landscape',
        userAgent: 'Mozilla/5.0 (Linux; Android 5.0; SM-G900P Build/LRX21T) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3765.0 Mobile Safari/537.36',
        viewport: {
            width: 640,
            height: 360,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'Galaxy S8',
        userAgent: 'Mozilla/5.0 (Linux; Android 7.0; SM-G950U Build/NRD90M) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.84 Mobile Safari/537.36',
        viewport: {
            width: 360,
            height: 740,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'Galaxy S8 landscape',
        userAgent: 'Mozilla/5.0 (Linux; Android 7.0; SM-G950U Build/NRD90M) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.84 Mobile Safari/537.36',
        viewport: {
            width: 740,
            height: 360,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'Galaxy S9+',
        userAgent: 'Mozilla/5.0 (Linux; Android 8.0.0; SM-G965U Build/R16NW) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.111 Mobile Safari/537.36',
        viewport: {
            width: 320,
            height: 658,
            deviceScaleFactor: 4.5,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'Galaxy S9+ landscape',
        userAgent: 'Mozilla/5.0 (Linux; Android 8.0.0; SM-G965U Build/R16NW) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.111 Mobile Safari/537.36',
        viewport: {
            width: 658,
            height: 320,
            deviceScaleFactor: 4.5,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'Galaxy Tab S4',
        userAgent: 'Mozilla/5.0 (Linux; Android 8.1.0; SM-T837A) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.80 Safari/537.36',
        viewport: {
            width: 712,
            height: 1138,
            deviceScaleFactor: 2.25,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'Galaxy Tab S4 landscape',
        userAgent: 'Mozilla/5.0 (Linux; Android 8.1.0; SM-T837A) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.80 Safari/537.36',
        viewport: {
            width: 1138,
            height: 712,
            deviceScaleFactor: 2.25,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'iPad',
        userAgent: 'Mozilla/5.0 (iPad; CPU OS 11_0 like Mac OS X) AppleWebKit/604.1.34 (KHTML, like Gecko) Version/11.0 Mobile/15A5341f Safari/604.1',
        viewport: {
            width: 768,
            height: 1024,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'iPad landscape',
        userAgent: 'Mozilla/5.0 (iPad; CPU OS 11_0 like Mac OS X) AppleWebKit/604.1.34 (KHTML, like Gecko) Version/11.0 Mobile/15A5341f Safari/604.1',
        viewport: {
            width: 1024,
            height: 768,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'iPad (gen 6)',
        userAgent: 'Mozilla/5.0 (iPad; CPU OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.4 Mobile/15E148 Safari/604.1',
        viewport: {
            width: 768,
            height: 1024,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'iPad (gen 6) landscape',
        userAgent: 'Mozilla/5.0 (iPad; CPU OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.4 Mobile/15E148 Safari/604.1',
        viewport: {
            width: 1024,
            height: 768,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'iPad (gen 7)',
        userAgent: 'Mozilla/5.0 (iPad; CPU OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.4 Mobile/15E148 Safari/604.1',
        viewport: {
            width: 810,
            height: 1080,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'iPad (gen 7) landscape',
        userAgent: 'Mozilla/5.0 (iPad; CPU OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.4 Mobile/15E148 Safari/604.1',
        viewport: {
            width: 1080,
            height: 810,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'iPad Mini',
        userAgent: 'Mozilla/5.0 (iPad; CPU OS 11_0 like Mac OS X) AppleWebKit/604.1.34 (KHTML, like Gecko) Version/11.0 Mobile/15A5341f Safari/604.1',
        viewport: {
            width: 768,
            height: 1024,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'iPad Mini landscape',
        userAgent: 'Mozilla/5.0 (iPad; CPU OS 11_0 like Mac OS X) AppleWebKit/604.1.34 (KHTML, like Gecko) Version/11.0 Mobile/15A5341f Safari/604.1',
        viewport: {
            width: 1024,
            height: 768,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'iPad Pro',
        userAgent: 'Mozilla/5.0 (iPad; CPU OS 11_0 like Mac OS X) AppleWebKit/604.1.34 (KHTML, like Gecko) Version/11.0 Mobile/15A5341f Safari/604.1',
        viewport: {
            width: 1024,
            height: 1366,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'iPad Pro landscape',
        userAgent: 'Mozilla/5.0 (iPad; CPU OS 11_0 like Mac OS X) AppleWebKit/604.1.34 (KHTML, like Gecko) Version/11.0 Mobile/15A5341f Safari/604.1',
        viewport: {
            width: 1366,
            height: 1024,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'iPad Pro 11',
        userAgent: 'Mozilla/5.0 (iPad; CPU OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.4 Mobile/15E148 Safari/604.1',
        viewport: {
            width: 834,
            height: 1194,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'iPad Pro 11 landscape',
        userAgent: 'Mozilla/5.0 (iPad; CPU OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.4 Mobile/15E148 Safari/604.1',
        viewport: {
            width: 1194,
            height: 834,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'iPhone 4',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 7_1_2 like Mac OS X) AppleWebKit/537.51.2 (KHTML, like Gecko) Version/7.0 Mobile/11D257 Safari/9537.53',
        viewport: {
            width: 320,
            height: 480,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'iPhone 4 landscape',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 7_1_2 like Mac OS X) AppleWebKit/537.51.2 (KHTML, like Gecko) Version/7.0 Mobile/11D257 Safari/9537.53',
        viewport: {
            width: 480,
            height: 320,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'iPhone 5',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_1 like Mac OS X) AppleWebKit/603.1.30 (KHTML, like Gecko) Version/10.0 Mobile/14E304 Safari/602.1',
        viewport: {
            width: 320,
            height: 568,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'iPhone 5 landscape',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_1 like Mac OS X) AppleWebKit/603.1.30 (KHTML, like Gecko) Version/10.0 Mobile/14E304 Safari/602.1',
        viewport: {
            width: 568,
            height: 320,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'iPhone 6',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1',
        viewport: {
            width: 375,
            height: 667,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'iPhone 6 landscape',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1',
        viewport: {
            width: 667,
            height: 375,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'iPhone 6 Plus',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1',
        viewport: {
            width: 414,
            height: 736,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'iPhone 6 Plus landscape',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1',
        viewport: {
            width: 736,
            height: 414,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'iPhone 7',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1',
        viewport: {
            width: 375,
            height: 667,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'iPhone 7 landscape',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1',
        viewport: {
            width: 667,
            height: 375,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'iPhone 7 Plus',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1',
        viewport: {
            width: 414,
            height: 736,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'iPhone 7 Plus landscape',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1',
        viewport: {
            width: 736,
            height: 414,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'iPhone 8',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1',
        viewport: {
            width: 375,
            height: 667,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'iPhone 8 landscape',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1',
        viewport: {
            width: 667,
            height: 375,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'iPhone 8 Plus',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1',
        viewport: {
            width: 414,
            height: 736,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'iPhone 8 Plus landscape',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1',
        viewport: {
            width: 736,
            height: 414,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'iPhone SE',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_1 like Mac OS X) AppleWebKit/603.1.30 (KHTML, like Gecko) Version/10.0 Mobile/14E304 Safari/602.1',
        viewport: {
            width: 320,
            height: 568,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'iPhone SE landscape',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_1 like Mac OS X) AppleWebKit/603.1.30 (KHTML, like Gecko) Version/10.0 Mobile/14E304 Safari/602.1',
        viewport: {
            width: 568,
            height: 320,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'iPhone X',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1',
        viewport: {
            width: 375,
            height: 812,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'iPhone X landscape',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1',
        viewport: {
            width: 812,
            height: 375,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'iPhone XR',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 12_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0 Mobile/15E148 Safari/604.1',
        viewport: {
            width: 414,
            height: 896,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'iPhone XR landscape',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 12_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0 Mobile/15E148 Safari/604.1',
        viewport: {
            width: 896,
            height: 414,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'iPhone 11',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 13_7 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.1 Mobile/15E148 Safari/604.1',
        viewport: {
            width: 414,
            height: 828,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'iPhone 11 landscape',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 13_7 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.1 Mobile/15E148 Safari/604.1',
        viewport: {
            width: 828,
            height: 414,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'iPhone 11 Pro',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 13_7 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.1 Mobile/15E148 Safari/604.1',
        viewport: {
            width: 375,
            height: 812,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'iPhone 11 Pro landscape',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 13_7 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.1 Mobile/15E148 Safari/604.1',
        viewport: {
            width: 812,
            height: 375,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'iPhone 11 Pro Max',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 13_7 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.1 Mobile/15E148 Safari/604.1',
        viewport: {
            width: 414,
            height: 896,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'iPhone 11 Pro Max landscape',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 13_7 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.1 Mobile/15E148 Safari/604.1',
        viewport: {
            width: 896,
            height: 414,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'iPhone 12',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.4 Mobile/15E148 Safari/604.1',
        viewport: {
            width: 390,
            height: 844,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'iPhone 12 landscape',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.4 Mobile/15E148 Safari/604.1',
        viewport: {
            width: 844,
            height: 390,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'iPhone 12 Pro',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.4 Mobile/15E148 Safari/604.1',
        viewport: {
            width: 390,
            height: 844,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'iPhone 12 Pro landscape',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.4 Mobile/15E148 Safari/604.1',
        viewport: {
            width: 844,
            height: 390,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'iPhone 12 Pro Max',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.4 Mobile/15E148 Safari/604.1',
        viewport: {
            width: 428,
            height: 926,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'iPhone 12 Pro Max landscape',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.4 Mobile/15E148 Safari/604.1',
        viewport: {
            width: 926,
            height: 428,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'iPhone 12 Mini',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.4 Mobile/15E148 Safari/604.1',
        viewport: {
            width: 375,
            height: 812,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'iPhone 12 Mini landscape',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.4 Mobile/15E148 Safari/604.1',
        viewport: {
            width: 812,
            height: 375,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'iPhone 13',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 15_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.4 Mobile/15E148 Safari/604.1',
        viewport: {
            width: 390,
            height: 844,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'iPhone 13 landscape',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 15_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.4 Mobile/15E148 Safari/604.1',
        viewport: {
            width: 844,
            height: 390,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'iPhone 13 Pro',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 15_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.4 Mobile/15E148 Safari/604.1',
        viewport: {
            width: 390,
            height: 844,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'iPhone 13 Pro landscape',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 15_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.4 Mobile/15E148 Safari/604.1',
        viewport: {
            width: 844,
            height: 390,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'iPhone 13 Pro Max',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 15_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.4 Mobile/15E148 Safari/604.1',
        viewport: {
            width: 428,
            height: 926,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'iPhone 13 Pro Max landscape',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 15_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.4 Mobile/15E148 Safari/604.1',
        viewport: {
            width: 926,
            height: 428,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'iPhone 13 Mini',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 15_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.4 Mobile/15E148 Safari/604.1',
        viewport: {
            width: 375,
            height: 812,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'iPhone 13 Mini landscape',
        userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 15_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.4 Mobile/15E148 Safari/604.1',
        viewport: {
            width: 812,
            height: 375,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'JioPhone 2',
        userAgent: 'Mozilla/5.0 (Mobile; LYF/F300B/LYF-F300B-001-01-15-130718-i;Android; rv:48.0) Gecko/48.0 Firefox/48.0 KAIOS/2.5',
        viewport: {
            width: 240,
            height: 320,
            deviceScaleFactor: 1,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'JioPhone 2 landscape',
        userAgent: 'Mozilla/5.0 (Mobile; LYF/F300B/LYF-F300B-001-01-15-130718-i;Android; rv:48.0) Gecko/48.0 Firefox/48.0 KAIOS/2.5',
        viewport: {
            width: 320,
            height: 240,
            deviceScaleFactor: 1,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'Kindle Fire HDX',
        userAgent: 'Mozilla/5.0 (Linux; U; en-us; KFAPWI Build/JDQ39) AppleWebKit/535.19 (KHTML, like Gecko) Silk/3.13 Safari/535.19 Silk-Accelerated=true',
        viewport: {
            width: 800,
            height: 1280,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'Kindle Fire HDX landscape',
        userAgent: 'Mozilla/5.0 (Linux; U; en-us; KFAPWI Build/JDQ39) AppleWebKit/535.19 (KHTML, like Gecko) Silk/3.13 Safari/535.19 Silk-Accelerated=true',
        viewport: {
            width: 1280,
            height: 800,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'LG Optimus L70',
        userAgent: 'Mozilla/5.0 (Linux; U; Android 4.4.2; en-us; LGMS323 Build/KOT49I.MS32310c) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/75.0.3765.0 Mobile Safari/537.36',
        viewport: {
            width: 384,
            height: 640,
            deviceScaleFactor: 1.25,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'LG Optimus L70 landscape',
        userAgent: 'Mozilla/5.0 (Linux; U; Android 4.4.2; en-us; LGMS323 Build/KOT49I.MS32310c) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/75.0.3765.0 Mobile Safari/537.36',
        viewport: {
            width: 640,
            height: 384,
            deviceScaleFactor: 1.25,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'Microsoft Lumia 550',
        userAgent: 'Mozilla/5.0 (Windows Phone 10.0; Android 4.2.1; Microsoft; Lumia 550) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2486.0 Mobile Safari/537.36 Edge/14.14263',
        viewport: {
            width: 640,
            height: 360,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'Microsoft Lumia 950',
        userAgent: 'Mozilla/5.0 (Windows Phone 10.0; Android 4.2.1; Microsoft; Lumia 950) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2486.0 Mobile Safari/537.36 Edge/14.14263',
        viewport: {
            width: 360,
            height: 640,
            deviceScaleFactor: 4,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'Microsoft Lumia 950 landscape',
        userAgent: 'Mozilla/5.0 (Windows Phone 10.0; Android 4.2.1; Microsoft; Lumia 950) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2486.0 Mobile Safari/537.36 Edge/14.14263',
        viewport: {
            width: 640,
            height: 360,
            deviceScaleFactor: 4,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'Nexus 10',
        userAgent: 'Mozilla/5.0 (Linux; Android 6.0.1; Nexus 10 Build/MOB31T) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3765.0 Safari/537.36',
        viewport: {
            width: 800,
            height: 1280,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'Nexus 10 landscape',
        userAgent: 'Mozilla/5.0 (Linux; Android 6.0.1; Nexus 10 Build/MOB31T) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3765.0 Safari/537.36',
        viewport: {
            width: 1280,
            height: 800,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'Nexus 4',
        userAgent: 'Mozilla/5.0 (Linux; Android 4.4.2; Nexus 4 Build/KOT49H) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3765.0 Mobile Safari/537.36',
        viewport: {
            width: 384,
            height: 640,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'Nexus 4 landscape',
        userAgent: 'Mozilla/5.0 (Linux; Android 4.4.2; Nexus 4 Build/KOT49H) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3765.0 Mobile Safari/537.36',
        viewport: {
            width: 640,
            height: 384,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'Nexus 5',
        userAgent: 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3765.0 Mobile Safari/537.36',
        viewport: {
            width: 360,
            height: 640,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'Nexus 5 landscape',
        userAgent: 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3765.0 Mobile Safari/537.36',
        viewport: {
            width: 640,
            height: 360,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'Nexus 5X',
        userAgent: 'Mozilla/5.0 (Linux; Android 8.0.0; Nexus 5X Build/OPR4.170623.006) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3765.0 Mobile Safari/537.36',
        viewport: {
            width: 412,
            height: 732,
            deviceScaleFactor: 2.625,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'Nexus 5X landscape',
        userAgent: 'Mozilla/5.0 (Linux; Android 8.0.0; Nexus 5X Build/OPR4.170623.006) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3765.0 Mobile Safari/537.36',
        viewport: {
            width: 732,
            height: 412,
            deviceScaleFactor: 2.625,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'Nexus 6',
        userAgent: 'Mozilla/5.0 (Linux; Android 7.1.1; Nexus 6 Build/N6F26U) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3765.0 Mobile Safari/537.36',
        viewport: {
            width: 412,
            height: 732,
            deviceScaleFactor: 3.5,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'Nexus 6 landscape',
        userAgent: 'Mozilla/5.0 (Linux; Android 7.1.1; Nexus 6 Build/N6F26U) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3765.0 Mobile Safari/537.36',
        viewport: {
            width: 732,
            height: 412,
            deviceScaleFactor: 3.5,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'Nexus 6P',
        userAgent: 'Mozilla/5.0 (Linux; Android 8.0.0; Nexus 6P Build/OPP3.170518.006) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3765.0 Mobile Safari/537.36',
        viewport: {
            width: 412,
            height: 732,
            deviceScaleFactor: 3.5,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'Nexus 6P landscape',
        userAgent: 'Mozilla/5.0 (Linux; Android 8.0.0; Nexus 6P Build/OPP3.170518.006) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3765.0 Mobile Safari/537.36',
        viewport: {
            width: 732,
            height: 412,
            deviceScaleFactor: 3.5,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'Nexus 7',
        userAgent: 'Mozilla/5.0 (Linux; Android 6.0.1; Nexus 7 Build/MOB30X) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3765.0 Safari/537.36',
        viewport: {
            width: 600,
            height: 960,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'Nexus 7 landscape',
        userAgent: 'Mozilla/5.0 (Linux; Android 6.0.1; Nexus 7 Build/MOB30X) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3765.0 Safari/537.36',
        viewport: {
            width: 960,
            height: 600,
            deviceScaleFactor: 2,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'Nokia Lumia 520',
        userAgent: 'Mozilla/5.0 (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0; IEMobile/10.0; ARM; Touch; NOKIA; Lumia 520)',
        viewport: {
            width: 320,
            height: 533,
            deviceScaleFactor: 1.5,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'Nokia Lumia 520 landscape',
        userAgent: 'Mozilla/5.0 (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0; IEMobile/10.0; ARM; Touch; NOKIA; Lumia 520)',
        viewport: {
            width: 533,
            height: 320,
            deviceScaleFactor: 1.5,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'Nokia N9',
        userAgent: 'Mozilla/5.0 (MeeGo; NokiaN9) AppleWebKit/534.13 (KHTML, like Gecko) NokiaBrowser/8.5.0 Mobile Safari/534.13',
        viewport: {
            width: 480,
            height: 854,
            deviceScaleFactor: 1,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'Nokia N9 landscape',
        userAgent: 'Mozilla/5.0 (MeeGo; NokiaN9) AppleWebKit/534.13 (KHTML, like Gecko) NokiaBrowser/8.5.0 Mobile Safari/534.13',
        viewport: {
            width: 854,
            height: 480,
            deviceScaleFactor: 1,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'Pixel 2',
        userAgent: 'Mozilla/5.0 (Linux; Android 8.0; Pixel 2 Build/OPD3.170816.012) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3765.0 Mobile Safari/537.36',
        viewport: {
            width: 411,
            height: 731,
            deviceScaleFactor: 2.625,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'Pixel 2 landscape',
        userAgent: 'Mozilla/5.0 (Linux; Android 8.0; Pixel 2 Build/OPD3.170816.012) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3765.0 Mobile Safari/537.36',
        viewport: {
            width: 731,
            height: 411,
            deviceScaleFactor: 2.625,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'Pixel 2 XL',
        userAgent: 'Mozilla/5.0 (Linux; Android 8.0.0; Pixel 2 XL Build/OPD1.170816.004) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3765.0 Mobile Safari/537.36',
        viewport: {
            width: 411,
            height: 823,
            deviceScaleFactor: 3.5,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'Pixel 2 XL landscape',
        userAgent: 'Mozilla/5.0 (Linux; Android 8.0.0; Pixel 2 XL Build/OPD1.170816.004) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3765.0 Mobile Safari/537.36',
        viewport: {
            width: 823,
            height: 411,
            deviceScaleFactor: 3.5,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'Pixel 3',
        userAgent: 'Mozilla/5.0 (Linux; Android 9; Pixel 3 Build/PQ1A.181105.017.A1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.158 Mobile Safari/537.36',
        viewport: {
            width: 393,
            height: 786,
            deviceScaleFactor: 2.75,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'Pixel 3 landscape',
        userAgent: 'Mozilla/5.0 (Linux; Android 9; Pixel 3 Build/PQ1A.181105.017.A1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.158 Mobile Safari/537.36',
        viewport: {
            width: 786,
            height: 393,
            deviceScaleFactor: 2.75,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'Pixel 4',
        userAgent: 'Mozilla/5.0 (Linux; Android 10; Pixel 4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Mobile Safari/537.36',
        viewport: {
            width: 353,
            height: 745,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'Pixel 4 landscape',
        userAgent: 'Mozilla/5.0 (Linux; Android 10; Pixel 4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Mobile Safari/537.36',
        viewport: {
            width: 745,
            height: 353,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'Pixel 4a (5G)',
        userAgent: 'Mozilla/5.0 (Linux; Android 11; Pixel 4a (5G)) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4812.0 Mobile Safari/537.36',
        viewport: {
            width: 353,
            height: 745,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'Pixel 4a (5G) landscape',
        userAgent: 'Mozilla/5.0 (Linux; Android 11; Pixel 4a (5G)) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4812.0 Mobile Safari/537.36',
        viewport: {
            width: 745,
            height: 353,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'Pixel 5',
        userAgent: 'Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4812.0 Mobile Safari/537.36',
        viewport: {
            width: 393,
            height: 851,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'Pixel 5 landscape',
        userAgent: 'Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4812.0 Mobile Safari/537.36',
        viewport: {
            width: 851,
            height: 393,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
    {
        name: 'Moto G4',
        userAgent: 'Mozilla/5.0 (Linux; Android 7.0; Moto G (4)) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4812.0 Mobile Safari/537.36',
        viewport: {
            width: 360,
            height: 640,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: false,
        },
    },
    {
        name: 'Moto G4 landscape',
        userAgent: 'Mozilla/5.0 (Linux; Android 7.0; Moto G (4)) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4812.0 Mobile Safari/537.36',
        viewport: {
            width: 640,
            height: 360,
            deviceScaleFactor: 3,
            isMobile: true,
            hasTouch: true,
            isLandscape: true,
        },
    },
];
const knownDevicesByName = {};
for (const device of knownDevices) {
    knownDevicesByName[device.name] = device;
}
/**
 * A list of devices to be used with {@link Page.emulate}.
 *
 * @example
 *
 * ```ts
 * import {KnownDevices} from 'puppeteer';
 * const iPhone = KnownDevices['iPhone 6'];
 *
 * (async () => {
 *   const browser = await puppeteer.launch();
 *   const page = await browser.newPage();
 *   await page.emulate(iPhone);
 *   await page.goto('https://www.google.com');
 *   // other actions...
 *   await browser.close();
 * })();
 * ```
 *
 * @public
 */
const KnownDevices = Object.freeze(knownDevicesByName);
/**
 * @deprecated Import {@link KnownDevices}
 *
 * @public
 */
const devices = (/* unused pure expression or super */ null && (KnownDevices));
//# sourceMappingURL=Device.js.map
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/ElementHandle.js
var ElementHandle = __nccwpck_require__(5498);
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/Errors.js
var Errors = __nccwpck_require__(7154);
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/Frame.js
var Frame = __nccwpck_require__(5360);
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/FrameTree.js
var FrameTree = __nccwpck_require__(3832);
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/HTTPRequest.js
var HTTPRequest = __nccwpck_require__(4573);
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/HTTPResponse.js
var HTTPResponse = __nccwpck_require__(8599);
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/IsolatedWorld.js
var IsolatedWorld = __nccwpck_require__(2860);
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/LazyArg.js
var LazyArg = __nccwpck_require__(5532);
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/LifecycleWatcher.js
var LifecycleWatcher = __nccwpck_require__(9518);
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/NetworkEventManager.js
var NetworkEventManager = __nccwpck_require__(6557);
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/NodeWebSocketTransport.js + 2 modules
var NodeWebSocketTransport = __nccwpck_require__(2401);
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/PredefinedNetworkConditions.js
/**
 * Copyright 2021 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A list of network conditions to be used with
 * {@link Page.emulateNetworkConditions}.
 *
 * @example
 *
 * ```ts
 * import {PredefinedNetworkConditions} from 'puppeteer';
 * const slow3G = PredefinedNetworkConditions['Slow 3G'];
 *
 * (async () => {
 *   const browser = await puppeteer.launch();
 *   const page = await browser.newPage();
 *   await page.emulateNetworkConditions(slow3G);
 *   await page.goto('https://www.google.com');
 *   // other actions...
 *   await browser.close();
 * })();
 * ```
 *
 * @public
 */
const PredefinedNetworkConditions = Object.freeze({
    'Slow 3G': {
        download: ((500 * 1000) / 8) * 0.8,
        upload: ((500 * 1000) / 8) * 0.8,
        latency: 400 * 5,
    },
    'Fast 3G': {
        download: ((1.6 * 1000 * 1000) / 8) * 0.9,
        upload: ((750 * 1000) / 8) * 0.9,
        latency: 150 * 3.75,
    },
});
/**
 * @deprecated Import {@link PredefinedNetworkConditions}.
 *
 * @public
 */
const networkConditions = (/* unused pure expression or super */ null && (PredefinedNetworkConditions));
//# sourceMappingURL=PredefinedNetworkConditions.js.map
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/QueryHandler.js
var QueryHandler = __nccwpck_require__(6402);
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/Puppeteer.js


/**
 * The main Puppeteer class.
 *
 * IMPORTANT: if you are using Puppeteer in a Node environment, you will get an
 * instance of {@link PuppeteerNode} when you import or require `puppeteer`.
 * That class extends `Puppeteer`, so has all the methods documented below as
 * well as all that are defined on {@link PuppeteerNode}.
 * @public
 */
class Puppeteer {
    /**
     * Registers a {@link CustomQueryHandler | custom query handler}.
     *
     * @remarks
     * After registration, the handler can be used everywhere where a selector is
     * expected by prepending the selection string with `<name>/`. The name is only
     * allowed to consist of lower- and upper case latin letters.
     *
     * @example
     *
     * ```
     * puppeteer.registerCustomQueryHandler('text', { … });
     * const aHandle = await page.$('text/…');
     * ```
     *
     * @param name - The name that the custom query handler will be registered
     * under.
     * @param queryHandler - The {@link CustomQueryHandler | custom query handler}
     * to register.
     *
     * @public
     */
    static registerCustomQueryHandler(name, queryHandler) {
        return (0,QueryHandler/* registerCustomQueryHandler */.sc)(name, queryHandler);
    }
    /**
     * Unregisters a custom query handler for a given name.
     */
    static unregisterCustomQueryHandler(name) {
        return (0,QueryHandler/* unregisterCustomQueryHandler */.RO)(name);
    }
    /**
     * Gets the names of all custom query handlers.
     */
    static customQueryHandlerNames() {
        return (0,QueryHandler/* customQueryHandlerNames */.e3)();
    }
    /**
     * Unregisters all custom query handlers.
     */
    static clearCustomQueryHandlers() {
        return (0,QueryHandler/* clearCustomQueryHandlers */.oc)();
    }
    /**
     * @internal
     */
    constructor(settings) {
        /**
         * @internal
         */
        this._changedProduct = false;
        this._isPuppeteerCore = settings.isPuppeteerCore;
        this.connect = this.connect.bind(this);
    }
    /**
     * This method attaches Puppeteer to an existing browser instance.
     *
     * @remarks
     *
     * @param options - Set of configurable options to set on the browser.
     * @returns Promise which resolves to browser instance.
     */
    connect(options) {
        return _connectToCDPBrowser(options);
    }
}
//# sourceMappingURL=Puppeteer.js.map
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/SecurityDetails.js
var SecurityDetails = __nccwpck_require__(4029);
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/WaitTask.js
var WaitTask = __nccwpck_require__(6134);
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/common/common.js
/**
 * Copyright 2022 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */





















































//# sourceMappingURL=common.js.map
// EXTERNAL MODULE: external "child_process"
var external_child_process_ = __nccwpck_require__(2081);
// EXTERNAL MODULE: ./node_modules/extract-zip/index.js
var extract_zip = __nccwpck_require__(460);
;// CONCATENATED MODULE: external "fs/promises"
const promises_namespaceObject = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("fs/promises");
// EXTERNAL MODULE: external "https"
var external_https_ = __nccwpck_require__(5687);
// EXTERNAL MODULE: ./node_modules/https-proxy-agent/dist/index.js
var dist = __nccwpck_require__(7219);
// EXTERNAL MODULE: external "os"
var external_os_ = __nccwpck_require__(2037);
// EXTERNAL MODULE: ./node_modules/proxy-from-env/index.js
var proxy_from_env = __nccwpck_require__(3329);
// EXTERNAL MODULE: ./node_modules/rimraf/rimraf.js
var rimraf = __nccwpck_require__(4959);
// EXTERNAL MODULE: ./node_modules/tar-fs/index.js
var tar_fs = __nccwpck_require__(366);
// EXTERNAL MODULE: ./node_modules/unbzip2-stream/index.js
var unbzip2_stream = __nccwpck_require__(3467);
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/node/BrowserFetcher.js
/**
 * Copyright 2017 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var BrowserFetcher_classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var BrowserFetcher_classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _BrowserFetcher_instances, _BrowserFetcher_product, _BrowserFetcher_downloadPath, _BrowserFetcher_downloadHost, _BrowserFetcher_platform, _BrowserFetcher_getFolderPath;


















const debugFetcher = (0,Debug/* debug */.fF)('puppeteer:fetcher');
const downloadURLs = {
    chrome: {
        linux: '%s/chromium-browser-snapshots/Linux_x64/%d/%s.zip',
        mac: '%s/chromium-browser-snapshots/Mac/%d/%s.zip',
        mac_arm: '%s/chromium-browser-snapshots/Mac_Arm/%d/%s.zip',
        win32: '%s/chromium-browser-snapshots/Win/%d/%s.zip',
        win64: '%s/chromium-browser-snapshots/Win_x64/%d/%s.zip',
    },
    firefox: {
        linux: '%s/firefox-%s.en-US.%s-x86_64.tar.bz2',
        mac: '%s/firefox-%s.en-US.%s.dmg',
        win32: '%s/firefox-%s.en-US.%s.zip',
        win64: '%s/firefox-%s.en-US.%s.zip',
    },
};
const browserConfig = {
    chrome: {
        host: 'https://storage.googleapis.com',
    },
    firefox: {
        host: 'https://archive.mozilla.org/pub/firefox/nightly/latest-mozilla-central',
    },
};
const exec = (0,external_util_.promisify)(external_child_process_.exec);
function archiveName(product, platform, revision) {
    switch (product) {
        case 'chrome':
            switch (platform) {
                case 'linux':
                    return 'chrome-linux';
                case 'mac_arm':
                case 'mac':
                    return 'chrome-mac';
                case 'win32':
                case 'win64':
                    // Windows archive name changed at r591479.
                    return parseInt(revision, 10) > 591479
                        ? 'chrome-win'
                        : 'chrome-win32';
            }
        case 'firefox':
            return platform;
    }
}
function downloadURL(product, platform, host, revision) {
    const url = external_util_.format(downloadURLs[product][platform], host, revision, archiveName(product, platform, revision));
    return url;
}
function handleArm64() {
    let exists = (0,external_fs_.existsSync)('/usr/bin/chromium-browser');
    if (exists) {
        return;
    }
    exists = (0,external_fs_.existsSync)('/usr/bin/chromium');
    if (exists) {
        return;
    }
    console.error('The chromium binary is not available for arm64.' +
        '\nIf you are on Ubuntu, you can install with: ' +
        '\n\n sudo apt install chromium\n' +
        '\n\n sudo apt install chromium-browser\n');
    throw new Error();
}
/**
 * BrowserFetcher can download and manage different versions of Chromium and
 * Firefox.
 *
 * @remarks
 * BrowserFetcher operates on revision strings that specify a precise version of
 * Chromium, e.g. `"533271"`. Revision strings can be obtained from
 * {@link http://omahaproxy.appspot.com/ | omahaproxy.appspot.com}. For Firefox,
 * BrowserFetcher downloads Firefox Nightly and operates on version numbers such
 * as `"75"`.
 *
 * @remarks
 * The default constructed fetcher will always be for Chromium unless otherwise
 * specified.
 *
 * @remarks
 * BrowserFetcher is not designed to work concurrently with other instances of
 * BrowserFetcher that share the same downloads directory.
 *
 * @example
 * An example of using BrowserFetcher to download a specific version of Chromium
 * and running Puppeteer against it:
 *
 * ```ts
 * const browserFetcher = new BrowserFetcher({path: 'path/to/download/folder'});
 * const revisionInfo = await browserFetcher.download('533271');
 * const browser = await puppeteer.launch({
 *   executablePath: revisionInfo.executablePath,
 * });
 * ```
 *
 * @public
 */
class BrowserFetcher {
    /**
     * Constructs a browser fetcher for the given options.
     */
    constructor(options) {
        var _a, _b;
        _BrowserFetcher_instances.add(this);
        _BrowserFetcher_product.set(this, void 0);
        _BrowserFetcher_downloadPath.set(this, void 0);
        _BrowserFetcher_downloadHost.set(this, void 0);
        _BrowserFetcher_platform.set(this, void 0);
        BrowserFetcher_classPrivateFieldSet(this, _BrowserFetcher_product, (_a = options.product) !== null && _a !== void 0 ? _a : 'chrome', "f");
        BrowserFetcher_classPrivateFieldSet(this, _BrowserFetcher_downloadPath, options.path, "f");
        BrowserFetcher_classPrivateFieldSet(this, _BrowserFetcher_downloadHost, (_b = options.host) !== null && _b !== void 0 ? _b : browserConfig[BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_product, "f")].host, "f");
        if (options.platform) {
            BrowserFetcher_classPrivateFieldSet(this, _BrowserFetcher_platform, options.platform, "f");
        }
        else {
            const platform = external_os_.platform();
            switch (platform) {
                case 'darwin':
                    switch (BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_product, "f")) {
                        case 'chrome':
                            BrowserFetcher_classPrivateFieldSet(this, _BrowserFetcher_platform, external_os_.arch() === 'arm64' && options.useMacOSARMBinary
                                ? 'mac_arm'
                                : 'mac', "f");
                            break;
                        case 'firefox':
                            BrowserFetcher_classPrivateFieldSet(this, _BrowserFetcher_platform, 'mac', "f");
                            break;
                    }
                    break;
                case 'linux':
                    BrowserFetcher_classPrivateFieldSet(this, _BrowserFetcher_platform, 'linux', "f");
                    break;
                case 'win32':
                    BrowserFetcher_classPrivateFieldSet(this, _BrowserFetcher_platform, external_os_.arch() === 'x64' ||
                        // Windows 11 for ARM supports x64 emulation
                        (external_os_.arch() === 'arm64' && isWindows11(external_os_.release()))
                        ? 'win64'
                        : 'win32', "f");
                    return;
                default:
                    (0,assert/* assert */.h)(false, 'Unsupported platform: ' + platform);
            }
        }
        (0,assert/* assert */.h)(downloadURLs[BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_product, "f")][BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_platform, "f")], 'Unsupported platform: ' + BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_platform, "f"));
    }
    /**
     * @returns Returns the current `Platform`, which is one of `mac`, `linux`,
     * `win32` or `win64`.
     */
    platform() {
        return BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_platform, "f");
    }
    /**
     * @returns Returns the current `Product`, which is one of `chrome` or
     * `firefox`.
     */
    product() {
        return BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_product, "f");
    }
    /**
     * @returns The download host being used.
     */
    host() {
        return BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_downloadHost, "f");
    }
    /**
     * Initiates a HEAD request to check if the revision is available.
     * @remarks
     * This method is affected by the current `product`.
     * @param revision - The revision to check availability for.
     * @returns A promise that resolves to `true` if the revision could be downloaded
     * from the host.
     */
    canDownload(revision) {
        const url = downloadURL(BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_product, "f"), BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_platform, "f"), BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_downloadHost, "f"), revision);
        return new Promise(resolve => {
            const request = httpRequest(url, 'HEAD', response => {
                resolve(response.statusCode === 200);
            }, false);
            request.on('error', error => {
                console.error(error);
                resolve(false);
            });
        });
    }
    /**
     * Initiates a GET request to download the revision from the host.
     * @remarks
     * This method is affected by the current `product`.
     * @param revision - The revision to download.
     * @param progressCallback - A function that will be called with two arguments:
     * How many bytes have been downloaded and the total number of bytes of the download.
     * @returns A promise with revision information when the revision is downloaded
     * and extracted.
     */
    async download(revision, progressCallback = () => { }) {
        const url = downloadURL(BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_product, "f"), BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_platform, "f"), BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_downloadHost, "f"), revision);
        const fileName = url.split('/').pop();
        (0,assert/* assert */.h)(fileName, `A malformed download URL was found: ${url}.`);
        const archivePath = external_path_.join(BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_downloadPath, "f"), fileName);
        const outputPath = BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_instances, "m", _BrowserFetcher_getFolderPath).call(this, revision);
        if ((0,external_fs_.existsSync)(outputPath)) {
            return this.revisionInfo(revision);
        }
        if (!(0,external_fs_.existsSync)(BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_downloadPath, "f"))) {
            await (0,promises_namespaceObject.mkdir)(BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_downloadPath, "f"), { recursive: true });
        }
        // Use system Chromium builds on Linux ARM devices
        if (external_os_.platform() === 'linux' && external_os_.arch() === 'arm64') {
            handleArm64();
            return;
        }
        try {
            await _downloadFile(url, archivePath, progressCallback);
            await install(archivePath, outputPath);
        }
        finally {
            if ((0,external_fs_.existsSync)(archivePath)) {
                await (0,promises_namespaceObject.unlink)(archivePath);
            }
        }
        const revisionInfo = this.revisionInfo(revision);
        if (revisionInfo) {
            await (0,promises_namespaceObject.chmod)(revisionInfo.executablePath, 0o755);
        }
        return revisionInfo;
    }
    /**
     * @remarks
     * This method is affected by the current `product`.
     * @returns A list of all revision strings (for the current `product`)
     * available locally on disk.
     */
    localRevisions() {
        if (!(0,external_fs_.existsSync)(BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_downloadPath, "f"))) {
            return [];
        }
        const fileNames = (0,external_fs_.readdirSync)(BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_downloadPath, "f"));
        return fileNames
            .map(fileName => {
            return parseFolderPath(BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_product, "f"), fileName);
        })
            .filter((entry) => {
            var _a;
            return (_a = (entry && entry.platform === BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_platform, "f"))) !== null && _a !== void 0 ? _a : false;
        })
            .map(entry => {
            return entry.revision;
        });
    }
    /**
     * @remarks
     * This method is affected by the current `product`.
     * @param revision - A revision to remove for the current `product`.
     * @returns A promise that resolves when the revision has been removes or
     * throws if the revision has not been downloaded.
     */
    async remove(revision) {
        const folderPath = BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_instances, "m", _BrowserFetcher_getFolderPath).call(this, revision);
        (0,assert/* assert */.h)((0,external_fs_.existsSync)(folderPath), `Failed to remove: revision ${revision} is not downloaded`);
        await new Promise(fulfill => {
            return rimraf(folderPath, fulfill);
        });
    }
    /**
     * @param revision - The revision to get info for.
     * @returns The revision info for the given revision.
     */
    revisionInfo(revision) {
        const folderPath = BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_instances, "m", _BrowserFetcher_getFolderPath).call(this, revision);
        let executablePath = '';
        switch (BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_product, "f")) {
            case 'chrome':
                switch (BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_platform, "f")) {
                    case 'mac':
                    case 'mac_arm':
                        executablePath = external_path_.join(folderPath, archiveName(BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_product, "f"), BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_platform, "f"), revision), 'Chromium.app', 'Contents', 'MacOS', 'Chromium');
                        break;
                    case 'linux':
                        executablePath = external_path_.join(folderPath, archiveName(BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_product, "f"), BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_platform, "f"), revision), 'chrome');
                        break;
                    case 'win32':
                    case 'win64':
                        executablePath = external_path_.join(folderPath, archiveName(BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_product, "f"), BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_platform, "f"), revision), 'chrome.exe');
                        break;
                }
                break;
            case 'firefox':
                switch (BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_platform, "f")) {
                    case 'mac':
                    case 'mac_arm':
                        executablePath = external_path_.join(folderPath, 'Firefox Nightly.app', 'Contents', 'MacOS', 'firefox');
                        break;
                    case 'linux':
                        executablePath = external_path_.join(folderPath, 'firefox', 'firefox');
                        break;
                    case 'win32':
                    case 'win64':
                        executablePath = external_path_.join(folderPath, 'firefox', 'firefox.exe');
                        break;
                }
        }
        const url = downloadURL(BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_product, "f"), BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_platform, "f"), BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_downloadHost, "f"), revision);
        const local = (0,external_fs_.existsSync)(folderPath);
        debugFetcher({
            revision,
            executablePath,
            folderPath,
            local,
            url,
            product: BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_product, "f"),
        });
        return {
            revision,
            executablePath,
            folderPath,
            local,
            url,
            product: BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_product, "f"),
        };
    }
    /**
     * @internal
     */
    getDownloadPath() {
        return BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_downloadPath, "f");
    }
}
_BrowserFetcher_product = new WeakMap(), _BrowserFetcher_downloadPath = new WeakMap(), _BrowserFetcher_downloadHost = new WeakMap(), _BrowserFetcher_platform = new WeakMap(), _BrowserFetcher_instances = new WeakSet(), _BrowserFetcher_getFolderPath = function _BrowserFetcher_getFolderPath(revision) {
    return external_path_.resolve(BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_downloadPath, "f"), `${BrowserFetcher_classPrivateFieldGet(this, _BrowserFetcher_platform, "f")}-${revision}`);
};
function parseFolderPath(product, folderPath) {
    const name = external_path_.basename(folderPath);
    const splits = name.split('-');
    if (splits.length !== 2) {
        return;
    }
    const [platform, revision] = splits;
    if (!revision || !platform || !(platform in downloadURLs[product])) {
        return;
    }
    return { product, platform, revision };
}
/**
 * Windows 11 is identified by 10.0.22000 or greater
 * @internal
 */
function isWindows11(version) {
    const parts = version.split('.');
    if (parts.length > 2) {
        const major = parseInt(parts[0], 10);
        const minor = parseInt(parts[1], 10);
        const patch = parseInt(parts[2], 10);
        return (major > 10 ||
            (major === 10 && minor > 0) ||
            (major === 10 && minor === 0 && patch >= 22000));
    }
    return false;
}
/**
 * @internal
 */
function _downloadFile(url, destinationPath, progressCallback) {
    debugFetcher(`Downloading binary from ${url}`);
    let fulfill;
    let reject;
    const promise = new Promise((x, y) => {
        fulfill = x;
        reject = y;
    });
    let downloadedBytes = 0;
    let totalBytes = 0;
    const request = httpRequest(url, 'GET', response => {
        if (response.statusCode !== 200) {
            const error = new Error(`Download failed: server returned code ${response.statusCode}. URL: ${url}`);
            // consume response data to free up memory
            response.resume();
            reject(error);
            return;
        }
        const file = (0,external_fs_.createWriteStream)(destinationPath);
        file.on('finish', () => {
            return fulfill();
        });
        file.on('error', error => {
            return reject(error);
        });
        response.pipe(file);
        totalBytes = parseInt(response.headers['content-length'], 10);
        if (progressCallback) {
            response.on('data', onData);
        }
    });
    request.on('error', error => {
        return reject(error);
    });
    return promise;
    function onData(chunk) {
        downloadedBytes += chunk.length;
        progressCallback(downloadedBytes, totalBytes);
    }
}
async function install(archivePath, folderPath) {
    debugFetcher(`Installing ${archivePath} to ${folderPath}`);
    if (archivePath.endsWith('.zip')) {
        await extract_zip(archivePath, { dir: folderPath });
    }
    else if (archivePath.endsWith('.tar.bz2')) {
        await extractTar(archivePath, folderPath);
    }
    else if (archivePath.endsWith('.dmg')) {
        await (0,promises_namespaceObject.mkdir)(folderPath);
        await installDMG(archivePath, folderPath);
    }
    else {
        throw new Error(`Unsupported archive format: ${archivePath}`);
    }
}
/**
 * @internal
 */
function extractTar(tarPath, folderPath) {
    return new Promise((fulfill, reject) => {
        const tarStream = tar_fs.extract(folderPath);
        tarStream.on('error', reject);
        tarStream.on('finish', fulfill);
        const readStream = (0,external_fs_.createReadStream)(tarPath);
        readStream.pipe(unbzip2_stream()).pipe(tarStream);
    });
}
/**
 * @internal
 */
async function installDMG(dmgPath, folderPath) {
    const { stdout } = await exec(`hdiutil attach -nobrowse -noautoopen "${dmgPath}"`);
    const volumes = stdout.match(/\/Volumes\/(.*)/m);
    if (!volumes) {
        throw new Error(`Could not find volume path in ${stdout}`);
    }
    const mountPath = volumes[0];
    try {
        const fileNames = await (0,promises_namespaceObject.readdir)(mountPath);
        const appName = fileNames.find(item => {
            return typeof item === 'string' && item.endsWith('.app');
        });
        if (!appName) {
            throw new Error(`Cannot find app in ${mountPath}`);
        }
        const mountedPath = external_path_.join(mountPath, appName);
        debugFetcher(`Copying ${mountedPath} to ${folderPath}`);
        await exec(`cp -R "${mountedPath}" "${folderPath}"`);
    }
    finally {
        debugFetcher(`Unmounting ${mountPath}`);
        await exec(`hdiutil detach "${mountPath}" -quiet`);
    }
}
function httpRequest(url, method, response, keepAlive = true) {
    const urlParsed = external_url_.parse(url);
    let options = {
        ...urlParsed,
        method,
        headers: keepAlive ? { Connection: 'keep-alive' } : undefined,
    };
    const proxyURL = (0,proxy_from_env/* getProxyForUrl */.j)(url);
    if (proxyURL) {
        if (url.startsWith('http:')) {
            const proxy = external_url_.parse(proxyURL);
            options = {
                path: options.href,
                host: proxy.hostname,
                port: proxy.port,
            };
        }
        else {
            const parsedProxyURL = external_url_.parse(proxyURL);
            const proxyOptions = {
                ...parsedProxyURL,
                secureProxy: parsedProxyURL.protocol === 'https:',
            };
            options.agent = dist(proxyOptions);
            options.rejectUnauthorized = false;
        }
    }
    const requestCallback = (res) => {
        if (res.statusCode &&
            res.statusCode >= 300 &&
            res.statusCode < 400 &&
            res.headers.location) {
            httpRequest(res.headers.location, method, response);
        }
        else {
            response(res);
        }
    };
    const request = options.protocol === 'https:'
        ? external_https_.request(options, requestCallback)
        : external_http_.request(options, requestCallback);
    request.end();
    return request;
}
//# sourceMappingURL=BrowserFetcher.js.map
;// CONCATENATED MODULE: external "readline"
const external_readline_namespaceObject = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("readline");
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/node/PipeTransport.js
var PipeTransport_classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var PipeTransport_classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _PipeTransport_instances, _PipeTransport_pipeWrite, _PipeTransport_eventListeners, _PipeTransport_isClosed, _PipeTransport_pendingMessage, _PipeTransport_dispatch;


/**
 * @internal
 */
class PipeTransport {
    constructor(pipeWrite, pipeRead) {
        _PipeTransport_instances.add(this);
        _PipeTransport_pipeWrite.set(this, void 0);
        _PipeTransport_eventListeners.set(this, void 0);
        _PipeTransport_isClosed.set(this, false);
        _PipeTransport_pendingMessage.set(this, '');
        PipeTransport_classPrivateFieldSet(this, _PipeTransport_pipeWrite, pipeWrite, "f");
        PipeTransport_classPrivateFieldSet(this, _PipeTransport_eventListeners, [
            (0,util/* addEventListener */.Oo)(pipeRead, 'data', buffer => {
                return PipeTransport_classPrivateFieldGet(this, _PipeTransport_instances, "m", _PipeTransport_dispatch).call(this, buffer);
            }),
            (0,util/* addEventListener */.Oo)(pipeRead, 'close', () => {
                if (this.onclose) {
                    this.onclose.call(null);
                }
            }),
            (0,util/* addEventListener */.Oo)(pipeRead, 'error', util/* debugError */.ur),
            (0,util/* addEventListener */.Oo)(pipeWrite, 'error', util/* debugError */.ur),
        ], "f");
    }
    send(message) {
        (0,assert/* assert */.h)(!PipeTransport_classPrivateFieldGet(this, _PipeTransport_isClosed, "f"), '`PipeTransport` is closed.');
        PipeTransport_classPrivateFieldGet(this, _PipeTransport_pipeWrite, "f").write(message);
        PipeTransport_classPrivateFieldGet(this, _PipeTransport_pipeWrite, "f").write('\0');
    }
    close() {
        PipeTransport_classPrivateFieldSet(this, _PipeTransport_isClosed, true, "f");
        (0,util/* removeEventListeners */.nJ)(PipeTransport_classPrivateFieldGet(this, _PipeTransport_eventListeners, "f"));
    }
}
_PipeTransport_pipeWrite = new WeakMap(), _PipeTransport_eventListeners = new WeakMap(), _PipeTransport_isClosed = new WeakMap(), _PipeTransport_pendingMessage = new WeakMap(), _PipeTransport_instances = new WeakSet(), _PipeTransport_dispatch = function _PipeTransport_dispatch(buffer) {
    (0,assert/* assert */.h)(!PipeTransport_classPrivateFieldGet(this, _PipeTransport_isClosed, "f"), '`PipeTransport` is closed.');
    let end = buffer.indexOf('\0');
    if (end === -1) {
        PipeTransport_classPrivateFieldSet(this, _PipeTransport_pendingMessage, PipeTransport_classPrivateFieldGet(this, _PipeTransport_pendingMessage, "f") + buffer.toString(), "f");
        return;
    }
    const message = PipeTransport_classPrivateFieldGet(this, _PipeTransport_pendingMessage, "f") + buffer.toString(undefined, 0, end);
    if (this.onmessage) {
        this.onmessage.call(null, message);
    }
    let start = end + 1;
    end = buffer.indexOf('\0', start);
    while (end !== -1) {
        if (this.onmessage) {
            this.onmessage.call(null, buffer.toString(undefined, start, end));
        }
        start = end + 1;
        end = buffer.indexOf('\0', start);
    }
    PipeTransport_classPrivateFieldSet(this, _PipeTransport_pendingMessage, buffer.toString(undefined, start), "f");
};
//# sourceMappingURL=PipeTransport.js.map
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/node/BrowserRunner.js
/**
 * Copyright 2020 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var BrowserRunner_classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var BrowserRunner_classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _BrowserRunner_product, _BrowserRunner_executablePath, _BrowserRunner_processArguments, _BrowserRunner_userDataDir, _BrowserRunner_isTempUserDataDir, _BrowserRunner_closed, _BrowserRunner_listeners, _BrowserRunner_processClosing;














const removeFolderAsync = (0,external_util_.promisify)(rimraf);
const renameAsync = (0,external_util_.promisify)(external_fs_.rename);
const unlinkAsync = (0,external_util_.promisify)(external_fs_.unlink);
const debugLauncher = (0,Debug/* debug */.fF)('puppeteer:launcher');
const PROCESS_ERROR_EXPLANATION = `Puppeteer was unable to kill the process which ran the browser binary.
This means that, on future Puppeteer launches, Puppeteer might not be able to launch the browser.
Please check your open processes and ensure that the browser processes that Puppeteer launched have been killed.
If you think this is a bug, please report it on the Puppeteer issue tracker.`;
/**
 * @internal
 */
class BrowserRunner {
    constructor(product, executablePath, processArguments, userDataDir, isTempUserDataDir) {
        _BrowserRunner_product.set(this, void 0);
        _BrowserRunner_executablePath.set(this, void 0);
        _BrowserRunner_processArguments.set(this, void 0);
        _BrowserRunner_userDataDir.set(this, void 0);
        _BrowserRunner_isTempUserDataDir.set(this, void 0);
        _BrowserRunner_closed.set(this, true);
        _BrowserRunner_listeners.set(this, []);
        _BrowserRunner_processClosing.set(this, void 0);
        BrowserRunner_classPrivateFieldSet(this, _BrowserRunner_product, product, "f");
        BrowserRunner_classPrivateFieldSet(this, _BrowserRunner_executablePath, executablePath, "f");
        BrowserRunner_classPrivateFieldSet(this, _BrowserRunner_processArguments, processArguments, "f");
        BrowserRunner_classPrivateFieldSet(this, _BrowserRunner_userDataDir, userDataDir, "f");
        BrowserRunner_classPrivateFieldSet(this, _BrowserRunner_isTempUserDataDir, isTempUserDataDir, "f");
    }
    start(options) {
        var _a, _b;
        const { handleSIGINT, handleSIGTERM, handleSIGHUP, dumpio, env, pipe } = options;
        let stdio;
        if (pipe) {
            if (dumpio) {
                stdio = ['ignore', 'pipe', 'pipe', 'pipe', 'pipe'];
            }
            else {
                stdio = ['ignore', 'ignore', 'ignore', 'pipe', 'pipe'];
            }
        }
        else {
            if (dumpio) {
                stdio = ['pipe', 'pipe', 'pipe'];
            }
            else {
                stdio = ['pipe', 'ignore', 'pipe'];
            }
        }
        (0,assert/* assert */.h)(!this.proc, 'This process has previously been started.');
        debugLauncher(`Calling ${BrowserRunner_classPrivateFieldGet(this, _BrowserRunner_executablePath, "f")} ${BrowserRunner_classPrivateFieldGet(this, _BrowserRunner_processArguments, "f").join(' ')}`);
        this.proc = external_child_process_.spawn(BrowserRunner_classPrivateFieldGet(this, _BrowserRunner_executablePath, "f"), BrowserRunner_classPrivateFieldGet(this, _BrowserRunner_processArguments, "f"), {
            // On non-windows platforms, `detached: true` makes child process a
            // leader of a new process group, making it possible to kill child
            // process tree with `.kill(-pid)` command. @see
            // https://nodejs.org/api/child_process.html#child_process_options_detached
            detached: process.platform !== 'win32',
            env,
            stdio,
        });
        if (dumpio) {
            (_a = this.proc.stderr) === null || _a === void 0 ? void 0 : _a.pipe(process.stderr);
            (_b = this.proc.stdout) === null || _b === void 0 ? void 0 : _b.pipe(process.stdout);
        }
        BrowserRunner_classPrivateFieldSet(this, _BrowserRunner_closed, false, "f");
        BrowserRunner_classPrivateFieldSet(this, _BrowserRunner_processClosing, new Promise((fulfill, reject) => {
            this.proc.once('exit', async () => {
                BrowserRunner_classPrivateFieldSet(this, _BrowserRunner_closed, true, "f");
                // Cleanup as processes exit.
                if (BrowserRunner_classPrivateFieldGet(this, _BrowserRunner_isTempUserDataDir, "f")) {
                    try {
                        await removeFolderAsync(BrowserRunner_classPrivateFieldGet(this, _BrowserRunner_userDataDir, "f"));
                        fulfill();
                    }
                    catch (error) {
                        (0,util/* debugError */.ur)(error);
                        reject(error);
                    }
                }
                else {
                    if (BrowserRunner_classPrivateFieldGet(this, _BrowserRunner_product, "f") === 'firefox') {
                        try {
                            // When an existing user profile has been used remove the user
                            // preferences file and restore possibly backuped preferences.
                            await unlinkAsync(external_path_.join(BrowserRunner_classPrivateFieldGet(this, _BrowserRunner_userDataDir, "f"), 'user.js'));
                            const prefsBackupPath = external_path_.join(BrowserRunner_classPrivateFieldGet(this, _BrowserRunner_userDataDir, "f"), 'prefs.js.puppeteer');
                            if (external_fs_.existsSync(prefsBackupPath)) {
                                const prefsPath = external_path_.join(BrowserRunner_classPrivateFieldGet(this, _BrowserRunner_userDataDir, "f"), 'prefs.js');
                                await unlinkAsync(prefsPath);
                                await renameAsync(prefsBackupPath, prefsPath);
                            }
                        }
                        catch (error) {
                            (0,util/* debugError */.ur)(error);
                            reject(error);
                        }
                    }
                    fulfill();
                }
            });
        }), "f");
        BrowserRunner_classPrivateFieldSet(this, _BrowserRunner_listeners, [(0,util/* addEventListener */.Oo)(process, 'exit', this.kill.bind(this))], "f");
        if (handleSIGINT) {
            BrowserRunner_classPrivateFieldGet(this, _BrowserRunner_listeners, "f").push((0,util/* addEventListener */.Oo)(process, 'SIGINT', () => {
                this.kill();
                process.exit(130);
            }));
        }
        if (handleSIGTERM) {
            BrowserRunner_classPrivateFieldGet(this, _BrowserRunner_listeners, "f").push((0,util/* addEventListener */.Oo)(process, 'SIGTERM', this.close.bind(this)));
        }
        if (handleSIGHUP) {
            BrowserRunner_classPrivateFieldGet(this, _BrowserRunner_listeners, "f").push((0,util/* addEventListener */.Oo)(process, 'SIGHUP', this.close.bind(this)));
        }
    }
    close() {
        if (BrowserRunner_classPrivateFieldGet(this, _BrowserRunner_closed, "f")) {
            return Promise.resolve();
        }
        if (BrowserRunner_classPrivateFieldGet(this, _BrowserRunner_isTempUserDataDir, "f")) {
            this.kill();
        }
        else if (this.connection) {
            // Attempt to close the browser gracefully
            this.connection.send('Browser.close').catch(error => {
                (0,util/* debugError */.ur)(error);
                this.kill();
            });
        }
        // Cleanup this listener last, as that makes sure the full callback runs. If we
        // perform this earlier, then the previous function calls would not happen.
        (0,util/* removeEventListeners */.nJ)(BrowserRunner_classPrivateFieldGet(this, _BrowserRunner_listeners, "f"));
        return BrowserRunner_classPrivateFieldGet(this, _BrowserRunner_processClosing, "f");
    }
    kill() {
        // If the process failed to launch (for example if the browser executable path
        // is invalid), then the process does not get a pid assigned. A call to
        // `proc.kill` would error, as the `pid` to-be-killed can not be found.
        if (this.proc && this.proc.pid && pidExists(this.proc.pid)) {
            const proc = this.proc;
            try {
                if (process.platform === 'win32') {
                    external_child_process_.exec(`taskkill /pid ${this.proc.pid} /T /F`, error => {
                        if (error) {
                            // taskkill can fail to kill the process e.g. due to missing permissions.
                            // Let's kill the process via Node API. This delays killing of all child
                            // processes of `this.proc` until the main Node.js process dies.
                            proc.kill();
                        }
                    });
                }
                else {
                    // on linux the process group can be killed with the group id prefixed with
                    // a minus sign. The process group id is the group leader's pid.
                    const processGroupId = -this.proc.pid;
                    try {
                        process.kill(processGroupId, 'SIGKILL');
                    }
                    catch (error) {
                        // Killing the process group can fail due e.g. to missing permissions.
                        // Let's kill the process via Node API. This delays killing of all child
                        // processes of `this.proc` until the main Node.js process dies.
                        proc.kill('SIGKILL');
                    }
                }
            }
            catch (error) {
                throw new Error(`${PROCESS_ERROR_EXPLANATION}\nError cause: ${(0,ErrorLike/* isErrorLike */.x)(error) ? error.stack : error}`);
            }
        }
        // Attempt to remove temporary profile directory to avoid littering.
        try {
            if (BrowserRunner_classPrivateFieldGet(this, _BrowserRunner_isTempUserDataDir, "f")) {
                rimraf.sync(BrowserRunner_classPrivateFieldGet(this, _BrowserRunner_userDataDir, "f"));
            }
        }
        catch (error) { }
        // Cleanup this listener last, as that makes sure the full callback runs. If we
        // perform this earlier, then the previous function calls would not happen.
        (0,util/* removeEventListeners */.nJ)(BrowserRunner_classPrivateFieldGet(this, _BrowserRunner_listeners, "f"));
    }
    async setupWebDriverBiDiConnection(options) {
        (0,assert/* assert */.h)(this.proc, 'BrowserRunner not started.');
        const { timeout, slowMo, preferredRevision } = options;
        let browserWSEndpoint = await waitForWSEndpoint(this.proc, timeout, preferredRevision, /^WebDriver BiDi listening on (ws:\/\/.*)$/);
        browserWSEndpoint += '/session';
        const transport = await NodeWebSocketTransport.NodeWebSocketTransport.create(browserWSEndpoint);
        const BiDi = await __nccwpck_require__.e(/* import() */ 728).then(__nccwpck_require__.bind(__nccwpck_require__, 6728));
        return new BiDi.Connection(transport, slowMo);
    }
    async setupConnection(options) {
        (0,assert/* assert */.h)(this.proc, 'BrowserRunner not started.');
        const { usePipe, timeout, slowMo, preferredRevision } = options;
        if (!usePipe) {
            const browserWSEndpoint = await waitForWSEndpoint(this.proc, timeout, preferredRevision);
            const transport = await NodeWebSocketTransport.NodeWebSocketTransport.create(browserWSEndpoint);
            this.connection = new common_Connection/* Connection */.ew(browserWSEndpoint, transport, slowMo);
        }
        else {
            // stdio was assigned during start(), and the 'pipe' option there adds the
            // 4th and 5th items to stdio array
            const { 3: pipeWrite, 4: pipeRead } = this.proc.stdio;
            const transport = new PipeTransport(pipeWrite, pipeRead);
            this.connection = new common_Connection/* Connection */.ew('', transport, slowMo);
        }
        return this.connection;
    }
}
_BrowserRunner_product = new WeakMap(), _BrowserRunner_executablePath = new WeakMap(), _BrowserRunner_processArguments = new WeakMap(), _BrowserRunner_userDataDir = new WeakMap(), _BrowserRunner_isTempUserDataDir = new WeakMap(), _BrowserRunner_closed = new WeakMap(), _BrowserRunner_listeners = new WeakMap(), _BrowserRunner_processClosing = new WeakMap();
function waitForWSEndpoint(browserProcess, timeout, preferredRevision, regex = /^DevTools listening on (ws:\/\/.*)$/) {
    (0,assert/* assert */.h)(browserProcess.stderr, '`browserProcess` does not have stderr.');
    const rl = external_readline_namespaceObject.createInterface(browserProcess.stderr);
    let stderr = '';
    return new Promise((resolve, reject) => {
        const listeners = [
            (0,util/* addEventListener */.Oo)(rl, 'line', onLine),
            (0,util/* addEventListener */.Oo)(rl, 'close', () => {
                return onClose();
            }),
            (0,util/* addEventListener */.Oo)(browserProcess, 'exit', () => {
                return onClose();
            }),
            (0,util/* addEventListener */.Oo)(browserProcess, 'error', error => {
                return onClose(error);
            }),
        ];
        const timeoutId = timeout ? setTimeout(onTimeout, timeout) : 0;
        function onClose(error) {
            cleanup();
            reject(new Error([
                'Failed to launch the browser process!' +
                    (error ? ' ' + error.message : ''),
                stderr,
                '',
                'TROUBLESHOOTING: https://github.com/puppeteer/puppeteer/blob/main/docs/troubleshooting.md',
                '',
            ].join('\n')));
        }
        function onTimeout() {
            cleanup();
            reject(new Errors/* TimeoutError */.W5(`Timed out after ${timeout} ms while trying to connect to the browser! Only Chrome at revision r${preferredRevision} is guaranteed to work.`));
        }
        function onLine(line) {
            stderr += line + '\n';
            const match = line.match(regex);
            if (!match) {
                return;
            }
            cleanup();
            // The RegExp matches, so this will obviously exist.
            resolve(match[1]);
        }
        function cleanup() {
            if (timeoutId) {
                clearTimeout(timeoutId);
            }
            (0,util/* removeEventListeners */.nJ)(listeners);
        }
    });
}
function pidExists(pid) {
    try {
        return process.kill(pid, 0);
    }
    catch (error) {
        if ((0,ErrorLike/* isErrnoException */.H)(error)) {
            if (error.code && error.code === 'ESRCH') {
                return false;
            }
        }
        throw error;
    }
}
//# sourceMappingURL=BrowserRunner.js.map
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/node/ProductLauncher.js
var ProductLauncher_classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var ProductLauncher_classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _ProductLauncher_product;
/**
 * Copyright 2017 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */



/**
 * Describes a launcher - a class that is able to create and launch a browser instance.
 *
 * @public
 */
class ProductLauncher {
    /**
     * @internal
     */
    constructor(puppeteer, product) {
        _ProductLauncher_product.set(this, void 0);
        this.puppeteer = puppeteer;
        ProductLauncher_classPrivateFieldSet(this, _ProductLauncher_product, product, "f");
    }
    get product() {
        return ProductLauncher_classPrivateFieldGet(this, _ProductLauncher_product, "f");
    }
    launch() {
        throw new Error('Not implemented');
    }
    executablePath() {
        throw new Error('Not implemented');
    }
    defaultArgs() {
        throw new Error('Not implemented');
    }
    /**
     * Set only for Firefox, after the launcher resolves the `latest` revision to
     * the actual revision.
     * @internal
     */
    getActualBrowserRevision() {
        return this.actualBrowserRevision;
    }
    /**
     * @internal
     */
    getProfilePath() {
        var _a;
        return (0,external_path_.join)((_a = this.puppeteer.configuration.temporaryDirectory) !== null && _a !== void 0 ? _a : (0,external_os_.tmpdir)(), `puppeteer_dev_${this.product}_profile-`);
    }
    /**
     * @internal
     */
    resolveExecutablePath() {
        const executablePath = this.puppeteer.configuration.executablePath;
        if (executablePath) {
            if (!(0,external_fs_.existsSync)(executablePath)) {
                throw new Error(`Tried to find the browser at the configured path (${executablePath}), but no executable was found.`);
            }
            return executablePath;
        }
        const ubuntuChromiumPath = '/usr/bin/chromium-browser';
        if (this.product === 'chrome' &&
            external_os_.platform() !== 'darwin' &&
            external_os_.arch() === 'arm64' &&
            (0,external_fs_.existsSync)(ubuntuChromiumPath)) {
            return ubuntuChromiumPath;
        }
        const browserFetcher = this.puppeteer.createBrowserFetcher({
            product: this.product,
            path: this.puppeteer.defaultDownloadPath,
        });
        const revisionInfo = browserFetcher.revisionInfo(this.puppeteer.browserRevision);
        if (!revisionInfo.local) {
            if (this.puppeteer.configuration.browserRevision) {
                throw new Error(`Tried to find the browser at the configured path (${revisionInfo.executablePath}) for revision ${this.puppeteer.browserRevision}, but no executable was found.`);
            }
            switch (this.product) {
                case 'chrome':
                    throw new Error(`Could not find Chromium (rev. ${this.puppeteer.browserRevision}). This can occur if either\n` +
                        ' 1. you did not perform an installation before running the script (e.g. `npm install`) or\n' +
                        ` 2. your cache path is incorrectly configured (which is: ${this.puppeteer.configuration.cacheDirectory}).\n` +
                        'For (2), check out our guide on configuring puppeteer at https://pptr.dev/guides/configuration.');
                case 'firefox':
                    throw new Error(`Could not find Firefox (rev. ${this.puppeteer.browserRevision}). This can occur if either\n` +
                        ' 1. you did not perform an installation for Firefox before running the script (e.g. `PUPPETEER_PRODUCT=firefox npm install`) or\n' +
                        ` 2. your cache path is incorrectly configured (which is: ${this.puppeteer.configuration.cacheDirectory}).\n` +
                        'For (2), check out our guide on configuring puppeteer at https://pptr.dev/guides/configuration.');
            }
        }
        return revisionInfo.executablePath;
    }
}
_ProductLauncher_product = new WeakMap();
//# sourceMappingURL=ProductLauncher.js.map
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/node/ChromeLauncher.js
var ChromeLauncher_classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _ChromeLauncher_instances, _ChromeLauncher_executablePathForChannel;








/**
 * @internal
 */
class ChromeLauncher extends ProductLauncher {
    constructor(puppeteer) {
        super(puppeteer, 'chrome');
        _ChromeLauncher_instances.add(this);
    }
    async launch(options = {}) {
        const { ignoreDefaultArgs = false, args = [], dumpio = false, channel, executablePath, pipe = false, env = process.env, handleSIGINT = true, handleSIGTERM = true, handleSIGHUP = true, ignoreHTTPSErrors = false, defaultViewport = { width: 800, height: 600 }, slowMo = 0, timeout = 30000, waitForInitialPage = true, debuggingPort, protocol, } = options;
        const chromeArguments = [];
        if (!ignoreDefaultArgs) {
            chromeArguments.push(...this.defaultArgs(options));
        }
        else if (Array.isArray(ignoreDefaultArgs)) {
            chromeArguments.push(...this.defaultArgs(options).filter(arg => {
                return !ignoreDefaultArgs.includes(arg);
            }));
        }
        else {
            chromeArguments.push(...args);
        }
        if (!chromeArguments.some(argument => {
            return argument.startsWith('--remote-debugging-');
        })) {
            if (pipe) {
                (0,assert/* assert */.h)(!debuggingPort, 'Browser should be launched with either pipe or debugging port - not both.');
                chromeArguments.push('--remote-debugging-pipe');
            }
            else {
                chromeArguments.push(`--remote-debugging-port=${debuggingPort || 0}`);
            }
        }
        let isTempUserDataDir = false;
        // Check for the user data dir argument, which will always be set even
        // with a custom directory specified via the userDataDir option.
        let userDataDirIndex = chromeArguments.findIndex(arg => {
            return arg.startsWith('--user-data-dir');
        });
        if (userDataDirIndex < 0) {
            isTempUserDataDir = true;
            chromeArguments.push(`--user-data-dir=${await (0,promises_namespaceObject.mkdtemp)(this.getProfilePath())}`);
            userDataDirIndex = chromeArguments.length - 1;
        }
        const userDataDir = chromeArguments[userDataDirIndex].split('=', 2)[1];
        (0,assert/* assert */.h)(typeof userDataDir === 'string', '`--user-data-dir` is malformed');
        let chromeExecutable = executablePath;
        if (!chromeExecutable) {
            (0,assert/* assert */.h)(channel || !this.puppeteer._isPuppeteerCore, `An \`executablePath\` or \`channel\` must be specified for \`puppeteer-core\``);
            chromeExecutable = this.executablePath(channel);
        }
        const usePipe = chromeArguments.includes('--remote-debugging-pipe');
        const runner = new BrowserRunner(this.product, chromeExecutable, chromeArguments, userDataDir, isTempUserDataDir);
        runner.start({
            handleSIGHUP,
            handleSIGTERM,
            handleSIGINT,
            dumpio,
            env,
            pipe: usePipe,
        });
        let browser;
        try {
            const connection = await runner.setupConnection({
                usePipe,
                timeout,
                slowMo,
                preferredRevision: this.puppeteer.browserRevision,
            });
            if (protocol === 'webDriverBiDi') {
                try {
                    const BiDi = await __nccwpck_require__.e(/* import() */ 728).then(__nccwpck_require__.bind(__nccwpck_require__, 6728));
                    const bidiConnection = await BiDi.connectBidiOverCDP(connection);
                    browser = await BiDi.Browser.create({
                        connection: bidiConnection,
                        closeCallback: runner.close.bind(runner),
                        process: runner.proc,
                    });
                }
                catch (error) {
                    runner.kill();
                    throw error;
                }
                return browser;
            }
            browser = await CDPBrowser._create(this.product, connection, [], ignoreHTTPSErrors, defaultViewport, runner.proc, runner.close.bind(runner), options.targetFilter);
        }
        catch (error) {
            runner.kill();
            throw error;
        }
        if (waitForInitialPage) {
            try {
                await browser.waitForTarget(t => {
                    return t.type() === 'page';
                }, { timeout });
            }
            catch (error) {
                await browser.close();
                throw error;
            }
        }
        return browser;
    }
    defaultArgs(options = {}) {
        // See https://github.com/GoogleChrome/chrome-launcher/blob/main/docs/chrome-flags-for-tools.md
        const chromeArguments = [
            '--allow-pre-commit-input',
            '--disable-background-networking',
            '--disable-background-timer-throttling',
            '--disable-backgrounding-occluded-windows',
            '--disable-breakpad',
            '--disable-client-side-phishing-detection',
            '--disable-component-extensions-with-background-pages',
            '--disable-component-update',
            '--disable-default-apps',
            '--disable-dev-shm-usage',
            '--disable-extensions',
            // AcceptCHFrame disabled because of crbug.com/1348106.
            '--disable-features=Translate,BackForwardCache,AcceptCHFrame,MediaRouter,OptimizationHints',
            '--disable-hang-monitor',
            '--disable-ipc-flooding-protection',
            '--disable-popup-blocking',
            '--disable-prompt-on-repost',
            '--disable-renderer-backgrounding',
            '--disable-sync',
            '--enable-automation',
            // TODO(sadym): remove '--enable-blink-features=IdleDetection' once
            // IdleDetection is turned on by default.
            '--enable-blink-features=IdleDetection',
            '--enable-features=NetworkServiceInProcess2',
            '--export-tagged-pdf',
            '--force-color-profile=srgb',
            '--metrics-recording-only',
            '--no-first-run',
            '--password-store=basic',
            '--use-mock-keychain',
        ];
        const { devtools = false, headless = !devtools, args = [], userDataDir, } = options;
        if (userDataDir) {
            chromeArguments.push(`--user-data-dir=${external_path_.resolve(userDataDir)}`);
        }
        if (devtools) {
            chromeArguments.push('--auto-open-devtools-for-tabs');
        }
        if (headless) {
            chromeArguments.push(headless === 'new' ? '--headless=new' : '--headless', '--hide-scrollbars', '--mute-audio');
        }
        if (args.every(arg => {
            return arg.startsWith('-');
        })) {
            chromeArguments.push('about:blank');
        }
        chromeArguments.push(...args);
        return chromeArguments;
    }
    executablePath(channel) {
        if (channel) {
            return ChromeLauncher_classPrivateFieldGet(this, _ChromeLauncher_instances, "m", _ChromeLauncher_executablePathForChannel).call(this, channel);
        }
        else {
            return this.resolveExecutablePath();
        }
    }
}
_ChromeLauncher_instances = new WeakSet(), _ChromeLauncher_executablePathForChannel = function _ChromeLauncher_executablePathForChannel(channel) {
    const platform = external_os_.platform();
    let chromePath;
    switch (platform) {
        case 'win32':
            switch (channel) {
                case 'chrome':
                    chromePath = `${process.env['PROGRAMFILES']}\\Google\\Chrome\\Application\\chrome.exe`;
                    break;
                case 'chrome-beta':
                    chromePath = `${process.env['PROGRAMFILES']}\\Google\\Chrome Beta\\Application\\chrome.exe`;
                    break;
                case 'chrome-canary':
                    chromePath = `${process.env['PROGRAMFILES']}\\Google\\Chrome SxS\\Application\\chrome.exe`;
                    break;
                case 'chrome-dev':
                    chromePath = `${process.env['PROGRAMFILES']}\\Google\\Chrome Dev\\Application\\chrome.exe`;
                    break;
            }
            break;
        case 'darwin':
            switch (channel) {
                case 'chrome':
                    chromePath =
                        '/Applications/Google Chrome.app/Contents/MacOS/Google Chrome';
                    break;
                case 'chrome-beta':
                    chromePath =
                        '/Applications/Google Chrome Beta.app/Contents/MacOS/Google Chrome Beta';
                    break;
                case 'chrome-canary':
                    chromePath =
                        '/Applications/Google Chrome Canary.app/Contents/MacOS/Google Chrome Canary';
                    break;
                case 'chrome-dev':
                    chromePath =
                        '/Applications/Google Chrome Dev.app/Contents/MacOS/Google Chrome Dev';
                    break;
            }
            break;
        case 'linux':
            switch (channel) {
                case 'chrome':
                    chromePath = '/opt/google/chrome/chrome';
                    break;
                case 'chrome-beta':
                    chromePath = '/opt/google/chrome-beta/chrome';
                    break;
                case 'chrome-dev':
                    chromePath = '/opt/google/chrome-unstable/chrome';
                    break;
            }
            break;
    }
    if (!chromePath) {
        throw new Error(`Unable to detect browser executable path for '${channel}' on ${platform}.`);
    }
    // Check if Chrome exists and is accessible.
    try {
        (0,external_fs_.accessSync)(chromePath);
    }
    catch (error) {
        throw new Error(`Could not find Google Chrome executable for channel '${channel}' at '${chromePath}'.`);
    }
    return chromePath;
};
//# sourceMappingURL=ChromeLauncher.js.map
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/node/FirefoxLauncher.js







/**
 * @internal
 */
class FirefoxLauncher extends ProductLauncher {
    constructor(puppeteer) {
        super(puppeteer, 'firefox');
    }
    async launch(options = {}) {
        const { ignoreDefaultArgs = false, args = [], dumpio = false, executablePath, pipe = false, env = process.env, handleSIGINT = true, handleSIGTERM = true, handleSIGHUP = true, ignoreHTTPSErrors = false, defaultViewport = { width: 800, height: 600 }, slowMo = 0, timeout = 30000, extraPrefsFirefox = {}, waitForInitialPage = true, debuggingPort = null, protocol = 'cdp', } = options;
        const firefoxArguments = [];
        if (!ignoreDefaultArgs) {
            firefoxArguments.push(...this.defaultArgs(options));
        }
        else if (Array.isArray(ignoreDefaultArgs)) {
            firefoxArguments.push(...this.defaultArgs(options).filter(arg => {
                return !ignoreDefaultArgs.includes(arg);
            }));
        }
        else {
            firefoxArguments.push(...args);
        }
        if (!firefoxArguments.some(argument => {
            return argument.startsWith('--remote-debugging-');
        })) {
            if (pipe) {
                (0,assert/* assert */.h)(debuggingPort === null, 'Browser should be launched with either pipe or debugging port - not both.');
            }
            firefoxArguments.push(`--remote-debugging-port=${debuggingPort || 0}`);
        }
        let userDataDir;
        let isTempUserDataDir = true;
        // Check for the profile argument, which will always be set even
        // with a custom directory specified via the userDataDir option.
        const profileArgIndex = firefoxArguments.findIndex(arg => {
            return ['-profile', '--profile'].includes(arg);
        });
        if (profileArgIndex !== -1) {
            userDataDir = firefoxArguments[profileArgIndex + 1];
            if (!userDataDir || !external_fs_.existsSync(userDataDir)) {
                throw new Error(`Firefox profile not found at '${userDataDir}'`);
            }
            // When using a custom Firefox profile it needs to be populated
            // with required preferences.
            isTempUserDataDir = false;
            const prefs = this.defaultPreferences(extraPrefsFirefox);
            this.writePreferences(prefs, userDataDir);
        }
        else {
            userDataDir = await this._createProfile(extraPrefsFirefox);
            firefoxArguments.push('--profile');
            firefoxArguments.push(userDataDir);
        }
        let firefoxExecutable;
        if (this.puppeteer._isPuppeteerCore || executablePath) {
            (0,assert/* assert */.h)(executablePath, `An \`executablePath\` must be specified for \`puppeteer-core\``);
            firefoxExecutable = executablePath;
        }
        else {
            firefoxExecutable = this.executablePath();
        }
        const runner = new BrowserRunner(this.product, firefoxExecutable, firefoxArguments, userDataDir, isTempUserDataDir);
        runner.start({
            handleSIGHUP,
            handleSIGTERM,
            handleSIGINT,
            dumpio,
            env,
            pipe,
        });
        if (protocol === 'webDriverBiDi') {
            let browser;
            try {
                const connection = await runner.setupWebDriverBiDiConnection({
                    timeout,
                    slowMo,
                    preferredRevision: this.puppeteer.browserRevision,
                });
                const BiDi = await __nccwpck_require__.e(/* import() */ 728).then(__nccwpck_require__.bind(__nccwpck_require__, 6728));
                browser = await BiDi.Browser.create({
                    connection,
                    closeCallback: runner.close.bind(runner),
                    process: runner.proc,
                });
            }
            catch (error) {
                runner.kill();
                throw error;
            }
            return browser;
        }
        let browser;
        try {
            const connection = await runner.setupConnection({
                usePipe: pipe,
                timeout,
                slowMo,
                preferredRevision: this.puppeteer.browserRevision,
            });
            browser = await CDPBrowser._create(this.product, connection, [], ignoreHTTPSErrors, defaultViewport, runner.proc, runner.close.bind(runner), options.targetFilter);
        }
        catch (error) {
            runner.kill();
            throw error;
        }
        if (waitForInitialPage) {
            try {
                await browser.waitForTarget(t => {
                    return t.type() === 'page';
                }, { timeout });
            }
            catch (error) {
                await browser.close();
                throw error;
            }
        }
        return browser;
    }
    executablePath() {
        // replace 'latest' placeholder with actual downloaded revision
        if (this.puppeteer.browserRevision === 'latest') {
            const browserFetcher = this.puppeteer.createBrowserFetcher({
                product: this.product,
                path: this.puppeteer.defaultDownloadPath,
            });
            const localRevisions = browserFetcher.localRevisions();
            if (localRevisions[0]) {
                this.actualBrowserRevision = localRevisions[0];
            }
        }
        return this.resolveExecutablePath();
    }
    defaultArgs(options = {}) {
        const { devtools = false, headless = !devtools, args = [], userDataDir = null, } = options;
        const firefoxArguments = ['--no-remote'];
        switch (external_os_.platform()) {
            case 'darwin':
                firefoxArguments.push('--foreground');
                break;
            case 'win32':
                firefoxArguments.push('--wait-for-browser');
                break;
        }
        if (userDataDir) {
            firefoxArguments.push('--profile');
            firefoxArguments.push(userDataDir);
        }
        if (headless) {
            firefoxArguments.push('--headless');
        }
        if (devtools) {
            firefoxArguments.push('--devtools');
        }
        if (args.every(arg => {
            return arg.startsWith('-');
        })) {
            firefoxArguments.push('about:blank');
        }
        firefoxArguments.push(...args);
        return firefoxArguments;
    }
    defaultPreferences(extraPrefs) {
        const server = 'dummy.test';
        const defaultPrefs = {
            // Make sure Shield doesn't hit the network.
            'app.normandy.api_url': '',
            // Disable Firefox old build background check
            'app.update.checkInstallTime': false,
            // Disable automatically upgrading Firefox
            'app.update.disabledForTesting': true,
            // Increase the APZ content response timeout to 1 minute
            'apz.content_response_timeout': 60000,
            // Prevent various error message on the console
            // jest-puppeteer asserts that no error message is emitted by the console
            'browser.contentblocking.features.standard': '-tp,tpPrivate,cookieBehavior0,-cm,-fp',
            // Enable the dump function: which sends messages to the system
            // console
            // https://bugzilla.mozilla.org/show_bug.cgi?id=1543115
            'browser.dom.window.dump.enabled': true,
            // Disable topstories
            'browser.newtabpage.activity-stream.feeds.system.topstories': false,
            // Always display a blank page
            'browser.newtabpage.enabled': false,
            // Background thumbnails in particular cause grief: and disabling
            // thumbnails in general cannot hurt
            'browser.pagethumbnails.capturing_disabled': true,
            // Disable safebrowsing components.
            'browser.safebrowsing.blockedURIs.enabled': false,
            'browser.safebrowsing.downloads.enabled': false,
            'browser.safebrowsing.malware.enabled': false,
            'browser.safebrowsing.passwords.enabled': false,
            'browser.safebrowsing.phishing.enabled': false,
            // Disable updates to search engines.
            'browser.search.update': false,
            // Do not restore the last open set of tabs if the browser has crashed
            'browser.sessionstore.resume_from_crash': false,
            // Skip check for default browser on startup
            'browser.shell.checkDefaultBrowser': false,
            // Disable newtabpage
            'browser.startup.homepage': 'about:blank',
            // Do not redirect user when a milstone upgrade of Firefox is detected
            'browser.startup.homepage_override.mstone': 'ignore',
            // Start with a blank page about:blank
            'browser.startup.page': 0,
            // Do not allow background tabs to be zombified on Android: otherwise for
            // tests that open additional tabs: the test harness tab itself might get
            // unloaded
            'browser.tabs.disableBackgroundZombification': false,
            // Do not warn when closing all other open tabs
            'browser.tabs.warnOnCloseOtherTabs': false,
            // Do not warn when multiple tabs will be opened
            'browser.tabs.warnOnOpen': false,
            // Disable the UI tour.
            'browser.uitour.enabled': false,
            // Turn off search suggestions in the location bar so as not to trigger
            // network connections.
            'browser.urlbar.suggest.searches': false,
            // Disable first run splash page on Windows 10
            'browser.usedOnWindows10.introURL': '',
            // Do not warn on quitting Firefox
            'browser.warnOnQuit': false,
            // Defensively disable data reporting systems
            'datareporting.healthreport.documentServerURI': `http://${server}/dummy/healthreport/`,
            'datareporting.healthreport.logging.consoleEnabled': false,
            'datareporting.healthreport.service.enabled': false,
            'datareporting.healthreport.service.firstRun': false,
            'datareporting.healthreport.uploadEnabled': false,
            // Do not show datareporting policy notifications which can interfere with tests
            'datareporting.policy.dataSubmissionEnabled': false,
            'datareporting.policy.dataSubmissionPolicyBypassNotification': true,
            // DevTools JSONViewer sometimes fails to load dependencies with its require.js.
            // This doesn't affect Puppeteer but spams console (Bug 1424372)
            'devtools.jsonview.enabled': false,
            // Disable popup-blocker
            'dom.disable_open_during_load': false,
            // Enable the support for File object creation in the content process
            // Required for |Page.setFileInputFiles| protocol method.
            'dom.file.createInChild': true,
            // Disable the ProcessHangMonitor
            'dom.ipc.reportProcessHangs': false,
            // Disable slow script dialogues
            'dom.max_chrome_script_run_time': 0,
            'dom.max_script_run_time': 0,
            // Only load extensions from the application and user profile
            // AddonManager.SCOPE_PROFILE + AddonManager.SCOPE_APPLICATION
            'extensions.autoDisableScopes': 0,
            'extensions.enabledScopes': 5,
            // Disable metadata caching for installed add-ons by default
            'extensions.getAddons.cache.enabled': false,
            // Disable installing any distribution extensions or add-ons.
            'extensions.installDistroAddons': false,
            // Disabled screenshots extension
            'extensions.screenshots.disabled': true,
            // Turn off extension updates so they do not bother tests
            'extensions.update.enabled': false,
            // Turn off extension updates so they do not bother tests
            'extensions.update.notifyUser': false,
            // Make sure opening about:addons will not hit the network
            'extensions.webservice.discoverURL': `http://${server}/dummy/discoveryURL`,
            // Temporarily force disable BFCache in parent (https://bit.ly/bug-1732263)
            'fission.bfcacheInParent': false,
            // Force all web content to use a single content process
            'fission.webContentIsolationStrategy': 0,
            // Allow the application to have focus even it runs in the background
            'focusmanager.testmode': true,
            // Disable useragent updates
            'general.useragent.updates.enabled': false,
            // Always use network provider for geolocation tests so we bypass the
            // macOS dialog raised by the corelocation provider
            'geo.provider.testing': true,
            // Do not scan Wifi
            'geo.wifi.scan': false,
            // No hang monitor
            'hangmonitor.timeout': 0,
            // Show chrome errors and warnings in the error console
            'javascript.options.showInConsole': true,
            // Disable download and usage of OpenH264: and Widevine plugins
            'media.gmp-manager.updateEnabled': false,
            // Prevent various error message on the console
            // jest-puppeteer asserts that no error message is emitted by the console
            'network.cookie.cookieBehavior': 0,
            // Disable experimental feature that is only available in Nightly
            'network.cookie.sameSite.laxByDefault': false,
            // Do not prompt for temporary redirects
            'network.http.prompt-temp-redirect': false,
            // Disable speculative connections so they are not reported as leaking
            // when they are hanging around
            'network.http.speculative-parallel-limit': 0,
            // Do not automatically switch between offline and online
            'network.manage-offline-status': false,
            // Make sure SNTP requests do not hit the network
            'network.sntp.pools': server,
            // Disable Flash.
            'plugin.state.flash': 0,
            'privacy.trackingprotection.enabled': false,
            // Can be removed once Firefox 89 is no longer supported
            // https://bugzilla.mozilla.org/show_bug.cgi?id=1710839
            'remote.enabled': true,
            // Don't do network connections for mitm priming
            'security.certerrors.mitm.priming.enabled': false,
            // Local documents have access to all other local documents,
            // including directory listings
            'security.fileuri.strict_origin_policy': false,
            // Do not wait for the notification button security delay
            'security.notification_enable_delay': 0,
            // Ensure blocklist updates do not hit the network
            'services.settings.server': `http://${server}/dummy/blocklist/`,
            // Do not automatically fill sign-in forms with known usernames and
            // passwords
            'signon.autofillForms': false,
            // Disable password capture, so that tests that include forms are not
            // influenced by the presence of the persistent doorhanger notification
            'signon.rememberSignons': false,
            // Disable first-run welcome page
            'startup.homepage_welcome_url': 'about:blank',
            // Disable first-run welcome page
            'startup.homepage_welcome_url.additional': '',
            // Disable browser animations (tabs, fullscreen, sliding alerts)
            'toolkit.cosmeticAnimations.enabled': false,
            // Prevent starting into safe mode after application crashes
            'toolkit.startup.max_resumed_crashes': -1,
        };
        return Object.assign(defaultPrefs, extraPrefs);
    }
    /**
     * Populates the user.js file with custom preferences as needed to allow
     * Firefox's CDP support to properly function. These preferences will be
     * automatically copied over to prefs.js during startup of Firefox. To be
     * able to restore the original values of preferences a backup of prefs.js
     * will be created.
     *
     * @param prefs - List of preferences to add.
     * @param profilePath - Firefox profile to write the preferences to.
     */
    async writePreferences(prefs, profilePath) {
        const lines = Object.entries(prefs).map(([key, value]) => {
            return `user_pref(${JSON.stringify(key)}, ${JSON.stringify(value)});`;
        });
        await external_fs_.promises.writeFile(external_path_.join(profilePath, 'user.js'), lines.join('\n'));
        // Create a backup of the preferences file if it already exitsts.
        const prefsPath = external_path_.join(profilePath, 'prefs.js');
        if (external_fs_.existsSync(prefsPath)) {
            const prefsBackupPath = external_path_.join(profilePath, 'prefs.js.puppeteer');
            await external_fs_.promises.copyFile(prefsPath, prefsBackupPath);
        }
    }
    async _createProfile(extraPrefs) {
        const temporaryProfilePath = await external_fs_.promises.mkdtemp(this.getProfilePath());
        const prefs = this.defaultPreferences(extraPrefs);
        await this.writePreferences(prefs, temporaryProfilePath);
        return temporaryProfilePath;
    }
}
//# sourceMappingURL=FirefoxLauncher.js.map
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/revisions.js
/**
 * Copyright 2020 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @internal
 */
const PUPPETEER_REVISIONS = Object.freeze({
    chromium: '1095492',
    firefox: 'latest',
});
//# sourceMappingURL=revisions.js.map
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/node/PuppeteerNode.js
/**
 * Copyright 2020 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var PuppeteerNode_classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var PuppeteerNode_classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _PuppeteerNode_instances, _PuppeteerNode__launcher, _PuppeteerNode_lastLaunchedProduct, _PuppeteerNode_launcher_get;






/**
 * Extends the main {@link Puppeteer} class with Node specific behaviour for
 * fetching and downloading browsers.
 *
 * If you're using Puppeteer in a Node environment, this is the class you'll get
 * when you run `require('puppeteer')` (or the equivalent ES `import`).
 *
 * @remarks
 * The most common method to use is {@link PuppeteerNode.launch | launch}, which
 * is used to launch and connect to a new browser instance.
 *
 * See {@link Puppeteer | the main Puppeteer class} for methods common to all
 * environments, such as {@link Puppeteer.connect}.
 *
 * @example
 * The following is a typical example of using Puppeteer to drive automation:
 *
 * ```ts
 * import puppeteer from 'puppeteer';
 *
 * (async () => {
 *   const browser = await puppeteer.launch();
 *   const page = await browser.newPage();
 *   await page.goto('https://www.google.com');
 *   // other actions...
 *   await browser.close();
 * })();
 * ```
 *
 * Once you have created a `page` you have access to a large API to interact
 * with the page, navigate, or find certain elements in that page.
 * The {@link Page | `page` documentation} lists all the available methods.
 *
 * @public
 */
class PuppeteerNode extends Puppeteer {
    /**
     * @internal
     */
    constructor(settings) {
        const { configuration, ...commonSettings } = settings;
        super(commonSettings);
        _PuppeteerNode_instances.add(this);
        _PuppeteerNode__launcher.set(this, void 0);
        _PuppeteerNode_lastLaunchedProduct.set(this, void 0);
        /**
         * @internal
         */
        this.configuration = {};
        if (configuration) {
            this.configuration = configuration;
        }
        switch (this.configuration.defaultProduct) {
            case 'firefox':
                this.defaultBrowserRevision = PUPPETEER_REVISIONS.firefox;
                break;
            default:
                this.configuration.defaultProduct = 'chrome';
                this.defaultBrowserRevision = PUPPETEER_REVISIONS.chromium;
                break;
        }
        this.connect = this.connect.bind(this);
        this.launch = this.launch.bind(this);
        this.executablePath = this.executablePath.bind(this);
        this.defaultArgs = this.defaultArgs.bind(this);
        this.createBrowserFetcher = this.createBrowserFetcher.bind(this);
    }
    /**
     * This method attaches Puppeteer to an existing browser instance.
     *
     * @param options - Set of configurable options to set on the browser.
     * @returns Promise which resolves to browser instance.
     *
     * @public
     */
    connect(options) {
        return super.connect(options);
    }
    /**
     * Launches a browser instance with given arguments and options when
     * specified.
     *
     * When using with `puppeteer-core`,
     * {@link LaunchOptions.executablePath | options.executablePath} or
     * {@link LaunchOptions.channel | options.channel} must be provided.
     *
     * @example
     * You can use {@link LaunchOptions.ignoreDefaultArgs | options.ignoreDefaultArgs}
     * to filter out `--mute-audio` from default arguments:
     *
     * ```ts
     * const browser = await puppeteer.launch({
     *   ignoreDefaultArgs: ['--mute-audio'],
     * });
     * ```
     *
     * @remarks
     * Puppeteer can also be used to control the Chrome browser, but it works best
     * with the version of Chromium downloaded by default by Puppeteer. There is
     * no guarantee it will work with any other version. If Google Chrome (rather
     * than Chromium) is preferred, a
     * {@link https://www.google.com/chrome/browser/canary.html | Chrome Canary}
     * or
     * {@link https://www.chromium.org/getting-involved/dev-channel | Dev Channel}
     * build is suggested. See
     * {@link https://www.howtogeek.com/202825/what%E2%80%99s-the-difference-between-chromium-and-chrome/ | this article}
     * for a description of the differences between Chromium and Chrome.
     * {@link https://chromium.googlesource.com/chromium/src/+/lkgr/docs/chromium_browser_vs_google_chrome.md | This article}
     * describes some differences for Linux users.
     *
     * @param options - Options to configure launching behavior.
     *
     * @public
     */
    launch(options = {}) {
        const { product = this.defaultProduct } = options;
        PuppeteerNode_classPrivateFieldSet(this, _PuppeteerNode_lastLaunchedProduct, product, "f");
        return PuppeteerNode_classPrivateFieldGet(this, _PuppeteerNode_instances, "a", _PuppeteerNode_launcher_get).launch(options);
    }
    /**
     * @returns The default executable path.
     *
     * @public
     */
    executablePath(channel) {
        return PuppeteerNode_classPrivateFieldGet(this, _PuppeteerNode_instances, "a", _PuppeteerNode_launcher_get).executablePath(channel);
    }
    /**
     * @internal
     */
    get browserRevision() {
        var _a, _b, _c;
        return ((_c = (_b = (_a = PuppeteerNode_classPrivateFieldGet(this, _PuppeteerNode__launcher, "f")) === null || _a === void 0 ? void 0 : _a.getActualBrowserRevision()) !== null && _b !== void 0 ? _b : this.configuration.browserRevision) !== null && _c !== void 0 ? _c : this.defaultBrowserRevision);
    }
    /**
     * @returns The default download path for puppeteer. For puppeteer-core, this
     * code should never be called as it is never defined.
     *
     * @internal
     */
    get defaultDownloadPath() {
        var _a;
        return ((_a = this.configuration.downloadPath) !== null && _a !== void 0 ? _a : (0,external_path_.join)(this.configuration.cacheDirectory, this.product));
    }
    /**
     * @returns The name of the browser that was last launched.
     *
     * @public
     */
    get lastLaunchedProduct() {
        var _a;
        return (_a = PuppeteerNode_classPrivateFieldGet(this, _PuppeteerNode_lastLaunchedProduct, "f")) !== null && _a !== void 0 ? _a : this.defaultProduct;
    }
    /**
     * @returns The name of the browser that will be launched by default. For
     * `puppeteer`, this is influenced by your configuration. Otherwise, it's
     * `chrome`.
     *
     * @public
     */
    get defaultProduct() {
        var _a;
        return (_a = this.configuration.defaultProduct) !== null && _a !== void 0 ? _a : 'chrome';
    }
    /**
     * @deprecated Do not use as this field as it does not take into account
     * multiple browsers of different types. Use
     * {@link PuppeteerNode.defaultProduct | defaultProduct} or
     * {@link PuppeteerNode.lastLaunchedProduct | lastLaunchedProduct}.
     *
     * @returns The name of the browser that is under automation.
     *
     * @public
     */
    get product() {
        return PuppeteerNode_classPrivateFieldGet(this, _PuppeteerNode_instances, "a", _PuppeteerNode_launcher_get).product;
    }
    /**
     * @param options - Set of configurable options to set on the browser.
     *
     * @returns The default flags that Chromium will be launched with.
     *
     * @public
     */
    defaultArgs(options = {}) {
        return PuppeteerNode_classPrivateFieldGet(this, _PuppeteerNode_instances, "a", _PuppeteerNode_launcher_get).defaultArgs(options);
    }
    /**
     * @param options - Set of configurable options to specify the settings of the
     * BrowserFetcher.
     *
     * @remarks
     * If you are using `puppeteer-core`, do not use this method. Just
     * construct {@link BrowserFetcher} manually.
     *
     * @returns A new BrowserFetcher instance.
     */
    createBrowserFetcher(options = {}) {
        var _a;
        const downloadPath = this.defaultDownloadPath;
        if (!options.path && downloadPath) {
            options.path = downloadPath;
        }
        if (!options.path) {
            throw new Error('A `path` must be specified for `puppeteer-core`.');
        }
        if (!('useMacOSARMBinary' in options) &&
            ((_a = this.configuration.experiments) === null || _a === void 0 ? void 0 : _a.macArmChromiumEnabled)) {
            options.useMacOSARMBinary = true;
        }
        if (!('host' in options) && this.configuration.downloadHost) {
            options.host = this.configuration.downloadHost;
        }
        if (!('product' in options) && this.configuration.defaultProduct) {
            options.product = this.configuration.defaultProduct;
        }
        return new BrowserFetcher(options);
    }
}
_PuppeteerNode__launcher = new WeakMap(), _PuppeteerNode_lastLaunchedProduct = new WeakMap(), _PuppeteerNode_instances = new WeakSet(), _PuppeteerNode_launcher_get = function _PuppeteerNode_launcher_get() {
    if (PuppeteerNode_classPrivateFieldGet(this, _PuppeteerNode__launcher, "f") &&
        PuppeteerNode_classPrivateFieldGet(this, _PuppeteerNode__launcher, "f").product === this.lastLaunchedProduct) {
        return PuppeteerNode_classPrivateFieldGet(this, _PuppeteerNode__launcher, "f");
    }
    switch (this.lastLaunchedProduct) {
        case 'chrome':
            this.defaultBrowserRevision = PUPPETEER_REVISIONS.chromium;
            PuppeteerNode_classPrivateFieldSet(this, _PuppeteerNode__launcher, new ChromeLauncher(this), "f");
            break;
        case 'firefox':
            this.defaultBrowserRevision = PUPPETEER_REVISIONS.firefox;
            PuppeteerNode_classPrivateFieldSet(this, _PuppeteerNode__launcher, new FirefoxLauncher(this), "f");
            break;
        default:
            throw new Error(`Unknown product: ${PuppeteerNode_classPrivateFieldGet(this, _PuppeteerNode_lastLaunchedProduct, "f")}`);
    }
    return PuppeteerNode_classPrivateFieldGet(this, _PuppeteerNode__launcher, "f");
};
//# sourceMappingURL=PuppeteerNode.js.map
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/node/node.js
/**
 * Copyright 2022 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */








//# sourceMappingURL=node.js.map
// EXTERNAL MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/util/DebuggableDeferredPromise.js
var DebuggableDeferredPromise = __nccwpck_require__(8125);
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/util/util.js
/**
 * Copyright 2022 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */




//# sourceMappingURL=util.js.map
;// CONCATENATED MODULE: ./node_modules/puppeteer-core/lib/esm/puppeteer/puppeteer-core.js
/**
 * Copyright 2017 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */





/**
 * @deprecated Use the query handler API defined on {@link Puppeteer}
 */


/**
 * @public
 */
const puppeteer = new PuppeteerNode({
    isPuppeteerCore: true,
});
const { connect, createBrowserFetcher, defaultArgs, executablePath, launch, } = puppeteer;
/* harmony default export */ const puppeteer_core = (puppeteer);
//# sourceMappingURL=puppeteer-core.js.map
;// CONCATENATED MODULE: ./node_modules/lighthouse/core/gather/navigation-runner.js
/**
 * @license Copyright 2021 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */






















/**
 * @typedef NavigationContext
 * @property {Driver} driver
 * @property {LH.Puppeteer.Page} page
 * @property {LH.Config.ResolvedConfig} resolvedConfig
 * @property {LH.Config.NavigationDefn} navigation
 * @property {LH.NavigationRequestor} requestor
 * @property {LH.FRBaseArtifacts} baseArtifacts
 * @property {Map<string, LH.ArbitraryEqualityMap>} computedCache
 */

/** @typedef {Omit<Parameters<typeof collectPhaseArtifacts>[0], 'phase'>} PhaseState */

const navigation_runner_DEFAULT_HOSTNAME = '127.0.0.1';
const navigation_runner_DEFAULT_PORT = 9222;

/**
 * @param {{driver: Driver, resolvedConfig: LH.Config.ResolvedConfig, requestor: LH.NavigationRequestor}} args
 * @return {Promise<{baseArtifacts: LH.FRBaseArtifacts}>}
 */
async function _setup({driver, resolvedConfig, requestor}) {
  await driver.connect();

  // We can't trigger the navigation through user interaction if we reset the page before starting.
  if (typeof requestor === 'string' && !resolvedConfig.settings.skipAboutBlank) {
    await gotoURL(driver, defaultNavigationConfig.blankPage, {waitUntil: ['navigated']});
  }

  const baseArtifacts = await base_artifacts_getBaseArtifacts(resolvedConfig, driver, {gatherMode: 'navigation'});

  await prepareTargetForNavigationMode(driver, resolvedConfig.settings);

  return {baseArtifacts};
}

/**
 * @param {NavigationContext} navigationContext
 * @return {Promise<{warnings: Array<LH.IcuMessage>}>}
 */
async function _setupNavigation({requestor, driver, navigation, resolvedConfig}) {
  // We can't trigger the navigation through user interaction if we reset the page before starting.
  if (typeof requestor === 'string' && !resolvedConfig.settings.skipAboutBlank) {
    await gotoURL(driver, navigation.blankPage, {...navigation, waitUntil: ['navigated']});
  }

  const {warnings} = await prepareTargetForIndividualNavigation(
    driver.defaultSession,
    resolvedConfig.settings,
    {
      ...navigation,
      requestor,
    }
  );

  return {warnings};
}

/**
 * @param {NavigationContext} navigationContext
 */
async function _cleanupNavigation({driver}) {
  await clearThrottling(driver.defaultSession);
}

/**
 * @param {NavigationContext} navigationContext
 * @return {Promise<{requestedUrl: string, mainDocumentUrl: string, navigationError: LH.LighthouseError | undefined, warnings: Array<LH.IcuMessage>}>}
 */
async function _navigate(navigationContext) {
  const {driver, resolvedConfig, requestor} = navigationContext;

  try {
    const {requestedUrl, mainDocumentUrl, warnings} = await gotoURL(driver, requestor, {
      ...navigationContext.navigation,
      debugNavigation: resolvedConfig.settings.debugNavigation,
      maxWaitForFcp: resolvedConfig.settings.maxWaitForFcp,
      maxWaitForLoad: resolvedConfig.settings.maxWaitForLoad,
      waitUntil: navigationContext.navigation.pauseAfterFcpMs ? ['fcp', 'load'] : ['load'],
    });
    return {requestedUrl, mainDocumentUrl, navigationError: undefined, warnings};
  } catch (err) {
    if (!(err instanceof lh_error_LighthouseError)) throw err;
    if (err.code !== 'NO_FCP' && err.code !== 'PAGE_HUNG') throw err;
    if (typeof requestor !== 'string') throw err;

    // TODO: Make the urls optional here so we don't need to throw an error with a callback requestor.
    return {
      requestedUrl: requestor,
      mainDocumentUrl: requestor,
      navigationError: err,
      warnings: [],
    };
  }
}

/**
 * @param {NavigationContext} navigationContext
 * @param {PhaseState} phaseState
 * @return {Promise<{devtoolsLog?: LH.DevtoolsLog, records?: Array<LH.Artifacts.NetworkRequest>, trace?: LH.Trace}>}
 */
async function _collectDebugData(navigationContext, phaseState) {
  const devtoolsLogArtifactDefn = phaseState.artifactDefinitions.find(
    definition => definition.gatherer.instance.meta.symbol === devtools_log.symbol
  );
  const traceArtifactDefn = phaseState.artifactDefinitions.find(
    definition => definition.gatherer.instance.meta.symbol === gatherers_trace.symbol
  );

  const artifactDefinitions = [devtoolsLogArtifactDefn, traceArtifactDefn].filter(
    /**
     * @param {LH.Config.AnyArtifactDefn | undefined} defn
     * @return {defn is LH.Config.AnyArtifactDefn}
     */
    defn => Boolean(defn)
  );
  if (!artifactDefinitions.length) return {};

  await runner_helpers_collectPhaseArtifacts({...phaseState, phase: 'getArtifact', artifactDefinitions});
  const getArtifactState = phaseState.artifactState.getArtifact;

  const devtoolsLogArtifactId = devtoolsLogArtifactDefn?.id;
  const devtoolsLog = devtoolsLogArtifactId && (await getArtifactState[devtoolsLogArtifactId]);
  const records = devtoolsLog && (await NetworkRecordsComputed.request(devtoolsLog, navigationContext));

  const traceArtifactId = traceArtifactDefn?.id;
  const trace = traceArtifactId && (await getArtifactState[traceArtifactId]);

  return {devtoolsLog, records, trace};
}

/**
 * @param {NavigationContext} navigationContext
 * @param {PhaseState} phaseState
 * @param {Awaited<ReturnType<typeof _setupNavigation>>} setupResult
 * @param {Awaited<ReturnType<typeof _navigate>>} navigateResult
 * @return {Promise<{artifacts: Partial<LH.GathererArtifacts>, warnings: Array<LH.IcuMessage>, pageLoadError: LH.LighthouseError | undefined}>}
 */
async function _computeNavigationResult(
  navigationContext,
  phaseState,
  setupResult,
  navigateResult
) {
  const {navigationError, mainDocumentUrl} = navigateResult;
  const warnings = [...setupResult.warnings, ...navigateResult.warnings];
  const debugData = await _collectDebugData(navigationContext, phaseState);
  const pageLoadError = debugData.records
    ? getPageLoadError(navigationError, {
      url: mainDocumentUrl,
      loadFailureMode: navigationContext.navigation.loadFailureMode,
      networkRecords: debugData.records,
      warnings,
    })
    : navigationError;

  if (pageLoadError) {
    const locale = navigationContext.resolvedConfig.settings.locale;
    const localizedMessage = format_getFormatted(pageLoadError.friendlyMessage, locale);
    lighthouse_logger.error('NavigationRunner', localizedMessage, navigateResult.requestedUrl);

    /** @type {Partial<LH.GathererArtifacts>} */
    const artifacts = {};
    const pageLoadErrorId = `pageLoadError-${navigationContext.navigation.id}`;
    if (debugData.devtoolsLog) artifacts.devtoolsLogs = {[pageLoadErrorId]: debugData.devtoolsLog};
    if (debugData.trace) artifacts.traces = {[pageLoadErrorId]: debugData.trace};

    return {
      pageLoadError,
      artifacts,
      warnings: [...warnings, pageLoadError.friendlyMessage],
    };
  } else {
    await runner_helpers_collectPhaseArtifacts({phase: 'getArtifact', ...phaseState});

    const artifacts = await runner_helpers_awaitArtifacts(phaseState.artifactState);
    return {
      artifacts,
      warnings,
      pageLoadError: undefined,
    };
  }
}

/**
 * @param {NavigationContext} navigationContext
 * @return {ReturnType<typeof _computeNavigationResult>}
 */
async function _navigation(navigationContext) {
  const artifactState = runner_helpers_getEmptyArtifactState();
  const phaseState = {
    url: await navigationContext.driver.url(),
    gatherMode: /** @type {const} */ ('navigation'),
    driver: navigationContext.driver,
    page: navigationContext.page,
    computedCache: navigationContext.computedCache,
    artifactDefinitions: navigationContext.navigation.artifacts,
    artifactState,
    baseArtifacts: navigationContext.baseArtifacts,
    settings: navigationContext.resolvedConfig.settings,
  };

  const setupResult = await _setupNavigation(navigationContext);

  const disableAsyncStacks =
    await prepare_enableAsyncStacks(navigationContext.driver.defaultSession);

  await runner_helpers_collectPhaseArtifacts({phase: 'startInstrumentation', ...phaseState});
  await runner_helpers_collectPhaseArtifacts({phase: 'startSensitiveInstrumentation', ...phaseState});
  const navigateResult = await _navigate(navigationContext);

  // Every required url is initialized to an empty string in `getBaseArtifacts`.
  // If we haven't set all the required urls yet, set them here.
  if (!Object.values(phaseState.baseArtifacts).every(Boolean)) {
    phaseState.baseArtifacts.URL = {
      requestedUrl: navigateResult.requestedUrl,
      mainDocumentUrl: navigateResult.mainDocumentUrl,
      finalDisplayedUrl: await navigationContext.driver.url(),
    };
  }
  phaseState.url = navigateResult.mainDocumentUrl;

  await runner_helpers_collectPhaseArtifacts({phase: 'stopSensitiveInstrumentation', ...phaseState});
  await runner_helpers_collectPhaseArtifacts({phase: 'stopInstrumentation', ...phaseState});

  // bf-cache-failures can emit `Page.frameNavigated` at the end of the run.
  // This can cause us to issue protocol commands after the target closes.
  // We should disable our `Page.frameNavigated` handlers before that.
  await disableAsyncStacks();

  await _cleanupNavigation(navigationContext);

  return _computeNavigationResult(navigationContext, phaseState, setupResult, navigateResult);
}

/**
 * @param {{driver: Driver, page: LH.Puppeteer.Page, resolvedConfig: LH.Config.ResolvedConfig, requestor: LH.NavigationRequestor; baseArtifacts: LH.FRBaseArtifacts, computedCache: NavigationContext['computedCache']}} args
 * @return {Promise<{artifacts: Partial<LH.FRArtifacts & LH.FRBaseArtifacts>}>}
 */
async function _navigations(args) {
  const {
    driver,
    page,
    resolvedConfig,
    requestor,
    baseArtifacts,
    computedCache,
  } = args;

  if (!resolvedConfig.navigations) throw new Error('No navigations configured');

  /** @type {Partial<LH.FRArtifacts & LH.FRBaseArtifacts>} */
  const artifacts = {};
  /** @type {Array<LH.IcuMessage>} */
  const LighthouseRunWarnings = [];

  for (const navigation of resolvedConfig.navigations) {
    const navigationContext = {
      driver,
      page,
      navigation,
      requestor,
      resolvedConfig,
      baseArtifacts,
      computedCache,
    };

    let shouldHaltNavigations = false;
    const navigationResult = await _navigation(navigationContext);
    if (navigation.loadFailureMode === 'fatal') {
      if (navigationResult.pageLoadError) {
        artifacts.PageLoadError = navigationResult.pageLoadError;
        shouldHaltNavigations = true;
      }
    }

    LighthouseRunWarnings.push(...navigationResult.warnings);
    Object.assign(artifacts, navigationResult.artifacts);
    if (shouldHaltNavigations) break;
  }

  return {artifacts: {...artifacts, LighthouseRunWarnings}};
}

/**
 * @param {{requestedUrl?: string, driver: Driver, resolvedConfig: LH.Config.ResolvedConfig, lhBrowser?: LH.Puppeteer.Browser, lhPage?: LH.Puppeteer.Page}} args
 */
async function _cleanup({requestedUrl, driver, resolvedConfig, lhBrowser, lhPage}) {
  const didResetStorage = !resolvedConfig.settings.disableStorageReset && requestedUrl;
  if (didResetStorage) await clearDataForOrigin(driver.defaultSession, requestedUrl);

  await driver.disconnect();

  // If Lighthouse started the Puppeteer instance then we are responsible for closing it.
  await lhPage?.close();
  await lhBrowser?.disconnect();
}

/**
 * @param {LH.Puppeteer.Page|undefined} page
 * @param {LH.NavigationRequestor|undefined} requestor
 * @param {{config?: LH.Config, flags?: LH.Flags}} [options]
 * @return {Promise<LH.Gatherer.FRGatherResult>}
 */
async function navigation_runner_navigationGather(page, requestor, options = {}) {
  const {flags = {}, config} = options;
  lighthouse_logger.setLevel(flags.logLevel || 'error');

  const {resolvedConfig} = await config_initializeConfig('navigation', config, flags);
  const computedCache = new Map();

  const isCallback = typeof requestor === 'function';

  const runnerOptions = {resolvedConfig, computedCache};
  const artifacts = await runner_Runner.gather(
    async () => {
      const normalizedRequestor = isCallback ? requestor : url_utils.normalizeUrl(requestor);

      /** @type {LH.Puppeteer.Browser|undefined} */
      let lhBrowser = undefined;
      /** @type {LH.Puppeteer.Page|undefined} */
      let lhPage = undefined;

      // For navigation mode, we shouldn't connect to a browser in audit mode,
      // therefore we connect to the browser in the gatherFn callback.
      if (!page) {
        const {hostname = navigation_runner_DEFAULT_HOSTNAME, port = navigation_runner_DEFAULT_PORT} = flags;
        lhBrowser = await puppeteer_core.connect({browserURL: `http://${hostname}:${port}`});
        lhPage = await lhBrowser.newPage();
        page = lhPage;
      }

      const driver = new gather_driver_Driver(page);
      const context = {
        driver,
        lhBrowser,
        lhPage,
        resolvedConfig,
        requestor: normalizedRequestor,
      };
      const {baseArtifacts} = await _setup(context);
      const {artifacts} = await _navigations({...context, page, baseArtifacts, computedCache});
      await _cleanup(context);

      return base_artifacts_finalizeArtifacts(baseArtifacts, artifacts);
    },
    runnerOptions
  );
  return {artifacts, runnerOptions};
}



;// CONCATENATED MODULE: ./node_modules/lighthouse/core/user-flow.js
/**
 * @license Copyright 2021 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */












/** @typedef {WeakMap<LH.UserFlow.GatherStep, LH.Gatherer.FRGatherResult['runnerOptions']>} GatherStepRunnerOptions */

const user_flow_UIStrings = {
  /**
   * @description Default name for a user flow on the given url. "User flow" refers to the series of page navigations and user interactions being tested on the page. "url" is a trimmed version of a url that only includes the domain name.
   * @example {example.com} url
   */
  defaultFlowName: 'User flow ({url})',
  /**
   * @description Default name for a Lighthouse report that analyzes a page navigation. "url" is a trimmed version of a url that only includes the domain name and path.
   * @example {example.com/page} url
   */
  defaultNavigationName: 'Navigation report ({url})',
  /**
   * @description Default name for a Lighthouse report that analyzes user interactions over a period of time. "url" is a trimmed version of a url that only includes the domain name and path.
   * @example {example.com/page} url
   */
  defaultTimespanName: 'Timespan report ({url})',
  /**
   * @description Default name for a Lighthouse report that analyzes the page state at a point in time. "url" is a trimmed version of a url that only includes the domain name and path.
   * @example {example.com/page} url
   */
  defaultSnapshotName: 'Snapshot report ({url})',
};

const user_flow_str_ = createIcuMessageFn(import.meta.url, user_flow_UIStrings);

/**
 * @param {string} message
 * @param {Record<string, string | number>} values
 * @param {LH.Locale} locale
 */
function translate(message, values, locale) {
  const icuMessage = user_flow_str_(message, values);
  return getFormatted(icuMessage, locale);
}

class user_flow_UserFlow {
  /**
   * @param {LH.Puppeteer.Page} page
   * @param {LH.UserFlow.Options} [options]
   */
  constructor(page, options) {
    /** @type {LH.Puppeteer.Page} */
    this._page = page;
    /** @type {LH.UserFlow.Options|undefined} */
    this._options = options;
    /** @type {LH.UserFlow.GatherStep[]} */
    this._gatherSteps = [];
    /** @type {GatherStepRunnerOptions} */
    this._gatherStepRunnerOptions = new WeakMap();
  }

  /**
   * @param {LH.UserFlow.StepFlags|undefined} flags
   * @return {LH.UserFlow.StepFlags|undefined}
   */
  _getNextFlags(flags) {
    const clonedFlowFlags = this._options?.flags && deepClone(this._options?.flags);
    const mergedFlags = mergeConfigFragment(clonedFlowFlags || {}, flags || {}, true);

    if (mergedFlags.usePassiveGathering === undefined) {
      mergedFlags.usePassiveGathering = true;
    }

    return mergedFlags;
  }

  /**
   * @param {LH.UserFlow.StepFlags|undefined} flags
   * @return {LH.UserFlow.StepFlags}
   */
  _getNextNavigationFlags(flags) {
    const newStepFlags = this._getNextFlags(flags) || {};

    if (newStepFlags.skipAboutBlank === undefined) {
      newStepFlags.skipAboutBlank = true;
    }

    // On repeat navigations, we want to disable storage reset by default (i.e. it's not a cold load).
    const isSubsequentNavigation = this._gatherSteps
      .some(step => step.artifacts.GatherContext.gatherMode === 'navigation');
    if (isSubsequentNavigation) {
      if (newStepFlags.disableStorageReset === undefined) {
        newStepFlags.disableStorageReset = true;
      }
    }

    return newStepFlags;
  }

  /**
   * @param {LH.Gatherer.FRGatherResult} gatherResult
   * @param {LH.UserFlow.StepFlags} [flags]
   */
  _addGatherStep(gatherResult, flags) {
    const gatherStep = {
      artifacts: gatherResult.artifacts,
      flags,
    };
    this._gatherSteps.push(gatherStep);
    this._gatherStepRunnerOptions.set(gatherStep, gatherResult.runnerOptions);
  }

  /**
   * @param {LH.NavigationRequestor} requestor
   * @param {LH.UserFlow.StepFlags} [flags]
   */
  async navigate(requestor, flags) {
    if (this.currentTimespan) throw new Error('Timespan already in progress');
    if (this.currentNavigation) throw new Error('Navigation already in progress');

    const nextFlags = this._getNextNavigationFlags(flags);
    const gatherResult = await navigationGather(this._page, requestor, {
      config: this._options?.config,
      flags: nextFlags,
    });

    this._addGatherStep(gatherResult, nextFlags);
  }

  /**
   * This is an alternative to `navigate()` that can be used to analyze a navigation triggered by user interaction.
   * For more on user triggered navigations, see https://github.com/GoogleChrome/lighthouse/blob/main/docs/user-flows.md#triggering-a-navigation-via-user-interactions.
   *
   * @param {LH.UserFlow.StepFlags} [stepOptions]
   */
  async startNavigation(stepOptions) {
    /** @type {(value: () => void) => void} */
    let completeSetup;
    /** @type {(value: any) => void} */
    let rejectDuringSetup;

    // This promise will resolve once the setup is done
    // and Lighthouse is waiting for a page navigation to be triggered.
    const navigationSetupPromise = new Promise((resolve, reject) => {
      completeSetup = resolve;
      rejectDuringSetup = reject;
    });

    // The promise in this callback will not resolve until `continueNavigation` is invoked,
    // because `continueNavigation` is passed along to `navigateSetupPromise`
    // and extracted into `continueAndAwaitResult` below.
    const navigationResultPromise = this.navigate(
      () => new Promise(continueNavigation => completeSetup(continueNavigation)),
      stepOptions
    ).catch(err => {
      if (this.currentNavigation) {
        // If the navigation already started, re-throw the error so it is emitted when `navigationResultPromise` is awaited.
        throw err;
      } else {
        // If the navigation has not started, reject the `navigationSetupPromise` so the error throws when it is awaited in `startNavigation`.
        rejectDuringSetup(err);
      }
    });

    const continueNavigation = await navigationSetupPromise;

    async function continueAndAwaitResult() {
      continueNavigation();
      await navigationResultPromise;
    }

    this.currentNavigation = {continueAndAwaitResult};
  }

  async endNavigation() {
    if (this.currentTimespan) throw new Error('Timespan already in progress');
    if (!this.currentNavigation) throw new Error('No navigation in progress');
    await this.currentNavigation.continueAndAwaitResult();
    this.currentNavigation = undefined;
  }

  /**
   * @param {LH.UserFlow.StepFlags} [flags]
   */
  async startTimespan(flags) {
    if (this.currentTimespan) throw new Error('Timespan already in progress');
    if (this.currentNavigation) throw new Error('Navigation already in progress');

    const nextFlags = this._getNextFlags(flags);

    const timespan = await startTimespanGather(this._page, {
      config: this._options?.config,
      flags: nextFlags,
    });
    this.currentTimespan = {timespan, flags: nextFlags};
  }

  async endTimespan() {
    if (!this.currentTimespan) throw new Error('No timespan in progress');
    if (this.currentNavigation) throw new Error('Navigation already in progress');

    const {timespan, flags} = this.currentTimespan;
    const gatherResult = await timespan.endTimespanGather();
    this.currentTimespan = undefined;

    this._addGatherStep(gatherResult, flags);
  }

  /**
   * @param {LH.UserFlow.StepFlags} [flags]
   */
  async snapshot(flags) {
    if (this.currentTimespan) throw new Error('Timespan already in progress');
    if (this.currentNavigation) throw new Error('Navigation already in progress');

    const nextFlags = this._getNextFlags(flags);

    const gatherResult = await snapshotGather(this._page, {
      config: this._options?.config,
      flags: nextFlags,
    });

    this._addGatherStep(gatherResult, nextFlags);
  }

  /**
   * @returns {Promise<LH.FlowResult>}
   */
  async createFlowResult() {
    return user_flow_auditGatherSteps(this._gatherSteps, {
      name: this._options?.name,
      config: this._options?.config,
      gatherStepRunnerOptions: this._gatherStepRunnerOptions,
    });
  }

  /**
   * @return {Promise<string>}
   */
  async generateReport() {
    const flowResult = await this.createFlowResult();
    return ReportGenerator.generateFlowReportHtml(flowResult);
  }

  /**
   * @return {LH.UserFlow.FlowArtifacts}
   */
  createArtifactsJson() {
    return {
      gatherSteps: this._gatherSteps,
      name: this._options?.name,
    };
  }
}

/**
 * @param {string} longUrl
 * @returns {string}
 */
function shortenUrl(longUrl) {
  const url = new URL(longUrl);
  return `${url.hostname}${url.pathname}`;
}

/**
 * @param {LH.UserFlow.StepFlags|undefined} flags
 * @param {LH.Artifacts} artifacts
 * @return {string}
 */
function getStepName(flags, artifacts) {
  if (flags?.name) return flags.name;

  const {locale} = artifacts.settings;
  const shortUrl = shortenUrl(artifacts.URL.finalDisplayedUrl);
  switch (artifacts.GatherContext.gatherMode) {
    case 'navigation':
      return translate(user_flow_UIStrings.defaultNavigationName, {url: shortUrl}, locale);
    case 'timespan':
      return translate(user_flow_UIStrings.defaultTimespanName, {url: shortUrl}, locale);
    case 'snapshot':
      return translate(user_flow_UIStrings.defaultSnapshotName, {url: shortUrl}, locale);
    default:
      throw new Error('Unsupported gather mode');
  }
}

/**
 * @param {string|undefined} name
 * @param {LH.UserFlow.GatherStep[]} gatherSteps
 * @return {string}
 */
function getFlowName(name, gatherSteps) {
  if (name) return name;

  const firstArtifacts = gatherSteps[0].artifacts;
  const {locale} = firstArtifacts.settings;
  const url = new URL(firstArtifacts.URL.finalDisplayedUrl).hostname;
  return translate(user_flow_UIStrings.defaultFlowName, {url}, locale);
}

/**
 * @param {Array<LH.UserFlow.GatherStep>} gatherSteps
 * @param {{name?: string, config?: LH.Config, gatherStepRunnerOptions?: GatherStepRunnerOptions}} options
 */
async function user_flow_auditGatherSteps(gatherSteps, options) {
  if (!gatherSteps.length) {
    throw new Error('Need at least one step before getting the result');
  }

  /** @type {LH.FlowResult['steps']} */
  const steps = [];
  for (const gatherStep of gatherSteps) {
    const {artifacts, flags} = gatherStep;
    const name = getStepName(flags, artifacts);

    let runnerOptions = options.gatherStepRunnerOptions?.get(gatherStep);

    // If the gather step is not active, we must recreate the runner options.
    if (!runnerOptions) {
      // Step specific configs take precedence over a config for the entire flow.
      const config = options.config;
      const {gatherMode} = artifacts.GatherContext;
      const {resolvedConfig} = await initializeConfig(gatherMode, config, flags);
      runnerOptions = {
        resolvedConfig,
        computedCache: new Map(),
      };
    }

    const result = await Runner.audit(artifacts, runnerOptions);
    if (!result) throw new Error(`Step "${name}" did not return a result`);
    steps.push({lhr: result.lhr, name});
  }

  return {steps, name: getFlowName(options.name, gatherSteps)};
}




;// CONCATENATED MODULE: ./node_modules/lighthouse/core/config/desktop-config.js
/**
 * @license Copyright 2020 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */




/** @type {LH.Config} */
const config = {
  extends: 'lighthouse:default',
  settings: {
    formFactor: 'desktop',
    throttling: constants_throttling.desktopDense4G,
    screenEmulation: screenEmulationMetrics.desktop,
    emulatedUserAgent: userAgents.desktop,
  },
};

/* harmony default export */ const desktop_config = ((/* unused pure expression or super */ null && (config)));

;// CONCATENATED MODULE: ./node_modules/lighthouse/core/index.js
/**
 * @license Copyright 2016 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */















/** @typedef {import('./legacy/gather/connections/connection.js').Connection} Connection */

/*
 * The relationship between these root modules:
 *
 *   index.js  - the require('lighthouse') hook for Node modules (including the CLI)
 *
 *   runner.js - marshalls the actions that must be taken (Gather / Audit)
 *               config file is used to determine which of these actions are needed
 *
 *         cli \
 *                         -- core/index.js ----> runner.js ----> [Gather / Audit]
 *                clients /
 */

/**
 * Run Lighthouse.
 * @param {string=} url The URL to test. Optional if running in auditMode.
 * @param {LH.Flags=} flags Optional settings for the Lighthouse run. If present,
 *   they will override any settings in the config.
 * @param {LH.Config=} config Configuration for the Lighthouse run. If
 *   not present, the default config is used.
 * @param {LH.Puppeteer.Page=} page
 * @return {Promise<LH.RunnerResult|undefined>}
 */
async function lighthouse(url, flags = {}, config, page) {
  return navigation(page, url, {config, flags});
}

/**
 * Run Lighthouse using the legacy navigation runner.
 * This is left in place for any clients that don't support FR navigations yet (e.g. Lightrider)
 * @deprecated
 * @param {string=} url The URL to test. Optional if running in auditMode.
 * @param {LH.Flags=} flags Optional settings for the Lighthouse run. If present,
 *   they will override any settings in the config.
 * @param {LH.Config=} config Configuration for the Lighthouse run. If
 *   not present, the default config is used.
 * @param {Connection=} userConnection
 * @return {Promise<LH.RunnerResult|undefined>}
 */
async function legacyNavigation(url, flags = {}, config, userConnection) {
  // set logging preferences, assume quiet
  flags.logLevel = flags.logLevel || 'error';
  log.setLevel(flags.logLevel);

  const resolvedConfig = await LegacyResolvedConfig.fromJson(config, flags);
  const computedCache = new Map();
  const options = {resolvedConfig, computedCache};
  const connection = userConnection || new CriConnection(flags.port, flags.hostname);

  // kick off a lighthouse run
  const artifacts = await Runner.gather(() => {
    const requestedUrl = UrlUtils.normalizeUrl(url);
    return Runner._gatherArtifactsFromBrowser(requestedUrl, options, connection);
  }, options);
  return Runner.audit(artifacts, options);
}

/**
 * @param {LH.Puppeteer.Page} page
 * @param {LH.UserFlow.Options} [options]
 */
async function startFlow(page, options) {
  return new UserFlow(page, options);
}

/**
 * @param {LH.Puppeteer.Page|undefined} page
 * @param {LH.NavigationRequestor|undefined} requestor
 * @param {{config?: LH.Config, flags?: LH.Flags}} [options]
 * @return {Promise<LH.RunnerResult|undefined>}
 */
async function navigation(page, requestor, options) {
  const gatherResult = await navigation_runner_navigationGather(page, requestor, options);
  return runner_Runner.audit(gatherResult.artifacts, gatherResult.runnerOptions);
}

/**
 * @param {LH.Puppeteer.Page} page
 * @param {{config?: LH.Config, flags?: LH.Flags}} [options]
 * @return {Promise<LH.RunnerResult|undefined>}
 */
async function snapshot(page, options) {
  const gatherResult = await snapshotGather(page, options);
  return Runner.audit(gatherResult.artifacts, gatherResult.runnerOptions);
}

/**
 * @param {LH.Puppeteer.Page} page
 * @param {{config?: LH.Config, flags?: LH.Flags}} [options]
 * @return {Promise<{endTimespan: () => Promise<LH.RunnerResult|undefined>}>}
 */
async function startTimespan(page, options) {
  const {endTimespanGather} = await startTimespanGather(page, options);
  const endTimespan = async () => {
    const gatherResult = await endTimespanGather();
    return Runner.audit(gatherResult.artifacts, gatherResult.runnerOptions);
  };
  return {endTimespan};
}

/**
 * @template {LH.Result|LH.FlowResult} R
 * @param {R} result
 * @param {[R] extends [LH.Result] ? LH.OutputMode : Exclude<LH.OutputMode, 'csv'>} [format]
 * @return {string}
 */
function generateReport(result, format = 'html') {
  const reportOutput = ReportGenerator.generateReport(result, format);
  if (Array.isArray(reportOutput)) {
    // In theory the output should never be an array.
    // This is mostly for type checking.
    return reportOutput[0];
  } else {
    return reportOutput;
  }
}

/**
 * @param {LH.UserFlow.FlowArtifacts} flowArtifacts
 * @param {LH.Config} [config]
 */
async function auditFlowArtifacts(flowArtifacts, config) {
  const {gatherSteps, name} = flowArtifacts;
  return await auditGatherSteps(gatherSteps, {name, config});
}

function getAuditList() {
  return Runner.getAuditList();
}

const traceCategories = driver_Driver.traceCategories;

/* harmony default export */ const lighthouse_core = (lighthouse);








// EXTERNAL MODULE: ./node_modules/chrome-launcher/dist/index.js
var chrome_launcher_dist = __nccwpck_require__(8355);
// EXTERNAL MODULE: ./node_modules/badge-maker/lib/index.js
var lib = __nccwpck_require__(9141);
;// CONCATENATED MODULE: external "node:fs/promises"
const external_node_fs_promises_namespaceObject = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("node:fs/promises");
;// CONCATENATED MODULE: ./src/makeBadge.js



const writeLocalFile = (name, data) => {
  return writeFile(`./assets/${name}.svg`, data, 'utf-8')
}

const makeBadgeSvg = ({ label, message, color, badgeStyle }) => {
  const svg = (0,lib.makeBadge)({
    label: label,
    message: `${message * 100}%`,
    color: color,
    style: badgeStyle, //'plastic', 'flat', 'flat-square', 'for-the-badge' or 'social'
  })

  // writeLocalFile(label, svg)
  return svg
}

/* harmony default export */ const makeBadge = (makeBadgeSvg);

;// CONCATENATED MODULE: ./src/updateReadme.js


const START_REPLACE_STR = '<!-- lightouse-badges:start -->'
const END_REPLACE_STR = '<!-- lightouse-badges:end -->'

const textBetweenTwoStrings = (text, str1, str2) => {
  return text.substring(text.lastIndexOf(str1), text.lastIndexOf(str2)) + str2
}

const updateReadme = async ({ mdName, badgesMdText }) => {
  const replacingText = START_REPLACE_STR + '\n\n' + badgesMdText + '\n\n' + END_REPLACE_STR
  const currentReadme = await (0,external_node_fs_promises_namespaceObject.readFile)(mdName, 'utf-8')

  const newReadme = currentReadme.includes(END_REPLACE_STR)
    ? currentReadme.replace(textBetweenTwoStrings(currentReadme, START_REPLACE_STR, END_REPLACE_STR), replacingText)
    : currentReadme.replace(START_REPLACE_STR, replacingText)

  await (0,external_node_fs_promises_namespaceObject.writeFile)(mdName, newReadme, 'utf-8')
}

/* harmony default export */ const src_updateReadme = (updateReadme);

;// CONCATENATED MODULE: ./src/getLighthouseReport.js





const getLighthouseReport_config = {
  extends: 'lighthouse:default',
  settings: {
    formFactor: 'desktop',
    throttling: {
      rttMs: 40,
      throughputKbps: 10240,
      cpuSlowdownMultiplier: 1,
      requestLatencyMs: 0,
      downloadThroughputKbps: 0,
      uploadThroughputKbps: 0,
    },
    screenEmulation: {
      mobile: false,
      width: 1350,
      height: 940,
      deviceScaleFactor: 1,
      disabled: false,
    },
    emulatedUserAgent:
      'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36',
  },
}

const percentToColor = (number) => {
  if (number >= 95) return '#00FF00'
  if (number >= 90) return '#7FFF00'
  if (number >= 75) return '#B0FF00'
  if (number >= 65) return '#FFFF00'
  if (number >= 55) return '#FFC100'
  if (number >= 40) return '#FF8C00'
  if (number >= 20) return '#FF5700'
  return '#FF0000'
}

const getLighthouseReport = async ({ url, mdName, badgeStyle }) => {
  const chrome = await chrome_launcher_dist.launch({ chromeFlags: ['--headless', '--quiet'] })

  const options = {
    logLevel: 'silent', // 'info'
    port: chrome.port,
  }

  const runnerResult = await lighthouse_core(url, options, getLighthouseReport_config)

  // `.lhr` is the Lighthouse Result as a JS object
  const {
    performance: { score: performance },
    accessibility: { score: accessibility },
    seo: { score: seo },
    'best-practices': { score: bestPractices },
  } = runnerResult.lhr.categories

  const lighthouseReport = {
    performance,
    accessibility,
    seo,
    'best-practices': bestPractices,
  }

  const badges = Object.entries(lighthouseReport).map(([key, value]) => {
    const percentValue = value.toFixed(2) * 100
    console.log({ key, percentValue })
    return makeBadge({
      label: key,
      message: percentValue,
      color: percentToColor(percentValue),
      badgeStyle,
    })
  })

  src_updateReadme({ mdName, badgesMdText: badges.join('\n') })

  await chrome.kill()
}

/* harmony default export */ const src_getLighthouseReport = (getLighthouseReport);
// getLighthouseReport({ url: 'https://doscuadrados.es', mdName: 'TEMPLATE.md' })

;// CONCATENATED MODULE: ./src/index.js



async function run() {
  try {
    const badgeStyle = core.getInput('badgeStyle')
    const mdName = core.getInput('mdName')
    const url = core.getInput('url')
    core.info(`Getting Lighthouse report for ${url}...`)

    const workspacePath = process.env.GITHUB_WORKSPACE
    const mdFilePath = workspacePath ? path.join(workspacePath, mdName) : mdName

    console.log('Getting Lighthouse report')
    await src_getLighthouseReport({ url, badgeStyle, mdName: mdFilePath })
    core.info(new Date().toTimeString())
    core.setOutput('time', new Date().toTimeString())
  } catch (error) {
    console.log('Error:')
    console.log(error.message)
    core.setFailed(error.message)
  }
}

run()

})();

